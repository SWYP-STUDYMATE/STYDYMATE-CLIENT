# STUDYMATE Server Application Configuration
# Spring Boot Configuration for Language Exchange Learning Platform

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  tomcat:
    uri-encoding: UTF-8
    max-threads: 200
    min-spare-threads: 10
    connection-timeout: 20000
    max-connections: 8192
    accept-count: 100

spring:
  application:
    name: studymate-server
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  
  # Database Configuration
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/studymate}
    username: ${DB_USERNAME:studymate}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: StudyMateHikariPool
      maximum-pool-size: ${DB_POOL_SIZE:20}
      minimum-idle: ${DB_POOL_MIN_IDLE:5}
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      validation-timeout: 5000
      connection-test-query: SELECT 1
  
  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:validate}
      naming:
        physical-strategy: org.hibernate.boot.model.naming.SnakeCasePhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
        type:
          json_format_mapper: com.fasterxml.jackson.databind.ObjectMapper
  
  # Redis Configuration (for caching and sessions)
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 6000ms
      database: ${REDIS_DATABASE:0}
      jedis:
        pool:
          max-active: 8
          max-wait: -1ms
          max-idle: 8
          min-idle: 0
  
  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: false
      key-prefix: "studymate:"
      use-key-prefix: true
  
  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
      accept-single-value-as-array: true
    property-naming-strategy: SNAKE_CASE
    time-zone: Asia/Seoul
    date-format: yyyy-MM-dd HH:mm:ss
  
  # Security Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Google
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope:
              - name
              - email
              - profile_image
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: Naver
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
  
  # Multipart Configuration (for file uploads)
  servlet:
    multipart:
      enabled: true
      max-file-size: ${MAX_FILE_SIZE:10MB}
      max-request-size: ${MAX_REQUEST_SIZE:50MB}
      file-size-threshold: 2KB
      location: ${TEMP_DIR:/tmp}
  
  # WebSocket Configuration
  websocket:
    allowed-origins: ${WS_ALLOWED_ORIGINS:https://languagemate.kr,https://preview.languagemate.kr,http://localhost:3000}
    heartbeat-interval: 25000
    heartbeat-timeout: 65000
  
  # Email Configuration (for notifications)
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

# Custom Application Configuration
app:
  # JWT Configuration
  jwt:
    secret: ${JWT_SECRET:studymate-super-secret-key-for-jwt-token-generation-2024}
    expiration-minutes: ${JWT_EXPIRATION_MINUTES:60}
    refresh-expiration-hours: ${JWT_REFRESH_EXPIRATION_HOURS:24}
    issuer: ${JWT_ISSUER:StudyMate}
    
  # Security Configuration
  security:
    max-tokens-per-user: ${MAX_TOKENS_PER_USER:5}
    password-min-length: 8
    login-attempt-limit: 5
    lockout-duration-minutes: 30
    
  # File Storage Configuration
  storage:
    type: ${STORAGE_TYPE:local}
    local:
      upload-dir: ${LOCAL_UPLOAD_DIR:/var/studymate/uploads}
      max-file-size: 10MB
    cloud:
      bucket: ${CLOUD_STORAGE_BUCKET}
      region: ${CLOUD_STORAGE_REGION:us-east-1}
      access-key: ${CLOUD_STORAGE_ACCESS_KEY}
      secret-key: ${CLOUD_STORAGE_SECRET_KEY}
  
  # CORS Configuration
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://languagemate.kr,https://preview.languagemate.kr,http://localhost:3000}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,PATCH,OPTIONS}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allow-credentials: true
    max-age: 3600
  
  # Feature Flags
  features:
    matching-enabled: ${FEATURE_MATCHING_ENABLED:true}
    chat-enabled: ${FEATURE_CHAT_ENABLED:true}
    notifications-enabled: ${FEATURE_NOTIFICATIONS_ENABLED:true}
    file-upload-enabled: ${FEATURE_FILE_UPLOAD_ENABLED:true}
    admin-panel-enabled: ${FEATURE_ADMIN_PANEL_ENABLED:true}
  
  # External API Configuration
  external:
    translation:
      api-key: ${TRANSLATION_API_KEY}
      base-url: ${TRANSLATION_API_URL:https://api.translate.googleapis.com}
    
# Logging Configuration
logging:
  level:
    com.studymate: ${LOG_LEVEL:INFO}
    org.springframework.security: WARN
    org.hibernate: WARN
    org.springframework.web: INFO
    org.springframework.messaging: DEBUG
    org.springframework.websocket: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE_NAME:logs/studymate-server.log}
    max-size: ${LOG_FILE_MAX_SIZE:100MB}
    max-history: ${LOG_FILE_MAX_HISTORY:30}

# Management and Monitoring
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: ${MANAGEMENT_ENDPOINTS:health,info,metrics,prometheus}
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  health:
    db:
      enabled: true
    redis:
      enabled: true
    diskspace:
      enabled: true

# Actuator Info
info:
  app:
    name: ${spring.application.name}
    version: ${APP_VERSION:1.0.0}
    description: Language Exchange Learning Platform Backend API
  build:
    artifact: studymate-server
    name: studymate-server
    time: ${BUILD_TIME:unknown}
    version: ${APP_VERSION:1.0.0}

# Documentation Configuration (Springdoc OpenAPI)
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    display-request-duration: true
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
    use-root-path: true
  show-actuator: true
  group-configs:
    - group: "Auth API"
      paths-to-match: "/api/v1/auth/**"
    - group: "User API"
      paths-to-match: "/api/v1/users/**"
    - group: "Session API"
      paths-to-match: "/api/v1/sessions/**"
    - group: "Chat API"
      paths-to-match: "/api/v1/chat/**"
    - group: "Matching API"
      paths-to-match: "/api/v1/matching/**"
    - group: "Notification API"
      paths-to-match: "/api/v1/notifications/**"

---
# Local Development Profile
spring:
  config:
    activate:
      on-profile: local
  
  # H2 Database for local development (optional)
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

app:
  jwt:
    secret: local-development-secret-key-not-for-production
  
logging:
  level:
    com.studymate: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

app:
  features:
    admin-panel-enabled: true

logging:
  level:
    com.studymate: DEBUG

---
# Staging Profile
spring:
  config:
    activate:
      on-profile: staging

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics

logging:
  level:
    com.studymate: INFO

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

  # Production security settings
  security:
    require-ssl: true

app:
  features:
    admin-panel-enabled: false

# Production logging
logging:
  level:
    com.studymate: WARN
    root: WARN
    org.springframework: WARN

# Production monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  endpoint:
    health:
      show-details: never