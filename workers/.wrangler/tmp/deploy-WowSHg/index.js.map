{
  "version": 3,
  "sources": ["../../../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../node_modules/unenv/dist/runtime/node/perf_hooks.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../node_modules/unenv/dist/runtime/node/console.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/tty.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/utils/cookie.js", "../../../node_modules/hono/dist/helper/cookie/index.js", "../../../node_modules/hono/dist/http-exception.js", "../../../node_modules/hono/dist/utils/encode.js", "../../../node_modules/hono/dist/utils/jwt/jwa.js", "../../../node_modules/hono/dist/helper/adapter/index.js", "../../../node_modules/hono/dist/utils/jwt/types.js", "../../../node_modules/hono/dist/utils/jwt/utf8.js", "../../../node_modules/hono/dist/utils/jwt/jws.js", "../../../node_modules/hono/dist/utils/jwt/jwt.js", "../../../node_modules/hono/dist/utils/jwt/index.js", "../../../node_modules/hono/dist/middleware/jwt/jwt.js", "../../../node_modules/hono/dist/middleware/jwt/index.js", "../../../src/utils/security.ts", "../../../src/utils/errors.ts", "../../../src/middleware/analytics.ts", "../../../src/utils/db.ts", "../../../src/services/auth.ts", "../../../src/index.ts", "../../../node_modules/hono/dist/index.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/router/reg-exp-router/index.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/smart-router/index.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/index.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../src/routes/levelTest.ts", "../../../src/middleware/auth.ts", "../../../src/middleware/error-handler.ts", "../../../src/types/index.ts", "../../../src/utils/logger.ts", "../../../src/utils/response.ts", "../../../src/services/ai.ts", "../../../src/services/storage.ts", "../../../src/routes/webrtc.ts", "../../../src/utils/activeRooms.ts", "../../../src/routes/upload.ts", "../../../src/middleware/security.ts", "../../../src/routes/whisper.ts", "../../../src/routes/llm.ts", "../../../src/routes/images.ts", "../../../src/routes/transcribe.ts", "../../../node_modules/zod/lib/index.mjs", "../../../src/utils/auth.ts", "../../../src/routes/cache.ts", "../../../src/middleware/cache.ts", "../../../src/services/cache.ts", "../../../src/routes/translate.ts", "../../../src/routes/analytics.ts", "../../../src/routes/internal.ts", "../../../src/constants/whisper.ts", "../../../src/routes/auth.ts", "../../../src/services/user.ts", "../../../src/routes/users.ts", "../../../src/services/onboarding.ts", "../../../src/routes/onboarding.ts", "../../../src/services/onboardingState.ts", "../../../src/routes/sessions.ts", "../../../src/services/session.ts", "../../../src/routes/notifications.ts", "../../../src/services/notifications.ts", "../../../src/routes/groupSessions.ts", "../../../src/services/groupSessions.ts", "../../../src/services/groupSessionsCache.ts", "../../../src/services/groupSessionsState.ts", "../../../src/services/groupSessionsAI.ts", "../../../src/routes/groupSessionsAI.ts", "../../../src/routes/presence.ts", "../../../src/routes/matching.ts", "../../../src/services/matching.ts", "../../../src/routes/achievements.ts", "../../../src/services/achievement.ts", "../../../src/routes/chat.ts", "../../../src/services/chat.ts", "../../../src/routes/settings.ts", "../../../src/durable/WebRTCRoom.ts", "../../../src/durable/UserPresence.ts", "../../../src/services/userStatus.ts", "../../../src/durable/ChatHub.ts", "../../../src/middleware/index.ts", "../../../src/middleware/logger.ts", "../../../node_modules/hono/dist/middleware/request-id/index.js", "../../../node_modules/hono/dist/middleware/request-id/request-id.js", "../../../src/websocket/notificationSocket.ts"],
  "sourceRoot": "/Users/minhan/Desktop/public-repo/studymate/STYDYMATE-CLIENT/workers/.wrangler/tmp/deploy-WowSHg",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import { IntervalHistogram, RecordableHistogram } from \"./internal/perf_hooks/histogram.mjs\";\nimport { performance, Performance, PerformanceEntry, PerformanceMark, PerformanceMeasure, PerformanceObserverEntryList, PerformanceObserver, PerformanceResourceTiming } from \"./internal/perf_hooks/performance.mjs\";\nexport * from \"./internal/perf_hooks/performance.mjs\";\n// prettier-ignore\nimport { NODE_PERFORMANCE_GC_MAJOR, NODE_PERFORMANCE_GC_MINOR, NODE_PERFORMANCE_GC_INCREMENTAL, NODE_PERFORMANCE_GC_WEAKCB, NODE_PERFORMANCE_GC_FLAGS_NO, NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED, NODE_PERFORMANCE_GC_FLAGS_FORCED, NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING, NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE, NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY, NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE, NODE_PERFORMANCE_ENTRY_TYPE_GC, NODE_PERFORMANCE_ENTRY_TYPE_HTTP, NODE_PERFORMANCE_ENTRY_TYPE_HTTP2, NODE_PERFORMANCE_ENTRY_TYPE_NET, NODE_PERFORMANCE_ENTRY_TYPE_DNS, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN, NODE_PERFORMANCE_MILESTONE_ENVIRONMENT, NODE_PERFORMANCE_MILESTONE_NODE_START, NODE_PERFORMANCE_MILESTONE_V8_START, NODE_PERFORMANCE_MILESTONE_LOOP_START, NODE_PERFORMANCE_MILESTONE_LOOP_EXIT, NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE } from \"./internal/perf_hooks/constants.mjs\";\n// prettier-ignore\nexport const constants = {\n\tNODE_PERFORMANCE_GC_MAJOR,\n\tNODE_PERFORMANCE_GC_MINOR,\n\tNODE_PERFORMANCE_GC_INCREMENTAL,\n\tNODE_PERFORMANCE_GC_WEAKCB,\n\tNODE_PERFORMANCE_GC_FLAGS_NO,\n\tNODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED,\n\tNODE_PERFORMANCE_GC_FLAGS_FORCED,\n\tNODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY,\n\tNODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE,\n\tNODE_PERFORMANCE_ENTRY_TYPE_GC,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP2,\n\tNODE_PERFORMANCE_ENTRY_TYPE_NET,\n\tNODE_PERFORMANCE_ENTRY_TYPE_DNS,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN,\n\tNODE_PERFORMANCE_MILESTONE_ENVIRONMENT,\n\tNODE_PERFORMANCE_MILESTONE_NODE_START,\n\tNODE_PERFORMANCE_MILESTONE_V8_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_EXIT,\n\tNODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE\n};\nexport const monitorEventLoopDelay = function(_options) {\n\treturn new IntervalHistogram();\n};\nexport const createHistogram = function(_options) {\n\treturn new RecordableHistogram();\n};\nexport default {\n\tPerformance,\n\tPerformanceMark,\n\tPerformanceEntry,\n\tPerformanceMeasure,\n\tPerformanceObserverEntryList,\n\tPerformanceObserver,\n\tPerformanceResourceTiming,\n\tperformance,\n\tconstants,\n\tcreateHistogram,\n\tmonitorEventLoopDelay\n};\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "import { ReadStream } from \"./internal/tty/read-stream.mjs\";\nimport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport { ReadStream } from \"./internal/tty/read-stream.mjs\";\nexport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport const isatty = function() {\n\treturn false;\n};\nexport default {\n\tReadStream,\n\tWriteStream,\n\tisatty\n};\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nconst workerdProcess = getBuiltinModule(\"node:process\");\nconst isWorkerdProcessV2 = globalThis.Cloudflare.compatibilityFlags.enable_nodejs_process_v2;\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  // `hrtime` is only available from workerd process v2\n  hrtime: isWorkerdProcessV2 ? workerdProcess.hrtime : UnenvHrTime,\n  // `nextTick` is available from workerd process v1\n  nextTick: workerdProcess.nextTick\n});\nexport const { exit, features, platform } = workerdProcess;\nexport const {\n  // Always implemented by workerd\n  env,\n  // Only implemented in workerd v2\n  hrtime,\n  // Always implemented by workerd\n  nextTick\n} = unenvProcess;\nexport const {\n  _channel,\n  _disconnect,\n  _events,\n  _eventsCount,\n  _handleQueue,\n  _maxListeners,\n  _pendingMessage,\n  _send,\n  assert,\n  disconnect,\n  mainModule\n} = unenvProcess;\nexport const {\n  // @ts-expect-error `_debugEnd` is missing typings\n  _debugEnd,\n  // @ts-expect-error `_debugProcess` is missing typings\n  _debugProcess,\n  // @ts-expect-error `_exiting` is missing typings\n  _exiting,\n  // @ts-expect-error `_fatalException` is missing typings\n  _fatalException,\n  // @ts-expect-error `_getActiveHandles` is missing typings\n  _getActiveHandles,\n  // @ts-expect-error `_getActiveRequests` is missing typings\n  _getActiveRequests,\n  // @ts-expect-error `_kill` is missing typings\n  _kill,\n  // @ts-expect-error `_linkedBinding` is missing typings\n  _linkedBinding,\n  // @ts-expect-error `_preload_modules` is missing typings\n  _preload_modules,\n  // @ts-expect-error `_rawDebug` is missing typings\n  _rawDebug,\n  // @ts-expect-error `_startProfilerIdleNotifier` is missing typings\n  _startProfilerIdleNotifier,\n  // @ts-expect-error `_stopProfilerIdleNotifier` is missing typings\n  _stopProfilerIdleNotifier,\n  // @ts-expect-error `_tickCallback` is missing typings\n  _tickCallback,\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  arch,\n  argv,\n  argv0,\n  availableMemory,\n  // @ts-expect-error `binding` is missing typings\n  binding,\n  channel,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  // @ts-expect-error `domain` is missing typings\n  domain,\n  emit,\n  emitWarning,\n  eventNames,\n  execArgv,\n  execPath,\n  exitCode,\n  finalization,\n  getActiveResourcesInfo,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getMaxListeners,\n  getuid,\n  hasUncaughtExceptionCaptureCallback,\n  // @ts-expect-error `initgroups` is missing typings\n  initgroups,\n  kill,\n  listenerCount,\n  listeners,\n  loadEnvFile,\n  memoryUsage,\n  // @ts-expect-error `moduleLoadList` is missing typings\n  moduleLoadList,\n  off,\n  on,\n  once,\n  // @ts-expect-error `openStdin` is missing typings\n  openStdin,\n  permission,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  // @ts-expect-error `reallyExit` is missing typings\n  reallyExit,\n  ref,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  send,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  setuid,\n  setUncaughtExceptionCaptureCallback,\n  sourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  throwDeprecation,\n  title,\n  traceDeprecation,\n  umask,\n  unref,\n  uptime,\n  version,\n  versions\n} = isWorkerdProcessV2 ? workerdProcess : unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\n    \"/\",\n    url.charCodeAt(9) === 58 ? 13 : 8\n  );\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/utils/cookie.ts\nimport { decodeURIComponent_, tryDecode } from \"./url.js\";\nvar algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\nvar getCryptoKey = async (secret) => {\n  const secretBuf = typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret;\n  return await crypto.subtle.importKey(\"raw\", secretBuf, algorithm, false, [\"sign\", \"verify\"]);\n};\nvar makeSignature = async (value, secret) => {\n  const key = await getCryptoKey(secret);\n  const signature = await crypto.subtle.sign(algorithm.name, key, new TextEncoder().encode(value));\n  return btoa(String.fromCharCode(...new Uint8Array(signature)));\n};\nvar verifySignature = async (base64Signature, value, secret) => {\n  try {\n    const signatureBinStr = atob(base64Signature);\n    const signature = new Uint8Array(signatureBinStr.length);\n    for (let i = 0, len = signatureBinStr.length; i < len; i++) {\n      signature[i] = signatureBinStr.charCodeAt(i);\n    }\n    return await crypto.subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));\n  } catch {\n    return false;\n  }\n};\nvar validCookieNameRegEx = /^[\\w!#$%&'*.^`|~+-]+$/;\nvar validCookieValueRegEx = /^[ !#-:<-[\\]-~]*$/;\nvar parse = (cookie, name) => {\n  if (name && cookie.indexOf(name) === -1) {\n    return {};\n  }\n  const pairs = cookie.trim().split(\";\");\n  const parsedCookie = {};\n  for (let pairStr of pairs) {\n    pairStr = pairStr.trim();\n    const valueStartPos = pairStr.indexOf(\"=\");\n    if (valueStartPos === -1) {\n      continue;\n    }\n    const cookieName = pairStr.substring(0, valueStartPos).trim();\n    if (name && name !== cookieName || !validCookieNameRegEx.test(cookieName)) {\n      continue;\n    }\n    let cookieValue = pairStr.substring(valueStartPos + 1).trim();\n    if (cookieValue.startsWith('\"') && cookieValue.endsWith('\"')) {\n      cookieValue = cookieValue.slice(1, -1);\n    }\n    if (validCookieValueRegEx.test(cookieValue)) {\n      parsedCookie[cookieName] = cookieValue.indexOf(\"%\") !== -1 ? tryDecode(cookieValue, decodeURIComponent_) : cookieValue;\n      if (name) {\n        break;\n      }\n    }\n  }\n  return parsedCookie;\n};\nvar parseSigned = async (cookie, secret, name) => {\n  const parsedCookie = {};\n  const secretKey = await getCryptoKey(secret);\n  for (const [key, value] of Object.entries(parse(cookie, name))) {\n    const signatureStartPos = value.lastIndexOf(\".\");\n    if (signatureStartPos < 1) {\n      continue;\n    }\n    const signedValue = value.substring(0, signatureStartPos);\n    const signature = value.substring(signatureStartPos + 1);\n    if (signature.length !== 44 || !signature.endsWith(\"=\")) {\n      continue;\n    }\n    const isVerified = await verifySignature(signature, signedValue, secretKey);\n    parsedCookie[key] = isVerified ? signedValue : false;\n  }\n  return parsedCookie;\n};\nvar _serialize = (name, value, opt = {}) => {\n  let cookie = `${name}=${value}`;\n  if (name.startsWith(\"__Secure-\") && !opt.secure) {\n    throw new Error(\"__Secure- Cookie must have Secure attributes\");\n  }\n  if (name.startsWith(\"__Host-\")) {\n    if (!opt.secure) {\n      throw new Error(\"__Host- Cookie must have Secure attributes\");\n    }\n    if (opt.path !== \"/\") {\n      throw new Error('__Host- Cookie must have Path attributes with \"/\"');\n    }\n    if (opt.domain) {\n      throw new Error(\"__Host- Cookie must not have Domain attributes\");\n    }\n  }\n  if (opt && typeof opt.maxAge === \"number\" && opt.maxAge >= 0) {\n    if (opt.maxAge > 3456e4) {\n      throw new Error(\n        \"Cookies Max-Age SHOULD NOT be greater than 400 days (34560000 seconds) in duration.\"\n      );\n    }\n    cookie += `; Max-Age=${opt.maxAge | 0}`;\n  }\n  if (opt.domain && opt.prefix !== \"host\") {\n    cookie += `; Domain=${opt.domain}`;\n  }\n  if (opt.path) {\n    cookie += `; Path=${opt.path}`;\n  }\n  if (opt.expires) {\n    if (opt.expires.getTime() - Date.now() > 3456e7) {\n      throw new Error(\n        \"Cookies Expires SHOULD NOT be greater than 400 days (34560000 seconds) in the future.\"\n      );\n    }\n    cookie += `; Expires=${opt.expires.toUTCString()}`;\n  }\n  if (opt.httpOnly) {\n    cookie += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    cookie += \"; Secure\";\n  }\n  if (opt.sameSite) {\n    cookie += `; SameSite=${opt.sameSite.charAt(0).toUpperCase() + opt.sameSite.slice(1)}`;\n  }\n  if (opt.priority) {\n    cookie += `; Priority=${opt.priority.charAt(0).toUpperCase() + opt.priority.slice(1)}`;\n  }\n  if (opt.partitioned) {\n    if (!opt.secure) {\n      throw new Error(\"Partitioned Cookie must have Secure attributes\");\n    }\n    cookie += \"; Partitioned\";\n  }\n  return cookie;\n};\nvar serialize = (name, value, opt) => {\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nvar serializeSigned = async (name, value, secret, opt = {}) => {\n  const signature = await makeSignature(value, secret);\n  value = `${value}.${signature}`;\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nexport {\n  parse,\n  parseSigned,\n  serialize,\n  serializeSigned\n};\n", "// src/helper/cookie/index.ts\nimport { parse, parseSigned, serialize, serializeSigned } from \"../../utils/cookie.js\";\nvar getCookie = (c, key, prefix) => {\n  const cookie = c.req.raw.headers.get(\"Cookie\");\n  if (typeof key === \"string\") {\n    if (!cookie) {\n      return void 0;\n    }\n    let finalKey = key;\n    if (prefix === \"secure\") {\n      finalKey = \"__Secure-\" + key;\n    } else if (prefix === \"host\") {\n      finalKey = \"__Host-\" + key;\n    }\n    const obj2 = parse(cookie, finalKey);\n    return obj2[finalKey];\n  }\n  if (!cookie) {\n    return {};\n  }\n  const obj = parse(cookie);\n  return obj;\n};\nvar getSignedCookie = async (c, secret, key, prefix) => {\n  const cookie = c.req.raw.headers.get(\"Cookie\");\n  if (typeof key === \"string\") {\n    if (!cookie) {\n      return void 0;\n    }\n    let finalKey = key;\n    if (prefix === \"secure\") {\n      finalKey = \"__Secure-\" + key;\n    } else if (prefix === \"host\") {\n      finalKey = \"__Host-\" + key;\n    }\n    const obj2 = await parseSigned(cookie, secret, finalKey);\n    return obj2[finalKey];\n  }\n  if (!cookie) {\n    return {};\n  }\n  const obj = await parseSigned(cookie, secret);\n  return obj;\n};\nvar generateCookie = (name, value, opt) => {\n  let cookie;\n  if (opt?.prefix === \"secure\") {\n    cookie = serialize(\"__Secure-\" + name, value, { path: \"/\", ...opt, secure: true });\n  } else if (opt?.prefix === \"host\") {\n    cookie = serialize(\"__Host-\" + name, value, {\n      ...opt,\n      path: \"/\",\n      secure: true,\n      domain: void 0\n    });\n  } else {\n    cookie = serialize(name, value, { path: \"/\", ...opt });\n  }\n  return cookie;\n};\nvar setCookie = (c, name, value, opt) => {\n  const cookie = generateCookie(name, value, opt);\n  c.header(\"Set-Cookie\", cookie, { append: true });\n};\nvar generateSignedCookie = async (name, value, secret, opt) => {\n  let cookie;\n  if (opt?.prefix === \"secure\") {\n    cookie = await serializeSigned(\"__Secure-\" + name, value, secret, {\n      path: \"/\",\n      ...opt,\n      secure: true\n    });\n  } else if (opt?.prefix === \"host\") {\n    cookie = await serializeSigned(\"__Host-\" + name, value, secret, {\n      ...opt,\n      path: \"/\",\n      secure: true,\n      domain: void 0\n    });\n  } else {\n    cookie = await serializeSigned(name, value, secret, { path: \"/\", ...opt });\n  }\n  return cookie;\n};\nvar setSignedCookie = async (c, name, value, secret, opt) => {\n  const cookie = await generateSignedCookie(name, value, secret, opt);\n  c.header(\"set-cookie\", cookie, { append: true });\n};\nvar deleteCookie = (c, name, opt) => {\n  const deletedCookie = getCookie(c, name, opt?.prefix);\n  setCookie(c, name, \"\", { ...opt, maxAge: 0 });\n  return deletedCookie;\n};\nexport {\n  deleteCookie,\n  generateCookie,\n  generateSignedCookie,\n  getCookie,\n  getSignedCookie,\n  setCookie,\n  setSignedCookie\n};\n", "// src/http-exception.ts\nvar HTTPException = class extends Error {\n  res;\n  status;\n  constructor(status = 500, options) {\n    super(options?.message, { cause: options?.cause });\n    this.res = options?.res;\n    this.status = status;\n  }\n  getResponse() {\n    if (this.res) {\n      const newResponse = new Response(this.res.body, {\n        status: this.status,\n        headers: this.res.headers\n      });\n      return newResponse;\n    }\n    return new Response(this.message, {\n      status: this.status\n    });\n  }\n};\nexport {\n  HTTPException\n};\n", "// src/utils/encode.ts\nvar decodeBase64Url = (str) => {\n  return decodeBase64(str.replace(/_|-/g, (m) => ({ _: \"/\", \"-\": \"+\" })[m] ?? m));\n};\nvar encodeBase64Url = (buf) => encodeBase64(buf).replace(/\\/|\\+/g, (m) => ({ \"/\": \"_\", \"+\": \"-\" })[m] ?? m);\nvar encodeBase64 = (buf) => {\n  let binary = \"\";\n  const bytes = new Uint8Array(buf);\n  for (let i = 0, len = bytes.length; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n};\nvar decodeBase64 = (str) => {\n  const binary = atob(str);\n  const bytes = new Uint8Array(new ArrayBuffer(binary.length));\n  const half = binary.length / 2;\n  for (let i = 0, j = binary.length - 1; i <= half; i++, j--) {\n    bytes[i] = binary.charCodeAt(i);\n    bytes[j] = binary.charCodeAt(j);\n  }\n  return bytes;\n};\nexport {\n  decodeBase64,\n  decodeBase64Url,\n  encodeBase64,\n  encodeBase64Url\n};\n", "// src/utils/jwt/jwa.ts\nvar AlgorithmTypes = /* @__PURE__ */ ((AlgorithmTypes2) => {\n  AlgorithmTypes2[\"HS256\"] = \"HS256\";\n  AlgorithmTypes2[\"HS384\"] = \"HS384\";\n  AlgorithmTypes2[\"HS512\"] = \"HS512\";\n  AlgorithmTypes2[\"RS256\"] = \"RS256\";\n  AlgorithmTypes2[\"RS384\"] = \"RS384\";\n  AlgorithmTypes2[\"RS512\"] = \"RS512\";\n  AlgorithmTypes2[\"PS256\"] = \"PS256\";\n  AlgorithmTypes2[\"PS384\"] = \"PS384\";\n  AlgorithmTypes2[\"PS512\"] = \"PS512\";\n  AlgorithmTypes2[\"ES256\"] = \"ES256\";\n  AlgorithmTypes2[\"ES384\"] = \"ES384\";\n  AlgorithmTypes2[\"ES512\"] = \"ES512\";\n  AlgorithmTypes2[\"EdDSA\"] = \"EdDSA\";\n  return AlgorithmTypes2;\n})(AlgorithmTypes || {});\nexport {\n  AlgorithmTypes\n};\n", "// src/helper/adapter/index.ts\nvar env = (c, runtime) => {\n  const global = globalThis;\n  const globalEnv = global?.process?.env;\n  runtime ??= getRuntimeKey();\n  const runtimeEnvHandlers = {\n    bun: () => globalEnv,\n    node: () => globalEnv,\n    \"edge-light\": () => globalEnv,\n    deno: () => {\n      return Deno.env.toObject();\n    },\n    workerd: () => c.env,\n    fastly: () => ({}),\n    other: () => ({})\n  };\n  return runtimeEnvHandlers[runtime]();\n};\nvar knownUserAgents = {\n  deno: \"Deno\",\n  bun: \"Bun\",\n  workerd: \"Cloudflare-Workers\",\n  node: \"Node.js\"\n};\nvar getRuntimeKey = () => {\n  const global = globalThis;\n  const userAgentSupported = typeof navigator !== \"undefined\" && typeof navigator.userAgent === \"string\";\n  if (userAgentSupported) {\n    for (const [runtimeKey, userAgent] of Object.entries(knownUserAgents)) {\n      if (checkUserAgentEquals(userAgent)) {\n        return runtimeKey;\n      }\n    }\n  }\n  if (typeof global?.EdgeRuntime === \"string\") {\n    return \"edge-light\";\n  }\n  if (global?.fastly !== void 0) {\n    return \"fastly\";\n  }\n  if (global?.process?.release?.name === \"node\") {\n    return \"node\";\n  }\n  return \"other\";\n};\nvar checkUserAgentEquals = (platform) => {\n  const userAgent = navigator.userAgent;\n  return userAgent.startsWith(platform);\n};\nexport {\n  checkUserAgentEquals,\n  env,\n  getRuntimeKey,\n  knownUserAgents\n};\n", "// src/utils/jwt/types.ts\nvar JwtAlgorithmNotImplemented = class extends Error {\n  constructor(alg) {\n    super(`${alg} is not an implemented algorithm`);\n    this.name = \"JwtAlgorithmNotImplemented\";\n  }\n};\nvar JwtTokenInvalid = class extends Error {\n  constructor(token) {\n    super(`invalid JWT token: ${token}`);\n    this.name = \"JwtTokenInvalid\";\n  }\n};\nvar JwtTokenNotBefore = class extends Error {\n  constructor(token) {\n    super(`token (${token}) is being used before it's valid`);\n    this.name = \"JwtTokenNotBefore\";\n  }\n};\nvar JwtTokenExpired = class extends Error {\n  constructor(token) {\n    super(`token (${token}) expired`);\n    this.name = \"JwtTokenExpired\";\n  }\n};\nvar JwtTokenIssuedAt = class extends Error {\n  constructor(currentTimestamp, iat) {\n    super(\n      `Invalid \"iat\" claim, must be a valid number lower than \"${currentTimestamp}\" (iat: \"${iat}\")`\n    );\n    this.name = \"JwtTokenIssuedAt\";\n  }\n};\nvar JwtTokenIssuer = class extends Error {\n  constructor(expected, iss) {\n    super(`expected issuer \"${expected}\", got ${iss ? `\"${iss}\"` : \"none\"} `);\n    this.name = \"JwtTokenIssuer\";\n  }\n};\nvar JwtHeaderInvalid = class extends Error {\n  constructor(header) {\n    super(`jwt header is invalid: ${JSON.stringify(header)}`);\n    this.name = \"JwtHeaderInvalid\";\n  }\n};\nvar JwtHeaderRequiresKid = class extends Error {\n  constructor(header) {\n    super(`required \"kid\" in jwt header: ${JSON.stringify(header)}`);\n    this.name = \"JwtHeaderRequiresKid\";\n  }\n};\nvar JwtTokenSignatureMismatched = class extends Error {\n  constructor(token) {\n    super(`token(${token}) signature mismatched`);\n    this.name = \"JwtTokenSignatureMismatched\";\n  }\n};\nvar CryptoKeyUsage = /* @__PURE__ */ ((CryptoKeyUsage2) => {\n  CryptoKeyUsage2[\"Encrypt\"] = \"encrypt\";\n  CryptoKeyUsage2[\"Decrypt\"] = \"decrypt\";\n  CryptoKeyUsage2[\"Sign\"] = \"sign\";\n  CryptoKeyUsage2[\"Verify\"] = \"verify\";\n  CryptoKeyUsage2[\"DeriveKey\"] = \"deriveKey\";\n  CryptoKeyUsage2[\"DeriveBits\"] = \"deriveBits\";\n  CryptoKeyUsage2[\"WrapKey\"] = \"wrapKey\";\n  CryptoKeyUsage2[\"UnwrapKey\"] = \"unwrapKey\";\n  return CryptoKeyUsage2;\n})(CryptoKeyUsage || {});\nexport {\n  CryptoKeyUsage,\n  JwtAlgorithmNotImplemented,\n  JwtHeaderInvalid,\n  JwtHeaderRequiresKid,\n  JwtTokenExpired,\n  JwtTokenInvalid,\n  JwtTokenIssuedAt,\n  JwtTokenIssuer,\n  JwtTokenNotBefore,\n  JwtTokenSignatureMismatched\n};\n", "// src/utils/jwt/utf8.ts\nvar utf8Encoder = new TextEncoder();\nvar utf8Decoder = new TextDecoder();\nexport {\n  utf8Decoder,\n  utf8Encoder\n};\n", "// src/utils/jwt/jws.ts\nimport { getRuntimeKey } from \"../../helper/adapter/index.js\";\nimport { decodeBase64 } from \"../encode.js\";\nimport { CryptoKeyUsage, JwtAlgorithmNotImplemented } from \"./types.js\";\nimport { utf8Encoder } from \"./utf8.js\";\nasync function signing(privateKey, alg, data) {\n  const algorithm = getKeyAlgorithm(alg);\n  const cryptoKey = await importPrivateKey(privateKey, algorithm);\n  return await crypto.subtle.sign(algorithm, cryptoKey, data);\n}\nasync function verifying(publicKey, alg, signature, data) {\n  const algorithm = getKeyAlgorithm(alg);\n  const cryptoKey = await importPublicKey(publicKey, algorithm);\n  return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n}\nfunction pemToBinary(pem) {\n  return decodeBase64(pem.replace(/-+(BEGIN|END).*/g, \"\").replace(/\\s/g, \"\"));\n}\nasync function importPrivateKey(key, alg) {\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  if (isCryptoKey(key)) {\n    if (key.type !== \"private\" && key.type !== \"secret\") {\n      throw new Error(\n        `unexpected key type: CryptoKey.type is ${key.type}, expected private or secret`\n      );\n    }\n    return key;\n  }\n  const usages = [CryptoKeyUsage.Sign];\n  if (typeof key === \"object\") {\n    return await crypto.subtle.importKey(\"jwk\", key, alg, false, usages);\n  }\n  if (key.includes(\"PRIVATE\")) {\n    return await crypto.subtle.importKey(\"pkcs8\", pemToBinary(key), alg, false, usages);\n  }\n  return await crypto.subtle.importKey(\"raw\", utf8Encoder.encode(key), alg, false, usages);\n}\nasync function importPublicKey(key, alg) {\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  if (isCryptoKey(key)) {\n    if (key.type === \"public\" || key.type === \"secret\") {\n      return key;\n    }\n    key = await exportPublicJwkFrom(key);\n  }\n  if (typeof key === \"string\" && key.includes(\"PRIVATE\")) {\n    const privateKey = await crypto.subtle.importKey(\"pkcs8\", pemToBinary(key), alg, true, [\n      CryptoKeyUsage.Sign\n    ]);\n    key = await exportPublicJwkFrom(privateKey);\n  }\n  const usages = [CryptoKeyUsage.Verify];\n  if (typeof key === \"object\") {\n    return await crypto.subtle.importKey(\"jwk\", key, alg, false, usages);\n  }\n  if (key.includes(\"PUBLIC\")) {\n    return await crypto.subtle.importKey(\"spki\", pemToBinary(key), alg, false, usages);\n  }\n  return await crypto.subtle.importKey(\"raw\", utf8Encoder.encode(key), alg, false, usages);\n}\nasync function exportPublicJwkFrom(privateKey) {\n  if (privateKey.type !== \"private\") {\n    throw new Error(`unexpected key type: ${privateKey.type}`);\n  }\n  if (!privateKey.extractable) {\n    throw new Error(\"unexpected private key is unextractable\");\n  }\n  const jwk = await crypto.subtle.exportKey(\"jwk\", privateKey);\n  const { kty } = jwk;\n  const { alg, e, n } = jwk;\n  const { crv, x, y } = jwk;\n  return { kty, alg, e, n, crv, x, y, key_ops: [CryptoKeyUsage.Verify] };\n}\nfunction getKeyAlgorithm(name) {\n  switch (name) {\n    case \"HS256\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-256\"\n        }\n      };\n    case \"HS384\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-384\"\n        }\n      };\n    case \"HS512\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-512\"\n        }\n      };\n    case \"RS256\":\n      return {\n        name: \"RSASSA-PKCS1-v1_5\",\n        hash: {\n          name: \"SHA-256\"\n        }\n      };\n    case \"RS384\":\n      return {\n        name: \"RSASSA-PKCS1-v1_5\",\n        hash: {\n          name: \"SHA-384\"\n        }\n      };\n    case \"RS512\":\n      return {\n        name: \"RSASSA-PKCS1-v1_5\",\n        hash: {\n          name: \"SHA-512\"\n        }\n      };\n    case \"PS256\":\n      return {\n        name: \"RSA-PSS\",\n        hash: {\n          name: \"SHA-256\"\n        },\n        saltLength: 32\n      };\n    case \"PS384\":\n      return {\n        name: \"RSA-PSS\",\n        hash: {\n          name: \"SHA-384\"\n        },\n        saltLength: 48\n      };\n    case \"PS512\":\n      return {\n        name: \"RSA-PSS\",\n        hash: {\n          name: \"SHA-512\"\n        },\n        saltLength: 64\n      };\n    case \"ES256\":\n      return {\n        name: \"ECDSA\",\n        hash: {\n          name: \"SHA-256\"\n        },\n        namedCurve: \"P-256\"\n      };\n    case \"ES384\":\n      return {\n        name: \"ECDSA\",\n        hash: {\n          name: \"SHA-384\"\n        },\n        namedCurve: \"P-384\"\n      };\n    case \"ES512\":\n      return {\n        name: \"ECDSA\",\n        hash: {\n          name: \"SHA-512\"\n        },\n        namedCurve: \"P-521\"\n      };\n    case \"EdDSA\":\n      return {\n        name: \"Ed25519\",\n        namedCurve: \"Ed25519\"\n      };\n    default:\n      throw new JwtAlgorithmNotImplemented(name);\n  }\n}\nfunction isCryptoKey(key) {\n  const runtime = getRuntimeKey();\n  if (runtime === \"node\" && !!crypto.webcrypto) {\n    return key instanceof crypto.webcrypto.CryptoKey;\n  }\n  return key instanceof CryptoKey;\n}\nexport {\n  signing,\n  verifying\n};\n", "// src/utils/jwt/jwt.ts\nimport { decodeBase64Url, encodeBase64Url } from \"../../utils/encode.js\";\nimport { AlgorithmTypes } from \"./jwa.js\";\nimport { signing, verifying } from \"./jws.js\";\nimport {\n  JwtHeaderInvalid,\n  JwtHeaderRequiresKid,\n  JwtTokenExpired,\n  JwtTokenInvalid,\n  JwtTokenIssuedAt,\n  JwtTokenIssuer,\n  JwtTokenNotBefore,\n  JwtTokenSignatureMismatched\n} from \"./types.js\";\nimport { utf8Decoder, utf8Encoder } from \"./utf8.js\";\nvar encodeJwtPart = (part) => encodeBase64Url(utf8Encoder.encode(JSON.stringify(part)).buffer).replace(/=/g, \"\");\nvar encodeSignaturePart = (buf) => encodeBase64Url(buf).replace(/=/g, \"\");\nvar decodeJwtPart = (part) => JSON.parse(utf8Decoder.decode(decodeBase64Url(part)));\nfunction isTokenHeader(obj) {\n  if (typeof obj === \"object\" && obj !== null) {\n    const objWithAlg = obj;\n    return \"alg\" in objWithAlg && Object.values(AlgorithmTypes).includes(objWithAlg.alg) && (!(\"typ\" in objWithAlg) || objWithAlg.typ === \"JWT\");\n  }\n  return false;\n}\nvar sign = async (payload, privateKey, alg = \"HS256\") => {\n  const encodedPayload = encodeJwtPart(payload);\n  let encodedHeader;\n  if (typeof privateKey === \"object\" && \"alg\" in privateKey) {\n    alg = privateKey.alg;\n    encodedHeader = encodeJwtPart({ alg, typ: \"JWT\", kid: privateKey.kid });\n  } else {\n    encodedHeader = encodeJwtPart({ alg, typ: \"JWT\" });\n  }\n  const partialToken = `${encodedHeader}.${encodedPayload}`;\n  const signaturePart = await signing(privateKey, alg, utf8Encoder.encode(partialToken));\n  const signature = encodeSignaturePart(signaturePart);\n  return `${partialToken}.${signature}`;\n};\nvar verify = async (token, publicKey, algOrOptions) => {\n  const optsIn = typeof algOrOptions === \"string\" ? { alg: algOrOptions } : algOrOptions || {};\n  const opts = {\n    alg: optsIn.alg ?? \"HS256\",\n    iss: optsIn.iss,\n    nbf: optsIn.nbf ?? true,\n    exp: optsIn.exp ?? true,\n    iat: optsIn.iat ?? true\n  };\n  const tokenParts = token.split(\".\");\n  if (tokenParts.length !== 3) {\n    throw new JwtTokenInvalid(token);\n  }\n  const { header, payload } = decode(token);\n  if (!isTokenHeader(header)) {\n    throw new JwtHeaderInvalid(header);\n  }\n  const now = Date.now() / 1e3 | 0;\n  if (opts.nbf && payload.nbf && payload.nbf > now) {\n    throw new JwtTokenNotBefore(token);\n  }\n  if (opts.exp && payload.exp && payload.exp <= now) {\n    throw new JwtTokenExpired(token);\n  }\n  if (opts.iat && payload.iat && now < payload.iat) {\n    throw new JwtTokenIssuedAt(now, payload.iat);\n  }\n  if (opts.iss) {\n    if (!payload.iss) {\n      throw new JwtTokenIssuer(opts.iss, null);\n    }\n    if (typeof opts.iss === \"string\" && payload.iss !== opts.iss) {\n      throw new JwtTokenIssuer(opts.iss, payload.iss);\n    }\n    if (opts.iss instanceof RegExp && !opts.iss.test(payload.iss)) {\n      throw new JwtTokenIssuer(opts.iss, payload.iss);\n    }\n  }\n  const headerPayload = token.substring(0, token.lastIndexOf(\".\"));\n  const verified = await verifying(\n    publicKey,\n    opts.alg,\n    decodeBase64Url(tokenParts[2]),\n    utf8Encoder.encode(headerPayload)\n  );\n  if (!verified) {\n    throw new JwtTokenSignatureMismatched(token);\n  }\n  return payload;\n};\nvar verifyWithJwks = async (token, options, init) => {\n  const verifyOpts = options.verification || {};\n  const header = decodeHeader(token);\n  if (!isTokenHeader(header)) {\n    throw new JwtHeaderInvalid(header);\n  }\n  if (!header.kid) {\n    throw new JwtHeaderRequiresKid(header);\n  }\n  if (options.jwks_uri) {\n    const response = await fetch(options.jwks_uri, init);\n    if (!response.ok) {\n      throw new Error(`failed to fetch JWKS from ${options.jwks_uri}`);\n    }\n    const data = await response.json();\n    if (!data.keys) {\n      throw new Error('invalid JWKS response. \"keys\" field is missing');\n    }\n    if (!Array.isArray(data.keys)) {\n      throw new Error('invalid JWKS response. \"keys\" field is not an array');\n    }\n    if (options.keys) {\n      options.keys.push(...data.keys);\n    } else {\n      options.keys = data.keys;\n    }\n  } else if (!options.keys) {\n    throw new Error('verifyWithJwks requires options for either \"keys\" or \"jwks_uri\" or both');\n  }\n  const matchingKey = options.keys.find((key) => key.kid === header.kid);\n  if (!matchingKey) {\n    throw new JwtTokenInvalid(token);\n  }\n  return await verify(token, matchingKey, {\n    alg: matchingKey.alg || header.alg,\n    ...verifyOpts\n  });\n};\nvar decode = (token) => {\n  try {\n    const [h, p] = token.split(\".\");\n    const header = decodeJwtPart(h);\n    const payload = decodeJwtPart(p);\n    return {\n      header,\n      payload\n    };\n  } catch {\n    throw new JwtTokenInvalid(token);\n  }\n};\nvar decodeHeader = (token) => {\n  try {\n    const [h] = token.split(\".\");\n    return decodeJwtPart(h);\n  } catch {\n    throw new JwtTokenInvalid(token);\n  }\n};\nexport {\n  decode,\n  decodeHeader,\n  isTokenHeader,\n  sign,\n  verify,\n  verifyWithJwks\n};\n", "// src/utils/jwt/index.ts\nimport { decode, sign, verify, verifyWithJwks } from \"./jwt.js\";\nvar Jwt = { sign, verify, decode, verifyWithJwks };\nexport {\n  Jwt\n};\n", "// src/middleware/jwt/jwt.ts\nimport { getCookie, getSignedCookie } from \"../../helper/cookie/index.js\";\nimport { HTTPException } from \"../../http-exception.js\";\nimport { Jwt } from \"../../utils/jwt/index.js\";\nimport \"../../context.js\";\nvar jwt = (options) => {\n  const verifyOpts = options.verification || {};\n  if (!options || !options.secret) {\n    throw new Error('JWT auth middleware requires options for \"secret\"');\n  }\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  return async function jwt2(ctx, next) {\n    const headerName = options.headerName || \"Authorization\";\n    const credentials = ctx.req.raw.headers.get(headerName);\n    let token;\n    if (credentials) {\n      const parts = credentials.split(/\\s+/);\n      if (parts.length !== 2) {\n        const errDescription = \"invalid credentials structure\";\n        throw new HTTPException(401, {\n          message: errDescription,\n          res: unauthorizedResponse({\n            ctx,\n            error: \"invalid_request\",\n            errDescription\n          })\n        });\n      } else {\n        token = parts[1];\n      }\n    } else if (options.cookie) {\n      if (typeof options.cookie == \"string\") {\n        token = getCookie(ctx, options.cookie);\n      } else if (options.cookie.secret) {\n        if (options.cookie.prefixOptions) {\n          token = await getSignedCookie(\n            ctx,\n            options.cookie.secret,\n            options.cookie.key,\n            options.cookie.prefixOptions\n          );\n        } else {\n          token = await getSignedCookie(ctx, options.cookie.secret, options.cookie.key);\n        }\n      } else {\n        if (options.cookie.prefixOptions) {\n          token = getCookie(ctx, options.cookie.key, options.cookie.prefixOptions);\n        } else {\n          token = getCookie(ctx, options.cookie.key);\n        }\n      }\n    }\n    if (!token) {\n      const errDescription = \"no authorization included in request\";\n      throw new HTTPException(401, {\n        message: errDescription,\n        res: unauthorizedResponse({\n          ctx,\n          error: \"invalid_request\",\n          errDescription\n        })\n      });\n    }\n    let payload;\n    let cause;\n    try {\n      payload = await Jwt.verify(token, options.secret, {\n        alg: options.alg,\n        ...verifyOpts\n      });\n    } catch (e) {\n      cause = e;\n    }\n    if (!payload) {\n      throw new HTTPException(401, {\n        message: \"Unauthorized\",\n        res: unauthorizedResponse({\n          ctx,\n          error: \"invalid_token\",\n          statusText: \"Unauthorized\",\n          errDescription: \"token verification failure\"\n        }),\n        cause\n      });\n    }\n    ctx.set(\"jwtPayload\", payload);\n    await next();\n  };\n};\nfunction unauthorizedResponse(opts) {\n  return new Response(\"Unauthorized\", {\n    status: 401,\n    statusText: opts.statusText,\n    headers: {\n      \"WWW-Authenticate\": `Bearer realm=\"${opts.ctx.req.url}\",error=\"${opts.error}\",error_description=\"${opts.errDescription}\"`\n    }\n  });\n}\nvar verifyWithJwks = Jwt.verifyWithJwks;\nvar verify = Jwt.verify;\nvar decode = Jwt.decode;\nvar sign = Jwt.sign;\nexport {\n  decode,\n  jwt,\n  sign,\n  verify,\n  verifyWithJwks\n};\n", "// src/middleware/jwt/index.ts\nimport { jwt, verifyWithJwks, verify, decode, sign } from \"./jwt.js\";\nexport {\n  decode,\n  jwt,\n  sign,\n  verify,\n  verifyWithJwks\n};\n", "export async function hashSha256(input: string): Promise<string> {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(input);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n}\n\nexport function generateState(prefix: string = 'state'): string {\n  return `${prefix}_${crypto.randomUUID()}`;\n}\n\nexport function sanitizeFileName(name: string): string {\n  return name\n    .normalize('NFKD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/[^a-zA-Z0-9._-]/g, '_')\n    .replace(/_{2,}/g, '_')\n    .replace(/^_+|_+$/g, '')\n    .toLowerCase();\n}\n\nexport function assertEnvVar(value: string | undefined, variableName: string): string {\n  if (!value) {\n    throw new Error(`Environment variable ${variableName} is required`);\n  }\n  return value;\n}\n\n", "// Error handling utilities\n\nimport { Context } from 'hono';\nimport { HTTPException } from 'hono/http-exception';\n\n// Custom error class\nexport class AppError extends Error {\n  public readonly statusCode: number;\n  public readonly errorCode: string;\n  public readonly details?: any;\n\n  constructor(\n    message: string,\n    statusCode: number = 500,\n    errorCode: string = 'INTERNAL_ERROR',\n    details?: any\n  ) {\n    super(message);\n    this.name = 'AppError';\n    this.statusCode = statusCode;\n    this.errorCode = errorCode;\n    this.details = details;\n    Object.setPrototypeOf(this, AppError.prototype);\n  }\n}\n\n// Common error types\nexport class ValidationError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, 400, 'VALIDATION_ERROR', details);\n    this.name = 'ValidationError';\n  }\n}\n\nexport class AuthenticationError extends AppError {\n  constructor(message: string = 'Authentication required') {\n    super(message, 401, 'AUTHENTICATION_ERROR');\n    this.name = 'AuthenticationError';\n  }\n}\n\nexport class AuthorizationError extends AppError {\n  constructor(message: string = 'Insufficient permissions') {\n    super(message, 403, 'AUTHORIZATION_ERROR');\n    this.name = 'AuthorizationError';\n  }\n}\n\nexport class NotFoundError extends AppError {\n  constructor(resource: string = 'Resource') {\n    super(`${resource} not found`, 404, 'NOT_FOUND');\n    this.name = 'NotFoundError';\n  }\n}\n\nexport class ConflictError extends AppError {\n  constructor(message: string) {\n    super(message, 409, 'CONFLICT_ERROR');\n    this.name = 'ConflictError';\n  }\n}\n\nexport class RateLimitError extends AppError {\n  constructor(retryAfter?: number) {\n    super('Too many requests', 429, 'RATE_LIMIT_ERROR', { retryAfter });\n    this.name = 'RateLimitError';\n  }\n}\n\nexport class ExternalServiceError extends AppError {\n  constructor(service: string, originalError?: any) {\n    super(\n      `External service error: ${service}`,\n      502,\n      'EXTERNAL_SERVICE_ERROR',\n      { service, originalError }\n    );\n    this.name = 'ExternalServiceError';\n  }\n}\n\n// Error response formatter\nexport function formatErrorResponse(error: Error | AppError | HTTPException) {\n  // Check if it's our custom error\n  if (error instanceof AppError) {\n    return {\n      error: {\n        code: error.errorCode,\n        message: error.message,\n        details: error.details\n      },\n      status: error.statusCode\n    };\n  }\n\n  // Check if it's Hono's HTTPException\n  if (error instanceof HTTPException) {\n    return {\n      error: {\n        code: 'HTTP_ERROR',\n        message: error.message,\n        status: error.status\n      },\n      status: error.status\n    };\n  }\n\n  // Generic error\n  const isDevelopment = (globalThis as any).NODE_ENV === 'development';\n  return {\n    error: {\n      code: 'INTERNAL_ERROR',\n      message: isDevelopment ? error.message : 'An unexpected error occurred',\n      stack: isDevelopment ? error.stack : undefined\n    },\n    status: 500\n  };\n}\n\n// Global error handler middleware\nexport async function errorHandler(\n  err: Error | AppError | HTTPException,\n  c: Context\n) {\n  console.error('Error:', err);\n\n  const { error, status } = formatErrorResponse(err);\n\n  // Add error tracking headers\n  const requestId = c.req.header('X-Request-ID') || crypto.randomUUID();\n  c.header('X-Request-ID', requestId);\n\n  // Log to external service in production\n  if ((globalThis as any).NODE_ENV === 'production') {\n    // Here you would send to Sentry, DataDog, etc.\n    console.error('Production error:', {\n      requestId,\n      error,\n      url: c.req.url,\n      method: c.req.method,\n      headers: Object.fromEntries(c.req.raw.headers.entries())\n    });\n  }\n\n  // Handle rate limit errors specially\n  if (err instanceof RateLimitError && err.details?.retryAfter) {\n    c.header('Retry-After', String(err.details.retryAfter));\n  }\n\n  return c.json(error as any, status as any);\n}\n\n// Async error wrapper\nexport function asyncHandler<T extends (...args: any[]) => Promise<any>>(\n  fn: T\n): T {\n  return (async (...args: Parameters<T>) => {\n    try {\n      return await fn(...args);\n    } catch (error) {\n      throw error;\n    }\n  }) as T;\n}\n\n// Validation helper\nexport function validateRequired(\n  data: Record<string, any>,\n  fields: string[]\n): void {\n  const missing = fields.filter(field => !data[field]);\n  if (missing.length > 0) {\n    throw new ValidationError(\n      `Missing required fields: ${missing.join(', ')}`,\n      { missingFields: missing }\n    );\n  }\n}\n\n// Type validation helper\nexport function validateType(\n  value: any,\n  type: 'string' | 'number' | 'boolean' | 'array' | 'object',\n  fieldName: string\n): void {\n  let isValid = false;\n\n  switch (type) {\n    case 'string':\n      isValid = typeof value === 'string';\n      break;\n    case 'number':\n      isValid = typeof value === 'number' && !isNaN(value);\n      break;\n    case 'boolean':\n      isValid = typeof value === 'boolean';\n      break;\n    case 'array':\n      isValid = Array.isArray(value);\n      break;\n    case 'object':\n      isValid = value !== null && typeof value === 'object' && !Array.isArray(value);\n      break;\n  }\n\n  if (!isValid) {\n    throw new ValidationError(\n      `Invalid type for ${fieldName}: expected ${type}`,\n      { field: fieldName, expectedType: type, actualType: typeof value }\n    );\n  }\n}\n\n// Alias for errorHandler (for compatibility)\nexport const handleError = errorHandler;", "import type { Context, MiddlewareHandler } from 'hono';\nimport type { AppBindings as Env } from '../index';\n\n// \uBA54\uD2B8\uB9AD \uD0C0\uC785 \uC815\uC758\ninterface RequestMetrics {\n    // \uAE30\uBCF8 \uBA54\uD2B8\uB9AD\n    method: string;\n    path: string;\n    status: number;\n    duration: number;\n    cpuTime: number;\n\n    // \uCD94\uAC00 \uBA54\uD2B8\uB9AD\n    userAgent?: string;\n    country?: string;\n    city?: string;\n    colo?: string;\n    tlsVersion?: string;\n    httpProtocol?: string;\n\n    // \uC5D0\uB7EC \uC815\uBCF4\n    error?: string;\n    errorType?: string;\n\n    // AI \uBA54\uD2B8\uB9AD\n    aiModel?: string;\n    aiTokensUsed?: number;\n    aiDuration?: number;\n\n    // \uCE90\uC2DC \uBA54\uD2B8\uB9AD\n    cacheStatus?: string;\n    cacheHit?: boolean;\n}\n\n// \uBD84\uC11D \uC774\uBCA4\uD2B8 \uD0C0\uC785\ninterface AnalyticsEvent {\n    timestamp: number;\n    type: 'api_request' | 'ai_usage' | 'error' | 'performance';\n    metrics: RequestMetrics;\n    metadata?: Record<string, any>;\n}\n\n// \uC131\uB2A5 \uC784\uACC4\uAC12\nconst PERFORMANCE_THRESHOLDS = {\n    duration: {\n        good: 100,     // 100ms \uC774\uD558\n        warning: 500,  // 500ms \uC774\uD558\n        critical: 1000 // 1\uCD08 \uC774\uC0C1\n    },\n    cpuTime: {\n        good: 50,      // 50ms \uC774\uD558\n        warning: 200,  // 200ms \uC774\uD558\n        critical: 500  // 500ms \uC774\uC0C1\n    }\n};\n\n// \uBD84\uC11D \uBBF8\uB4E4\uC6E8\uC5B4\nexport const analyticsMiddleware: MiddlewareHandler = async (c, next) => {\n    const startTime = Date.now();\n    const startCpu = (c.executionCtx as any).cpuTime || 0;\n\n    // \uC694\uCCAD \uC815\uBCF4 \uC218\uC9D1\n    const request = c.req.raw;\n    const url = new URL(request.url);\n    const cf = request.cf as any;\n\n    try {\n        // \uB2E4\uC74C \uBBF8\uB4E4\uC6E8\uC5B4/\uD578\uB4E4\uB7EC \uC2E4\uD589\n        await next();\n\n        // \uC751\uB2F5 \uD6C4 \uBA54\uD2B8\uB9AD \uC218\uC9D1\n        const duration = Date.now() - startTime;\n        const cpuTime = ((c.executionCtx as any).cpuTime || 0) - startCpu;\n        const status = c.res.status;\n\n        // \uAE30\uBCF8 \uBA54\uD2B8\uB9AD\n        const metrics: RequestMetrics = {\n            method: request.method,\n            path: url.pathname,\n            status,\n            duration,\n            cpuTime,\n            userAgent: request.headers.get('user-agent') || undefined,\n            country: cf?.country,\n            city: cf?.city,\n            colo: cf?.colo,\n            tlsVersion: cf?.tlsVersion,\n            httpProtocol: cf?.httpProtocol,\n            cacheStatus: c.res.headers.get('cf-cache-status') || undefined,\n            cacheHit: c.res.headers.get('cf-cache-status') === 'HIT'\n        };\n\n        // AI \uBA54\uD2B8\uB9AD \uCD94\uAC00 (\uC788\uB294 \uACBD\uC6B0)\n        const aiMetrics = c.get('aiMetrics');\n        if (aiMetrics) {\n            metrics.aiModel = aiMetrics.model;\n            metrics.aiTokensUsed = aiMetrics.tokensUsed;\n            metrics.aiDuration = aiMetrics.duration;\n        }\n\n        // \uC5D0\uB7EC \uC815\uBCF4 \uCD94\uAC00 (\uC788\uB294 \uACBD\uC6B0)\n        if (status >= 400) {\n            const error = c.get('error');\n            if (error) {\n                metrics.error = error.message;\n                metrics.errorType = error.type || 'unknown';\n            }\n        }\n\n        // Analytics Engine\uC5D0 \uC804\uC1A1\n        await sendToAnalyticsEngine(c.env, {\n            timestamp: Date.now(),\n            type: 'api_request',\n            metrics,\n            metadata: {\n                environment: c.env.ENVIRONMENT,\n                version: c.env.API_VERSION\n            }\n        });\n\n        // \uC131\uB2A5 \uACBD\uACE0 \uCCB4\uD06C\n        checkPerformanceThresholds(metrics, c.env);\n\n        // \uC751\uB2F5 \uD5E4\uB354\uC5D0 \uC11C\uBC84 \uD0C0\uC774\uBC0D \uCD94\uAC00\n        c.res.headers.set('Server-Timing', [\n            `cpu;dur=${cpuTime.toFixed(2)}`,\n            `total;dur=${duration.toFixed(2)}`,\n            cf?.colo ? `colo;desc=\"${cf.colo}\"` : null\n        ].filter(Boolean).join(', '));\n\n    } catch (error) {\n        console.error('Analytics middleware error:', error);\n        // \uBD84\uC11D \uC624\uB958\uAC00 \uC694\uCCAD\uC744 \uC2E4\uD328\uC2DC\uD0A4\uC9C0 \uC54A\uB3C4\uB85D \uD568\n    }\n};\n\n// Analytics Engine\uC5D0 \uC774\uBCA4\uD2B8 \uC804\uC1A1\nasync function sendToAnalyticsEngine(env: Env, event: AnalyticsEvent) {\n    if (!env.ANALYTICS) return;\n\n    try {\n        const statusIndex = event.metrics.status != null\n            ? event.metrics.status.toString()\n            : 'unknown';\n\n        await (env.ANALYTICS as any).writeDataPoint({\n            blobs: [\n                event.type,\n                event.metrics.method,\n                event.metrics.path,\n                event.metrics.error || '',\n                event.metrics.aiModel || '',\n                event.metrics.country || '',\n                event.metrics.cacheStatus || '',\n                event.metadata?.environment || '',\n                event.metadata?.version || ''\n            ],\n            doubles: [\n                event.metrics.duration,\n                event.metrics.cpuTime,\n                event.metrics.aiTokensUsed || 0,\n                event.metrics.aiDuration || 0,\n                event.metrics.cacheHit ? 1 : 0\n            ],\n            indexes: [statusIndex]\n        });\n    } catch (error) {\n        console.error('Failed to write to Analytics Engine:', error);\n    }\n}\n\n// \uC131\uB2A5 \uC784\uACC4\uAC12 \uCCB4\uD06C \uBC0F \uACBD\uACE0\nfunction checkPerformanceThresholds(metrics: RequestMetrics, env: Env) {\n    const { duration, cpuTime } = metrics;\n\n    // Duration \uCCB4\uD06C\n    let durationLevel: 'good' | 'warning' | 'critical' = 'good';\n    if (duration > PERFORMANCE_THRESHOLDS.duration.critical) {\n        durationLevel = 'critical';\n    } else if (duration > PERFORMANCE_THRESHOLDS.duration.warning) {\n        durationLevel = 'warning';\n    }\n\n    // CPU Time \uCCB4\uD06C\n    let cpuLevel: 'good' | 'warning' | 'critical' = 'good';\n    if (cpuTime > PERFORMANCE_THRESHOLDS.cpuTime.critical) {\n        cpuLevel = 'critical';\n    } else if (cpuTime > PERFORMANCE_THRESHOLDS.cpuTime.warning) {\n        cpuLevel = 'warning';\n    }\n\n    // \uACBD\uACE0 \uB85C\uAE45\n    if (durationLevel !== 'good' || cpuLevel !== 'good') {\n        console.warn('Performance threshold exceeded:', {\n            path: metrics.path,\n            duration: `${duration}ms (${durationLevel})`,\n            cpuTime: `${cpuTime}ms (${cpuLevel})`,\n            status: metrics.status\n        });\n    }\n}\n\n// \uC5D0\uB7EC \uCD94\uC801 \uBBF8\uB4E4\uC6E8\uC5B4\nexport const errorTrackingMiddleware: MiddlewareHandler = async (c, next) => {\n    try {\n        await next();\n    } catch (error: any) {\n        // \uC5D0\uB7EC \uC815\uBCF4 \uC800\uC7A5\n        c.set('error', {\n            message: error.message,\n            type: error.constructor.name,\n            stack: error.stack\n        });\n\n        // \uC5D0\uB7EC \uC774\uBCA4\uD2B8 \uC804\uC1A1\n        await sendToAnalyticsEngine(c.env, {\n            timestamp: Date.now(),\n            type: 'error',\n            metrics: {\n                method: c.req.method,\n                path: new URL(c.req.url).pathname,\n                status: 500,\n                duration: 0,\n                cpuTime: 0,\n                error: error.message,\n                errorType: error.constructor.name\n            },\n            metadata: {\n                stack: error.stack,\n                environment: c.env.ENVIRONMENT\n            }\n        });\n\n        // \uC5D0\uB7EC \uC7AC\uBC1C\uC0DD\n        throw error;\n    }\n};\n\n// \uBA54\uD2B8\uB9AD \uC9D1\uACC4 \uD568\uC218\nexport async function getAggregatedMetrics(\n    env: Env,\n    timeRange: { start: Date; end: Date },\n    groupBy?: 'path' | 'status' | 'country'\n): Promise<any> {\n    if (!env.ANALYTICS) return null;\n    try {\n        const result = await (env.ANALYTICS as any)?.query?.({\n            timeRange: [timeRange.start, timeRange.end],\n            filter: { blob1: 'api_request' },\n            aggregations: {\n                count: { count: {} },\n                avgDuration: { avg: { field: 'double1' } },\n                avgCpuTime: { avg: { field: 'double2' } },\n                p95Duration: { quantile: { field: 'double1', quantile: 0.95 } },\n                p95CpuTime: { quantile: { field: 'double2', quantile: 0.95 } }\n            },\n            groupBy: groupBy ? [`blob${getFieldIndex(groupBy)}`] : undefined\n        });\n        return result ?? null;\n    } catch (error) {\n        console.error('Failed to query Analytics Engine:', error);\n        return null;\n    }\n}\n\n// \uD544\uB4DC \uC778\uB371\uC2A4 \uB9E4\uD551\nfunction getFieldIndex(field: string): number {\n    const fieldMap: Record<string, number> = {\n        'path': 3,\n        'status': 1,\n        'country': 2\n    };\n    return fieldMap[field] || 1;\n}\n\n// \uC2E4\uC2DC\uAC04 \uBA54\uD2B8\uB9AD \uC2A4\uD2B8\uB9BC (WebSocket)\nexport async function streamMetrics(ws: WebSocket, env: Env) {\n    const interval = setInterval(async () => {\n        try {\n            // \uCD5C\uADFC 1\uBD84\uAC04\uC758 \uBA54\uD2B8\uB9AD \uC870\uD68C\n            const metrics = await getAggregatedMetrics(env, {\n                start: new Date(Date.now() - 60000),\n                end: new Date()\n            });\n\n            if (metrics && ws.readyState === WebSocket.OPEN) {\n                ws.send(JSON.stringify({\n                    type: 'metrics_update',\n                    timestamp: Date.now(),\n                    data: metrics\n                }));\n            }\n        } catch (error) {\n            console.error('Failed to stream metrics:', error);\n        }\n    }, 5000); // 5\uCD08\uB9C8\uB2E4 \uC5C5\uB370\uC774\uD2B8\n\n    // WebSocket \uC885\uB8CC \uC2DC \uC815\uB9AC\n    ws.addEventListener('close', () => {\n        clearInterval(interval);\n    });\n}\n", "import type { D1Database, D1Result } from '@cloudflare/workers-types';\n\nexport type D1Value = string | number | boolean | null;\n\nexport async function query<T = unknown>(\n  db: D1Database,\n  sql: string,\n  params: D1Value[] = []\n): Promise<T[]> {\n  const result = await db.prepare(sql).bind(...params).all<T>();\n  return result.results ?? [];\n}\n\nexport async function queryFirst<T = unknown>(\n  db: D1Database,\n  sql: string,\n  params: D1Value[] = []\n): Promise<T | null> {\n  const rows = await query<T>(db, sql, params);\n  return rows.length > 0 ? rows[0] : null;\n}\n\nexport async function execute(\n  db: D1Database,\n  sql: string,\n  params: D1Value[] = []\n): Promise<D1Result> {\n  return db.prepare(sql).bind(...params).run();\n}\n\nexport async function transaction<T>(\n  db: D1Database,\n  statements: Array<{ sql: string; params?: D1Value[] }>,\n  reducer?: (result: D1Result, index: number, acc: T | undefined) => T\n): Promise<T | undefined> {\n  let accumulator: T | undefined = undefined;\n\n  await db.batch(\n    statements.map(({ sql, params }) => db.prepare(sql).bind(...(params ?? [])))\n  ).then((results) => {\n    if (reducer) {\n      results.forEach((res, index) => {\n        accumulator = reducer(res, index, accumulator);\n      });\n    }\n  });\n\n  return accumulator;\n}\n\n", "import { sign } from 'hono/jwt';\nimport type { Env } from '../index';\nimport type { AuthUser } from '../types';\nimport { assertEnvVar, generateState, hashSha256 } from '../utils/security';\nimport { queryFirst, execute, transaction } from '../utils/db';\n\ninterface ProviderConfig {\n  clientId: string;\n  clientSecret: string;\n  redirectUri: string;\n}\n\ntype OAuthProvider = 'naver' | 'google';\n\ninterface StatePayload {\n  provider: OAuthProvider;\n  redirectUri: string;\n  callbackUrl?: string;\n  createdAt: string;\n}\n\ninterface DbUserRow {\n  user_id: string;\n  user_identity: string;\n  email: string | null;\n  name: string | null;\n  english_name: string | null;\n  profile_image: string | null;\n  self_bio: string | null;\n  gender: string | null;\n}\n\ninterface IssueTokenOptions {\n  env: Env;\n  userId: string;\n  email?: string | null;\n  role?: string | null;\n  permissions?: string[];\n  userAgent?: string;\n  ipAddress?: string;\n  replaceTokenId?: string;\n}\n\nexport interface OAuthCallbackResult {\n  user: AuthUser;\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: number;\n  redirectUri: string;\n  callbackUrl?: string;\n}\n\nconst DEFAULT_ACCESS_TOKEN_TTL_SECONDS = 24 * 60 * 60; // 24\uC2DC\uAC04\nconst DEFAULT_REFRESH_TOKEN_TTL_SECONDS = 7 * 24 * 60 * 60; // 7\uC77C\n\nfunction resolveNumericEnv(value: string | undefined, fallback: number): number {\n  if (!value) return fallback;\n  const parsed = Number(value);\n  if (Number.isFinite(parsed) && parsed > 0) {\n    return Math.floor(parsed);\n  }\n  return fallback;\n}\n\nfunction getAccessTokenTtl(env: Env): number {\n  return resolveNumericEnv(env.ACCESS_TOKEN_TTL_SECONDS, DEFAULT_ACCESS_TOKEN_TTL_SECONDS);\n}\n\nfunction getRefreshTokenTtl(env: Env): number {\n  return resolveNumericEnv(env.REFRESH_TOKEN_TTL_SECONDS, DEFAULT_REFRESH_TOKEN_TTL_SECONDS);\n}\n\nfunction getJwtIssuer(env: Env): string {\n  return env.JWT_ISSUER ?? env.API_BASE_URL ?? 'https://api.languagemate.kr';\n}\n\nconst NAVER_AUTHORIZE_URL = 'https://nid.naver.com/oauth2.0/authorize';\nconst NAVER_TOKEN_URL = 'https://nid.naver.com/oauth2.0/token';\nconst NAVER_USERINFO_URL = 'https://openapi.naver.com/v1/nid/me';\n\nconst GOOGLE_AUTHORIZE_URL = 'https://accounts.google.com/o/oauth2/v2/auth';\nconst GOOGLE_TOKEN_URL = 'https://oauth2.googleapis.com/token';\nconst GOOGLE_USERINFO_URL = 'https://www.googleapis.com/oauth2/v2/userinfo';\n\nfunction getProviderConfig(env: Env, provider: OAuthProvider): ProviderConfig {\n  switch (provider) {\n    case 'naver':\n      return {\n        clientId: assertEnvVar(env.NAVER_CLIENT_ID, 'NAVER_CLIENT_ID'),\n        clientSecret: assertEnvVar(env.NAVER_CLIENT_SECRET, 'NAVER_CLIENT_SECRET'),\n        redirectUri: assertEnvVar(env.NAVER_REDIRECT_URI, 'NAVER_REDIRECT_URI')\n      };\n    case 'google':\n      return {\n        clientId: assertEnvVar(env.GOOGLE_CLIENT_ID, 'GOOGLE_CLIENT_ID'),\n        clientSecret: assertEnvVar(env.GOOGLE_CLIENT_SECRET, 'GOOGLE_CLIENT_SECRET'),\n        redirectUri: assertEnvVar(env.GOOGLE_REDIRECT_URI, 'GOOGLE_REDIRECT_URI')\n      };\n    default:\n      throw new Error(`Unsupported provider: ${provider}`);\n  }\n}\n\nfunction normalizeProvider(provider: string): OAuthProvider {\n  const value = provider.toLowerCase();\n  if (value !== 'naver' && value !== 'google') {\n    throw new Error(`Invalid OAuth provider: ${provider}`);\n  }\n  return value;\n}\n\nasync function upsertOAuthUser(\n  env: Env,\n  identity: string,\n  provider: OAuthProvider,\n  payload: { name?: string | null; email?: string | null; profileImage?: string | null }\n): Promise<DbUserRow> {\n  const existing = await queryFirst<DbUserRow>(\n    env.DB,\n    'SELECT user_id, user_identity, email, name, english_name, profile_image, self_bio, gender FROM users WHERE user_identity = ? LIMIT 1',\n    [identity]\n  );\n\n  const nowIso = new Date().toISOString();\n\n  if (existing) {\n    const updates: string[] = [];\n    const params: (string | null)[] = [];\n\n    if (payload.name) {\n      updates.push('name = ?');\n      params.push(payload.name);\n    }\n    if (payload.email) {\n      updates.push('email = ?');\n      params.push(payload.email);\n    }\n    if (payload.profileImage) {\n      updates.push('profile_image = ?');\n      params.push(payload.profileImage);\n    }\n\n    if (updates.length > 0) {\n      updates.push('updated_at = ?');\n      params.push(nowIso);\n      params.push(existing.user_id);\n      await execute(env.DB, `UPDATE users SET ${updates.join(', ')} WHERE user_id = ?`, params);\n    }\n\n    return {\n      ...existing,\n      email: payload.email ?? existing.email,\n      name: payload.name ?? existing.name,\n      profile_image: payload.profileImage ?? existing.profile_image\n    };\n  }\n\n  const userId = crypto.randomUUID();\n  await execute(\n    env.DB,\n    `INSERT INTO users (\n        user_id,\n        user_identity,\n        email,\n        name,\n        profile_image,\n        user_disable,\n        is_onboarding_completed,\n        user_identity_type,\n        user_created_at,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, 0, 0, ?, ?, ?, ?)\n    `,\n    [\n      userId,\n      identity,\n      payload.email ?? null,\n      payload.name ?? null,\n      payload.profileImage ?? null,\n      provider.toUpperCase(),\n      nowIso,\n      nowIso,\n      nowIso\n    ]\n  );\n\n  return {\n    user_id: userId,\n    user_identity: identity,\n    email: payload.email ?? null,\n    name: payload.name ?? null,\n    english_name: null,\n    profile_image: payload.profileImage ?? null,\n    self_bio: null,\n    gender: null\n  };\n}\n\nasync function issueTokens(options: IssueTokenOptions): Promise<{ accessToken: string; refreshToken: string; expiresIn: number }> {\n  const {\n    env,\n    userId,\n    email,\n    role = 'USER',\n    permissions = [],\n    userAgent,\n    ipAddress,\n    replaceTokenId\n  } = options;\n\n  const secret = assertEnvVar(env.JWT_SECRET, 'JWT_SECRET');\n  const accessTokenTtl = getAccessTokenTtl(env);\n  const refreshTokenTtl = getRefreshTokenTtl(env);\n  const issuer = getJwtIssuer(env);\n  const nowSeconds = Math.floor(Date.now() / 1000);\n  const expiresAtSeconds = nowSeconds + accessTokenTtl;\n\n  const payload = {\n    sub: userId,\n    email,\n    role,\n    permissions,\n    iat: nowSeconds,\n    exp: expiresAtSeconds,\n    iss: issuer\n  } as Record<string, unknown>;\n\n  const accessToken = await sign(payload, secret, 'HS512');\n\n  const refreshId = crypto.randomUUID();\n  const refreshPayload = {\n    jti: refreshId,\n    sub: userId,\n    type: 'refresh',\n    iat: nowSeconds,\n    exp: nowSeconds + refreshTokenTtl,\n    iss: issuer\n  } as Record<string, unknown>;\n  const refreshToken = await sign(refreshPayload, secret, 'HS512');\n  const refreshHash = await hashSha256(refreshToken);\n  const issuedAtIso = new Date(nowSeconds * 1000).toISOString();\n  const refreshExpiresAtIso = new Date((nowSeconds + refreshTokenTtl) * 1000).toISOString();\n\n  await transaction(env.DB, [\n    ...(replaceTokenId\n      ? [\n          {\n            sql: 'UPDATE refresh_tokens SET revoked_at = ? WHERE token_id = ?',\n            params: [issuedAtIso, replaceTokenId]\n          }\n        ]\n      : []),\n    {\n      sql: `INSERT INTO refresh_tokens (\n              token_id,\n              user_id,\n              token_hash,\n              issued_at,\n              expires_at,\n              user_agent,\n              ip_address\n            ) VALUES (?, ?, ?, ?, ?, ?, ?)` ,\n      params: [refreshId, userId, refreshHash, issuedAtIso, refreshExpiresAtIso, userAgent ?? null, ipAddress ?? null]\n    }\n  ]);\n\n  return {\n    accessToken,\n    refreshToken,\n    expiresIn: accessTokenTtl\n  };\n}\n\nasync function getUserById(env: Env, userId: string): Promise<DbUserRow | null> {\n  return queryFirst<DbUserRow>(\n    env.DB,\n    'SELECT user_id, user_identity, email, name, english_name, profile_image, self_bio, gender FROM users WHERE user_id = ? LIMIT 1',\n    [userId]\n  );\n}\n\nfunction mapDbUserToAuthUser(row: DbUserRow): AuthUser {\n  return {\n    id: row.user_id,\n    email: row.email ?? undefined,\n    role: 'USER',\n    permissions: []\n  };\n}\n\nasync function consumeState(env: Env, state?: string): Promise<StatePayload | null> {\n  if (!state) {\n    return null;\n  }\n  const key = `oauth:state:${state}`;\n  const value = await env.CACHE.get(key, { type: 'json' });\n  if (value) {\n    await env.CACHE.delete(key);\n  }\n  return value as StatePayload | null;\n}\n\nexport async function generateLoginUrl(\n  env: Env,\n  providerName: string,\n  redirectUri?: string\n): Promise<{ url: string; state: string }> {\n  const provider = normalizeProvider(providerName);\n  const config = getProviderConfig(env, provider);\n  const state = generateState(provider);\n\n  // redirectUri\uB294 \uB85C\uADF8\uC778 \uC644\uB8CC \uD6C4 \uD504\uB860\uD2B8\uC5D4\uB4DC\uB85C \uB9AC\uB2E4\uC774\uB809\uD2B8\uD560 URL (target)\n  // OAuth redirect_uri\uB294 \uD56D\uC0C1 config.redirectUri \uC0AC\uC6A9 (\uB124\uC774\uBC84/\uAD6C\uAE00\uC5D0 \uB4F1\uB85D\uB41C \uAC83)\n  const baseRedirect = redirectUri || 'https://languagemate.kr';\n  const callbackUrl = (() => {\n    try {\n      return new URL(`/login/oauth2/code/${provider}`, baseRedirect).toString();\n    } catch {\n      return `https://languagemate.kr/login/oauth2/code/${provider}`;\n    }\n  })();\n\n  const statePayload: StatePayload = {\n    provider,\n    redirectUri: baseRedirect,  // \uCD5C\uC885 \uB9AC\uB2E4\uC774\uB809\uD2B8 \uBAA9\uC801\uC9C0\n    callbackUrl,\n    createdAt: new Date().toISOString()\n  };\n\n  await env.CACHE.put(`oauth:state:${state}`, JSON.stringify(statePayload), {\n    expirationTtl: 300\n  });\n\n  const authorizeUrl = new URL(provider === 'naver' ? NAVER_AUTHORIZE_URL : GOOGLE_AUTHORIZE_URL);\n  authorizeUrl.searchParams.set('response_type', 'code');\n  authorizeUrl.searchParams.set('client_id', config.clientId);\n  authorizeUrl.searchParams.set('redirect_uri', config.redirectUri);  // \uD56D\uC0C1 OAuth \uC571\uC5D0 \uB4F1\uB85D\uB41C URL \uC0AC\uC6A9\n  authorizeUrl.searchParams.set('state', state);\n\n  if (provider === 'google') {\n    authorizeUrl.searchParams.set('scope', 'openid email profile');\n    authorizeUrl.searchParams.set('access_type', 'offline');\n    authorizeUrl.searchParams.set('prompt', 'consent');\n  }\n\n  return {\n    url: authorizeUrl.toString(),\n    state\n  };\n}\n\nexport async function handleOAuthCallback(\n  env: Env,\n  providerName: string,\n  params: { code: string; state?: string },\n  metadata: { userAgent?: string; ipAddress?: string } = {}\n): Promise<OAuthCallbackResult> {\n  const provider = normalizeProvider(providerName);\n  const config = getProviderConfig(env, provider);\n  const statePayload = await consumeState(env, params.state);\n\n  // redirectUri\uB294 \uCD5C\uC885 \uD504\uB860\uD2B8\uC5D4\uB4DC \uB9AC\uB2E4\uC774\uB809\uD2B8 \uBAA9\uC801\uC9C0\n  const finalRedirectUri = statePayload?.redirectUri ?? 'https://languagemate.kr';\n  const callbackUrl = statePayload?.callbackUrl ?? (() => {\n    try {\n      return new URL(`/login/oauth2/code/${provider}`, finalRedirectUri).toString();\n    } catch {\n      return `https://languagemate.kr/login/oauth2/code/${provider}`;\n    }\n  })();\n\n  if (statePayload && statePayload.provider !== provider) {\n    throw new Error('OAuth provider mismatch for provided state');\n  }\n\n  // OAuth \uD1A0\uD070 \uAD50\uD658\uC5D0\uB294 config.redirectUri \uC0AC\uC6A9 (OAuth \uC571\uC5D0 \uB4F1\uB85D\uB41C \uAC83)\n  const result = provider === 'naver'\n    ? await handleNaverCallback(env, config, params.code, params.state, config.redirectUri, metadata)\n    : await handleGoogleCallback(env, config, params.code, config.redirectUri, metadata);\n\n  return {\n    ...result,\n    redirectUri: finalRedirectUri,\n    callbackUrl\n  };\n}\n\nasync function handleNaverCallback(\n  env: Env,\n  config: ProviderConfig,\n  code: string,\n  state: string | undefined,\n  redirectUri: string,\n  metadata: { userAgent?: string; ipAddress?: string }\n): Promise<OAuthCallbackResult> {\n  const body = new URLSearchParams({\n    grant_type: 'authorization_code',\n    client_id: config.clientId,\n    client_secret: config.clientSecret,\n    code,\n    state: state ?? '',\n    redirect_uri: redirectUri\n  });\n\n  const tokenRes = await fetch(NAVER_TOKEN_URL, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body\n  });\n\n  if (!tokenRes.ok) {\n    throw new Error(`Naver token exchange failed: ${tokenRes.status}`);\n  }\n\n  const tokenJson = await tokenRes.json() as { access_token?: string };\n  const accessToken = tokenJson.access_token;\n  if (!accessToken) {\n    throw new Error('Naver token exchange response missing access_token');\n  }\n\n  const profileRes = await fetch(NAVER_USERINFO_URL, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  });\n\n  if (!profileRes.ok) {\n    throw new Error(`Naver userinfo request failed: ${profileRes.status}`);\n  }\n\n  const profileJson = await profileRes.json() as { response?: Record<string, any> };\n  const response = profileJson.response ?? {};\n  const identity = response.id as string;\n\n  if (!identity) {\n    throw new Error('Naver userinfo did not include id');\n  }\n\n  const userRow = await upsertOAuthUser(env, identity, 'naver', {\n    name: response.name ?? response.nickname ?? null,\n    email: response.email ?? null,\n    profileImage: response.profile_image ?? null\n  });\n\n  const tokens = await issueTokens({\n    env,\n    userId: userRow.user_id,\n    email: userRow.email,\n    role: 'USER',\n    permissions: [],\n    userAgent: metadata.userAgent,\n    ipAddress: metadata.ipAddress\n  });\n\n  return {\n    user: mapDbUserToAuthUser(userRow),\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    expiresIn: tokens.expiresIn,\n    redirectUri\n  };\n}\n\nasync function handleGoogleCallback(\n  env: Env,\n  config: ProviderConfig,\n  code: string,\n  redirectUri: string,\n  metadata: { userAgent?: string; ipAddress?: string }\n): Promise<OAuthCallbackResult> {\n  const body = new URLSearchParams({\n    grant_type: 'authorization_code',\n    client_id: config.clientId,\n    client_secret: config.clientSecret,\n    code,\n    redirect_uri: redirectUri\n  });\n\n  const tokenRes = await fetch(GOOGLE_TOKEN_URL, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body\n  });\n\n  if (!tokenRes.ok) {\n    throw new Error(`Google token exchange failed: ${tokenRes.status}`);\n  }\n\n  const tokenJson = await tokenRes.json() as { access_token?: string };\n  const accessToken = tokenJson.access_token;\n\n  if (!accessToken) {\n    throw new Error('Google token exchange response missing access_token');\n  }\n\n  const profileRes = await fetch(GOOGLE_USERINFO_URL, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  });\n\n  if (!profileRes.ok) {\n    throw new Error(`Google userinfo request failed: ${profileRes.status}`);\n  }\n\n  const profileJson = await profileRes.json() as { id?: string; email?: string; name?: string; picture?: string };\n  if (!profileJson.id) {\n    throw new Error('Google userinfo did not include id');\n  }\n\n  const userRow = await upsertOAuthUser(env, profileJson.id, 'google', {\n    name: profileJson.name ?? null,\n    email: profileJson.email ?? null,\n    profileImage: profileJson.picture ?? null\n  });\n\n  const tokens = await issueTokens({\n    env,\n    userId: userRow.user_id,\n    email: userRow.email,\n    role: 'USER',\n    permissions: [],\n    userAgent: metadata.userAgent,\n    ipAddress: metadata.ipAddress\n  });\n\n  return {\n    user: mapDbUserToAuthUser(userRow),\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    expiresIn: tokens.expiresIn,\n    redirectUri\n  };\n}\n\nexport async function refreshTokens(\n  env: Env,\n  refreshToken: string,\n  metadata: { userAgent?: string; ipAddress?: string } = {}\n): Promise<{ accessToken: string; refreshToken: string; expiresIn: number }> {\n  const refreshHash = await hashSha256(refreshToken);\n  const row = await queryFirst<{\n    token_id: string;\n    user_id: string;\n    expires_at: string;\n    revoked_at: string | null;\n  }>(\n    env.DB,\n    'SELECT token_id, user_id, expires_at, revoked_at FROM refresh_tokens WHERE token_hash = ? LIMIT 1',\n    [refreshHash]\n  );\n\n  if (!row) {\n    throw new Error('Invalid refresh token');\n  }\n\n  if (row.revoked_at) {\n    throw new Error('Refresh token revoked');\n  }\n\n  if (Date.parse(row.expires_at) < Date.now()) {\n    throw new Error('Refresh token expired');\n  }\n\n  const user = await getUserById(env, row.user_id);\n  if (!user) {\n    throw new Error('User not found for refresh token');\n  }\n\n  return issueTokens({\n    env,\n    userId: user.user_id,\n    email: user.email,\n    role: 'USER',\n    permissions: [],\n    userAgent: metadata.userAgent,\n    ipAddress: metadata.ipAddress,\n    replaceTokenId: row.token_id\n  });\n}\n\nexport async function logoutUser(\n  env: Env,\n  _accessToken: string,\n  refreshToken?: string\n): Promise<void> {\n  if (!refreshToken) {\n    return;\n  }\n\n  const refreshHash = await hashSha256(refreshToken);\n  await execute(\n    env.DB,\n    'UPDATE refresh_tokens SET revoked_at = ? WHERE token_hash = ?',\n    [new Date().toISOString(), refreshHash]\n  );\n}\n", "import { Hono, type MiddlewareHandler } from 'hono';\nimport type { D1Database, ExportedHandler } from '@cloudflare/workers-types';\nimport { cors } from 'hono/cors';\nimport { timing } from 'hono/timing';\nimport { levelTestRoutes } from './routes/levelTest';\nimport { webrtcRoutes } from './routes/webrtc';\nimport { uploadRoutes } from './routes/upload';\nimport whisperRoutes from './routes/whisper';\nimport llmRoutes from './routes/llm';\nimport imagesRoutes from './routes/images';\nimport transcribeRoutes from './routes/transcribe';\nimport cacheRoutes from './routes/cache';\nimport translateRoutes from './routes/translate';\nimport { analyticsRoutes } from './routes/analytics';\nimport internalRoutes from './routes/internal';\nimport authRoutes from './routes/auth';\nimport userRoutes from './routes/users';\nimport onboardingRoutes from './routes/onboarding';\nimport sessionsRoutes from './routes/sessions';\nimport notificationsRoutes from './routes/notifications';\nimport groupSessionsRoutes from './routes/groupSessions';\nimport groupSessionsAIRoutes from './routes/groupSessionsAI';\nimport presenceRoutes from './routes/presence';\nimport matchingRoutes from './routes/matching';\nimport achievementsRoutes from './routes/achievements';\nimport chatRoutes from './routes/chat';\nimport settingsRoutes from './routes/settings';\nimport { WebRTCRoom } from './durable/WebRTCRoom';\nimport { UserPresence } from './durable/UserPresence';\nimport { ChatHub } from './durable/ChatHub';\nimport { errorHandler, notFoundHandler } from './middleware';\nimport { analyticsMiddleware, errorTrackingMiddleware } from './middleware/analytics';\nimport { successResponse } from './utils/response';\nimport { Variables } from './types';\nimport { setInactiveUsersOffline } from './services/userStatus';\nimport { processScheduledNotifications } from './services/notifications';\nimport { handleNotificationWebSocket } from './websocket/notificationSocket';\n\n// Export Durable Object\nexport { WebRTCRoom, UserPresence, ChatHub };\n\n// Type definitions for bindings\nexport interface AppBindings {\n  AI: Ai;\n  ROOM: DurableObjectNamespace;\n  USER_PRESENCE: DurableObjectNamespace;\n  CHAT_HUB: DurableObjectNamespace;\n  STORAGE: R2Bucket;\n  CACHE: KVNamespace;\n  ANALYTICS?: AnalyticsEngineDataset;\n  ENVIRONMENT: string;\n  CORS_ORIGIN: string;\n  JWT_SECRET?: string;\n  API_KEYS?: string;\n  INTERNAL_SECRET?: string;\n  INTERNAL_API_KEY?: string;\n  API_VERSION?: string;\n  DB: D1Database;\n  API_BASE_URL?: string;\n  NAVER_CLIENT_ID?: string;\n  NAVER_CLIENT_SECRET?: string;\n  NAVER_REDIRECT_URI?: string;\n  GOOGLE_CLIENT_ID?: string;\n  GOOGLE_CLIENT_SECRET?: string;\n  GOOGLE_REDIRECT_URI?: string;\n  ACCESS_TOKEN_TTL_SECONDS?: string;\n  REFRESH_TOKEN_TTL_SECONDS?: string;\n  JWT_ISSUER?: string;\n}\n\n// Export Env type for other modules\nexport type Env = AppBindings;\n\nexport const scheduled: ExportedHandler<AppBindings>['scheduled'] = async (controller, env, ctx) => {\n  const job = (async () => {\n    try {\n      const changed = await setInactiveUsersOffline(env, 15);\n      if (changed > 0) {\n        console.log(`[presence-cron] Marked ${changed} users offline.`);\n      }\n    } catch (error) {\n      console.error('[presence-cron] Failed to update inactive users', error);\n    }\n    try {\n      const delivered = await processScheduledNotifications(env);\n      if (delivered > 0) {\n        console.log(`[notifications-cron] Delivered ${delivered} scheduled notifications.`);\n      }\n    } catch (error) {\n      console.error('[notifications-cron] Failed to process scheduled notifications', error);\n    }\n  })();\n  ctx.waitUntil(job);\n};\n\n// API \uBC84\uC804\nconst API_VERSION = 'v1';\n\n// Create Hono app with typed context\nexport const app = new Hono<{ Bindings: AppBindings; Variables: Variables }>();\n\n// \uACF5\uD1B5 \uC5D0\uB7EC \uD578\uB4E4\uB7EC\uB97C \uCD5C\uC0C1\uB2E8\uC5D0 \uB4F1\uB85D\uD574 ApiError\uB97C \uC62C\uBC14\uB978 \uC0C1\uD0DC\uCF54\uB4DC\uB85C \uBCC0\uD658\napp.use('*', errorHandler);\n\n// Analytics \uBC0F \uC5D0\uB7EC \uCD94\uC801 \uBBF8\uB4E4\uC6E8\uC5B4\napp.use(errorTrackingMiddleware);\napp.use(analyticsMiddleware);\n\n// CORS middleware\napp.use('*', async (c, next) => {\n  // CORS_ORIGIN\uC774 \uCF64\uB9C8\uB85C \uAD6C\uBD84\uB41C \uC5EC\uB7EC \uB3C4\uBA54\uC778\uC77C \uC218 \uC788\uC74C\n  const corsOrigin = c.env?.CORS_ORIGIN || 'http://localhost:3000';\n  const allowedOrigins = corsOrigin.split(',').map(o => o.trim());\n\n  const corsMiddleware = cors({\n    origin: (origin) => {\n      // origin\uC774 \uC5C6\uB294 \uACBD\uC6B0 (\uC608: \uB3D9\uC77C \uCD9C\uCC98 \uC694\uCCAD)\uB3C4 \uD5C8\uC6A9\n      if (!origin) return corsOrigin;\n      // \uD5C8\uC6A9\uB41C origin \uBAA9\uB85D\uC5D0 \uC788\uB294\uC9C0 \uD655\uC778\n      if (allowedOrigins.some(allowed => origin.startsWith(allowed))) {\n        return origin;\n      }\n      // \uAE30\uBCF8\uAC12 \uBC18\uD658\n      return allowedOrigins[0];\n    },\n    allowMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n    allowHeaders: ['Content-Type', 'Authorization', 'X-Request-ID', 'X-API-Key'],\n    exposeHeaders: ['Content-Length', 'X-Request-ID', 'X-RateLimit-Limit', 'X-RateLimit-Remaining'],\n    maxAge: 86400,\n    credentials: true,\n  });\n  return corsMiddleware(c, next);\n});\n\napp.get('/ws/chat', (c) => {\n  const id = c.env.CHAT_HUB.idFromName('global');\n  const stub = c.env.CHAT_HUB.get(id);\n  return stub.fetch(c.req.raw);\n});\n\napp.get('/ws/notifications', (c) => handleNotificationWebSocket(c));\n\n// API \uC815\uBCF4 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.get('/', (c) => {\n  return successResponse(c, {\n    name: 'STUDYMATE API',\n    version: API_VERSION,\n    status: 'operational',\n    documentation: '/api/docs',\n    endpoints: {\n      health: '/health',\n      levelTest: `/api/${API_VERSION}/level-test`,\n      webrtc: `/api/${API_VERSION}/room`,\n      upload: `/api/${API_VERSION}/upload`,\n      whisper: `/api/${API_VERSION}/whisper`,\n      llm: `/api/${API_VERSION}/llm`,\n      images: `/api/${API_VERSION}/images`,\n      cache: `/api/${API_VERSION}/cache`,\n      transcribe: `/api/${API_VERSION}/transcribe`,\n      analytics: `/api/${API_VERSION}/analytics`,\n      translate: `/api/${API_VERSION}/translate`\n    }\n  });\n});\n\n// Health check\napp.get('/health', (c) => {\n  return successResponse(c, {\n    status: 'healthy',\n    environment: c.env?.ENVIRONMENT,\n    version: API_VERSION,\n    services: {\n      ai: 'operational',\n      storage: 'operational',\n      cache: 'operational',\n      durableObjects: 'operational'\n    }\n  });\n});\n\n// \uBA54\uD2B8\uB9AD\uC2A4 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.get('/metrics', (c) => {\n  // \uC2E4\uC81C \uAD6C\uD604\uC5D0\uC11C\uB294 Prometheus \uD615\uC2DD\uC73C\uB85C \uBA54\uD2B8\uB9AD \uB178\uCD9C\n  return c.text(`# HELP http_requests_total Total number of HTTP requests\n# TYPE http_requests_total counter\nhttp_requests_total{method=\"GET\",endpoint=\"/health\"} 1\n`);\n});\n\n// API v1 \uB77C\uC6B0\uD2B8 \uADF8\uB8F9\nconst v1 = new Hono<{ Bindings: AppBindings; Variables: Variables }>();\n\n// v1 API \uB77C\uC6B0\uD2B8 \uB4F1\uB85D\nv1.route('/auth', authRoutes);\nv1.route('/login', authRoutes);  // OAuth login \uACBD\uB85C \uCD94\uAC00\nv1.route('/users', userRoutes);\nv1.route('/user', userRoutes);\nv1.route('/onboarding', onboardingRoutes);\nv1.route('/sessions', sessionsRoutes);\nv1.route('/session', sessionsRoutes);\nv1.route('/notifications', notificationsRoutes);\nv1.route('/group-sessions', groupSessionsRoutes);\nv1.route('/group-sessions/ai', groupSessionsAIRoutes);\nv1.route('/presence', presenceRoutes);\nv1.route('/matching', matchingRoutes);\nv1.route('/achievements', achievementsRoutes);\nv1.route('/chat', chatRoutes);\nv1.route('/settings', settingsRoutes);\nv1.route('/level-test', levelTestRoutes);\nv1.route('/leveltest', levelTestRoutes);\nv1.route('/room', webrtcRoutes);\nv1.route('/upload', uploadRoutes);\nv1.route('/whisper', whisperRoutes);\nv1.route('/llm', llmRoutes);\nv1.route('/images', imagesRoutes);\nv1.route('/cache', cacheRoutes);\nv1.route('/transcribe', transcribeRoutes);\nv1.route('/translate', translateRoutes);\nv1.route('/analytics', analyticsRoutes);\n\n// \uB0B4\uBD80 \uC11C\uBE44\uC2A4 API (\uB808\uAC70\uC2DC \uC5F0\uB3D9)\nv1.route('/internal', internalRoutes);\n\n// API \uBC84\uC804 \uB77C\uC6B0\uD305\napp.route(`/api/${API_VERSION}`, v1);\n\n// /api/v1/health \uC5D4\uB4DC\uD3EC\uC778\uD2B8 (\uD504\uB860\uD2B8\uC5D4\uB4DC \uD638\uD658\uC131)\napp.get(`/api/${API_VERSION}/health`, (c) => {\n  return successResponse(c, {\n    status: 'healthy',\n    environment: c.env?.ENVIRONMENT,\n    version: API_VERSION,\n    services: {\n      ai: 'operational',\n      storage: 'operational',\n      cache: 'operational',\n      durableObjects: 'operational'\n    }\n  });\n});\n\n// OAuth \uCF5C\uBC31\uC744 \uC704\uD55C \uC9C1\uC811 \uB77C\uC6B0\uD305 (\uB124\uC774\uBC84/\uAD6C\uAE00\uC5D0 \uB4F1\uB85D\uB41C redirect_uri)\n// /login/oauth2/code/naver\uC640 /login/oauth2/code/google\uC744 \uC9C1\uC811 \uCC98\uB9AC\napp.get('/login/oauth2/code/:provider', async (c) => {\n  const provider = c.req.param('provider');\n  const code = c.req.query('code');\n  const state = c.req.query('state') || undefined;\n\n  if (!code) {\n    return c.json({\n      success: false,\n      error: {\n        message: 'Missing OAuth code',\n        code: 'INVALID_OAUTH_CALLBACK'\n      }\n    }, 400);\n  }\n\n  // handleOAuthCallback \uC9C1\uC811 \uC784\uD3EC\uD2B8\n  const { handleOAuthCallback } = await import('./services/auth');\n  const { AppError } = await import('./utils/errors');\n\n  try {\n    const result = await handleOAuthCallback(\n      c.env,\n      provider,\n      { code, state },\n      {\n        userAgent: c.req.header('User-Agent') || undefined,\n        ipAddress:\n          c.req.header('CF-Connecting-IP') ||\n          c.req.header('X-Forwarded-For') ||\n          c.req.header('X-Real-IP') ||\n          undefined\n      }\n    );\n    const acceptsJson = (c.req.header('Accept') || '').includes('application/json');\n    if (!acceptsJson) {\n      const redirectTarget = result.callbackUrl || result.redirectUri;\n      if (!redirectTarget) {\n        return successResponse(c, result);\n      }\n      const redirectUrl = new URL(redirectTarget);\n      redirectUrl.searchParams.set('accessToken', result.accessToken);\n      redirectUrl.searchParams.set('refreshToken', result.refreshToken);\n      redirectUrl.searchParams.set('provider', provider);\n      if (state) {\n        redirectUrl.searchParams.set('state', state);\n      }\n      if (result.redirectUri && result.redirectUri !== redirectTarget) {\n        redirectUrl.searchParams.set('redirect', result.redirectUri);\n      }\n      return c.redirect(redirectUrl.toString());\n    }\n    return successResponse(c, result);\n  } catch (error) {\n    if (error instanceof AppError) {\n      throw error;\n    }\n    const message = error instanceof Error ? error.message : 'Authentication failure';\n    throw new AppError(message, 500, 'AUTH_OPERATION_FAILED');\n  }\n});\n\n// 404 handler\napp.notFound(notFoundHandler);\n\n// Global error handler\uB294 middleware\uC5D0\uC11C \uCC98\uB9AC\n\nconst fetchHandler: ExportedHandler<AppBindings>['fetch'] = (request, env, ctx) =>\n  app.fetch(request, env, ctx);\n\nconst worker: ExportedHandler<AppBindings> = {\n  fetch: fetchHandler,\n  scheduled,\n};\n\nexport default worker;\n", "// src/index.ts\nimport { Hono } from \"./hono.js\";\nexport {\n  Hono\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/router/reg-exp-router/index.ts\nimport { RegExpRouter } from \"./router.js\";\nexport {\n  RegExpRouter\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        if (regexpStr === \".*\") {\n          throw PATH_ERROR;\n        }\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/smart-router/index.ts\nimport { SmartRouter } from \"./router.js\";\nexport {\n  SmartRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/index.ts\nimport { TrieRouter } from \"./router.js\";\nexport {\n  TrieRouter\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          if (!part && !(matcher instanceof RegExp)) {\n            continue;\n          }\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "import { Hono } from 'hono';\nimport type { AppBindings as Env } from '../index';\nimport { Variables } from '../types';\nimport { auth } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport { processAudio, evaluateLanguageLevel, generateLevelFeedback } from '../services/ai';\nimport { saveToR2, getFromR2 } from '../services/storage';\nimport { log } from '../utils/logger';\n\nconst levelTestRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\nconst SESSION_TTL_SECONDS = 60 * 60 * 24 * 14; // 14 days\nconst HISTORY_TTL_SECONDS = 60 * 60 * 24 * 90; // 90 days\nconst MAX_HISTORY_ITEMS = 20;\n\nconst SCORE_KEYS = ['pronunciation', 'fluency', 'grammar', 'vocabulary', 'coherence', 'interaction'] as const;\ntype ScoreKey = typeof SCORE_KEYS[number];\n\ninterface LevelTestAnswer {\n  questionId: number;\n  transcription?: string;\n  audioKey?: string;\n  audioType?: string;\n  submittedAt: string;\n  responseTimeSeconds?: number | null;\n  evaluation?: {\n    scores: Record<ScoreKey, number>;\n    feedback: string;\n    suggestions: string[];\n    estimatedLevel?: string;\n  };\n}\n\ninterface LevelTestResult {\n  testId: string;\n  level: string;\n  estimatedLevel: string;\n  overallScore: number;\n  scores: Record<ScoreKey, number>;\n  strengths: string[];\n  improvements: string[];\n  suggestions: string[];\n  evaluations: Array<{\n    questionId: number;\n    question: string;\n    transcription: string;\n    scores: Record<ScoreKey, number>;\n    feedback: string;\n    suggestions: string[];\n    estimatedLevel?: string;\n  }>;\n  completedAt: string;\n  feedbackSummary: string;\n}\n\ninterface LevelTestSession {\n  testId: string;\n  userId: string;\n  languageCode: string;\n  testType: string;\n  testLevel: string;\n  questionCount: number;\n  mode: 'standard' | 'voice';\n  questions: typeof TEST_QUESTIONS;\n  answers: LevelTestAnswer[];\n  status: 'in-progress' | 'completed' | 'cancelled';\n  startedAt: string;\n  completedAt?: string;\n  result?: LevelTestResult;\n}\n\ninterface LevelTestHistoryEntry {\n  testId: string;\n  startedAt: string;\n  completedAt?: string;\n  status: LevelTestSession['status'];\n  languageCode: string;\n  testType: string;\n  testLevel: string;\n  overallScore?: number;\n  level?: string;\n}\n\nconst optionalAuth = auth({ optional: true });\nlevelTestRoutes.use('*', optionalAuth);\n\nconst TEST_QUESTIONS = [\n  {\n    id: 1,\n    text: \"Introduce yourself. Tell me about your name, where you're from, and what you do.\",\n    korean: \"\uC790\uAE30\uC18C\uAC1C\uB97C \uD574\uC8FC\uC138\uC694. \uC774\uB984, \uCD9C\uC2E0\uC9C0, \uD558\uB294 \uC77C\uC5D0 \uB300\uD574 \uB9D0\uC500\uD574\uC8FC\uC138\uC694.\",\n    duration: 60,\n    difficulty: 'A1-A2'\n  },\n  {\n    id: 2,\n    text: \"Describe your typical day. What do you usually do from morning to evening?\",\n    korean: \"\uC77C\uC0C1\uC801\uC778 \uD558\uB8E8\uB97C \uC124\uBA85\uD574\uC8FC\uC138\uC694. \uC544\uCE68\uBD80\uD130 \uC800\uB141\uAE4C\uC9C0 \uBCF4\uD1B5 \uBB34\uC5C7\uC744 \uD558\uB098\uC694?\",\n    duration: 90,\n    difficulty: 'A2-B1'\n  },\n  {\n    id: 3,\n    text: \"Talk about a memorable experience you had recently. What happened and how did you feel?\",\n    korean: \"\uCD5C\uADFC\uC5D0 \uC788\uC5C8\uB358 \uAE30\uC5B5\uC5D0 \uB0A8\uB294 \uACBD\uD5D8\uC5D0 \uB300\uD574 \uC774\uC57C\uAE30\uD574\uC8FC\uC138\uC694. \uBB34\uC2A8 \uC77C\uC774 \uC788\uC5C8\uACE0 \uC5B4\uB5BB\uAC8C \uB290\uAF08\uB098\uC694?\",\n    duration: 120,\n    difficulty: 'B1-B2'\n  },\n  {\n    id: 4,\n    text: \"What are your thoughts on technology's impact on education? Discuss both positive and negative aspects.\",\n    korean: \"\uAE30\uC220\uC774 \uAD50\uC721\uC5D0 \uBBF8\uCE58\uB294 \uC601\uD5A5\uC5D0 \uB300\uD55C \uB2F9\uC2E0\uC758 \uC0DD\uAC01\uC740 \uBB34\uC5C7\uC778\uAC00\uC694? \uAE0D\uC815\uC801\uC778 \uBA74\uACFC \uBD80\uC815\uC801\uC778 \uBA74\uC744 \uBAA8\uB450 \uB17C\uC758\uD574\uC8FC\uC138\uC694.\",\n    duration: 180,\n    difficulty: 'B2-C1'\n  }\n];\n\nfunction generateTestId(): string {\n  const now = Date.now();\n  const random = Math.floor(Math.random() * 1000);\n  return String(now * 1000 + random);\n}\n\nfunction sessionKey(testId: string) {\n  return `level-test:session:${testId}`;\n}\n\nfunction userHistoryKey(userId: string) {\n  return `level-test:history:${userId}`;\n}\n\nasync function loadSession(env: Env, testId: string): Promise<LevelTestSession | null> {\n  const raw = await env.CACHE.get(sessionKey(testId));\n  if (!raw) return null;\n  try {\n    return JSON.parse(raw);\n  } catch (error) {\n    log.error('Failed to parse level test session', error as Error, { component: 'LEVEL_TEST', testId });\n    return null;\n  }\n}\n\nasync function requireSession(env: Env, testId: string): Promise<LevelTestSession> {\n  const session = await loadSession(env, testId);\n  if (!session) {\n    throw new AppError('Level test not found', 404, 'LEVEL_TEST_NOT_FOUND');\n  }\n  return session;\n}\n\nfunction ensureOwnership(session: LevelTestSession, userId: string) {\n  if (session.userId !== userId) {\n    throw new AppError('You do not have access to this test', 403, 'LEVEL_TEST_FORBIDDEN');\n  }\n}\n\nasync function saveSession(env: Env, session: LevelTestSession) {\n  await env.CACHE.put(sessionKey(session.testId), JSON.stringify(session), {\n    expirationTtl: SESSION_TTL_SECONDS\n  });\n  await updateHistory(env, session.userId, session);\n}\n\nasync function updateHistory(env: Env, userId: string, session: LevelTestSession) {\n  const key = userHistoryKey(userId);\n  const raw = await env.CACHE.get(key);\n  let history: LevelTestHistoryEntry[] = [];\n  if (raw) {\n    try {\n      history = JSON.parse(raw);\n    } catch (error) {\n      history = [];\n    }\n  }\n\n  const summary: LevelTestHistoryEntry = {\n    testId: session.testId,\n    startedAt: session.startedAt,\n    completedAt: session.completedAt,\n    status: session.status,\n    languageCode: session.languageCode,\n    testType: session.testType,\n    testLevel: session.testLevel,\n    overallScore: session.result?.overallScore,\n    level: session.result?.level\n  };\n\n  history = history.filter((item) => item.testId !== session.testId);\n  history.unshift(summary);\n  if (history.length > MAX_HISTORY_ITEMS) {\n    history = history.slice(0, MAX_HISTORY_ITEMS);\n  }\n\n  await env.CACHE.put(key, JSON.stringify(history), {\n    expirationTtl: HISTORY_TTL_SECONDS\n  });\n}\n\nasync function getUserHistory(env: Env, userId: string): Promise<LevelTestHistoryEntry[]> {\n  const raw = await env.CACHE.get(userHistoryKey(userId));\n  if (!raw) return [];\n  try {\n    return JSON.parse(raw);\n  } catch (error) {\n    return [];\n  }\n}\n\nfunction buildAudioKey(session: LevelTestSession, questionId: number) {\n  return `level-test/${session.userId}/${session.testId}/question-${questionId}.webm`;\n}\n\nfunction buildAudioUrl(testId: string, questionId: number) {\n  return `/api/v1/level-test/${testId}/audio/${questionId}`;\n}\n\nfunction sanitizeSession(session: LevelTestSession) {\n  return {\n    testId: Number(session.testId),\n    status: session.status,\n    languageCode: session.languageCode,\n    testType: session.testType,\n    testLevel: session.testLevel,\n    mode: session.mode,\n    startedAt: session.startedAt,\n    completedAt: session.completedAt ?? null,\n    questions: session.questions,\n    answers: session.answers.map((answer) => ({\n      questionId: answer.questionId,\n      transcription: answer.transcription ?? null,\n      submittedAt: answer.submittedAt,\n      responseTimeSeconds: answer.responseTimeSeconds ?? null,\n      audioUrl: answer.audioKey ? buildAudioUrl(session.testId, answer.questionId) : null,\n      evaluation: answer.evaluation ?? null\n    })),\n    result: session.result\n      ? {\n          ...session.result,\n          testId: Number(session.result.testId)\n        }\n      : null\n  };\n}\n\nfunction getUserIdOrThrow(c: any): string {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('Authentication required', 401, 'AUTH_REQUIRED');\n  }\n  return userId;\n}\n\nfunction pickScore(value: unknown): number | undefined {\n  if (typeof value === 'number' && Number.isFinite(value)) {\n    return Math.max(0, Math.min(100, value));\n  }\n  if (typeof value === 'string') {\n    const parsed = Number.parseFloat(value);\n    if (Number.isFinite(parsed)) {\n      return Math.max(0, Math.min(100, parsed));\n    }\n  }\n  return undefined;\n}\n\nfunction upsertAnswer(session: LevelTestSession, questionId: number): LevelTestAnswer {\n  const existing = session.answers.find((answer) => answer.questionId === questionId);\n  if (existing) {\n    return existing;\n  }\n  const answer: LevelTestAnswer = {\n    questionId,\n    submittedAt: new Date().toISOString(),\n    responseTimeSeconds: null\n  };\n  session.answers.push(answer);\n  return answer;\n}\n\nfunction resolveQuestion(session: LevelTestSession, questionId?: number | null) {\n  if (questionId) {\n    const question = session.questions.find((item) => item.id === questionId);\n    if (!question) {\n      throw new AppError('Invalid question id', 400, 'LEVEL_TEST_INVALID_QUESTION');\n    }\n    return question;\n  }\n\n  const unanswered = session.questions.find((question) => !session.answers.some((answer) => answer.questionId === question.id));\n  if (!unanswered) {\n    throw new AppError('All questions already answered', 400, 'LEVEL_TEST_COMPLETED');\n  }\n  return unanswered;\n}\n\nfunction aggregateScores(evaluations: LevelTestResult['evaluations']): Record<ScoreKey, number> {\n  const totals: Record<ScoreKey, { sum: number; count: number }> = {\n    pronunciation: { sum: 0, count: 0 },\n    fluency: { sum: 0, count: 0 },\n    grammar: { sum: 0, count: 0 },\n    vocabulary: { sum: 0, count: 0 },\n    coherence: { sum: 0, count: 0 },\n    interaction: { sum: 0, count: 0 }\n  };\n\n  for (const evaluation of evaluations) {\n    for (const key of SCORE_KEYS) {\n      const value = pickScore(evaluation.scores[key]);\n      if (value !== undefined) {\n        totals[key].sum += value;\n        totals[key].count += 1;\n      }\n    }\n  }\n\n  const averages: Record<ScoreKey, number> = {\n    pronunciation: 0,\n    fluency: 0,\n    grammar: 0,\n    vocabulary: 0,\n    coherence: 0,\n    interaction: 0\n  };\n\n  for (const key of SCORE_KEYS) {\n    averages[key] = totals[key].count > 0 ? Math.round(totals[key].sum / totals[key].count) : 0;\n  }\n\n  return averages;\n}\n\nfunction determineLevel(overallScore: number): string {\n  if (overallScore >= 85) return 'C2';\n  if (overallScore >= 75) return 'C1';\n  if (overallScore >= 65) return 'B2';\n  if (overallScore >= 55) return 'B1';\n  if (overallScore >= 45) return 'A2';\n  return 'A1';\n}\n\nasync function evaluateSession(env: Env, session: LevelTestSession): Promise<LevelTestResult> {\n  const evaluations: LevelTestResult['evaluations'] = [];\n\n  for (const question of session.questions) {\n    const answer = session.answers.find((item) => item.questionId === question.id);\n    if (!answer?.transcription) {\n      continue;\n    }\n\n    if (!answer.evaluation) {\n      const evaluation = await evaluateLanguageLevel(env.AI, answer.transcription, question.text);\n      const scores: Record<ScoreKey, number> = {\n        pronunciation: pickScore(evaluation?.scores?.pronunciation) ?? 0,\n        fluency: pickScore(evaluation?.scores?.fluency) ?? 0,\n        grammar: pickScore(evaluation?.scores?.grammar) ?? 0,\n        vocabulary: pickScore(evaluation?.scores?.vocabulary) ?? 0,\n        coherence: pickScore(evaluation?.scores?.coherence) ?? 0,\n        interaction: pickScore(evaluation?.scores?.interaction) ?? 0\n      };\n\n      answer.evaluation = {\n        scores,\n        feedback: evaluation?.feedback ?? '',\n        suggestions: Array.isArray(evaluation?.suggestions) ? evaluation.suggestions.filter(Boolean) : [],\n        estimatedLevel: evaluation?.estimatedLevel\n      };\n    }\n\n    evaluations.push({\n      questionId: question.id,\n      question: question.text,\n      transcription: answer.transcription,\n      scores: answer.evaluation!.scores,\n      feedback: answer.evaluation!.feedback,\n      suggestions: answer.evaluation!.suggestions,\n      estimatedLevel: answer.evaluation!.estimatedLevel\n    });\n  }\n\n  if (evaluations.length === 0) {\n    throw new AppError('No submissions to evaluate', 400, 'LEVEL_TEST_NO_SUBMISSIONS');\n  }\n\n  const averages = aggregateScores(evaluations);\n  const overallScore = Math.round(\n    SCORE_KEYS.reduce((sum, key) => sum + averages[key], 0) / SCORE_KEYS.length\n  );\n  const level = determineLevel(overallScore);\n\n  const strengths = SCORE_KEYS.filter((key) => averages[key] >= 75).map((key) => key);\n  const improvements = SCORE_KEYS.filter((key) => averages[key] <= 55).map((key) => key);\n\n  const suggestions = Array.from(\n    new Set(\n      evaluations\n        .flatMap((evaluation) => evaluation.suggestions)\n        .filter(Boolean)\n    )\n  ).slice(0, 6);\n\n  const analysis = {\n    grammar: averages.grammar,\n    vocabulary: averages.vocabulary,\n    fluency: averages.fluency,\n    pronunciation: averages.pronunciation,\n    taskAchievement: averages.coherence,\n    interaction: averages.interaction\n  };\n\n  const feedbackSummary = await generateLevelFeedback(env.AI, analysis, level as any);\n\n  const result: LevelTestResult = {\n    testId: session.testId,\n    level,\n    estimatedLevel: level,\n    overallScore,\n    scores: averages,\n    strengths,\n    improvements,\n    suggestions,\n    evaluations,\n    completedAt: new Date().toISOString(),\n    feedbackSummary\n  };\n\n  return result;\n}\n\nasync function createSession(c: any, mode: 'standard' | 'voice') {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const body = await c.req.json().catch(() => ({}));\n\n  const languageCode = typeof body?.languageCode === 'string' ? body.languageCode : typeof body?.targetLanguage === 'string' ? body.targetLanguage : 'en';\n  const testType = typeof body?.testType === 'string' ? body.testType : 'SPEAKING';\n  const testLevel = typeof body?.testLevel === 'string' ? body.testLevel : 'INTERMEDIATE';\n  const requestedQuestions = Number(body?.totalQuestions) || TEST_QUESTIONS.length;\n  const questionCount = Math.min(Math.max(requestedQuestions, 1), TEST_QUESTIONS.length);\n\n  const testId = generateTestId();\n  const questions = TEST_QUESTIONS.slice(0, questionCount).map((question, index) => ({\n    ...question,\n    id: index + 1\n  }));\n\n  const session: LevelTestSession = {\n    testId,\n    userId,\n    languageCode,\n    testType,\n    testLevel,\n    questionCount,\n    mode,\n    questions,\n    answers: [],\n    status: 'in-progress',\n    startedAt: new Date().toISOString()\n  };\n\n  await saveSession(env, session);\n  return session;\n}\n\nasync function handleAudioSubmission(c: any, session: LevelTestSession, providedQuestionId?: number | null) {\n  const env: Env = c.env;\n  const formData = await c.req.formData();\n  const audio = formData.get('audio') as File | null;\n  if (!audio) {\n    throw new AppError('Audio file missing', 400, 'LEVEL_TEST_AUDIO_REQUIRED');\n  }\n\n  const questionIdFromForm = formData.get('questionId');\n  const questionNumber = providedQuestionId ?? (typeof questionIdFromForm === 'string' ? Number.parseInt(questionIdFromForm, 10) : undefined);\n\n  const question = resolveQuestion(session, Number.isFinite(questionNumber) ? Number(questionNumber) : undefined);\n  const answer = upsertAnswer(session, question.id);\n\n  const audioBuffer = await audio.arrayBuffer();\n  const audioKey = buildAudioKey(session, question.id);\n  await saveToR2(env.STORAGE, audioKey, audioBuffer, audio.type || 'audio/webm');\n\n  const transcription = await processAudio(env.AI, audioBuffer, {\n    task: 'transcribe',\n    language: session.languageCode || 'en',\n    vad_filter: true,\n    initial_prompt: question.text\n  });\n\n  answer.audioKey = audioKey;\n  answer.audioType = audio.type || 'audio/webm';\n  answer.transcription = transcription?.text ?? transcription;\n  answer.submittedAt = new Date().toISOString();\n  answer.responseTimeSeconds = typeof formData.get('responseTimeSeconds') === 'string'\n    ? Number.parseFloat(formData.get('responseTimeSeconds') as string)\n    : answer.responseTimeSeconds ?? null;\n  answer.evaluation = undefined;\n\n  await saveSession(env, session);\n\n  return {\n    testId: Number(session.testId),\n    questionId: question.id,\n    transcription: answer.transcription,\n    audioUrl: buildAudioUrl(session.testId, question.id),\n    submittedAt: answer.submittedAt\n  };\n}\n\n// --- Routes ---\n\nlevelTestRoutes.get('/questions', (c) => {\n  return successResponse(c, { questions: TEST_QUESTIONS });\n});\n\nlevelTestRoutes.post('/start', auth(), async (c) => {\n  const session = await createSession(c, 'standard');\n  return successResponse(c, {\n    testId: Number(session.testId),\n    languageCode: session.languageCode,\n    testType: session.testType,\n    testLevel: session.testLevel,\n    totalQuestions: session.questionCount,\n    questions: session.questions,\n    startedAt: session.startedAt\n  });\n});\n\nlevelTestRoutes.post('/restart', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const body = await c.req.json().catch(() => ({}));\n  const previousTestId = typeof body?.previousTestId === 'string' ? body.previousTestId : typeof body?.testId === 'string' ? body.testId : undefined;\n\n  if (previousTestId) {\n    const previous = await loadSession(env, previousTestId);\n    if (previous && previous.userId === userId && previous.status === 'in-progress') {\n      previous.status = 'cancelled';\n      previous.completedAt = new Date().toISOString();\n      await saveSession(env, previous);\n    }\n  }\n\n  const session = await createSession(c, 'standard');\n  return successResponse(c, {\n    testId: Number(session.testId),\n    languageCode: session.languageCode,\n    testType: session.testType,\n    testLevel: session.testLevel,\n    totalQuestions: session.questionCount,\n    questions: session.questions,\n    startedAt: session.startedAt\n  });\n});\n\nlevelTestRoutes.post('/voice/start', auth(), async (c) => {\n  const session = await createSession(c, 'voice');\n  return successResponse(c, {\n    testId: Number(session.testId),\n    languageCode: session.languageCode,\n    testType: session.testType,\n    testLevel: session.testLevel,\n    totalQuestions: session.questionCount,\n    questions: session.questions,\n    startedAt: session.startedAt\n  });\n});\n\nlevelTestRoutes.post('/voice/:testId/upload', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n  if (session.status === 'completed') {\n    throw new AppError('Test already completed', 400, 'LEVEL_TEST_ALREADY_COMPLETED');\n  }\n  const response = await handleAudioSubmission(c, session, null);\n  return successResponse(c, response);\n});\n\nlevelTestRoutes.post('/voice/transcribe', auth(), async (c) => {\n  const userId = getUserIdOrThrow(c);\n  const contentType = c.req.header('Content-Type') || '';\n\n  let audioBuffer: ArrayBuffer | null = null;\n  let mimeType = 'audio/webm';\n  let whisperOptions: Record<string, unknown> = {};\n\n  if (contentType.startsWith('multipart/form-data')) {\n    const formData = await c.req.formData();\n    const audio = formData.get('audio');\n    if (!(audio instanceof File)) {\n      throw new AppError('audio file is required', 400, 'LEVEL_TEST_AUDIO_REQUIRED');\n    }\n    audioBuffer = await audio.arrayBuffer();\n    mimeType = audio.type || mimeType;\n    whisperOptions = {\n      language: formData.get('language') || undefined,\n      task: formData.get('task') || undefined,\n      initial_prompt: formData.get('initialPrompt') || undefined,\n      prefix: formData.get('prefix') || undefined,\n      vad_filter: formData.get('vadFilter') ?? formData.get('vad_filter') ?? undefined\n    };\n  } else {\n    const body = await c.req.json().catch(() => ({}));\n    if (typeof body.audio === 'string') {\n      const cleaned = body.audio.replace(/^data:[^;]+;base64,/, '');\n      const binaryString = atob(cleaned);\n      const view = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        view[i] = binaryString.charCodeAt(i);\n      }\n      audioBuffer = view.buffer;\n      mimeType = typeof body.mimeType === 'string' ? body.mimeType : mimeType;\n    }\n    whisperOptions = {\n      language: typeof body.language === 'string' ? body.language : undefined,\n      task: typeof body.task === 'string' ? body.task : undefined,\n      initial_prompt: typeof body.initialPrompt === 'string' ? body.initialPrompt : undefined,\n      prefix: typeof body.prefix === 'string' ? body.prefix : undefined,\n      vad_filter: typeof body.vadFilter === 'boolean' ? body.vadFilter : undefined\n    };\n  }\n\n  if (!audioBuffer) {\n    throw new AppError('audio payload is required', 400, 'LEVEL_TEST_AUDIO_REQUIRED');\n  }\n\n  const transcription = await processAudio(c.env.AI, audioBuffer, {\n    task: (whisperOptions.task as string) || 'transcribe',\n    language: (whisperOptions.language as string) || 'auto',\n    vad_filter: whisperOptions.vad_filter !== undefined ? Boolean(whisperOptions.vad_filter) : true,\n    initial_prompt: whisperOptions.initial_prompt as string | undefined,\n    prefix: whisperOptions.prefix as string | undefined\n  });\n\n  return successResponse(c, {\n    userId,\n    mimeType,\n    transcription: transcription.text,\n    wordCount: transcription.word_count,\n    words: transcription.words ?? [],\n    chunks: transcription.chunks\n  });\n});\n\nlevelTestRoutes.post('/voice/:testId/analyze', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n\n  const result = await evaluateSession(env, session);\n  session.result = result;\n  session.status = 'completed';\n  session.completedAt = result.completedAt;\n  await saveSession(env, session);\n\n  return successResponse(c, {\n    ...result,\n    testId: Number(result.testId)\n  });\n});\n\nlevelTestRoutes.get('/voice/:testId/result', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n  if (!session.result) {\n    throw new AppError('Result not available yet', 404, 'LEVEL_TEST_RESULT_NOT_READY');\n  }\n  return successResponse(c, {\n    ...session.result,\n    testId: Number(session.result.testId)\n  });\n});\n\nlevelTestRoutes.post('/submit', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const body = await c.req.json().catch(() => ({}));\n\n  const testId = typeof body?.testId === 'number' ? String(body.testId) : typeof body?.testId === 'string' ? body.testId : undefined;\n  const questionNumber = typeof body?.questionNumber === 'number' ? body.questionNumber : Number(body?.questionId);\n  const userAnswer = typeof body?.userAnswer === 'string' ? body.userAnswer.trim() : undefined;\n\n  if (!testId || !questionNumber || !userAnswer) {\n    throw new AppError('testId, questionNumber and userAnswer are required', 400, 'LEVEL_TEST_INVALID_SUBMISSION');\n  }\n\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n  if (session.status === 'completed') {\n    throw new AppError('Test already completed', 400, 'LEVEL_TEST_ALREADY_COMPLETED');\n  }\n\n  const question = resolveQuestion(session, questionNumber);\n  const answer = upsertAnswer(session, question.id);\n  answer.transcription = userAnswer;\n  answer.submittedAt = new Date().toISOString();\n  answer.responseTimeSeconds = typeof body?.responseTimeSeconds === 'number'\n    ? body.responseTimeSeconds\n    : answer.responseTimeSeconds ?? null;\n  answer.evaluation = undefined;\n\n  await saveSession(env, session);\n\n  return successResponse(c, {\n    testId: Number(session.testId),\n    questionId: question.id,\n    saved: true\n  });\n});\n\nlevelTestRoutes.post('/:testId/audio-answer', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n  if (session.status === 'completed') {\n    throw new AppError('Test already completed', 400, 'LEVEL_TEST_ALREADY_COMPLETED');\n  }\n\n  const response = await handleAudioSubmission(c, session);\n  return successResponse(c, response);\n});\n\nlevelTestRoutes.post('/:testId/complete', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n\n  const result = await evaluateSession(env, session);\n  session.result = result;\n  session.status = 'completed';\n  session.completedAt = result.completedAt;\n  await saveSession(env, session);\n\n  return successResponse(c, {\n    ...result,\n    testId: Number(result.testId)\n  });\n});\n\nlevelTestRoutes.get('/my-tests', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const history = await getUserHistory(env, userId);\n  return successResponse(c, history.map((entry) => ({\n    ...entry,\n    testId: Number(entry.testId)\n  })));\n});\n\nlevelTestRoutes.get('/summary', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const history = await getUserHistory(env, userId);\n\n  if (history.length === 0) {\n    return successResponse(c, {\n      totalTests: 0,\n      completedTests: 0,\n      averageScore: null,\n      latestLevel: null,\n      latestCompletedAt: null\n    });\n  }\n\n  const completed = history.filter((item) => item.status === 'completed' && typeof item.overallScore === 'number');\n  const averageScore = completed.length > 0\n    ? Math.round(completed.reduce((sum, item) => sum + (item.overallScore || 0), 0) / completed.length)\n    : null;\n\n  const latestCompleted = completed.sort((a, b) => (b.completedAt ? Date.parse(b.completedAt) : 0) - (a.completedAt ? Date.parse(a.completedAt) : 0))[0];\n\n  return successResponse(c, {\n    totalTests: history.length,\n    completedTests: completed.length,\n    averageScore,\n    latestLevel: latestCompleted?.level ?? null,\n    latestCompletedAt: latestCompleted?.completedAt ?? null\n  });\n});\n\nlevelTestRoutes.get('/:testId/audio/:questionId', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const questionId = Number.parseInt(c.req.param('questionId'), 10);\n\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n\n  const answer = session.answers.find((item) => item.questionId === questionId);\n  if (!answer?.audioKey) {\n    throw new AppError('Audio not found for this question', 404, 'LEVEL_TEST_AUDIO_NOT_FOUND');\n  }\n\n  const audio = await getFromR2(env.STORAGE, answer.audioKey);\n  if (!audio) {\n    throw new AppError('Audio not found', 404, 'LEVEL_TEST_AUDIO_NOT_FOUND');\n  }\n\n  return new Response(audio.body, {\n    headers: {\n      'Content-Type': answer.audioType || audio.httpMetadata?.contentType || 'audio/webm',\n      'Cache-Control': 'private, max-age=86400'\n    }\n  });\n});\n\nlevelTestRoutes.get('/:testId', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n  return successResponse(c, sanitizeSession(session));\n});\n\nexport { levelTestRoutes };\n", "import { Context, Next } from 'hono';\nimport { verify } from 'hono/jwt';\nimport { AuthUser, Variables } from '../types';\nimport { authError, forbiddenError } from './error-handler';\nimport type { AppBindings as Env } from '../index';\nimport { assertEnvVar } from '../utils/security';\n\ninterface AuthOptions {\n    optional?: boolean; // \uC778\uC99D\uC774 \uC120\uD0DD\uC801\uC778\uC9C0\n    roles?: string[];   // \uD5C8\uC6A9\uB41C \uC5ED\uD560\n    permissions?: string[]; // \uD544\uC694\uD55C \uAD8C\uD55C\n}\n\n/**\n * JWT \uD1A0\uD070\uC5D0\uC11C \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uCD94\uCD9C\n */\nasync function extractUser(token: string, env: Env): Promise<AuthUser | null> {\n    try {\n        const secret = assertEnvVar(env.JWT_SECRET, 'JWT_SECRET');\n        const verifyOptions: {\n            alg: 'HS512';\n            iss?: string;\n        } = { alg: 'HS512' };\n        const issuer = env.JWT_ISSUER ?? env.API_BASE_URL;\n        if (issuer) {\n            verifyOptions.iss = issuer;\n        }\n        const payload = await verify(token, secret, verifyOptions);\n        return {\n            id: payload.sub as string,\n            email: payload.email as string,\n            role: payload.role as string,\n            permissions: payload.permissions as string[]\n        };\n    } catch (error) {\n        return null;\n    }\n}\n\n/**\n * Bearer \uD1A0\uD070 \uC778\uC99D \uBBF8\uB4E4\uC6E8\uC5B4\n */\nexport function auth(options: AuthOptions = {}) {\n    return async (c: Context<{ Bindings: Env; Variables: Variables }>, next: Next) => {\n        const authHeader = c.req.header('Authorization');\n\n        if (!authHeader) {\n            if (options.optional) {\n                return next();\n            }\n\n            return c.json({\n                success: false,\n                error: {\n                    message: 'Authorization header required',\n                    code: 'AUTH_ERROR'\n                },\n                meta: {\n                    timestamp: new Date().toISOString(),\n                    requestId: c.get('requestId')\n                }\n            }, 401);\n        }\n\n        const match = authHeader.match(/^Bearer (.+)$/);\n        if (!match) {\n            return c.json({\n                success: false,\n                error: {\n                    message: 'Invalid authorization format. Use: Bearer <token>',\n                    code: 'AUTH_ERROR'\n                },\n                meta: {\n                    timestamp: new Date().toISOString(),\n                    requestId: c.get('requestId')\n                }\n            }, 401);\n        }\n\n        const token = match[1];\n        const user = await extractUser(token, c.env);\n\n        if (!user) {\n            return c.json({\n                success: false,\n                error: {\n                    message: 'Invalid or expired token',\n                    code: 'AUTH_ERROR'\n                },\n                meta: {\n                    timestamp: new Date().toISOString(),\n                    requestId: c.get('requestId')\n                }\n            }, 401);\n        }\n\n        // \uC5ED\uD560 \uD655\uC778\n        if (options.roles && options.roles.length > 0) {\n            if (!user.role || !options.roles.includes(user.role)) {\n                throw forbiddenError('Insufficient role');\n            }\n        }\n\n        // \uAD8C\uD55C \uD655\uC778\n        if (options.permissions && options.permissions.length > 0) {\n            const hasPermission = options.permissions.some(\n                permission => user.permissions?.includes(permission)\n            );\n            if (!hasPermission) {\n                throw forbiddenError('Insufficient permissions');\n            }\n        }\n\n        // \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uC800\uC7A5\n        c.set('userId', user.id);\n        c.set('user', user as unknown as any);\n\n        await next();\n    };\n}\n\n/**\n * API \uD0A4 \uC778\uC99D \uBBF8\uB4E4\uC6E8\uC5B4\n */\nexport function apiKey(headerName: string = 'X-API-Key') {\n    return async (c: Context<{ Bindings: Env }>, next: Next) => {\n        const key = c.req.header(headerName);\n\n        if (!key) {\n            throw authError(`${headerName} header required`);\n        }\n\n        const validKeys = c.env.API_KEYS?.split(',') || [];\n        if (!validKeys.includes(key)) {\n            throw authError('Invalid API key');\n        }\n\n        await next();\n    };\n}\n\n/**\n * \uB0B4\uBD80 \uC11C\uBE44\uC2A4 \uAC04 \uC778\uC99D \uBBF8\uB4E4\uC6E8\uC5B4\n */\nexport function internalAuth(secret?: string) {\n    return async (c: Context<{ Bindings: Env }>, next: Next) => {\n        const authSecret = c.req.header('X-Internal-Secret');\n        const expectedSecret = secret || c.env.INTERNAL_SECRET;\n\n        if (!authSecret || authSecret !== expectedSecret) {\n            throw authError('Invalid internal authentication');\n        }\n\n        await next();\n    };\n}\n\n/**\n * \uD604\uC7AC \uC778\uC99D\uB41C \uC0AC\uC6A9\uC790 \uAC00\uC838\uC624\uAE30 \uD5EC\uD37C\n */\nexport function getCurrentUser(c: Context): AuthUser | null {\n    return c.get('user') || null;\n}\n\n/**\n * \uC778\uC99D \uD544\uC218 \uD655\uC778 \uD5EC\uD37C\n */\nexport function requireAuth(c: Context): AuthUser {\n    const user = getCurrentUser(c);\n    if (!user) {\n        throw authError('Authentication required');\n    }\n    return user;\n}\n", "import { Context, Next } from 'hono';\nimport { HTTPException } from 'hono/http-exception';\nimport { ApiError, ApiResponse } from '../types';\nimport { log } from '../utils/logger';\n\n/**\n * \uC804\uC5ED \uC5D0\uB7EC \uD578\uB4E4\uB9C1 \uBBF8\uB4E4\uC6E8\uC5B4\n * \uBAA8\uB4E0 \uC608\uC678\uB97C \uCE90\uCE58\uD558\uC5EC \uC77C\uAD00\uB41C \uD615\uC2DD\uC73C\uB85C \uC751\uB2F5\n */\nexport async function errorHandler(c: Context, next: Next) {\n    try {\n        await next();\n    } catch (error) {\n        // \uD1B5\uD569 \uB85C\uAC70 \uC0AC\uC6A9\n        log.error(\n            'Unhandled error in request',\n            error instanceof Error ? error : new Error(String(error)),\n            {\n                requestId: c.get('requestId'),\n                path: c.req.path,\n                method: c.req.method,\n                component: 'ERROR_HANDLER'\n            }\n        );\n\n        // API \uC5D0\uB7EC \uCC98\uB9AC\n        if (error instanceof ApiError) {\n            return c.json<ApiResponse>({\n                success: false,\n                error: {\n                    message: error.message,\n                    code: error.code,\n                    details: error.details\n                },\n                meta: {\n                    timestamp: new Date().toISOString(),\n                    requestId: c.get('requestId')\n                }\n            }, error.statusCode as any);\n        }\n\n        // Hono HTTP \uC608\uC678 \uCC98\uB9AC\n        if (error instanceof HTTPException) {\n            return c.json<ApiResponse>({\n                success: false,\n                error: {\n                    message: error.message,\n                    code: 'HTTP_EXCEPTION'\n                },\n                meta: {\n                    timestamp: new Date().toISOString(),\n                    requestId: c.get('requestId')\n                }\n            }, { status: error.status });\n        }\n\n        // \uC608\uC0C1\uCE58 \uBABB\uD55C \uC5D0\uB7EC\n        const isDevelopment = c.env.ENVIRONMENT === 'development';\n        return c.json<ApiResponse>({\n            success: false,\n            error: {\n                message: isDevelopment ? (error as Error).message : 'Internal Server Error',\n                code: 'INTERNAL_ERROR',\n                details: isDevelopment ? (error as Error).stack : undefined\n            },\n            meta: {\n                timestamp: new Date().toISOString(),\n                requestId: c.get('requestId')\n            }\n        }, { status: 500 });\n    }\n}\n\n/**\n * 404 \uD578\uB4E4\uB7EC\n */\nexport function notFoundHandler(c: Context): Response {\n    return c.json<ApiResponse>({\n        success: false,\n        error: {\n            message: `Route not found: ${c.req.method} ${c.req.path}`,\n            code: 'NOT_FOUND'\n        },\n        meta: {\n            timestamp: new Date().toISOString(),\n            requestId: c.get('requestId')\n        }\n    }, { status: 404 });\n}\n\n/**\n * \uC720\uD6A8\uC131 \uAC80\uC0AC \uC5D0\uB7EC \uC0DD\uC131 \uD5EC\uD37C\n */\nexport function validationError(message: string, details?: any): ApiError {\n    return new ApiError(400, 'VALIDATION_ERROR', message, details);\n}\n\n/**\n * \uC778\uC99D \uC5D0\uB7EC \uC0DD\uC131 \uD5EC\uD37C\n */\nexport function authError(message: string = 'Unauthorized'): ApiError {\n    return new ApiError(401, 'AUTH_ERROR', message);\n}\n\n/**\n * \uAD8C\uD55C \uC5D0\uB7EC \uC0DD\uC131 \uD5EC\uD37C\n */\nexport function forbiddenError(message: string = 'Forbidden'): ApiError {\n    return new ApiError(403, 'FORBIDDEN', message);\n}\n\n/**\n * \uB9AC\uC18C\uC2A4 \uC5C6\uC74C \uC5D0\uB7EC \uC0DD\uC131 \uD5EC\uD37C\n */\nexport function notFoundError(resource: string): ApiError {\n    return new ApiError(404, 'NOT_FOUND', `${resource} not found`);\n}\n\n/**\n * \uCDA9\uB3CC \uC5D0\uB7EC \uC0DD\uC131 \uD5EC\uD37C\n */\nexport function conflictError(message: string): ApiError {\n    return new ApiError(409, 'CONFLICT', message);\n}", "// API \uC751\uB2F5 \uD0C0\uC785\nexport interface ApiResponse<T = any> {\n    success: boolean;\n    data?: T;\n    error?: {\n        message: string;\n        code?: string;\n        details?: any;\n    };\n    meta?: {\n        timestamp: string;\n        requestId?: string;\n        version?: string;\n        note?: string;\n    };\n}\n\n// \uC5D0\uB7EC \uD0C0\uC785\nexport class ApiError extends Error {\n    constructor(\n        public statusCode: number,\n        public code: string,\n        message: string,\n        public details?: any\n    ) {\n        super(message);\n        this.name = 'ApiError';\n    }\n}\n\n// \uCEE8\uD14D\uC2A4\uD2B8 \uBCC0\uC218 \uD0C0\uC785\nexport interface Variables {\n    requestId: string;\n    userId?: string;\n    startTime: number;\n    user?: AuthUser;\n}\n\n// Context Variable Map for Hono\nexport interface ContextVariableMap {\n    user: AuthUser;\n}\n\n// \uC778\uC99D \uC815\uBCF4 \uD0C0\uC785\nexport interface AuthUser {\n    id: string;\n    email?: string;\n    role?: string;\n    permissions?: string[];\n}\n\n// \uD398\uC774\uC9C0\uB124\uC774\uC158 \uD0C0\uC785\nexport interface PaginationParams {\n    page?: number;\n    limit?: number;\n    sort?: string;\n    order?: 'asc' | 'desc';\n}\n\nexport interface PaginatedResponse<T> extends ApiResponse<T[]> {\n    meta: ApiResponse['meta'] & {\n        page: number;\n        limit: number;\n        total: number;\n        totalPages: number;\n    };\n}\n\n// \uB808\uBCA8 \uD14C\uC2A4\uD2B8 \uAD00\uB828 \uD0C0\uC785\nexport interface LevelTestSubmission {\n    userId: string;\n    questionId: string;\n    audio: File;\n}\n\nexport interface LevelTestResult {\n    userId: string;\n    level: string;\n    analysis: {\n        grammar: number;\n        vocabulary: number;\n        pronunciation: number;\n        fluency: number;\n        coherence: number;\n    };\n    timestamp: string;\n}\n\n// WebRTC \uAD00\uB828 \uD0C0\uC785\nexport interface WebRTCParticipantInfo {\n    userId: string;\n    userName?: string;\n    joinedAt?: string;\n    audioEnabled?: boolean;\n    videoEnabled?: boolean;\n    isScreenSharing?: boolean;\n}\n\nexport interface WebRTCRoom {\n    id: string;\n    participants: WebRTCParticipantInfo[];\n    createdAt: string;\n    type: 'video' | 'audio';\n    maxParticipants: number;\n    metadata?: Record<string, any>;\n}\n\nexport interface ActiveRoomInfo {\n    roomId: string;\n    roomType: 'video' | 'audio';\n    currentParticipants: number;\n    maxParticipants: number;\n    status: 'waiting' | 'active';\n    createdAt: string;\n    updatedAt: string;\n    metadata?: Record<string, any>;\n}\n\nexport interface WebRTCSignal {\n    type: 'offer' | 'answer' | 'ice-candidate';\n    data: any;\n    from: string;\n    to: string;\n}\n\n// User domain types (Workers migration)\nexport interface UserProfile {\n    id: string;\n    email?: string;\n    name?: string;\n    englishName?: string;\n    birthday?: string;\n    birthyear?: string;\n    gender?: string;\n    profileImage?: string;\n    selfBio?: string;\n    location?: {\n        id: number;\n        country: string;\n        city?: string;\n        timeZone?: string;\n    };\n    nativeLanguage?: {\n        id: number;\n        name: string;\n        code: string;\n    };\n    onboardingCompleted: boolean;\n    communicationMethod?: string;\n    dailyMinute?: string;\n    partnerGender?: string;\n    learningExpectation?: string;\n    createdAt: string;\n    updatedAt: string;\n}\n\nexport interface UserSettings {\n    language?: string;\n    marketingOptIn?: boolean;\n    notificationPreferences?: Record<string, boolean>;\n    timeZone?: string;\n}\n\nexport interface OnboardingSummary {\n    languages: Array<{\n        languageId: number;\n        currentLevelId?: number;\n        targetLevelId?: number;\n    }>;\n    topics: number[];\n    motivations: Array<{ motivationId: number; priority?: number }>;\n    learningStyles: number[];\n    groupSizes: number[];\n    partnerPreferences: Array<{ partnerPersonalityId: number; partnerGender?: string }>;\n    schedules: Array<{\n        scheduleId: number;\n        dayOfWeek: string;\n        classTime?: string;\n    }>;\n    communicationMethod?: string;\n}\n\n// Matching domain types\nexport interface MatchingPartner {\n    userId: string;\n    englishName?: string;\n    profileImageUrl?: string;\n    selfBio?: string;\n    age?: number;\n    gender?: string;\n    location?: string;\n    nativeLanguage?: string;\n    targetLanguages?: Array<{\n        languageName: string;\n        currentLevel?: string;\n        targetLevel?: string;\n    }>;\n    interests?: string[];\n    partnerPersonalities?: string[];\n    compatibilityScore: number;\n    onlineStatus?: string;\n    lastActiveTime?: string;\n}\n\nexport interface CompatibilityCategoryDetail {\n    category: 'language' | 'personality' | 'goals' | 'interests';\n    score: number;\n    description: string;\n}\n\nexport interface CompatibilitySharedInsights {\n    mutualExchangeLanguages: string[];\n    sharedTargetLanguages: string[];\n    sharedInterests: string[];\n    sharedGoals: string[];\n    personalityOverlap: string[];\n}\n\nexport interface CompatibilityScoreResponseType {\n    overallScore: number;\n    compatibilityLevel: 'HIGH' | 'MEDIUM' | 'LOW';\n    recommendation: string;\n    categoryScores: Record<string, number>;\n    categoryDetails: CompatibilityCategoryDetail[];\n    sharedInsights: CompatibilitySharedInsights;\n}\n\n// Achievement domain types\nexport interface AchievementResponseType {\n    id: number;\n    achievementKey: string;\n    title: string;\n    description?: string;\n    category: string;\n    originalCategory?: string;\n    type: string;\n    tier: string;\n    targetValue?: number;\n    targetUnit?: string;\n    xpReward?: number;\n    badgeIconUrl?: string;\n    badgeColor?: string;\n    isActive: boolean;\n    isHidden: boolean;\n    sortOrder?: number;\n    prerequisiteAchievementId?: number;\n}\n\nexport interface UserAchievementResponseType {\n    id: number;\n    achievement: AchievementResponseType;\n    currentProgress: number;\n    isCompleted: boolean;\n    completedAt?: string;\n    isRewardClaimed: boolean;\n    rewardClaimedAt?: string;\n    progressPercentage: number;\n}\n\nexport interface AchievementStatsResponseType {\n    totalAchievements: number;\n    completedAchievements: number;\n    inProgressAchievements: number;\n    totalXpEarned: number;\n    unclaimedRewards: number;\n    completionRate: number;\n    achievementsByCategory: Record<string, number>;\n    achievementsByTier: Record<string, number>;\n    recentCompletions: UserAchievementResponseType[];\n    nearCompletion: UserAchievementResponseType[];\n}\n\n// Chat domain types\nexport interface ChatParticipant {\n    userId: string;\n    name?: string;\n    profileImage?: string;\n}\n\nexport type ChatMessageType = 'TEXT' | 'IMAGE' | 'AUDIO' | 'FILE' | 'MIXED';\n\nexport interface ChatFileResponseType {\n    fileId: number;\n    originalFilename: string;\n    fileUrl: string;\n    fileType: string;\n    contentType?: string;\n    fileSize?: number;\n    thumbnailUrl?: string;\n    duration?: number;\n    createdAt?: string;\n}\n\nexport interface ChatMessageResponseType {\n    messageId: number;\n    roomId: number;\n    sender: ChatParticipant;\n    message?: string;\n    imageUrls: string[];\n    audioUrl?: string;\n    audioDuration?: number;\n    files: ChatFileResponseType[];\n    messageType: ChatMessageType;\n    sentAt: string;\n}\n\nexport interface ChatRoomSummary {\n    roomId: number;\n    roomName: string;\n    roomType: string;\n    isPublic: boolean;\n    maxParticipants?: number;\n    participants: ChatParticipant[];\n    lastMessage?: string;\n    lastMessageAt?: string;\n}\n\nexport interface SessionParticipantInfo {\n    userId: string;\n    name?: string;\n    role: 'HOST' | 'GUEST' | 'BOOKED';\n    joinedAt?: string;\n    profileImage?: string;\n}\n\nexport interface SessionNotificationSettings {\n    reminderBefore: number;\n    enableEmailReminder: boolean;\n    enablePushReminder: boolean;\n    enableSmsReminder: boolean;\n    updatedAt: string;\n}\n\nexport type SessionStatsPeriod = 'week' | 'month' | 'year';\n\nexport interface SessionStatsResponseType {\n    period: SessionStatsPeriod;\n    totalSessions: number;\n    completedSessions: number;\n    cancelledSessions: number;\n    upcomingSessions: number;\n    totalMinutes: number;\n    averageDuration: number;\n    partnersCount: number;\n    streakDays: number;\n    lastSessionAt?: string;\n}\n\nexport interface SessionSummaryResponse {\n    sessionId: number;\n    notes?: string;\n    durationMinutes?: number;\n    rating?: number;\n    highlights: string[];\n    actionItems: string[];\n    feedback?: {\n        rating?: number;\n        comment?: string;\n        partnerRating?: number;\n        partnerComment?: string;\n        tags?: string[];\n        improvementAreas?: string[];\n        wouldRecommend?: boolean;\n    };\n    updatedAt: string;\n}\n\nexport interface SessionTranscriptSegment {\n    speaker: string;\n    content: string;\n    startTime?: string;\n    endTime?: string;\n}\n\nexport interface SessionTranscriptResponse {\n    sessionId: number;\n    language?: string;\n    segments: SessionTranscriptSegment[];\n    generatedAt: string;\n}\n\nexport interface SessionRecordingStatus {\n    sessionId: number;\n    status: 'idle' | 'scheduled' | 'recording' | 'completed' | 'failed';\n    recordAudio: boolean;\n    recordVideo: boolean;\n    recordTranscript: boolean;\n    downloadUrl?: string;\n    message?: string;\n    updatedAt: string;\n}\n\nexport interface SessionInviteResponse {\n    sessionId: number;\n    inviteToken: string;\n    expiresAt: string;\n    joinUrl: string;\n}\n\nexport interface SessionHistoryResponse {\n    sessions: SessionResponseType[];\n    page: number;\n    size: number;\n    total: number;\n}\n\nexport interface MatchingRequestItem {\n    requestId: string;\n    senderId: string;\n    receiverId: string;\n    message?: string;\n    status: string;\n    responseMessage?: string;\n    respondedAt?: string;\n    expiresAt?: string;\n    createdAt: string;\n    partner: {\n        userId: string;\n        name?: string;\n        profileImageUrl?: string;\n    };\n}\n\nexport interface MatchSummary {\n    matchId: string;\n    partnerId: string;\n    partnerName?: string;\n    partnerProfileImageUrl?: string;\n    matchedAt: string;\n}\n\n// Session domain types\nexport interface SessionCreatePayload {\n    title: string;\n    description?: string;\n    sessionType: string;\n    languageCode?: string;\n    skillFocus?: string;\n    levelRequirement?: string;\n    scheduledAt: string; // ISO string\n    durationMinutes: number;\n    maxParticipants?: number;\n    isRecurring?: boolean;\n    recurrencePattern?: string;\n    recurrenceEndDate?: string;\n    isPublic?: boolean;\n    tags?: string;\n    preparationNotes?: string;\n    meetingUrl?: string;\n    partnerId?: string;\n    topic?: string;\n    language?: string;\n    targetLanguage?: string;\n    webRtcRoomId?: string;\n    webRtcRoomType?: string;\n    duration?: number;\n    metadata?: Record<string, any>;\n}\n\nexport interface SessionResponseType {\n    sessionId: number;\n    hostUserId: string;\n    hostUserName?: string;\n    hostUserProfileImage?: string;\n    guestUserId?: string;\n    guestUserName?: string;\n    guestUserProfileImage?: string;\n    title: string;\n    description?: string;\n    sessionType: string;\n    languageCode?: string;\n    skillFocus?: string;\n    levelRequirement?: string;\n    scheduledAt: string;\n    durationMinutes: number;\n    maxParticipants?: number;\n    currentParticipants: number;\n    status: string;\n    meetingUrl?: string;\n    isRecurring: boolean;\n    recurrencePattern?: string;\n    recurrenceEndDate?: string;\n    isPublic: boolean;\n    tags?: string;\n    preparationNotes?: string;\n    startedAt?: string;\n    endedAt?: string;\n    canJoin?: boolean;\n    isHost?: boolean;\n    isParticipant?: boolean;\n}\n\nexport interface SessionBookingResponseType {\n    bookingId: number;\n    sessionId: number;\n    sessionTitle: string;\n    sessionScheduledAt: string;\n    sessionDurationMinutes: number;\n    sessionLanguageCode?: string;\n    hostUserId: string;\n    hostUserName?: string;\n    hostUserProfileImage?: string;\n    status: string;\n    bookingMessage?: string;\n    bookedAt: string;\n    cancelledAt?: string;\n    cancellationReason?: string;\n    attended: boolean;\n    feedbackRating?: number;\n    feedbackComment?: string;\n    reminderSent: boolean;\n    canCancel: boolean;\n}\n\nexport interface SessionCalendarResponse {\n    events: Array<{\n        sessionId: number;\n        title: string;\n        description?: string;\n        startTime: string;\n        endTime: string;\n        eventType: string;\n        status: string;\n        isHost: boolean;\n        color?: string;\n    }>;\n    availableSlots: Array<{\n        startTime: string;\n        endTime: string;\n        isAvailable: boolean;\n    }>;\n}\n\n// Notification domain types\nexport interface NotificationRecord {\n    userId: string;\n    notificationId: number;\n    type: string;\n    title: string;\n    content: string;\n    actionUrl?: string;\n    actionData?: Record<string, any> | null;\n    imageUrl?: string;\n    iconUrl?: string;\n    status: string;\n    priority: number;\n    category?: string;\n    scheduledAt?: string;\n    sentAt?: string;\n    readAt?: string;\n    expiresAt?: string;\n    createdAt: string;\n    isPersistent: boolean;\n    senderUserId?: string;\n    templateId?: string;\n    deliveryChannels?: string;\n    pushSent: boolean;\n    emailSent: boolean;\n    smsSent: boolean;\n    expired?: boolean;\n    highPriority?: boolean;\n    scheduleMetadata?: Record<string, any> | null;\n}\n\nexport interface NotificationListItem {\n    id: number;\n    type: string;\n    category?: string;\n    title: string;\n    message: string;\n    content: string;\n    isRead: boolean;\n    status: string;\n    priority: number;\n    createdAt: string;\n    readAt?: string;\n    scheduledAt?: string;\n    expiresAt?: string;\n    clickUrl?: string;\n    data?: Record<string, any>;\n    imageUrl?: string;\n    iconUrl?: string;\n    highPriority?: boolean;\n    expired?: boolean;\n    scheduleMetadata?: Record<string, any> | null;\n}\n\nexport interface NotificationPreferenceSettings {\n    notificationsEnabled: boolean;\n    pushEnabled: boolean;\n    emailEnabled: boolean;\n    smsEnabled: boolean;\n    sessionNotifications: boolean;\n    sessionReminders: boolean;\n    matchingNotifications: boolean;\n    chatNotifications: boolean;\n    levelTestNotifications: boolean;\n    systemNotifications: boolean;\n    marketingNotifications: boolean;\n    quietHoursEnabled: boolean;\n    quietHoursStart?: string;\n    quietHoursEnd?: string;\n    timezone?: string;\n    notificationLanguage?: string;\n    digestEnabled: boolean;\n    digestFrequency?: string;\n    digestTime?: string;\n    subscriptionTopics?: string[];\n}\n\nexport interface NotificationStats {\n    total: number;\n    unread: number;\n    read: number;\n    today: number;\n    categories: Record<string, number>;\n}\n\n// Group session domain types\nexport interface GroupSessionRecord {\n    id: string;\n    title: string;\n    description?: string;\n    hostUserId: string;\n    hostUserName?: string;\n    hostProfileImage?: string;\n    topicCategory?: string;\n    targetLanguage?: string;\n    languageLevel?: string;\n    maxParticipants?: number;\n    currentParticipants: number;\n    scheduledAt?: string;\n    sessionDuration?: number;\n    status?: string;\n    roomId?: string;\n    sessionTags?: string[];\n    isPublic?: boolean;\n    joinCode?: string;\n    startedAt?: string;\n    endedAt?: string;\n    ratingAverage?: number;\n    ratingCount?: number;\n    participants?: GroupSessionParticipant[];\n    canJoin?: boolean;\n    joinMessage?: string;\n}\n\nexport interface GroupSessionParticipant {\n    userId: string;\n    userName?: string;\n    profileImage?: string;\n    status?: string;\n    joinedAt?: string;\n    isMuted?: boolean;\n    isVideoEnabled?: boolean;\n}\n\nexport interface GroupSessionListItem {\n    id: string;\n    title: string;\n    description?: string;\n    hostUserName?: string;\n    hostProfileImage?: string;\n    topicCategory?: string;\n    targetLanguage?: string;\n    languageLevel?: string;\n    maxParticipants?: number;\n    currentParticipants: number;\n    scheduledAt?: string;\n    sessionDuration?: number;\n    status?: string;\n    sessionTags?: string[];\n    ratingAverage?: number;\n    ratingCount?: number;\n    canJoin?: boolean;\n    timeUntilStart?: string;\n}\n", "/**\n * Cloudflare Workers\uC6A9 \uD1B5\uD569 \uB85C\uAE45 \uC2DC\uC2A4\uD15C\n * Edge \uD658\uACBD\uC758 \uD2B9\uC131\uC744 \uACE0\uB824\uD55C \uCD5C\uC801\uD654\uB41C \uB85C\uAE45\n */\n\nexport interface LogLevel {\n    DEBUG: 0;\n    INFO: 1;\n    WARN: 2;\n    ERROR: 3;\n}\n\nexport const LOG_LEVELS: LogLevel = {\n    DEBUG: 0,\n    INFO: 1,\n    WARN: 2,\n    ERROR: 3\n};\n\nexport interface LogContext {\n    requestId?: string;\n    userId?: string;\n    method?: string;\n    path?: string;\n    ip?: string;\n    userAgent?: string;\n    duration?: number;\n    status?: number;\n    component?: string;\n    operation?: string;\n}\n\nexport interface LogEntry {\n    level: keyof LogLevel;\n    message: string;\n    timestamp: string;\n    context?: LogContext;\n    error?: {\n        name: string;\n        message: string;\n        stack?: string;\n    };\n    metadata?: Record<string, any>;\n}\n\nexport class WorkersLogger {\n    private static instance: WorkersLogger;\n    private currentLevel: number = LOG_LEVELS.INFO;\n    private environment: string = 'production';\n\n    private constructor() {}\n\n    static getInstance(): WorkersLogger {\n        if (!WorkersLogger.instance) {\n            WorkersLogger.instance = new WorkersLogger();\n        }\n        return WorkersLogger.instance;\n    }\n\n    setLevel(level: keyof LogLevel) {\n        this.currentLevel = LOG_LEVELS[level];\n    }\n\n    setEnvironment(env: string) {\n        this.environment = env;\n        // \uAC1C\uBC1C \uD658\uACBD\uC5D0\uC11C\uB294 DEBUG \uB808\uBCA8\uAE4C\uC9C0 \uB85C\uAE45\n        if (env === 'development' || env === 'staging') {\n            this.setLevel('DEBUG');\n        }\n    }\n\n    private shouldLog(level: number): boolean {\n        return level >= this.currentLevel;\n    }\n\n    private createLogEntry(\n        level: keyof LogLevel,\n        message: string,\n        context?: LogContext,\n        error?: Error,\n        metadata?: Record<string, any>\n    ): LogEntry {\n        const entry: LogEntry = {\n            level,\n            message,\n            timestamp: new Date().toISOString(),\n            context,\n            metadata\n        };\n\n        if (error) {\n            entry.error = {\n                name: error.name,\n                message: error.message,\n                stack: this.environment === 'development' ? error.stack : undefined\n            };\n        }\n\n        return entry;\n    }\n\n    private output(entry: LogEntry) {\n        const logString = JSON.stringify(entry);\n        \n        switch (entry.level) {\n            case 'ERROR':\n                console.error(logString);\n                break;\n            case 'WARN':\n                console.warn(logString);\n                break;\n            case 'INFO':\n            case 'DEBUG':\n            default:\n                console.log(logString);\n                break;\n        }\n    }\n\n    debug(message: string, context?: LogContext, metadata?: Record<string, any>) {\n        if (!this.shouldLog(LOG_LEVELS.DEBUG)) return;\n        const entry = this.createLogEntry('DEBUG', message, context, undefined, metadata);\n        this.output(entry);\n    }\n\n    info(message: string, context?: LogContext, metadata?: Record<string, any>) {\n        if (!this.shouldLog(LOG_LEVELS.INFO)) return;\n        const entry = this.createLogEntry('INFO', message, context, undefined, metadata);\n        this.output(entry);\n    }\n\n    warn(message: string, context?: LogContext, metadata?: Record<string, any>) {\n        if (!this.shouldLog(LOG_LEVELS.WARN)) return;\n        const entry = this.createLogEntry('WARN', message, context, undefined, metadata);\n        this.output(entry);\n    }\n\n    error(message: string, error?: Error, context?: LogContext, metadata?: Record<string, any>) {\n        if (!this.shouldLog(LOG_LEVELS.ERROR)) return;\n        const entry = this.createLogEntry('ERROR', message, context, error, metadata);\n        this.output(entry);\n    }\n\n    // API \uD638\uCD9C \uC804\uC6A9 \uB85C\uAE45\n    apiCall(method: string, path: string, status: number, duration: number, context?: LogContext) {\n        const message = `${method.toUpperCase()} ${path} - ${status} (${duration}ms)`;\n        const apiContext: LogContext = {\n            ...context,\n            method: method.toUpperCase(),\n            path,\n            status,\n            duration,\n            component: 'API'\n        };\n\n        if (status >= 500) {\n            this.error(message, undefined, apiContext);\n        } else if (status >= 400) {\n            this.warn(message, apiContext);\n        } else {\n            this.info(message, apiContext);\n        }\n    }\n\n    // \uC131\uB2A5 \uB85C\uAE45\n    performance(operation: string, duration: number, context?: LogContext) {\n        const perfContext: LogContext = {\n            ...context,\n            operation,\n            duration,\n            component: 'PERFORMANCE'\n        };\n\n        if (duration > 5000) {\n            this.warn(`Slow operation: ${operation} (${duration}ms)`, perfContext);\n        } else if (duration > 1000) {\n            this.info(`Operation: ${operation} (${duration}ms)`, perfContext);\n        } else {\n            this.debug(`Operation: ${operation} (${duration}ms)`, perfContext);\n        }\n    }\n\n    // AI \uC11C\uBE44\uC2A4 \uB85C\uAE45\n    aiOperation(service: string, operation: string, duration: number, tokens?: number, context?: LogContext) {\n        const aiContext: LogContext = {\n            ...context,\n            component: 'AI',\n            operation: `${service}.${operation}`,\n            duration\n        };\n\n        const metadata = tokens ? { tokens } : undefined;\n        this.info(`AI ${service}: ${operation} (${duration}ms)`, aiContext, metadata);\n    }\n\n    // WebRTC \uB85C\uAE45\n    webrtc(event: string, roomId?: string, userId?: string, context?: LogContext) {\n        const webrtcContext: LogContext = {\n            ...context,\n            component: 'WEBRTC',\n            operation: event,\n            userId\n        };\n\n        const metadata = roomId ? { roomId } : undefined;\n        this.info(`WebRTC: ${event}`, webrtcContext, metadata);\n    }\n\n    // \uC2A4\uD1A0\uB9AC\uC9C0 \uC791\uC5C5 \uB85C\uAE45\n    storage(operation: string, key: string, size?: number, context?: LogContext) {\n        const storageContext: LogContext = {\n            ...context,\n            component: 'STORAGE',\n            operation\n        };\n\n        const metadata = { key, size };\n        this.debug(`Storage ${operation}: ${key}`, storageContext, metadata);\n    }\n\n    // \uCE90\uC2DC \uC791\uC5C5 \uB85C\uAE45\n    cache(operation: 'HIT' | 'MISS' | 'SET' | 'DELETE', key: string, context?: LogContext) {\n        const cacheContext: LogContext = {\n            ...context,\n            component: 'CACHE',\n            operation\n        };\n\n        const metadata = { key };\n        this.debug(`Cache ${operation}: ${key}`, cacheContext, metadata);\n    }\n\n    // \uBCF4\uC548 \uC774\uBCA4\uD2B8 \uB85C\uAE45\n    security(event: string, ip?: string, context?: LogContext) {\n        const securityContext: LogContext = {\n            ...context,\n            component: 'SECURITY',\n            operation: event,\n            ip\n        };\n\n        this.warn(`Security event: ${event}`, securityContext);\n    }\n}\n\n// \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4 \uB0B4\uBCF4\uB0B4\uAE30\nexport const logger = WorkersLogger.getInstance();\n\n// \uD3B8\uC758 \uD568\uC218\uB4E4\nexport const log = {\n    debug: (msg: string, ctx?: LogContext, meta?: Record<string, any>) => logger.debug(msg, ctx, meta),\n    info: (msg: string, ctx?: LogContext, meta?: Record<string, any>) => logger.info(msg, ctx, meta),\n    warn: (msg: string, ctx?: LogContext, meta?: Record<string, any>) => logger.warn(msg, ctx, meta),\n    error: (msg: string, err?: Error, ctx?: LogContext, meta?: Record<string, any>) => logger.error(msg, err, ctx, meta),\n    api: (method: string, path: string, status: number, duration: number, ctx?: LogContext) => \n        logger.apiCall(method, path, status, duration, ctx),\n    perf: (operation: string, duration: number, ctx?: LogContext) => \n        logger.performance(operation, duration, ctx),\n    ai: (service: string, operation: string, duration: number, tokens?: number, ctx?: LogContext) =>\n        logger.aiOperation(service, operation, duration, tokens, ctx),\n    webrtc: (event: string, roomId?: string, userId?: string, ctx?: LogContext) =>\n        logger.webrtc(event, roomId, userId, ctx),\n    storage: (operation: string, key: string, size?: number, ctx?: LogContext) =>\n        logger.storage(operation, key, size, ctx),\n    cache: (operation: 'HIT' | 'MISS' | 'SET' | 'DELETE', key: string, ctx?: LogContext) =>\n        logger.cache(operation, key, ctx),\n    security: (event: string, ip?: string, ctx?: LogContext) =>\n        logger.security(event, ip, ctx)\n};\n\nexport default logger;", "import { Context } from 'hono';\nimport { ApiResponse, PaginatedResponse } from '../types';\n\n/**\n * \uC131\uACF5 \uC751\uB2F5 \uC0DD\uC131\n */\nexport function successResponse<T>(\n    c: Context,\n    data: T,\n    meta?: Partial<ApiResponse['meta']>\n): Response {\n    const response: ApiResponse<T> = {\n        success: true,\n        data,\n        meta: {\n            timestamp: new Date().toISOString(),\n            requestId: c.get('requestId'),\n            ...meta\n        }\n    };\n    return c.json(response, 200);\n}\n\n/**\n * \uC0DD\uC131 \uC131\uACF5 \uC751\uB2F5 (201)\n */\nexport function createdResponse<T>(\n    c: Context,\n    data: T,\n    location?: string\n): Response {\n    const response: ApiResponse<T> = {\n        success: true,\n        data,\n        meta: {\n            timestamp: new Date().toISOString(),\n            requestId: c.get('requestId')\n        }\n    };\n\n    if (location) {\n        c.header('Location', location);\n    }\n\n    return c.json(response, 201);\n}\n\n/**\n * \uC0AD\uC81C \uC131\uACF5 \uC751\uB2F5 (204)\n */\nexport function noContentResponse(c: Context): Response {\n    return c.body(null, 204);\n}\n\n/**\n * \uD398\uC774\uC9C0\uB124\uC774\uC158 \uC751\uB2F5 \uC0DD\uC131\n */\nexport function paginatedResponse<T>(\n    c: Context,\n    data: T[],\n    pagination: {\n        page: number;\n        limit: number;\n        total: number;\n    }\n): Response {\n    const response: PaginatedResponse<T> = {\n        success: true,\n        data,\n        meta: {\n            timestamp: new Date().toISOString(),\n            requestId: c.get('requestId'),\n            page: pagination.page,\n            limit: pagination.limit,\n            total: pagination.total,\n            totalPages: Math.ceil(pagination.total / pagination.limit)\n        }\n    };\n    return c.json(response, 200);\n}\n\n/**\n * \uCE90\uC2DC \uD5E4\uB354 \uC124\uC815\n */\nexport function setCacheHeaders(\n    c: Context,\n    options: {\n        maxAge?: number;      // \uCD08 \uB2E8\uC704\n        sMaxAge?: number;     // CDN \uCE90\uC2DC \uC2DC\uAC04\n        mustRevalidate?: boolean;\n        private?: boolean;\n        noCache?: boolean;\n        noStore?: boolean;\n    } = {}\n): void {\n    const directives: string[] = [];\n\n    if (options.noStore) {\n        directives.push('no-store');\n    } else if (options.noCache) {\n        directives.push('no-cache');\n    } else {\n        if (options.private) {\n            directives.push('private');\n        } else {\n            directives.push('public');\n        }\n\n        if (options.maxAge !== undefined) {\n            directives.push(`max-age=${options.maxAge}`);\n        }\n\n        if (options.sMaxAge !== undefined) {\n            directives.push(`s-maxage=${options.sMaxAge}`);\n        }\n\n        if (options.mustRevalidate) {\n            directives.push('must-revalidate');\n        }\n    }\n\n    c.header('Cache-Control', directives.join(', '));\n}\n\n/**\n * ETag \uC0DD\uC131 \uBC0F \uAC80\uC99D\n */\nexport async function handleETag(\n    c: Context,\n    data: any,\n    weak: boolean = false\n): Promise<boolean> {\n    const content = JSON.stringify(data);\n    const hash = await crypto.subtle.digest(\n        'SHA-256',\n        new TextEncoder().encode(content)\n    );\n    const etag = `${weak ? 'W/' : ''}\"${btoa(String.fromCharCode(...new Uint8Array(hash)))}\"`;\n\n    c.header('ETag', etag);\n\n    const ifNoneMatch = c.req.header('If-None-Match');\n    if (ifNoneMatch === etag) {\n        c.status(304);\n        return true; // Not Modified\n    }\n\n    return false;\n}\n\n/**\n * \uC751\uB2F5 \uC555\uCD95 \uD655\uC778\n */\nexport function shouldCompress(c: Context): boolean {\n    const acceptEncoding = c.req.header('Accept-Encoding') || '';\n    return acceptEncoding.includes('gzip') || acceptEncoding.includes('br');\n}\n\n/**\n * CORS \uD504\uB9AC\uD50C\uB77C\uC774\uD2B8 \uC751\uB2F5\n */\nexport function preflightResponse(c: Context): Response {\n    return new Response(null, {\n        status: 204,\n        headers: {\n            'Access-Control-Allow-Origin': c.req.header('Origin') || '*',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Request-ID',\n            'Access-Control-Max-Age': '86400',\n            'Access-Control-Allow-Credentials': 'true'\n        }\n    });\n}\n\n/**\n * \uC5D0\uB7EC \uC751\uB2F5 \uC0DD\uC131\n */\nexport function errorResponse(\n    c: Context,\n    message: string,\n    code?: string,\n    details?: any,\n    status: number = 500\n): Response {\n    const response: ApiResponse = {\n        success: false,\n        error: {\n            message,\n            code: code || 'INTERNAL_ERROR',\n            details\n        },\n        meta: {\n            timestamp: new Date().toISOString(),\n            requestId: c.get('requestId')\n        }\n    };\n    return c.json(response, status as any);\n}", "// Cloudflare Workers AI \uC11C\uBE44\uC2A4\n\nimport { log } from '../utils/logger';\n\n// \uC624\uB514\uC624\uB97C \uCCAD\uD06C\uB85C \uB098\uB204\uB294 \uD568\uC218\nexport async function splitAudioIntoChunks(audioBuffer: ArrayBuffer, chunkSize: number = 1024 * 1024): Promise<ArrayBuffer[]> {\n    const chunks: ArrayBuffer[] = [];\n\n    // 1MB \uCCAD\uD06C\uB85C \uB098\uB204\uAE30\n    for (let i = 0; i < audioBuffer.byteLength; i += chunkSize) {\n        const chunk = audioBuffer.slice(i, Math.min(i + chunkSize, audioBuffer.byteLength));\n        chunks.push(chunk);\n    }\n\n    return chunks;\n}\n\n// \uB2E8\uC77C \uCCAD\uD06C \uCC98\uB9AC\nasync function processAudioChunk(\n    ai: Ai,\n    audioChunk: ArrayBuffer,\n    options: WhisperOptions = {}\n): Promise<WhisperResponse> {\n    try {\n        const response = await ai.run('@cf/openai/whisper-large-v3-turbo', {\n            audio: [...new Uint8Array(audioChunk)] as any,\n            task: options.task || 'transcribe',\n            language: options.language || 'auto',\n            vad_filter: options.vad_filter || true,\n            initial_prompt: options.initial_prompt,\n            prefix: options.prefix\n        });\n\n        return response;\n    } catch (error) {\n        log.error('Whisper chunk processing error', error as Error, { component: 'AI_SERVICE' });\n        return { text: '[Error transcribing chunk]', word_count: 0 };\n    }\n}\n\n// \uBA54\uC778 \uC624\uB514\uC624 \uCC98\uB9AC \uD568\uC218 (\uCCAD\uD0B9 \uC9C0\uC6D0)\nexport async function processAudio(\n    ai: Ai,\n    audioBuffer: ArrayBuffer,\n    options: WhisperOptions = {}\n): Promise<WhisperFullResponse> {\n    try {\n        // \uD30C\uC77C \uD06C\uAE30\uAC00 1MB \uC774\uD558\uBA74 \uC9C1\uC811 \uCC98\uB9AC\n        if (audioBuffer.byteLength <= 1024 * 1024) {\n            const response = await processAudioChunk(ai, audioBuffer, options);\n            return {\n                text: response.text || '',\n                word_count: response.word_count || 0,\n                words: response.words || [],\n                chunks: 1\n            };\n        }\n\n        // \uD070 \uD30C\uC77C\uC740 \uCCAD\uD06C\uB85C \uB098\uB204\uC5B4 \uCC98\uB9AC\n        const chunks = await splitAudioIntoChunks(audioBuffer);\n        const results: WhisperResponse[] = [];\n        let fullTranscript = '';\n        let totalWordCount = 0;\n        const allWords: WhisperWord[] = [];\n        let timeOffset = 0;\n\n        for (const chunk of chunks) {\n            const result = await processAudioChunk(ai, chunk, options);\n            results.push(result);\n\n            fullTranscript += result.text + ' ';\n            totalWordCount += result.word_count || 0;\n\n            // \uB2E8\uC5B4 \uD0C0\uC784\uC2A4\uD0EC\uD504 \uC870\uC815\n            if (result.words) {\n                const adjustedWords = result.words.map(word => ({\n                    ...word,\n                    start: word.start + timeOffset,\n                    end: word.end + timeOffset\n                }));\n                allWords.push(...adjustedWords);\n\n                // \uB2E4\uC74C \uCCAD\uD06C\uB97C \uC704\uD55C \uC2DC\uAC04 \uC624\uD504\uC14B \uC5C5\uB370\uC774\uD2B8\n                const lastWord = result.words[result.words.length - 1];\n                if (lastWord) {\n                    timeOffset = lastWord.end;\n                }\n            }\n        }\n\n        return {\n            text: fullTranscript.trim(),\n            word_count: totalWordCount,\n            words: allWords,\n            chunks: chunks.length\n        };\n    } catch (error) {\n        log.error('Whisper processing error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to process audio with Whisper');\n    }\n}\n\n// \uD14D\uC2A4\uD2B8 \uBD84\uC11D \uD568\uC218\nexport async function analyzeText(ai: Ai, text: string): Promise<LanguageAnalysis> {\n    try {\n        // LLM\uC73C\uB85C \uD14D\uC2A4\uD2B8 \uBD84\uC11D\n        const prompt = `\n      Analyze the following English text for language proficiency assessment.\n      Evaluate these 6 areas and provide a score (0-100) for each:\n      1. Grammar accuracy\n      2. Vocabulary range\n      3. Fluency and coherence\n      4. Pronunciation clarity (based on transcription quality)\n      5. Task achievement\n      6. Interaction skills\n\n      Text to analyze: \"${text}\"\n\n      Respond in JSON format with scores and brief feedback for each area.\n    `;\n\n        const response = await ai.run('@cf/meta/llama-3-8b-instruct', {\n            messages: [\n                { role: 'system', content: 'You are a professional language assessment expert.' },\n                { role: 'user', content: prompt }\n            ],\n            temperature: 0.3,\n            max_tokens: 500\n        });\n\n        // Parse the JSON response\n        try {\n            const analysis = JSON.parse((response as any).response);\n            return analysis;\n        } catch {\n            // Fallback if JSON parsing fails\n            return {\n                grammar: 70,\n                vocabulary: 70,\n                fluency: 70,\n                pronunciation: 70,\n                taskAchievement: 70,\n                interaction: 70,\n                feedback: response.response\n            };\n        }\n    } catch (error) {\n        log.error('Text analysis error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to analyze text');\n    }\n}\n\n// CEFR \uB808\uBCA8 \uACC4\uC0B0\nexport function calculateLevel(analysis: LanguageAnalysis): CEFRLevel {\n    // Calculate average score\n    const scores = [\n        analysis.grammar,\n        analysis.vocabulary,\n        analysis.fluency,\n        analysis.pronunciation,\n        analysis.taskAchievement,\n        analysis.interaction\n    ];\n\n    const averageScore = scores.reduce((a, b) => a + b, 0) / scores.length;\n\n    // Map to CEFR levels\n    if (averageScore >= 90) return 'C2';\n    if (averageScore >= 80) return 'C1';\n    if (averageScore >= 70) return 'B2';\n    if (averageScore >= 60) return 'B1';\n    if (averageScore >= 50) return 'A2';\n    return 'A1';\n}\n\n// \uC784\uBCA0\uB529 \uC0DD\uC131\nexport async function generateEmbedding(ai: Ai, text: string): Promise<number[]> {\n    try {\n        const response = await ai.run('@cf/baai/bge-base-en-v1.5', {\n            text: text\n        });\n\n        return (response as any).data?.[0] || [];\n    } catch (error) {\n        log.error('Embedding generation error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to generate embedding');\n    }\n}\n\n// LLM \uD14D\uC2A4\uD2B8 \uC0DD\uC131 \uD568\uC218\nexport async function generateText(\n    ai: Ai,\n    prompt: string,\n    options: LLMOptions = {}\n): Promise<LLMResponse> {\n    try {\n        const model = options.model || '@cf/meta/llama-3.2-3b-instruct';\n        const response = await ai.run(model as any, {\n            prompt: prompt,\n            stream: options.stream || false,\n            max_tokens: options.max_tokens || 1024,\n            temperature: options.temperature || 0.7,\n            top_p: options.top_p || 0.9,\n            top_k: options.top_k || 40,\n            repetition_penalty: options.repetition_penalty || 1.1,\n            frequency_penalty: options.frequency_penalty || 0,\n            presence_penalty: options.presence_penalty || 0,\n            seed: options.seed\n        });\n\n        return {\n            text: (response as any).response || response,\n            model: model,\n            usage: (response as any).usage || {\n                prompt_tokens: 0,\n                completion_tokens: 0,\n                total_tokens: 0\n            }\n        };\n    } catch (error) {\n        log.error('Text generation error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to generate text');\n    }\n}\n\n// \uB300\uD654\uD615 \uD14D\uC2A4\uD2B8 \uC0DD\uC131 \uD568\uC218 (Chat Completion)\nfunction normalizeAiResponseBody(raw: unknown): string {\n    if (typeof raw === 'string') {\n        return raw;\n    }\n\n    if (Array.isArray(raw)) {\n        return raw\n            .map((part) => {\n                if (typeof part === 'string') return part;\n                if (part && typeof part === 'object' && 'text' in part) {\n                    const textValue = (part as Record<string, unknown>).text;\n                    return typeof textValue === 'string' ? textValue : JSON.stringify(textValue ?? {});\n                }\n                return JSON.stringify(part ?? {});\n            })\n            .join('');\n    }\n\n    if (raw && typeof raw === 'object') {\n        if ('text' in (raw as Record<string, unknown>)) {\n            const textValue = (raw as Record<string, unknown>).text;\n            return typeof textValue === 'string' ? textValue : JSON.stringify(textValue ?? {});\n        }\n\n        return JSON.stringify(raw);\n    }\n\n    return '';\n}\n\nexport function sanitizeJsonResponse(raw: string | undefined | null): string {\n    if (!raw) return '';\n\n    let text = raw.trim();\n\n    if (text.startsWith('```')) {\n        text = text.replace(/^```(?:json)?\\s*/i, '');\n        const closingIndex = text.lastIndexOf('```');\n        if (closingIndex !== -1) {\n            text = text.slice(0, closingIndex);\n        }\n        text = text.trim();\n    }\n\n    return text;\n}\n\nexport async function generateChatCompletion(\n    ai: Ai,\n    messages: ChatMessage[],\n    options: LLMOptions = {}\n): Promise<LLMResponse> {\n    try {\n        const model = options.model || '@cf/meta/llama-3.3-70b-instruct-fp8-fast';\n\n        // Function calling \uC9C0\uC6D0 \uD655\uC778\n        const supportsFunctions = ['llama-3.3-70b-instruct-fp8-fast', 'llama-4-scout-17b-16e-instruct'].some(\n            m => model.includes(m)\n        );\n\n        const requestParams: any = {\n            messages: messages,\n            stream: options.stream || false,\n            max_tokens: options.max_tokens || 1024,\n            temperature: options.temperature || 0.7,\n            top_p: options.top_p || 0.9,\n            top_k: options.top_k || 40,\n            repetition_penalty: options.repetition_penalty || 1.1,\n            frequency_penalty: options.frequency_penalty || 0,\n            presence_penalty: options.presence_penalty || 0,\n            seed: options.seed\n        };\n\n        // JSON \uBAA8\uB4DC \uC9C0\uC6D0\n        if (options.response_format) {\n            requestParams.response_format = options.response_format;\n        }\n\n        // Function calling \uC9C0\uC6D0\n        if (options.tools && supportsFunctions) {\n            requestParams.tools = options.tools;\n        }\n\n        const response = await ai.run(model as any, requestParams);\n        const rawText = (response as any).response ?? response;\n\n        return {\n            text: normalizeAiResponseBody(rawText),\n            model: model,\n            usage: (response as any).usage || {\n                prompt_tokens: 0,\n                completion_tokens: 0,\n                total_tokens: 0\n            },\n            tool_calls: (response as any).tool_calls\n        };\n    } catch (error) {\n        log.error('Chat completion error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to generate chat completion');\n    }\n}\n\n// \uC5B8\uC5B4 \uB808\uBCA8 \uD3C9\uAC00 \uD568\uC218\nexport async function evaluateLanguageLevel(\n    ai: Ai,\n    transcription: string,\n    question: string\n): Promise<any> {\n    try {\n        const prompt = `Evaluate the following English response for language proficiency.\n\nQuestion asked: \"${question}\"\nStudent's response: \"${transcription}\"\n\nEvaluate the response across these 6 dimensions and provide a score (0-100) for each:\n1. Pronunciation clarity (based on transcription quality)\n2. Fluency and flow\n3. Grammar accuracy\n4. Vocabulary range and appropriateness\n5. Coherence and organization\n6. Interaction and responsiveness to the question\n\nAlso provide:\n- Brief feedback on overall performance\n- 2-3 specific suggestions for improvement\n- Estimated CEFR level (A1-C2)\n\nRespond in JSON format:\n{\n  \"scores\": {\n    \"pronunciation\": number,\n    \"fluency\": number,\n    \"grammar\": number,\n    \"vocabulary\": number,\n    \"coherence\": number,\n    \"interaction\": number\n  },\n  \"feedback\": \"string\",\n  \"suggestions\": [\"string\", \"string\", \"string\"],\n  \"estimatedLevel\": \"string\"\n}`;\n\n        const response = await generateChatCompletion(ai, [\n            { role: 'system', content: 'You are an expert English language assessor. Provide fair and constructive evaluations.' },\n            { role: 'user', content: prompt }\n        ], {\n            temperature: 0.3,\n            max_tokens: 600,\n            response_format: { type: 'json_object' }\n        });\n\n        const sanitized = sanitizeJsonResponse(response.text);\n\n        try {\n            return JSON.parse(sanitized);\n        } catch (parseError) {\n            log.warn('Language evaluation parse error', undefined, {\n                component: 'AI_SERVICE',\n                model: response.model,\n                rawPreview: response.text?.slice(0, 500),\n                sanitizedPreview: sanitized.slice(0, 500),\n                errorMessage: parseError instanceof Error ? parseError.message : String(parseError)\n            });\n            // Fallback evaluation\n            return {\n                scores: {\n                    pronunciation: 70,\n                    fluency: 70,\n                    grammar: 70,\n                    vocabulary: 70,\n                    coherence: 70,\n                    interaction: 70\n                },\n                feedback: \"Good effort in responding to the question.\",\n                suggestions: [\"Practice speaking more fluently\", \"Expand vocabulary range\", \"Work on grammar accuracy\"],\n                estimatedLevel: \"B1\"\n            };\n        }\n    } catch (error) {\n        log.error('Language evaluation error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to evaluate language level');\n    }\n}\n\n// \uB808\uBCA8 \uD53C\uB4DC\uBC31 \uC0DD\uC131\nexport async function generateLevelFeedback(\n    ai: Ai,\n    analysis: LanguageAnalysis,\n    level: CEFRLevel\n): Promise<string> {\n    try {\n        const prompt = `Based on the following language assessment results, provide personalized feedback and learning recommendations.\n\nLevel: ${level}\nScores:\n- Grammar: ${analysis.grammar}/100\n- Vocabulary: ${analysis.vocabulary}/100\n- Fluency: ${analysis.fluency}/100\n- Pronunciation: ${analysis.pronunciation}/100\n- Task Achievement: ${analysis.taskAchievement}/100\n- Interaction: ${analysis.interaction}/100\n\nProvide:\n1. Overall assessment (2-3 sentences)\n2. Strengths (2-3 points)\n3. Areas for improvement (2-3 points)\n4. Specific study recommendations (3-4 actionable tips)\n5. Next steps to reach the next CEFR level\n\nKeep the tone encouraging and constructive. Format in clear sections.`;\n\n        const response = await generateText(ai, prompt, {\n            temperature: 0.6,\n            max_tokens: 800\n        });\n\n        return response.text;\n    } catch (error) {\n        log.error('Feedback generation error', error as Error, { component: 'AI_SERVICE' });\n        return 'Unable to generate detailed feedback at this time.';\n    }\n}\n\n// \uB300\uD654 \uC8FC\uC81C \uC0DD\uC131\nexport async function generateConversationTopics(\n    ai: Ai,\n    level: string,\n    interests: string[],\n    language: string\n): Promise<string[]> {\n    try {\n        const prompt = `Generate 5 conversation topics suitable for ${level} level ${language} learners.\nConsider their interests: ${interests.join(', ')}.\n\nRequirements:\n- Topics should match their proficiency level\n- Be engaging and relevant to their interests\n- Include mix of everyday and educational topics\n- Encourage natural conversation flow\n\nReturn ONLY a JSON array of 5 topic strings, no other text.`;\n\n        const response = await generateText(ai, prompt, {\n            temperature: 0.8,\n            max_tokens: 200\n        });\n\n        try {\n            const topics = JSON.parse(response.text);\n            return Array.isArray(topics) ? topics : [];\n        } catch {\n            return [\n                'Daily routines and habits',\n                'Hobbies and free time activities',\n                'Travel experiences and plans',\n                'Technology in daily life',\n                'Cultural differences and similarities'\n            ];\n        }\n    } catch (error) {\n        log.error('Topic generation error', error as Error, { component: 'AI_SERVICE' });\n        return [];\n    }\n}\n\n// \uC2E4\uC2DC\uAC04 \uBC88\uC5ED\nexport async function translateText(\n    ai: Ai,\n    text: string,\n    targetLanguage: string,\n    sourceLanguage: string = 'auto'\n): Promise<string> {\n    try {\n        const prompt = `Translate the following text from ${sourceLanguage} to ${targetLanguage}. \nOnly provide the translated text without any explanation or additional formatting.\nIf the text is already in the target language, return it as is.\n\nText to translate: \"${text}\"`;\n\n        const response = await generateChatCompletion(ai, [\n            {\n                role: 'system',\n                content: 'You are a professional translator. Provide accurate, natural-sounding translations while preserving the original meaning and tone.'\n            },\n            { role: 'user', content: prompt }\n        ], {\n            temperature: 0.3,\n            max_tokens: 500\n        });\n\n        return response.text.trim();\n    } catch (error) {\n        log.error('Translation error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to translate text');\n    }\n}\n\n// \uB2E4\uC911 \uC5B8\uC5B4 \uB3D9\uC2DC \uBC88\uC5ED\nexport async function translateToMultipleLanguages(\n    ai: Ai,\n    text: string,\n    targetLanguages: string[],\n    sourceLanguage: string = 'auto'\n): Promise<Record<string, string>> {\n    try {\n        const languageMap: Record<string, string> = {\n            'en': 'English',\n            'ko': 'Korean',\n            'ja': 'Japanese',\n            'zh': 'Chinese',\n            'es': 'Spanish',\n            'fr': 'French',\n            'de': 'German',\n            'pt': 'Portuguese',\n            'ru': 'Russian',\n            'ar': 'Arabic'\n        };\n\n        const languageList = targetLanguages\n            .map(code => `${languageMap[code] || code}: [translation]`)\n            .join('\\n');\n\n        const prompt = `Translate the following text to multiple languages. Provide ONLY the translations in the exact format shown, with no additional text:\n\n${languageList}\n\nText to translate: \"${text}\"`;\n\n        const response = await generateChatCompletion(ai, [\n            {\n                role: 'system',\n                content: 'You are a professional translator. Provide accurate translations in the requested format.'\n            },\n            { role: 'user', content: prompt }\n        ], {\n            temperature: 0.3,\n            max_tokens: 1000\n        });\n\n        const translations: Record<string, string> = {};\n        const lines = response.text.trim().split('\\n');\n\n        for (const line of lines) {\n            const match = line.match(/^(English|Korean|Japanese|Chinese|Spanish|French|German|Portuguese|Russian|Arabic):\\s*(.+)$/);\n            if (match) {\n                const langName = match[1];\n                const translation = match[2].trim();\n                const langCode = Object.entries(languageMap).find(([code, name]) => name === langName)?.[0];\n                if (langCode) {\n                    translations[langCode] = translation;\n                }\n            }\n        }\n\n        return translations;\n    } catch (error) {\n        log.error('Multi-translation error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to translate to multiple languages');\n    }\n}\n\n// \uC138\uC158 \uC694\uC57D \uC0DD\uC131\nexport async function generateSessionSummary(\n    ai: Ai,\n    transcript: string,\n    duration: number,\n    participants: string[]\n): Promise<SessionSummary> {\n    try {\n        const prompt = `Analyze this language learning session and provide a structured summary.\n\nSession Duration: ${Math.round(duration / 60)} minutes\nParticipants: ${participants.join(', ')}\nTranscript: \"${transcript}\"\n\nProvide a JSON response with:\n{\n  \"keyPoints\": [\"list of 3-5 main topics discussed\"],\n  \"vocabularyUsed\": [\"list of 5-10 key vocabulary items\"],\n  \"grammarPatterns\": [\"list of 3-5 grammar structures used\"],\n  \"speakingTime\": { \"participant1\": percentage, \"participant2\": percentage },\n  \"suggestions\": [\"list of 3-4 improvement suggestions\"],\n  \"overallRating\": number (1-10)\n}`;\n\n        const response = await generateChatCompletion(ai, [\n            { role: 'system', content: 'You are a language learning session analyzer. Respond only with valid JSON.' },\n            { role: 'user', content: prompt }\n        ], {\n            temperature: 0.3,\n            max_tokens: 600,\n            response_format: { type: 'json_object' }\n        });\n\n        try {\n            return JSON.parse(response.text);\n        } catch {\n            return {\n                keyPoints: ['Session completed'],\n                vocabularyUsed: [],\n                grammarPatterns: [],\n                speakingTime: {},\n                suggestions: ['Continue practicing'],\n                overallRating: 7\n            };\n        }\n    } catch (error) {\n        log.error('Session summary error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to generate session summary');\n    }\n}\n\n// Type definitions\nexport interface WhisperOptions {\n    task?: 'transcribe' | 'translate';\n    language?: string;\n    vad_filter?: boolean;\n    initial_prompt?: string;\n    prefix?: string;\n}\n\nexport interface WhisperResponse {\n    text: string;\n    word_count?: number;\n    words?: WhisperWord[];\n    vtt?: string;\n}\n\nexport interface WhisperWord {\n    word: string;\n    start: number;\n    end: number;\n}\n\nexport interface WhisperFullResponse extends WhisperResponse {\n    chunks: number;\n}\n\ninterface LanguageAnalysis {\n    grammar: number;\n    vocabulary: number;\n    fluency: number;\n    pronunciation: number;\n    taskAchievement: number;\n    interaction: number;\n    feedback?: string;\n}\n\ntype CEFRLevel = 'A1' | 'A2' | 'B1' | 'B2' | 'C1' | 'C2';\n\n// LLM \uD0C0\uC785 \uC815\uC758\nexport interface LLMOptions {\n    model?: string;\n    stream?: boolean;\n    max_tokens?: number;\n    temperature?: number;\n    top_p?: number;\n    top_k?: number;\n    repetition_penalty?: number;\n    frequency_penalty?: number;\n    presence_penalty?: number;\n    seed?: number;\n    response_format?: {\n        type: 'json_object' | 'json_schema';\n        json_schema?: any;\n    };\n    tools?: Tool[];\n}\n\nexport interface LLMResponse {\n    text: string;\n    model: string;\n    usage: {\n        prompt_tokens: number;\n        completion_tokens: number;\n        total_tokens: number;\n    };\n    tool_calls?: ToolCall[];\n}\n\nexport interface ChatMessage {\n    role: 'system' | 'user' | 'assistant' | 'tool';\n    content: string;\n    tool_call_id?: string;\n}\n\nexport interface Tool {\n    type: 'function';\n    function: {\n        name: string;\n        description: string;\n        parameters: {\n            type: string;\n            properties: Record<string, any>;\n            required?: string[];\n        };\n    };\n}\n\nexport interface ToolCall {\n    name: string;\n    arguments: Record<string, any>;\n}\n\nexport interface SessionSummary {\n    keyPoints: string[];\n    vocabularyUsed: string[];\n    grammarPatterns: string[];\n    speakingTime: Record<string, number>;\n    suggestions: string[];\n    overallRating: number;\n}\n\n// \uC0AC\uC6A9 \uAC00\uB2A5\uD55C \uBAA8\uB378 \uBAA9\uB85D\nexport const AVAILABLE_MODELS = {\n    // Llama \uBAA8\uB378\uB4E4\n    'llama-3.3-70b-instruct-fp8-fast': {\n        name: 'Llama 3.3 70B (Fast)',\n        contextWindow: 24000,\n        supportsTools: true,\n        costPerMInput: 0.29,\n        costPerMOutput: 2.25\n    },\n    'llama-3.2-3b-instruct': {\n        name: 'Llama 3.2 3B',\n        contextWindow: 128000,\n        supportsTools: false,\n        costPerMInput: 0.051,\n        costPerMOutput: 0.34\n    },\n    'llama-4-scout-17b-16e-instruct': {\n        name: 'Llama 4 Scout 17B',\n        contextWindow: 131000,\n        supportsTools: true,\n        costPerMInput: 0.27,\n        costPerMOutput: 0.85\n    },\n    'llama-3.1-8b-instruct': {\n        name: 'Llama 3.1 8B',\n        contextWindow: 7968,\n        supportsTools: false,\n        costPerMInput: 0.28,\n        costPerMOutput: 0.83\n    },\n    'llama-3-8b-instruct': {\n        name: 'Llama 3 8B',\n        contextWindow: 8192,\n        supportsTools: false,\n        costPerMInput: 0.28,\n        costPerMOutput: 0.83\n    },\n    'llama-2-7b-chat-fp16': {\n        name: 'Llama 2 7B',\n        contextWindow: 4096,\n        supportsTools: false,\n        costPerMInput: 0.56,\n        costPerMOutput: 6.67\n    }\n};\n", "// R2 Storage \uC11C\uBE44\uC2A4\n\nexport async function saveToR2(\n  bucket: R2Bucket,\n  key: string,\n  data: ArrayBuffer | ReadableStream,\n  contentType?: string,\n  customMetadata?: Record<string, string>\n): Promise<R2Object> {\n  try {\n    const httpMetadata: R2HTTPMetadata = {};\n\n    if (contentType) {\n      httpMetadata.contentType = contentType;\n    }\n\n    // Set cache control based on content type\n    if (contentType?.startsWith('image/')) {\n      httpMetadata.cacheControl = 'public, max-age=31536000'; // 1 year for images\n    } else if (contentType?.startsWith('audio/')) {\n      httpMetadata.cacheControl = 'public, max-age=86400'; // 24 hours for audio\n    } else {\n      httpMetadata.cacheControl = 'public, max-age=3600'; // 1 hour default\n    }\n\n    const object = await bucket.put(key, data, {\n      httpMetadata,\n      customMetadata: {\n        uploadedAt: new Date().toISOString(),\n        ...customMetadata\n      }\n    });\n\n    return object;\n  } catch (error) {\n    console.error('R2 save error:', error);\n    throw new Error(`Failed to save to R2: ${key}`);\n  }\n}\n\nexport async function getFromR2(\n  bucket: R2Bucket,\n  key: string\n): Promise<R2ObjectBody | null> {\n  try {\n    const object = await bucket.get(key);\n    return object;\n  } catch (error) {\n    console.error('R2 get error:', error);\n    return null;\n  }\n}\n\nexport async function deleteFromR2(\n  bucket: R2Bucket,\n  key: string\n): Promise<void> {\n  try {\n    await bucket.delete(key);\n  } catch (error) {\n    console.error('R2 delete error:', error);\n    throw new Error(`Failed to delete from R2: ${key}`);\n  }\n}\n\nexport async function listR2Objects(\n  bucket: R2Bucket,\n  prefix?: string,\n  limit?: number\n): Promise<R2Objects> {\n  try {\n    const options: R2ListOptions = {\n      limit: limit || 1000\n    };\n\n    if (prefix) {\n      options.prefix = prefix;\n    }\n\n    return await bucket.list(options);\n  } catch (error) {\n    console.error('R2 list error:', error);\n    throw new Error('Failed to list R2 objects');\n  }\n}\n\nexport async function getSignedUrl(\n  bucket: R2Bucket,\n  key: string,\n  expiresIn: number = 3600\n): Promise<string> {\n  try {\n    // R2\uC5D0\uC11C \uC11C\uBA85\uB41C URL\uC744 \uC9C1\uC811 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC74C\n    // Worker\uB97C \uD1B5\uD55C \uC9C1\uC811 URL \uBC18\uD658\uC73C\uB85C \uB300\uCCB4\n    return `/api/v1/upload/file/${key}`;\n  } catch (error) {\n    console.error('Signed URL error:', error);\n    throw new Error('Failed to generate signed URL');\n  }\n}\n\n// Utility function to validate file types\nexport function isValidFileType(\n  mimeType: string,\n  allowedTypes: string[]\n): boolean {\n  return allowedTypes.some(type => {\n    if (type.endsWith('/*')) {\n      const category = type.slice(0, -2);\n      return mimeType.startsWith(category + '/');\n    }\n    return mimeType === type;\n  });\n}\n\n// Utility function to generate unique file names\nexport function generateUniqueFileName(\n  originalName: string,\n  userId: string\n): string {\n  const timestamp = Date.now();\n  const random = Math.random().toString(36).substring(2, 8);\n  const extension = originalName.split('.').pop();\n  const nameWithoutExt = originalName.replace(/\\.[^/.]+$/, '');\n\n  // Sanitize filename\n  const sanitized = nameWithoutExt\n    .replace(/[^a-zA-Z0-9_-]/g, '_')\n    .substring(0, 50);\n\n  return `${userId}/${timestamp}_${random}_${sanitized}.${extension}`;\n}\n\n// Type definitions for R2\ninterface R2HTTPMetadata {\n  contentType?: string;\n  contentLanguage?: string;\n  contentDisposition?: string;\n  contentEncoding?: string;\n  cacheControl?: string;\n  cacheExpiry?: Date;\n}\n\ninterface R2ListOptions {\n  limit?: number;\n  prefix?: string;\n  cursor?: string;\n  delimiters?: string;\n  startAfter?: string;\n}\n", "import { Hono } from 'hono';\nimport { Env } from '../index';\nimport { Variables, WebRTCRoom } from '../types';\nimport { successResponse, createdResponse } from '../utils/response';\nimport { validationError, notFoundError, conflictError } from '../middleware/error-handler';\nimport { auth } from '../middleware/auth';\nimport { log } from '../utils/logger';\nimport { getActiveRooms } from '../utils/activeRooms';\n\nexport const webrtcRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\n// Create a new room\nwebrtcRoutes.post('/create', auth({ optional: true }), async (c) => {\n  const { roomType = 'audio', maxParticipants = 4, metadata = {} } = await c.req.json();\n\n  // Validate room type\n  if (!['audio', 'video'].includes(roomType)) {\n    throw validationError('Invalid room type. Must be \"audio\" or \"video\"');\n  }\n\n  // Validate max participants\n  if (maxParticipants < 2 || maxParticipants > 10) {\n    throw validationError('Max participants must be between 2 and 10');\n  }\n\n  // Generate unique room ID\n  const roomId = crypto.randomUUID();\n\n  // Create Durable Object instance\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  // Initialize room\n  const response = await room.fetch(new Request('http://room/init', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ roomType, maxParticipants, metadata })\n  }));\n\n  if (!response.ok) {\n    const error = await response.json() as any;\n    throw new Error(String(error?.message) || 'Failed to initialize room');\n  }\n\n  const data = {\n    roomId,\n    roomType,\n    maxParticipants,\n    metadata,\n    websocketUrl: `/api/v1/room/${roomId}/ws`,\n    joinUrl: `/api/v1/room/${roomId}/join`,\n    createdAt: new Date().toISOString()\n  };\n\n  // Cache room info\n  await c.env.CACHE.put(\n    `room:${roomId}`,\n    JSON.stringify(data),\n    { expirationTtl: 3600 } // 1 hour\n  );\n\n  return createdResponse(c, data, `/api/v1/room/${roomId}`);\n});\n\n// List active rooms (for dashboards / client session list)\nwebrtcRoutes.get('/active', async (c) => {\n  const rooms = await getActiveRooms(c.env.CACHE);\n  return successResponse(c, rooms);\n});\n\n// Join a room\nwebrtcRoutes.post('/:roomId/join', auth({ optional: true }), async (c) => {\n  const roomId = c.req.param('roomId');\n  const { userId, userName, userMetadata = {} } = await c.req.json();\n\n  if (!userId || !userName) {\n    throw validationError('userId and userName are required');\n  }\n\n  // Check if room exists in cache\n  const cachedRoom = await c.env.CACHE.get(`room:${roomId}`);\n  if (!cachedRoom) {\n    // Try to get room info from Durable Object\n    const id = c.env.ROOM.idFromName(roomId);\n    const room = c.env.ROOM.get(id);\n\n    const infoResponse = await room.fetch(new Request('http://room/info'));\n    if (!infoResponse.ok) {\n      throw notFoundError('Room');\n    }\n  }\n\n  // Get Durable Object instance\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  // Join room\n  const response = await room.fetch(new Request('http://room/join', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ userId, userName, userMetadata })\n  }));\n\n  if (!response.ok) {\n    const error = await response.json() as any;\n    if (response.status === 409) {\n      throw conflictError(String(error?.message) || 'Room is full');\n    }\n    throw new Error(String(error?.message) || 'Failed to join room');\n  }\n\n  const result = await response.json() as any;\n\n  return successResponse(c, {\n    ...(result || {}),\n    websocketUrl: `/api/v1/room/${roomId}/ws?userId=${userId}&userName=${encodeURIComponent(userName)}`\n  });\n});\n\n// Leave a room\nwebrtcRoutes.post('/:roomId/leave', auth({ optional: true }), async (c) => {\n  const roomId = c.req.param('roomId');\n  const { userId } = await c.req.json();\n\n  if (!userId) {\n    throw validationError('userId is required');\n  }\n\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  const response = await room.fetch(new Request('http://room/leave', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ userId })\n  }));\n\n  if (!response.ok) {\n    const error = await response.json() as any;\n    throw new Error(String(error?.message) || 'Failed to leave room');\n  }\n\n  return successResponse(c, await response.json());\n});\n\n// WebSocket endpoint for signaling\nwebrtcRoutes.get('/:roomId/ws', async (c) => {\n  const roomId = c.req.param('roomId');\n  const userId = c.req.query('userId');\n  const userName = c.req.query('userName') || 'Anonymous';\n  const upgrade = c.req.header('Upgrade');\n\n  if (!upgrade || upgrade !== 'websocket') {\n    throw validationError('Expected WebSocket upgrade header');\n  }\n\n  if (!userId) {\n    throw validationError('userId parameter is required');\n  }\n\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  // Forward WebSocket request with query parameters\n  const wsUrl = `http://room/websocket?userId=${userId}&userName=${encodeURIComponent(userName)}`;\n\n  return room.fetch(new Request(wsUrl, {\n    headers: c.req.raw.headers\n  }));\n});\n\n// Update room settings\nwebrtcRoutes.patch('/:roomId/settings', auth({ optional: true }), async (c) => {\n  const roomId = c.req.param('roomId');\n  const settings = await c.req.json();\n\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  const response = await room.fetch(new Request('http://room/settings', {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(settings)\n  }));\n\n  if (!response.ok) {\n    const error = await response.json() as any;\n    throw new Error(String(error?.message) || 'Failed to update settings');\n  }\n\n  // Update cache if room exists\n  const cachedRoom = await c.env.CACHE.get(`room:${roomId}`);\n  if (cachedRoom) {\n    const roomData = JSON.parse(cachedRoom);\n    await c.env.CACHE.put(\n      `room:${roomId}`,\n      JSON.stringify({ ...roomData, ...settings }),\n      { expirationTtl: 3600 }\n    );\n  }\n\n  return successResponse(c, await response.json());\n});\n\n// Get room info\nwebrtcRoutes.get('/:roomId/info', async (c) => {\n  const roomId = c.req.param('roomId');\n\n  // Check cache first\n  const cachedRoom = await c.env.CACHE.get(`room:${roomId}`);\n  if (cachedRoom) {\n    return successResponse(c, JSON.parse(cachedRoom));\n  }\n\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  const response = await room.fetch(new Request('http://room/info'));\n\n  if (!response.ok) {\n    if (response.status === 404) {\n      throw notFoundError('Room');\n    }\n    const error = await response.json() as any;\n    throw new Error(String(error?.message) || 'Failed to get room info');\n  }\n\n  const data = await response.json();\n\n  // Cache the result\n  await c.env.CACHE.put(\n    `room:${roomId}`,\n    JSON.stringify(data),\n    { expirationTtl: 3600 }\n  );\n\n  return successResponse(c, data);\n});\n\n// Get ICE servers for a room\nwebrtcRoutes.get('/:roomId/ice-servers', async (c) => {\n  const roomId = c.req.param('roomId');\n\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  const response = await room.fetch(new Request('http://room/ice-servers'));\n\n  if (!response.ok) {\n    const error = await response.json() as any;\n    throw new Error(String(error?.message) || 'Failed to get ICE servers');\n  }\n\n  return successResponse(c, await response.json());\n});\n\n// Get room metrics and analytics\nwebrtcRoutes.get('/:roomId/metrics', auth({ optional: true }), async (c) => {\n  const roomId = c.req.param('roomId');\n\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  const response = await room.fetch(new Request('http://room/metrics'));\n\n  if (!response.ok) {\n    if (response.status === 404) {\n      throw notFoundError('Room');\n    }\n    const error = await response.json() as any;\n    throw new Error(String(error?.message) || 'Failed to get room metrics');\n  }\n\n  const data = await response.json() as any;\n\n  return successResponse(c, {\n    ...(data || {}),\n    analytics: {\n      uptimeHours: Math.floor((data?.metrics?.sessionDuration || 0) / 3600),\n      averageParticipants: (data?.metrics?.totalParticipants || 0) > 0 ? \n        (data?.metrics?.peakParticipants || 0) / Math.max(1, data?.currentParticipants || 0) : 0,\n      messagesPerMinute: (data?.metrics?.sessionDuration || 0) > 0 ? \n        ((data?.metrics?.messagesExchanged || 0) / ((data?.metrics?.sessionDuration || 0) / 60)) : 0\n    }\n  });\n});\n\n// Upload recording chunk to R2 storage\nwebrtcRoutes.post('/:roomId/recording/upload', auth({ optional: true }), async (c) => {\n  const roomId = c.req.param('roomId');\n  const formData = await c.req.formData();\n  \n  const file = formData.get('recording') as File | null;\n  const userId = formData.get('userId') as string;\n  const filename = formData.get('filename') as string;\n  \n  if (!file || !userId || !filename) {\n    throw validationError('recording, userId, and filename are required');\n  }\n\n  // Generate unique filename\n  const timestamp = Date.now();\n  const extension = filename.split('.').pop() || 'webm';\n  const storageKey = `recordings/${roomId}/${userId}/${timestamp}-${filename}`;\n\n  try {\n    // Upload to R2\n    await c.env.STORAGE.put(storageKey, file.stream(), {\n      httpMetadata: {\n        contentType: file.type || 'video/webm'\n      }\n    });\n\n    // Get Durable Object to notify about the upload\n    const id = c.env.ROOM.idFromName(roomId);\n    const room = c.env.ROOM.get(id);\n\n    // Notify room about recording chunk\n    await room.fetch(new Request('http://room/websocket', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        type: 'recording-chunk',\n        userId,\n        data: {\n          filename: storageKey,\n          originalFilename: filename,\n          size: file.size,\n          duration: formData.get('duration') || 0,\n          contentType: file.type\n        }\n      })\n    }));\n\n    return successResponse(c, {\n      uploadedTo: storageKey,\n      size: file.size,\n      contentType: file.type,\n      uploadedAt: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('Recording upload error:', error);\n    throw new Error('Failed to upload recording');\n  }\n});\n\n// List active rooms (admin only)\nwebrtcRoutes.get('/list', auth({ roles: ['admin'] }), async (c) => {\n  // This would require a separate storage mechanism to track active rooms\n  // For now, return empty list\n  return successResponse(c, {\n    rooms: [],\n    total: 0,\n    message: 'Room listing requires additional infrastructure setup'\n  });\n});\n", "import { ActiveRoomInfo } from '../types';\n\nconst ACTIVE_ROOMS_CACHE_KEY = 'active_rooms';\nconst DEFAULT_TTL_SECONDS = 3600;\n\nasync function readActiveRooms(cache: KVNamespace): Promise<ActiveRoomInfo[]> {\n  if (!cache) return [];\n  const raw = await cache.get(ACTIVE_ROOMS_CACHE_KEY);\n  if (!raw) return [];\n  try {\n    const parsed = JSON.parse(raw) as ActiveRoomInfo[];\n    if (Array.isArray(parsed)) {\n      return parsed;\n    }\n    return [];\n  } catch (error) {\n    console.error('Failed to parse active rooms cache', error);\n    return [];\n  }\n}\n\nasync function writeActiveRooms(cache: KVNamespace, rooms: ActiveRoomInfo[]): Promise<void> {\n  if (!cache) return;\n  await cache.put(\n    ACTIVE_ROOMS_CACHE_KEY,\n    JSON.stringify(rooms),\n    { expirationTtl: DEFAULT_TTL_SECONDS }\n  );\n}\n\nexport async function getActiveRooms(cache: KVNamespace): Promise<ActiveRoomInfo[]> {\n  return readActiveRooms(cache);\n}\n\nexport async function upsertActiveRoom(cache: KVNamespace, room: ActiveRoomInfo): Promise<void> {\n  if (!cache) return;\n  const rooms = await readActiveRooms(cache);\n  const index = rooms.findIndex((item) => item.roomId === room.roomId);\n  const nextRoom: ActiveRoomInfo = {\n    ...room,\n    updatedAt: room.updatedAt || new Date().toISOString(),\n  };\n  if (index >= 0) {\n    rooms[index] = nextRoom;\n  } else {\n    rooms.push(nextRoom);\n  }\n  await writeActiveRooms(cache, rooms);\n}\n\nexport async function removeActiveRoom(cache: KVNamespace, roomId: string): Promise<void> {\n  if (!cache) return;\n  const rooms = await readActiveRooms(cache);\n  const filtered = rooms.filter((room) => room.roomId !== roomId);\n  if (filtered.length === rooms.length) {\n    return;\n  }\n  await writeActiveRooms(cache, filtered);\n}\n\n", "import { Hono } from 'hono';\nimport { Env } from '../index';\nimport { Variables } from '../types';\nimport { successResponse, createdResponse, noContentResponse, setCacheHeaders } from '../utils/response';\nimport { validationError, notFoundError, forbiddenError } from '../middleware/error-handler';\nimport { auth, getCurrentUser } from '../middleware/auth';\nimport { bodySizeLimit } from '../middleware/security';\nimport { saveToR2, getFromR2, deleteFromR2 } from '../services/storage';\n\nexport const uploadRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\ninterface UploadResponse {\n  key: string;\n  url: string;\n  size: number;\n  type: string;\n  variants?: Record<string, string>;\n  metadata?: Record<string, any>;\n}\n\n// File type and size limits\nconst FILE_LIMITS = {\n  audio: {\n    types: ['audio/webm', 'audio/mp3', 'audio/wav', 'audio/ogg', 'audio/m4a'],\n    maxSize: 50 * 1024 * 1024 // 50MB\n  },\n  image: {\n    types: ['image/jpeg', 'image/png', 'image/webp', 'image/gif', 'image/avif'],\n    maxSize: 10 * 1024 * 1024 // 10MB\n  },\n  video: {\n    types: ['video/mp4', 'video/webm', 'video/quicktime'],\n    maxSize: 100 * 1024 * 1024 // 100MB\n  },\n  document: {\n    types: ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'],\n    maxSize: 20 * 1024 * 1024 // 20MB\n  }\n};\n\n// Validate file\nfunction validateFile(file: File, type: keyof typeof FILE_LIMITS): void {\n  const limits = FILE_LIMITS[type];\n\n  if (!limits.types.includes(file.type)) {\n    throw validationError(`Invalid file type. Allowed types: ${limits.types.join(', ')}`);\n  }\n\n  if (file.size > limits.maxSize) {\n    const maxSizeMB = limits.maxSize / (1024 * 1024);\n    throw validationError(`File too large. Maximum size: ${maxSizeMB}MB`);\n  }\n}\n\n// Generate unique file key\nfunction generateFileKey(type: string, userId: string, fileName: string, folder?: string): string {\n  const timestamp = Date.now();\n  const safeFileName = fileName.replace(/[^a-zA-Z0-9.-]/g, '_');\n  const parts = [type];\n\n  if (folder) {\n    parts.push(folder);\n  }\n\n  parts.push(userId, `${timestamp}-${safeFileName}`);\n\n  return parts.join('/');\n}\n\n// Upload audio file\nuploadRoutes.post('/audio', auth(), bodySizeLimit(50 * 1024 * 1024), async (c) => {\n  const formData = await c.req.formData();\n  const file = formData.get('file') as File | null;\n  const folder = formData.get('folder') as string;\n  const metadata = formData.get('metadata') as string;\n\n  if (!file) {\n    throw validationError('File is required');\n  }\n\n  const user = getCurrentUser(c)!;\n  validateFile(file, 'audio');\n\n  const buffer = await file.arrayBuffer();\n  const key = generateFileKey('audio', user.id, file.name, folder);\n\n  // Save file with metadata\n  const uploadMetadata = metadata ? JSON.parse(metadata) : {};\n  await saveToR2(c.env.STORAGE, key, buffer, file.type, {\n    userId: user.id,\n    originalName: file.name,\n    ...uploadMetadata\n  });\n\n  const response: UploadResponse = {\n    key,\n    url: `/api/v1/upload/file/${key}`,\n    size: file.size,\n    type: file.type,\n    metadata: uploadMetadata\n  };\n\n  return createdResponse(c, response, response.url);\n});\n\n// Upload image file\nuploadRoutes.post('/image', auth(), bodySizeLimit(10 * 1024 * 1024), async (c) => {\n  const formData = await c.req.formData();\n  const file = formData.get('file') as File | null;\n  const type = formData.get('type') as string; // 'profile' | 'chat' | 'general'\n  const metadata = formData.get('metadata') as string;\n\n  if (!file) {\n    throw validationError('File is required');\n  }\n\n  const user = getCurrentUser(c)!;\n  validateFile(file, 'image');\n\n  const buffer = await file.arrayBuffer();\n  const key = generateFileKey('images', user.id, file.name, type || 'general');\n\n  // Save file with metadata\n  const uploadMetadata = metadata ? JSON.parse(metadata) : {};\n  await saveToR2(c.env.STORAGE, key, buffer, file.type, {\n    userId: user.id,\n    originalName: file.name,\n    imageType: type,\n    ...uploadMetadata\n  });\n\n  // Generate variant URLs (for Cloudflare Images integration)\n  let variants: Record<string, string> = {};\n  if (type === 'profile') {\n    variants = {\n      thumbnail: `/api/v1/upload/file/${key}?variant=thumbnail`,\n      medium: `/api/v1/upload/file/${key}?variant=medium`,\n      large: `/api/v1/upload/file/${key}?variant=large`\n    };\n  }\n\n  const response: UploadResponse = {\n    key,\n    url: `/api/v1/upload/file/${key}`,\n    size: file.size,\n    type: file.type,\n    variants,\n    metadata: uploadMetadata\n  };\n\n  // Cache profile image URL\n  if (type === 'profile') {\n    await c.env.CACHE.put(\n      `profile-image:${user.id}`,\n      JSON.stringify(response),\n      { expirationTtl: 86400 } // 24 hours\n    );\n  }\n\n  return createdResponse(c, response, response.url);\n});\n\n// Upload video file\nuploadRoutes.post('/video', auth(), bodySizeLimit(100 * 1024 * 1024), async (c) => {\n  const formData = await c.req.formData();\n  const file = formData.get('file') as File | null;\n  const metadata = formData.get('metadata') as string;\n\n  if (!file) {\n    throw validationError('File is required');\n  }\n\n  const user = getCurrentUser(c)!;\n  validateFile(file, 'video');\n\n  // For large video files, consider using multipart upload\n  // This is a simplified version\n  const buffer = await file.arrayBuffer();\n  const key = generateFileKey('videos', user.id, file.name);\n\n  const uploadMetadata = metadata ? JSON.parse(metadata) : {};\n  await saveToR2(c.env.STORAGE, key, buffer, file.type, {\n    userId: user.id,\n    originalName: file.name,\n    ...uploadMetadata\n  });\n\n  const response: UploadResponse = {\n    key,\n    url: `/api/v1/upload/file/${key}`,\n    size: file.size,\n    type: file.type,\n    metadata: uploadMetadata\n  };\n\n  return createdResponse(c, response, response.url);\n});\n\n// Get uploaded file\nuploadRoutes.get('/file/*', async (c) => {\n  const path = c.req.path.replace('/api/v1/upload/file/', '');\n  const variant = c.req.query('variant');\n  const download = c.req.query('download') === 'true';\n\n  if (!path) {\n    throw validationError('Invalid file path');\n  }\n\n  // Check cache first for frequently accessed files\n  const cacheKey = `file:${path}${variant ? `:${variant}` : ''}`;\n  const cached = await c.env.CACHE.get(cacheKey, { type: 'stream' });\n  if (cached) {\n    setCacheHeaders(c, { maxAge: 3600, sMaxAge: 86400 });\n    return new Response(cached, {\n      headers: c.res.headers\n    });\n  }\n\n  const file = await getFromR2(c.env.STORAGE, path);\n\n  if (!file) {\n    throw notFoundError('File');\n  }\n\n  // Set appropriate headers\n  const headers = new Headers();\n  headers.set('Content-Type', file.httpMetadata?.contentType || 'application/octet-stream');\n\n  if (download || file.httpMetadata?.contentDisposition) {\n    const filename = file.customMetadata?.originalName || path.split('/').pop();\n    headers.set('Content-Disposition', `attachment; filename=\"${filename}\"`);\n  } else {\n    headers.set('Content-Disposition', 'inline');\n  }\n\n  // Set cache headers\n  setCacheHeaders(c, {\n    maxAge: 3600,       // 1 hour browser cache\n    sMaxAge: 86400,     // 24 hours CDN cache\n    private: false\n  });\n\n  Object.entries(c.res.headers).forEach(([key, value]) => {\n    headers.set(key, value as string);\n  });\n\n  // Cache frequently accessed files\n  if (!download && file.size < 1024 * 1024) { // Cache files under 1MB\n    await c.env.CACHE.put(\n      cacheKey,\n      file.body,\n      { expirationTtl: 3600 }\n    );\n  }\n\n  return new Response(file.body, { headers });\n});\n\n// Delete file\nuploadRoutes.delete('/file/*', auth(), async (c) => {\n  const path = c.req.path.replace('/api/v1/upload/file/', '');\n  const user = getCurrentUser(c)!;\n\n  if (!path) {\n    throw validationError('Invalid file path');\n  }\n\n  // Get file metadata to verify ownership\n  const file = await getFromR2(c.env.STORAGE, path);\n  if (!file) {\n    throw notFoundError('File');\n  }\n\n  // Verify user owns the file\n  const fileUserId = file.customMetadata?.userId;\n  if (fileUserId !== user.id && user.role !== 'admin') {\n    throw forbiddenError('You do not have permission to delete this file');\n  }\n\n  await deleteFromR2(c.env.STORAGE, path);\n\n  // Clear related caches\n  await c.env.CACHE.delete(`file:${path}`);\n  if (path.includes('profile')) {\n    await c.env.CACHE.delete(`profile-image:${user.id}`);\n  }\n\n  return noContentResponse(c);\n});\n\n// Get upload URL (for direct uploads)\nuploadRoutes.post('/presigned-url', auth(), async (c) => {\n  const { fileName, fileType, type = 'general' } = await c.req.json();\n\n  if (!fileName || !fileType) {\n    throw validationError('fileName and fileType are required');\n  }\n\n  const user = getCurrentUser(c)!;\n  const key = generateFileKey(type, user.id, fileName);\n\n  // R2\uB97C \uC704\uD55C presigned URL \uC0DD\uC131 - R2\uB294 presigned URL\uC744 \uC9C1\uC811 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC73C\uBBC0\uB85C Worker \uC5C5\uB85C\uB4DC URL \uBC18\uD658\n  try {\n    // R2\uB294 AWS S3\uC640 \uB2EC\uB9AC presigned URL\uC744 \uC9C1\uC811 \uC81C\uACF5\uD558\uC9C0 \uC54A\uC74C\n    // \uB300\uC2E0 Worker\uB97C \uD1B5\uD55C \uC5C5\uB85C\uB4DC \uC5D4\uB4DC\uD3EC\uC778\uD2B8 \uC81C\uACF5\n    const uploadUrl = `/api/v1/upload/${type}`;\n    \n    return successResponse(c, {\n      uploadUrl,\n      key,\n      method: 'POST', // Worker \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uB294 POST \uBA54\uC11C\uB4DC \uC0AC\uC6A9\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      fields: {\n        key,\n        fileName,\n        fileType,\n        type\n      },\n      expiresAt: new Date(Date.now() + 3600 * 1000).toISOString()\n    });\n  } catch (error) {\n    console.error('Upload URL generation failed:', error);\n    throw validationError('Failed to generate upload URL');\n  }\n});\n", "import { Context, Next } from 'hono';\nimport { ApiError } from '../types';\nimport type { AppBindings as Env } from '../index';\n\n/**\n * \uBCF4\uC548 \uD5E4\uB354 \uBBF8\uB4E4\uC6E8\uC5B4\n * OWASP \uAD8C\uC7A5\uC0AC\uD56D\uC5D0 \uB530\uB978 \uBCF4\uC548 \uD5E4\uB354 \uC124\uC815\n */\nexport async function securityHeaders(c: Context, next: Next) {\n    await next();\n\n    // \uBCF4\uC548 \uD5E4\uB354 \uC124\uC815\n    c.header('X-Content-Type-Options', 'nosniff');\n    c.header('X-Frame-Options', 'DENY');\n    c.header('X-XSS-Protection', '1; mode=block');\n    c.header('Referrer-Policy', 'strict-origin-when-cross-origin');\n    c.header('Permissions-Policy', 'camera=(), microphone=(), geolocation=()');\n\n    // CSP\uB294 \uD658\uACBD\uC5D0 \uB530\uB77C \uB2E4\uB974\uAC8C \uC124\uC815\n    const isDevelopment = (c as any).env?.ENVIRONMENT === 'development';\n    if (!isDevelopment) {\n        c.header(\n            'Content-Security-Policy',\n            \"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:\"\n        );\n    }\n\n    // HSTS (HTTPS \uD658\uACBD\uC5D0\uC11C\uB9CC)\n    if (c.req.header('X-Forwarded-Proto') === 'https') {\n        c.header('Strict-Transport-Security', 'max-age=31536000; includeSubDomains');\n    }\n}\n\n/**\n * Rate Limiting \uBBF8\uB4E4\uC6E8\uC5B4\n * IP \uAE30\uBC18 \uC694\uCCAD \uC81C\uD55C\n */\nexport function rateLimit(options: {\n    windowMs?: number;  // \uC2DC\uAC04 \uCC3D (\uAE30\uBCF8: 15\uBD84)\n    max?: number;       // \uCD5C\uB300 \uC694\uCCAD \uC218 (\uAE30\uBCF8: 100)\n    keyGenerator?: (c: Context) => string; // \uD0A4 \uC0DD\uC131 \uD568\uC218\n    skipSuccessfulRequests?: boolean; // \uC131\uACF5\uD55C \uC694\uCCAD\uC740 \uC81C\uC678\n    skipFailedRequests?: boolean;     // \uC2E4\uD328\uD55C \uC694\uCCAD\uC740 \uC81C\uC678\n} = {}) {\n    const {\n        windowMs = 15 * 60 * 1000, // 15\uBD84\n        max = 100,\n        keyGenerator = (c) => c.req.header('CF-Connecting-IP') || 'unknown',\n        skipSuccessfulRequests = false,\n        skipFailedRequests = false\n    } = options;\n\n    return async (c: Context<{ Bindings: Env }>, next: Next) => {\n        const key = `rate-limit:${keyGenerator(c)}`;\n        const now = Date.now();\n        const windowStart = now - windowMs;\n\n        try {\n            // KV\uC5D0\uC11C \uD604\uC7AC \uC694\uCCAD \uAE30\uB85D \uAC00\uC838\uC624\uAE30\n            const stored = await c.env.CACHE.get(key);\n            let requests: number[] = stored ? JSON.parse(stored) : [];\n\n            // \uC708\uB3C4\uC6B0 \uBC16\uC758 \uC694\uCCAD \uC81C\uAC70\n            requests = requests.filter(timestamp => timestamp > windowStart);\n\n            // \uC81C\uD55C \uD655\uC778\n            if (requests.length >= max) {\n                const retryAfter = Math.ceil((requests[0] + windowMs - now) / 1000);\n                c.header('Retry-After', retryAfter.toString());\n                c.header('X-RateLimit-Limit', max.toString());\n                c.header('X-RateLimit-Remaining', '0');\n                c.header('X-RateLimit-Reset', new Date(requests[0] + windowMs).toISOString());\n\n                throw new ApiError(429, 'RATE_LIMIT_EXCEEDED', 'Too many requests');\n            }\n\n            // \uB2E4\uC74C \uBBF8\uB4E4\uC6E8\uC5B4 \uC2E4\uD589\n            await next();\n\n            // \uC694\uCCAD \uAE30\uB85D (\uC635\uC158\uC5D0 \uB530\uB77C)\n            const shouldSkip =\n                (skipSuccessfulRequests && c.res.status < 400) ||\n                (skipFailedRequests && c.res.status >= 400);\n\n            if (!shouldSkip) {\n                requests.push(now);\n                await c.env.CACHE.put(key, JSON.stringify(requests), {\n                    expirationTtl: Math.ceil(windowMs / 1000)\n                });\n            }\n\n            // Rate limit \uD5E4\uB354 \uC124\uC815\n            c.header('X-RateLimit-Limit', max.toString());\n            c.header('X-RateLimit-Remaining', (max - requests.length).toString());\n            c.header('X-RateLimit-Reset', new Date(now + windowMs).toISOString());\n        } catch (error) {\n            if (error instanceof ApiError && error.statusCode === 429) {\n                throw error;\n            }\n            // KV \uC5D0\uB7EC\uB294 \uBB34\uC2DC\uD558\uACE0 \uACC4\uC18D \uC9C4\uD589\n            console.error('Rate limit error:', error);\n            await next();\n        }\n    };\n}\n\n/**\n * IP \uD654\uC774\uD2B8\uB9AC\uC2A4\uD2B8/\uBE14\uB799\uB9AC\uC2A4\uD2B8 \uBBF8\uB4E4\uC6E8\uC5B4\n */\nexport function ipFilter(options: {\n    whitelist?: string[];\n    blacklist?: string[];\n} = {}) {\n    return async (c: Context, next: Next) => {\n        const clientIp = c.req.header('CF-Connecting-IP') ||\n            c.req.header('X-Forwarded-For')?.split(',')[0] ||\n            'unknown';\n\n        // \uBE14\uB799\uB9AC\uC2A4\uD2B8 \uD655\uC778\n        if (options.blacklist?.includes(clientIp)) {\n            throw new ApiError(403, 'FORBIDDEN', 'Access denied');\n        }\n\n        // \uD654\uC774\uD2B8\uB9AC\uC2A4\uD2B8 \uD655\uC778 (\uC124\uC815\uB41C \uACBD\uC6B0)\n        if (options.whitelist && options.whitelist.length > 0) {\n            if (!options.whitelist.includes(clientIp)) {\n                throw new ApiError(403, 'FORBIDDEN', 'Access denied');\n            }\n        }\n\n        await next();\n    };\n}\n\n/**\n * \uC694\uCCAD \uD06C\uAE30 \uC81C\uD55C \uBBF8\uB4E4\uC6E8\uC5B4\n */\nexport function bodySizeLimit(maxSize: number = 10 * 1024 * 1024) { // \uAE30\uBCF8 10MB\n    return async (c: Context, next: Next) => {\n        const contentLength = c.req.header('Content-Length');\n\n        if (contentLength && parseInt(contentLength) > maxSize) {\n            throw new ApiError(413, 'PAYLOAD_TOO_LARGE', `Request body too large. Maximum size: ${maxSize} bytes`);\n        }\n\n        await next();\n    };\n}", "import { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport { processAudio, WhisperOptions } from '../services/ai';\nimport { handleError } from '../utils/errors';\nimport type { AppBindings as Env } from '../index';\nimport { log } from '../utils/logger';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// CORS \uC124\uC815\napp.use('/*', cors());\n\n// Whisper \uC74C\uC131 \uC778\uC2DD \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/transcribe', async (c) => {\n    try {\n        const contentType = c.req.header('content-type');\n        let audioBuffer: ArrayBuffer;\n        let options: WhisperOptions = {};\n\n        if (contentType?.includes('multipart/form-data')) {\n            // FormData\uB85C \uC624\uB514\uC624 \uD30C\uC77C\uACFC \uC635\uC158 \uBC1B\uAE30\n            const formData = await c.req.formData();\n            const audioFile = formData.get('audio') as File | null;\n\n            if (!audioFile) {\n                return c.json({ error: 'No audio file provided' }, 400);\n            }\n\n            audioBuffer = await audioFile.arrayBuffer();\n\n            // \uC635\uC158 \uD30C\uC2F1\n            const task = formData.get('task') as string;\n            const language = formData.get('language') as string;\n            const vadFilter = formData.get('vad_filter') as string;\n            const initialPrompt = formData.get('initial_prompt') as string;\n            const prefix = formData.get('prefix') as string;\n\n            options = {\n                task: task as 'transcribe' | 'translate' || 'transcribe',\n                language: language || 'auto',\n                vad_filter: vadFilter === 'true',\n                initial_prompt: initialPrompt,\n                prefix: prefix\n            };\n        } else if (contentType?.includes('application/json')) {\n            // JSON\uC73C\uB85C base64 \uC624\uB514\uC624 \uBC1B\uAE30\n            const body = await c.req.json<{\n                audio: string; // base64\n                options?: WhisperOptions;\n            }>();\n\n            if (!body.audio) {\n                return c.json({ error: 'No audio data provided' }, 400);\n            }\n\n            // Base64\uB97C ArrayBuffer\uB85C \uBCC0\uD658\n            const binaryString = atob(body.audio);\n            const bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n                bytes[i] = binaryString.charCodeAt(i);\n            }\n            audioBuffer = bytes.buffer;\n            options = body.options || {};\n        } else {\n            // \uC9C1\uC811 \uBC14\uC774\uB108\uB9AC \uB370\uC774\uD130\n            audioBuffer = await c.req.arrayBuffer();\n        }\n\n        // \uD30C\uC77C \uD06C\uAE30 \uD655\uC778 (\uCD5C\uB300 25MB)\n        if (audioBuffer.byteLength > 25 * 1024 * 1024) {\n            return c.json({ error: 'Audio file too large. Maximum size is 25MB' }, 400);\n        }\n\n        // Whisper \uCC98\uB9AC\n        const result = await processAudio(c.env.AI, audioBuffer, options);\n\n        // \uC751\uB2F5\n        return c.json({\n            success: true,\n            transcription: result.text,\n            word_count: result.word_count,\n            words: result.words,\n            chunks_processed: result.chunks,\n            language: options.language || 'auto',\n            task: options.task || 'transcribe'\n        });\n\n    } catch (error) {\n        log.error('Transcription error', error as Error, { component: 'WHISPER_SERVICE' });\n        return c.json({\n            error: 'Transcription failed',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        }, 500);\n    }\n});\n\n// \uC9C0\uC6D0\uB418\uB294 \uC5B8\uC5B4 \uBAA9\uB85D\napp.get('/languages', (c) => {\n    return c.json({\n        supported_languages: [\n            { code: 'auto', name: 'Auto-detect' },\n            { code: 'en', name: 'English' },\n            { code: 'zh', name: 'Chinese' },\n            { code: 'de', name: 'German' },\n            { code: 'es', name: 'Spanish' },\n            { code: 'ru', name: 'Russian' },\n            { code: 'ko', name: 'Korean' },\n            { code: 'fr', name: 'French' },\n            { code: 'ja', name: 'Japanese' },\n            { code: 'pt', name: 'Portuguese' },\n            { code: 'tr', name: 'Turkish' },\n            { code: 'pl', name: 'Polish' },\n            { code: 'ca', name: 'Catalan' },\n            { code: 'nl', name: 'Dutch' },\n            { code: 'ar', name: 'Arabic' },\n            { code: 'sv', name: 'Swedish' },\n            { code: 'it', name: 'Italian' },\n            { code: 'id', name: 'Indonesian' },\n            { code: 'hi', name: 'Hindi' },\n            { code: 'fi', name: 'Finnish' },\n            { code: 'vi', name: 'Vietnamese' },\n            { code: 'he', name: 'Hebrew' },\n            { code: 'uk', name: 'Ukrainian' },\n            { code: 'el', name: 'Greek' },\n            { code: 'ms', name: 'Malay' },\n            { code: 'cs', name: 'Czech' },\n            { code: 'ro', name: 'Romanian' },\n            { code: 'da', name: 'Danish' },\n            { code: 'hu', name: 'Hungarian' },\n            { code: 'ta', name: 'Tamil' },\n            { code: 'no', name: 'Norwegian' },\n            { code: 'th', name: 'Thai' },\n            { code: 'ur', name: 'Urdu' },\n            { code: 'hr', name: 'Croatian' },\n            { code: 'bg', name: 'Bulgarian' },\n            { code: 'lt', name: 'Lithuanian' },\n            { code: 'la', name: 'Latin' },\n            { code: 'mi', name: 'Maori' },\n            { code: 'ml', name: 'Malayalam' },\n            { code: 'cy', name: 'Welsh' },\n            { code: 'sk', name: 'Slovak' },\n            { code: 'te', name: 'Telugu' },\n            { code: 'fa', name: 'Persian' },\n            { code: 'lv', name: 'Latvian' },\n            { code: 'bn', name: 'Bengali' },\n            { code: 'sr', name: 'Serbian' },\n            { code: 'az', name: 'Azerbaijani' },\n            { code: 'sl', name: 'Slovenian' },\n            { code: 'kn', name: 'Kannada' },\n            { code: 'et', name: 'Estonian' },\n            { code: 'mk', name: 'Macedonian' },\n            { code: 'br', name: 'Breton' },\n            { code: 'eu', name: 'Basque' },\n            { code: 'is', name: 'Icelandic' },\n            { code: 'hy', name: 'Armenian' },\n            { code: 'ne', name: 'Nepali' },\n            { code: 'mn', name: 'Mongolian' },\n            { code: 'bs', name: 'Bosnian' },\n            { code: 'kk', name: 'Kazakh' },\n            { code: 'sq', name: 'Albanian' },\n            { code: 'sw', name: 'Swahili' },\n            { code: 'gl', name: 'Galician' },\n            { code: 'mr', name: 'Marathi' },\n            { code: 'pa', name: 'Punjabi' },\n            { code: 'si', name: 'Sinhala' },\n            { code: 'km', name: 'Khmer' },\n            { code: 'sn', name: 'Shona' },\n            { code: 'yo', name: 'Yoruba' },\n            { code: 'so', name: 'Somali' },\n            { code: 'af', name: 'Afrikaans' },\n            { code: 'oc', name: 'Occitan' },\n            { code: 'ka', name: 'Georgian' },\n            { code: 'be', name: 'Belarusian' },\n            { code: 'tg', name: 'Tajik' },\n            { code: 'sd', name: 'Sindhi' },\n            { code: 'gu', name: 'Gujarati' },\n            { code: 'am', name: 'Amharic' },\n            { code: 'yi', name: 'Yiddish' },\n            { code: 'lo', name: 'Lao' },\n            { code: 'uz', name: 'Uzbek' },\n            { code: 'fo', name: 'Faroese' },\n            { code: 'ht', name: 'Haitian creole' },\n            { code: 'ps', name: 'Pashto' },\n            { code: 'tk', name: 'Turkmen' },\n            { code: 'nn', name: 'Nynorsk' },\n            { code: 'mt', name: 'Maltese' },\n            { code: 'sa', name: 'Sanskrit' },\n            { code: 'lb', name: 'Luxembourgish' },\n            { code: 'my', name: 'Myanmar' },\n            { code: 'bo', name: 'Tibetan' },\n            { code: 'tl', name: 'Tagalog' },\n            { code: 'mg', name: 'Malagasy' },\n            { code: 'as', name: 'Assamese' },\n            { code: 'tt', name: 'Tatar' },\n            { code: 'haw', name: 'Hawaiian' },\n            { code: 'ln', name: 'Lingala' },\n            { code: 'ha', name: 'Hausa' },\n            { code: 'ba', name: 'Bashkir' },\n            { code: 'jw', name: 'Javanese' },\n            { code: 'su', name: 'Sundanese' }\n        ]\n    });\n});\n\n// \uBAA8\uB378 \uC815\uBCF4\napp.get('/models', (c) => {\n    return c.json({\n        available_models: [\n            {\n                id: '@cf/openai/whisper',\n                name: 'Whisper',\n                description: 'General-purpose speech recognition model',\n                languages: 'Multilingual',\n                max_duration: '30 minutes',\n                pricing: '$0.00045 per audio minute'\n            },\n            {\n                id: '@cf/openai/whisper-large-v3-turbo',\n                name: 'Whisper Large v3 Turbo',\n                description: 'Large model optimized for speed and accuracy',\n                languages: 'Multilingual',\n                max_duration: '30 minutes',\n                pricing: '$0.00045 per audio minute',\n                recommended: true\n            },\n            {\n                id: '@cf/openai/whisper-tiny-en',\n                name: 'Whisper Tiny (English)',\n                description: 'Small model for English-only transcription',\n                languages: 'English only',\n                max_duration: '30 minutes',\n                pricing: '$0.00045 per audio minute',\n                beta: true\n            }\n        ]\n    });\n});\n\nexport default app;", "import { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport type { AppBindings as Env } from '../index';\nimport { successResponse } from '../utils/response';\n\nconst app = new Hono();\n\n// CORS \uC124\uC815\napp.use('/*', cors());\n\n// \uD14D\uC2A4\uD2B8 \uC0DD\uC131 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/generate', async (c) => {\n  try {\n    const body = await c.req.json<{\n      prompt?: string;\n      messages?: Array<{ role: string; content: string }>;\n      model?: string;\n      temperature?: number;\n      max_tokens?: number;\n      stream?: boolean;\n      system?: string;\n    }>();\n\n    const model = body.model || '@cf/meta/llama-3.3-70b-instruct-fp8-fast';\n\n    // \uBA54\uC2DC\uC9C0 \uD615\uC2DD \uC900\uBE44\n    let messages;\n    if (body.messages) {\n      messages = body.messages;\n    } else if (body.prompt) {\n      messages = [\n        { role: 'system', content: body.system || 'You are a helpful assistant.' },\n        { role: 'user', content: body.prompt }\n      ];\n    } else {\n      return c.json({ error: 'Either prompt or messages required' }, 400);\n    }\n\n    // \uC2A4\uD2B8\uB9AC\uBC0D \uC751\uB2F5\n    const ai = (c as any).env.AI as any;\n\n    if (body.stream) {\n      const stream = await ai.run(model, {\n        messages,\n        stream: true,\n        temperature: body.temperature || 0.7,\n        max_tokens: body.max_tokens || 1000\n      });\n\n      return new Response(stream, {\n        headers: {\n          'Content-Type': 'text/event-stream',\n          'Cache-Control': 'no-cache',\n          'Connection': 'keep-alive'\n        }\n      });\n    }\n\n    // \uC77C\uBC18 \uC751\uB2F5\n    const response = await ai.run(model, {\n      messages,\n      temperature: body.temperature || 0.7,\n      max_tokens: body.max_tokens || 1000\n    });\n\n    return successResponse(c, {\n      response: response.response,\n      usage: response.usage,\n      model: model\n    });\n\n  } catch (error: any) {\n    console.error('LLM generation error:', error);\n    return c.json({ error: error.message || 'Text generation failed' }, 500);\n  }\n});\n\n// \uC601\uC5B4 \uB808\uBCA8 \uD3C9\uAC00 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/evaluate-english', async (c) => {\n  try {\n    const { text, context } = await c.req.json<{\n      text: string;\n      context?: string;\n    }>();\n\n    if (!text) {\n      return c.json({ error: 'Text is required' }, 400);\n    }\n\n    const prompt = `You are an expert English language assessor. Evaluate the following English text for language proficiency.\n\n${context ? `Context: ${context}\\n` : ''}\nText to evaluate: \"${text}\"\n\nProvide a detailed assessment with scores (0-100) for each of these 6 areas:\n1. Grammar accuracy\n2. Vocabulary range and appropriateness\n3. Fluency and coherence\n4. Pronunciation clarity (based on transcription quality if applicable)\n5. Task achievement / Content relevance\n6. Interaction skills / Communication effectiveness\n\nAlso determine the CEFR level (A1, A2, B1, B2, C1, or C2) based on the overall proficiency.\n\nResponse in JSON format with this structure:\n{\n  \"scores\": {\n    \"grammar\": <0-100>,\n    \"vocabulary\": <0-100>,\n    \"fluency\": <0-100>,\n    \"pronunciation\": <0-100>,\n    \"taskAchievement\": <0-100>,\n    \"interaction\": <0-100>\n  },\n  \"averageScore\": <0-100>,\n  \"cefrLevel\": \"<A1-C2>\",\n  \"feedback\": {\n    \"strengths\": [\"point 1\", \"point 2\"],\n    \"improvements\": [\"point 1\", \"point 2\"],\n    \"suggestions\": [\"suggestion 1\", \"suggestion 2\"]\n  },\n  \"detailedAnalysis\": {\n    \"grammar\": \"Detailed grammar analysis...\",\n    \"vocabulary\": \"Detailed vocabulary analysis...\",\n    \"fluency\": \"Detailed fluency analysis...\",\n    \"pronunciation\": \"Detailed pronunciation analysis...\",\n    \"taskAchievement\": \"Detailed task achievement analysis...\",\n    \"interaction\": \"Detailed interaction analysis...\"\n  }\n}`;\n\n    const ai = (c as any).env.AI as any;\n    const response = await ai.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n      messages: [\n        {\n          role: 'system',\n          content: 'You are a professional English language assessment expert. Always respond with valid JSON.'\n        },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.3,\n      max_tokens: 2000\n    });\n\n    try {\n      const evaluation = JSON.parse(response.response);\n      return successResponse(c, {\n        evaluation,\n        evaluatedText: text\n      });\n    } catch (parseError) {\n      // JSON \uD30C\uC2F1 \uC2E4\uD328 \uC2DC \uD14D\uC2A4\uD2B8 \uC751\uB2F5 \uBC18\uD658\n      return successResponse(c, {\n        evaluation: {\n          textResponse: response.response,\n          scores: {\n            grammar: 70,\n            vocabulary: 70,\n            fluency: 70,\n            pronunciation: 70,\n            taskAchievement: 70,\n            interaction: 70\n          },\n          averageScore: 70,\n          cefrLevel: 'B1'\n        },\n        evaluatedText: text\n      });\n    }\n\n  } catch (error: any) {\n    console.error('English evaluation error:', error);\n    return c.json({ error: error.message || 'Evaluation failed' }, 500);\n  }\n});\n\n// \uBB38\uBC95 \uCCB4\uD06C \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/check-grammar', async (c) => {\n  try {\n    const { text } = await c.req.json<{ text: string }>();\n\n    if (!text) {\n      return c.json({ error: 'Text is required' }, 400);\n    }\n\n    const prompt = `Check the grammar of the following text and provide corrections:\n\nText: \"${text}\"\n\nProvide a response in JSON format:\n{\n  \"hasErrors\": boolean,\n  \"correctedText\": \"the corrected version of the text\",\n  \"errors\": [\n    {\n      \"type\": \"grammar/spelling/punctuation\",\n      \"original\": \"original text\",\n      \"correction\": \"corrected text\",\n      \"explanation\": \"why this is wrong and how to fix it\"\n    }\n  ],\n  \"suggestions\": [\"general writing improvement suggestions\"]\n}`;\n\n    const ai = (c as any).env.AI as any;\n    const response = await ai.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n      messages: [\n        {\n          role: 'system',\n          content: 'You are a grammar expert. Always respond with valid JSON.'\n        },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.2,\n      max_tokens: 1500\n    });\n\n    try {\n      const result = JSON.parse(response.response);\n      return successResponse(c, result);\n    } catch (parseError) {\n      return c.json({\n        error: 'Failed to parse grammar check response',\n        rawResponse: response.response\n      }, 400);\n    }\n\n  } catch (error: any) {\n    console.error('Grammar check error:', error);\n    return c.json({ error: error.message || 'Grammar check failed' }, 500);\n  }\n});\n\n// \uB300\uD654 \uC5F0\uC2B5 \uD53C\uB4DC\uBC31 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/conversation-feedback', async (c) => {\n  try {\n    const { conversation, topic, level } = await c.req.json<{\n      conversation: Array<{ speaker: string; text: string }>;\n      topic?: string;\n      level?: string;\n    }>();\n\n    if (!conversation || conversation.length === 0) {\n      return c.json({ error: 'Conversation is required' }, 400);\n    }\n\n    const conversationText = conversation\n      .map(turn => `${turn.speaker}: ${turn.text}`)\n      .join('\\n');\n\n    const prompt = `Analyze this English conversation and provide detailed feedback:\n\n${topic ? `Topic: ${topic}` : ''}\n${level ? `Expected Level: ${level}` : ''}\n\nConversation:\n${conversationText}\n\nProvide comprehensive feedback in JSON format:\n{\n  \"overallAssessment\": \"general assessment of the conversation\",\n  \"participantFeedback\": {\n    \"<speaker_name>\": {\n      \"strengths\": [\"strength 1\", \"strength 2\"],\n      \"weaknesses\": [\"weakness 1\", \"weakness 2\"],\n      \"languageUse\": \"assessment of grammar, vocabulary, fluency\",\n      \"communicationSkills\": \"assessment of interaction, turn-taking, etc.\"\n    }\n  },\n  \"suggestions\": {\n    \"vocabulary\": [\"useful words/phrases for this topic\"],\n    \"expressions\": [\"natural expressions to use\"],\n    \"grammar\": [\"grammar points to focus on\"]\n  },\n  \"nextSteps\": [\"recommendation 1\", \"recommendation 2\"]\n}`;\n\n    const ai = (c as any).env.AI as any;\n    const response = await ai.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n      messages: [\n        {\n          role: 'system',\n          content: 'You are an experienced English conversation coach. Always respond with valid JSON.'\n        },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.4,\n      max_tokens: 2000\n    });\n\n    try {\n      const feedback = JSON.parse(response.response);\n      return successResponse(c, {\n        feedback,\n        conversationLength: conversation.length,\n        topic,\n        level\n      });\n    } catch (parseError) {\n      return successResponse(c, {\n        feedback: {\n          textResponse: response.response\n        },\n        conversationLength: conversation.length,\n        topic,\n        level\n      });\n    }\n\n  } catch (error: any) {\n    console.error('Conversation feedback error:', error);\n    return c.json({ error: error.message || 'Feedback generation failed' }, 500);\n  }\n});\n\n// \uC0AC\uC6A9 \uAC00\uB2A5\uD55C \uBAA8\uB378 \uBAA9\uB85D\napp.get('/models', (c) => {\n  return successResponse(c, {\n    available_models: [\n      {\n        id: '@cf/meta/llama-3.3-70b-instruct-fp8-fast',\n        name: 'Llama 3.3 70B Instruct',\n        description: 'Fast 70B parameter model optimized for instruction following',\n        context_window: 24000,\n        recommended: true\n      },\n      {\n        id: '@cf/meta/llama-3-8b-instruct',\n        name: 'Llama 3 8B Instruct',\n        description: 'Smaller, faster model for general tasks',\n        context_window: 8192\n      },\n      {\n        id: '@cf/microsoft/phi-2',\n        name: 'Phi-2',\n        description: 'Small but capable model from Microsoft',\n        context_window: 2048\n      },\n      {\n        id: '@cf/qwen/qwen1.5-14b-chat-awq',\n        name: 'Qwen 1.5 14B',\n        description: 'Multilingual model with strong performance',\n        context_window: 32768\n      }\n    ],\n    features: [\n      'Text generation',\n      'English evaluation',\n      'Grammar checking',\n      'Conversation feedback',\n      'Streaming support'\n    ]\n  });\n});\n\nexport default app;", "import { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport type { AppBindings as Env } from '../index';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// CORS \uC124\uC815\napp.use('/*', cors());\n\n// \uC774\uBBF8\uC9C0 \uC5C5\uB85C\uB4DC \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/upload', async (c) => {\n  try {\n    const formData = await c.req.formData();\n    const file = formData.get('image') as File | null;\n    if (!file) {\n        return c.json({ error: 'No image file provided' }, 400);\n    }\n    const userId = formData.get('userId') as string;\n    const type = formData.get('type') as string || 'profile'; // profile, chat, etc.\n\n    if (!file || !userId) {\n      return c.json({ error: 'Image file and userId are required' }, 400);\n    }\n\n    // \uD30C\uC77C \uD0C0\uC785 \uAC80\uC99D\n    const allowedTypes = ['image/jpeg', 'image/png', 'image/webp', 'image/gif'];\n    if (!allowedTypes.includes(file.type)) {\n      return c.json({ error: 'Invalid file type. Only JPEG, PNG, WebP, and GIF are allowed' }, 400);\n    }\n\n    // \uD30C\uC77C \uD06C\uAE30 \uAC80\uC99D (\uCD5C\uB300 10MB)\n    const maxSize = 10 * 1024 * 1024; // 10MB\n    if (file.size > maxSize) {\n      return c.json({ error: 'File size exceeds 10MB limit' }, 400);\n    }\n\n    // \uACE0\uC720 \uD30C\uC77C\uBA85 \uC0DD\uC131\n    const timestamp = Date.now();\n    const fileExt = file.name.split('.').pop();\n    const fileName = `${type}/${userId}/${timestamp}.${fileExt}`;\n\n    // R2\uC5D0 \uC6D0\uBCF8 \uC774\uBBF8\uC9C0 \uC800\uC7A5\n    const arrayBuffer = await file.arrayBuffer();\n    await c.env.STORAGE.put(fileName, arrayBuffer, {\n      httpMetadata: {\n        contentType: file.type,\n      },\n      customMetadata: {\n        userId,\n        type,\n        originalName: file.name,\n        uploadedAt: new Date().toISOString()\n      }\n    });\n\n    // \uC774\uBBF8\uC9C0 \uBCC0\uD615 URL \uC0DD\uC131\n    const baseUrl = `https://${c.req.header('host')}`;\n    const variants = {\n      original: `${baseUrl}/api/v1/images/serve/${fileName}`,\n      thumbnail: `${baseUrl}/api/v1/images/transform/${fileName}?width=150&height=150&fit=cover`,\n      medium: `${baseUrl}/api/v1/images/transform/${fileName}?width=400&height=400&fit=contain`,\n      large: `${baseUrl}/api/v1/images/transform/${fileName}?width=800&height=800&fit=contain`\n    };\n\n    // \uBA54\uD0C0\uB370\uC774\uD130 \uCE90\uC2F1\n    await c.env.CACHE.put(\n      `image:${fileName}`,\n      JSON.stringify({\n        fileName,\n        userId,\n        type,\n        originalName: file.name,\n        size: file.size,\n        contentType: file.type,\n        uploadedAt: new Date().toISOString(),\n        variants\n      }),\n      { expirationTtl: 86400 * 30 } // 30\uC77C \uCE90\uC2DC\n    );\n\n    return c.json({\n      success: true,\n      fileName,\n      variants,\n      size: file.size,\n      type: file.type\n    });\n\n  } catch (error: any) {\n    console.error('Image upload error:', error);\n    return c.json({ error: error.message || 'Failed to upload image' }, 500);\n  }\n});\n\n// \uC774\uBBF8\uC9C0 \uBCC0\uD658 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.get('/transform/*', async (c) => {\n  try {\n    const path = c.req.param('*');\n    if (!path) {\n      return c.json({ error: 'Image path is required' }, 400);\n    }\n\n    // \uCFFC\uB9AC \uD30C\uB77C\uBBF8\uD130 \uD30C\uC2F1\n    const { searchParams } = new URL(c.req.url);\n    const width = parseInt(searchParams.get('width') || '0');\n    const height = parseInt(searchParams.get('height') || '0');\n    const quality = parseInt(searchParams.get('quality') || '85');\n    const fit = searchParams.get('fit') || 'contain'; // contain, cover, fill, inside, outside\n    const format = searchParams.get('format') || 'auto'; // auto, webp, avif, jpeg, png\n\n    // R2\uC5D0\uC11C \uC6D0\uBCF8 \uC774\uBBF8\uC9C0 \uAC00\uC838\uC624\uAE30\n    const object = await c.env.STORAGE.get(path);\n    if (!object) {\n      return c.json({ error: 'Image not found' }, 404);\n    }\n\n    // \uCE90\uC2DC \uD0A4 \uC0DD\uC131\n    const cacheKey = `transformed:${path}:w${width}:h${height}:q${quality}:${fit}:${format}`;\n    \n    // \uCE90\uC2DC \uD655\uC778\n    const cached = await c.env.CACHE.get(cacheKey, { type: 'arrayBuffer' });\n    if (cached) {\n      return new Response(cached, {\n        headers: {\n          'Content-Type': format === 'auto' ? 'image/webp' : `image/${format}`,\n          'Cache-Control': 'public, max-age=31536000',\n          'X-Cache': 'HIT'\n        }\n      });\n    }\n\n    // \uC774\uBBF8\uC9C0 \uBCC0\uD658 \uCC98\uB9AC\n    const imageBuffer = await object.arrayBuffer();\n\n    // \uC774\uBBF8\uC9C0 \uBCC0\uD658 \uC635\uC158 \uC801\uC6A9\n    let transformedBuffer = imageBuffer;\n    let contentType = object.httpMetadata?.contentType || 'image/jpeg';\n\n    // \uAC04\uB2E8\uD55C \uBCC0\uD658 \uB85C\uC9C1 (\uC2E4\uC81C\uB85C\uB294 Cloudflare Images API \uB610\uB294 \uC804\uC6A9 \uBCC0\uD658 \uC11C\uBE44\uC2A4 \uC0AC\uC6A9)\n    if (format !== 'auto' && format !== object.httpMetadata?.contentType?.split('/')[1]) {\n      // \uBCC0\uD658 \uC694\uCCAD \uC2DC \uC6D0\uBCF8 \uC774\uBBF8\uC9C0 \uBC18\uD658 (\uC2E4\uC81C \uBCC0\uD658\uC740 CDN\uC5D0\uC11C \uCC98\uB9AC)\n      // \uC2E4\uC81C \uD504\uB85C\uB355\uC158\uC5D0\uC11C\uB294 Cloudflare Images \uB610\uB294 \uC678\uBD80 \uBCC0\uD658 \uC11C\uBE44\uC2A4 \uC5F0\uB3D9 \uD544\uC694\n      contentType = `image/${format}`; // \uCD5C\uC801\uD654\uB41C \uD3EC\uB9F7\uC73C\uB85C \uBC18\uD658\n    } else if (format === 'auto') {\n      contentType = 'image/webp'; // auto\uBA74 webp\uB85C \uBCC0\uD658\n    }\n\n    return new Response(transformedBuffer, {\n      headers: {\n        'Content-Type': contentType,\n        'Cache-Control': 'public, max-age=31536000',\n        'X-Cache': 'HIT',\n        'X-Image-Format': format || 'original'\n      }\n    });\n\n  } catch (error: any) {\n    console.error('Image transform error:', error);\n    return c.json({ error: error.message || 'Failed to transform image' }, 500);\n  }\n});\n\n// \uC6D0\uBCF8 \uC774\uBBF8\uC9C0 \uC81C\uACF5 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.get('/serve/*', async (c) => {\n  try {\n    const path = c.req.param('*');\n    if (!path) {\n      return c.json({ error: 'Image path is required' }, 400);\n    }\n\n    // R2\uC5D0\uC11C \uC774\uBBF8\uC9C0 \uAC00\uC838\uC624\uAE30\n    const object = await c.env.STORAGE.get(path);\n    if (!object) {\n      return c.json({ error: 'Image not found' }, 404);\n    }\n\n    const headers = new Headers();\n    object.writeHttpMetadata(headers);\n    headers.set('Cache-Control', 'public, max-age=31536000');\n    \n    // \uBCF4\uC548\uC744 \uC704\uD55C Content-Security-Policy \uCD94\uAC00\n    headers.set('Content-Security-Policy', \"default-src 'none'; img-src 'self';\");\n    headers.set('X-Content-Type-Options', 'nosniff');\n\n    return new Response(object.body, { headers });\n\n  } catch (error: any) {\n    console.error('Image serve error:', error);\n    return c.json({ error: error.message || 'Failed to serve image' }, 500);\n  }\n});\n\n// \uC774\uBBF8\uC9C0 \uC0AD\uC81C \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.delete('/:fileName', async (c) => {\n  try {\n    const fileName = c.req.param('fileName');\n    const userId = c.req.header('x-user-id');\n\n    if (!fileName || !userId) {\n      return c.json({ error: 'fileName and userId are required' }, 400);\n    }\n\n    // \uBA54\uD0C0\uB370\uC774\uD130 \uD655\uC778\uC73C\uB85C \uC18C\uC720\uAD8C \uAC80\uC99D\n    const metadata = await c.env.CACHE.get(`image:${fileName}`, { type: 'json' });\n    if (!metadata || (metadata as any).userId !== userId) {\n      return c.json({ error: 'Unauthorized' }, 403);\n    }\n\n    // R2\uC5D0\uC11C \uC0AD\uC81C\n    await c.env.STORAGE.delete(fileName);\n\n    // \uCE90\uC2DC\uC5D0\uC11C \uBA54\uD0C0\uB370\uC774\uD130 \uC0AD\uC81C\n    await c.env.CACHE.delete(`image:${fileName}`);\n\n    return c.json({\n      success: true,\n      message: 'Image deleted successfully'\n    });\n\n  } catch (error: any) {\n    console.error('Image delete error:', error);\n    return c.json({ error: error.message || 'Failed to delete image' }, 500);\n  }\n});\n\n// \uC0AC\uC6A9\uC790 \uC774\uBBF8\uC9C0 \uBAA9\uB85D \uC870\uD68C\napp.get('/list/:userId', async (c) => {\n  try {\n    const userId = c.req.param('userId');\n    const type = c.req.query('type'); // optional filter by type\n\n    if (!userId) {\n      return c.json({ error: 'userId is required' }, 400);\n    }\n\n    // R2\uC5D0\uC11C \uC0AC\uC6A9\uC790 \uC774\uBBF8\uC9C0 \uBAA9\uB85D \uC870\uD68C\n    const prefix = type ? `${type}/${userId}/` : userId;\n    const list = await c.env.STORAGE.list({ prefix, limit: 1000 });\n\n    const images = await Promise.all(\n      list.objects.map(async (obj: any) => {\n        // \uCE90\uC2DC\uC5D0\uC11C \uBA54\uD0C0\uB370\uC774\uD130 \uC870\uD68C\n        const metadata = await c.env.CACHE.get(`image:${obj.key}`, { type: 'json' });\n        \n        return {\n          key: obj.key,\n          size: obj.size,\n          uploadedAt: obj.uploaded.toISOString(),\n          metadata: metadata || {\n            fileName: obj.key,\n            contentType: obj.httpMetadata?.contentType\n          }\n        };\n      })\n    );\n\n    return c.json({\n      success: true,\n      images,\n      count: images.length\n    });\n\n  } catch (error: any) {\n    console.error('Image list error:', error);\n    return c.json({ error: error.message || 'Failed to list images' }, 500);\n  }\n});\n\n// \uC774\uBBF8\uC9C0 \uBA54\uD0C0\uB370\uC774\uD130 \uC870\uD68C\napp.get('/info/:fileName', async (c) => {\n  try {\n    const fileName = c.req.param('fileName');\n\n    if (!fileName) {\n      return c.json({ error: 'fileName is required' }, 400);\n    }\n\n    // \uCE90\uC2DC\uC5D0\uC11C \uBA54\uD0C0\uB370\uC774\uD130 \uC870\uD68C\n    const metadata = await c.env.CACHE.get(`image:${fileName}`, { type: 'json' });\n    if (!metadata) {\n      // R2\uC5D0\uC11C \uC9C1\uC811 \uC870\uD68C\n      const object = await c.env.STORAGE.head(fileName);\n      if (!object) {\n        return c.json({ error: 'Image not found' }, 404);\n      }\n\n      return c.json({\n        fileName,\n        size: object.size,\n        uploadedAt: object.uploaded.toISOString(),\n        contentType: object.httpMetadata?.contentType,\n        customMetadata: object.customMetadata\n      });\n    }\n\n    return c.json(metadata);\n\n  } catch (error: any) {\n    console.error('Image info error:', error);\n    return c.json({ error: error.message || 'Failed to get image info' }, 500);\n  }\n});\n\nexport default app;\n", "import { Hono } from 'hono';\nimport { z } from 'zod';\nimport { Env } from '../index';\nimport { processAudio, translateToMultipleLanguages } from '../services/ai';\nimport { validateAuth } from '../utils/auth';\nimport { log } from '../utils/logger';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// WebSocket \uC2A4\uD2B8\uB9AC\uBC0D \uC804\uC0AC\napp.get('/stream', async (c) => {\n    // WebSocket \uC5C5\uADF8\uB808\uC774\uB4DC \uD655\uC778\n    const upgradeHeader = c.req.header('upgrade');\n    if (!upgradeHeader || upgradeHeader !== 'websocket') {\n        return c.json({ error: 'Expected WebSocket' }, 426);\n    }\n\n    const webSocketPair = new WebSocketPair();\n    const [client, server] = Object.values(webSocketPair);\n\n    // WebSocket \uD578\uB4E4\uB7EC\n    server.accept();\n    handleWebSocket(server, c.env);\n\n    return new Response(null, {\n        status: 101,\n        webSocket: client,\n    });\n});\n\n// WebSocket \uBA54\uC2DC\uC9C0 \uD578\uB4E4\uB7EC\nasync function handleWebSocket(ws: WebSocket, env: Env) {\n    let config = {\n        language: 'en',\n        model: 'whisper-large-v3-turbo',\n        task: 'transcribe' as 'transcribe' | 'translate',\n        enableTranslation: false,\n        targetLanguages: [] as string[]\n    };\n\n    // \uC624\uB514\uC624 \uBC84\uD37C\n    const audioBuffer: ArrayBuffer[] = [];\n    let isProcessing = false;\n    let sessionActive = true;\n\n    ws.addEventListener('message', async (event) => {\n        try {\n            // \uC124\uC815 \uBA54\uC2DC\uC9C0 \uCC98\uB9AC\n            if (typeof event.data === 'string') {\n                const message = JSON.parse(event.data);\n\n                if (message.type === 'config') {\n                    config = { ...config, ...message };\n                    ws.send(JSON.stringify({\n                        type: 'config_updated',\n                        config\n                    }));\n                } else if (message.type === 'end_session') {\n                    sessionActive = false;\n                    ws.close();\n                }\n            }\n            // \uC624\uB514\uC624 \uB370\uC774\uD130 \uCC98\uB9AC\n            else if (event.data instanceof ArrayBuffer) {\n                audioBuffer.push(event.data);\n\n                // \uBC84\uD37C\uAC00 \uCDA9\uBD84\uD788 \uC313\uC774\uBA74 \uCC98\uB9AC (\uC57D 1\uCD08 \uBD84\uB7C9)\n                const totalSize = audioBuffer.reduce((sum, buf) => sum + buf.byteLength, 0);\n                const targetSize = 16000 * 2; // 16kHz * 2 bytes per sample * 1 second\n\n                if (totalSize >= targetSize && !isProcessing) {\n                    isProcessing = true;\n\n                    // \uBC84\uD37C \uD569\uCE58\uAE30\n                    const combinedBuffer = new ArrayBuffer(totalSize);\n                    const view = new Uint8Array(combinedBuffer);\n                    let offset = 0;\n\n                    for (const buffer of audioBuffer) {\n                        view.set(new Uint8Array(buffer), offset);\n                        offset += buffer.byteLength;\n                    }\n\n                    // \uBC84\uD37C \uBE44\uC6B0\uAE30\n                    audioBuffer.length = 0;\n\n                    // Whisper\uB85C \uC804\uC0AC\n                    try {\n                        const transcription = await processAudio(env.AI, combinedBuffer, {\n                            task: config.task,\n                            language: config.language,\n                            vad_filter: true\n                        } as any);\n\n                        // \uACB0\uACFC \uC804\uC1A1\n                        if (transcription.text && transcription.text.trim()) {\n                            const transcribedText = transcription.text.trim();\n\n                            // \uBC88\uC5ED\uC774 \uD65C\uC131\uD654\uB418\uC5B4 \uC788\uACE0 \uB300\uC0C1 \uC5B8\uC5B4\uAC00 \uC788\uB294 \uACBD\uC6B0\n                            let translations: Record<string, string> = {};\n                            if (config.enableTranslation && config.targetLanguages.length > 0) {\n                                try {\n                                    translations = await translateToMultipleLanguages(\n                                        env.AI,\n                                        transcribedText,\n                                        config.targetLanguages,\n                                        (transcription as any).language || 'auto'\n                                    );\n                                } catch (error) {\n                                    log.error('Translation error', error as Error, { component: 'TRANSCRIBE_SERVICE' });\n                                }\n                            }\n\n                            ws.send(JSON.stringify({\n                                type: 'transcription',\n                                text: transcribedText,\n                                language: (transcription as any).language,\n                                words: (transcription as any).words,\n                                translations,\n                                is_final: true,\n                                timestamp: Date.now(),\n                                confidence: (transcription as any).confidence || 0.95\n                            }));\n                        }\n                    } catch (error) {\n                        log.error('Transcription error', error as Error, { component: 'TRANSCRIBE_SERVICE' });\n                        ws.send(JSON.stringify({\n                            type: 'error',\n                            message: 'Transcription failed'\n                        }));\n                    }\n\n                    isProcessing = false;\n                }\n            }\n        } catch (error) {\n            log.error('WebSocket error', error as Error, { component: 'TRANSCRIBE_SERVICE' });\n            ws.send(JSON.stringify({\n                type: 'error',\n                message: 'Processing error'\n            }));\n        }\n    });\n\n    ws.addEventListener('close', () => {\n        sessionActive = false;\n        audioBuffer.length = 0;\n    });\n\n    // \uD551/\uD401 \uC720\uC9C0\n    const pingInterval = setInterval(() => {\n        if (sessionActive && ws.readyState === WebSocket.OPEN) {\n            ws.send(JSON.stringify({ type: 'ping' }));\n        } else {\n            clearInterval(pingInterval);\n        }\n    }, 30000);\n}\n\n// \uC77C\uBC18 \uD30C\uC77C \uC804\uC0AC (\uAE30\uC874 \uC5D4\uB4DC\uD3EC\uC778\uD2B8)\nconst transcribeSchema = z.object({\n    audio_url: z.string().url().optional(),\n    audio_base64: z.string().optional(),\n    language: z.string().optional(),\n    task: z.enum(['transcribe', 'translate']).optional(),\n    word_timestamps: z.boolean().optional()\n});\n\napp.post('/', validateAuth, async (c) => {\n    try {\n        const body = await c.req.json();\n        const { audio_url, audio_base64, language, task, word_timestamps } = transcribeSchema.parse(body);\n\n        let audioBuffer: ArrayBuffer;\n\n        if (audio_url) {\n            // URL\uC5D0\uC11C \uC624\uB514\uC624 \uB2E4\uC6B4\uB85C\uB4DC\n            const response = await fetch(audio_url);\n            if (!response.ok) {\n                return c.json({ error: 'Failed to fetch audio' }, 400);\n            }\n            audioBuffer = await response.arrayBuffer();\n        } else if (audio_base64) {\n            // Base64 \uB514\uCF54\uB529\n            const binaryString = atob(audio_base64);\n            const bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n                bytes[i] = binaryString.charCodeAt(i);\n            }\n            audioBuffer = bytes.buffer;\n        } else {\n            return c.json({ error: 'No audio provided' }, 400);\n        }\n\n        // Whisper\uB85C \uC804\uC0AC\n        const result = await processAudio(c.env.AI, audioBuffer, {\n            task: task || 'transcribe',\n            language: language || 'auto',\n            vad_filter: true\n        } as any);\n\n        return c.json({\n            success: true,\n            transcription: result\n        });\n    } catch (error) {\n        log.error('Transcription error', error as Error, { component: 'TRANSCRIBE_SERVICE' });\n        return c.json({\n            error: 'Transcription failed',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        }, 500);\n    }\n});\n\nexport { app as transcribeRoutes };\nexport default app;", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            getErrorMap(),\n            errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\nconst ulidRegex = /[0-9A-HJKMNP-TV-Z]{26}/;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_+-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst emojiRegex = /^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$/u;\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// Adapted from https://stackoverflow.com/a/3143231\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n        /**\n         * @deprecated Use z.string().min(1) instead.\n         * @see {@link ZodString.min}\n         */\n        this.nonempty = (message) => this.min(1, errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n        this.toLowerCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n        this.toUpperCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values) {\n        return ZodEnum.create(values);\n    }\n    exclude(values) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n    }\n}\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.issues.length) {\n                return {\n                    status: \"dirty\",\n                    value: ctx.data,\n                };\n            }\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        if (isValid(result)) {\n            result.value = Object.freeze(result.value);\n        }\n        return result;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nconst custom = (check, params = {}, \n/*\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n};\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n", "// Authentication middleware and utilities\n\nimport { Context } from 'hono';\nimport { verify } from 'hono/jwt';\nimport type { AppBindings as Env } from '../index';\nimport type { Variables } from '../types';\nimport { log } from './logger';\n\nexport interface AuthUser {\n  id: string;\n  email?: string;\n  role?: string;\n  permissions?: string[];\n}\n\n// Verify JWT token from STUDYMATE-SERVER with signature verification\nexport async function verifyToken(token: string, secret: string): Promise<AuthUser | null> {\n  try {\n    // \uC11C\uBC84\uB294 HS512\uB85C \uC11C\uBA85\uD558\uBBC0\uB85C \uB3D9\uC77C \uC54C\uACE0\uB9AC\uC998\uC73C\uB85C \uAC80\uC99D\n    const payload: any = await verify(token, secret, 'HS512');\n    // Verify expiration (verify already checks exp, but keep explicit guard)\n    if (payload.exp && payload.exp < Date.now() / 1000) {\n      return null;\n    }\n    return {\n      id: payload.userId || payload.sub,\n      email: payload.email,\n      role: payload.role || 'user',\n      permissions: payload.permissions || []\n    };\n  } catch (error) {\n    log.error('Token verification error', error as Error, { component: 'AUTH_SERVICE' });\n    return null;\n  }\n}\n\n// Auth middleware for Hono\nexport async function authMiddleware(\n  c: Context<{ Bindings: Env; Variables: Variables }>,\n  next: () => Promise<void>\n) {\n  const authHeader = c.req.header('Authorization');\n\n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\n    return c.json({ error: 'Unauthorized' }, 401);\n  }\n\n  const token = authHeader.slice(7);\n  const secret = c.env.JWT_SECRET || 'development-secret-change-in-production';\n  const user = await verifyToken(token, secret);\n\n  if (!user) {\n    return c.json({ error: 'Invalid or expired token' }, 401);\n  }\n\n  // Store user in context\n  c.set('user', user);\n\n  await next();\n}\n\n// Optional auth middleware (doesn't fail if no token)\nexport async function optionalAuthMiddleware(\n  c: Context<{ Bindings: Env; Variables: Variables }>,\n  next: () => Promise<void>\n) {\n  const authHeader = c.req.header('Authorization');\n\n  if (authHeader && authHeader.startsWith('Bearer ')) {\n    const token = authHeader.slice(7);\n    const secret = c.env.JWT_SECRET || 'development-secret-change-in-production';\n    const user = await verifyToken(token, secret);\n    if (user) {\n      c.set('user', user);\n    }\n  }\n\n  await next();\n}\n\n// Get user from context\nexport function getUser(c: Context): AuthUser | null {\n  return c.get('user') || null;\n}\n\n// Check if user has required role\nexport function hasRole(c: Context, role: string): boolean {\n  const user = getUser(c);\n  return user?.role === role || user?.role === 'admin';\n}\n\n// Rate limiting helper\nexport async function checkRateLimit(\n  env: Env,\n  userId: string,\n  action: string,\n  limit: number = 10,\n  window: number = 60\n): Promise<boolean> {\n  const key = `rate:${userId}:${action}`;\n  const now = Date.now();\n  const windowStart = now - (window * 1000);\n\n  // Get current count from KV\n  const data = await env.CACHE.get(key);\n  let attempts: number[] = [];\n\n  if (data) {\n    attempts = JSON.parse(data).filter((t: number) => t > windowStart);\n  }\n\n  if (attempts.length >= limit) {\n    return false; // Rate limit exceeded\n  }\n\n  // Add current attempt\n  attempts.push(now);\n  await env.CACHE.put(\n    key,\n    JSON.stringify(attempts),\n    { expirationTtl: window }\n  );\n\n  return true;\n}\n\n// API key validation for service-to-service calls\nexport async function validateApiKey(\n  c: Context<{ Bindings: Env; Variables: Variables }>,\n  next: () => Promise<void>\n) {\n  const apiKey = c.req.header('X-API-Key');\n\n  if (!apiKey) {\n    return c.json({ error: 'API key required' }, 401);\n  }\n\n  // Check against environment variable\n  const validKey = c.env.INTERNAL_API_KEY || 'default-key';\n\n  if (apiKey !== validKey) {\n    return c.json({ error: 'Invalid API key' }, 401);\n  }\n\n  await next();\n}\n\n// Alias for authMiddleware (for compatibility)\nexport const validateAuth = authMiddleware;", "import { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport type { AppBindings as Env } from '../index';\nimport { getCacheStats, invalidateCache, warmCache } from '../middleware/cache';\nimport { auth } from '../middleware/auth';\nimport { CacheService, SessionCache, UserCache, APICache } from '../services/cache';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// CORS \uC124\uC815\napp.use('/*', cors());\n\n// \uAD00\uB9AC\uC790 \uAD8C\uD55C \uD655\uC778 (\uC2E4\uC81C\uB85C\uB294 \uB354 \uAC15\uB825\uD55C \uC778\uC99D \uD544\uC694)\napp.use('/*', async (c, next) => {\n  const apiKey = c.req.header('x-api-key');\n  if (apiKey !== c.env.INTERNAL_SECRET) {\n    return c.json({ error: 'Unauthorized' }, 401);\n  }\n  await next();\n});\n\n// \uCE90\uC2DC \uD1B5\uACC4 \uC870\uD68C\napp.get('/stats', async (c) => {\n  try {\n    const stats = await getCacheStats(c.env.CACHE);\n    \n    return c.json({\n      success: true,\n      stats,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\n// \uCE90\uC2DC \uBB34\uD6A8\uD654\napp.post('/invalidate', async (c) => {\n  try {\n    const body = await c.req.json<{\n      patterns?: string[];\n      type?: 'api' | 'session' | 'user' | 'all';\n      userId?: string;\n      tag?: string;\n    }>();\n\n    if (body.type === 'all') {\n      // \uBAA8\uB4E0 \uCE90\uC2DC \uC0AD\uC81C\n      const cacheService = new CacheService(c.env.CACHE);\n      await cacheService.deleteByPrefix('');\n      \n      return c.json({\n        success: true,\n        message: 'All cache cleared'\n      });\n    }\n\n    if (body.type === 'api') {\n      const apiCache = new APICache(c.env.CACHE);\n      await apiCache.invalidateAll();\n      \n      return c.json({\n        success: true,\n        message: 'API cache cleared'\n      });\n    }\n\n    if (body.type === 'session') {\n      const sessionCache = new SessionCache(c.env.CACHE);\n      await sessionCache.deleteAllSessions();\n      \n      return c.json({\n        success: true,\n        message: 'Session cache cleared'\n      });\n    }\n\n    if (body.type === 'user' && body.userId) {\n      const userCache = new UserCache(c.env.CACHE);\n      await userCache.invalidateUser(body.userId);\n      \n      const sessionCache = new SessionCache(c.env.CACHE);\n      await sessionCache.deleteUserSessions(body.userId);\n      \n      return c.json({\n        success: true,\n        message: `Cache cleared for user ${body.userId}`\n      });\n    }\n\n    if (body.patterns) {\n      await invalidateCache(c.env.CACHE, body.patterns);\n      \n      return c.json({\n        success: true,\n        message: `Cache invalidated for patterns: ${body.patterns.join(', ')}`\n      });\n    }\n\n    if (body.tag) {\n      const cacheService = new CacheService(c.env.CACHE);\n      await cacheService.deleteByTag(body.tag);\n      \n      return c.json({\n        success: true,\n        message: `Cache cleared for tag: ${body.tag}`\n      });\n    }\n\n    return c.json({ error: 'No invalidation criteria provided' }, 400);\n\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\n// \uCE90\uC2DC \uC6CC\uBC0D\napp.post('/warm', async (c) => {\n  try {\n    const body = await c.req.json<{\n      endpoints: Array<{ url: string; ttl?: number }>;\n    }>();\n\n    if (!body.endpoints || body.endpoints.length === 0) {\n      return c.json({ error: 'No endpoints provided' }, 400);\n    }\n\n    // \uBC31\uADF8\uB77C\uC6B4\uB4DC\uC5D0\uC11C \uCE90\uC2DC \uC6CC\uBC0D \uC2E4\uD589\n    c.executionCtx.waitUntil(\n      warmCache(c.env, body.endpoints)\n    );\n\n    return c.json({\n      success: true,\n      message: `Warming cache for ${body.endpoints.length} endpoints`,\n      endpoints: body.endpoints\n    });\n\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\n// \uD2B9\uC815 \uD0A4 \uC870\uD68C\napp.get('/get/:key', async (c) => {\n  try {\n    const key = c.req.param('key');\n    const cacheService = new CacheService(c.env.CACHE);\n    \n    const value = await cacheService.get(key);\n    \n    if (!value) {\n      return c.json({ error: 'Key not found' }, 404);\n    }\n\n    return c.json({\n      success: true,\n      key,\n      value,\n      exists: true\n    });\n\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\n// \uD2B9\uC815 \uD0A4 \uC124\uC815\napp.post('/set', async (c) => {\n  try {\n    const body = await c.req.json<{\n      key: string;\n      value: any;\n      ttl?: number;\n      tags?: string[];\n    }>();\n\n    if (!body.key || body.value === undefined) {\n      return c.json({ error: 'Key and value are required' }, 400);\n    }\n\n    const cacheService = new CacheService(c.env.CACHE);\n    await cacheService.set(body.key, body.value, {\n      ttl: body.ttl,\n      tags: body.tags\n    });\n\n    return c.json({\n      success: true,\n      key: body.key,\n      ttl: body.ttl || 3600\n    });\n\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\n// \uCE90\uC2DC \uD0A4 \uBAA9\uB85D \uC870\uD68C\napp.get('/keys', async (c) => {\n  try {\n    const prefix = c.req.query('prefix') || '';\n    const limit = parseInt(c.req.query('limit') || '100');\n    \n    const list = await c.env.CACHE.list({\n      prefix,\n      limit: Math.min(limit, 1000)\n    });\n\n    return c.json({\n      success: true,\n      keys: list.keys.map((key: any) => ({\n        name: key.name,\n        expiration: key.expiration,\n        metadata: key.metadata\n      })),\n      cursor: (list as any).cursor,\n      complete: list.list_complete\n    });\n\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\n// \uC138\uC158 \uAC31\uC2E0\napp.post('/session/refresh', async (c) => {\n  try {\n    const body = await c.req.json<{\n      sessionId: string;\n      ttl?: number;\n    }>();\n\n    if (!body.sessionId) {\n      return c.json({ error: 'Session ID is required' }, 400);\n    }\n\n    const sessionCache = new SessionCache(c.env.CACHE);\n    const refreshed = await sessionCache.refreshSession(\n      body.sessionId,\n      body.ttl || 3600\n    );\n\n    if (!refreshed) {\n      return c.json({ error: 'Session not found' }, 404);\n    }\n\n    return c.json({\n      success: true,\n      sessionId: body.sessionId,\n      refreshed: true,\n      ttl: body.ttl || 3600\n    });\n\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\nexport default app;", "import { Context, Next } from 'hono';\nimport type { AppBindings as Env } from '../index';\nimport { Variables } from '../types';\nimport { APICache } from '../services/cache';\n\ninterface CacheConfig {\n  ttl?: number;\n  keyGenerator?: (c: Context) => string;\n  shouldCache?: (c: Context) => boolean;\n  tags?: string[];\n}\n\n// \uAE30\uBCF8 \uCE90\uC2DC \uC124\uC815\nconst DEFAULT_CONFIG: CacheConfig = {\n  ttl: 300, // 5\uBD84\n  shouldCache: (c) => c.req.method === 'GET' && c.res?.status === 200\n};\n\n// \uCE90\uC2DC \uBBF8\uB4E4\uC6E8\uC5B4 \uD329\uD1A0\uB9AC\nexport function cache(config: CacheConfig = {}) {\n  const finalConfig = { ...DEFAULT_CONFIG, ...config };\n\n  return async (c: Context<{ Bindings: Env; Variables: Variables }>, next: Next) => {\n    // POST, PUT, DELETE \uB4F1\uC740 \uCE90\uC2F1\uD558\uC9C0 \uC54A\uC74C\n    if (c.req.method !== 'GET') {\n      return next();\n    }\n\n    // \uCE90\uC2DC \uBB34\uC2DC \uD5E4\uB354 \uD655\uC778\n    const cacheControl = c.req.header('cache-control');\n    if (cacheControl === 'no-cache' || cacheControl === 'no-store') {\n      return next();\n    }\n\n    // \uCE90\uC2DC \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654\n    const apiCache = new APICache(c.env.CACHE);\n\n    // \uCE90\uC2DC \uD0A4 \uC0DD\uC131\n    const url = new URL(c.req.url);\n    const cacheKey = finalConfig.keyGenerator \n      ? finalConfig.keyGenerator(c)\n      : `${url.pathname}${url.search}`;\n\n    // \uCE90\uC2DC \uC870\uD68C\n    try {\n      const cached = await apiCache.getCachedResponse('GET', cacheKey);\n      if (cached) {\n        // \uCE90\uC2DC \uD788\uD2B8\n        c.header('X-Cache', 'HIT');\n        c.header('X-Cache-Key', cacheKey);\n        c.header('Cache-Control', `public, max-age=${finalConfig.ttl}`);\n        \n        return c.json(cached);\n      }\n    } catch (error) {\n      console.error('Cache retrieval error:', error);\n      // \uCE90\uC2DC \uC624\uB958 \uC2DC \uC694\uCCAD \uACC4\uC18D \uC9C4\uD589\n    }\n\n    // \uC6D0\uBCF8 \uC751\uB2F5 \uCC98\uB9AC\n    await next();\n\n    // \uC751\uB2F5 \uCE90\uC2F1\n    if (finalConfig.shouldCache && finalConfig.shouldCache(c)) {\n      try {\n        // \uC751\uB2F5 \uBCF8\uBB38 \uC77D\uAE30\n        const responseClone = c.res.clone();\n        const responseBody = await responseClone.json();\n\n        // \uCE90\uC2DC \uC800\uC7A5\n        await apiCache.cacheResponse(\n          'GET',\n          cacheKey,\n          responseBody,\n          null,\n          finalConfig.ttl\n        );\n\n        // \uCE90\uC2DC \uBBF8\uC2A4 \uD5E4\uB354 \uCD94\uAC00\n        c.header('X-Cache', 'MISS');\n        c.header('X-Cache-Key', cacheKey);\n        c.header('Cache-Control', `public, max-age=${finalConfig.ttl}`);\n      } catch (error) {\n        console.error('Cache storage error:', error);\n        // \uCE90\uC2DC \uC800\uC7A5 \uC2E4\uD328 \uC2DC\uC5D0\uB3C4 \uC751\uB2F5\uC740 \uC815\uC0C1 \uBC18\uD658\n      }\n    }\n  };\n}\n\n// \uC0AC\uC6A9\uC790\uBCC4 \uCE90\uC2DC \uBBF8\uB4E4\uC6E8\uC5B4\nexport function userCache(config: CacheConfig = {}) {\n  return cache({\n    ...config,\n    keyGenerator: (c) => {\n      const userId = c.req.header('x-user-id') || 'anonymous';\n      const url = new URL(c.req.url);\n      return `user:${userId}:${url.pathname}${url.search}`;\n    }\n  });\n}\n\n// \uC138\uC158\uBCC4 \uCE90\uC2DC \uBBF8\uB4E4\uC6E8\uC5B4\nexport function sessionCache(config: CacheConfig = {}) {\n  return cache({\n    ...config,\n    keyGenerator: (c) => {\n      const cookies = (c.req as any).cookie ? (c.req as any).cookie() : undefined;\n      const sessionCookie = typeof cookies === 'object' ? cookies['session_id'] : undefined;\n      const sessionId = c.req.header('x-session-id') || sessionCookie || 'no-session';\n      const url = new URL(c.req.url);\n      return `session:${sessionId}:${url.pathname}${url.search}`;\n    }\n  });\n}\n\n// \uCE90\uC2DC \uBB34\uD6A8\uD654 \uD5EC\uD37C\nexport async function invalidateCache(\n  kv: KVNamespace,\n  patterns: string[]\n): Promise<void> {\n  const apiCache = new APICache(kv);\n  \n  await Promise.all(\n    patterns.map(pattern => {\n      if (pattern === '*') {\n        return apiCache.invalidateAll();\n      }\n      return apiCache.invalidateMethod(pattern);\n    })\n  );\n}\n\n// \uCE90\uC2DC \uC6CC\uBA38 - \uBBF8\uB9AC \uCE90\uC2DC\uB97C \uCC44\uC6CC\uB123\uB294 \uD568\uC218\nexport async function warmCache(\n  env: Env,\n  endpoints: Array<{ url: string; ttl?: number }>\n): Promise<void> {\n  const apiCache = new APICache(env.CACHE);\n  \n  await Promise.all(\n    endpoints.map(async ({ url, ttl = 3600 }) => {\n      try {\n        // \uC2E4\uC81C \uC5D4\uB4DC\uD3EC\uC778\uD2B8 \uD638\uCD9C\n        const response = await fetch(url);\n        if (response.ok) {\n          const data = await response.json();\n          const urlObj = new URL(url);\n          const cacheKey = `${urlObj.pathname}${urlObj.search}`;\n          \n          await apiCache.cacheResponse('GET', cacheKey, data, null, ttl);\n        }\n      } catch (error) {\n        console.error(`Failed to warm cache for ${url}:`, error);\n      }\n    })\n  );\n}\n\n// \uCE90\uC2DC \uC0C1\uD0DC \uD655\uC778 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uB97C \uC704\uD55C \uD5EC\uD37C\nexport async function getCacheStats(kv: KVNamespace): Promise<{\n  totalKeys: number;\n  estimatedSize: number;\n  cacheTypes: Record<string, number>;\n}> {\n  const list = await kv.list({ limit: 1000 });\n  \n  const cacheTypes: Record<string, number> = {};\n  \n  for (const key of list.keys) {\n    const [prefix] = key.name.split(':');\n    cacheTypes[prefix] = (cacheTypes[prefix] || 0) + 1;\n  }\n  \n  return {\n    totalKeys: list.keys.length,\n    estimatedSize: list.keys.reduce((sum, key: any) => sum + (key.metadata?.size || 0), 0),\n    cacheTypes\n  };\n}", "// Workers KV \uCE90\uC2F1 \uC11C\uBE44\uC2A4\n\nexport interface CacheOptions {\n  ttl?: number; // Time to live in seconds\n  tags?: string[]; // Cache tags for bulk invalidation\n  priority?: 'low' | 'normal' | 'high';\n}\n\nexport interface CacheEntry<T = any> {\n  data: T;\n  createdAt: number;\n  expiresAt: number;\n  tags?: string[];\n  version?: string;\n}\n\nexport class CacheService {\n  private kv: KVNamespace;\n  private prefix: string;\n  private defaultTTL: number;\n\n  constructor(kv: KVNamespace, prefix = 'cache', defaultTTL = 3600) {\n    this.kv = kv;\n    this.prefix = prefix;\n    this.defaultTTL = defaultTTL;\n  }\n\n  // \uCE90\uC2DC \uD0A4 \uC0DD\uC131\n  private makeKey(...parts: string[]): string {\n    return [this.prefix, ...parts].join(':');\n  }\n\n  // \uCE90\uC2DC \uC800\uC7A5\n  async set<T>(\n    key: string, \n    data: T, \n    options: CacheOptions = {}\n  ): Promise<void> {\n    const ttl = options.ttl || this.defaultTTL;\n    const now = Date.now();\n    \n    const entry: CacheEntry<T> = {\n      data,\n      createdAt: now,\n      expiresAt: now + (ttl * 1000),\n      tags: options.tags,\n      version: '1.0'\n    };\n\n    await this.kv.put(\n      this.makeKey(key),\n      JSON.stringify(entry),\n      {\n        expirationTtl: ttl,\n        metadata: {\n          tags: options.tags,\n          priority: options.priority || 'normal'\n        }\n      }\n    );\n\n    // \uD0DC\uADF8 \uC778\uB371\uC2A4 \uC5C5\uB370\uC774\uD2B8\n    if (options.tags && options.tags.length > 0) {\n      await this.updateTagIndex(key, options.tags);\n    }\n  }\n\n  // \uCE90\uC2DC \uC870\uD68C\n  async get<T>(key: string): Promise<T | null> {\n    const fullKey = this.makeKey(key);\n    const cached = await this.kv.get(fullKey, { type: 'json' }) as CacheEntry<T> | null;\n\n    if (!cached) {\n      return null;\n    }\n\n    // \uB9CC\uB8CC \uD655\uC778\n    if (cached.expiresAt < Date.now()) {\n      await this.kv.delete(fullKey);\n      return null;\n    }\n\n    return cached.data;\n  }\n\n  // \uCE90\uC2DC \uC874\uC7AC \uD655\uC778\n  async has(key: string): Promise<boolean> {\n    const result = await this.get(key);\n    return result !== null;\n  }\n\n  // \uCE90\uC2DC \uC0AD\uC81C\n  async delete(key: string): Promise<void> {\n    const fullKey = this.makeKey(key);\n    await this.kv.delete(fullKey);\n  }\n\n  // \uD0DC\uADF8\uB85C \uCE90\uC2DC \uC0AD\uC81C\n  async deleteByTag(tag: string): Promise<void> {\n    const tagKey = this.makeKey('tags', tag);\n    const keys = await this.kv.get<string[]>(tagKey, { type: 'json' });\n\n    if (keys && keys.length > 0) {\n      await Promise.all(keys.map(key => this.kv.delete(this.makeKey(key))));\n      await this.kv.delete(tagKey);\n    }\n  }\n\n  // \uD328\uD134\uC73C\uB85C \uCE90\uC2DC \uC0AD\uC81C\n  async deleteByPrefix(prefix: string): Promise<void> {\n    const fullPrefix = this.makeKey(prefix);\n    const list = await this.kv.list({ prefix: fullPrefix });\n\n    await Promise.all(\n      list.keys.map(key => this.kv.delete(key.name))\n    );\n  }\n\n  // \uD0DC\uADF8 \uC778\uB371\uC2A4 \uC5C5\uB370\uC774\uD2B8\n  private async updateTagIndex(key: string, tags: string[]): Promise<void> {\n    await Promise.all(\n      tags.map(async tag => {\n        const tagKey = this.makeKey('tags', tag);\n        const existing = await this.kv.get<string[]>(tagKey, { type: 'json' }) || [];\n        \n        if (!existing.includes(key)) {\n          existing.push(key);\n          await this.kv.put(tagKey, JSON.stringify(existing), {\n            expirationTtl: 86400 * 7 // 7\uC77C\n          });\n        }\n      })\n    );\n  }\n\n  // \uCE90\uC2DC \uD1B5\uACC4\n  async getStats(): Promise<{\n    totalKeys: number;\n    estimatedSize: number;\n    oldestKey?: string;\n  }> {\n    const list = await this.kv.list({ prefix: this.prefix });\n    \n    return {\n      totalKeys: list.keys.length,\n      estimatedSize: list.keys.reduce((sum, key) => sum + ((key.metadata as any)?.size || 0), 0),\n      oldestKey: list.keys[0]?.name\n    };\n  }\n}\n\n// \uC138\uC158 \uCE90\uC2F1 \uC804\uC6A9 \uC11C\uBE44\uC2A4\nexport class SessionCache {\n  private cache: CacheService;\n\n  constructor(kv: KVNamespace) {\n    this.cache = new CacheService(kv, 'session', 3600); // 1\uC2DC\uAC04 \uAE30\uBCF8 TTL\n  }\n\n  // \uC138\uC158 \uC800\uC7A5\n  async setSession(sessionId: string, data: any, ttl = 3600): Promise<void> {\n    await this.cache.set(sessionId, data, {\n      ttl,\n      tags: ['session', `user:${data.userId}`]\n    });\n  }\n\n  // \uC138\uC158 \uC870\uD68C\n  async getSession(sessionId: string): Promise<any> {\n    return this.cache.get(sessionId);\n  }\n\n  // \uC138\uC158 \uAC31\uC2E0\n  async refreshSession(sessionId: string, ttl = 3600): Promise<boolean> {\n    const session = await this.getSession(sessionId);\n    if (!session) return false;\n\n    await this.setSession(sessionId, session, ttl);\n    return true;\n  }\n\n  // \uC0AC\uC6A9\uC790\uBCC4 \uC138\uC158 \uC0AD\uC81C\n  async deleteUserSessions(userId: string): Promise<void> {\n    await this.cache.deleteByTag(`user:${userId}`);\n  }\n\n  // \uBAA8\uB4E0 \uC138\uC158 \uC0AD\uC81C\n  async deleteAllSessions(): Promise<void> {\n    await this.cache.deleteByTag('session');\n  }\n}\n\n// API \uC751\uB2F5 \uCE90\uC2F1 \uC11C\uBE44\uC2A4\nexport class APICache {\n  private cache: CacheService;\n\n  constructor(kv: KVNamespace) {\n    this.cache = new CacheService(kv, 'api', 300); // 5\uBD84 \uAE30\uBCF8 TTL\n  }\n\n  // API \uC751\uB2F5 \uCE90\uC2DC \uD0A4 \uC0DD\uC131\n  private makeAPIKey(method: string, url: string, params?: any): string {\n    const paramString = params ? JSON.stringify(params) : '';\n    return `${method}:${url}:${paramString}`;\n  }\n\n  // API \uC751\uB2F5 \uCE90\uC2F1\n  async cacheResponse(\n    method: string,\n    url: string,\n    response: any,\n    params?: any,\n    ttl = 300\n  ): Promise<void> {\n    const key = this.makeAPIKey(method, url, params);\n    await this.cache.set(key, response, { ttl, tags: ['api', method] });\n  }\n\n  // \uCE90\uC2DC\uB41C \uC751\uB2F5 \uC870\uD68C\n  async getCachedResponse(\n    method: string,\n    url: string,\n    params?: any\n  ): Promise<any> {\n    const key = this.makeAPIKey(method, url, params);\n    return this.cache.get(key);\n  }\n\n  // \uD2B9\uC815 \uBA54\uC11C\uB4DC\uC758 \uBAA8\uB4E0 \uCE90\uC2DC \uC0AD\uC81C\n  async invalidateMethod(method: string): Promise<void> {\n    await this.cache.deleteByTag(method);\n  }\n\n  // \uBAA8\uB4E0 API \uCE90\uC2DC \uC0AD\uC81C\n  async invalidateAll(): Promise<void> {\n    await this.cache.deleteByTag('api');\n  }\n}\n\n// \uC0AC\uC6A9\uC790 \uD504\uB85C\uD544 \uCE90\uC2F1 \uC11C\uBE44\uC2A4\nexport class UserCache {\n  private cache: CacheService;\n\n  constructor(kv: KVNamespace) {\n    this.cache = new CacheService(kv, 'user', 86400); // 24\uC2DC\uAC04 \uAE30\uBCF8 TTL\n  }\n\n  // \uC0AC\uC6A9\uC790 \uD504\uB85C\uD544 \uCE90\uC2F1\n  async setUser(userId: string, profile: any): Promise<void> {\n    await this.cache.set(`profile:${userId}`, profile, {\n      ttl: 86400,\n      tags: ['user-profile']\n    });\n  }\n\n  // \uC0AC\uC6A9\uC790 \uD504\uB85C\uD544 \uC870\uD68C\n  async getUser(userId: string): Promise<any> {\n    return this.cache.get(`profile:${userId}`);\n  }\n\n  // \uC0AC\uC6A9\uC790 \uC124\uC815 \uCE90\uC2F1\n  async setUserSettings(userId: string, settings: any): Promise<void> {\n    await this.cache.set(`settings:${userId}`, settings, {\n      ttl: 86400 * 7, // 7\uC77C\n      tags: ['user-settings']\n    });\n  }\n\n  // \uC0AC\uC6A9\uC790 \uC124\uC815 \uC870\uD68C\n  async getUserSettings(userId: string): Promise<any> {\n    return this.cache.get(`settings:${userId}`);\n  }\n\n  // \uC0AC\uC6A9\uC790 \uAD00\uB828 \uBAA8\uB4E0 \uCE90\uC2DC \uC0AD\uC81C\n  async invalidateUser(userId: string): Promise<void> {\n    await Promise.all([\n      this.cache.delete(`profile:${userId}`),\n      this.cache.delete(`settings:${userId}`)\n    ]);\n  }\n}\n\n// \uCE90\uC2DC \uBBF8\uB4E4\uC6E8\uC5B4\nexport function cacheMiddleware(kv: KVNamespace, ttl = 300) {\n  const apiCache = new APICache(kv);\n\n  return async (c: any, next: any) => {\n    // GET \uC694\uCCAD\uB9CC \uCE90\uC2F1\n    if (c.req.method !== 'GET') {\n      return next();\n    }\n\n    // \uCE90\uC2DC \uC6B0\uD68C \uD5E4\uB354 \uD655\uC778\n    if (c.req.header('cache-control') === 'no-cache') {\n      return next();\n    }\n\n    const url = new URL(c.req.url);\n    const cacheKey = `${url.pathname}${url.search}`;\n\n    // \uCE90\uC2DC \uC870\uD68C\n    const cached = await apiCache.getCachedResponse('GET', cacheKey);\n    if (cached) {\n      return c.json(cached, {\n        headers: {\n          'X-Cache': 'HIT',\n          'Cache-Control': `public, max-age=${ttl}`\n        }\n      });\n    }\n\n    // \uB2E4\uC74C \uD578\uB4E4\uB7EC \uC2E4\uD589\n    await next();\n\n    // \uC131\uACF5 \uC751\uB2F5\uB9CC \uCE90\uC2F1\n    if (c.res.status === 200) {\n      const response = await c.res.json();\n      await apiCache.cacheResponse('GET', cacheKey, response, null, ttl);\n      \n      // \uCE90\uC2DC \uBBF8\uC2A4 \uD5E4\uB354 \uCD94\uAC00\n      c.res.headers.set('X-Cache', 'MISS');\n      c.res.headers.set('Cache-Control', `public, max-age=${ttl}`);\n    }\n  };\n}", "import { Hono } from 'hono';\nimport { log } from '../utils/logger';\nimport { cors } from 'hono/cors';\nimport { Env } from '../index';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// CORS \uC124\uC815\napp.use('/*', cors());\n\n// \uC9C0\uC6D0\uB418\uB294 \uC5B8\uC5B4 \uCF54\uB4DC \uB9E4\uD551\nconst LANGUAGE_CODES: Record<string, string> = {\n  'ko': 'Korean',\n  'en': 'English',\n  'ja': 'Japanese',\n  'zh': 'Chinese',\n  'es': 'Spanish',\n  'fr': 'French',\n  'de': 'German',\n  'ru': 'Russian',\n  'ar': 'Arabic',\n  'hi': 'Hindi',\n  'pt': 'Portuguese',\n  'it': 'Italian',\n  'nl': 'Dutch',\n  'sv': 'Swedish',\n  'pl': 'Polish',\n  'tr': 'Turkish',\n  'vi': 'Vietnamese',\n  'th': 'Thai',\n  'id': 'Indonesian',\n  'ms': 'Malay'\n};\n\n// \uC5B8\uC5B4 \uAC10\uC9C0\nasync function detectLanguage(text: string, ai: Ai): Promise<string> {\n  try {\n    const prompt = `Detect the language of the following text and respond with ONLY the ISO 639-1 language code (e.g., 'en' for English, 'ko' for Korean, 'ja' for Japanese, etc.).\n\nText: \"${text}\"\n\nLanguage code:`;\n\n    const response = await ai.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n      messages: [\n        { role: 'system', content: 'You are a language detection expert. Respond only with the ISO 639-1 language code.' },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.1,\n      max_tokens: 10\n    });\n\n    const detectedCode = (response as any).response.trim().toLowerCase();\n    return LANGUAGE_CODES[detectedCode] ? detectedCode : 'en';\n\n  } catch (error) {\n    log.error('Language detection error', error as Error, { component: 'TRANSLATE_SERVICE' });\n    return 'en'; // \uAE30\uBCF8\uAC12\n  }\n}\n\n// \uBC88\uC5ED \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/translate', async (c) => {\n  try {\n    const body = await c.req.json<{\n      text: string;\n      source?: string;\n      target: string;\n      preserveFormatting?: boolean;\n    }>();\n\n    if (!body.text || !body.target) {\n      return c.json({ error: 'Text and target language are required' }, 400);\n    }\n\n    // \uC18C\uC2A4 \uC5B8\uC5B4 \uC790\uB3D9 \uAC10\uC9C0\n    const sourceLanguage = body.source || await detectLanguage(body.text, c.env.AI);\n    const targetLanguage = body.target;\n\n    // \uAC19\uC740 \uC5B8\uC5B4\uBA74 \uC6D0\uBB38 \uBC18\uD658\n    if (sourceLanguage === targetLanguage) {\n      return c.json({\n        success: true,\n        originalText: body.text,\n        translatedText: body.text,\n        sourceLanguage,\n        targetLanguage,\n        isIdentical: true\n      });\n    }\n\n    // \uBC88\uC5ED \uD504\uB86C\uD504\uD2B8 \uC0DD\uC131\n    const prompt = `Translate the following text from ${LANGUAGE_CODES[sourceLanguage] || sourceLanguage} to ${LANGUAGE_CODES[targetLanguage] || targetLanguage}.\n${body.preserveFormatting ? 'Preserve the original formatting including line breaks and punctuation.' : ''}\n\nOriginal text:\n\"${body.text}\"\n\nTranslation:`;\n\n    // AI \uBC88\uC5ED \uC2E4\uD589\n    const response = await c.env.AI.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n      messages: [\n        { \n          role: 'system', \n          content: 'You are a professional translator. Provide accurate, natural translations while maintaining the original meaning and tone. Respond only with the translation, no explanations.' \n        },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.3,\n      max_tokens: Math.min(body.text.length * 3, 2000) // \uBC88\uC5ED\uC740 \uBCF4\uD1B5 \uC6D0\uBB38\uBCF4\uB2E4 \uAE38\uC5B4\uC9C8 \uC218 \uC788\uC74C\n    });\n\n    const translatedText = (response as any).response.trim()\n      .replace(/^[\"']/, '') // \uC55E \uB530\uC634\uD45C \uC81C\uAC70\n      .replace(/[\"']$/, ''); // \uB4A4 \uB530\uC634\uD45C \uC81C\uAC70\n\n    return c.json({\n      success: true,\n      originalText: body.text,\n      translatedText,\n      sourceLanguage,\n      targetLanguage,\n      model: '@cf/meta/llama-3.3-70b-instruct-fp8-fast'\n    });\n\n  } catch (error: any) {\n    log.error('Translation error', error as Error, { component: 'TRANSLATE_SERVICE' });\n    return c.json({ error: error.message || 'Translation failed' }, 500);\n  }\n});\n\n// \uC77C\uAD04 \uBC88\uC5ED \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/translate/batch', async (c) => {\n  try {\n    const body = await c.req.json<{\n      texts: string[];\n      source?: string;\n      target: string;\n    }>();\n\n    if (!body.texts || body.texts.length === 0 || !body.target) {\n      return c.json({ error: 'Texts array and target language are required' }, 400);\n    }\n\n    // \uCD5C\uB300 10\uAC1C\uAE4C\uC9C0\uB9CC \uD5C8\uC6A9\n    const textsToTranslate = body.texts.slice(0, 10);\n\n    // \uBCD1\uB82C \uBC88\uC5ED \uCC98\uB9AC\n    const translations = await Promise.all(\n      textsToTranslate.map(async (text) => {\n        try {\n          const sourceLanguage = body.source || await detectLanguage(text, c.env.AI);\n          \n          if (sourceLanguage === body.target) {\n            return {\n              originalText: text,\n              translatedText: text,\n              sourceLanguage,\n              targetLanguage: body.target,\n              isIdentical: true\n            };\n          }\n\n          const prompt = `Translate from ${LANGUAGE_CODES[sourceLanguage] || sourceLanguage} to ${LANGUAGE_CODES[body.target] || body.target}: \"${text}\"`;\n\n          const response = await c.env.AI.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n            messages: [\n              { role: 'system', content: 'You are a translator. Provide only the translation, no explanations.' },\n              { role: 'user', content: prompt }\n            ],\n            temperature: 0.3,\n            max_tokens: Math.min(text.length * 3, 1000)\n          });\n\n          return {\n            originalText: text,\n            translatedText: (response as any).response.trim().replace(/^[\"']|[\"']$/g, ''),\n            sourceLanguage,\n            targetLanguage: body.target\n          };\n\n        } catch (error) {\n          return {\n            originalText: text,\n            translatedText: '',\n            error: 'Translation failed',\n            sourceLanguage: body.source || 'unknown',\n            targetLanguage: body.target\n          };\n        }\n      })\n    );\n\n    return c.json({\n      success: true,\n      translations,\n      total: translations.length\n    });\n\n  } catch (error: any) {\n    log.error('Batch translation error', error as Error, { component: 'TRANSLATE_SERVICE' });\n    return c.json({ error: error.message || 'Batch translation failed' }, 500);\n  }\n});\n\n// \uC2E4\uC2DC\uAC04 \uC790\uB9C9 \uBC88\uC5ED \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/translate/subtitle', async (c) => {\n  try {\n    const body = await c.req.json<{\n      subtitle: {\n        text: string;\n        language?: string;\n        timestamp?: string;\n      };\n      targetLanguage: string;\n      context?: string[]; // \uC774\uC804 \uC790\uB9C9\uB4E4 (\uBB38\uB9E5 \uC774\uD574\uC6A9)\n    }>();\n\n    if (!body.subtitle?.text || !body.targetLanguage) {\n      return c.json({ error: 'Subtitle text and target language are required' }, 400);\n    }\n\n    const sourceLanguage = body.subtitle.language || await detectLanguage(body.subtitle.text, c.env.AI);\n\n    if (sourceLanguage === body.targetLanguage) {\n      return c.json({\n        success: true,\n        originalSubtitle: body.subtitle,\n        translatedSubtitle: {\n          ...body.subtitle,\n          translatedText: body.subtitle.text,\n          targetLanguage: body.targetLanguage\n        }\n      });\n    }\n\n    // \uBB38\uB9E5\uC744 \uD3EC\uD568\uD55C \uBC88\uC5ED\n    let contextPrompt = '';\n    if (body.context && body.context.length > 0) {\n      contextPrompt = `Previous conversation context:\\n${body.context.slice(-3).join('\\n')}\\n\\n`;\n    }\n\n    const prompt = `${contextPrompt}Translate this subtitle from ${LANGUAGE_CODES[sourceLanguage] || sourceLanguage} to ${LANGUAGE_CODES[body.targetLanguage] || body.targetLanguage}. Keep it concise for subtitles:\n\n\"${body.subtitle.text}\"`;\n\n    const response = await c.env.AI.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n      messages: [\n        { \n          role: 'system', \n          content: 'You are a subtitle translator. Provide concise, natural translations suitable for real-time display. Consider the conversation context if provided.' \n        },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.3,\n      max_tokens: 200\n    });\n\n    const translatedText = (response as any).response.trim().replace(/^[\"']|[\"']$/g, '');\n\n    return c.json({\n      success: true,\n      originalSubtitle: body.subtitle,\n      translatedSubtitle: {\n        ...body.subtitle,\n        translatedText,\n        targetLanguage: body.targetLanguage,\n        sourceLanguage\n      }\n    });\n\n  } catch (error: any) {\n    log.error('Subtitle translation error', error as Error, { component: 'TRANSLATE_SERVICE' });\n    return c.json({ error: error.message || 'Subtitle translation failed' }, 500);\n  }\n});\n\n// \uC9C0\uC6D0 \uC5B8\uC5B4 \uBAA9\uB85D\napp.get('/languages', (c) => {\n  const languages = Object.entries(LANGUAGE_CODES).map(([code, name]) => ({\n    code,\n    name,\n    nativeName: getNativeName(code)\n  }));\n\n  return c.json({\n    success: true,\n    languages,\n    total: languages.length\n  });\n});\n\n// \uC5B8\uC5B4\uC758 \uC6D0\uC5B4 \uC774\uB984 \uBC18\uD658\nfunction getNativeName(code: string): string {\n  const nativeNames: Record<string, string> = {\n    'ko': '\uD55C\uAD6D\uC5B4',\n    'en': 'English',\n    'ja': '\u65E5\u672C\u8A9E',\n    'zh': '\u4E2D\u6587',\n    'es': 'Espa\u00F1ol',\n    'fr': 'Fran\u00E7ais',\n    'de': 'Deutsch',\n    'ru': '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n    'ar': '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n    'hi': '\u0939\u093F\u0928\u094D\u0926\u0940',\n    'pt': 'Portugu\u00EAs',\n    'it': 'Italiano',\n    'nl': 'Nederlands',\n    'sv': 'Svenska',\n    'pl': 'Polski',\n    'tr': 'T\u00FCrk\u00E7e',\n    'vi': 'Ti\u1EBFng Vi\u1EC7t',\n    'th': '\u0E44\u0E17\u0E22',\n    'id': 'Bahasa Indonesia',\n    'ms': 'Bahasa Melayu'\n  };\n\n  return nativeNames[code] || LANGUAGE_CODES[code] || code;\n}\n\nexport default app;", "import { Hono } from 'hono';\nimport { z } from 'zod';\nimport type { AppBindings as Env } from '../index';\nimport { authMiddleware } from '../utils/auth';\nimport { getAggregatedMetrics } from '../middleware/analytics';\nimport { successResponse, errorResponse } from '../utils/response';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// \uBA54\uD2B8\uB9AD \uC870\uD68C \uC2A4\uD0A4\uB9C8\nconst metricsQuerySchema = z.object({\n    start: z.string().datetime().optional(),\n    end: z.string().datetime().optional(),\n    groupBy: z.enum(['path', 'status', 'country']).optional(),\n    interval: z.enum(['1m', '5m', '1h', '1d']).optional()\n});\n\n// \uBA54\uD2B8\uB9AD \uC870\uD68C\napp.get('/metrics', authMiddleware as any, async (c) => {\n    try {\n        const query = metricsQuerySchema.parse(c.req.query());\n\n        // \uC2DC\uAC04 \uBC94\uC704 \uC124\uC815 (\uAE30\uBCF8: \uCD5C\uADFC 24\uC2DC\uAC04)\n        const end = query.end ? new Date(query.end) : new Date();\n        const start = query.start ? new Date(query.start) : new Date(end.getTime() - 24 * 60 * 60 * 1000);\n\n        // \uBA54\uD2B8\uB9AD \uC870\uD68C\n        const metrics = await getAggregatedMetrics(\n            c.env,\n            { start, end },\n            query.groupBy\n        );\n\n        if (!metrics) {\n            return successResponse(c, {\n                timeRange: { start, end },\n                groupBy: query.groupBy ?? null,\n                fallback: true,\n                metrics: {\n                    count: 0,\n                    avgDuration: 0,\n                    avgCpuTime: 0,\n                    p95Duration: 0,\n                    p95CpuTime: 0,\n                    buckets: []\n                }\n            }, {\n                note: 'analytics_fallback'\n            });\n        }\n\n        return successResponse(c, {\n            timeRange: { start, end },\n            groupBy: query.groupBy,\n            metrics\n        });\n    } catch (error) {\n        console.error('Metrics query error:', error);\n        return successResponse(c, {\n            timeRange: {\n                start: new Date(Date.now() - 24 * 60 * 60 * 1000),\n                end: new Date()\n            },\n            groupBy: null,\n            fallback: true,\n            metrics: {\n                count: 0,\n                avgDuration: 0,\n                avgCpuTime: 0,\n                p95Duration: 0,\n                p95CpuTime: 0,\n                buckets: []\n            }\n        }, {\n            note: 'analytics_error_fallback'\n        });\n    }\n});\n\n// \uB300\uC2DC\uBCF4\uB4DC \uB370\uC774\uD130\napp.get('/dashboard', authMiddleware as any, async (c) => {\n    try {\n        const now = new Date();\n        const ranges = {\n            last24h: { start: new Date(now.getTime() - 24 * 60 * 60 * 1000), end: now },\n            last7d: { start: new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000), end: now },\n            last30d: { start: new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000), end: now }\n        };\n\n        // \uBCD1\uB82C\uB85C \uC5EC\uB7EC \uBA54\uD2B8\uB9AD \uC870\uD68C\n        const [\n            overview24h,\n            overview7d,\n            overview30d,\n            topPaths,\n            errorsByStatus,\n            geoDistribution\n        ] = await Promise.all([\n            getAggregatedMetrics(c.env, ranges.last24h),\n            getAggregatedMetrics(c.env, ranges.last7d),\n            getAggregatedMetrics(c.env, ranges.last30d),\n            getAggregatedMetrics(c.env, ranges.last24h, 'path'),\n            getAggregatedMetrics(c.env, ranges.last24h, 'status'),\n            getAggregatedMetrics(c.env, ranges.last24h, 'country')\n        ]);\n\n        return successResponse(c, {\n            overview: {\n                last24h: overview24h,\n                last7d: overview7d,\n                last30d: overview30d\n            },\n            topPaths,\n            errorsByStatus,\n            geoDistribution,\n            timestamp: now.toISOString()\n        });\n    } catch (error) {\n        console.error('Dashboard data error:', error);\n        return c.json({ success: false, error: { message: 'Failed to load dashboard data' } }, { status: 500 });\n    }\n});\n\n// \uC2E4\uC2DC\uAC04 \uBA54\uD2B8\uB9AD WebSocket\napp.get('/stream', async (c) => {\n    const upgradeHeader = c.req.header('upgrade');\n    if (!upgradeHeader || upgradeHeader !== 'websocket') {\n        return c.json({ error: 'Expected WebSocket' }, 426);\n    }\n\n    const webSocketPair = new (globalThis as any).WebSocketPair();\n    const [client, server] = Object.values(webSocketPair) as [WebSocket, WebSocket];\n\n    server.accept();\n\n    // \uC778\uC99D \uD655\uC778\n    const authHeader = c.req.header('authorization');\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n        server.send(JSON.stringify({ type: 'error', message: 'Unauthorized' }));\n        server.close(1008, 'Unauthorized');\n        return new Response(null, { status: 101, webSocket: client });\n    }\n\n    // \uC2E4\uC2DC\uAC04 \uBA54\uD2B8\uB9AD \uC2A4\uD2B8\uB9AC\uBC0D \uC2DC\uC791\n    const { streamMetrics } = await import('../middleware/analytics');\n    streamMetrics(server as WebSocket, c.env);\n\n    return new Response(null, {\n        status: 101,\n        webSocket: client,\n    });\n});\n\n// \uC5D0\uB7EC \uD1B5\uACC4\napp.get('/errors', authMiddleware as any, async (c) => {\n    try {\n        const query = metricsQuerySchema.parse(c.req.query());\n\n        const end = query.end ? new Date(query.end) : new Date();\n        const start = query.start ? new Date(query.start) : new Date(end.getTime() - 24 * 60 * 60 * 1000);\n\n        // Analytics Engine\uC5D0\uC11C \uC5D0\uB7EC\uB9CC \uD544\uD130\uB9C1\n        const result = await (c.env.ANALYTICS as any)?.query({\n            timeRange: [start, end],\n            filter: {\n                blob1: 'error'\n            },\n            aggregations: {\n                count: { count: {} },\n                topErrors: {\n                    topK: {\n                        field: 'blob4', // error message\n                        k: 10\n                    }\n                },\n                errorsByType: {\n                    topK: {\n                        field: 'blob5', // error type\n                        k: 10\n                    }\n                }\n            }\n        });\n\n        return successResponse(c, {\n            timeRange: { start, end },\n            errors: result || null\n        });\n    } catch (error) {\n        console.error('Error stats error:', error);\n        return errorResponse(c, 'Failed to query error statistics');\n    }\n});\n\n// AI \uC0AC\uC6A9\uB7C9 \uD1B5\uACC4\napp.get('/ai-usage', authMiddleware as any, async (c) => {\n    try {\n        const query = metricsQuerySchema.parse(c.req.query());\n\n        const end = query.end ? new Date(query.end) : new Date();\n        const start = query.start ? new Date(query.start) : new Date(end.getTime() - 24 * 60 * 60 * 1000);\n\n        // AI \uBA54\uD2B8\uB9AD \uC870\uD68C\n        const result = await (c.env.ANALYTICS as any)?.query({\n            timeRange: [start, end],\n            filter: {\n                blob5: { $ne: '' } // AI model\uC774 \uC788\uB294 \uC694\uCCAD\uB9CC\n            },\n            aggregations: {\n                totalTokens: { sum: { field: 'double3' } },\n                avgTokensPerRequest: { avg: { field: 'double3' } },\n                totalAiDuration: { sum: { field: 'double4' } },\n                avgAiDuration: { avg: { field: 'double4' } },\n                modelUsage: {\n                    topK: {\n                        field: 'blob5', // AI model\n                        k: 10\n                    }\n                }\n            }\n        });\n\n        return successResponse(c, {\n            timeRange: { start, end },\n            aiUsage: result || null\n        });\n    } catch (error) {\n        console.error('AI usage stats error:', error);\n        return errorResponse(c, 'Failed to query AI usage statistics');\n    }\n});\n\n// \uC131\uB2A5 \uBCF4\uACE0\uC11C\napp.get('/performance', authMiddleware as any, async (c) => {\n    try {\n        const query = metricsQuerySchema.parse(c.req.query());\n\n        const end = query.end ? new Date(query.end) : new Date();\n        const start = query.start ? new Date(query.start) : new Date(end.getTime() - 24 * 60 * 60 * 1000);\n\n        // \uC131\uB2A5 \uBA54\uD2B8\uB9AD \uC870\uD68C\n        const result = await (c.env.ANALYTICS as any)?.query({\n            timeRange: [start, end],\n            filter: {\n                blob1: 'api_request'\n            },\n            aggregations: {\n                p50Duration: { quantile: { field: 'double1', quantile: 0.5 } },\n                p75Duration: { quantile: { field: 'double1', quantile: 0.75 } },\n                p90Duration: { quantile: { field: 'double1', quantile: 0.9 } },\n                p95Duration: { quantile: { field: 'double1', quantile: 0.95 } },\n                p99Duration: { quantile: { field: 'double1', quantile: 0.99 } },\n                p50CpuTime: { quantile: { field: 'double2', quantile: 0.5 } },\n                p75CpuTime: { quantile: { field: 'double2', quantile: 0.75 } },\n                p90CpuTime: { quantile: { field: 'double2', quantile: 0.9 } },\n                p95CpuTime: { quantile: { field: 'double2', quantile: 0.95 } },\n                p99CpuTime: { quantile: { field: 'double2', quantile: 0.99 } }\n            },\n            groupBy: query.groupBy ? [`blob${getFieldIndex(query.groupBy)}`] : undefined\n        });\n\n        return successResponse(c, {\n            timeRange: { start, end },\n            groupBy: query.groupBy,\n            performance: result || null\n        });\n    } catch (error) {\n        console.error('Performance stats error:', error);\n        return errorResponse(c, 'Failed to query performance statistics');\n    }\n});\n\n// \uD544\uB4DC \uC778\uB371\uC2A4 \uB9E4\uD551 (analytics \uBBF8\uB4E4\uC6E8\uC5B4\uC640 \uB3D9\uC77C)\nfunction getFieldIndex(field: string): number {\n    const fieldMap: Record<string, number> = {\n        'path': 3,\n        'status': 1,\n        'country': 2\n    };\n    return fieldMap[field] || 1;\n}\n\n// \uC774\uBCA4\uD2B8 \uC218\uC9D1 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/events', async (c) => {\n    try {\n        const { events } = await c.req.json();\n\n        if (!Array.isArray(events)) {\n            return errorResponse(c, 'Events must be an array', 'INVALID_INPUT', null, 400);\n        }\n\n        // Analytics Engine\uC5D0 \uC774\uBCA4\uD2B8 \uC804\uC1A1\n        for (const event of events) {\n            await c.env.ANALYTICS?.writeDataPoint({\n                blobs: [\n                    'client_event',\n                    event.event,\n                    event.userId,\n                    event.sessionId,\n                    event.properties?.page || ''\n                ],\n                doubles: [\n                    event.timestamp,\n                    event.properties?.pageLoadTime || 0,\n                    event.properties?.duration || 0,\n                    0\n                ],\n                indexes: [\n                    event.properties?.sessionType || '',\n                    event.properties?.feature || '',\n                    event.properties?.variant || ''\n                ]\n            });\n        }\n\n        return successResponse(c, {\n            message: 'Events recorded',\n            count: events.length\n        });\n    } catch (error) {\n        console.error('Events recording error:', error);\n        return errorResponse(c, 'Failed to record events');\n    }\n});\n\nexport { app as analyticsRoutes };\nexport default app;\n", "import { Hono } from 'hono';\nimport type { AppBindings as Env } from '../index';\nimport { Variables } from '../types';\nimport { evaluateLanguageLevel, generateLevelFeedback, generateChatCompletion, sanitizeJsonResponse } from '../services/ai';\nimport { successResponse, createdResponse } from '../utils/response';\nimport { validationError } from '../middleware/error-handler';\nimport { internalAuth } from '../middleware/auth';\nimport { log } from '../utils/logger';\nimport { selectWhisperModel, validateAudioSize, WHISPER_FILE_LIMITS } from '../constants/whisper';\nimport { getActiveRooms, upsertActiveRoom } from '../utils/activeRooms';\n\nexport const internalRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\n// \uBAA8\uB4E0 \uB0B4\uBD80 API\uB294 Internal Secret \uC778\uC99D \uD544\uC694\ninternalRoutes.use('*', internalAuth());\n\n// \uB808\uAC70\uC2DC \uBC31\uC5D4\uB4DC \uD638\uD658 \uC74C\uC131 \uC804\uC0AC \uC5D4\uB4DC\uD3EC\uC778\uD2B8\ninternalRoutes.post('/transcribe', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { audio_url, audio_base64, language, user_context } = body;\n\n    let audioBuffer: ArrayBuffer;\n\n    if (audio_url) {\n      // URL\uC5D0\uC11C \uC624\uB514\uC624 \uB2E4\uC6B4\uB85C\uB4DC\n      const response = await fetch(audio_url);\n      if (!response.ok) {\n        return c.json({ error: 'Failed to fetch audio from URL' }, 400);\n      }\n      audioBuffer = await response.arrayBuffer();\n    } else if (audio_base64) {\n      // Base64 \uB514\uCF54\uB529\n      const binaryString = atob(audio_base64);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      audioBuffer = bytes.buffer;\n    } else {\n      return c.json({ error: 'Either audio_url or audio_base64 must be provided' }, 400);\n    }\n\n    // \uC624\uB514\uC624 \uD06C\uAE30 \uAC80\uC99D\n    const sizeValidation = validateAudioSize(audioBuffer.byteLength);\n    if (!sizeValidation.isValid) {\n      return c.json({\n        error: 'Audio file too large',\n        message: sizeValidation.message,\n        details: {\n          currentSize: audioBuffer.byteLength,\n          maxSize: WHISPER_FILE_LIMITS.MAX_SIZE,\n          recommendedSize: WHISPER_FILE_LIMITS.RECOMMENDED_SIZE\n        }\n      }, 400);\n    }\n\n    // \uD06C\uAE30 \uACBD\uACE0 \uB85C\uAE45\n    if (!sizeValidation.isOptimal) {\n      const warningMessage = sizeValidation.message || 'Audio file size exceeds recommended threshold';\n      log.warn(warningMessage, undefined, {\n        component: 'INTERNAL_API',\n        audioSize: audioBuffer.byteLength\n      });\n    }\n\n    // Whisper API \uD638\uCD9C\n    let result;\n    try {\n      // 2025\uB144 Cloudflare Whisper API \uD615\uC2DD:\n      // ArrayBuffer -> Uint8Array -> spread into array\n      const audioArray = [...new Uint8Array(audioBuffer)];\n\n      // \uC5B8\uC5B4\uBCC4 \uBAA8\uB378 \uC120\uD0DD\n      const modelSelection = selectWhisperModel(language);\n\n      log.info('Processing audio for transcription', undefined, {\n        component: 'INTERNAL_API',\n        audioSize: audioBuffer.byteLength,\n        arrayLength: audioArray.length,\n        language: language || 'auto',\n        model: modelSelection.model,\n        languageName: modelSelection.languageName\n      });\n\n      type WhisperResponseShape = {\n        text?: string;\n        language?: string;\n        vtt?: unknown;\n        words?: any[];\n      };\n\n      const whisperResponse = await c.env.AI.run(modelSelection.model as any, {\n        audio: audioArray\n      }) as WhisperResponseShape;\n\n      result = {\n        text: whisperResponse?.text || '',\n        language: whisperResponse?.language || language || 'unknown',\n        vtt: whisperResponse?.vtt,\n        words: whisperResponse?.words\n      };\n\n      log.info('Transcription successful', undefined, {\n        component: 'INTERNAL_API',\n        textLength: result.text.length,\n        detectedLanguage: result.language\n      });\n\n    } catch (whisperError) {\n      log.error('Whisper processing error', whisperError instanceof Error ? whisperError : new Error(String(whisperError)), undefined, {\n        component: 'INTERNAL_API',\n        audioSize: audioBuffer.byteLength,\n        error: whisperError instanceof Error ? whisperError.message : 'Unknown error'\n      });\n\n      // \uC5D0\uB7EC \uBC1C\uC0DD \uC2DC \uC0C1\uC138 \uC815\uBCF4 \uBC18\uD658\n      return c.json({\n        error: 'Transcription failed',\n        message: whisperError instanceof Error ? whisperError.message : 'Unknown error',\n        details: {\n          audioSize: audioBuffer.byteLength,\n          maxAllowedSize: WHISPER_FILE_LIMITS.MAX_SIZE\n        }\n      }, 500);\n    }\n\n    return successResponse(c, {\n      transcript: result.text || '',\n      language: result.language,\n      confidence: 1.0, // Whisper doesn't provide confidence scores\n      word_count: result.text ? result.text.split(/\\s+/).filter(word => word.length > 0).length : 0,\n      processing_time: 0, // Would need to measure actual processing time\n      vtt: result.vtt,\n      words: result.words,\n      user_context: user_context || null\n    });\n\n  } catch (error) {\n    log.error('Internal transcription error', error as Error, undefined, { component: 'INTERNAL_API' });\n    return c.json({\n      error: 'Transcription failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n});\n\n// \uB808\uAC70\uC2DC \uBC31\uC5D4\uB4DC \uD638\uD658 \uB808\uBCA8 \uD14C\uC2A4\uD2B8 \uD3C9\uAC00 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\ninternalRoutes.post('/level-test', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { transcript, language, questions, user_context } = body;\n\n    if (!transcript) {\n      return c.json({ error: 'Transcript is required' }, 400);\n    }\n\n    // AI\uB97C \uC0AC\uC6A9\uD574 \uB808\uBCA8 \uD3C9\uAC00\n    const evaluation = await evaluateLanguageLevel(\n      c.env.AI,\n      transcript,\n      questions || \"Please introduce yourself and talk about your interests.\"\n    );\n\n    return successResponse(c, {\n      evaluation: evaluation,\n      analyzed_text: transcript,\n      language: language || 'en',\n      user_context: user_context || null,\n      processed_at: new Date().toISOString()\n    });\n\n  } catch (error) {\n    log.error('Internal level test error', error as Error, { component: 'INTERNAL_API' });\n    return c.json({\n      error: 'Level test evaluation failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n});\n\n// WebRTC \uB8F8 \uBA54\uD0C0\uB370\uC774\uD130 \uB3D9\uAE30\uD654\ninternalRoutes.patch('/webrtc/rooms/:roomId/metadata', async (c) => {\n  const roomId = c.req.param('roomId');\n\n  if (!roomId) {\n    return c.json({ error: 'roomId is required' }, 400);\n  }\n\n  try {\n    const metadata = await c.req.json() as Record<string, unknown>;\n\n    if (!metadata || typeof metadata !== 'object') {\n      return c.json({ error: 'metadata object is required' }, 400);\n    }\n\n    const id = c.env.ROOM.idFromName(roomId);\n    const room = c.env.ROOM.get(id);\n\n    const response = await room.fetch(new Request('http://room/metadata', {\n      method: 'PATCH',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(metadata)\n    }));\n\n    if (!response.ok) {\n      const errorBody = (await response.json().catch(() => ({}))) as { message?: string };\n      return c.json({\n        error: 'Failed to update metadata',\n        details: errorBody?.message || null\n      }, response.status as any);\n    }\n\n    // Update cached summary\n    const cacheKey = `room:${roomId}`;\n    const cached = await c.env.CACHE.get(cacheKey);\n    if (cached) {\n      try {\n        const cachedData = JSON.parse(cached);\n        const updated = {\n          ...cachedData,\n          metadata: {\n            ...(cachedData.metadata || {}),\n            ...metadata\n          }\n        };\n        await c.env.CACHE.put(cacheKey, JSON.stringify(updated), { expirationTtl: 3600 });\n      } catch (cacheError) {\n        log.warn('Failed to update cached room metadata', undefined, {\n          component: 'INTERNAL_API',\n          roomId,\n          error: cacheError instanceof Error ? cacheError.message : String(cacheError)\n        });\n      }\n    }\n\n    // Ensure active room cache is refreshed\n    const activeRooms = await getActiveRooms(c.env.CACHE);\n    const index = activeRooms.findIndex(room => room.roomId === roomId);\n    if (index >= 0) {\n      const updatedRoom = {\n        ...activeRooms[index],\n        metadata: {\n          ...(activeRooms[index].metadata || {}),\n          ...metadata\n        },\n        updatedAt: new Date().toISOString()\n      };\n      await upsertActiveRoom(c.env.CACHE, updatedRoom);\n    }\n\n    const result = await response.json().catch(() => ({ success: true }));\n    return successResponse(c, result);\n  } catch (error) {\n    log.error('WebRTC metadata sync error', error as Error, undefined, { component: 'INTERNAL_API', roomId });\n    return c.json({\n      error: 'Failed to sync metadata',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n});\n\n// \uB808\uAC70\uC2DC \uBC31\uC5D4\uB4DC \uD638\uD658 \uB300\uD654 \uD53C\uB4DC\uBC31 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\ninternalRoutes.post('/conversation-feedback', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { transcript, context, user_level, user_context } = body;\n\n    if (!transcript) {\n      return c.json({ error: 'Transcript is required' }, 400);\n    }\n\n    // \uB2E8\uC77C \uBC1C\uD654\uB97C \uB300\uD654 \uD615\uC2DD\uC73C\uB85C \uBCC0\uD658\n    const conversation = [\n      {\n        speaker: 'user',\n        text: transcript\n      }\n    ];\n\n    // LLM\uC73C\uB85C \uD53C\uB4DC\uBC31 \uC0DD\uC131\n    const prompt = `Analyze this English conversation and provide detailed feedback:\n\nContext: ${context || 'General conversation'}\nUser Level: ${user_level || 'Unknown'}\n\nConversation:\nUser: ${transcript}\n\nProvide comprehensive feedback in JSON format:\n{\n  \"overallAssessment\": \"general assessment of the conversation\",\n  \"strengths\": [\"strength 1\", \"strength 2\"],\n  \"weaknesses\": [\"weakness 1\", \"weakness 2\"],\n  \"corrections\": [\n    {\n      \"original\": \"incorrect phrase\",\n      \"correction\": \"corrected phrase\",\n      \"explanation\": \"why this correction is needed\"\n    }\n  ],\n  \"suggestions\": [\"suggestion 1\", \"suggestion 2\"],\n  \"encouragement\": \"positive feedback message\",\n  \"fluencyScore\": 75\n}`;\n\n    const aiResponse = await generateChatCompletion(c.env.AI, [\n      {\n        role: 'system',\n        content: 'You are an experienced English conversation coach. Always respond with valid JSON.'\n      },\n      { role: 'user', content: prompt }\n    ], {\n      temperature: 0.4,\n      max_tokens: 1500,\n      response_format: { type: 'json_object' }\n    });\n\n    let feedback;\n    try {\n      const sanitized = sanitizeJsonResponse(aiResponse.text);\n      feedback = JSON.parse(sanitized);\n    } catch (parseError) {\n      log.warn('Conversation feedback parse error', undefined, {\n        component: 'INTERNAL_API',\n        rawPreview: aiResponse.text?.slice(0, 500),\n        sanitizedPreview: sanitizeJsonResponse(aiResponse.text)?.slice(0, 500),\n        errorMessage: parseError instanceof Error ? parseError.message : String(parseError),\n        model: aiResponse.model\n      });\n      // JSON \uD30C\uC2F1 \uC2E4\uD328 \uC2DC \uAE30\uBCF8 \uAD6C\uC870 \uBC18\uD658\n      feedback = {\n        overallAssessment: \"The conversation shows your effort to communicate in English.\",\n        strengths: [\"Shows willingness to practice English\"],\n        weaknesses: [\"Could benefit from more practice\"],\n        corrections: [],\n        suggestions: [\"Continue practicing regularly\", \"Focus on clear pronunciation\"],\n        encouragement: \"Keep practicing! You're making progress.\",\n        fluencyScore: 70\n      };\n    }\n\n    return successResponse(c, {\n      feedback: feedback,\n      analyzed_text: transcript,\n      context: context || 'general',\n      user_level: user_level || 'unknown',\n      user_context: user_context || null,\n      processed_at: new Date().toISOString()\n    });\n\n  } catch (error) {\n    log.error('Internal conversation feedback error', error as Error, undefined, { component: 'INTERNAL_API' });\n    return c.json({\n      error: 'Conversation feedback generation failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n});\n\n// \uB808\uAC70\uC2DC \uBC31\uC5D4\uB4DC \uD638\uD658 \uD559\uC2B5 \uCD94\uCC9C \uC5D4\uB4DC\uD3EC\uC778\uD2B8 (AI \uC5C6\uC774 \uC815\uC801)\ninternalRoutes.post('/learning-recommendations', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { user_level, weaknesses, strengths, user_context } = body;\n\n    // \uB808\uBCA8\uBCC4 \uCD94\uCC9C \uCF58\uD150\uCE20 \uC0DD\uC131\n    const recommendations = generateStaticRecommendations(user_level, weaknesses);\n\n    return successResponse(c, {\n      recommendations: recommendations,\n      user_level: user_level || 'B1',\n      based_on_weaknesses: weaknesses || [],\n      based_on_strengths: strengths || [],\n      user_context: user_context || null,\n      generated_at: new Date().toISOString()\n    });\n\n  } catch (error) {\n    log.error('Internal learning recommendations error', error as Error, undefined, { component: 'INTERNAL_API' });\n    return c.json({\n      error: 'Learning recommendations generation failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n});\n\n// \uC815\uC801 \uD559\uC2B5 \uCD94\uCC9C \uC0DD\uC131 \uD568\uC218\nfunction generateStaticRecommendations(userLevel: string, weaknesses: string[]) {\n  const levelContent: Record<string, any> = {\n    'A1': {\n      contents: [\n        'Basic vocabulary flashcards (colors, numbers, family)',\n        'Simple conversation dialogues',\n        'English learning apps for beginners',\n        'Children\\'s English books'\n      ],\n      exercises: [\n        'Daily greeting practice',\n        'Basic sentence construction',\n        'Pronunciation drills for common words',\n        'Simple Q&A practice'\n      ],\n      timePerDay: '15-20 minutes'\n    },\n    'A2': {\n      contents: [\n        'Elementary reading passages',\n        'Basic grammar workbooks',\n        'English learning videos for beginners',\n        'Simple news articles'\n      ],\n      exercises: [\n        'Present and past tense practice',\n        'Describing daily activities',\n        'Basic conversation scenarios',\n        'Listening to slow English podcasts'\n      ],\n      timePerDay: '20-30 minutes'\n    },\n    'B1': {\n      contents: [\n        'Intermediate reading materials',\n        'English podcasts for learners',\n        'Grammar reference books',\n        'English news articles'\n      ],\n      exercises: [\n        'Conversation role-play scenarios',\n        'Grammar pattern drills',\n        'Writing short paragraphs',\n        'Listening comprehension practice'\n      ],\n      timePerDay: '30-45 minutes'\n    },\n    'B2': {\n      contents: [\n        'Advanced reading materials',\n        'TED talks and presentations',\n        'English novels and literature',\n        'Professional English materials'\n      ],\n      exercises: [\n        'Debate and discussion practice',\n        'Academic writing exercises',\n        'Business English conversations',\n        'Complex listening materials'\n      ],\n      timePerDay: '45-60 minutes'\n    },\n    'C1': {\n      contents: [\n        'Advanced literature excerpts',\n        'Native speaker podcasts',\n        'Academic papers and articles',\n        'Professional development materials'\n      ],\n      exercises: [\n        'Advanced debate topics',\n        'Professional presentation practice',\n        'Academic writing and research',\n        'Nuanced language practice'\n      ],\n      timePerDay: '60+ minutes'\n    },\n    'C2': {\n      contents: [\n        'Native-level literature',\n        'Specialized academic content',\n        'Professional publications',\n        'Cultural and historical materials'\n      ],\n      exercises: [\n        'Advanced writing and editing',\n        'Teaching and mentoring others',\n        'Professional presentations',\n        'Creative language use'\n      ],\n      timePerDay: '60+ minutes'\n    }\n  };\n\n  const level = userLevel.toUpperCase();\n  const baseRecommendations = levelContent[level] || levelContent['B1'];\n\n  // \uC57D\uC810\uC5D0 \uB530\uB978 \uCD94\uAC00 \uCD94\uCC9C\n  const weaknessRecommendations: Record<string, string[]> = {\n    'grammar': [\n      'Focus on grammar exercises and rules',\n      'Use grammar checking tools',\n      'Practice sentence construction'\n    ],\n    'vocabulary': [\n      'Expand vocabulary with themed word lists',\n      'Use spaced repetition flashcards',\n      'Read extensively in your interest areas'\n    ],\n    'pronunciation': [\n      'Practice with pronunciation apps',\n      'Record yourself speaking',\n      'Listen to native speakers carefully'\n    ],\n    'fluency': [\n      'Practice speaking regularly',\n      'Join conversation groups',\n      'Think in English daily'\n    ]\n  };\n\n  let additionalSuggestions: string[] = [];\n  weaknesses.forEach(weakness => {\n    const suggestions = weaknessRecommendations[weakness.toLowerCase()];\n    if (suggestions) {\n      additionalSuggestions = additionalSuggestions.concat(suggestions);\n    }\n  });\n\n  return {\n    recommendedContents: baseRecommendations.contents,\n    practiceExercises: baseRecommendations.exercises,\n    estimatedTimePerDay: baseRecommendations.timePerDay,\n    focusAreas: weaknesses,\n    additionalSuggestions: additionalSuggestions,\n    nextLevelGoals: getNextLevelGoals(level)\n  };\n}\n\nfunction getNextLevelGoals(currentLevel: string): string[] {\n  const goals: Record<string, string[]> = {\n    'A1': ['Master basic grammar patterns', 'Build core vocabulary (500-1000 words)', 'Have simple conversations'],\n    'A2': ['Use past and future tenses confidently', 'Describe experiences and events', 'Understand simple texts'],\n    'B1': ['Express opinions and preferences', 'Handle routine tasks requiring English', 'Understand main ideas of complex texts'],\n    'B2': ['Discuss abstract topics', 'Write clear, detailed text', 'Interact fluently with native speakers'],\n    'C1': ['Use language flexibly for social and professional purposes', 'Write well-structured, detailed text', 'Understand virtually everything'],\n    'C2': ['Express yourself spontaneously and precisely', 'Understand everything with ease', 'Summarize and argue effectively']\n  };\n\n  return goals[currentLevel] || goals['B1'];\n}\n\nexport default internalRoutes;\n", "/**\n * Whisper \uBAA8\uB378 \uAD00\uB828 \uC0C1\uC218 \uC815\uC758\n */\n\n// Whisper \uBAA8\uB378 \uC774\uB984\nexport const WHISPER_MODELS = {\n  ENGLISH_ONLY: '@cf/openai/whisper-tiny-en',  // \uC601\uC5B4 \uC804\uC6A9 (\uBE60\uB984)\n  MULTILINGUAL: '@cf/openai/whisper'           // \uB2E4\uAD6D\uC5B4 \uC9C0\uC6D0\n} as const;\n\n// \uC601\uC5B4 \uC804\uC6A9 \uBAA8\uB378\uC744 \uC0AC\uC6A9\uD560 \uC5B8\uC5B4 \uCF54\uB4DC\nexport const ENGLISH_LANGUAGE_CODES = [\n  'en',      // \uAE30\uBCF8 \uC601\uC5B4\n  'en-US',   // \uBBF8\uAD6D \uC601\uC5B4\n  'en-GB',   // \uC601\uAD6D \uC601\uC5B4\n  'en-AU',   // \uD638\uC8FC \uC601\uC5B4\n  'en-CA',   // \uCE90\uB098\uB2E4 \uC601\uC5B4\n  'en-NZ',   // \uB274\uC9C8\uB79C\uB4DC \uC601\uC5B4\n  'en-IE',   // \uC544\uC77C\uB79C\uB4DC \uC601\uC5B4\n  'en-ZA'    // \uB0A8\uC544\uACF5 \uC601\uC5B4\n] as const;\n\n// \uC8FC\uC694 \uC9C0\uC6D0 \uC5B8\uC5B4 (\uB514\uBC84\uAE45 \uBC0F \uB85C\uAE45\uC6A9)\nexport const MAJOR_SUPPORTED_LANGUAGES = {\n  // \uC544\uC2DC\uC544 \uC5B8\uC5B4\n  ko: '\uD55C\uAD6D\uC5B4',\n  ja: '\uC77C\uBCF8\uC5B4',\n  zh: '\uC911\uAD6D\uC5B4',\n  vi: '\uBCA0\uD2B8\uB0A8\uC5B4',\n  th: '\uD0DC\uAD6D\uC5B4',\n  id: '\uC778\uB3C4\uB124\uC2DC\uC544\uC5B4',\n\n  // \uC720\uB7FD \uC5B8\uC5B4\n  es: '\uC2A4\uD398\uC778\uC5B4',\n  fr: '\uD504\uB791\uC2A4\uC5B4',\n  de: '\uB3C5\uC77C\uC5B4',\n  it: '\uC774\uD0C8\uB9AC\uC544\uC5B4',\n  pt: '\uD3EC\uB974\uD22C\uAC08\uC5B4',\n  ru: '\uB7EC\uC2DC\uC544\uC5B4',\n  nl: '\uB124\uB35C\uB780\uB4DC\uC5B4',\n  pl: '\uD3F4\uB780\uB4DC\uC5B4',\n  sv: '\uC2A4\uC6E8\uB374\uC5B4',\n\n  // \uC911\uB3D9/\uC544\uD504\uB9AC\uCE74/\uB0A8\uC544\uC2DC\uC544\n  ar: '\uC544\uB78D\uC5B4',\n  tr: '\uD130\uD0A4\uC5B4',\n  hi: '\uD78C\uB514\uC5B4',\n  he: '\uD788\uBE0C\uB9AC\uC5B4',\n  fa: '\uD398\uB974\uC2DC\uC544\uC5B4'\n} as const;\n\n// \uD30C\uC77C \uD06C\uAE30 \uC81C\uD55C\nexport const WHISPER_FILE_LIMITS = {\n  MAX_SIZE: 25 * 1024 * 1024,        // 25MB (\uC808\uB300 \uCD5C\uB300)\n  RECOMMENDED_SIZE: 4 * 1024 * 1024,  // 4MB (\uAD8C\uC7A5)\n  OPTIMAL_DURATION: 30                // 30\uCD08 (\uCD5C\uC801)\n} as const;\n\n/**\n * \uC5B8\uC5B4 \uCF54\uB4DC\uC5D0 \uB530\uB978 \uC801\uC808\uD55C Whisper \uBAA8\uB378 \uC120\uD0DD\n */\nexport function selectWhisperModel(language?: string): {\n  model: string;\n  isEnglishOnly: boolean;\n  languageName?: string;\n} {\n  const lang = language || 'auto';\n\n  // \uC601\uC5B4 \uCCB4\uD06C\n  if (ENGLISH_LANGUAGE_CODES.includes(lang as any)) {\n    return {\n      model: WHISPER_MODELS.ENGLISH_ONLY,\n      isEnglishOnly: true,\n      languageName: 'English'\n    };\n  }\n\n  // \uB2E4\uAD6D\uC5B4 \uBAA8\uB378 \uC0AC\uC6A9\n  const languageName = MAJOR_SUPPORTED_LANGUAGES[lang as keyof typeof MAJOR_SUPPORTED_LANGUAGES];\n\n  return {\n    model: WHISPER_MODELS.MULTILINGUAL,\n    isEnglishOnly: false,\n    languageName: languageName || `Language: ${lang}`\n  };\n}\n\n/**\n * \uC624\uB514\uC624 \uD30C\uC77C \uD06C\uAE30 \uAC80\uC99D\n */\nexport function validateAudioSize(sizeInBytes: number): {\n  isValid: boolean;\n  isOptimal: boolean;\n  message?: string;\n} {\n  if (sizeInBytes > WHISPER_FILE_LIMITS.MAX_SIZE) {\n    return {\n      isValid: false,\n      isOptimal: false,\n      message: `File too large: ${(sizeInBytes / 1024 / 1024).toFixed(2)}MB (max: 25MB)`\n    };\n  }\n\n  if (sizeInBytes > WHISPER_FILE_LIMITS.RECOMMENDED_SIZE) {\n    return {\n      isValid: true,\n      isOptimal: false,\n      message: `File is large: ${(sizeInBytes / 1024 / 1024).toFixed(2)}MB (recommended: <4MB)`\n    };\n  }\n\n  return {\n    isValid: true,\n    isOptimal: true\n  };\n}", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport { auth } from '../middleware/auth';\nimport { getUserProfile } from '../services/user';\nimport {\n  generateLoginUrl,\n  handleOAuthCallback,\n  refreshTokens,\n  logoutUser\n} from '../services/auth';\n\nconst authRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\nconst wrapAuthError = (error: unknown): AppError => {\n  if (error instanceof AppError) {\n    return error;\n  }\n  const message = error instanceof Error ? error.message : 'Authentication failure';\n  return new AppError(message, 500, 'AUTH_OPERATION_FAILED');\n};\n\n// OAuth \uB85C\uADF8\uC778 URL \uC0DD\uC131 - /auth/login/:provider\uC640 /login/:provider \uBAA8\uB450 \uC9C0\uC6D0\nauthRoutes.get('/login/:provider', async (c) => {\n  const provider = c.req.param('provider');\n  const target = c.req.query('target') || c.req.query('redirect_uri') || undefined;\n\n  try {\n    const result = await generateLoginUrl(c.env, provider, target);\n    // \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C \uC9C1\uC811 \uC811\uADFC\uD55C \uACBD\uC6B0 OAuth URL\uB85C \uB9AC\uB2E4\uC774\uB809\uD2B8\n    const acceptHeader = c.req.header('Accept') || '';\n    if (!acceptHeader.includes('application/json') && result.url) {\n      return c.redirect(result.url);\n    }\n    return successResponse(c, result);\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\n// \uC9C1\uC811 OAuth \uACBD\uB85C \uC9C0\uC6D0 (/naver, /google \uB4F1) - \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C \uC9C1\uC811 \uC811\uADFC\uC2DC \uB9AC\uB2E4\uC774\uB809\uD2B8\nauthRoutes.get('/naver', async (c) => {\n  const target = c.req.query('target') || undefined;\n  try {\n    const result = await generateLoginUrl(c.env, 'naver', target);\n    // \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C \uC9C1\uC811 \uC811\uADFC\uD55C \uACBD\uC6B0 OAuth URL\uB85C \uB9AC\uB2E4\uC774\uB809\uD2B8\n    if (result.url) {\n      return c.redirect(result.url);\n    }\n    return successResponse(c, result);\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\nauthRoutes.get('/google', async (c) => {\n  const target = c.req.query('target') || undefined;\n  try {\n    const result = await generateLoginUrl(c.env, 'google', target);\n    // \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C \uC9C1\uC811 \uC811\uADFC\uD55C \uACBD\uC6B0 OAuth URL\uB85C \uB9AC\uB2E4\uC774\uB809\uD2B8\n    if (result.url) {\n      return c.redirect(result.url);\n    }\n    return successResponse(c, result);\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\n// OAuth \uCF5C\uBC31 \uCC98\uB9AC - /auth/callback/:provider\nauthRoutes.get('/callback/:provider', async (c) => {\n  const provider = c.req.param('provider');\n  const code = c.req.query('code');\n  const state = c.req.query('state') || undefined;\n\n  if (!code) {\n    throw new AppError('Missing OAuth code', 400, 'INVALID_OAUTH_CALLBACK');\n  }\n\n  try {\n    const result = await handleOAuthCallback(\n      c.env,\n      provider,\n      { code, state },\n      {\n        userAgent: c.req.header('User-Agent') || undefined,\n        ipAddress:\n          c.req.header('CF-Connecting-IP') ||\n          c.req.header('X-Forwarded-For') ||\n          c.req.header('X-Real-IP') ||\n          undefined\n      }\n    );\n    const acceptsJson = (c.req.header('Accept') || '').includes('application/json');\n    if (!acceptsJson) {\n      const redirectTarget = result.callbackUrl || result.redirectUri;\n      if (!redirectTarget) {\n        return successResponse(c, result);\n      }\n      const redirectUrl = new URL(redirectTarget);\n      redirectUrl.searchParams.set('accessToken', result.accessToken);\n      redirectUrl.searchParams.set('refreshToken', result.refreshToken);\n      redirectUrl.searchParams.set('provider', provider);\n      if (state) {\n        redirectUrl.searchParams.set('state', state);\n      }\n      if (result.redirectUri && result.redirectUri !== redirectTarget) {\n        redirectUrl.searchParams.set('redirect', result.redirectUri);\n      }\n      return c.redirect(redirectUrl.toString());\n    }\n    return successResponse(c, result);\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\nauthRoutes.post('/refresh', async (c) => {\n  const authorization = c.req.header('Authorization');\n  if (!authorization) {\n    throw new AppError('Authorization header required', 400, 'MISSING_AUTH_HEADER');\n  }\n\n  const match = authorization.match(/^Bearer\\s+(.+)$/i);\n  if (!match) {\n    throw new AppError('Invalid Authorization format', 400, 'INVALID_AUTH_HEADER');\n  }\n\n  const refreshToken = match[1];\n\n  try {\n    const result = await refreshTokens(\n      c.env,\n      refreshToken,\n      {\n        userAgent: c.req.header('User-Agent') || undefined,\n        ipAddress:\n          c.req.header('CF-Connecting-IP') ||\n          c.req.header('X-Forwarded-For') ||\n          c.req.header('X-Real-IP') ||\n          undefined\n      }\n    );\n    return successResponse(c, result);\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\nauthRoutes.post('/logout', async (c) => {\n  const authorization = c.req.header('Authorization');\n  if (!authorization) {\n    throw new AppError('Authorization header required', 400, 'MISSING_AUTH_HEADER');\n  }\n\n  const match = authorization.match(/^Bearer\\s+(.+)$/i);\n  if (!match) {\n    throw new AppError('Invalid Authorization format', 400, 'INVALID_AUTH_HEADER');\n  }\n\n  const accessToken = match[1];\n  const refreshToken = c.req.header('X-Refresh-Token') || undefined;\n\n  try {\n    await logoutUser(c.env, accessToken, refreshToken);\n    return successResponse(c, { success: true });\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\nauthRoutes.get('/me', auth(), async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n\n    return successResponse(c, {\n      id: profile.id,\n      email: profile.email,\n      name: profile.name ?? profile.englishName,\n      englishName: profile.englishName,\n      onboardingCompleted: profile.onboardingCompleted,\n    });\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\nauthRoutes.get('/verify', auth(), async (c) => {\n  const user = c.get('user');\n  return successResponse(c, {\n    valid: true,\n    user: user ?? null\n  });\n});\n\nexport default authRoutes;\n", "import type { Env } from '../index';\nimport type { UserProfile, UserSettings } from '../types';\nimport { query, queryFirst, execute, transaction } from '../utils/db';\nimport { saveToR2, deleteFromR2 } from './storage';\nimport { sanitizeFileName } from '../utils/security';\nimport { AppError } from '../utils/errors';\n\ntype LocationSummary = { id: number; country: string; city?: string; timeZone?: string };\n\ninterface UserProfileUpdatePayload {\n  name?: string;\n  englishName?: string;\n  selfBio?: string;\n  gender?: string;\n  birthday?: string;\n  birthyear?: string;\n  locationId?: number | null;\n  nativeLanguageId?: number | null;\n  communicationMethod?: string;\n  dailyMinute?: string;\n  partnerGender?: string;\n  learningExpectation?: string;\n  onboardingCompleted?: boolean;\n  profileImage?: string | null;\n}\n\ninterface DbUserFullRow {\n  user_id: string;\n  email: string | null;\n  name: string | null;\n  english_name: string | null;\n  birthday: string | null;\n  birthyear: string | null;\n  gender: string | null;\n  profile_image: string | null;\n  self_bio: string | null;\n  location_id: number | null;\n  native_lang_id: number | null;\n  communication_method: string | null;\n  daily_minute: string | null;\n  partner_gender: string | null;\n  learning_expectation: string | null;\n  is_onboarding_completed: number;\n  created_at: string;\n  updated_at: string;\n  location_country: string | null;\n  location_city: string | null;\n  location_time_zone: string | null;\n  native_language_name: string | null;\n  native_language_code: string | null;\n}\n\nfunction mapRowToProfile(row: DbUserFullRow): UserProfile {\n  return {\n    id: row.user_id,\n    email: row.email ?? undefined,\n    name: row.name ?? undefined,\n    englishName: row.english_name ?? undefined,\n    birthday: row.birthday ?? undefined,\n    birthyear: row.birthyear ?? undefined,\n    gender: row.gender ?? undefined,\n    profileImage: row.profile_image ?? undefined,\n    selfBio: row.self_bio ?? undefined,\n    location: row.location_id\n      ? {\n          id: row.location_id,\n          country: row.location_country ?? '',\n          city: row.location_city ?? undefined,\n          timeZone: row.location_time_zone ?? undefined\n        }\n      : undefined,\n    nativeLanguage: row.native_lang_id\n      ? {\n          id: row.native_lang_id,\n          name: row.native_language_name ?? '',\n          code: row.native_language_code ?? ''\n        }\n      : undefined,\n    onboardingCompleted: row.is_onboarding_completed === 1,\n    communicationMethod: row.communication_method ?? undefined,\n    dailyMinute: row.daily_minute ?? undefined,\n    partnerGender: row.partner_gender ?? undefined,\n    learningExpectation: row.learning_expectation ?? undefined,\n    createdAt: row.created_at,\n    updatedAt: row.updated_at\n  };\n}\n\nexport async function getUserProfile(env: Env, userId: string): Promise<UserProfile | null> {\n  const row = await queryFirst<DbUserFullRow>(\n    env.DB,\n    `SELECT \n        u.user_id,\n        u.email,\n        u.name,\n        u.english_name,\n        u.birthday,\n        u.birthyear,\n        u.gender,\n        u.profile_image,\n        u.self_bio,\n        u.location_id,\n        u.native_lang_id,\n        u.communication_method,\n        u.daily_minute,\n        u.partner_gender,\n        u.learning_expectation,\n        u.is_onboarding_completed,\n        u.created_at,\n        u.updated_at,\n        l.country AS location_country,\n        l.city AS location_city,\n        l.time_zone AS location_time_zone,\n        lang.language_name AS native_language_name,\n        lang.language_code AS native_language_code\n      FROM users u\n      LEFT JOIN locations l ON u.location_id = l.location_id\n      LEFT JOIN languages lang ON u.native_lang_id = lang.language_id\n      WHERE u.user_id = ?\n      LIMIT 1`,\n    [userId]\n  );\n\n  if (!row) {\n    return null;\n  }\n\n  return mapRowToProfile(row);\n}\n\nexport async function updateUserProfile(\n  env: Env,\n  userId: string,\n  payload: UserProfileUpdatePayload\n): Promise<UserProfile> {\n  const setters: string[] = [];\n  const params: (string | number | null)[] = [];\n\n  const map: Record<keyof UserProfileUpdatePayload, string> = {\n    name: 'name',\n    englishName: 'english_name',\n    selfBio: 'self_bio',\n    gender: 'gender',\n    birthday: 'birthday',\n    birthyear: 'birthyear',\n    locationId: 'location_id',\n    nativeLanguageId: 'native_lang_id',\n    communicationMethod: 'communication_method',\n    dailyMinute: 'daily_minute',\n    partnerGender: 'partner_gender',\n    learningExpectation: 'learning_expectation',\n    onboardingCompleted: 'is_onboarding_completed',\n    profileImage: 'profile_image'\n  };\n\n  for (const [key, value] of Object.entries(payload) as [keyof UserProfileUpdatePayload, any][]) {\n    if (value === undefined) continue;\n\n    if (key === 'onboardingCompleted') {\n      setters.push(`${map[key]} = ?`);\n      params.push(value ? 1 : 0);\n    } else {\n      setters.push(`${map[key]} = ?`);\n      params.push(value === null ? null : value);\n    }\n  }\n\n  if (setters.length > 0) {\n    setters.push('updated_at = ?');\n    params.push(new Date().toISOString());\n    params.push(userId);\n    await execute(env.DB, `UPDATE users SET ${setters.join(', ')} WHERE user_id = ?`, params);\n  }\n\n  const profile = await getUserProfile(env, userId);\n  if (!profile) {\n    throw new Error('User not found after update');\n  }\n  return profile;\n}\n\nexport async function getUserSettings(env: Env, userId: string): Promise<UserSettings> {\n  const rows = await query<{ setting_key: string; setting_value: string | null }>(\n    env.DB,\n    'SELECT setting_key, setting_value FROM user_settings WHERE user_id = ? ORDER BY setting_key',\n    [userId]\n  );\n\n  const result: UserSettings = {};\n  const notificationPreferences: Record<string, boolean> = {};\n\n  for (const row of rows) {\n    const [section, key] = row.setting_key.split('.');\n    if (!key) continue;\n\n    const rawValue = row.setting_value;\n    const normalized = rawValue === 'true' ? true : rawValue === 'false' ? false : rawValue ?? undefined;\n\n    switch (section) {\n      case 'notifications':\n        if (typeof normalized === 'boolean') {\n          notificationPreferences[key] = normalized;\n        }\n        break;\n      case 'preferences':\n        if (key === 'language' && typeof normalized === 'string') {\n          result.language = normalized;\n        } else if (key === 'timezone' && typeof normalized === 'string') {\n          result.timeZone = normalized;\n        } else if (key === 'marketingOptIn' && typeof normalized === 'boolean') {\n          result.marketingOptIn = normalized;\n        }\n        break;\n      case 'privacy':\n        // \uBCF4\uB958: privacy \uC124\uC815\uC740 \uD0C0\uC785 \uC815\uC758\uC5D0 \uD3EC\uD568\uB418\uC9C0 \uC54A\uC74C. \uD544\uC694 \uC2DC \uD655\uC7A5\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (Object.keys(notificationPreferences).length > 0) {\n    result.notificationPreferences = notificationPreferences;\n  }\n\n  return result;\n}\n\nexport async function updateUserSettings(\n  env: Env,\n  userId: string,\n  settings: Partial<UserSettings>\n): Promise<UserSettings> {\n  const now = new Date().toISOString();\n  const entries: Array<[string, string]> = [];\n\n  if (settings.language) {\n    entries.push(['preferences.language', settings.language]);\n  }\n  if (settings.timeZone) {\n    entries.push(['preferences.timezone', settings.timeZone]);\n  }\n  if (settings.marketingOptIn !== undefined) {\n    entries.push(['preferences.marketingOptIn', String(settings.marketingOptIn)]);\n  }\n  if (settings.notificationPreferences) {\n    for (const [key, value] of Object.entries(settings.notificationPreferences)) {\n      entries.push([`notifications.${key}`, String(value)]);\n    }\n  }\n\n  await transaction(\n    env.DB,\n    entries.map(([key, value]) => ({\n      sql: 'INSERT OR REPLACE INTO user_settings (user_id, setting_key, setting_value, updated_at) VALUES (?, ?, ?, ?)',\n      params: [userId, key, value, now]\n    }))\n  );\n\n  return getUserSettings(env, userId);\n}\n\nexport async function saveProfileImage(\n  env: Env,\n  userId: string,\n  fileName: string,\n  contentType: string,\n  body: ArrayBuffer\n): Promise<string> {\n  const safeName = sanitizeFileName(fileName) || 'profile-image';\n  const key = `users/${userId}/profile/${Date.now()}-${safeName}`;\n\n  await saveToR2(env.STORAGE, key, body, contentType, {\n    userId,\n    type: 'profile-image'\n  });\n\n  await updateUserProfile(env, userId, { profileImage: key });\n\n  return `/api/v1/upload/file/${key}`;\n}\n\nexport async function deleteProfileImage(env: Env, userId: string): Promise<void> {\n  const row = await queryFirst<{ profile_image: string | null }>(\n    env.DB,\n    'SELECT profile_image FROM users WHERE user_id = ? LIMIT 1',\n    [userId]\n  );\n\n  if (!row) {\n    throw new AppError('\uC0AC\uC6A9\uC790\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'USER_NOT_FOUND');\n  }\n\n  const currentKey = row.profile_image ?? undefined;\n\n  if (currentKey) {\n    try {\n      await deleteFromR2(env.STORAGE, currentKey);\n    } catch (error) {\n      console.warn('[user] Failed to delete profile image from R2', error);\n    }\n  }\n\n  await updateUserProfile(env, userId, { profileImage: null });\n}\n\nexport async function listLocations(env: Env): Promise<LocationSummary[]> {\n  const rows = await query<{\n    location_id: number;\n    country: string;\n    city: string | null;\n    time_zone: string | null;\n  }>(\n    env.DB,\n    'SELECT location_id, country, city, time_zone FROM locations ORDER BY country, city'\n  );\n\n  return rows.map((row) => ({\n    id: row.location_id,\n    country: row.country,\n    city: row.city ?? undefined,\n    timeZone: row.time_zone ?? undefined\n  }));\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport {\n  getUserProfile,\n  updateUserProfile,\n  getUserSettings,\n  updateUserSettings,\n  saveProfileImage,\n  deleteProfileImage,\n  listLocations\n} from '../services/user';\nimport {\n  loadOnboardingSummary,\n  listLanguageOptions,\n  listMotivationOptions,\n  listTopicOptions,\n  upsertOnboardingLanguages,\n  upsertOnboardingMotivations,\n  upsertOnboardingPartner,\n  upsertOnboardingSchedules,\n  completeOnboarding\n} from '../services/onboarding';\n\ntype ProfileUpdateBody = Record<string, unknown>;\n\nfunction toUpdatePayload(body: ProfileUpdateBody) {\n  const payload: any = {};\n\n  if (typeof body.name === 'string') payload.name = body.name.trim();\n  if (typeof body.englishName === 'string') payload.englishName = body.englishName.trim();\n  if (typeof body.selfBio === 'string') payload.selfBio = body.selfBio.trim();\n  if (typeof body.gender === 'string') payload.gender = body.gender;\n  if (typeof body.birthday === 'string') payload.birthday = body.birthday;\n  if (typeof body.birthyear === 'string') payload.birthyear = body.birthyear;\n  if (typeof body.communicationMethod === 'string') payload.communicationMethod = body.communicationMethod;\n  if (typeof body.dailyMinute === 'string') payload.dailyMinute = body.dailyMinute;\n  if (typeof body.partnerGender === 'string') payload.partnerGender = body.partnerGender;\n  if (typeof body.learningExpectation === 'string') payload.learningExpectation = body.learningExpectation;\n  if (typeof body.onboardingCompleted === 'boolean') payload.onboardingCompleted = body.onboardingCompleted;\n\n  const locationId = typeof body.locationId === 'number'\n    ? body.locationId\n    : typeof body.location === 'object' && body.location !== null && typeof (body.location as any).id === 'number'\n      ? (body.location as any).id\n      : undefined;\n  if (locationId !== undefined) payload.locationId = locationId;\n\n  const nativeLanguageId = typeof body.nativeLanguageId === 'number'\n    ? body.nativeLanguageId\n    : typeof body.nativeLanguage === 'object' && body.nativeLanguage !== null && typeof (body.nativeLanguage as any).id === 'number'\n      ? (body.nativeLanguage as any).id\n      : undefined;\n  if (nativeLanguageId !== undefined) payload.nativeLanguageId = nativeLanguageId;\n\n  return payload;\n}\n\nasync function processProfileImageUpload(c: any, userId: string): Promise<string> {\n  const contentType = c.req.header('Content-Type');\n  if (!contentType?.startsWith('multipart/form-data')) {\n    throw new AppError('multipart/form-data required', 400, 'INVALID_CONTENT_TYPE');\n  }\n\n  const formData = await c.req.formData();\n  const fileEntry = formData.get('file') ?? formData.get('image');\n  if (!fileEntry || typeof fileEntry === 'string') {\n    throw new AppError('image field required', 400, 'INVALID_FORM_DATA');\n  }\n\n  const uploadFile = fileEntry as unknown as {\n    name: string;\n    type: string;\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  };\n\n  const arrayBuffer = await uploadFile.arrayBuffer();\n  return saveProfileImage(\n    c.env,\n    userId,\n    uploadFile.name,\n    uploadFile.type || 'application/octet-stream',\n    arrayBuffer\n  );\n}\n\nconst usersRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\nconst requireAuth = authMiddleware();\n\nconst wrapError = (error: unknown, feature: string): AppError => {\n  if (error instanceof AppError) {\n    return error;\n  }\n  const message = error instanceof Error ? error.message : `${feature} failed`;\n  return new AppError(message, 500, 'USER_OPERATION_FAILED');\n};\n\nasync function buildLanguageInfo(env: Env, userId: string) {\n  const [profile, summary, languageOptions] = await Promise.all([\n    getUserProfile(env, userId),\n    loadOnboardingSummary(env, userId),\n    listLanguageOptions(env)\n  ]);\n\n  const languageMap = new Map<number, { language_id: number; language_name: string; language_code: string }>(\n    languageOptions.map((item) => [item.language_id, item])\n  );\n\n  const nativeLanguageId = profile?.nativeLanguage?.id\n    ?? (summary.languages.length > 0 ? summary.languages[0].languageId : undefined);\n\n  const nativeLanguage = nativeLanguageId\n    ? {\n        languageId: nativeLanguageId,\n        languageName: languageMap.get(nativeLanguageId)?.language_name ?? null,\n        languageCode: languageMap.get(nativeLanguageId)?.language_code ?? null\n      }\n    : null;\n\n  const targetLanguages = summary.languages\n    .filter((item) => item.languageId !== nativeLanguageId)\n    .map((item) => ({\n      languageId: item.languageId,\n      languageName: languageMap.get(item.languageId)?.language_name ?? null,\n      currentLevelId: item.currentLevelId ?? undefined,\n      targetLevelId: item.targetLevelId ?? undefined\n    }));\n\n  return {\n    nativeLanguage,\n    targetLanguages\n  };\n}\n\nasync function buildMotivationInfo(env: Env, userId: string) {\n  const [summary, motivationOptions, topicOptions] = await Promise.all([\n    loadOnboardingSummary(env, userId),\n    listMotivationOptions(env),\n    listTopicOptions(env)\n  ]);\n\n  const motivationMap = new Map(motivationOptions.map((item) => [item.motivation_id, item.motivation_name]));\n  const topicMap = new Map(topicOptions.map((item) => [item.topic_id, item.topic_name]));\n\n  return {\n    motivations: summary.motivations.map((item) => ({\n      motivationId: item.motivationId,\n      priority: item.priority,\n      name: motivationMap.get(item.motivationId) ?? null\n    })),\n    topics: summary.topics.map((id: number) => ({\n      topicId: id,\n      name: topicMap.get(id) ?? null\n    }))\n  };\n}\n\nasync function buildPartnerInfo(env: Env, userId: string) {\n  const summary = await loadOnboardingSummary(env, userId);\n  return {\n    partners: summary.partnerPreferences,\n    groupSizes: summary.groupSizes\n  };\n}\n\nasync function buildScheduleInfo(env: Env, userId: string) {\n  const summary = await loadOnboardingSummary(env, userId);\n  return {\n    schedules: summary.schedules\n  };\n}\n\nusersRoutes.use('*', requireAuth);\n\nusersRoutes.get('/me/profile', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, profile);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/users/me/profile');\n  }\n});\n\nusersRoutes.get('/profile', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, profile);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/profile');\n  }\n});\n\nusersRoutes.put('/me/profile', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const body = await c.req.json();\n  const payload = toUpdatePayload(body);\n\n  try {\n    const profile = await updateUserProfile(c.env, userId, payload);\n    return successResponse(c, profile);\n  } catch (error) {\n    throw wrapError(error, 'PUT /api/v1/users/me/profile');\n  }\n});\n\nusersRoutes.patch('/profile', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json();\n  const payload = toUpdatePayload(body);\n  try {\n    const profile = await updateUserProfile(c.env, userId, payload);\n    return successResponse(c, profile);\n  } catch (error) {\n    throw wrapError(error, 'PATCH /api/v1/user/profile');\n  }\n});\n\nusersRoutes.get('/complete-profile', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    return successResponse(c, profile);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/complete-profile');\n  }\n});\n\nusersRoutes.put('/complete-profile', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json();\n  const payload = toUpdatePayload(body);\n  try {\n    const profile = await updateUserProfile(c.env, userId, payload);\n    return successResponse(c, profile);\n  } catch (error) {\n    throw wrapError(error, 'PUT /api/v1/user/complete-profile');\n  }\n});\n\nusersRoutes.get('/me/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const settings = await getUserSettings(c.env, userId);\n    return successResponse(c, settings);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/users/me/settings');\n  }\n});\n\nusersRoutes.get('/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const settings = await getUserSettings(c.env, userId);\n    return successResponse(c, settings);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/settings');\n  }\n});\n\nusersRoutes.put('/me/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const body = await c.req.json();\n\n  try {\n    const settings = await updateUserSettings(c.env, userId, body);\n    return successResponse(c, settings);\n  } catch (error) {\n    throw wrapError(error, 'PUT /api/v1/users/me/settings');\n  }\n});\n\nusersRoutes.put('/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const body = await c.req.json();\n\n  try {\n    const settings = await updateUserSettings(c.env, userId, body);\n    return successResponse(c, settings);\n  } catch (error) {\n    throw wrapError(error, 'PUT /api/v1/user/settings');\n  }\n});\n\nusersRoutes.post('/me/profile-image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const location = await processProfileImageUpload(c, userId);\n    return successResponse(c, { url: location });\n  } catch (error) {\n    throw wrapError(error, 'POST /api/v1/users/me/profile-image');\n  }\n});\n\nusersRoutes.get('/language-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const info = await buildLanguageInfo(c.env, userId);\n    return successResponse(c, info);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/language-info');\n  }\n});\n\nusersRoutes.patch('/language-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json();\n  const languages = Array.isArray((body as any)?.languages) ? (body as any).languages : [];\n  const languagePayload: Array<{ languageId: number; currentLevelId?: number; targetLevelId?: number }> = [];\n  for (const raw of languages as any[]) {\n    const languageId = Number(raw.languageId ?? raw.language_id);\n    if (!Number.isFinite(languageId)) {\n      continue;\n    }\n    languagePayload.push({\n      languageId,\n      currentLevelId: raw.currentLevelId ?? raw.current_level_id ?? undefined,\n      targetLevelId: raw.targetLevelId ?? raw.target_level_id ?? undefined\n    });\n  }\n  await upsertOnboardingLanguages(c.env, userId, languagePayload);\n  if (Number.isFinite(body?.nativeLanguageId)) {\n    await updateUserProfile(c.env, userId, { nativeLanguageId: Number(body.nativeLanguageId) });\n  }\n  const info = await buildLanguageInfo(c.env, userId);\n  return successResponse(c, info);\n});\n\nusersRoutes.get('/motivation-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const info = await buildMotivationInfo(c.env, userId);\n    return successResponse(c, info);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/motivation-info');\n  }\n});\n\nusersRoutes.patch('/motivation-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json();\n  const motivationIds = Array.isArray((body as any)?.motivationIds)\n    ? (body as any).motivationIds\n    : [];\n  const motivationPayload: Array<{ motivationId: number; priority?: number }> = [];\n  (motivationIds as any[]).forEach((raw, index) => {\n    const motivationId = Number(raw);\n    if (!Number.isFinite(motivationId)) {\n      return;\n    }\n    motivationPayload.push({\n      motivationId,\n      priority: index + 1\n    });\n  });\n  await upsertOnboardingMotivations(c.env, userId, motivationPayload);\n  const info = await buildMotivationInfo(c.env, userId);\n  return successResponse(c, info);\n});\n\nusersRoutes.get('/partner-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const info = await buildPartnerInfo(c.env, userId);\n    return successResponse(c, info);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/partner-info');\n  }\n});\n\nusersRoutes.patch('/partner-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json();\n  const preferences = Array.isArray((body as any)?.partnerPreferences)\n    ? (body as any).partnerPreferences\n    : [];\n  const partnerPayload: Array<{ partnerPersonalityId: number; partnerGender?: string }> = [];\n  (preferences as any[]).forEach((raw) => {\n    const partnerPersonalityId = Number(raw.partnerPersonalityId ?? raw.partner_personality_id ?? raw);\n    if (!Number.isFinite(partnerPersonalityId)) {\n      return;\n    }\n    partnerPayload.push({\n      partnerPersonalityId,\n      partnerGender: raw.partnerGender ?? raw.partner_gender ?? undefined\n    });\n  });\n  await upsertOnboardingPartner(c.env, userId, partnerPayload);\n  const info = await buildPartnerInfo(c.env, userId);\n  return successResponse(c, info);\n});\n\nusersRoutes.get('/schedule-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const info = await buildScheduleInfo(c.env, userId);\n    return successResponse(c, info);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/schedule-info');\n  }\n});\n\nusersRoutes.patch('/schedule-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json();\n  const schedules = Array.isArray((body as any)?.schedules)\n    ? (body as any).schedules\n    : [];\n  const normalized: Array<{ scheduleId: number; dayOfWeek: string; classTime?: string }> = [];\n  (schedules as any[]).forEach((raw) => {\n    const scheduleId = Number(raw.scheduleId ?? raw.schedule_id);\n    if (!Number.isFinite(scheduleId)) {\n      return;\n    }\n    normalized.push({\n      scheduleId,\n      dayOfWeek: raw.dayOfWeek ?? raw.day_of_week ?? 'UNKNOWN',\n      classTime: raw.classTime ?? raw.class_time ?? undefined\n    });\n  });\n  await upsertOnboardingSchedules(c.env, userId, normalized);\n  const info = await buildScheduleInfo(c.env, userId);\n  return successResponse(c, info);\n});\n\nusersRoutes.get('/me/profile-image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, { profileImage: profile.profileImage });\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/users/me/profile-image');\n  }\n});\n\nusersRoutes.post('/profile-image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const location = await processProfileImageUpload(c, userId);\n    return successResponse(c, { url: location });\n  } catch (error) {\n    throw wrapError(error, 'POST /api/v1/user/profile-image');\n  }\n});\n\nusersRoutes.post('/profile/image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const location = await processProfileImageUpload(c, userId);\n    return successResponse(c, { url: location });\n  } catch (error) {\n    throw wrapError(error, 'POST /api/v1/users/profile/image');\n  }\n});\n\nusersRoutes.delete('/profile-image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    await deleteProfileImage(c.env, userId);\n    return successResponse(c, { success: true });\n  } catch (error) {\n    throw wrapError(error, 'DELETE /api/v1/user/profile-image');\n  }\n});\n\nusersRoutes.delete('/profile/image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    await deleteProfileImage(c.env, userId);\n    return successResponse(c, { success: true });\n  } catch (error) {\n    throw wrapError(error, 'DELETE /api/v1/users/profile/image');\n  }\n});\n\nusersRoutes.get('/profile-image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, { profileImage: profile.profileImage });\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/profile-image');\n  }\n});\n\nusersRoutes.get('/me/name', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, { name: profile.name });\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/users/me/name');\n  }\n});\n\nusersRoutes.get('/info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, {\n      id: profile.id,\n      email: profile.email,\n      englishName: profile.englishName,\n      name: profile.name,\n      onboardingCompleted: profile.onboardingCompleted\n    });\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/info');\n  }\n});\n\nusersRoutes.get('/name', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, { name: profile.name ?? profile.englishName });\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/name');\n  }\n});\n\nusersRoutes.get('/me/onboarding-status', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, { completed: profile.onboardingCompleted });\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/users/me/onboarding-status');\n  }\n});\n\nusersRoutes.get('/onboarding-status', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const profile = await getUserProfile(c.env, userId);\n  if (!profile) {\n    throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n  }\n  return successResponse(c, { completed: profile.onboardingCompleted });\n});\n\nusersRoutes.post('/complete-onboarding', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json().catch(() => ({}));\n  await completeOnboarding(c.env, userId, body ?? {});\n  return successResponse(c, { completed: true });\n});\n\nusersRoutes.post('/me/english-name', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.englishName !== 'string' || !body.englishName.trim()) {\n    throw new AppError('englishName is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { englishName: body.englishName.trim() });\n  return successResponse(c, { englishName: body.englishName.trim() });\n});\n\nusersRoutes.post('/english-name', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.englishName !== 'string' || !body.englishName.trim()) {\n    throw new AppError('englishName is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { englishName: body.englishName.trim() });\n  return successResponse(c, { englishName: body.englishName.trim() });\n});\n\nusersRoutes.post('/me/birthyear', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.birthyear !== 'string' || !body.birthyear.trim()) {\n    throw new AppError('birthyear is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { birthyear: body.birthyear.trim() });\n  return successResponse(c, { birthyear: body.birthyear.trim() });\n});\n\nusersRoutes.post('/birthyear', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.birthYear !== 'string' && typeof body.birthyear !== 'string') {\n    throw new AppError('birthyear is required', 400, 'INVALID_PAYLOAD');\n  }\n  const value = (body.birthYear ?? body.birthyear).toString().trim();\n  if (!value) {\n    throw new AppError('birthyear is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { birthyear: value });\n  return successResponse(c, { birthyear: value });\n});\n\nusersRoutes.post('/me/birthday', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.birthday !== 'string' || !body.birthday.trim()) {\n    throw new AppError('birthday is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { birthday: body.birthday.trim() });\n  return successResponse(c, { birthday: body.birthday.trim() });\n});\n\nusersRoutes.post('/birthday', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const value = typeof body.birthday === 'string' ? body.birthday.trim() : '';\n  if (!value) {\n    throw new AppError('birthday is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { birthday: value });\n  return successResponse(c, { birthday: value });\n});\n\nusersRoutes.post('/me/gender', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.gender !== 'string' || !body.gender.trim()) {\n    throw new AppError('gender is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { gender: body.gender.trim() });\n  return successResponse(c, { gender: body.gender.trim() });\n});\n\nusersRoutes.post('/gender', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const gender = (body.gender ?? body.genderType)?.toString().trim();\n  if (!gender) {\n    throw new AppError('gender is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { gender });\n  return successResponse(c, { gender });\n});\n\nusersRoutes.post('/me/self-bio', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.selfBio !== 'string') {\n    throw new AppError('selfBio is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { selfBio: body.selfBio });\n  return successResponse(c, { selfBio: body.selfBio });\n});\n\nusersRoutes.post('/self-bio', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const selfBio = typeof body.selfBio === 'string' ? body.selfBio : '';\n  await updateUserProfile(c.env, userId, { selfBio });\n  return successResponse(c, { selfBio });\n});\n\nusersRoutes.post('/me/location', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const locationId = typeof body.locationId === 'number' ? body.locationId : undefined;\n  if (locationId === undefined) {\n    throw new AppError('locationId is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { locationId });\n  return successResponse(c, { locationId });\n});\n\nusersRoutes.post('/location', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const locationId = Number(body.locationId ?? body.location_id);\n  if (!Number.isFinite(locationId)) {\n    throw new AppError('locationId is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { locationId });\n  return successResponse(c, { locationId });\n});\n\nusersRoutes.get('/stats', async (c) => {\n  return successResponse(c, {\n    sessionsThisWeek: 0,\n    totalSessions: 0,\n    totalMinutes: 0\n  });\n});\n\nusersRoutes.delete('/account', async (c) => {\n  return successResponse(c, {\n    success: false,\n    message: 'Account deletion is not supported on the Workers API yet.'\n  });\n});\n\nusersRoutes.get('/gender-type', async (c) => {\n  return successResponse(c, [\n    { id: 'MALE', name: '\uB0A8\uC131' },\n    { id: 'FEMALE', name: '\uC5EC\uC131' },\n    { id: 'OTHER', name: '\uAE30\uD0C0' }\n  ]);\n});\n\nusersRoutes.get('/locations', async (c) => {\n  try {\n    const locations = await listLocations(c.env);\n    return successResponse(c, locations);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/users/locations');\n  }\n});\n\nexport default usersRoutes;\n", "import type { Env } from '../index';\nimport type { OnboardingSummary } from '../types';\nimport { query, transaction } from '../utils/db';\nimport { getUserProfile, updateUserProfile } from './user';\n\nexport async function listLanguageOptions(env: Env) {\n  return query<{\n    language_id: number;\n    language_name: string;\n    language_code: string;\n  }>(\n    env.DB,\n    'SELECT language_id, language_name, language_code FROM languages WHERE is_active IS NULL OR is_active = 1 ORDER BY language_name'\n  );\n}\n\nexport async function listLanguageLevelTypes(env: Env, category: string) {\n  const normalizedCategory = (category ?? '').trim().toUpperCase();\n\n  return query<{\n    lang_level_id: number;\n    lang_level_name: string;\n    description: string | null;\n    category: string | null;\n    level_order: number | null;\n  }>(\n    env.DB,\n    `SELECT\n        lang_level_id,\n        lang_level_name,\n        description,\n        category,\n        level_order\n      FROM lang_level_type\n      WHERE (\n        category IS NOT NULL AND UPPER(category) = ?\n      ) OR (\n        category IS NULL AND (\n          (? = 'LANGUAGE' AND lang_level_id BETWEEN 100 AND 199) OR\n          (? = 'PARTNER' AND lang_level_id BETWEEN 200 AND 299)\n        )\n      )\n      ORDER BY\n        CASE WHEN level_order IS NULL THEN 1 ELSE 0 END,\n        level_order,\n        lang_level_id`,\n    [normalizedCategory, normalizedCategory, normalizedCategory]\n  );\n}\n\nexport async function listTopicOptions(env: Env) {\n  return query<{\n    topic_id: number;\n    topic_name: string;\n    description: string | null;\n  }>(env.DB, 'SELECT topic_id, topic_name, description FROM topic WHERE is_active IS NULL OR is_active = 1 ORDER BY topic_name');\n}\n\nexport async function listPartnerOptions(env: Env) {\n  return query<{\n    partner_personality_id: number;\n    partner_personality: string;\n    description: string | null;\n  }>(\n    env.DB,\n    'SELECT partner_personality_id, partner_personality, description FROM partner_personality ORDER BY partner_personality'\n  );\n}\n\nexport async function listScheduleOptions(env: Env) {\n  return query<{\n    schedule_id: number;\n    day_of_week: string;\n    schedule_name: string | null;\n    time_slot: string | null;\n  }>(env.DB, 'SELECT schedule_id, day_of_week, schedule_name, time_slot FROM schedule ORDER BY schedule_id');\n}\n\nexport async function listGroupSizeOptions(env: Env) {\n  return query<{\n    group_size_id: number;\n    group_size: string;\n  }>(\n    env.DB,\n    'SELECT group_size_id, group_size FROM group_size ORDER BY group_size_id'\n  );\n}\n\ntype CommunicationMethodOption = {\n  id: number;\n  code: string;\n  displayName: string;\n  description: string | null;\n  sortOrder: number;\n};\n\nconst DEFAULT_COMMUNICATION_METHODS: CommunicationMethodOption[] = [\n  {\n    id: 1,\n    code: 'TEXT',\n    displayName: '\uD14D\uC2A4\uD2B8 \uC911\uC2EC',\n    description: '\uCC44\uD305\uC744 \uC704\uC8FC\uB85C \uD559\uC2B5\uD569\uB2C8\uB2E4.',\n    sortOrder: 1\n  },\n  {\n    id: 2,\n    code: 'VOICE',\n    displayName: '\uC74C\uC131 \uC911\uC2EC',\n    description: '\uC74C\uC131 \uD1B5\uD654\uB97C \uC911\uC2EC\uC73C\uB85C \uC5F0\uC2B5\uD569\uB2C8\uB2E4.',\n    sortOrder: 2\n  },\n  {\n    id: 3,\n    code: 'VIDEO',\n    displayName: '\uC601\uC0C1 \uD1B5\uD654',\n    description: '\uC601\uC0C1 \uD1B5\uD654\uB85C \uC2E4\uC2DC\uAC04 \uB300\uD654\uB97C \uC9C4\uD589\uD569\uB2C8\uB2E4.',\n    sortOrder: 3\n  },\n  {\n    id: 4,\n    code: 'HYBRID',\n    displayName: '\uC0C1\uD669\uC5D0 \uB9DE\uAC8C',\n    description: '\uC0C1\uD669\uC5D0 \uB530\uB77C \uD14D\uC2A4\uD2B8\uC640 \uC74C\uC131\uC744 \uD63C\uD569\uD569\uB2C8\uB2E4.',\n    sortOrder: 4\n  }\n];\n\nfunction normalizeCommunicationMethods(\n  rows: Array<{\n    communication_method_id: number | null;\n    method_code: string | null;\n    display_name: string | null;\n    description: string | null;\n    sort_order: number | null;\n  }>\n): CommunicationMethodOption[] {\n  if (!rows.length) {\n    return DEFAULT_COMMUNICATION_METHODS.map((item) => ({ ...item }));\n  }\n\n  return rows\n    .map((row, index) => {\n      const code = (row.method_code ?? '').trim().toUpperCase();\n      if (!code) {\n        return null;\n      }\n\n      return {\n        id: row.communication_method_id ?? index + 1,\n        code,\n        displayName: row.display_name?.trim() || code,\n        description: row.description ?? null,\n        sortOrder: row.sort_order ?? index + 1\n      } satisfies CommunicationMethodOption;\n    })\n    .filter((item): item is CommunicationMethodOption => item !== null)\n    .sort((a, b) => {\n      if (a.sortOrder === b.sortOrder) {\n        return a.id - b.id;\n      }\n      return a.sortOrder - b.sortOrder;\n    });\n}\n\nexport async function listCommunicationMethodOptions(env: Env): Promise<CommunicationMethodOption[]> {\n  try {\n    const rows = await query<{\n      communication_method_id: number;\n      method_code: string;\n      display_name: string | null;\n      description: string | null;\n      sort_order: number | null;\n      is_active: number | null;\n    }>(\n      env.DB,\n      `SELECT communication_method_id, method_code, display_name, description, sort_order, is_active\n       FROM communication_method\n       WHERE is_active IS NULL OR is_active = 1\n       ORDER BY\n         CASE WHEN sort_order IS NULL THEN 1 ELSE 0 END,\n         sort_order,\n         communication_method_id`\n    );\n\n    return normalizeCommunicationMethods(rows);\n  } catch (error) {\n    console.warn('[onboarding] communication_method table unavailable, falling back to defaults', error);\n    return DEFAULT_COMMUNICATION_METHODS.map((item) => ({ ...item }));\n  }\n}\n\ntype DailyMinuteOption = {\n  code: string;\n  displayName: string;\n  minutes: number;\n  description: string | null;\n  sortOrder: number;\n};\n\nconst DEFAULT_DAILY_MINUTE_OPTIONS: DailyMinuteOption[] = [\n  {\n    code: 'MINUTES_10',\n    displayName: '10\uBD84',\n    minutes: 10,\n    description: '\uD558\uB8E8 10\uBD84 \uD559\uC2B5',\n    sortOrder: 1\n  },\n  {\n    code: 'MINUTES_15',\n    displayName: '15\uBD84',\n    minutes: 15,\n    description: '\uD558\uB8E8 15\uBD84 \uD559\uC2B5',\n    sortOrder: 2\n  },\n  {\n    code: 'MINUTES_20',\n    displayName: '20\uBD84',\n    minutes: 20,\n    description: '\uD558\uB8E8 20\uBD84 \uD559\uC2B5',\n    sortOrder: 3\n  },\n  {\n    code: 'MINUTES_25',\n    displayName: '25\uBD84',\n    minutes: 25,\n    description: '\uD558\uB8E8 25\uBD84 \uD559\uC2B5',\n    sortOrder: 4\n  },\n  {\n    code: 'MINUTES_30',\n    displayName: '30\uBD84',\n    minutes: 30,\n    description: '\uD558\uB8E8 30\uBD84 \uD559\uC2B5',\n    sortOrder: 5\n  }\n];\n\nasync function fetchDailyMinuteRows(env: Env) {\n  try {\n    const table = await query<{ name: string }>(\n      env.DB,\n      \"SELECT name FROM sqlite_master WHERE type = 'table' AND name IN (?, ?)\",\n      ['daily_minute_option', 'daily_minute']\n    );\n\n    if (!table.length) {\n      return [];\n    }\n\n    const tableName = table[0]?.name ?? 'daily_minute_option';\n\n    try {\n      return await query<{\n        code: string | null;\n        display_name: string | null;\n        minutes: number | null;\n        description: string | null;\n        sort_order: number | null;\n      }>(\n        env.DB,\n        `SELECT\n           COALESCE(method_code, code) AS code,\n           COALESCE(display_name, name) AS display_name,\n           minutes,\n           description,\n           sort_order\n         FROM ${tableName}\n         WHERE is_active IS NULL OR is_active = 1\n         ORDER BY\n           CASE WHEN sort_order IS NULL THEN 1 ELSE 0 END,\n           sort_order,\n           COALESCE(method_code, code, display_name)`\n      );\n    } catch (error) {\n      console.warn('[onboarding] daily_minute columns unavailable, falling back to defaults', error);\n      return [];\n    }\n  } catch (error) {\n    console.warn('[onboarding] daily_minute table unavailable, falling back to defaults', error);\n    return [];\n  }\n}\n\nexport async function listDailyMinuteOptions(env: Env): Promise<DailyMinuteOption[]> {\n  const rows = await fetchDailyMinuteRows(env);\n\n  if (!rows.length) {\n    return DEFAULT_DAILY_MINUTE_OPTIONS.map((item) => ({ ...item }));\n  }\n\n  return rows\n    .map((row, index) => {\n      const code = (row.code ?? '').trim().toUpperCase();\n      if (!code) {\n        return null;\n      }\n\n      return {\n        code,\n        displayName: row.display_name?.trim() || code,\n        minutes: Number.isFinite(row.minutes) ? Number(row.minutes) : DEFAULT_DAILY_MINUTE_OPTIONS[index % DEFAULT_DAILY_MINUTE_OPTIONS.length].minutes,\n        description: row.description ?? null,\n        sortOrder: row.sort_order ?? index + 1\n      } as DailyMinuteOption;\n    })\n    .filter((item): item is DailyMinuteOption => item !== null)\n    .sort((a, b) => {\n      if (a.sortOrder === b.sortOrder) {\n        return a.minutes - b.minutes;\n      }\n      return a.sortOrder - b.sortOrder;\n    });\n}\n\nexport async function listMotivationOptions(env: Env) {\n  return query<{\n    motivation_id: number;\n    motivation_name: string;\n    description: string | null;\n  }>(\n    env.DB,\n    'SELECT motivation_id, motivation_name, description FROM motivation WHERE is_active IS NULL OR is_active = 1 ORDER BY motivation_name'\n  );\n}\n\nexport async function listLearningStyleOptions(env: Env) {\n  return query<{\n    learning_style_id: number;\n    learning_style_name: string;\n    description: string | null;\n  }>(\n    env.DB,\n    'SELECT learning_style_id, learning_style_name, description FROM learning_style WHERE is_active IS NULL OR is_active = 1 ORDER BY learning_style_id'\n  );\n}\n\nexport async function listLearningExpectationOptions(env: Env) {\n  return query<{\n    learning_expectation_id: number;\n    learning_expectation_name: string;\n    description: string | null;\n  }>(\n    env.DB,\n    'SELECT learning_expectation_id, learning_expectation_name, description FROM learning_expectation WHERE is_active IS NULL OR is_active = 1 ORDER BY learning_expectation_id'\n  );\n}\n\nexport async function upsertOnboardingLanguages(\n  env: Env,\n  userId: string,\n  payload: Array<{ languageId: number; currentLevelId?: number; targetLevelId?: number }>\n) {\n  await transaction(\n    env.DB,\n    [\n      { sql: 'DELETE FROM onboarding_lang_level WHERE user_id = ?', params: [userId] },\n      ...payload.map((item) => ({\n        sql: `INSERT INTO onboarding_lang_level (user_id, language_id, current_level_id, target_level_id, created_at, updated_at)\n              VALUES (?, ?, ?, ?, ?, ?)` ,\n        params: [\n          userId,\n          item.languageId,\n          item.currentLevelId ?? null,\n          item.targetLevelId ?? null,\n          new Date().toISOString(),\n          new Date().toISOString()\n        ]\n      }))\n    ]\n  );\n}\n\nexport async function upsertOnboardingTopics(\n  env: Env,\n  userId: string,\n  topicIds: number[]\n) {\n  await transaction(\n    env.DB,\n    [\n      { sql: 'DELETE FROM onboarding_topic WHERE user_id = ?', params: [userId] },\n      ...topicIds.map((topicId) => ({\n        sql: 'INSERT INTO onboarding_topic (user_id, topic_id, created_at) VALUES (?, ?, ?)',\n        params: [userId, topicId, new Date().toISOString()]\n      }))\n    ]\n  );\n}\n\nexport async function upsertOnboardingPartner(\n  env: Env,\n  userId: string,\n  preferences: Array<{ partnerPersonalityId: number; partnerGender?: string }>\n) {\n  await transaction(\n    env.DB,\n    [\n      { sql: 'DELETE FROM onboarding_partner WHERE user_id = ?', params: [userId] },\n      ...preferences.map((pref) => ({\n        sql: 'INSERT INTO onboarding_partner (user_id, partner_personality_id, partner_gender, created_at) VALUES (?, ?, ?, ?)',\n        params: [userId, pref.partnerPersonalityId, pref.partnerGender ?? null, new Date().toISOString()]\n      }))\n    ]\n  );\n}\n\nexport async function upsertOnboardingSchedules(\n  env: Env,\n  userId: string,\n  schedules: Array<{ scheduleId: number; dayOfWeek: string; classTime?: string }>\n) {\n  await transaction(\n    env.DB,\n    [\n      { sql: 'DELETE FROM onboarding_schedule WHERE user_id = ?', params: [userId] },\n      ...schedules.map((item) => ({\n        sql: `INSERT INTO onboarding_schedule (user_id, schedule_id, day_of_week, class_time, is_available, created_at)\n              VALUES (?, ?, ?, ?, 1, ?)` ,\n        params: [userId, item.scheduleId, item.dayOfWeek, item.classTime ?? null, new Date().toISOString()]\n      }))\n    ]\n  );\n}\n\nexport async function upsertOnboardingGroupSizes(\n  env: Env,\n  userId: string,\n  groupSizeIds: number[]\n) {\n  const normalized = Array.from(new Set(groupSizeIds.map((value) => Number(value)))).filter((value): value is number => Number.isFinite(value));\n\n  const timestamp = new Date().toISOString();\n  const operations = [\n    { sql: 'DELETE FROM onboarding_group_size WHERE user_id = ?', params: [userId] },\n    ...normalized.map((groupSizeId) => ({\n      sql: 'INSERT INTO onboarding_group_size (user_id, group_size_id, created_at) VALUES (?, ?, ?)',\n      params: [userId, groupSizeId, timestamp]\n    }))\n  ];\n\n  await transaction(env.DB, operations);\n}\n\nexport async function upsertOnboardingMotivations(\n  env: Env,\n  userId: string,\n  motivations: Array<{ motivationId: number; priority?: number }>\n) {\n  await transaction(\n    env.DB,\n    [\n      { sql: 'DELETE FROM onboarding_motivation WHERE user_id = ?', params: [userId] },\n      ...motivations.map((item) => ({\n        sql: 'INSERT INTO onboarding_motivation (user_id, motivation_id, priority, created_at) VALUES (?, ?, ?, ?)',\n        params: [userId, item.motivationId, item.priority ?? null, new Date().toISOString()]\n      }))\n    ]\n  );\n}\n\nexport async function upsertOnboardingLearningStyles(\n  env: Env,\n  userId: string,\n  learningStyleIds: number[]\n) {\n  const normalized = Array.from(new Set(learningStyleIds.map((value) => Number(value)))).filter((value): value is number => Number.isFinite(value));\n  const timestamp = new Date().toISOString();\n\n  const operations = [\n    { sql: 'DELETE FROM onboarding_learning_style WHERE user_id = ?', params: [userId] },\n    ...normalized.map((learningStyleId) => ({\n      sql: 'INSERT INTO onboarding_learning_style (user_id, learning_style_id, created_at) VALUES (?, ?, ?)',\n      params: [userId, learningStyleId, timestamp]\n    }))\n  ];\n\n  await transaction(env.DB, operations);\n}\n\nexport async function upsertOnboardingLearningExpectations(\n  env: Env,\n  userId: string,\n  learningExpectationIds: number[]\n) {\n  const normalized = Array.from(new Set(learningExpectationIds.map((value) => Number(value)))).filter((value): value is number => Number.isFinite(value));\n  const timestamp = new Date().toISOString();\n\n  const operations = [\n    { sql: 'DELETE FROM onboarding_learning_expectation WHERE user_id = ?', params: [userId] },\n    ...normalized.map((learningExpectationId, index) => ({\n      sql: 'INSERT INTO onboarding_learning_expectation (user_id, learning_expectation_id, priority, created_at) VALUES (?, ?, ?, ?)',\n      params: [userId, learningExpectationId, index + 1, timestamp]\n    }))\n  ];\n\n  await transaction(env.DB, operations);\n}\n\nexport async function loadOnboardingSummary(env: Env, userId: string): Promise<OnboardingSummary> {\n  const [\n    languagesResult,\n    topicsResult,\n    motivationsResult,\n    learningStylesResult,\n    groupSizesResult,\n    partnersResult,\n    schedulesResult\n  ] = await env.DB.batch([\n    env.DB.prepare(\n      'SELECT language_id, current_level_id, target_level_id FROM onboarding_lang_level WHERE user_id = ?'\n    ).bind(userId),\n    env.DB.prepare('SELECT topic_id FROM onboarding_topic WHERE user_id = ?').bind(userId),\n    env.DB.prepare('SELECT motivation_id, priority FROM onboarding_motivation WHERE user_id = ?').bind(userId),\n    env.DB.prepare('SELECT learning_style_id FROM onboarding_learning_style WHERE user_id = ?').bind(userId),\n    env.DB.prepare('SELECT group_size_id FROM onboarding_group_size WHERE user_id = ?').bind(userId),\n    env.DB.prepare(\n      'SELECT partner_personality_id, partner_gender FROM onboarding_partner WHERE user_id = ?'\n    ).bind(userId),\n    env.DB.prepare(\n      'SELECT schedule_id, day_of_week, class_time FROM onboarding_schedule WHERE user_id = ?'\n    ).bind(userId)\n  ]);\n\n  const languages = (languagesResult.results ?? []) as Array<{\n    language_id: number;\n    current_level_id: number | null;\n    target_level_id: number | null;\n  }>;\n  const topics = (topicsResult.results ?? []) as Array<{ topic_id: number }>;\n  const motivations = (motivationsResult.results ?? []) as Array<{\n    motivation_id: number;\n    priority: number | null;\n  }>;\n  const learningStyles = (learningStylesResult.results ?? []) as Array<{\n    learning_style_id: number;\n  }>;\n  const groupSizes = (groupSizesResult.results ?? []) as Array<{ group_size_id: number }>;\n  const partners = (partnersResult.results ?? []) as Array<{\n    partner_personality_id: number;\n    partner_gender: string | null;\n  }>;\n  const scheduleRows = (schedulesResult.results ?? []) as Array<{\n    schedule_id: number;\n    day_of_week: string;\n    class_time: string | null;\n  }>;\n\n  const profile = await getUserProfile(env, userId);\n\n  return {\n    languages: languages.map((item) => ({\n      languageId: item.language_id,\n      currentLevelId: item.current_level_id ?? undefined,\n      targetLevelId: item.target_level_id ?? undefined\n    })),\n    topics: topics.map((item) => item.topic_id),\n    motivations: motivations.map((item) => ({\n      motivationId: item.motivation_id,\n      priority: item.priority ?? undefined\n    })),\n    learningStyles: learningStyles.map((item) => item.learning_style_id),\n    groupSizes: groupSizes.map((item) => item.group_size_id),\n    partnerPreferences: partners.map((item) => ({\n      partnerPersonalityId: item.partner_personality_id,\n      partnerGender: item.partner_gender ?? undefined\n    })),\n    schedules: scheduleRows.map((item) => ({\n      scheduleId: item.schedule_id,\n      dayOfWeek: item.day_of_week,\n      classTime: item.class_time ?? undefined\n    })),\n    communicationMethod: profile?.communicationMethod ?? undefined\n  };\n}\n\nexport async function completeOnboarding(\n  env: Env,\n  userId: string,\n  payload: {\n    nativeLanguageId?: number | null;\n    targetLanguages?: Array<{ languageId: number; currentLevelId?: number; targetLevelId?: number }>;\n    motivationIds?: number[];\n    topicIds?: number[];\n    learningStyleIds?: number[];\n    learningExpectationIds?: number[];\n    partnerPersonalityIds?: Array<{ partnerPersonalityId: number; partnerGender?: string } | number>;\n    groupSizeIds?: number[];\n    scheduleIds?: Array<{ scheduleId: number; dayOfWeek: string; classTime?: string } | number>;\n    communicationMethod?: string | null;\n  } = {}\n) {\n  if (payload.targetLanguages) {\n    await upsertOnboardingLanguages(env, userId, payload.targetLanguages);\n  }\n\n  if (payload.topicIds) {\n    await upsertOnboardingTopics(env, userId, payload.topicIds);\n  }\n\n  if (payload.motivationIds) {\n    await upsertOnboardingMotivations(\n      env,\n      userId,\n      payload.motivationIds.map((id, index) => ({ motivationId: id, priority: index + 1 }))\n    );\n  }\n\n  if (payload.partnerPersonalityIds) {\n    const preferences = payload.partnerPersonalityIds.map((item) =>\n      typeof item === 'number' ? { partnerPersonalityId: item } : item\n    );\n    await upsertOnboardingPartner(env, userId, preferences);\n  }\n\n  if (payload.groupSizeIds) {\n    await upsertOnboardingGroupSizes(env, userId, payload.groupSizeIds);\n  }\n\n  if (payload.scheduleIds) {\n    const schedules = payload.scheduleIds.map((item) =>\n      typeof item === 'number'\n        ? { scheduleId: item, dayOfWeek: 'UNKNOWN', classTime: null }\n        : item\n    );\n    await upsertOnboardingSchedules(env, userId, schedules as Array<{ scheduleId: number; dayOfWeek: string; classTime?: string }>);\n  }\n\n  if (payload.learningStyleIds) {\n    await upsertOnboardingLearningStyles(env, userId, payload.learningStyleIds);\n  }\n\n  if (payload.learningExpectationIds) {\n    await upsertOnboardingLearningExpectations(env, userId, payload.learningExpectationIds);\n  }\n\n  const profileUpdates: Parameters<typeof updateUserProfile>[2] = {\n    nativeLanguageId: payload.nativeLanguageId ?? null,\n    onboardingCompleted: true\n  };\n\n  if (typeof payload.communicationMethod === 'string' && payload.communicationMethod.trim()) {\n    profileUpdates.communicationMethod = payload.communicationMethod.trim().toUpperCase();\n  }\n\n  await updateUserProfile(env, userId, profileUpdates);\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport {\n  listLanguageOptions,\n  listLanguageLevelTypes,\n  listLearningExpectationOptions,\n  listLearningStyleOptions,\n  listTopicOptions,\n  listPartnerOptions,\n  listScheduleOptions,\n  listGroupSizeOptions,\n  listCommunicationMethodOptions,\n  listDailyMinuteOptions,\n  listMotivationOptions,\n  upsertOnboardingLanguages,\n  upsertOnboardingLearningExpectations,\n  upsertOnboardingLearningStyles,\n  upsertOnboardingTopics,\n  upsertOnboardingPartner,\n  upsertOnboardingSchedules,\n  upsertOnboardingGroupSizes,\n  upsertOnboardingMotivations,\n  loadOnboardingSummary,\n  completeOnboarding\n} from '../services/onboarding';\nimport {\n  clearOnboardingState,\n  getOnboardingProgress,\n  getOnboardingSessionDraft,\n  getOnboardingStep,\n  resetOnboardingProgress,\n  saveOnboardingSessionDraft,\n  saveOnboardingStep\n} from '../services/onboardingState';\nimport { getUserProfile, updateUserProfile } from '../services/user';\n\nconst onboardingRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\nconst requireAuth = authMiddleware();\nconst TOTAL_ONBOARDING_STEPS = 8;\n\nconst wrapError = (error: unknown, fallback: string): AppError => {\n  if (error instanceof AppError) {\n    return error;\n  }\n  const message = error instanceof Error ? error.message : fallback;\n  return new AppError(message, 500, 'ONBOARDING_ERROR');\n};\n\nfunction normalizeStepPayload(raw: Record<string, unknown>): Record<string, unknown> {\n  if (raw && typeof (raw as any).stepData === 'object' && (raw as any).stepData !== null) {\n    return (raw as any).stepData as Record<string, unknown>;\n  }\n  return raw;\n}\n\nasync function getStepPayload(env: Env, userId: string, step: number) {\n  const record = await getOnboardingStep(env, userId, step);\n  return record?.payload ?? null;\n}\n\nasync function buildOnboardingData(env: Env, userId: string) {\n  const [\n    profile,\n    step1,\n    step2,\n    step3,\n    step4,\n    progress,\n    languages,\n    motivations,\n    topics,\n    learningStyles,\n    learningExpectations\n  ] = await Promise.all([\n    getUserProfile(env, userId),\n    getStepPayload(env, userId, 1),\n    getStepPayload(env, userId, 2),\n    getStepPayload(env, userId, 3),\n    getStepPayload(env, userId, 4),\n    getOnboardingProgress(env, userId, TOTAL_ONBOARDING_STEPS),\n    listLanguageOptions(env),\n    listMotivationOptions(env),\n    listTopicOptions(env),\n    listLearningStyleOptions(env),\n    listLearningExpectationOptions(env)\n  ]);\n\n  const step1Payload = (step1 as Record<string, unknown>) ?? {};\n  const step2Payload = (step2 as Record<string, unknown>) ?? {};\n  const step3Payload = (step3 as Record<string, unknown>) ?? {};\n  const step4Payload = (step4 as Record<string, unknown>) ?? {};\n\n  const userOnboardingData: Record<string, unknown> = {\n    englishName: (step1Payload?.englishName as string | undefined) ?? profile?.englishName ?? profile?.name,\n    profileImageUrl: (step1Payload?.profileImage as string | undefined) ?? profile?.profileImage,\n    residence: step1Payload?.residence ?? profile?.location?.country ?? null,\n    intro: step1Payload?.intro ?? profile?.selfBio ?? '',\n    nativeLanguageId:\n      (step2Payload?.nativeLanguageId as number | undefined) ??\n      (step2Payload?.languageId as number | undefined) ??\n      profile?.nativeLanguage?.id ?? null,\n    targetLanguages: step2Payload?.targetLanguages ?? [],\n    motivationIds: step3Payload?.motivationIds ?? step3Payload?.motivations ?? [],\n    topicIds: step4Payload?.topicIds ?? step3Payload?.topicIds ?? [],\n    learningStyleIds: step4Payload?.learningStyleIds ?? [],\n    learningExpectationIds: step4Payload?.learningExpectationIds ?? [],\n    completed: progress.completed\n  };\n\n  return {\n    userOnboardingData,\n    availableOptions: {\n      languages,\n      motivations,\n      topics,\n      learningStyles: learningStyles.map((item) => ({\n        id: item.learning_style_id,\n        name: item.learning_style_name,\n        description: item.description ?? undefined\n      })),\n      learningExpectations: learningExpectations.map((item) => ({\n        id: item.learning_expectation_id,\n        name: item.learning_expectation_name,\n        description: item.description ?? undefined\n      }))\n    }\n  };\n}\n\nonboardingRoutes.get('/languages', async (c) => {\n  try {\n    const data = await listLanguageOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load language options');\n  }\n});\n\nonboardingRoutes.get('/language/languages', async (c) => {\n  try {\n    const data = await listLanguageOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load language options');\n  }\n});\n\nonboardingRoutes.get('/language/level-types-language', async (c) => {\n  try {\n    const rows = await listLanguageLevelTypes(c.env, 'LANGUAGE');\n    const data = rows.map((row) => ({\n      id: row.lang_level_id,\n      name: row.lang_level_name,\n      description: row.description ?? undefined,\n      category: row.category ?? undefined,\n      order: row.level_order ?? undefined\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load language level types');\n  }\n});\n\nonboardingRoutes.get('/language/level-types-partner', async (c) => {\n  try {\n    const rows = await listLanguageLevelTypes(c.env, 'PARTNER');\n    const data = rows.map((row) => ({\n      id: row.lang_level_id,\n      name: row.lang_level_name,\n      description: row.description ?? undefined,\n      category: row.category ?? undefined,\n      order: row.level_order ?? undefined\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load partner level types');\n  }\n});\n\nonboardingRoutes.get('/interests', async (c) => {\n  try {\n    const data = await listTopicOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load interests');\n  }\n});\n\nonboardingRoutes.get('/interest/motivations', async (c) => {\n  try {\n    const data = await listMotivationOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load motivation options');\n  }\n});\n\nonboardingRoutes.get('/interest/topics', async (c) => {\n  try {\n    const data = await listTopicOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load interests');\n  }\n});\n\nonboardingRoutes.get('/interest/learning-styles', async (c) => {\n  try {\n    const rows = await listLearningStyleOptions(c.env);\n    const data = rows.map((item) => ({\n      learningStyleId: item.learning_style_id,\n      learningStyleName: item.learning_style_name,\n      description: item.description ?? undefined\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load learning style options');\n  }\n});\n\nonboardingRoutes.get('/interest/learning-expectations', async (c) => {\n  try {\n    const rows = await listLearningExpectationOptions(c.env);\n    const data = rows.map((item) => ({\n      learningExpectationId: item.learning_expectation_id,\n      learningExpectationName: item.learning_expectation_name,\n      description: item.description ?? undefined\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load learning expectation options');\n  }\n});\n\nonboardingRoutes.get('/partner-preferences', async (c) => {\n  try {\n    const data = await listPartnerOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load partner preferences');\n  }\n});\n\nonboardingRoutes.get('/partner/personalities', async (c) => {\n  try {\n    const rows = await listPartnerOptions(c.env);\n    const data = rows.map((item) => ({\n      partnerPersonalityId: item.partner_personality_id,\n      partnerPersonality: item.partner_personality,\n      description: item.description ?? undefined,\n      id: item.partner_personality_id,\n      name: item.partner_personality\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load partner personalities');\n  }\n});\n\nonboardingRoutes.get('/partner/gender-type', async (c) => {\n  // NOTE: \uB808\uAC70\uC2DC \uBC31\uC5D4\uB4DC\uC640 \uC751\uB2F5 \uC2A4\uD0A4\uB9C8\uB97C \uB9DE\uCD94\uAE30 \uC704\uD574 name/description \uD544\uB4DC\uB9CC \uBC18\uD658\n  const genderTypes = [\n    { name: 'MALE', description: '\uB0A8\uC131' },\n    { name: 'FEMALE', description: '\uC5EC\uC131' },\n    { name: 'ANY', description: '\uC0C1\uAD00\uC5C6\uC74C' }\n  ];\n\n  return successResponse(c, genderTypes);\n});\n\nonboardingRoutes.get('/schedule/communication-methods', async (c) => {\n  try {\n    const methods = await listCommunicationMethodOptions(c.env);\n    const data = methods.map((item) => ({\n      communicationMethodId: item.id,\n      code: item.code,\n      name: item.code,\n      label: item.displayName,\n      displayName: item.displayName,\n      description: item.description ?? undefined,\n      sortOrder: item.sortOrder\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load communication methods');\n  }\n});\n\nonboardingRoutes.get('/schedule/daily-methods', async (c) => {\n  try {\n    const options = await listDailyMinuteOptions(c.env);\n    const data = options.map((item, index) => ({\n      id: index + 1,\n      name: item.code,\n      code: item.code,\n      minutes: item.minutes,\n      label: item.displayName,\n      displayName: item.displayName,\n      description: item.description ?? item.displayName,\n      sortOrder: item.sortOrder\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load daily minute options');\n  }\n});\n\nonboardingRoutes.get('/schedule-options', async (c) => {\n  try {\n    const data = await listScheduleOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load schedule options');\n  }\n});\n\nonboardingRoutes.get('/motivation-options', async (c) => {\n  try {\n    const data = await listMotivationOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load motivation options');\n  }\n});\n\nonboardingRoutes.use('/*', requireAuth);\nonboardingRoutes.use('/steps/*', requireAuth);\nonboardingRoutes.use('/steps', requireAuth);\n\nonboardingRoutes.get('/schedule/group-sizes', async (c) => {\n  try {\n    const rows = await listGroupSizeOptions(c.env);\n    const data = rows.map((item) => ({\n      groupSizeId: item.group_size_id,\n      groupSize: item.group_size,\n      id: item.group_size_id,\n      name: item.group_size,\n      label: item.group_size\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load group size options');\n  }\n});\n\nonboardingRoutes.post('/partner/gender', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const body = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const raw =\n    typeof body.partnerGenderType === 'string'\n      ? body.partnerGenderType\n      : typeof body.partnerGender === 'string'\n        ? body.partnerGender\n        : typeof body.genderType === 'string'\n          ? body.genderType\n          : undefined;\n\n  if (!raw) {\n    throw new AppError('partner gender is required', 400, 'INVALID_PAYLOAD');\n  }\n\n  const normalized = String(raw).trim().toUpperCase();\n  const allowed = new Set(['MALE', 'FEMALE', 'ANY', 'OTHER']);\n  if (!allowed.has(normalized)) {\n    throw new AppError('invalid partner gender type', 400, 'INVALID_PAYLOAD');\n  }\n\n  try {\n    await updateUserProfile(c.env, userId, { partnerGender: normalized });\n    const summary = await loadOnboardingSummary(c.env, userId);\n    return successResponse(c, {\n      partnerGender: normalized,\n      partnerPreferences: summary.partnerPreferences\n    });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save partner gender');\n  }\n});\n\nonboardingRoutes.post('/schedule/communication-method', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const body = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const raw =\n    typeof (body as any).communicationMethodType === 'string'\n      ? (body as any).communicationMethodType\n      : typeof (body as any).communicationMethod === 'string'\n        ? (body as any).communicationMethod\n        : typeof (body as any).methodCode === 'string'\n          ? (body as any).methodCode\n          : typeof (body as any).code === 'string'\n            ? (body as any).code\n            : typeof (body as any).value === 'string'\n              ? (body as any).value\n              : Array.isArray(body) && body.length > 0 && typeof body[0] === 'string'\n                ? body[0]\n                : undefined;\n\n  if (!raw) {\n    throw new AppError('communication method is required', 400, 'INVALID_PAYLOAD');\n  }\n\n  const normalized = String(raw).trim().toUpperCase();\n  if (!normalized) {\n    throw new AppError('communication method is required', 400, 'INVALID_PAYLOAD');\n  }\n\n  const methods = await listCommunicationMethodOptions(c.env);\n  const selected = methods.find((item) => item.code.toUpperCase() === normalized);\n  if (!selected) {\n    throw new AppError('invalid communication method', 400, 'INVALID_COMMUNICATION_METHOD');\n  }\n\n  try {\n    await updateUserProfile(c.env, userId, { communicationMethod: normalized });\n    await saveOnboardingStep(c.env, userId, 5, { communicationMethod: normalized }, TOTAL_ONBOARDING_STEPS);\n    const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n    return successResponse(c, {\n      communicationMethod: normalized,\n      label: selected.displayName,\n      progress\n    });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save communication method');\n  }\n});\n\nonboardingRoutes.post('/schedule/daily-minute', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const payload = (await c.req.json().catch(() => ({}))) as any;\n\n  const candidates: unknown[] = [];\n  const pushCandidate = (value: unknown) => {\n    if (value === undefined || value === null) {\n      return;\n    }\n    if (Array.isArray(value)) {\n      value.forEach((nested) => pushCandidate(nested));\n      return;\n    }\n    candidates.push(value);\n  };\n\n  const lookupKeys = [\n    'dailyMinutesType',\n    'dailyMinuteType',\n    'dailyMinute',\n    'dailyMinutes',\n    'code',\n    'value',\n    'selection'\n  ] as const;\n\n  for (const key of lookupKeys) {\n    pushCandidate(payload?.[key]);\n  }\n\n  // Fallback: if the payload itself is an array (legacy clients)\n  pushCandidate(payload);\n\n  const stringCandidate = candidates.find(\n    (item): item is string => typeof item === 'string' && item.trim().length > 0\n  );\n\n  const numericCandidate = candidates.find((item): item is number => typeof item === 'number' && Number.isFinite(item))\n    ?? (() => {\n      if (!stringCandidate) {\n        return undefined;\n      }\n      const maybeNumber = Number(stringCandidate.trim());\n      return Number.isFinite(maybeNumber) ? maybeNumber : undefined;\n    })();\n\n  if (!stringCandidate && numericCandidate === undefined) {\n    throw new AppError('daily minute selection is required', 400, 'INVALID_PAYLOAD');\n  }\n\n  const options = await listDailyMinuteOptions(c.env);\n\n  let selectedOption = undefined;\n  if (stringCandidate) {\n    const normalizedCode = stringCandidate.trim().toUpperCase();\n    selectedOption = options.find((item) => item.code.toUpperCase() === normalizedCode);\n  }\n\n  if (!selectedOption && numericCandidate !== undefined) {\n    const normalizedMinutes = Math.round(numericCandidate);\n    selectedOption = options.find((item) => item.minutes === normalizedMinutes);\n  }\n\n  if (!selectedOption) {\n    throw new AppError('invalid daily minute option', 400, 'INVALID_DAILY_MINUTE_OPTION');\n  }\n\n  const normalizedCode = selectedOption.code.toUpperCase();\n\n  try {\n    await updateUserProfile(c.env, userId, { dailyMinute: normalizedCode });\n    await saveOnboardingStep(c.env, userId, 7, { dailyMinute: normalizedCode }, TOTAL_ONBOARDING_STEPS);\n    const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n\n    return successResponse(c, {\n      dailyMinute: normalizedCode,\n      minutes: selectedOption.minutes,\n      label: selectedOption.displayName,\n      description: selectedOption.description ?? undefined,\n      progress\n    });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save daily minute preference');\n  }\n});\n\nonboardingRoutes.post('/schedule/group-size', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const body = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const candidates = Array.isArray(body)\n    ? body\n    : (body as any).groupSizeIds ?? (body as any).group_size_ids ?? (body as any).ids ?? [];\n\n  const normalized = Array.from(new Set((Array.isArray(candidates) ? candidates : []).map((value) => Number(value)))).filter((value): value is number => Number.isFinite(value));\n\n  if (!normalized.length) {\n    throw new AppError('groupSizeIds array required', 400, 'INVALID_PAYLOAD');\n  }\n\n  try {\n    await upsertOnboardingGroupSizes(c.env, userId, normalized);\n    await saveOnboardingStep(c.env, userId, 6, { groupSizeIds: normalized }, TOTAL_ONBOARDING_STEPS);\n    const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n    const summary = await loadOnboardingSummary(c.env, userId);\n\n    return successResponse(c, {\n      groupSizeIds: normalized,\n      groupSizes: summary.groupSizes,\n      progress\n    });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save group sizes');\n  }\n});\n\nconst STATIC_STEP_NUMBERS = [1, 2, 3, 4];\n\nfor (const staticStep of STATIC_STEP_NUMBERS) {\n  onboardingRoutes.post(`/steps/${staticStep}/save`, async (c) => {\n    const userId = c.get('userId');\n    if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n    const payload = normalizeStepPayload(await c.req.json().catch(() => ({})) as Record<string, unknown>);\n    await saveOnboardingStep(c.env, userId, staticStep, payload, TOTAL_ONBOARDING_STEPS);\n    const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n    return successResponse(c, { saved: true, progress });\n  });\n}\n\nonboardingRoutes.post('/steps/:step/save', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const step = Number(c.req.param('step'));\n  if (!Number.isInteger(step) || step < 1 || step > TOTAL_ONBOARDING_STEPS) {\n    throw new AppError('Invalid onboarding step', 400, 'INVALID_PATH_PARAM');\n  }\n  const body = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const payload = normalizeStepPayload(body);\n  await saveOnboardingStep(c.env, userId, step, payload, TOTAL_ONBOARDING_STEPS);\n  const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n  return successResponse(c, { saved: true, progress });\n});\n\nonboardingRoutes.post('/steps/:step/skip', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const step = Number(c.req.param('step'));\n  if (!Number.isInteger(step) || step < 1 || step > TOTAL_ONBOARDING_STEPS) {\n    throw new AppError('Invalid onboarding step', 400, 'INVALID_PATH_PARAM');\n  }\n  await saveOnboardingStep(c.env, userId, step, { skipped: true }, TOTAL_ONBOARDING_STEPS);\n  const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n  return successResponse(c, { skipped: true, progress });\n});\n\nonboardingRoutes.post('/state/:step', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const step = Number(c.req.param('step'));\n  if (!Number.isInteger(step) || step < 1 || step > TOTAL_ONBOARDING_STEPS) {\n    throw new AppError('Invalid onboarding step', 400, 'INVALID_PATH_PARAM');\n  }\n  const body = (await c.req.json().catch(() => ({}))) as Record<string, unknown>;\n  try {\n    await saveOnboardingStep(c.env, userId, step, body, TOTAL_ONBOARDING_STEPS);\n    const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n    return successResponse(c, { saved: true, progress });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save onboarding step');\n  }\n});\n\nonboardingRoutes.get('/state/:step', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const step = Number(c.req.param('step'));\n  if (!Number.isInteger(step) || step < 1 || step > TOTAL_ONBOARDING_STEPS) {\n    throw new AppError('Invalid onboarding step', 400, 'INVALID_PATH_PARAM');\n  }\n  try {\n    const state = await getOnboardingStep(c.env, userId, step);\n    return successResponse(c, state ?? {});\n  } catch (error) {\n    throw wrapError(error, 'Failed to load onboarding step');\n  }\n});\n\nonboardingRoutes.get('/steps/current', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n  return successResponse(c, {\n    currentStep: progress.currentStep,\n    progress\n  });\n});\n\nonboardingRoutes.get('/progress', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n  return successResponse(c, progress);\n});\n\nonboardingRoutes.get('/data', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  try {\n    const data = await buildOnboardingData(c.env, userId);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load onboarding data');\n  }\n});\n\nonboardingRoutes.get('/state/progress', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  try {\n    const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n    return successResponse(c, progress);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load onboarding progress');\n  }\n});\n\nonboardingRoutes.post('/state/session', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = (await c.req.json().catch(() => ({}))) as Record<string, unknown>;\n  try {\n    await saveOnboardingSessionDraft(c.env, userId, body);\n    return successResponse(c, { saved: true });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save onboarding session');\n  }\n});\n\nonboardingRoutes.get('/state/session', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  try {\n    const draft = await getOnboardingSessionDraft(c.env, userId);\n    return successResponse(c, draft ?? {});\n  } catch (error) {\n    throw wrapError(error, 'Failed to load onboarding session');\n  }\n});\n\nonboardingRoutes.post('/state/reset', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  try {\n    await clearOnboardingState(c.env, userId);\n    await resetOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n    return successResponse(c, { reset: true });\n  } catch (error) {\n    throw wrapError(error, 'Failed to reset onboarding state');\n  }\n});\n\nonboardingRoutes.post('/languages', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n\n  const body = await c.req.json();\n  if (!Array.isArray(body)) {\n    throw new AppError('Expected array payload', 400, 'INVALID_PAYLOAD');\n  }\n\n  const payload = body\n    .map((item) => ({\n      languageId: Number(item.languageId ?? item.language_id),\n      currentLevelId: item.currentLevelId ?? item.current_level_id ?? undefined,\n      targetLevelId: item.targetLevelId ?? item.target_level_id ?? undefined\n    }))\n    .filter((item) => Number.isFinite(item.languageId));\n\n  try {\n    await upsertOnboardingLanguages(c.env, userId, payload);\n    return successResponse(c, { count: payload.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save language selections');\n  }\n});\n\nonboardingRoutes.post('/language/native-language', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const languageId = Number(body.languageId ?? body.nativeLanguageId);\n  if (!Number.isFinite(languageId)) {\n    throw new AppError('languageId is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { nativeLanguageId: languageId });\n  return successResponse(c, { languageId });\n});\n\nonboardingRoutes.post('/language/language-level', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const languages = Array.isArray(body?.languages) ? (body.languages as any[]) : [];\n  const payload: Array<{ languageId: number; currentLevelId?: number; targetLevelId?: number }> = [];\n  for (const raw of languages) {\n    const languageId = Number(raw.languageId ?? raw.language_id);\n    if (!Number.isFinite(languageId)) {\n      continue;\n    }\n    payload.push({\n      languageId,\n      currentLevelId: raw.currentLevelId ?? raw.current_level_id ?? undefined,\n      targetLevelId: raw.targetLevelId ?? raw.target_level_id ?? undefined\n    });\n  }\n  await upsertOnboardingLanguages(c.env, userId, payload);\n  return successResponse(c, { count: payload.length });\n});\n\nonboardingRoutes.post('/interests', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const topicIds = Array.isArray(body) ? body : body?.topicIds;\n  if (!Array.isArray(topicIds)) {\n    throw new AppError('topicIds array required', 400, 'INVALID_PAYLOAD');\n  }\n  const casted = topicIds.map(Number).filter((id) => Number.isFinite(id));\n  try {\n    await upsertOnboardingTopics(c.env, userId, casted);\n    return successResponse(c, { count: casted.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save interests');\n  }\n});\n\nonboardingRoutes.post('/interest/motivation', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const motivationIds = Array.isArray((body as any)?.motivationIds)\n    ? (body as any).motivationIds\n    : Array.isArray(body)\n      ? body\n      : [];\n  const normalized: Array<{ motivationId: number; priority: number }> = [];\n  motivationIds.forEach((value: unknown, index: number) => {\n    const motivationId = Number(value);\n    if (!Number.isFinite(motivationId)) {\n      return;\n    }\n    normalized.push({\n      motivationId,\n      priority: index + 1\n    });\n  });\n  await upsertOnboardingMotivations(c.env, userId, normalized);\n  return successResponse(c, { count: normalized.length });\n});\n\nonboardingRoutes.post('/interest/topic', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const topicIds: unknown[] = Array.isArray((body as any)?.topicIds)\n    ? (body as any).topicIds\n    : Array.isArray(body)\n      ? (body as unknown[])\n      : [];\n  const normalized = topicIds\n    .map((value: unknown) => Number(value))\n    .filter((id: number): id is number => Number.isFinite(id));\n  await upsertOnboardingTopics(c.env, userId, normalized);\n  return successResponse(c, { count: normalized.length });\n});\n\nonboardingRoutes.post('/interest/learning-style', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({})) as any;\n  const raw: unknown[] = Array.isArray(body?.learningStyleIds)\n    ? body.learningStyleIds\n    : Array.isArray(body)\n      ? (body as unknown[])\n      : [];\n  const normalized = raw\n    .map((value: unknown): number => Number(value))\n    .filter((value: number): value is number => Number.isFinite(value));\n\n  try {\n    await upsertOnboardingLearningStyles(c.env, userId, normalized);\n    return successResponse(c, { count: normalized.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save learning styles');\n  }\n});\n\nonboardingRoutes.post('/interest/learning-expectation', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({})) as any;\n  const raw: unknown[] = Array.isArray(body?.learningExpectationIds)\n    ? body.learningExpectationIds\n    : Array.isArray(body)\n      ? (body as unknown[])\n      : [];\n  const normalized = raw\n    .map((value: unknown): number => Number(value))\n    .filter((value: number): value is number => Number.isFinite(value));\n\n  try {\n    await upsertOnboardingLearningExpectations(c.env, userId, normalized);\n    return successResponse(c, { count: normalized.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save learning expectations');\n  }\n});\n\nonboardingRoutes.post('/partner-preferences', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const preferences = Array.isArray(body) ? body : body?.partnerPreferences;\n  if (!Array.isArray(preferences)) {\n    throw new AppError('partner preferences array required', 400, 'INVALID_PAYLOAD');\n  }\n  const normalized = preferences\n    .map((item: any) =>\n      typeof item === 'number'\n        ? { partnerPersonalityId: item }\n        : {\n            partnerPersonalityId: Number(item.partnerPersonalityId ?? item.partner_personality_id),\n            partnerGender: item.partnerGender ?? item.partner_gender\n          }\n    )\n    .filter((item): item is { partnerPersonalityId: number; partnerGender?: string } => Number.isFinite(item.partnerPersonalityId));\n  try {\n    await upsertOnboardingPartner(c.env, userId, normalized);\n    return successResponse(c, { count: normalized.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save partner preferences');\n  }\n});\n\nonboardingRoutes.post('/partner/personality', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const raw = Array.isArray((body as any).personalPartnerIds)\n    ? (body as any).personalPartnerIds\n    : Array.isArray((body as any).partnerPersonalityIds)\n      ? (body as any).partnerPersonalityIds\n      : Array.isArray(body)\n        ? body\n        : [];\n  if (!Array.isArray(raw) || raw.length === 0) {\n    await upsertOnboardingPartner(c.env, userId, []);\n    return successResponse(c, { count: 0 });\n  }\n  const normalized = raw\n    .map((item: any) =>\n      typeof item === 'number'\n        ? { partnerPersonalityId: item }\n        : {\n            partnerPersonalityId: Number(item.partnerPersonalityId ?? item.partner_personality_id ?? item.id),\n            partnerGender: item.partnerGender ?? item.partner_gender ?? undefined\n          }\n    )\n    .filter((item) => Number.isFinite(item.partnerPersonalityId)) as Array<{ partnerPersonalityId: number; partnerGender?: string }>;\n\n  try {\n    await upsertOnboardingPartner(c.env, userId, normalized);\n    return successResponse(c, { count: normalized.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save partner personalities');\n  }\n});\n\nonboardingRoutes.post('/schedules', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const schedules = Array.isArray(body) ? body : body?.schedules;\n  if (!Array.isArray(schedules)) {\n    throw new AppError('schedules array required', 400, 'INVALID_PAYLOAD');\n  }\n  const normalized: Array<{ scheduleId: number; dayOfWeek: string; classTime?: string }> = [];\n  for (const raw of schedules as any[]) {\n    const scheduleId = Number(raw.scheduleId ?? raw.schedule_id);\n    if (!Number.isFinite(scheduleId)) {\n      continue;\n    }\n    normalized.push({\n      scheduleId,\n      dayOfWeek: raw.dayOfWeek ?? raw.day_of_week ?? 'UNKNOWN',\n      classTime: raw.classTime ?? raw.class_time ?? undefined\n    });\n  }\n  try {\n    await upsertOnboardingSchedules(c.env, userId, normalized);\n    return successResponse(c, { count: normalized.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save schedules');\n  }\n});\n\nonboardingRoutes.post('/schedule', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const schedules = Array.isArray((body as any)?.schedules) ? (body as any).schedules : [];\n  const normalized: Array<{ scheduleId: number; dayOfWeek: string; classTime?: string }> = [];\n  for (const raw of schedules as any[]) {\n    const scheduleId = Number(raw.scheduleId ?? raw.schedule_id);\n    if (!Number.isFinite(scheduleId)) {\n      continue;\n    }\n    normalized.push({\n      scheduleId,\n      dayOfWeek: raw.dayOfWeek ?? raw.day_of_week ?? 'UNKNOWN',\n      classTime: raw.classTime ?? raw.class_time ?? undefined\n    });\n  }\n  await upsertOnboardingSchedules(c.env, userId, normalized);\n  return successResponse(c, { count: normalized.length });\n});\n\nonboardingRoutes.post('/motivations', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const motivations = Array.isArray(body) ? body : body?.motivationIds;\n  if (!Array.isArray(motivations)) {\n    throw new AppError('motivationIds array required', 400, 'INVALID_PAYLOAD');\n  }\n  const normalized: Array<{ motivationId: number; priority?: number }> = [];\n  (motivations as any[]).forEach((raw, index) => {\n    const motivationId = typeof raw === 'number'\n      ? raw\n      : Number(raw.motivationId ?? raw.motivation_id);\n    if (!Number.isFinite(motivationId)) {\n      return;\n    }\n    normalized.push({\n      motivationId,\n      priority: raw?.priority ?? index + 1\n    });\n  });\n  try {\n    await upsertOnboardingMotivations(c.env, userId, normalized);\n    return successResponse(c, { count: normalized.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save motivations');\n  }\n});\nonboardingRoutes.get('/summary', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  try {\n    const summary = await loadOnboardingSummary(c.env, userId);\n    return successResponse(c, summary);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load onboarding summary');\n  }\n});\n\nonboardingRoutes.post('/complete', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  try {\n    await completeOnboarding(c.env, userId, body ?? {});\n    await clearOnboardingState(c.env, userId);\n    return successResponse(c, { completed: true });\n  } catch (error) {\n    throw wrapError(error, 'Failed to complete onboarding');\n  }\n});\n\nexport default onboardingRoutes;\n", "import type { Env } from '../index';\n\nconst PREFIX = 'onboarding';\nconst STEP_PREFIX = `${PREFIX}:step`;\nconst PROGRESS_PREFIX = `${PREFIX}:progress`;\nconst SESSION_PREFIX = `${PREFIX}:session`;\nconst DEFAULT_STEP_TTL = 60 * 60 * 24 * 7; // 7\uC77C\nconst SESSION_TTL = 60 * 60 * 2; // 2\uC2DC\uAC04\n\ninterface StepData {\n  stepNumber: number;\n  savedAt: string;\n  isCompleted: boolean;\n  payload: Record<string, unknown>;\n}\n\ninterface ProgressData {\n  completedSteps: Record<string, boolean>;\n  currentStep: number;\n  progressPercentage: number;\n  totalSteps: number;\n  lastUpdatedAt: string;\n  completed: boolean;\n  estimatedMinutesRemaining?: number;\n}\n\ninterface SessionDraft {\n  lastAutoSavedAt: string;\n  payload: Record<string, unknown>;\n}\n\nfunction buildStepKey(userId: string, stepNumber: number): string {\n  return `${STEP_PREFIX}:${userId}:${stepNumber}`;\n}\n\nfunction buildProgressKey(userId: string): string {\n  return `${PROGRESS_PREFIX}:${userId}`;\n}\n\nfunction buildSessionKey(userId: string): string {\n  return `${SESSION_PREFIX}:${userId}`;\n}\n\nexport async function saveOnboardingStep(\n  env: Env,\n  userId: string,\n  stepNumber: number,\n  payload: Record<string, unknown>,\n  totalSteps: number,\n  estimatedMinutesRemaining?: number\n): Promise<void> {\n  const stepKey = buildStepKey(userId, stepNumber);\n  const nowIso = new Date().toISOString();\n\n  const stepData: StepData = {\n    stepNumber,\n    savedAt: nowIso,\n    isCompleted: true,\n    payload\n  };\n\n  await env.CACHE.put(stepKey, JSON.stringify(stepData), { expirationTtl: DEFAULT_STEP_TTL });\n\n  await updateOnboardingProgress(env, userId, stepNumber, totalSteps, estimatedMinutesRemaining);\n}\n\nexport async function getOnboardingStep(\n  env: Env,\n  userId: string,\n  stepNumber: number\n): Promise<StepData | null> {\n  const raw = await env.CACHE.get(buildStepKey(userId, stepNumber), { type: 'json' }) as StepData | null;\n  return raw ?? null;\n}\n\nexport async function saveOnboardingSessionDraft(\n  env: Env,\n  userId: string,\n  payload: Record<string, unknown>\n): Promise<void> {\n  const draft: SessionDraft = {\n    lastAutoSavedAt: new Date().toISOString(),\n    payload\n  };\n\n  await env.CACHE.put(buildSessionKey(userId), JSON.stringify(draft), { expirationTtl: SESSION_TTL });\n}\n\nexport async function getOnboardingSessionDraft(\n  env: Env,\n  userId: string\n): Promise<SessionDraft | null> {\n  const raw = await env.CACHE.get(buildSessionKey(userId), { type: 'json' }) as SessionDraft | null;\n  return raw ?? null;\n}\n\nexport async function clearOnboardingState(env: Env, userId: string): Promise<void> {\n  const progressKey = buildProgressKey(userId);\n  const list = await env.CACHE.list({ prefix: `${STEP_PREFIX}:${userId}` });\n\n  await Promise.all([\n    env.CACHE.delete(progressKey),\n    env.CACHE.delete(buildSessionKey(userId)),\n    ...list.keys.map((key) => env.CACHE.delete(key.name))\n  ]);\n}\n\nexport async function getOnboardingProgress(\n  env: Env,\n  userId: string,\n  totalSteps: number\n): Promise<ProgressData> {\n  const progressKey = buildProgressKey(userId);\n  const raw = await env.CACHE.get(progressKey, { type: 'json' }) as ProgressData | null;\n\n  if (raw) {\n    return raw;\n  }\n\n  return {\n    completedSteps: {},\n    currentStep: 1,\n    progressPercentage: 0,\n    totalSteps,\n    lastUpdatedAt: new Date().toISOString(),\n    completed: false\n  };\n}\n\nasync function updateOnboardingProgress(\n  env: Env,\n  userId: string,\n  completedStep: number,\n  totalSteps: number,\n  estimatedMinutesRemaining?: number\n): Promise<void> {\n  const progressKey = buildProgressKey(userId);\n  const current = await getOnboardingProgress(env, userId, totalSteps);\n\n  const completedSteps = { ...current.completedSteps, [`step${completedStep}`]: true };\n  const completedCount = Object.values(completedSteps).filter(Boolean).length;\n  const progressPercentage = Math.min((completedCount / totalSteps) * 100, 100);\n\n  const progress: ProgressData = {\n    completedSteps,\n    currentStep: Math.min(completedStep + 1, totalSteps),\n    progressPercentage,\n    totalSteps,\n    lastUpdatedAt: new Date().toISOString(),\n    completed: completedCount >= totalSteps,\n    estimatedMinutesRemaining\n  };\n\n  await env.CACHE.put(progressKey, JSON.stringify(progress), {\n    expirationTtl: DEFAULT_STEP_TTL\n  });\n}\nexport async function resetOnboardingProgress(env: Env, userId: string, totalSteps: number): Promise<void> {\n  const progress: ProgressData = {\n    completedSteps: {},\n    currentStep: 1,\n    progressPercentage: 0,\n    totalSteps,\n    lastUpdatedAt: new Date().toISOString(),\n    completed: false\n  };\n  await env.CACHE.put(buildProgressKey(userId), JSON.stringify(progress), {\n    expirationTtl: DEFAULT_STEP_TTL\n  });\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse, paginatedResponse } from '../utils/response';\nimport {\n  createSession,\n  listSessions,\n  getSessionById,\n  listUserSessions,\n  listPublicSessions,\n  listSessionsByLanguage,\n  listSessionsByType,\n  listAvailableSessions,\n  bookSession,\n  joinSession,\n  cancelBooking,\n  listUserBookings,\n  getUserCalendar,\n  startSession,\n  endSession,\n  rescheduleSession,\n  submitSessionFeedback,\n  listSessionHistory,\n  getSessionStats,\n  listUpcomingSessions,\n  getSessionParticipants,\n  generateSessionInvite,\n  acceptSessionInvite,\n  getSessionNotifications,\n  updateSessionNotifications,\n  requestSessionRecording,\n  stopSessionRecording,\n  getSessionRecording,\n  getSessionSummary,\n  getSessionTranscript,\n  cancelSession\n} from '../services/session';\nimport type { SessionCreatePayload, SessionNotificationSettings } from '../types';\n\nconst sessionsRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\nfunction getPaginationParams(c: any) {\n  const page = Math.max(Number(c.req.query('page') ?? '1'), 1);\n  const size = Math.max(Math.min(Number(c.req.query('size') ?? '20'), 50), 1);\n  return { page, size };\n}\n\nfunction parseSessionId(c: any): number {\n  const sessionId = Number(c.req.param('sessionId'));\n  if (!Number.isFinite(sessionId)) throw new AppError('Invalid sessionId', 400, 'INVALID_PATH_PARAM');\n  return sessionId;\n}\n\nfunction normalizeCreatePayload(body: any): SessionCreatePayload {\n  if (!body || typeof body !== 'object') {\n    throw new AppError('Invalid payload', 400, 'INVALID_PAYLOAD');\n  }\n  const scheduledAt = typeof body.scheduledAt === 'string' ? body.scheduledAt : null;\n  if (!scheduledAt) {\n    throw new AppError('scheduledAt is required', 400, 'INVALID_PAYLOAD');\n  }\n  const sessionTypeRaw = typeof body.sessionType === 'string' ? body.sessionType : typeof body.type === 'string' ? body.type : null;\n  const sessionType = sessionTypeRaw ? String(sessionTypeRaw).toUpperCase() : 'VIDEO';\n  const durationMinutes = typeof body.durationMinutes === 'number'\n    ? body.durationMinutes\n    : typeof body.duration === 'number'\n      ? body.duration\n      : 30;\n\n  const payload: SessionCreatePayload = {\n    title: typeof body.title === 'string' ? body.title : typeof body.topic === 'string' ? body.topic : 'Study Session',\n    description: typeof body.description === 'string' ? body.description : typeof body.topic === 'string' ? body.topic : undefined,\n    sessionType,\n    languageCode: typeof body.languageCode === 'string' ? body.languageCode : typeof body.language === 'string' ? body.language : undefined,\n    skillFocus: typeof body.skillFocus === 'string' ? body.skillFocus : typeof body.targetLanguage === 'string' ? body.targetLanguage : undefined,\n    levelRequirement: typeof body.levelRequirement === 'string' ? body.levelRequirement : undefined,\n    scheduledAt,\n    durationMinutes,\n    maxParticipants: typeof body.maxParticipants === 'number' ? body.maxParticipants : undefined,\n    isRecurring: Boolean(body.isRecurring),\n    recurrencePattern: typeof body.recurrencePattern === 'string' ? body.recurrencePattern : undefined,\n    recurrenceEndDate: typeof body.recurrenceEndDate === 'string' ? body.recurrenceEndDate : undefined,\n    isPublic: typeof body.isPublic === 'boolean' ? body.isPublic : undefined,\n    tags: typeof body.tags === 'string' ? body.tags : undefined,\n    preparationNotes: typeof body.preparationNotes === 'string' ? body.preparationNotes : undefined,\n    meetingUrl: typeof body.meetingUrl === 'string' ? body.meetingUrl : undefined,\n    partnerId: typeof body.partnerId === 'string' ? body.partnerId : undefined,\n    topic: typeof body.topic === 'string' ? body.topic : undefined,\n    language: typeof body.language === 'string' ? body.language : undefined,\n    targetLanguage: typeof body.targetLanguage === 'string' ? body.targetLanguage : undefined,\n    webRtcRoomId: typeof body.webRtcRoomId === 'string' ? body.webRtcRoomId : undefined,\n    webRtcRoomType: typeof body.webRtcRoomType === 'string' ? body.webRtcRoomType : undefined,\n    duration: typeof body.duration === 'number' ? body.duration : undefined,\n    metadata: typeof body.metadata === 'object' && body.metadata !== null ? body.metadata : undefined\n  };\n\n  return payload;\n}\n\nsessionsRoutes.use('*', requireAuth);\n\nsessionsRoutes.get('/', async (c) => {\n  const { page, size } = getPaginationParams(c);\n  const status = c.req.query('status') ?? undefined;\n  const result = await listSessions(c.env, page, size, status);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.post('/', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const payload = normalizeCreatePayload(body);\n  const session = await createSession(c.env, userId, payload);\n  return successResponse(c, session);\n});\n\nsessionsRoutes.post('/:sessionId/join', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  const bookingMessage = typeof body?.bookingMessage === 'string' ? body.bookingMessage : undefined;\n  const session = await joinSession(c.env, userId, sessionId, bookingMessage);\n  return successResponse(c, session);\n});\n\nsessionsRoutes.post('/book', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.sessionId !== 'number') {\n    throw new AppError('sessionId is required', 400, 'INVALID_PAYLOAD');\n  }\n  const booking = await bookSession(c.env, userId, {\n    sessionId: body.sessionId,\n    bookingMessage: typeof body.bookingMessage === 'string' ? body.bookingMessage : undefined\n  });\n  return successResponse(c, booking);\n});\n\nsessionsRoutes.delete('/bookings/:bookingId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const bookingId = Number(c.req.param('bookingId'));\n  if (!Number.isFinite(bookingId)) throw new AppError('Invalid bookingId', 400, 'INVALID_PATH_PARAM');\n  const reason = c.req.query('reason') ?? undefined;\n  await cancelBooking(c.env, userId, bookingId, reason);\n  return successResponse(c, { success: true });\n});\n\nsessionsRoutes.get('/my-sessions', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listUserSessions(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/public', async (c) => {\n  const { page, size } = getPaginationParams(c);\n  const result = await listPublicSessions(c.env, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/language/:languageCode', async (c) => {\n  const { page, size } = getPaginationParams(c);\n  const languageCode = c.req.param('languageCode');\n  const result = await listSessionsByLanguage(c.env, languageCode, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/type/:sessionType', async (c) => {\n  const { page, size } = getPaginationParams(c);\n  const sessionType = c.req.param('sessionType');\n  const result = await listSessionsByType(c.env, sessionType, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/available', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listAvailableSessions(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/my-bookings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listUserBookings(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/history', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const partnerId = c.req.query('partnerId') ?? undefined;\n  const result = await listSessionHistory(c.env, userId, page, size, typeof partnerId === 'string' ? partnerId : undefined);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/stats', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const periodParam = (c.req.query('period') ?? 'month').toString().toLowerCase();\n  const period = periodParam === 'week' || periodParam === 'year' ? periodParam : 'month';\n  const stats = await getSessionStats(c.env, userId, period as 'week' | 'month' | 'year');\n  return successResponse(c, stats);\n});\n\nsessionsRoutes.get('/upcoming', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const limitRaw = Number(c.req.query('limit') ?? '5');\n  const limit = Math.max(1, Math.min(Number.isFinite(limitRaw) ? limitRaw : 5, 20));\n  const sessions = await listUpcomingSessions(c.env, userId, limit);\n  return successResponse(c, sessions);\n});\n\nsessionsRoutes.get('/calendar', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const start = c.req.query('startDate') ?? new Date().toISOString();\n  const end = c.req.query('endDate') ?? addDaysIso(7);\n  const calendar = await getUserCalendar(c.env, userId, start, end);\n  return successResponse(c, calendar);\n});\n\nsessionsRoutes.get('/:sessionId/notifications', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const settings = await getSessionNotifications(c.env, sessionId, userId);\n  return successResponse(c, settings);\n});\n\nsessionsRoutes.patch('/:sessionId/notifications', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  const settings = await updateSessionNotifications(c.env, sessionId, userId, body as Partial<SessionNotificationSettings>);\n  return successResponse(c, settings);\n});\n\nsessionsRoutes.post('/:sessionId/feedback', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({ }));\n  const summary = await submitSessionFeedback(c.env, userId, sessionId, body ?? {});\n  return successResponse(c, summary);\n});\n\nsessionsRoutes.patch('/:sessionId/reschedule', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  const session = await rescheduleSession(c.env, userId, sessionId, {\n    scheduledAt: typeof body?.scheduledAt === 'string' ? body.scheduledAt : undefined,\n    duration: typeof body?.duration === 'number' ? body.duration : undefined,\n    reason: typeof body?.reason === 'string' ? body.reason : undefined\n  });\n  return successResponse(c, session);\n});\n\nsessionsRoutes.post('/:sessionId/invite', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  const expiresInHours = Number(body?.expiresInHours ?? 24);\n  const invite = await generateSessionInvite(c.env, userId, sessionId, Number.isFinite(expiresInHours) ? expiresInHours : 24);\n  return successResponse(c, invite);\n});\n\nsessionsRoutes.post('/invite/accept', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const token = typeof body?.token === 'string' ? body.token : '';\n  if (!token) throw new AppError('Invite token is required', 400, 'INVALID_PAYLOAD');\n  const session = await acceptSessionInvite(c.env, userId, token);\n  return successResponse(c, session);\n});\n\nsessionsRoutes.post('/:sessionId/recording', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  const status = await requestSessionRecording(c.env, userId, sessionId, body ?? {});\n  return successResponse(c, status);\n});\n\nsessionsRoutes.post('/:sessionId/recording/stop', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const status = await stopSessionRecording(c.env, userId, sessionId);\n  return successResponse(c, status);\n});\n\nsessionsRoutes.get('/:sessionId/recording', async (c) => {\n  const sessionId = parseSessionId(c);\n  const status = await getSessionRecording(c.env, sessionId);\n  return successResponse(c, status);\n});\n\nsessionsRoutes.get('/:sessionId/participants', async (c) => {\n  const sessionId = parseSessionId(c);\n  const participants = await getSessionParticipants(c.env, sessionId);\n  return successResponse(c, participants);\n});\n\nsessionsRoutes.get('/:sessionId/summary', async (c) => {\n  const sessionId = parseSessionId(c);\n  const summary = await getSessionSummary(c.env, sessionId);\n  return successResponse(c, summary);\n});\n\nsessionsRoutes.get('/:sessionId/transcript', async (c) => {\n  const sessionId = parseSessionId(c);\n  const language = c.req.query('language') ?? 'default';\n  const transcript = await getSessionTranscript(c.env, sessionId, typeof language === 'string' ? language : 'default');\n  return successResponse(c, transcript);\n});\n\nsessionsRoutes.get('/:sessionId', async (c) => {\n  const userId = c.get('userId');\n  const sessionId = parseSessionId(c);\n  const session = await getSessionById(c.env, sessionId, userId);\n  return successResponse(c, session);\n});\n\nsessionsRoutes.post('/:sessionId/start', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  await startSession(c.env, userId, sessionId);\n  return successResponse(c, { success: true });\n});\n\nsessionsRoutes.post('/:sessionId/end', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  await endSession(c.env, userId, sessionId, {\n    duration: typeof body?.duration === 'number' ? body.duration : undefined,\n    notes: typeof body?.notes === 'string' ? body.notes : undefined,\n    rating: typeof body?.rating === 'number' ? body.rating : undefined\n  });\n  return successResponse(c, { success: true });\n});\n\nsessionsRoutes.post('/:sessionId/cancel', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  const reason = typeof body?.reason === 'string' ? body.reason : undefined;\n  await cancelSession(c.env, userId, sessionId, reason);\n  return successResponse(c, { success: true });\n});\n\nsessionsRoutes.delete('/:sessionId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const reason = c.req.query('reason') ?? undefined;\n  await cancelSession(c.env, userId, sessionId, typeof reason === 'string' ? reason : undefined);\n  return successResponse(c, { success: true });\n});\n\nfunction addDaysIso(days: number): string {\n  const d = new Date();\n  d.setUTCDate(d.getUTCDate() + days);\n  return d.toISOString();\n}\n\nexport default sessionsRoutes;\n", "import type { Env } from '../index';\nimport type {\n  SessionCreatePayload,\n  SessionResponseType,\n  SessionBookingResponseType,\n  SessionCalendarResponse,\n  SessionParticipantInfo,\n  SessionNotificationSettings,\n  SessionStatsResponseType,\n  SessionSummaryResponse,\n  SessionTranscriptResponse,\n  SessionRecordingStatus,\n  SessionInviteResponse\n} from '../types';\nimport { query, queryFirst, execute } from '../utils/db';\n\nconst SESSION_STATUS = {\n  SCHEDULED: 'SCHEDULED',\n  IN_PROGRESS: 'IN_PROGRESS',\n  COMPLETED: 'COMPLETED',\n  CANCELLED: 'CANCELLED'\n} as const;\n\nconst BOOKING_STATUS = {\n  CONFIRMED: 'CONFIRMED',\n  CANCELLED: 'CANCELLED',\n  NO_SHOW: 'NO_SHOW'\n} as const;\n\nconst DEFAULT_INVITE_EXPIRATION_HOURS = 24;\n\nconst NOTIFICATION_DEFAULTS: SessionNotificationSettings = {\n  reminderBefore: 30,\n  enableEmailReminder: true,\n  enablePushReminder: true,\n  enableSmsReminder: false,\n  updatedAt: new Date(0).toISOString()\n};\n\ninterface SessionNotificationRow {\n  session_id: number;\n  user_id: string;\n  reminder_before: number;\n  enable_email: number;\n  enable_push: number;\n  enable_sms: number;\n  updated_at: string;\n}\n\ninterface SessionRecordingRow {\n  session_id: number;\n  status: string;\n  record_audio: number;\n  record_video: number;\n  record_transcript: number;\n  download_url: string | null;\n  message: string | null;\n  updated_at: string;\n}\n\ninterface SessionInviteRow {\n  invite_token: string;\n  session_id: number;\n  inviter_user_id: string;\n  expires_at: string;\n  created_at: string;\n  used_at: string | null;\n  used_by: string | null;\n}\n\ninterface SessionSummaryRow {\n  session_id: number;\n  notes: string | null;\n  duration_minutes: number | null;\n  rating: number | null;\n  highlights: string | null;\n  action_items: string | null;\n  feedback: string | null;\n  updated_at: string;\n}\n\ninterface SessionTranscriptRow {\n  session_id: number;\n  language: string;\n  segments: string | null;\n  generated_at: string;\n  updated_at: string;\n}\n\nfunction intToBool(value: number | null | undefined): boolean {\n  return value === 1;\n}\n\nfunction boolToInt(value: boolean): number {\n  return value ? 1 : 0;\n}\n\nasync function fetchNotificationRow(env: Env, sessionId: number, userId: string): Promise<SessionNotificationRow | null> {\n  return queryFirst<SessionNotificationRow>(\n    env.DB,\n    `SELECT * FROM session_notifications WHERE session_id = ? AND user_id = ? LIMIT 1`,\n    [sessionId, userId]\n  );\n}\n\nasync function upsertNotificationRow(\n  env: Env,\n  sessionId: number,\n  userId: string,\n  settings: SessionNotificationSettings\n) {\n  await execute(\n    env.DB,\n    `INSERT INTO session_notifications (\n        session_id,\n        user_id,\n        reminder_before,\n        enable_email,\n        enable_push,\n        enable_sms,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?)\n      ON CONFLICT(session_id, user_id) DO UPDATE SET\n        reminder_before = excluded.reminder_before,\n        enable_email = excluded.enable_email,\n        enable_push = excluded.enable_push,\n        enable_sms = excluded.enable_sms,\n        updated_at = excluded.updated_at`,\n    [\n      sessionId,\n      userId,\n      settings.reminderBefore,\n      boolToInt(settings.enableEmailReminder),\n      boolToInt(settings.enablePushReminder),\n      boolToInt(settings.enableSmsReminder),\n      settings.updatedAt\n    ]\n  );\n}\n\nasync function fetchRecordingRow(env: Env, sessionId: number): Promise<SessionRecordingRow | null> {\n  return queryFirst<SessionRecordingRow>(\n    env.DB,\n    'SELECT * FROM session_recordings WHERE session_id = ? LIMIT 1',\n    [sessionId]\n  );\n}\n\nasync function upsertRecordingRow(env: Env, sessionId: number, status: SessionRecordingStatus) {\n  await execute(\n    env.DB,\n    `INSERT INTO session_recordings (\n        session_id,\n        status,\n        record_audio,\n        record_video,\n        record_transcript,\n        download_url,\n        message,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n      ON CONFLICT(session_id) DO UPDATE SET\n        status = excluded.status,\n        record_audio = excluded.record_audio,\n        record_video = excluded.record_video,\n        record_transcript = excluded.record_transcript,\n        download_url = excluded.download_url,\n        message = excluded.message,\n        updated_at = excluded.updated_at`,\n    [\n      sessionId,\n      status.status,\n      boolToInt(status.recordAudio),\n      boolToInt(status.recordVideo),\n      boolToInt(status.recordTranscript),\n      status.downloadUrl ?? null,\n      status.message ?? null,\n      status.updatedAt\n    ]\n  );\n}\n\nasync function fetchInviteRow(env: Env, token: string): Promise<SessionInviteRow | null> {\n  return queryFirst<SessionInviteRow>(\n    env.DB,\n    'SELECT * FROM session_invites WHERE invite_token = ? LIMIT 1',\n    [token]\n  );\n}\n\nasync function insertInviteRow(\n  env: Env,\n  record: SessionInviteRow\n) {\n  await execute(\n    env.DB,\n    `INSERT INTO session_invites (\n        invite_token,\n        session_id,\n        inviter_user_id,\n        expires_at,\n        created_at,\n        used_at,\n        used_by\n      ) VALUES (?, ?, ?, ?, ?, ?, ?)\n      ON CONFLICT(invite_token) DO UPDATE SET\n        session_id = excluded.session_id,\n        inviter_user_id = excluded.inviter_user_id,\n        expires_at = excluded.expires_at,\n        created_at = excluded.created_at,\n        used_at = excluded.used_at,\n        used_by = excluded.used_by`,\n    [\n      record.invite_token,\n      record.session_id,\n      record.inviter_user_id,\n      record.expires_at,\n      record.created_at,\n      record.used_at,\n      record.used_by\n    ]\n  );\n}\n\nasync function markInviteUsed(\n  env: Env,\n  token: string,\n  usedBy: string,\n  usedAt: string\n) {\n  await execute(\n    env.DB,\n    'UPDATE session_invites SET used_at = ?, used_by = ? WHERE invite_token = ?',\n    [usedAt, usedBy, token]\n  );\n}\n\nasync function fetchSummaryRow(env: Env, sessionId: number): Promise<SessionSummaryRow | null> {\n  return queryFirst<SessionSummaryRow>(\n    env.DB,\n    'SELECT * FROM session_summaries WHERE session_id = ? LIMIT 1',\n    [sessionId]\n  );\n}\n\nasync function upsertSummaryRow(env: Env, row: SessionSummaryRow) {\n  await execute(\n    env.DB,\n    `INSERT INTO session_summaries (\n        session_id,\n        notes,\n        duration_minutes,\n        rating,\n        highlights,\n        action_items,\n        feedback,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n      ON CONFLICT(session_id) DO UPDATE SET\n        notes = excluded.notes,\n        duration_minutes = excluded.duration_minutes,\n        rating = excluded.rating,\n        highlights = excluded.highlights,\n        action_items = excluded.action_items,\n        feedback = excluded.feedback,\n        updated_at = excluded.updated_at`,\n    [\n      row.session_id,\n      row.notes,\n      row.duration_minutes,\n      row.rating,\n      row.highlights,\n      row.action_items,\n      row.feedback,\n      row.updated_at\n    ]\n  );\n}\n\nasync function fetchTranscriptRow(\n  env: Env,\n  sessionId: number,\n  language: string\n): Promise<SessionTranscriptRow | null> {\n  return queryFirst<SessionTranscriptRow>(\n    env.DB,\n    'SELECT * FROM session_transcripts WHERE session_id = ? AND language = ? LIMIT 1',\n    [sessionId, language]\n  );\n}\n\nasync function upsertTranscriptRow(\n  env: Env,\n  row: SessionTranscriptRow\n) {\n  await execute(\n    env.DB,\n    `INSERT INTO session_transcripts (\n        session_id,\n        language,\n        segments,\n        generated_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?)\n      ON CONFLICT(session_id, language) DO UPDATE SET\n        segments = excluded.segments,\n        generated_at = excluded.generated_at,\n        updated_at = excluded.updated_at`,\n    [\n      row.session_id,\n      row.language,\n      row.segments,\n      row.generated_at,\n      row.updated_at\n    ]\n  );\n}\n\nfunction deserializeSummaryRow(row: SessionSummaryRow): SessionSummaryResponse {\n  const highlights = row.highlights ? safeParseStringArray(row.highlights) : [];\n  const actionItems = row.action_items ? safeParseStringArray(row.action_items) : [];\n  const feedback = row.feedback ? safeParseObject(row.feedback) : undefined;\n  return {\n    sessionId: row.session_id,\n    notes: row.notes ?? undefined,\n    durationMinutes: row.duration_minutes ?? undefined,\n    rating: row.rating ?? undefined,\n    highlights,\n    actionItems,\n    feedback,\n    updatedAt: row.updated_at\n  };\n}\n\nfunction serializeSummaryResponse(summary: SessionSummaryResponse): SessionSummaryRow {\n  return {\n    session_id: summary.sessionId,\n    notes: summary.notes ?? null,\n    duration_minutes: summary.durationMinutes ?? null,\n    rating: summary.rating ?? null,\n    highlights: JSON.stringify(summary.highlights ?? []),\n    action_items: JSON.stringify(summary.actionItems ?? []),\n    feedback: summary.feedback ? JSON.stringify(summary.feedback) : null,\n    updated_at: summary.updatedAt\n  };\n}\n\nfunction deserializeTranscriptRow(row: SessionTranscriptRow): SessionTranscriptResponse {\n  const segments = row.segments ? safeParseSegments(row.segments) : [];\n  return {\n    sessionId: row.session_id,\n    language: row.language,\n    segments,\n    generatedAt: row.generated_at\n  };\n}\n\nfunction safeParseStringArray(payload: string): string[] {\n  try {\n    const parsed = JSON.parse(payload);\n    return Array.isArray(parsed) ? parsed.map(String) : [];\n  } catch {\n    return [];\n  }\n}\n\nfunction safeParseObject(payload: string): Record<string, any> | undefined {\n  try {\n    const parsed = JSON.parse(payload);\n    return typeof parsed === 'object' && parsed !== null ? parsed : undefined;\n  } catch {\n    return undefined;\n  }\n}\n\nfunction safeParseSegments(payload: string): SessionTranscriptResponse['segments'] {\n  try {\n    const parsed = JSON.parse(payload);\n    if (Array.isArray(parsed)) {\n      return parsed.map((segment) => {\n        if (segment && typeof segment === 'object') {\n          return {\n            speaker: String(segment.speaker ?? ''),\n            content: String(segment.content ?? ''),\n            startTime: segment.startTime ?? undefined,\n            endTime: segment.endTime ?? undefined\n          };\n        }\n        return {\n          speaker: '',\n          content: String(segment ?? '')\n        };\n      });\n    }\n    return [];\n  } catch {\n    return [];\n  }\n}\n\ninterface SessionRow {\n  session_id: number;\n  host_user_id: string;\n  guest_user_id: string | null;\n  title: string;\n  description: string | null;\n  session_type: string;\n  language_code: string | null;\n  skill_focus: string | null;\n  level_requirement: string | null;\n  scheduled_at: string;\n  duration_minutes: number;\n  max_participants: number | null;\n  current_participants: number | null;\n  status: string;\n  meeting_url: string | null;\n  meeting_password: string | null;\n  is_recurring: number | null;\n  recurrence_pattern: string | null;\n  recurrence_end_date: string | null;\n  is_public: number | null;\n  tags: string | null;\n  preparation_notes: string | null;\n  started_at: string | null;\n  ended_at: string | null;\n  cancelled_at: string | null;\n  cancellation_reason: string | null;\n  created_at: string;\n  updated_at: string;\n  host_name: string | null;\n  host_profile_image: string | null;\n  guest_name: string | null;\n  guest_profile_image: string | null;\n}\n\ninterface BookingRow {\n  booking_id: number;\n  session_id: number;\n  user_id: string;\n  status: string;\n  booking_message: string | null;\n  cancelled_at: string | null;\n  cancellation_reason: string | null;\n  attended: number;\n  feedback_rating: number | null;\n  feedback_comment: string | null;\n  reminder_sent: number;\n  created_at: string;\n  session_title: string;\n  session_scheduled_at: string;\n  session_duration_minutes: number;\n  session_language_code: string | null;\n  host_user_id: string;\n  host_user_name: string | null;\n  host_user_profile_image: string | null;\n}\n\ninterface BookingWithSessionRow {\n  booking_id: number;\n  session_id: number;\n  user_id: string;\n  status: string;\n  current_participants: number | null;\n  guest_user_id: string | null;\n}\n\ninterface CalendarRow {\n  session_id: number;\n  title: string;\n  description: string | null;\n  scheduled_at: string;\n  duration_minutes: number;\n  status: string;\n  host_user_id: string;\n}\n\nfunction nowIso(): string {\n  return new Date().toISOString();\n}\n\nfunction mapSessionRow(row: any, currentUserId?: string): SessionResponseType {\n  const scheduledAt = row.scheduled_at as string;\n  const duration = Number(row.duration_minutes ?? 0);\n  const startDate = scheduledAt ? new Date(scheduledAt) : null;\n  const startedAt = row.started_at ?? undefined;\n  const endedAt = row.ended_at ?? undefined;\n\n  let canJoin: boolean | undefined;\n  let isHost: boolean | undefined;\n  let isParticipant: boolean | undefined;\n  if (currentUserId) {\n    isHost = row.host_user_id === currentUserId;\n    isParticipant = row.guest_user_id === currentUserId;\n    canJoin =\n      row.status === SESSION_STATUS.SCHEDULED &&\n      !isHost &&\n      Number(row.current_participants ?? 0) < Number(row.max_participants ?? 1);\n  }\n\n  return {\n    sessionId: row.session_id,\n    hostUserId: row.host_user_id,\n    hostUserName: row.host_name ?? undefined,\n    hostUserProfileImage: row.host_profile_image ?? undefined,\n    guestUserId: row.guest_user_id ?? undefined,\n    guestUserName: row.guest_name ?? undefined,\n    guestUserProfileImage: row.guest_profile_image ?? undefined,\n    title: row.title,\n    description: row.description ?? undefined,\n    sessionType: row.session_type,\n    languageCode: row.language_code ?? undefined,\n    skillFocus: row.skill_focus ?? undefined,\n    levelRequirement: row.level_requirement ?? undefined,\n    scheduledAt: scheduledAt,\n    durationMinutes: duration,\n    maxParticipants: row.max_participants !== null ? Number(row.max_participants) : undefined,\n    currentParticipants: Number(row.current_participants ?? 0),\n    status: row.status,\n    meetingUrl: row.meeting_url ?? undefined,\n    isRecurring: Boolean(row.is_recurring),\n    recurrencePattern: row.recurrence_pattern ?? undefined,\n    recurrenceEndDate: row.recurrence_end_date ?? undefined,\n    isPublic: Boolean(row.is_public ?? 1),\n    tags: row.tags ?? undefined,\n    preparationNotes: row.preparation_notes ?? undefined,\n    startedAt: startedAt,\n    endedAt: endedAt,\n    canJoin,\n    isHost,\n    isParticipant\n  };\n}\n\nfunction mapBookingRow(row: any): SessionBookingResponseType {\n  return {\n    bookingId: row.booking_id,\n    sessionId: row.session_id,\n    sessionTitle: row.session_title,\n    sessionScheduledAt: row.session_scheduled_at,\n    sessionDurationMinutes: Number(row.session_duration_minutes ?? 0),\n    sessionLanguageCode: row.session_language_code ?? undefined,\n    hostUserId: row.host_user_id,\n    hostUserName: row.host_user_name ?? undefined,\n    hostUserProfileImage: row.host_user_profile_image ?? undefined,\n    status: row.status,\n    bookingMessage: row.booking_message ?? undefined,\n    bookedAt: row.created_at,\n    cancelledAt: row.cancelled_at ?? undefined,\n    cancellationReason: row.cancellation_reason ?? undefined,\n    attended: Boolean(row.attended),\n    feedbackRating: row.feedback_rating !== null ? Number(row.feedback_rating) : undefined,\n    feedbackComment: row.feedback_comment ?? undefined,\n    reminderSent: Boolean(row.reminder_sent),\n    canCancel: calculateCanCancel(row.session_scheduled_at)\n  };\n}\n\nfunction calculateCanCancel(scheduledAt: string | null): boolean {\n  if (!scheduledAt) return false;\n  const sessionTime = new Date(scheduledAt);\n  const threshold = new Date();\n  threshold.setUTCHours(threshold.getUTCHours() + 1);\n  return sessionTime > threshold;\n}\n\nasync function getSessionRow(env: Env, sessionId: number) {\n  return queryFirst<SessionRow>(\n    env.DB,\n    `SELECT s.*, \n            host.name AS host_name,\n            host.profile_image AS host_profile_image,\n            guest.name AS guest_name,\n            guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.session_id = ?\n      LIMIT 1`,\n    [sessionId]\n  );\n}\n\nasync function ensureSessionExists(env: Env, sessionId: number): Promise<SessionRow> {\n  const row = await getSessionRow(env, sessionId);\n  if (!row) throw new Error('\uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  return row;\n}\n\nexport async function createSession(\n  env: Env,\n  hostUserId: string,\n  payload: SessionCreatePayload\n): Promise<SessionResponseType> {\n  const now = nowIso();\n\n  const title = payload.title ?? payload.topic ?? 'Study Session';\n  const sessionType = payload.sessionType ?? payload.sessionType ?? 'VIDEO';\n  const scheduledAt = payload.scheduledAt;\n  const durationMinutes = payload.durationMinutes ?? payload.duration ?? 30;\n  const maxParticipants = payload.maxParticipants ?? (payload.partnerId ? 2 : 1);\n  const isPublic = payload.isPublic ?? !payload.partnerId;\n  const languageCode = payload.languageCode ?? payload.language ?? null;\n  const skillFocus = payload.skillFocus ?? payload.targetLanguage ?? null;\n  const description = payload.description ?? payload.topic ?? null;\n  const guestUserId = payload.partnerId ?? null;\n  const metadata = {\n    webRtcRoomId: payload.webRtcRoomId ?? null,\n    webRtcRoomType: payload.webRtcRoomType ?? null,\n    targetLanguage: payload.targetLanguage ?? null,\n    topic: payload.topic ?? null,\n    language: payload.language ?? null\n  };\n  const preparationNotes = payload.preparationNotes ?? JSON.stringify(metadata);\n  const meetingUrl = payload.meetingUrl ?? (payload.webRtcRoomId ? `webrtc:${payload.webRtcRoomId}` : null);\n\n  await execute(\n    env.DB,\n    `INSERT INTO sessions (\n        host_user_id,\n        guest_user_id,\n        title,\n        description,\n        session_type,\n        language_code,\n        skill_focus,\n        level_requirement,\n        scheduled_at,\n        duration_minutes,\n        max_participants,\n        current_participants,\n        status,\n        meeting_url,\n        meeting_password,\n        is_recurring,\n        recurrence_pattern,\n        recurrence_end_date,\n        is_public,\n        tags,\n        preparation_notes,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 0, ?, ?, NULL, ?, ?, ?, ?, ?, ?, ?, ?)\n    `,\n    [\n      hostUserId,\n      guestUserId,\n      title,\n      description,\n      sessionType,\n      languageCode,\n      skillFocus,\n      payload.levelRequirement ?? null,\n      scheduledAt,\n      durationMinutes,\n      maxParticipants,\n      SESSION_STATUS.SCHEDULED,\n      meetingUrl,\n      payload.isRecurring ? 1 : 0,\n      payload.recurrencePattern ?? null,\n      payload.recurrenceEndDate ?? null,\n      isPublic ? 1 : 0,\n      payload.tags ?? null,\n      preparationNotes,\n      now,\n      now\n    ]\n  );\n\n  const idRow = await queryFirst<{ id: number }>(\n    env.DB,\n    'SELECT last_insert_rowid() as id'\n  );\n  const sessionId = Number(idRow?.id ?? 0);\n  if (!sessionId) {\n    throw new Error('\uC138\uC158 ID\uB97C \uD655\uC778\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const row = await getSessionRow(env, sessionId);\n  if (!row) {\n    throw new Error('\uC138\uC158 \uC0DD\uC131 \uD6C4 \uB370\uC774\uD130\uB97C \uB85C\uB4DC\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  return mapSessionRow(row, hostUserId);\n}\n\nexport async function listSessions(\n  env: Env,\n  page: number,\n  size: number,\n  statusFilter?: string\n) {\n  const offset = (page - 1) * size;\n  const filters: string[] = [];\n  const params: any[] = [];\n  const status = statusFilter?.toLowerCase();\n  const now = nowIso();\n\n  if (status === 'upcoming') {\n    filters.push('status = ?');\n    params.push(SESSION_STATUS.SCHEDULED);\n    filters.push('scheduled_at >= ?');\n    params.push(now);\n  } else if (status === 'completed' || status === 'done') {\n    filters.push('status = ?');\n    params.push(SESSION_STATUS.COMPLETED);\n  } else if (status === 'cancelled') {\n    filters.push('status = ?');\n    params.push(SESSION_STATUS.CANCELLED);\n  } else if (status === 'in-progress') {\n    filters.push('status = ?');\n    params.push(SESSION_STATUS.IN_PROGRESS);\n  }\n\n  const whereClause = filters.length ? `WHERE ${filters.join(' AND ')}` : '';\n\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions ${whereClause}`,\n    params\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      ${whereClause}\n      ORDER BY s.scheduled_at DESC\n      LIMIT ? OFFSET ?`,\n    params.concat([size, offset])\n  );\n\n  const data = rows.map((row) => mapSessionRow(row));\n  return {\n    data,\n    page,\n    size,\n    total: totalRow?.count ?? 0\n  };\n}\n\nexport async function getSessionById(env: Env, sessionId: number, currentUserId?: string) {\n  const row = await getSessionRow(env, sessionId);\n  if (!row) throw new Error('\uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  return mapSessionRow(row, currentUserId);\n}\n\nexport async function listUserSessions(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number\n) {\n  const offset = (page - 1) * size;\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions\n      WHERE host_user_id = ? OR guest_user_id = ?`,\n    [userId, userId]\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.host_user_id = ? OR s.guest_user_id = ?\n      ORDER BY s.scheduled_at DESC\n      LIMIT ? OFFSET ?`,\n    [userId, userId, size, offset]\n  );\n\n  const data = rows.map((row) => mapSessionRow(row, userId));\n  return {\n    data,\n    page,\n    size,\n    total: totalRow?.count ?? 0\n  };\n}\n\nexport async function listPublicSessions(env: Env, page: number, size: number) {\n  const offset = (page - 1) * size;\n  const now = nowIso();\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions\n      WHERE is_public = 1 AND status = ? AND scheduled_at >= ?`,\n    [SESSION_STATUS.SCHEDULED, now]\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.is_public = 1 AND s.status = ? AND s.scheduled_at >= ?\n      ORDER BY s.scheduled_at ASC\n      LIMIT ? OFFSET ?`,\n    [SESSION_STATUS.SCHEDULED, now, size, offset]\n  );\n\n  const data = rows.map((row) => mapSessionRow(row));\n  return { data, page, size, total: totalRow?.count ?? 0 };\n}\n\nexport async function listSessionsByLanguage(\n  env: Env,\n  languageCode: string,\n  page: number,\n  size: number\n) {\n  const offset = (page - 1) * size;\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions\n      WHERE status = ? AND language_code = ?`,\n    [SESSION_STATUS.SCHEDULED, languageCode]\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.status = ? AND s.language_code = ?\n      ORDER BY s.scheduled_at ASC\n      LIMIT ? OFFSET ?`,\n    [SESSION_STATUS.SCHEDULED, languageCode, size, offset]\n  );\n\n  const data = rows.map((row) => mapSessionRow(row));\n  return { data, page, size, total: totalRow?.count ?? 0 };\n}\n\nexport async function listSessionsByType(\n  env: Env,\n  sessionType: string,\n  page: number,\n  size: number\n) {\n  const offset = (page - 1) * size;\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions\n      WHERE status = ? AND session_type = ?`,\n    [SESSION_STATUS.SCHEDULED, sessionType]\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.status = ? AND s.session_type = ?\n      ORDER BY s.scheduled_at ASC\n      LIMIT ? OFFSET ?`,\n    [SESSION_STATUS.SCHEDULED, sessionType, size, offset]\n  );\n\n  const data = rows.map((row) => mapSessionRow(row));\n  return { data, page, size, total: totalRow?.count ?? 0 };\n}\n\nexport async function listAvailableSessions(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number\n) {\n  const offset = (page - 1) * size;\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions s\n      WHERE s.status = ?\n        AND s.is_public = 1\n        AND s.host_user_id != ?\n        AND (s.max_participants IS NULL OR s.current_participants < s.max_participants)`,\n    [SESSION_STATUS.SCHEDULED, userId]\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.status = ?\n        AND s.is_public = 1\n        AND s.host_user_id != ?\n        AND (s.max_participants IS NULL OR s.current_participants < s.max_participants)\n      ORDER BY s.scheduled_at ASC\n      LIMIT ? OFFSET ?`,\n    [SESSION_STATUS.SCHEDULED, userId, size, offset]\n  );\n\n  const data = rows.map((row) => mapSessionRow(row, userId));\n  return { data, page, size, total: totalRow?.count ?? 0 };\n}\n\nexport async function bookSession(\n  env: Env,\n  userId: string,\n  payload: { sessionId: number; bookingMessage?: string }\n): Promise<SessionBookingResponseType> {\n  const session = await ensureSessionExists(env, payload.sessionId);\n\n  if (session.host_user_id === userId) {\n    throw new Error('\uD638\uC2A4\uD2B8\uB294 \uC790\uC2E0\uC758 \uC138\uC158\uC744 \uC608\uC57D\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n\n  if (session.status !== SESSION_STATUS.SCHEDULED) {\n    throw new Error('\uC608\uC57D\uD560 \uC218 \uC5C6\uB294 \uC138\uC158\uC785\uB2C8\uB2E4.');\n  }\n\n  const maxParticipants = session.max_participants ?? 1;\n  const currentParticipants = Number(session.current_participants ?? 0);\n  if (currentParticipants >= maxParticipants) {\n    throw new Error('\uC138\uC158 \uC815\uC6D0\uC774 \uAC00\uB4DD \uCC3C\uC2B5\uB2C8\uB2E4.');\n  }\n\n  const existing = await queryFirst(\n    env.DB,\n    `SELECT booking_id FROM session_bookings\n      WHERE session_id = ? AND user_id = ? AND status = ?\n      LIMIT 1`,\n    [payload.sessionId, userId, BOOKING_STATUS.CONFIRMED]\n  );\n\n  if (existing) {\n    throw new Error('\uC774\uBBF8 \uC608\uC57D\uB41C \uC138\uC158\uC785\uB2C8\uB2E4.');\n  }\n\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `INSERT INTO session_bookings (\n        session_id, user_id, status, booking_message,\n        cancelled_at, cancellation_reason, attended, feedback_rating,\n        feedback_comment, reminder_sent, reminder_sent_at, created_at, updated_at\n      ) VALUES (?, ?, ?, ?, NULL, NULL, 0, NULL, NULL, 0, NULL, ?, ?)\n    `,\n    [payload.sessionId, userId, BOOKING_STATUS.CONFIRMED, payload.bookingMessage ?? null, now, now]\n  );\n\n  const newParticipants = currentParticipants + 1;\n  await execute(\n    env.DB,\n    `UPDATE sessions\n        SET guest_user_id = CASE WHEN guest_user_id IS NULL THEN ? ELSE guest_user_id END,\n            current_participants = ?,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [userId, newParticipants, now, payload.sessionId]\n  );\n\n  const bookingRow = await queryFirst<BookingRow>(\n    env.DB,\n    `SELECT b.*, \n            s.title AS session_title,\n            s.scheduled_at AS session_scheduled_at,\n            s.duration_minutes AS session_duration_minutes,\n            s.language_code AS session_language_code,\n            s.host_user_id,\n            host.name AS host_user_name,\n            host.profile_image AS host_user_profile_image\n       FROM session_bookings b\n       JOIN sessions s ON s.session_id = b.session_id\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n      WHERE b.session_id = ? AND b.user_id = ?\n      ORDER BY b.created_at DESC\n      LIMIT 1`,\n    [payload.sessionId, userId]\n  );\n\n  if (!bookingRow) throw new Error('\uC608\uC57D \uC815\uBCF4\uB97C \uBD88\uB7EC\uC62C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  return mapBookingRow(bookingRow);\n}\n\nexport async function joinSession(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  bookingMessage?: string\n): Promise<SessionResponseType> {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id === userId) {\n    return mapSessionRow(session, userId);\n  }\n  await bookSession(env, userId, { sessionId, bookingMessage });\n  const updated = await getSessionRow(env, sessionId);\n  if (!updated) {\n    throw new Error('\uC138\uC158 \uC815\uBCF4\uB97C \uAC31\uC2E0\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  return mapSessionRow(updated, userId);\n}\n\nexport async function cancelBooking(\n  env: Env,\n  userId: string,\n  bookingId: number,\n  reason?: string\n) {\n  const booking = await queryFirst<BookingWithSessionRow>(\n    env.DB,\n    `SELECT b.*, s.host_user_id, s.guest_user_id, s.current_participants\n       FROM session_bookings b\n       JOIN sessions s ON s.session_id = b.session_id\n      WHERE b.booking_id = ?\n      LIMIT 1`,\n    [bookingId]\n  );\n\n  if (!booking) throw new Error('\uC608\uC57D\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  if (booking.user_id !== userId) throw new Error('\uC608\uC57D\uC744 \uCDE8\uC18C\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  if (booking.status !== BOOKING_STATUS.CONFIRMED) throw new Error('\uC774\uBBF8 \uCC98\uB9AC\uB41C \uC608\uC57D\uC785\uB2C8\uB2E4.');\n\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE session_bookings\n       SET status = ?, cancelled_at = ?, cancellation_reason = ?, updated_at = ?\n     WHERE booking_id = ?`,\n    [BOOKING_STATUS.CANCELLED, now, reason ?? null, now, bookingId]\n  );\n\n  const newParticipants = Math.max(Number(booking.current_participants ?? 1) - 1, 0);\n  const guestUserId = booking.guest_user_id === userId ? null : booking.guest_user_id;\n\n  await execute(\n    env.DB,\n    `UPDATE sessions\n        SET guest_user_id = ?,\n            current_participants = ?,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [guestUserId, newParticipants, now, booking.session_id]\n  );\n}\n\nexport async function listUserBookings(env: Env, userId: string, page: number, size: number) {\n  const offset = (page - 1) * size;\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    'SELECT COUNT(*) as count FROM session_bookings WHERE user_id = ?',\n    [userId]\n  );\n\n  const rows = await query<BookingRow>(\n    env.DB,\n    `SELECT b.*, s.title AS session_title, s.scheduled_at AS session_scheduled_at,\n            s.duration_minutes AS session_duration_minutes, s.language_code AS session_language_code,\n            s.host_user_id, host.name AS host_user_name, host.profile_image AS host_user_profile_image\n       FROM session_bookings b\n       JOIN sessions s ON s.session_id = b.session_id\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n      WHERE b.user_id = ?\n      ORDER BY b.created_at DESC\n      LIMIT ? OFFSET ?`,\n    [userId, size, offset]\n  );\n\n  const data = rows.map((row) => mapBookingRow(row));\n  return { data, page, size, total: totalRow?.count ?? 0 };\n}\n\nexport async function getUserCalendar(\n  env: Env,\n  userId: string,\n  start: string,\n  end: string\n): Promise<SessionCalendarResponse> {\n  const rows = await query<CalendarRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, guest.name AS guest_name\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.scheduled_at BETWEEN ? AND ?\n        AND (s.host_user_id = ? OR s.guest_user_id = ?)\n      ORDER BY s.scheduled_at ASC`,\n    [start, end, userId, userId]\n  );\n\n  const events = rows.map((row) => ({\n    sessionId: row.session_id,\n    title: row.title,\n    description: row.description ?? undefined,\n    startTime: row.scheduled_at,\n    endTime: new Date(new Date(row.scheduled_at).getTime() + Number(row.duration_minutes ?? 0) * 60000).toISOString(),\n    eventType: 'SESSION',\n    status: row.status,\n    isHost: row.host_user_id === userId,\n    color: row.host_user_id === userId ? '#4CAF50' : '#2196F3'\n  }));\n\n  // simple hourly slots between range\n  const availableSlots: SessionCalendarResponse['availableSlots'] = [];\n  const startDate = new Date(start);\n  const endDate = new Date(end);\n  let cursor = new Date(startDate);\n  while (cursor < endDate) {\n    const next = new Date(cursor.getTime() + 60 * 60000);\n    availableSlots.push({ startTime: cursor.toISOString(), endTime: next.toISOString(), isAvailable: true });\n    cursor = next;\n  }\n\n  return { events, availableSlots };\n}\n\nexport async function startSession(env: Env, userId: string, sessionId: number) {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uC138\uC158\uC744 \uC2DC\uC791\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  await execute(\n    env.DB,\n    'UPDATE sessions SET status = ?, started_at = ?, updated_at = ? WHERE session_id = ?',\n    [SESSION_STATUS.IN_PROGRESS, now, now, sessionId]\n  );\n}\n\nexport async function endSession(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  summary?: { duration?: number; notes?: string; rating?: number }\n) {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uC138\uC158\uC744 \uC885\uB8CC\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  await execute(\n    env.DB,\n    'UPDATE sessions SET status = ?, ended_at = ?, updated_at = ? WHERE session_id = ?',\n    [SESSION_STATUS.COMPLETED, now, now, sessionId]\n  );\n  if (summary) {\n    await mergeSessionSummary(env, sessionId, {\n      sessionId,\n      durationMinutes: summary.duration ?? undefined,\n      notes: summary.notes,\n      rating: summary.rating,\n      updatedAt: now,\n      highlights: [],\n      actionItems: []\n    });\n  }\n}\n\nexport async function cancelSession(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  reason?: string\n) {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uC138\uC158\uC744 \uCDE8\uC18C\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE sessions\n        SET status = ?, cancelled_at = ?, cancellation_reason = ?, updated_at = ?\n      WHERE session_id = ?`,\n    [SESSION_STATUS.CANCELLED, now, reason ?? null, now, sessionId]\n  );\n\n  await execute(\n    env.DB,\n    `UPDATE session_bookings\n        SET status = ?, cancelled_at = ?, cancellation_reason = ?, updated_at = ?\n      WHERE session_id = ? AND status = ?`,\n    [BOOKING_STATUS.CANCELLED, now, reason ?? 'Session cancelled by host', now, sessionId, BOOKING_STATUS.CONFIRMED]\n  );\n}\n\n\nasync function mergeSessionSummary(\n  env: Env,\n  sessionId: number,\n  update: Partial<SessionSummaryResponse> & { sessionId: number }\n): Promise<SessionSummaryResponse> {\n  const existingRow = await fetchSummaryRow(env, sessionId);\n  const existing = existingRow ? deserializeSummaryRow(existingRow) : null;\n  const combinedFeedback = {\n    ...(existing?.feedback ?? {}),\n    ...(update.feedback ?? {})\n  } as SessionSummaryResponse['feedback'];\n  const feedback = combinedFeedback && Object.keys(combinedFeedback).length > 0 ? combinedFeedback : existing?.feedback;\n  const highlights = update.highlights ?? existing?.highlights ?? [];\n  const actionItems = update.actionItems ?? existing?.actionItems ?? [];\n  const merged: SessionSummaryResponse = {\n    sessionId,\n    notes: update.notes ?? existing?.notes,\n    durationMinutes: update.durationMinutes ?? existing?.durationMinutes,\n    rating: update.rating ?? existing?.rating,\n    highlights,\n    actionItems,\n    feedback,\n    updatedAt: update.updatedAt ?? nowIso()\n  };\n  await upsertSummaryRow(env, serializeSummaryResponse(merged));\n  return merged;\n}\n\nasync function getStoredSessionSummary(env: Env, sessionId: number): Promise<SessionSummaryResponse | null> {\n  const row = await fetchSummaryRow(env, sessionId);\n  return row ? deserializeSummaryRow(row) : null;\n}\n\nasync function buildDefaultSessionSummary(env: Env, sessionId: number): Promise<SessionSummaryResponse> {\n  const row = await getSessionRow(env, sessionId);\n  if (!row) {\n    throw new Error('\uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  return {\n    sessionId,\n    notes: undefined,\n    durationMinutes: row.duration_minutes ?? undefined,\n    rating: undefined,\n    highlights: [],\n    actionItems: [],\n    feedback: undefined,\n    updatedAt: row.updated_at\n  };\n}\n\nfunction parsePreparationNotes(raw: string | null): any {\n  if (!raw) return {};\n  try {\n    return JSON.parse(raw);\n  } catch {\n    return { notes: raw };\n  }\n}\n\nexport async function rescheduleSession(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  payload: { scheduledAt?: string; duration?: number; reason?: string }\n): Promise<SessionResponseType> {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uC138\uC158 \uC77C\uC815\uC744 \uBCC0\uACBD\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  const newScheduledAt = payload.scheduledAt ?? session.scheduled_at;\n  const newDuration = payload.duration ?? session.duration_minutes ?? 30;\n  const notes = parsePreparationNotes(session.preparation_notes ?? null);\n  const reason = payload.reason?.trim();\n  if (reason) {\n    const history = Array.isArray(notes.rescheduleHistory) ? notes.rescheduleHistory : [];\n    history.push({ reason, updatedAt: now, userId });\n    notes.rescheduleHistory = history;\n  }\n  notes.lastRescheduleAt = now;\n  notes.lastRescheduleBy = userId;\n  await execute(\n    env.DB,\n    `UPDATE sessions\n        SET scheduled_at = ?,\n            duration_minutes = ?,\n            preparation_notes = ?,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [newScheduledAt, newDuration, JSON.stringify(notes), now, sessionId]\n  );\n  const updated = await getSessionRow(env, sessionId);\n  if (!updated) throw new Error('\uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  return mapSessionRow(updated, userId);\n}\n\ninterface SessionFeedbackPayload {\n  rating?: number;\n  comment?: string;\n  partnerRating?: number;\n  partnerComment?: string;\n  tags?: string[];\n  improvementAreas?: string[];\n  wouldRecommend?: boolean;\n}\n\nexport async function submitSessionFeedback(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  feedback: SessionFeedbackPayload\n): Promise<SessionSummaryResponse> {\n  const now = nowIso();\n  const booking = await queryFirst<BookingRow>(\n    env.DB,\n    `SELECT * FROM session_bookings WHERE session_id = ? AND user_id = ? LIMIT 1`,\n    [sessionId, userId]\n  );\n  if (booking) {\n    const feedbackComment = JSON.stringify({\n      comment: feedback.comment ?? null,\n      partnerRating: feedback.partnerRating ?? null,\n      partnerComment: feedback.partnerComment ?? null,\n      tags: feedback.tags ?? [],\n      improvementAreas: feedback.improvementAreas ?? [],\n      wouldRecommend: feedback.wouldRecommend ?? false\n    });\n    await execute(\n      env.DB,\n      `UPDATE session_bookings\n          SET feedback_rating = ?,\n              feedback_comment = ?,\n              attended = 1,\n              updated_at = ?\n        WHERE booking_id = ?`,\n      [feedback.rating ?? null, feedbackComment, now, booking.booking_id]\n    );\n  }\n  return mergeSessionSummary(env, sessionId, {\n    sessionId,\n    feedback: {\n      rating: feedback.rating,\n      comment: feedback.comment,\n      partnerRating: feedback.partnerRating,\n      partnerComment: feedback.partnerComment,\n      tags: feedback.tags,\n      improvementAreas: feedback.improvementAreas,\n      wouldRecommend: feedback.wouldRecommend\n    },\n    updatedAt: now\n  });\n}\n\nexport async function listSessionHistory(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number,\n  partnerId?: string\n) {\n  const offset = (page - 1) * size;\n  const filters = ['(s.host_user_id = ? OR s.guest_user_id = ?)'];\n  const params: any[] = [userId, userId];\n  if (partnerId) {\n    filters.push('((s.host_user_id = ? AND s.guest_user_id = ?) OR (s.host_user_id = ? AND s.guest_user_id = ?))');\n    params.push(userId, partnerId, partnerId, userId);\n  }\n  filters.push('s.status IN (?, ?)');\n  params.push(SESSION_STATUS.COMPLETED, SESSION_STATUS.CANCELLED);\n  const whereClause = `WHERE ${filters.join(' AND ')}`;\n\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions s ${whereClause}`,\n    params\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      ${whereClause}\n      ORDER BY s.scheduled_at DESC\n      LIMIT ? OFFSET ?`,\n    params.concat([size, offset])\n  );\n\n  const data = rows.map((row) => mapSessionRow(row, userId));\n  return { data, page, size, total: totalRow?.count ?? 0 };\n}\n\nexport async function getSessionStats(\n  env: Env,\n  userId: string,\n  period: 'week' | 'month' | 'year'\n): Promise<SessionStatsResponseType> {\n  const now = new Date();\n  const start = new Date(now);\n  if (period === 'week') {\n    start.setUTCDate(start.getUTCDate() - 7);\n  } else if (period === 'month') {\n    start.setUTCMonth(start.getUTCMonth() - 1);\n  } else {\n    start.setUTCFullYear(start.getUTCFullYear() - 1);\n  }\n  const startIso = start.toISOString();\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE (s.host_user_id = ? OR s.guest_user_id = ?)\n        AND s.scheduled_at >= ?\n      ORDER BY s.scheduled_at DESC`,\n    [userId, userId, startIso]\n  );\n\n  let completed = 0;\n  let cancelled = 0;\n  let upcoming = 0;\n  let totalMinutes = 0;\n  const partners = new Set<string>();\n  const completedDates = new Set<string>();\n  let lastSessionAt: string | undefined;\n\n  for (const row of rows) {\n    if (!lastSessionAt || row.scheduled_at > lastSessionAt) {\n      lastSessionAt = row.scheduled_at;\n    }\n    const otherUser = row.host_user_id === userId ? row.guest_user_id : row.host_user_id;\n    if (otherUser) partners.add(otherUser);\n    if (row.status === SESSION_STATUS.COMPLETED) {\n      completed += 1;\n      totalMinutes += Number(row.duration_minutes ?? 0);\n      completedDates.add(new Date(row.scheduled_at).toISOString().slice(0, 10));\n    } else if (row.status === SESSION_STATUS.CANCELLED) {\n      cancelled += 1;\n    } else if (row.status === SESSION_STATUS.SCHEDULED) {\n      upcoming += 1;\n    }\n  }\n\n  const averageDuration = completed > 0 ? totalMinutes / completed : 0;\n  const streakDays = (() => {\n    if (completedDates.size === 0) return 0;\n    const cursor = new Date();\n    let streak = 0;\n    for (;;) {\n      const key = cursor.toISOString().slice(0, 10);\n      if (completedDates.has(key)) {\n        streak += 1;\n        cursor.setUTCDate(cursor.getUTCDate() - 1);\n      } else {\n        break;\n      }\n    }\n    return streak;\n  })();\n\n  return {\n    period,\n    totalSessions: rows.length,\n    completedSessions: completed,\n    cancelledSessions: cancelled,\n    upcomingSessions: upcoming,\n    totalMinutes,\n    averageDuration,\n    partnersCount: partners.size,\n    streakDays,\n    lastSessionAt\n  };\n}\n\nexport async function listUpcomingSessions(\n  env: Env,\n  userId: string,\n  limit: number\n): Promise<SessionResponseType[]> {\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE (s.host_user_id = ? OR s.guest_user_id = ?)\n        AND s.status = ?\n        AND s.scheduled_at >= ?\n      ORDER BY s.scheduled_at ASC\n      LIMIT ?`,\n    [userId, userId, SESSION_STATUS.SCHEDULED, nowIso(), limit]\n  );\n  return rows.map((row) => mapSessionRow(row, userId));\n}\n\nexport async function getSessionParticipants(\n  env: Env,\n  sessionId: number\n): Promise<SessionParticipantInfo[]> {\n  const row = await getSessionRow(env, sessionId);\n  if (!row) throw new Error('\uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const participants: SessionParticipantInfo[] = [];\n  participants.push({\n    userId: row.host_user_id,\n    name: row.host_name ?? undefined,\n    profileImage: row.host_profile_image ?? undefined,\n    role: 'HOST',\n    joinedAt: row.created_at\n  });\n  if (row.guest_user_id) {\n    participants.push({\n      userId: row.guest_user_id,\n      name: row.guest_name ?? undefined,\n      profileImage: row.guest_profile_image ?? undefined,\n      role: 'GUEST',\n      joinedAt: row.created_at\n    });\n  }\n  const bookingRows = await query<BookingRow & { name?: string | null; profile_image?: string | null }>(\n    env.DB,\n    `SELECT b.*, u.name, u.profile_image\n       FROM session_bookings b\n       LEFT JOIN users u ON u.user_id = b.user_id\n      WHERE b.session_id = ? AND b.status = ?`,\n    [sessionId, BOOKING_STATUS.CONFIRMED]\n  );\n  for (const booking of bookingRows) {\n    if (booking.user_id === row.host_user_id || booking.user_id === row.guest_user_id) {\n      continue;\n    }\n    participants.push({\n      userId: booking.user_id,\n      name: booking.name ?? undefined,\n      profileImage: booking.profile_image ?? undefined,\n      role: 'BOOKED',\n      joinedAt: booking.created_at\n    });\n  }\n  return participants;\n}\n\nexport async function generateSessionInvite(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  expiresInHours: number = 24\n): Promise<SessionInviteResponse> {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uCD08\uB300 \uB9C1\uD06C\uB97C \uC0DD\uC131\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const token = crypto.randomUUID();\n  const hours = Number.isFinite(expiresInHours) ? Math.max(1, expiresInHours) : DEFAULT_INVITE_EXPIRATION_HOURS;\n  const now = nowIso();\n  const expiresAt = new Date(Date.now() + hours * 3600 * 1000).toISOString();\n  await insertInviteRow(env, {\n    invite_token: token,\n    session_id: sessionId,\n    inviter_user_id: userId,\n    expires_at: expiresAt,\n    created_at: now,\n    used_at: null,\n    used_by: null\n  });\n  const baseUrl = env.API_BASE_URL ?? '';\n  const joinUrl = baseUrl ? `${baseUrl}/sessions/join?token=${token}` : `/sessions/join?token=${token}`;\n  return { sessionId, inviteToken: token, expiresAt, joinUrl };\n}\n\nexport async function acceptSessionInvite(\n  env: Env,\n  userId: string,\n  token: string\n): Promise<SessionResponseType> {\n  const record = await fetchInviteRow(env, token);\n  if (!record) {\n    throw new Error('\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uCD08\uB300 \uD1A0\uD070\uC785\uB2C8\uB2E4.');\n  }\n  if (record.used_at) {\n    throw new Error('\uC774\uBBF8 \uC0AC\uC6A9\uB41C \uCD08\uB300 \uD1A0\uD070\uC785\uB2C8\uB2E4.');\n  }\n  if (new Date(record.expires_at).getTime() < Date.now()) {\n    throw new Error('\uCD08\uB300 \uD1A0\uD070\uC774 \uB9CC\uB8CC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  await markInviteUsed(env, token, userId, now);\n  return joinSession(env, userId, record.session_id);\n}\n\nexport async function getSessionNotifications(\n  env: Env,\n  sessionId: number,\n  userId: string\n): Promise<SessionNotificationSettings> {\n  const row = await fetchNotificationRow(env, sessionId, userId);\n  if (row) {\n    return {\n      reminderBefore: row.reminder_before,\n      enableEmailReminder: intToBool(row.enable_email),\n      enablePushReminder: intToBool(row.enable_push),\n      enableSmsReminder: intToBool(row.enable_sms),\n      updatedAt: row.updated_at\n    };\n  }\n  return { ...NOTIFICATION_DEFAULTS, updatedAt: nowIso() };\n}\n\nexport async function updateSessionNotifications(\n  env: Env,\n  sessionId: number,\n  userId: string,\n  settings: Partial<SessionNotificationSettings>\n): Promise<SessionNotificationSettings> {\n  const current = await getSessionNotifications(env, sessionId, userId);\n  const merged: SessionNotificationSettings = {\n    reminderBefore: settings.reminderBefore ?? current.reminderBefore,\n    enableEmailReminder: settings.enableEmailReminder ?? current.enableEmailReminder,\n    enablePushReminder: settings.enablePushReminder ?? current.enablePushReminder,\n    enableSmsReminder: settings.enableSmsReminder ?? current.enableSmsReminder,\n    updatedAt: nowIso()\n  };\n  await upsertNotificationRow(env, sessionId, userId, merged);\n  return merged;\n}\n\nexport async function requestSessionRecording(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  options: { recordAudio?: boolean; recordVideo?: boolean; recordTranscript?: boolean; language?: string; targetLanguage?: string }\n): Promise<SessionRecordingStatus> {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uB179\uD654\uB97C \uC694\uCCAD\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const status: SessionRecordingStatus = {\n    sessionId,\n    status: 'scheduled',\n    recordAudio: options.recordAudio ?? true,\n    recordVideo: options.recordVideo ?? false,\n    recordTranscript: options.recordTranscript ?? true,\n    downloadUrl: undefined,\n    message: options.language ? `Recording language: ${options.language}` : undefined,\n    updatedAt: nowIso()\n  };\n  await upsertRecordingRow(env, sessionId, status);\n  return status;\n}\n\nexport async function stopSessionRecording(\n  env: Env,\n  userId: string,\n  sessionId: number\n): Promise<SessionRecordingStatus> {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uB179\uD654\uB97C \uC911\uB2E8\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const current = await fetchRecordingRow(env, sessionId);\n  const status: SessionRecordingStatus = {\n    sessionId,\n    status: 'completed',\n    recordAudio: current ? intToBool(current.record_audio) : true,\n    recordVideo: current ? intToBool(current.record_video) : false,\n    recordTranscript: current ? intToBool(current.record_transcript) : true,\n    downloadUrl: current?.download_url ?? `/sessions/${sessionId}/recordings/latest`,\n    updatedAt: nowIso()\n  };\n  await upsertRecordingRow(env, sessionId, status);\n  return status;\n}\n\nexport async function getSessionRecording(\n  env: Env,\n  sessionId: number\n): Promise<SessionRecordingStatus> {\n  const stored = await fetchRecordingRow(env, sessionId);\n  if (stored) {\n    return {\n      sessionId,\n      status: stored.status as SessionRecordingStatus['status'],\n      recordAudio: intToBool(stored.record_audio),\n      recordVideo: intToBool(stored.record_video),\n      recordTranscript: intToBool(stored.record_transcript),\n      downloadUrl: stored.download_url ?? undefined,\n      message: stored.message ?? undefined,\n      updatedAt: stored.updated_at\n    };\n  }\n  return {\n    sessionId,\n    status: 'idle',\n    recordAudio: false,\n    recordVideo: false,\n    recordTranscript: false,\n    updatedAt: nowIso()\n  };\n}\n\nexport async function getSessionSummary(\n  env: Env,\n  sessionId: number\n): Promise<SessionSummaryResponse> {\n  const cached = await getStoredSessionSummary(env, sessionId);\n  if (cached) return cached;\n  return buildDefaultSessionSummary(env, sessionId);\n}\n\nexport async function getSessionTranscript(\n  env: Env,\n  sessionId: number,\n  language: string = 'default'\n): Promise<SessionTranscriptResponse> {\n  const row = await fetchTranscriptRow(env, sessionId, language);\n  if (row) {\n    return deserializeTranscriptRow(row);\n  }\n  const now = nowIso();\n  const transcript: SessionTranscriptResponse = {\n    sessionId,\n    language,\n    segments: [],\n    generatedAt: now\n  };\n  await upsertTranscriptRow(env, {\n    session_id: sessionId,\n    language,\n    segments: JSON.stringify(transcript.segments),\n    generated_at: now,\n    updated_at: now\n  });\n  return transcript;\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport {\n  createNotification,\n  createNotificationFromTemplate,\n  listNotifications,\n  getNotificationById,\n  markAsRead,\n  markAllAsRead,\n  deleteNotification,\n  deleteAllNotifications,\n  deleteNotificationsBatch,\n  getNotificationPreferences,\n  updateNotificationPreferences,\n  getNotificationStats,\n  getUnreadCount,\n  registerPushToken,\n  unregisterPushToken,\n  listNotificationCategories,\n  listScheduledNotifications,\n  subscribeToNotificationTopics,\n  unsubscribeFromNotificationTopics,\n  scheduleNotification,\n  sendTestNotification,\n  sendUrgentNotifications,\n  cancelScheduledNotification\n} from '../services/notifications';\n\nconst notificationsRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\nfunction parseBoolean(value: string | undefined): boolean | undefined {\n  if (value === undefined) return undefined;\n  const lowered = value.toLowerCase();\n  if (['true', '1', 'yes', 'y'].includes(lowered)) return true;\n  if (['false', '0', 'no', 'n'].includes(lowered)) return false;\n  return undefined;\n}\n\nnotificationsRoutes.use('*', requireAuth);\n\nnotificationsRoutes.get('/', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const page = Number(c.req.query('page')) || 1;\n  const size = Number(c.req.query('size')) || 20;\n  const unreadOnly = parseBoolean(c.req.query('unreadOnly')) ?? undefined;\n  const isRead = parseBoolean(c.req.query('isRead'));\n\n  let status: string | undefined;\n  if (isRead === true) status = 'READ';\n  else if (isRead === false) status = 'UNREAD';\n\n  const result = await listNotifications(c.env, userId, {\n    page,\n    size,\n    category: c.req.query('category') ?? c.req.query('type') ?? undefined,\n    status,\n    unreadOnly\n  });\n\n  return successResponse(c, {\n    notifications: result.data,\n    unreadCount: result.unreadCount,\n    pagination: {\n      page: result.page,\n      size: result.size,\n      total: result.total,\n      totalPages: Math.ceil(result.total / result.size)\n    }\n  });\n});\n\nnotificationsRoutes.get('/unread', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const result = await listNotifications(c.env, userId, { page: 1, size: 50, unreadOnly: true });\n  return successResponse(c, { notifications: result.data, unreadCount: result.unreadCount });\n});\n\nnotificationsRoutes.get('/unread-count', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const count = await getUnreadCount(c.env, userId);\n  return successResponse(c, { unreadCount: count });\n});\n\nnotificationsRoutes.get('/categories', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const categories = await listNotificationCategories(c.env, userId);\n  return successResponse(c, categories);\n});\n\nnotificationsRoutes.get('/history', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const page = Math.max(Number(c.req.query('page') ?? '1'), 1);\n  const size = Math.max(Math.min(Number(c.req.query('size') ?? '20'), 100), 1);\n  const category = c.req.query('category') ?? undefined;\n  const status = c.req.query('status') ?? undefined;\n  const unreadOnlyParam = c.req.query('unreadOnly');\n  const unreadOnly = typeof unreadOnlyParam === 'string'\n    ? ['true', '1'].includes(unreadOnlyParam.toLowerCase())\n    : false;\n  const result = await listNotifications(c.env, userId, {\n    page,\n    size,\n    category,\n    status,\n    unreadOnly\n  });\n  return successResponse(c, result);\n});\n\nnotificationsRoutes.get('/scheduled', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const page = Math.max(Number(c.req.query('page') ?? '1'), 1);\n  const size = Math.max(Math.min(Number(c.req.query('size') ?? '20'), 100), 1);\n  const result = await listScheduledNotifications(c.env, userId, page, size);\n  return successResponse(c, result);\n});\n\nnotificationsRoutes.get('/category/:category', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const category = c.req.param('category');\n  const page = Number(c.req.query('page')) || 1;\n  const size = Number(c.req.query('size')) || 20;\n  const result = await listNotifications(c.env, userId, { page, size, category });\n  return successResponse(c, {\n    notifications: result.data,\n    pagination: {\n      page: result.page,\n      size: result.size,\n      total: result.total,\n      totalPages: Math.ceil(result.total / result.size)\n    }\n  });\n});\n\nnotificationsRoutes.get('/:notificationId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const notificationId = Number(c.req.param('notificationId'));\n  if (!Number.isFinite(notificationId)) throw new AppError('Invalid notificationId', 400, 'INVALID_PATH_PARAM');\n  const record = await getNotificationById(c.env, notificationId);\n  if (record && record.notificationId && record.notificationId !== notificationId) {\n    throw new AppError('\uC54C\uB9BC\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'NOTIFICATION_NOT_FOUND');\n  }\n  if (record && record.userId !== userId) {\n    throw new AppError('\uC811\uADFC \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.', 403, 'NOTIFICATION_FORBIDDEN');\n  }\n  return successResponse(c, record);\n});\n\nnotificationsRoutes.post('/', async (c) => {\n  const body = await c.req.json();\n  const userId = typeof body.userId === 'string' ? body.userId : c.get('userId');\n  if (!userId) throw new AppError('userId is required', 400, 'INVALID_PAYLOAD');\n  if (!body.title || !body.content || !body.type) {\n    throw new AppError('type, title, content are required', 400, 'INVALID_PAYLOAD');\n  }\n  const record = await createNotification(c.env, {\n    userId,\n    type: body.type,\n    title: body.title,\n    content: body.content,\n    actionUrl: body.actionUrl,\n    actionData: body.actionData,\n    imageUrl: body.imageUrl,\n    iconUrl: body.iconUrl,\n    priority: body.priority,\n    category: body.category,\n    scheduledAt: body.scheduledAt,\n    expiresAt: body.expiresAt,\n    isPersistent: body.isPersistent,\n    senderUserId: body.senderUserId,\n    templateId: body.templateId,\n    templateVariables: body.templateVariables,\n    deliveryChannels: body.deliveryChannels\n  });\n  return successResponse(c, record);\n});\n\nnotificationsRoutes.post('/schedule', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const notification = (body as any).notification ?? body;\n  const scheduledAt = typeof (body as any).scheduledAt === 'string'\n    ? (body as any).scheduledAt\n    : typeof notification?.scheduledAt === 'string'\n      ? notification.scheduledAt\n      : undefined;\n  if (!scheduledAt) {\n    throw new AppError('scheduledAt is required', 400, 'INVALID_PAYLOAD');\n  }\n  const record = await scheduleNotification(c.env, userId, {\n    title: notification?.title ?? 'Scheduled Notification',\n    message: notification?.message ?? notification?.content ?? '\uC54C\uB9BC \uB0B4\uC6A9\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.',\n    type: notification?.type ?? 'SCHEDULED',\n    data: notification?.data ?? notification?.actionData ?? null,\n    scheduledAt,\n    recurring: notification?.recurring ?? (body as any).recurring ?? null,\n    priority: notification?.priority,\n    category: notification?.category ?? 'scheduled',\n    deliveryChannels: notification?.deliveryChannels ?? undefined\n  });\n  return successResponse(c, record);\n});\n\nnotificationsRoutes.post('/subscribe', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const topics = Array.isArray((body as any).topics) ? (body as any).topics : [];\n  const updated = await subscribeToNotificationTopics(c.env, userId, topics);\n  return successResponse(c, { topics: updated });\n});\n\nnotificationsRoutes.post('/unsubscribe', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const topics = Array.isArray((body as any).topics) ? (body as any).topics : [];\n  const updated = await unsubscribeFromNotificationTopics(c.env, userId, topics);\n  return successResponse(c, { topics: updated });\n});\n\nnotificationsRoutes.post('/template/:templateId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const templateId = c.req.param('templateId');\n  const body = await c.req.json().catch(() => ({}));\n  const record = await createNotificationFromTemplate(c.env, userId, templateId, body.variables, {\n    type: body.type,\n    title: body.title,\n    content: body.content,\n    actionUrl: body.actionUrl,\n    actionData: body.actionData\n  });\n  return successResponse(c, record);\n});\n\nnotificationsRoutes.post('/test', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const record = await sendTestNotification(c.env, userId, typeof (body as any).type === 'string' ? (body as any).type : null);\n  return successResponse(c, record);\n});\n\nnotificationsRoutes.post('/urgent', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const notification = (body as any).notification ?? body;\n  const recipients = Array.isArray((body as any).recipients) ? (body as any).recipients : [];\n  const result = await sendUrgentNotifications(c.env, userId, recipients, {\n    title: notification?.title ?? '\uAE34\uAE09 \uC54C\uB9BC',\n    message: notification?.message ?? notification?.content ?? '',\n    type: notification?.type ?? 'URGENT',\n    expiresAt: notification?.expiresAt ?? undefined,\n    priority: notification?.priority ?? 4,\n    category: notification?.category ?? 'urgent',\n    data: notification?.data ?? notification?.actionData ?? null\n  });\n  return successResponse(c, result);\n});\n\nnotificationsRoutes.patch('/:notificationId/read', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const notificationId = Number(c.req.param('notificationId'));\n  if (!Number.isFinite(notificationId)) throw new AppError('Invalid notificationId', 400, 'INVALID_PATH_PARAM');\n  await markAsRead(c.env, userId, notificationId);\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.patch('/read-all', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  await markAllAsRead(c.env, userId);\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.delete('/batch', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const rawIds: unknown[] = Array.isArray((body as any).notificationIds)\n    ? (body as any).notificationIds\n    : Array.isArray((body as any).ids)\n      ? (body as any).ids\n      : Array.isArray(body)\n        ? body\n        : [];\n  const ids = rawIds\n    .map((value): number => Number(value))\n    .filter((id): id is number => Number.isFinite(id));\n  await deleteNotificationsBatch(c.env, userId, ids);\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.delete('/scheduled/:notificationId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const notificationId = Number(c.req.param('notificationId'));\n  if (!Number.isFinite(notificationId)) {\n    throw new AppError('Invalid notificationId', 400, 'INVALID_PATH_PARAM');\n  }\n  const cancelled = await cancelScheduledNotification(c.env, userId, notificationId);\n  if (!cancelled) {\n    throw new AppError('\uC608\uC57D \uC54C\uB9BC\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'SCHEDULED_NOTIFICATION_NOT_FOUND');\n  }\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.delete('/:notificationId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const notificationId = Number(c.req.param('notificationId'));\n  if (!Number.isFinite(notificationId)) throw new AppError('Invalid notificationId', 400, 'INVALID_PATH_PARAM');\n  await deleteNotification(c.env, userId, notificationId);\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.delete('/all', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  await deleteAllNotifications(c.env, userId);\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.get('/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const prefs = await getNotificationPreferences(c.env, userId);\n  return successResponse(c, prefs);\n});\n\nfunction mapNotificationSettingsPayload(body: Record<string, unknown>): Record<string, unknown> {\n  const payload: Record<string, unknown> = {};\n\n  const booleanMap: Array<[string, string]> = [\n    ['notificationsEnabled', 'notificationsEnabled'],\n    ['notificationsEnabled', 'notifications'],\n    ['pushEnabled', 'pushEnabled'],\n    ['pushEnabled', 'pushNotifications'],\n    ['emailEnabled', 'emailEnabled'],\n    ['emailEnabled', 'emailNotifications'],\n    ['smsEnabled', 'smsEnabled'],\n    ['smsEnabled', 'smsNotifications'],\n    ['sessionNotifications', 'sessionNotifications'],\n    ['sessionReminders', 'sessionReminderNotifications'],\n    ['matchingNotifications', 'matchRequestNotifications'],\n    ['chatNotifications', 'chatMessageNotifications'],\n    ['systemNotifications', 'systemNotifications'],\n    ['marketingNotifications', 'marketingNotifications'],\n    ['quietHoursEnabled', 'quietHoursEnabled'],\n    ['digestEnabled', 'digestEnabled']\n  ];\n\n  for (const [targetKey, sourceKey] of booleanMap) {\n    if (Object.prototype.hasOwnProperty.call(body, sourceKey)) {\n      payload[targetKey] = Boolean((body as any)[sourceKey]);\n    }\n  }\n\n  if (typeof body.quietHours === 'object' && body.quietHours !== null) {\n    const quiet = body.quietHours as { start?: string; end?: string };\n    if (quiet.start !== undefined) payload.quietHoursStart = quiet.start ?? null;\n    if (quiet.end !== undefined) payload.quietHoursEnd = quiet.end ?? null;\n  }\n\n  if (body.quietHoursStart !== undefined) payload.quietHoursStart = body.quietHoursStart ?? null;\n  if (body.quietHoursEnd !== undefined) payload.quietHoursEnd = body.quietHoursEnd ?? null;\n\n  if (body.notificationSound !== undefined) payload.notificationSound = body.notificationSound ?? null;\n  if (body.timezone !== undefined) payload.timezone = body.timezone ?? null;\n  if (body.notificationLanguage !== undefined) payload.notificationLanguage = body.notificationLanguage ?? null;\n  if (body.digestFrequency !== undefined) payload.digestFrequency = body.digestFrequency ?? null;\n  if (body.digestTime !== undefined) payload.digestTime = body.digestTime ?? null;\n\n  return payload;\n}\n\nnotificationsRoutes.patch('/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const payload = mapNotificationSettingsPayload(body as Record<string, unknown>);\n  const prefs = await updateNotificationPreferences(c.env, userId, payload);\n  return successResponse(c, prefs);\n});\n\nnotificationsRoutes.get('/stats', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const stats = await getNotificationStats(c.env, userId);\n  return successResponse(c, stats);\n});\n\nnotificationsRoutes.post('/push-token', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const token = c.req.query('token') ?? body.token;\n  if (!token || typeof token !== 'string') {\n    throw new AppError('token is required', 400, 'INVALID_PAYLOAD');\n  }\n  const deviceType = (c.req.query('deviceType') ?? body.deviceType ?? 'web') as string;\n  await registerPushToken(c.env, userId, token, deviceType);\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.delete('/push-token', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const token = c.req.query('token') ?? body.token;\n  if (!token || typeof token !== 'string') {\n    throw new AppError('token is required', 400, 'INVALID_PAYLOAD');\n  }\n  await unregisterPushToken(c.env, userId, token);\n  return successResponse(c, { success: true });\n});\n\nexport default notificationsRoutes;\n", "import type { Env } from '../index';\nimport type {\n  NotificationRecord,\n  NotificationListItem,\n  NotificationPreferenceSettings,\n  NotificationStats\n} from '../types';\nimport { query, queryFirst, execute } from '../utils/db';\n\nconst DEFAULT_PAGE_SIZE = 20;\nconst MAX_PAGE_SIZE = 100;\n\ninterface ListOptions {\n  page?: number;\n  size?: number;\n  category?: string;\n  status?: string;\n  unreadOnly?: boolean;\n}\n\ninterface CreateNotificationPayload {\n  userId: string;\n  type: string;\n  title: string;\n  content: string;\n  actionUrl?: string;\n  actionData?: Record<string, any> | null;\n  imageUrl?: string;\n  iconUrl?: string;\n  priority?: number;\n  category?: string;\n  scheduledAt?: string;\n  expiresAt?: string;\n  isPersistent?: boolean;\n  senderUserId?: string;\n  templateId?: string;\n  templateVariables?: Record<string, any> | null;\n  deliveryChannels?: string;\n  status?: string;\n  scheduleMetadata?: Record<string, any> | null;\n}\n\ninterface NotificationRow {\n  notification_id: number;\n  user_id: string;\n  type: string;\n  title: string;\n  content: string;\n  action_url: string | null;\n  action_data: string | null;\n  image_url: string | null;\n  icon_url: string | null;\n  status: string;\n  priority: number | null;\n  category: string | null;\n  scheduled_at: string | null;\n  sent_at: string | null;\n  read_at: string | null;\n  expires_at: string | null;\n  created_at: string;\n  updated_at: string;\n  is_persistent: number | null;\n  sender_user_id: string | null;\n  template_id: string | null;\n  template_variables: string | null;\n  delivery_channels: string | null;\n  push_sent: number | null;\n  email_sent: number | null;\n  sms_sent: number | null;\n  schedule_metadata: string | null;\n}\n\ninterface PreferenceRow {\n  preference_id?: number;\n  user_id: string;\n  notifications_enabled: number;\n  push_enabled: number;\n  email_enabled: number;\n  sms_enabled: number;\n  session_notifications: number;\n  session_reminders: number;\n  matching_notifications: number;\n  chat_notifications: number;\n  level_test_notifications: number;\n  system_notifications: number;\n  marketing_notifications: number;\n  quiet_hours_enabled: number;\n  quiet_hours_start: string | null;\n  quiet_hours_end: string | null;\n  timezone: string | null;\n  notification_language: string | null;\n  digest_enabled: number;\n  digest_frequency: string | null;\n  digest_time: string | null;\n  created_at: string;\n  updated_at: string;\n}\n\nfunction nowIso(): string {\n  return new Date().toISOString();\n}\n\nfunction normalizePageSize(size?: number): number {\n  if (!size || Number.isNaN(size)) return DEFAULT_PAGE_SIZE;\n  return Math.max(1, Math.min(size, MAX_PAGE_SIZE));\n}\n\nfunction normalizePage(page?: number): number {\n  if (!page || Number.isNaN(page) || page < 1) return 1;\n  return page;\n}\n\nfunction parseJson<T>(value: string | null | undefined): T | null {\n  if (!value) return null;\n  try {\n    return JSON.parse(value) as T;\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction mapNotificationRow(row: NotificationRow): NotificationRecord {\n  const expiresAt = row.expires_at ?? undefined;\n  const priority = row.priority ?? 1;\n  const expired = expiresAt ? new Date(expiresAt) < new Date() : undefined;\n  const highPriority = priority >= 3;\n  const scheduleMetadata = parseJson<Record<string, any>>(row.schedule_metadata);\n  return {\n    userId: row.user_id,\n    notificationId: row.notification_id,\n    type: row.type,\n    title: row.title,\n    content: row.content,\n    actionUrl: row.action_url ?? undefined,\n    actionData: parseJson<Record<string, any>>(row.action_data) ?? undefined,\n    imageUrl: row.image_url ?? undefined,\n    iconUrl: row.icon_url ?? undefined,\n    status: row.status,\n    priority,\n    category: row.category ?? undefined,\n    scheduledAt: row.scheduled_at ?? undefined,\n    sentAt: row.sent_at ?? undefined,\n    readAt: row.read_at ?? undefined,\n    expiresAt,\n    createdAt: row.created_at,\n    isPersistent: Boolean(row.is_persistent ?? 1),\n    senderUserId: row.sender_user_id ?? undefined,\n    templateId: row.template_id ?? undefined,\n    deliveryChannels: row.delivery_channels ?? undefined,\n    pushSent: Boolean(row.push_sent ?? 0),\n    emailSent: Boolean(row.email_sent ?? 0),\n    smsSent: Boolean(row.sms_sent ?? 0),\n    expired,\n    highPriority,\n    scheduleMetadata\n  };\n}\n\nfunction toListItem(record: NotificationRecord): NotificationListItem {\n  return {\n    id: record.notificationId,\n    type: record.type,\n    category: record.category,\n    title: record.title,\n    message: record.content,\n    content: record.content,\n    isRead: record.status === 'READ',\n    status: record.status,\n    priority: record.priority,\n    createdAt: record.createdAt,\n    readAt: record.readAt,\n    scheduledAt: record.scheduledAt,\n    expiresAt: record.expiresAt,\n    clickUrl: record.actionUrl,\n    data: record.actionData ?? undefined,\n    imageUrl: record.imageUrl,\n    iconUrl: record.iconUrl,\n    highPriority: record.highPriority,\n    expired: record.expired\n  };\n}\n\nfunction mapPreferenceRow(row: PreferenceRow): NotificationPreferenceSettings {\n  return {\n    notificationsEnabled: Boolean(row.notifications_enabled),\n    pushEnabled: Boolean(row.push_enabled),\n    emailEnabled: Boolean(row.email_enabled),\n    smsEnabled: Boolean(row.sms_enabled),\n    sessionNotifications: Boolean(row.session_notifications),\n    sessionReminders: Boolean(row.session_reminders),\n    matchingNotifications: Boolean(row.matching_notifications),\n    chatNotifications: Boolean(row.chat_notifications),\n    levelTestNotifications: Boolean(row.level_test_notifications),\n    systemNotifications: Boolean(row.system_notifications),\n    marketingNotifications: Boolean(row.marketing_notifications),\n    quietHoursEnabled: Boolean(row.quiet_hours_enabled),\n    quietHoursStart: row.quiet_hours_start ?? undefined,\n    quietHoursEnd: row.quiet_hours_end ?? undefined,\n    timezone: row.timezone ?? undefined,\n    notificationLanguage: row.notification_language ?? undefined,\n    digestEnabled: Boolean(row.digest_enabled),\n    digestFrequency: row.digest_frequency ?? undefined,\n    digestTime: row.digest_time ?? undefined\n  };\n}\ntype RecurringSchedule = {\n  type: 'daily' | 'weekly' | 'monthly';\n  interval?: number;\n  endDate?: string;\n  time?: string;\n};\n\nfunction parseRecurringSchedule(raw: unknown): RecurringSchedule | null {\n  if (!raw || typeof raw !== 'object') {\n    return null;\n  }\n  const record = raw as Record<string, unknown>;\n  const typeValue = typeof record.type === 'string' ? record.type.toLowerCase() : '';\n  if (!['daily', 'weekly', 'monthly'].includes(typeValue)) {\n    return null;\n  }\n  const intervalValue = record.interval !== undefined ? Number(record.interval) : undefined;\n  const interval =\n    Number.isFinite(intervalValue) && intervalValue !== undefined && intervalValue > 0\n      ? Math.floor(intervalValue)\n      : undefined;\n  const endDate = typeof record.endDate === 'string' ? record.endDate : undefined;\n  const time = typeof record.time === 'string' ? record.time : undefined;\n  return {\n    type: typeValue as RecurringSchedule['type'],\n    interval,\n    endDate,\n    time,\n  };\n}\n\nfunction addDays(date: Date, days: number): Date {\n  const result = new Date(date.getTime());\n  result.setUTCDate(result.getUTCDate() + days);\n  return result;\n}\n\nfunction addMonths(date: Date, months: number): Date {\n  const result = new Date(date.getTime());\n  const currentDate = result.getUTCDate();\n  result.setUTCMonth(result.getUTCMonth() + months);\n  while (result.getUTCDate() < currentDate) {\n    result.setUTCDate(result.getUTCDate() - 1);\n  }\n  return result;\n}\n\nfunction applyTimeComponent(date: Date, metadata: RecurringSchedule, fallback: Date): void {\n  const timeString = metadata.time;\n  if (!timeString) {\n    date.setUTCHours(\n      fallback.getUTCHours(),\n      fallback.getUTCMinutes(),\n      fallback.getUTCSeconds(),\n      fallback.getUTCMilliseconds()\n    );\n    return;\n  }\n  const match = timeString.match(/^(\\d{1,2}):(\\d{2})(?::(\\d{2}))?$/);\n  if (!match) {\n    date.setUTCHours(\n      fallback.getUTCHours(),\n      fallback.getUTCMinutes(),\n      fallback.getUTCSeconds(),\n      fallback.getUTCMilliseconds()\n    );\n    return;\n  }\n  const hours = Number(match[1]);\n  const minutes = Number(match[2]);\n  const seconds = match[3] ? Number(match[3]) : 0;\n  date.setUTCHours(hours, minutes, seconds, 0);\n}\n\nfunction computeNextScheduledAt(currentIso: string | null, metadata: RecurringSchedule, reference: Date): string | null {\n  if (!currentIso) {\n    return null;\n  }\n  const base = new Date(currentIso);\n  if (Number.isNaN(base.getTime())) {\n    return null;\n  }\n\n  const interval = Math.max(1, metadata.interval ?? 1);\n  let next = new Date(base.getTime());\n\n  const advance = () => {\n    switch (metadata.type) {\n      case 'daily':\n        next = addDays(next, interval);\n        break;\n      case 'weekly':\n        next = addDays(next, interval * 7);\n        break;\n      case 'monthly':\n        next = addMonths(next, interval);\n        break;\n      default:\n        next = addDays(next, interval);\n        break;\n    }\n  };\n\n  advance();\n  applyTimeComponent(next, metadata, base);\n\n  const endDate = metadata.endDate ? new Date(metadata.endDate) : null;\n\n  while (next <= reference) {\n    advance();\n    applyTimeComponent(next, metadata, base);\n    if (endDate && next > endDate) {\n      return null;\n    }\n  }\n\n  if (endDate && next > endDate) {\n    return null;\n  }\n\n  return next.toISOString();\n}\nasync function ensurePreference(env: Env, userId: string): Promise<PreferenceRow> {\n  const existing = await queryFirst<PreferenceRow>(\n    env.DB,\n    'SELECT * FROM notification_preferences WHERE user_id = ? LIMIT 1',\n    [userId]\n  );\n\n  if (existing) {\n    return existing;\n  }\n\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `INSERT INTO notification_preferences (\n        user_id,\n        notifications_enabled,\n        push_enabled,\n        email_enabled,\n        sms_enabled,\n        session_notifications,\n        session_reminders,\n        matching_notifications,\n        chat_notifications,\n        level_test_notifications,\n        system_notifications,\n        marketing_notifications,\n        quiet_hours_enabled,\n        timezone,\n        notification_language,\n        digest_enabled,\n        digest_frequency,\n        digest_time,\n        created_at,\n        updated_at\n      ) VALUES (?, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, NULL, 'ko', 0, 'DAILY', '09:00', ?, ?)\n    `,\n    [userId, now, now]\n  );\n\n  const inserted = await queryFirst<PreferenceRow>(\n    env.DB,\n    'SELECT * FROM notification_preferences WHERE user_id = ? LIMIT 1',\n    [userId]\n  );\n  if (!inserted) {\n    throw new Error('\uC54C\uB9BC \uC124\uC815\uC744 \uCD08\uAE30\uD654\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  return inserted;\n}\n\nasync function listSubscriptionTopics(env: Env, userId: string): Promise<string[]> {\n  const rows = await query<{ topic: string }>(\n    env.DB,\n    'SELECT topic FROM notification_topic_subscription WHERE user_id = ? ORDER BY topic',\n    [userId]\n  );\n  return rows.map((row) => row.topic);\n}\n\nexport async function createNotification(env: Env, payload: CreateNotificationPayload): Promise<NotificationRecord> {\n  const now = nowIso();\n  const actionData = payload.actionData ? JSON.stringify(payload.actionData) : null;\n  const templateVariables = payload.templateVariables ? JSON.stringify(payload.templateVariables) : null;\n  const scheduleMetadata = payload.scheduleMetadata ? JSON.stringify(payload.scheduleMetadata) : null;\n  const status = payload.status ?? (payload.scheduledAt ? 'SCHEDULED' : 'UNREAD');\n\n  await execute(\n    env.DB,\n    `INSERT INTO notifications (\n        user_id,\n        type,\n        title,\n        content,\n        action_url,\n        action_data,\n        image_url,\n        icon_url,\n        status,\n        priority,\n        category,\n        scheduled_at,\n        sent_at,\n        read_at,\n        expires_at,\n        is_persistent,\n        sender_user_id,\n        template_id,\n        template_variables,\n        schedule_metadata,\n        delivery_channels,\n        push_sent,\n        email_sent,\n        sms_sent,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, NULL, ?, ?, ?, ?, ?, ?, ?, 0, 0, 0, ?, ?)\n    `,\n    [\n      payload.userId,\n      payload.type,\n      payload.title,\n      payload.content,\n      payload.actionUrl ?? null,\n      actionData,\n      payload.imageUrl ?? null,\n      payload.iconUrl ?? null,\n      status,\n      payload.priority ?? 1,\n      payload.category ?? null,\n      payload.scheduledAt ?? null,\n      payload.expiresAt ?? null,\n      payload.isPersistent === false ? 0 : 1,\n      payload.senderUserId ?? null,\n      payload.templateId ?? null,\n      templateVariables,\n      scheduleMetadata,\n      payload.deliveryChannels ?? null,\n      now,\n      now\n    ]\n  );\n\n  const row = await queryFirst<NotificationRow>(\n    env.DB,\n    'SELECT last_insert_rowid() as id'\n  );\n\n  const notificationId = Number((row as any)?.id ?? 0);\n  if (!notificationId) {\n    throw new Error('\uC54C\uB9BC \uC0DD\uC131 \uACB0\uACFC\uB97C \uD655\uC778\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n\n  return getNotificationById(env, notificationId);\n}\n\nexport async function getNotificationById(env: Env, notificationId: number): Promise<NotificationRecord> {\n  const row = await queryFirst<NotificationRow>(\n    env.DB,\n    'SELECT * FROM notifications WHERE notification_id = ? LIMIT 1',\n    [notificationId]\n  );\n  if (!row) {\n    throw new Error('\uC54C\uB9BC\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  return mapNotificationRow(row);\n}\n\nexport async function listNotifications(\n  env: Env,\n  userId: string,\n  options: ListOptions = {}\n): Promise<{ data: NotificationListItem[]; page: number; size: number; total: number; unreadCount: number }> {\n  const page = normalizePage(options.page);\n  const size = normalizePageSize(options.size);\n  const offset = (page - 1) * size;\n\n  const where: string[] = ['user_id = ?'];\n  const params: (string | number)[] = [userId];\n\n  if (options.category) {\n    where.push('UPPER(category) = UPPER(?)');\n    params.push(options.category);\n  }\n\n  if (options.unreadOnly) {\n    where.push(\"status = 'UNREAD'\");\n  } else if (options.status) {\n    where.push('status = ?');\n    params.push(options.status);\n  }\n\n  const whereClause = `WHERE ${where.join(' AND ')}`;\n\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM notifications ${whereClause}`,\n    params\n  );\n\n  const rows = await query<NotificationRow>(\n    env.DB,\n    `SELECT * FROM notifications\n      ${whereClause}\n      ORDER BY created_at DESC\n      LIMIT ? OFFSET ?`,\n    [...params, size, offset]\n  );\n\n  const records = rows.map(mapNotificationRow);\n  const unreadCount = await getUnreadCount(env, userId);\n\n  return {\n    data: records.map(toListItem),\n    page,\n    size,\n    total: totalRow?.count ?? 0,\n    unreadCount\n  };\n}\n\nexport async function getUnreadCount(env: Env, userId: string): Promise<number> {\n  const row = await queryFirst<{ count: number }>(\n    env.DB,\n    \"SELECT COUNT(*) as count FROM notifications WHERE user_id = ? AND status = 'UNREAD'\",\n    [userId]\n  );\n  return row?.count ?? 0;\n}\n\nexport async function markAsRead(env: Env, userId: string, notificationId: number) {\n  const record = await getNotificationById(env, notificationId);\n  if (record.userId !== userId) {\n    throw new Error('\uC54C\uB9BC\uC744 \uC77D\uC74C\uC73C\uB85C \uD45C\uC2DC\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE notifications\n        SET status = 'READ', read_at = ?, updated_at = ?\n      WHERE notification_id = ?`,\n    [now, now, notificationId]\n  );\n}\n\nexport async function markAllAsRead(env: Env, userId: string) {\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE notifications SET status = 'READ', read_at = ?, updated_at = ?\n      WHERE user_id = ? AND status = 'UNREAD'`,\n    [now, now, userId]\n  );\n}\n\nexport async function markCategoryAsRead(env: Env, userId: string, category: string) {\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE notifications SET status = 'READ', read_at = ?, updated_at = ?\n      WHERE user_id = ? AND category = ? AND status = 'UNREAD'`,\n    [now, now, userId, category]\n  );\n}\n\nexport async function deleteNotification(env: Env, userId: string, notificationId: number) {\n  await execute(\n    env.DB,\n    'DELETE FROM notifications WHERE notification_id = ? AND user_id = ?',\n    [notificationId, userId]\n  );\n}\n\nexport async function deleteAllNotifications(env: Env, userId: string) {\n  await execute(env.DB, 'DELETE FROM notifications WHERE user_id = ?', [userId]);\n}\n\nexport async function deleteNotificationsBatch(env: Env, userId: string, notificationIds: number[]): Promise<void> {\n  const ids = notificationIds.filter((id) => Number.isFinite(id));\n  if (!ids.length) {\n    return;\n  }\n  const placeholders = ids.map(() => '?').join(', ');\n  await execute(\n    env.DB,\n    `DELETE FROM notifications WHERE user_id = ? AND notification_id IN (${placeholders})`,\n    [userId, ...ids]\n  );\n}\n\nexport async function cancelScheduledNotification(env: Env, userId: string, notificationId: number): Promise<boolean> {\n  const row = await queryFirst<NotificationRow>(\n    env.DB,\n    'SELECT * FROM notifications WHERE notification_id = ? AND user_id = ? LIMIT 1',\n    [notificationId, userId]\n  );\n  if (!row) {\n    return false;\n  }\n  if (row.status !== 'SCHEDULED') {\n    await deleteNotification(env, userId, notificationId);\n    return true;\n  }\n\n  await execute(\n    env.DB,\n    \"UPDATE notifications SET status = 'CANCELLED', updated_at = ?, schedule_metadata = NULL WHERE notification_id = ?\",\n    [nowIso(), notificationId]\n  );\n  return true;\n}\n\nexport async function listNotificationCategories(env: Env, userId: string): Promise<Array<{ category: string; total: number; unread: number }>> {\n  const rows = await query<{ category: string | null; total: number; unread: number }>(\n    env.DB,\n    `SELECT\n        COALESCE(category, 'general') AS category,\n        COUNT(*) AS total,\n        SUM(CASE WHEN status = 'UNREAD' THEN 1 ELSE 0 END) AS unread\n      FROM notifications\n      WHERE user_id = ?\n      GROUP BY COALESCE(category, 'general')\n      ORDER BY category`,\n    [userId]\n  );\n\n  return rows.map((row) => ({\n    category: row.category ?? 'general',\n    total: Number(row.total ?? 0),\n    unread: Number(row.unread ?? 0)\n  }));\n}\n\nexport async function listScheduledNotifications(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number\n): Promise<{ data: NotificationRecord[]; page: number; size: number; total: number }> {\n  const normalizedPage = normalizePage(page);\n  const normalizedSize = normalizePageSize(size);\n  const offset = (normalizedPage - 1) * normalizedSize;\n\n  const whereClause = `WHERE user_id = ? AND (status = 'SCHEDULED' OR (scheduled_at IS NOT NULL AND datetime(scheduled_at) >= datetime('now'))) `;\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) AS count FROM notifications ${whereClause}`,\n    [userId]\n  );\n\n  const rows = await query<NotificationRow>(\n    env.DB,\n    `SELECT * FROM notifications\n      ${whereClause}\n      ORDER BY scheduled_at ASC, created_at DESC\n      LIMIT ? OFFSET ?`,\n    [userId, normalizedSize, offset]\n  );\n\n  return {\n    data: rows.map(mapNotificationRow),\n    page: normalizedPage,\n    size: normalizedSize,\n    total: totalRow ? Number(totalRow.count ?? 0) : 0\n  };\n}\n\nexport async function subscribeToNotificationTopics(env: Env, userId: string, topics: string[]): Promise<string[]> {\n  const normalized = topics\n    .map((topic) => String(topic).trim().toLowerCase())\n    .filter((topic) => topic.length > 0);\n\n  if (!normalized.length) {\n    return listSubscriptionTopics(env, userId);\n  }\n\n  const now = nowIso();\n  for (const topic of new Set(normalized)) {\n    await execute(\n      env.DB,\n      `INSERT INTO notification_topic_subscription (user_id, topic, created_at, updated_at)\n        VALUES (?, ?, ?, ?)\n        ON CONFLICT(user_id, topic) DO UPDATE SET updated_at = excluded.updated_at`,\n      [userId, topic, now, now]\n    );\n  }\n\n  return listSubscriptionTopics(env, userId);\n}\n\nexport async function unsubscribeFromNotificationTopics(env: Env, userId: string, topics: string[]): Promise<string[]> {\n  const normalized = topics\n    .map((topic) => String(topic).trim().toLowerCase())\n    .filter((topic) => topic.length > 0);\n\n  if (!normalized.length) {\n    return listSubscriptionTopics(env, userId);\n  }\n\n  const placeholders = normalized.map(() => '?').join(', ');\n  await execute(\n    env.DB,\n    `DELETE FROM notification_topic_subscription WHERE user_id = ? AND topic IN (${placeholders})`,\n    [userId, ...normalized]\n  );\n\n  return listSubscriptionTopics(env, userId);\n}\n\nexport async function scheduleNotification(\n  env: Env,\n  userId: string,\n  payload: {\n    title: string;\n    message: string;\n    type?: string;\n    data?: Record<string, any>;\n    scheduledAt: string;\n    recurring?: Record<string, any> | null;\n    priority?: number;\n    category?: string;\n    deliveryChannels?: string;\n  }\n): Promise<NotificationRecord> {\n  return createNotification(env, {\n    userId,\n    type: payload.type ?? 'SCHEDULED',\n    title: payload.title,\n    content: payload.message,\n    actionData: payload.data ?? null,\n    scheduledAt: payload.scheduledAt,\n    status: 'SCHEDULED',\n    scheduleMetadata: payload.recurring ?? null,\n    priority: payload.priority ?? 2,\n    category: payload.category ?? 'scheduled',\n    deliveryChannels: payload.deliveryChannels ?? undefined\n  });\n}\n\nexport async function sendTestNotification(env: Env, userId: string, type: string | null): Promise<NotificationRecord> {\n  return createNotification(env, {\n    userId,\n    type: type ?? 'TEST',\n    title: '\uD14C\uC2A4\uD2B8 \uC54C\uB9BC',\n    content: '\uD14C\uC2A4\uD2B8 \uC54C\uB9BC\uC785\uB2C8\uB2E4.',\n    category: 'test',\n    priority: 1\n  });\n}\n\nexport async function sendUrgentNotifications(\n  env: Env,\n  initiatorUserId: string,\n  recipients: string[],\n  payload: {\n    title: string;\n    message: string;\n    type?: string;\n    expiresAt?: string;\n    priority?: number;\n    category?: string;\n    data?: Record<string, any>;\n  }\n): Promise<{ delivered: number }>\n{\n  const normalized = recipients\n    .map((id) => String(id).trim())\n    .filter((id) => id.length > 0);\n\n  let targetIds: string[] = [];\n  const hasAll = normalized.some((id) => id.toLowerCase() === 'all');\n  if (hasAll) {\n    const rows = await query<{ user_id: string }>(\n      env.DB,\n      'SELECT user_id FROM users ORDER BY created_at DESC LIMIT 200'\n    );\n    targetIds = rows.map((row) => row.user_id);\n  } else {\n    targetIds = Array.from(new Set(normalized.filter((id) => id.toLowerCase() !== 'all')));\n  }\n\n  if (!targetIds.length) {\n    return { delivered: 0 };\n  }\n\n  const jobs = targetIds.map((targetId) =>\n    createNotification(env, {\n      userId: targetId,\n      type: payload.type ?? 'URGENT',\n      title: payload.title,\n      content: payload.message,\n      actionData: payload.data ?? null,\n      expiresAt: payload.expiresAt ?? undefined,\n      priority: payload.priority ?? 3,\n      category: payload.category ?? 'urgent',\n      senderUserId: initiatorUserId\n    }).catch((error) => {\n      console.error('[notifications] failed to send urgent notification', error);\n      return null;\n    })\n  );\n\n  const results = await Promise.all(jobs);\n  const delivered = results.filter((record) => record !== null).length;\n  return { delivered };\n}\n\nexport async function processScheduledNotifications(env: Env, limit = 100): Promise<number> {\n  const nowIsoStr = nowIso();\n  const reference = new Date(nowIsoStr);\n  const rows = await query<NotificationRow>(\n    env.DB,\n    \"SELECT * FROM notifications WHERE status = 'SCHEDULED' AND scheduled_at IS NOT NULL AND datetime(scheduled_at) <= datetime(?) LIMIT ?\",\n    [nowIsoStr, limit]\n  );\n\n  let processed = 0;\n\n  for (const row of rows) {\n    try {\n      await execute(\n        env.DB,\n        \"UPDATE notifications SET status = 'UNREAD', sent_at = ?, updated_at = ?, schedule_metadata = NULL WHERE notification_id = ?\",\n        [nowIsoStr, nowIsoStr, row.notification_id]\n      );\n      processed += 1;\n\n      const metadata = parseRecurringSchedule(parseJson<Record<string, unknown>>(row.schedule_metadata));\n      if (metadata) {\n        const nextScheduledAt = computeNextScheduledAt(row.scheduled_at ?? row.created_at, metadata, reference);\n        if (nextScheduledAt) {\n          const actionData = parseJson<Record<string, any>>(row.action_data);\n          const templateVariables = parseJson<Record<string, any>>(row.template_variables);\n          await createNotification(env, {\n            userId: row.user_id,\n            type: row.type,\n            title: row.title,\n            content: row.content,\n            actionUrl: row.action_url ?? undefined,\n            actionData: actionData ?? null,\n            imageUrl: row.image_url ?? undefined,\n            iconUrl: row.icon_url ?? undefined,\n            priority: row.priority ?? undefined,\n            category: row.category ?? undefined,\n            scheduledAt: nextScheduledAt,\n            status: 'SCHEDULED',\n            scheduleMetadata: metadata,\n            isPersistent: row.is_persistent !== null ? Boolean(row.is_persistent) : undefined,\n            senderUserId: row.sender_user_id ?? undefined,\n            templateId: row.template_id ?? undefined,\n            templateVariables: templateVariables ?? null,\n            deliveryChannels: row.delivery_channels ?? undefined,\n          });\n        }\n      }\n    } catch (error) {\n      console.error('[notifications] failed to process scheduled notification', error);\n    }\n  }\n\n  return processed;\n}\n\nexport async function getNotificationPreferences(env: Env, userId: string): Promise<NotificationPreferenceSettings> {\n  const row = await ensurePreference(env, userId);\n  const base = mapPreferenceRow(row);\n  const subscriptionTopics = await listSubscriptionTopics(env, userId);\n  return {\n    ...base,\n    subscriptionTopics\n  };\n}\n\nexport async function updateNotificationPreferences(\n  env: Env,\n  userId: string,\n  settings: Partial<NotificationPreferenceSettings>\n): Promise<NotificationPreferenceSettings> {\n  await ensurePreference(env, userId);\n  const now = nowIso();\n  const setClauses: string[] = [];\n  const params: (string | number)[] = [];\n\n  const booleanFields: Array<keyof NotificationPreferenceSettings> = [\n    'notificationsEnabled',\n    'pushEnabled',\n    'emailEnabled',\n    'smsEnabled',\n    'sessionNotifications',\n    'sessionReminders',\n    'matchingNotifications',\n    'chatNotifications',\n    'levelTestNotifications',\n    'systemNotifications',\n    'marketingNotifications',\n    'quietHoursEnabled',\n    'digestEnabled'\n  ];\n\n  for (const field of booleanFields) {\n    if (settings[field] !== undefined) {\n      const column = field.replace(/[A-Z]/g, (m) => `_${m.toLowerCase()}`);\n      setClauses.push(`${column} = ?`);\n      params.push(settings[field] ? 1 : 0);\n    }\n  }\n\n  if (settings.quietHoursStart !== undefined) {\n    setClauses.push('quiet_hours_start = ?');\n    params.push(settings.quietHoursStart ?? null);\n  }\n  if (settings.quietHoursEnd !== undefined) {\n    setClauses.push('quiet_hours_end = ?');\n    params.push(settings.quietHoursEnd ?? null);\n  }\n  if (settings.timezone !== undefined) {\n    setClauses.push('timezone = ?');\n    params.push(settings.timezone ?? null);\n  }\n  if (settings.notificationLanguage !== undefined) {\n    setClauses.push('notification_language = ?');\n    params.push(settings.notificationLanguage ?? null);\n  }\n  if (settings.digestFrequency !== undefined) {\n    setClauses.push('digest_frequency = ?');\n    params.push(settings.digestFrequency ?? null);\n  }\n  if (settings.digestTime !== undefined) {\n    setClauses.push('digest_time = ?');\n    params.push(settings.digestTime ?? null);\n  }\n\n  if (setClauses.length > 0) {\n    setClauses.push('updated_at = ?');\n    params.push(now, userId);\n    await execute(\n      env.DB,\n      `UPDATE notification_preferences SET ${setClauses.join(', ')} WHERE user_id = ?`,\n      params\n    );\n  }\n\n  return getNotificationPreferences(env, userId);\n}\n\nexport async function getNotificationStats(env: Env, userId: string): Promise<NotificationStats> {\n  const totals = await queryFirst<{ total: number; unread: number; read: number }>(\n    env.DB,\n    `SELECT COUNT(*) AS total,\n            SUM(CASE WHEN status = 'UNREAD' THEN 1 ELSE 0 END) AS unread,\n            SUM(CASE WHEN status = 'READ' THEN 1 ELSE 0 END) AS read\n       FROM notifications\n      WHERE user_id = ?`,\n    [userId]\n  );\n\n  const todayKey = new Date().toISOString().slice(0, 10);\n  const todayRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM notifications\n      WHERE user_id = ? AND substr(created_at, 1, 10) = ?`,\n    [userId, todayKey]\n  );\n\n  const categoryRows = await query<{ category: string | null; cnt: number }>(\n    env.DB,\n    `SELECT COALESCE(category, 'UNCATEGORIZED') as category, COUNT(*) as cnt\n       FROM notifications\n      WHERE user_id = ?\n      GROUP BY COALESCE(category, 'UNCATEGORIZED')`,\n    [userId]\n  );\n\n  const categories: Record<string, number> = {};\n  for (const row of categoryRows) {\n    categories[row.category ?? 'UNCATEGORIZED'] = row.cnt;\n  }\n\n  return {\n    total: totals?.total ?? 0,\n    unread: totals?.unread ?? 0,\n    read: totals?.read ?? 0,\n    today: todayRow?.count ?? 0,\n    categories\n  };\n}\n\nexport async function registerPushToken(env: Env, userId: string, token: string, deviceType?: string) {\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `INSERT INTO notification_push_tokens (user_id, token, device_type, created_at, updated_at)\n      VALUES (?, ?, ?, ?, ?)\n      ON CONFLICT(token) DO UPDATE SET updated_at = excluded.updated_at, user_id = excluded.user_id, device_type = excluded.device_type`,\n    [userId, token, deviceType ?? 'web', now, now]\n  );\n}\n\nexport async function unregisterPushToken(env: Env, userId: string, token: string) {\n  await execute(\n    env.DB,\n    'DELETE FROM notification_push_tokens WHERE token = ? AND user_id = ?',\n    [token, userId]\n  );\n}\n\nexport async function createNotificationFromTemplate(\n  env: Env,\n  userId: string,\n  templateId: string,\n  variables: Record<string, any> | undefined,\n  options: Partial<CreateNotificationPayload> = {}\n) {\n  const title = options.title ?? `Template ${templateId}`;\n  const content = options.content ?? '\uC54C\uB9BC\uC774 \uB3C4\uCC29\uD588\uC2B5\uB2C8\uB2E4.';\n  return createNotification(env, {\n    userId,\n    type: options.type ?? 'SYSTEM',\n    title,\n    content,\n    templateId,\n    templateVariables: variables ?? null,\n    ...options\n  });\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse, paginatedResponse } from '../utils/response';\nimport {\n  createGroupSession,\n  joinGroupSession,\n  joinGroupSessionByCode,\n  leaveGroupSession,\n  startGroupSession,\n  endGroupSession,\n  cancelGroupSession,\n  getGroupSessionById,\n  listAvailableGroupSessions,\n  listUserGroupSessions,\n  listHostedGroupSessions,\n  kickGroupParticipant,\n  rateGroupSession,\n  updateGroupSession,\n  getRecommendedGroupSessions,\n  inviteToGroupSession,\n  respondToInvitation,\n  searchGroupSessions\n} from '../services/groupSessions';\nimport { saveLearningProgress } from '../services/groupSessionsAI';\n\nconst groupSessionsRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\nfunction getPaginationParams(c: any) {\n  const page = Math.max(Number(c.req.query('page') ?? '1'), 1);\n  const size = Math.max(Math.min(Number(c.req.query('size') ?? '20'), 50), 1);\n  return { page, size };\n}\n\nfunction requirePathParam(value: string | undefined, field: string): string {\n  if (!value) {\n    throw new AppError(`Invalid ${field}`, 400, 'INVALID_PATH_PARAM');\n  }\n  return value;\n}\n\nfunction requireUserId(c: any): string {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  return userId;\n}\n\ngroupSessionsRoutes.use('*', requireAuth);\n\ngroupSessionsRoutes.post('/', async (c) => {\n  const hostUserId = c.get('userId');\n  if (!hostUserId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const required = ['title', 'topicCategory', 'targetLanguage', 'languageLevel', 'maxParticipants', 'scheduledAt', 'sessionDuration', 'isPublic'];\n  const missing = required.filter((key) => body[key] === undefined || body[key] === null || body[key] === '');\n  if (missing.length) {\n    throw new AppError(`Missing fields: ${missing.join(', ')}`, 400, 'INVALID_PAYLOAD');\n  }\n  const session = await createGroupSession(c.env, hostUserId, body);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.get('/:sessionId', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const session = await getGroupSessionById(c.env, sessionId, userId);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.post('/:sessionId/join', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const body = await c.req.json().catch(() => ({}));\n  const session = await joinGroupSession(c.env, userId, sessionId, body);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.post('/join/:joinCode', async (c) => {\n  const userId = requireUserId(c);\n  const joinCode = requirePathParam(c.req.param('joinCode'), 'joinCode');\n  const body = await c.req.json().catch(() => ({}));\n  const session = await joinGroupSessionByCode(c.env, userId, joinCode, body);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.post('/:sessionId/leave', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  await leaveGroupSession(c.env, userId, sessionId);\n  return successResponse(c, { success: true });\n});\n\ngroupSessionsRoutes.post('/:sessionId/start', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const session = await startGroupSession(c.env, userId, sessionId);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.post('/:sessionId/end', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const session = await endGroupSession(c.env, userId, sessionId);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.post('/:sessionId/cancel', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const reason = c.req.query('reason') ?? undefined;\n  await cancelGroupSession(c.env, userId, sessionId, reason);\n  return successResponse(c, { success: true });\n});\n\ngroupSessionsRoutes.get('/', async (c) => {\n  const userId = c.get('userId');\n  const { page, size } = getPaginationParams(c);\n  const filters = {\n    language: c.req.query('language'),\n    level: c.req.query('level'),\n    category: c.req.query('category'),\n    tags: c.req.query('tags') ? c.req.query('tags')!.split(',').map((t) => t.trim()).filter(Boolean) : undefined\n  };\n  const result = await listAvailableGroupSessions(c.env, page, size, filters, userId ?? undefined);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\ngroupSessionsRoutes.get('/available', async (c) => {\n  const userId = c.get('userId');\n  const { page, size } = getPaginationParams(c);\n  const filters = {\n    language: c.req.query('language'),\n    level: c.req.query('level'),\n    category: c.req.query('category'),\n    tags: c.req.query('tags') ? c.req.query('tags')!.split(',').map((t) => t.trim()).filter(Boolean) : undefined\n  };\n  const result = await listAvailableGroupSessions(c.env, page, size, filters, userId ?? undefined);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\ngroupSessionsRoutes.get('/my', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const status = c.req.query('status') ?? undefined;\n  const sessions = await listUserGroupSessions(c.env, userId, status ?? undefined);\n  return successResponse(c, sessions);\n});\n\ngroupSessionsRoutes.get('/my-sessions', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const status = c.req.query('status') ?? undefined;\n  const sessions = await listUserGroupSessions(c.env, userId, status ?? undefined);\n  return successResponse(c, sessions);\n});\n\ngroupSessionsRoutes.get('/hosted', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const sessions = await listHostedGroupSessions(c.env, userId);\n  return successResponse(c, sessions);\n});\n\ngroupSessionsRoutes.post('/:sessionId/kick/:participantId', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const participantId = requirePathParam(c.req.param('participantId'), 'participantId');\n  await kickGroupParticipant(c.env, userId, sessionId, participantId);\n  return successResponse(c, { success: true });\n});\n\ngroupSessionsRoutes.post('/:sessionId/rate', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const rating = Number(c.req.query('rating') ?? c.req.query('score') ?? 0);\n  if (!rating || rating < 1 || rating > 5) {\n    throw new AppError('rating must be between 1 and 5', 400, 'INVALID_QUERY_PARAM');\n  }\n  const feedback = c.req.query('feedback') ?? undefined;\n  await rateGroupSession(c.env, userId, sessionId, rating, feedback);\n  return successResponse(c, { success: true });\n});\n\ngroupSessionsRoutes.put('/:sessionId', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const body = await c.req.json();\n  await updateGroupSession(c.env, userId, sessionId, body);\n  return successResponse(c, { success: true });\n});\n\ngroupSessionsRoutes.get('/recommended/list', async (c) => {\n  const userId = requireUserId(c);\n  const sessions = await getRecommendedGroupSessions(c.env, userId);\n  return successResponse(c, sessions);\n});\n\ngroupSessionsRoutes.post('/progress/track', async (c) => {\n  const userId = requireUserId(c);\n  const body = await c.req.json().catch(() => ({}));\n\n  const sessionId = typeof body.sessionId === 'string' ? body.sessionId : undefined;\n  const metrics = typeof body.metrics === 'object' && body.metrics !== null ? body.metrics : undefined;\n  const notes = typeof body.notes === 'string' ? body.notes : undefined;\n  const completedAt = typeof body.completedAt === 'string' ? body.completedAt : undefined;\n\n  let durationMinutes: number | undefined;\n  if (typeof body.durationMinutes === 'number' && Number.isFinite(body.durationMinutes)) {\n    durationMinutes = body.durationMinutes;\n  } else if (typeof body.duration === 'number' && Number.isFinite(body.duration)) {\n    durationMinutes = body.duration;\n  }\n\n  const record = await saveLearningProgress(c.env, {\n    userId,\n    sessionId,\n    metrics,\n    notes,\n    completedAt,\n    durationMinutes\n  });\n\n  return successResponse(c, { saved: true, progress: record });\n});\n\ngroupSessionsRoutes.post('/:sessionId/invite', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const body = await c.req.json();\n  if (!Array.isArray(body)) {\n    throw new AppError('Expected an array of userIds', 400, 'INVALID_PAYLOAD');\n  }\n  const session = await inviteToGroupSession(c.env, userId, sessionId, body);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.post('/:sessionId/invitation/respond', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const accept = c.req.query('accept');\n  const accepted = accept ? accept.toLowerCase() === 'true' : true;\n  await respondToInvitation(c.env, userId, sessionId, accepted);\n  return successResponse(c, { success: true, accepted });\n});\n\ngroupSessionsRoutes.get('/search', async (c) => {\n  const keyword = c.req.query('keyword') ?? '';\n  const language = c.req.query('language') ?? undefined;\n  const level = c.req.query('level') ?? undefined;\n  const sessions = await searchGroupSessions(c.env, keyword, language, level);\n  return successResponse(c, sessions);\n});\n\nexport default groupSessionsRoutes;\n", "import type { Env } from '../index';\nimport type { GroupSessionRecord, GroupSessionListItem, GroupSessionParticipant } from '../types';\nimport { query, queryFirst, execute } from '../utils/db';\nimport {\n  getCachedGroupSession,\n  setCachedGroupSession,\n  invalidateGroupSessionCache\n} from './groupSessionsCache';\nimport {\n  saveInvitation as saveSessionInvitation,\n  getInvitation as getSessionInvitation,\n  deleteInvitation as deleteSessionInvitation,\n  addActiveSession,\n  removeActiveSession,\n  addRecentSession\n} from './groupSessionsState';\n\ninterface CreateGroupSessionPayload {\n  title: string;\n  description?: string;\n  topicCategory: string;\n  targetLanguage: string;\n  languageLevel: string;\n  maxParticipants: number;\n  scheduledAt: string;\n  sessionDuration: number;\n  sessionTags?: string[];\n  isPublic: boolean;\n}\n\ninterface JoinPayload {\n  joinCode?: string;\n  message?: string;\n}\n\ninterface GroupSessionRow {\n  session_id: string;\n  title: string;\n  description: string | null;\n  host_user_id: string;\n  topic_category: string | null;\n  target_language: string | null;\n  language_level: string | null;\n  max_participants: number | null;\n  current_participants: number | null;\n  scheduled_at: string | null;\n  session_duration: number | null;\n  status: string | null;\n  room_id: string | null;\n  session_tags: string | null;\n  is_public: number | null;\n  join_code: string | null;\n  started_at: string | null;\n  ended_at: string | null;\n  rating_average: number | null;\n  rating_count: number | null;\n  host_user_name?: string | null;\n  host_profile_image?: string | null;\n}\n\ninterface ParticipantRow {\n  participant_id: string;\n  session_id: string;\n  user_id: string;\n  status: string | null;\n  joined_at: string | null;\n  left_at: string | null;\n  participation_duration: number | null;\n  rating: number | null;\n  feedback: string | null;\n  connection_quality: string | null;\n  is_muted: number | null;\n  is_video_enabled: number | null;\n  user_name?: string | null;\n  profile_image?: string | null;\n}\n\nconst GROUP_STATUS = {\n  SCHEDULED: 'SCHEDULED',\n  WAITING: 'WAITING',\n  ACTIVE: 'ACTIVE',\n  COMPLETED: 'COMPLETED',\n  CANCELLED: 'CANCELLED'\n} as const;\n\nconst PARTICIPANT_STATUS = {\n  INVITED: 'INVITED',\n  JOINED: 'JOINED',\n  LEFT: 'LEFT',\n  KICKED: 'KICKED',\n  BANNED: 'BANNED'\n} as const;\n\nfunction nowIso(): string {\n  return new Date().toISOString();\n}\n\nfunction newJoinCode(): string {\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\n}\n\nfunction mapGroupSession(row: GroupSessionRow, participants: GroupSessionParticipant[] = [], currentUserId?: string): GroupSessionRecord {\n  const isPublic = row.is_public === null ? undefined : Number(row.is_public) !== 0;\n  const currentParticipants = Number(row.current_participants ?? 0);\n  const maxParticipants = row.max_participants !== null ? Number(row.max_participants) : undefined;\n  const status = row.status ?? GROUP_STATUS.SCHEDULED;\n  const tags = row.session_tags\n    ? row.session_tags\n        .split(',')\n        .map((t) => t.trim())\n        .filter(Boolean)\n    : undefined;\n\n  return {\n    id: row.session_id,\n    title: row.title,\n    description: row.description ?? undefined,\n    hostUserId: row.host_user_id,\n    hostUserName: row.host_user_name ?? undefined,\n    hostProfileImage: row.host_profile_image ?? undefined,\n    topicCategory: row.topic_category ?? undefined,\n    targetLanguage: row.target_language ?? undefined,\n    languageLevel: row.language_level ?? undefined,\n    maxParticipants,\n    currentParticipants,\n    scheduledAt: row.scheduled_at ?? undefined,\n    sessionDuration: row.session_duration !== null ? Number(row.session_duration) : undefined,\n    status,\n    roomId: row.room_id ?? undefined,\n    sessionTags: tags && tags.length > 0 ? tags : undefined,\n    isPublic,\n    joinCode: row.join_code ?? undefined,\n    startedAt: row.started_at ?? undefined,\n    endedAt: row.ended_at ?? undefined,\n    ratingAverage: row.rating_average !== null ? Number(row.rating_average) : undefined,\n    ratingCount: row.rating_count !== null ? Number(row.rating_count) : undefined,\n    participants,\n    canJoin:\n      currentUserId !== undefined &&\n      row.host_user_id !== currentUserId &&\n      (isPublic ?? false) &&\n      status === GROUP_STATUS.SCHEDULED &&\n      currentParticipants < (maxParticipants ?? 10),\n    joinMessage: undefined\n  };\n}\n\nfunction cloneParticipants(participants?: GroupSessionParticipant[]): GroupSessionParticipant[] | undefined {\n  return participants ? participants.map((participant) => ({ ...participant })) : undefined;\n}\n\nfunction applyJoinMetadata(\n  record: GroupSessionRecord,\n  currentUserId?: string\n): GroupSessionRecord {\n  const cloned: GroupSessionRecord = {\n    ...record,\n    participants: cloneParticipants(record.participants)\n  };\n\n  const isPublic = record.isPublic ?? false;\n  const status = record.status ?? GROUP_STATUS.SCHEDULED;\n  const maxParticipants = record.maxParticipants ?? 10;\n\n  cloned.canJoin =\n    currentUserId !== undefined &&\n    record.hostUserId !== currentUserId &&\n    isPublic &&\n    status === GROUP_STATUS.SCHEDULED &&\n    record.currentParticipants < maxParticipants;\n\n  return cloned;\n}\n\nfunction mapGroupList(row: GroupSessionRow, currentUserId?: string): GroupSessionListItem {\n  const scheduledAt = row.scheduled_at ?? undefined;\n  const status = row.status ?? GROUP_STATUS.SCHEDULED;\n  let timeUntilStart: string | undefined;\n  if (scheduledAt) {\n    const diffMs = new Date(scheduledAt).getTime() - Date.now();\n    if (diffMs > 0) {\n      const hours = Math.floor(diffMs / 3600000);\n      const minutes = Math.floor((diffMs % 3600000) / 60000);\n      timeUntilStart = `${hours}h ${minutes}m`;\n    }\n  }\n  const tags = row.session_tags\n    ? row.session_tags\n        .split(',')\n        .map((t) => t.trim())\n        .filter(Boolean)\n    : undefined;\n  return {\n    id: row.session_id,\n    title: row.title,\n    description: row.description ?? undefined,\n    hostUserName: row.host_user_name ?? undefined,\n    hostProfileImage: row.host_profile_image ?? undefined,\n    topicCategory: row.topic_category ?? undefined,\n    targetLanguage: row.target_language ?? undefined,\n    languageLevel: row.language_level ?? undefined,\n    maxParticipants: row.max_participants !== null ? Number(row.max_participants) : undefined,\n    currentParticipants: Number(row.current_participants ?? 0),\n    scheduledAt,\n    sessionDuration: row.session_duration !== null ? Number(row.session_duration) : undefined,\n    status,\n    sessionTags: tags && tags.length > 0 ? tags : undefined,\n    ratingAverage: row.rating_average !== null ? Number(row.rating_average) : undefined,\n    ratingCount: row.rating_count !== null ? Number(row.rating_count) : undefined,\n    canJoin:\n      currentUserId !== undefined &&\n      row.host_user_id !== currentUserId &&\n      status === GROUP_STATUS.SCHEDULED &&\n      Number(row.current_participants ?? 0) < Number(row.max_participants ?? 10),\n    timeUntilStart\n  };\n}\n\nasync function fetchParticipants(env: Env, sessionId: string): Promise<GroupSessionParticipant[]> {\n  const rows = await query<ParticipantRow>(\n    env.DB,\n    `SELECT gsp.*, u.name AS user_name, u.profile_image AS profile_image\n       FROM group_session_participants gsp\n       LEFT JOIN users u ON u.user_id = gsp.user_id\n      WHERE gsp.session_id = ?\n      ORDER BY gsp.joined_at ASC`,\n    [sessionId]\n  );\n  return rows.map((row) => ({\n    userId: row.user_id,\n    userName: row.user_name ?? undefined,\n    profileImage: row.profile_image ?? undefined,\n    status: row.status ?? undefined,\n    joinedAt: row.joined_at ?? undefined,\n    isMuted: row.is_muted === null ? undefined : Boolean(row.is_muted),\n    isVideoEnabled: row.is_video_enabled === null ? undefined : Boolean(row.is_video_enabled)\n  }));\n}\n\nexport async function createGroupSession(env: Env, hostUserId: string, payload: CreateGroupSessionPayload): Promise<GroupSessionRecord> {\n  const now = nowIso();\n  const sessionId = crypto.randomUUID();\n  const joinCode = newJoinCode();\n  await execute(\n    env.DB,\n    `INSERT INTO group_sessions (\n        session_id,\n        title,\n        description,\n        host_user_id,\n        topic_category,\n        target_language,\n        language_level,\n        max_participants,\n        current_participants,\n        scheduled_at,\n        session_duration,\n        status,\n        room_id,\n        session_tags,\n        is_public,\n        join_code,\n        started_at,\n        ended_at,\n        rating_average,\n        rating_count,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, 1, ?, ?, ?, NULL, ?, ?, ?, NULL, NULL, 0, 0, ?, ?)\n    `,\n    [\n      sessionId,\n      payload.title,\n      payload.description ?? null,\n      hostUserId,\n      payload.topicCategory,\n      payload.targetLanguage,\n      payload.languageLevel,\n      payload.maxParticipants,\n      payload.scheduledAt,\n      payload.sessionDuration,\n      GROUP_STATUS.SCHEDULED,\n      payload.sessionTags ? payload.sessionTags.join(',') : null,\n      payload.isPublic ? 1 : 0,\n      joinCode,\n      now,\n      now\n    ]\n  );\n\n  await execute(\n    env.DB,\n    `INSERT INTO group_session_participants (\n        participant_id,\n        session_id,\n        user_id,\n        status,\n        joined_at,\n        left_at,\n        participation_duration,\n        rating,\n        feedback,\n        connection_quality,\n        is_muted,\n        is_video_enabled,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, NULL, NULL, NULL, NULL, NULL, 0, 1, ?, ?)\n    `,\n    [crypto.randomUUID(), sessionId, hostUserId, PARTICIPANT_STATUS.JOINED, now, now, now]\n  );\n\n  const row = await queryFirst<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_sessions gs\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      WHERE gs.session_id = ?\n      LIMIT 1`,\n    [sessionId]\n  );\n  if (!row) {\n    throw new Error('\uADF8\uB8F9 \uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n\n  const participants = await fetchParticipants(env, sessionId);\n  const baseRecord = mapGroupSession(row, participants);\n  await setCachedGroupSession(env, baseRecord);\n  await addActiveSession(env, hostUserId, sessionId);\n  await addRecentSession(env, hostUserId, sessionId);\n  return applyJoinMetadata(baseRecord, hostUserId);\n}\n\nexport async function getGroupSessionById(env: Env, sessionId: string, currentUserId?: string): Promise<GroupSessionRecord> {\n  const cached = await getCachedGroupSession(env, sessionId);\n  if (cached) {\n    if (currentUserId) {\n      await addRecentSession(env, currentUserId, sessionId);\n    }\n    return applyJoinMetadata(cached, currentUserId);\n  }\n\n  const row = await queryFirst<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_sessions gs\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      WHERE gs.session_id = ?\n      LIMIT 1`,\n    [sessionId]\n  );\n  if (!row) throw new Error('\uADF8\uB8F9 \uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const participants = await fetchParticipants(env, sessionId);\n  const baseRecord = mapGroupSession(row, participants);\n  await setCachedGroupSession(env, baseRecord);\n  return applyJoinMetadata(baseRecord, currentUserId);\n}\n\nasync function ensureParticipant(env: Env, sessionId: string, userId: string): Promise<ParticipantRow | null> {\n  return queryFirst<ParticipantRow>(\n    env.DB,\n    `SELECT * FROM group_session_participants WHERE session_id = ? AND user_id = ? LIMIT 1`,\n    [sessionId, userId]\n  );\n}\n\nexport async function joinGroupSession(env: Env, userId: string, sessionId: string, payload: JoinPayload = {}): Promise<GroupSessionRecord> {\n  const session = await getGroupSessionById(env, sessionId);\n  if (session.hostUserId === userId) {\n    return session;\n  }\n  if (session.status !== GROUP_STATUS.SCHEDULED) {\n    throw new Error('\uC774\uBBF8 \uC9C4\uD589 \uC911\uC774\uAC70\uB098 \uC885\uB8CC\uB41C \uC138\uC158\uC785\uB2C8\uB2E4.');\n  }\n  if (session.currentParticipants >= (session.maxParticipants ?? 10)) {\n    throw new Error('\uC138\uC158 \uC815\uC6D0\uC774 \uAC00\uB4DD \uCC3C\uC2B5\uB2C8\uB2E4.');\n  }\n\n  const existing = await ensureParticipant(env, sessionId, userId);\n  if (existing && existing.status === PARTICIPANT_STATUS.JOINED) {\n    return session;\n  }\n\n  const now = nowIso();\n  if (existing) {\n    await execute(\n      env.DB,\n      `UPDATE group_session_participants\n         SET status = ?, joined_at = ?, left_at = NULL, updated_at = ?\n       WHERE session_id = ? AND user_id = ?`,\n      [PARTICIPANT_STATUS.JOINED, now, now, sessionId, userId]\n    );\n  } else {\n    await execute(\n      env.DB,\n      `INSERT INTO group_session_participants (\n          participant_id, session_id, user_id, status, joined_at, created_at, updated_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?)` ,\n      [crypto.randomUUID(), sessionId, userId, PARTICIPANT_STATUS.JOINED, now, now, now]\n    );\n  }\n\n  await execute(\n    env.DB,\n    `UPDATE group_sessions\n        SET current_participants = current_participants + 1,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [now, sessionId]\n  );\n\n  await invalidateGroupSessionCache(env, sessionId);\n  await addActiveSession(env, userId, sessionId);\n  await addRecentSession(env, userId, sessionId);\n  return getGroupSessionById(env, sessionId, userId);\n}\n\nexport async function joinGroupSessionByCode(env: Env, userId: string, joinCode: string, payload: JoinPayload = {}) {\n  const row = await queryFirst<{ session_id: string }>(\n    env.DB,\n    'SELECT session_id FROM group_sessions WHERE join_code = ? LIMIT 1',\n    [joinCode]\n  );\n  if (!row) throw new Error('\uCC38\uAC00 \uCF54\uB4DC\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  return joinGroupSession(env, userId, row.session_id, payload);\n}\n\nexport async function leaveGroupSession(env: Env, userId: string, sessionId: string) {\n  const participant = await ensureParticipant(env, sessionId, userId);\n  if (!participant || participant.status !== PARTICIPANT_STATUS.JOINED) {\n    return;\n  }\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE group_session_participants\n        SET status = ?, left_at = ?, updated_at = ?\n      WHERE session_id = ? AND user_id = ?`,\n    [PARTICIPANT_STATUS.LEFT, now, now, sessionId, userId]\n  );\n  await execute(\n    env.DB,\n    `UPDATE group_sessions\n        SET current_participants = CASE WHEN current_participants > 0 THEN current_participants - 1 ELSE 0 END,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [now, sessionId]\n  );\n\n  await invalidateGroupSessionCache(env, sessionId);\n  await removeActiveSession(env, userId, sessionId);\n}\n\nexport async function startGroupSession(env: Env, userId: string, sessionId: string) {\n  const session = await getGroupSessionById(env, sessionId);\n  if (session.hostUserId !== userId) throw new Error('\uC138\uC158\uC744 \uC2DC\uC791\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const now = nowIso();\n  await execute(\n    env.DB,\n    'UPDATE group_sessions SET status = ?, started_at = ?, updated_at = ? WHERE session_id = ?',\n    [GROUP_STATUS.ACTIVE, now, now, sessionId]\n  );\n  await invalidateGroupSessionCache(env, sessionId);\n  return getGroupSessionById(env, sessionId, userId);\n}\n\nexport async function endGroupSession(env: Env, userId: string, sessionId: string) {\n  const session = await getGroupSessionById(env, sessionId);\n  if (session.hostUserId !== userId) throw new Error('\uC138\uC158\uC744 \uC885\uB8CC\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const now = nowIso();\n  await execute(\n    env.DB,\n    'UPDATE group_sessions SET status = ?, ended_at = ?, updated_at = ? WHERE session_id = ?',\n    [GROUP_STATUS.COMPLETED, now, now, sessionId]\n  );\n  await invalidateGroupSessionCache(env, sessionId);\n  return getGroupSessionById(env, sessionId, userId);\n}\n\nexport async function cancelGroupSession(env: Env, userId: string, sessionId: string, reason?: string) {\n  const session = await getGroupSessionById(env, sessionId);\n  if (session.hostUserId !== userId) throw new Error('\uC138\uC158\uC744 \uCDE8\uC18C\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE group_sessions\n        SET status = ?, ended_at = ?, updated_at = ?\n      WHERE session_id = ?`,\n    [GROUP_STATUS.CANCELLED, now, now, sessionId]\n  );\n  await execute(\n    env.DB,\n    `UPDATE group_session_participants\n        SET status = ?, updated_at = ?\n      WHERE session_id = ? AND status = ?`,\n    [PARTICIPANT_STATUS.LEFT, now, sessionId, PARTICIPANT_STATUS.JOINED]\n  );\n\n  await invalidateGroupSessionCache(env, sessionId);\n}\n\nexport async function listAvailableGroupSessions(\n  env: Env,\n  page: number,\n  size: number,\n  filters: { language?: string; level?: string; category?: string; tags?: string[] } = {},\n  currentUserId?: string\n) {\n  const offset = (page - 1) * size;\n  const where: string[] = ['status = ?', 'is_public = 1'];\n  const params: any[] = [GROUP_STATUS.SCHEDULED];\n\n  if (filters.language) {\n    where.push('UPPER(target_language) = UPPER(?)');\n    params.push(filters.language);\n  }\n  if (filters.level) {\n    where.push('UPPER(language_level) = UPPER(?)');\n    params.push(filters.level);\n  }\n  if (filters.category) {\n    where.push('UPPER(topic_category) = UPPER(?)');\n    params.push(filters.category);\n  }\n  if (filters.tags && filters.tags.length > 0) {\n    where.push(filters.tags.map(() => \"session_tags LIKE '%' || ? || '%' \").join(' AND '));\n    params.push(...filters.tags);\n  }\n\n  const whereClause = where.length ? `WHERE ${where.join(' AND ')}` : '';\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM group_sessions ${whereClause}`,\n    params\n  );\n\n  const rows = await query<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_sessions gs\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      ${whereClause}\n      ORDER BY gs.scheduled_at ASC\n      LIMIT ? OFFSET ?`,\n    [...params, size, offset]\n  );\n\n  const data = rows.map((row) => mapGroupList(row, currentUserId));\n  return {\n    data,\n    page,\n    size,\n    total: totalRow?.count ?? 0\n  };\n}\n\nexport async function listUserGroupSessions(env: Env, userId: string, status?: string) {\n  const rows = await query<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_session_participants gsp\n       JOIN group_sessions gs ON gs.session_id = gsp.session_id\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      WHERE gsp.user_id = ? ${status ? 'AND gs.status = ?' : ''}\n      ORDER BY gs.scheduled_at DESC`,\n    status ? [userId, status] : [userId]\n  );\n  const result: GroupSessionRecord[] = [];\n  for (const row of rows) {\n    const participants = await fetchParticipants(env, row.session_id);\n    result.push(mapGroupSession(row, participants, userId));\n  }\n  return result;\n}\n\nexport async function listHostedGroupSessions(env: Env, userId: string) {\n  const rows = await query<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_sessions gs\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      WHERE gs.host_user_id = ?\n      ORDER BY gs.scheduled_at DESC`,\n    [userId]\n  );\n  const result: GroupSessionRecord[] = [];\n  for (const row of rows) {\n    const participants = await fetchParticipants(env, row.session_id);\n    result.push(mapGroupSession(row, participants, userId));\n  }\n  return result;\n}\n\nexport async function kickGroupParticipant(env: Env, hostUserId: string, sessionId: string, participantId: string) {\n  const session = await getGroupSessionById(env, sessionId, hostUserId);\n  if (session.hostUserId !== hostUserId) throw new Error('\uCC38\uAC00\uC790\uB97C \uCD94\uBC29\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const participant = await ensureParticipant(env, sessionId, participantId);\n  if (!participant) throw new Error('\uCC38\uAC00\uC790\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE group_session_participants\n        SET status = ?, left_at = ?, updated_at = ?\n      WHERE session_id = ? AND user_id = ?`,\n    [PARTICIPANT_STATUS.KICKED, now, now, sessionId, participantId]\n  );\n  await execute(\n    env.DB,\n    `UPDATE group_sessions\n        SET current_participants = CASE WHEN current_participants > 0 THEN current_participants - 1 ELSE 0 END,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [now, sessionId]\n  );\n\n  await invalidateGroupSessionCache(env, sessionId);\n  await removeActiveSession(env, participantId, sessionId);\n}\n\nexport async function rateGroupSession(env: Env, userId: string, sessionId: string, rating: number, feedback?: string) {\n  const participant = await ensureParticipant(env, sessionId, userId);\n  if (!participant || participant.status !== PARTICIPANT_STATUS.JOINED) {\n    throw new Error('\uC138\uC158\uC5D0 \uCC38\uAC00\uD558\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE group_session_participants\n        SET rating = ?, feedback = ?, updated_at = ?\n      WHERE session_id = ? AND user_id = ?`,\n    [rating, feedback ?? null, now, sessionId, userId]\n  );\n\n  await execute(\n    env.DB,\n    `UPDATE group_sessions\n        SET rating_average = (\n          SELECT AVG(rating) FROM group_session_participants\n            WHERE session_id = ? AND rating IS NOT NULL\n        ),\n            rating_count = (\n          SELECT COUNT(*) FROM group_session_participants\n            WHERE session_id = ? AND rating IS NOT NULL\n        ),\n            updated_at = ?\n      WHERE session_id = ?`,\n    [sessionId, sessionId, now, sessionId]\n  );\n\n  await invalidateGroupSessionCache(env, sessionId);\n}\n\nexport async function updateGroupSession(env: Env, hostUserId: string, sessionId: string, payload: CreateGroupSessionPayload) {\n  const session = await getGroupSessionById(env, sessionId);\n  if (session.hostUserId !== hostUserId) throw new Error('\uC138\uC158\uC744 \uC218\uC815\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE group_sessions\n        SET title = ?,\n            description = ?,\n            topic_category = ?,\n            target_language = ?,\n            language_level = ?,\n            max_participants = ?,\n            scheduled_at = ?,\n            session_duration = ?,\n            session_tags = ?,\n            is_public = ?,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [\n      payload.title,\n      payload.description ?? null,\n      payload.topicCategory,\n      payload.targetLanguage,\n      payload.languageLevel,\n      payload.maxParticipants,\n      payload.scheduledAt,\n      payload.sessionDuration,\n      payload.sessionTags ? payload.sessionTags.join(',') : null,\n      payload.isPublic ? 1 : 0,\n      now,\n      sessionId\n    ]\n  );\n\n  await invalidateGroupSessionCache(env, sessionId);\n}\n\nexport async function inviteToGroupSession(env: Env, hostUserId: string, sessionId: string, invitedUserIds: string[]) {\n  const session = await getGroupSessionById(env, sessionId);\n  if (session.hostUserId !== hostUserId) throw new Error('\uC138\uC158\uC744 \uCD08\uB300\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const now = nowIso();\n  for (const userId of invitedUserIds) {\n    await execute(\n      env.DB,\n      `INSERT INTO group_session_participants (\n          participant_id, session_id, user_id, status, joined_at, created_at, updated_at\n        ) VALUES (?, ?, ?, ?, NULL, ?, ?)\n        ON CONFLICT(session_id, user_id) DO UPDATE SET status = excluded.status, updated_at = excluded.updated_at`,\n      [crypto.randomUUID(), sessionId, userId, PARTICIPANT_STATUS.INVITED, now, now]\n    );\n    await saveSessionInvitation(env, sessionId, userId, hostUserId);\n  }\n  await invalidateGroupSessionCache(env, sessionId);\n  return getGroupSessionById(env, sessionId, hostUserId);\n}\n\nexport async function respondToInvitation(env: Env, userId: string, sessionId: string, accept: boolean) {\n  const invitation = await getSessionInvitation(env, sessionId, userId);\n  if (!invitation) throw new Error('\uCD08\uB300 \uAE30\uB85D\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const participant = await ensureParticipant(env, sessionId, userId);\n  if (!participant) throw new Error('\uCD08\uB300 \uAE30\uB85D\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const now = nowIso();\n  if (accept) {\n    await execute(\n      env.DB,\n      `UPDATE group_session_participants\n          SET status = ?, joined_at = COALESCE(joined_at, ?), updated_at = ?\n        WHERE session_id = ? AND user_id = ?`,\n      [PARTICIPANT_STATUS.JOINED, now, now, sessionId, userId]\n    );\n    await execute(\n      env.DB,\n      `UPDATE group_sessions\n          SET current_participants = current_participants + 1,\n              updated_at = ?\n        WHERE session_id = ?`,\n      [now, sessionId]\n    );\n    await addActiveSession(env, userId, sessionId);\n  } else {\n    await execute(\n      env.DB,\n      `UPDATE group_session_participants\n          SET status = ?, updated_at = ?, left_at = COALESCE(left_at, ?)\n        WHERE session_id = ? AND user_id = ?`,\n      [PARTICIPANT_STATUS.BANNED, now, now, sessionId, userId]\n    );\n  }\n\n  await invalidateGroupSessionCache(env, sessionId);\n  await deleteSessionInvitation(env, sessionId, userId);\n}\n\nexport async function getRecommendedGroupSessions(env: Env, userId: string) {\n  const rows = await query<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_sessions gs\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      WHERE gs.is_public = 1 AND gs.status = ?\n      ORDER BY gs.scheduled_at ASC\n      LIMIT 5`,\n    [GROUP_STATUS.SCHEDULED]\n  );\n  const items: GroupSessionRecord[] = [];\n  for (const row of rows) {\n    const participants = await fetchParticipants(env, row.session_id);\n    items.push(mapGroupSession(row, participants, userId));\n  }\n  return items;\n}\n\nexport async function searchGroupSessions(env: Env, keyword: string, language?: string, level?: string) {\n  const where: string[] = ['is_public = 1'];\n  const params: any[] = [];\n  if (keyword) {\n    where.push('(title LIKE ? OR description LIKE ? OR topic_category LIKE ?)');\n    params.push(`%${keyword}%`, `%${keyword}%`, `%${keyword}%`);\n  }\n  if (language) {\n    where.push('target_language = ?');\n    params.push(language);\n  }\n  if (level) {\n    where.push('language_level = ?');\n    params.push(level);\n  }\n  const rows = await query<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_sessions gs\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      ${where.length ? 'WHERE ' + where.join(' AND ') : ''}\n      ORDER BY gs.scheduled_at ASC\n      LIMIT 50`,\n    params\n  );\n  return rows.map((row: any) => mapGroupList(row));\n}\n", "import type { Env } from '../index';\nimport type { GroupSessionRecord, GroupSessionParticipant } from '../types';\nimport { CacheService } from './cache';\n\nconst CACHE_PREFIX = 'group-session';\nconst DEFAULT_TTL_SECONDS = 60 * 5; // 5 minutes\n\nfunction getCache(env: Env): CacheService {\n  return new CacheService(env.CACHE, CACHE_PREFIX, DEFAULT_TTL_SECONDS);\n}\n\nfunction cloneParticipants(\n  participants?: GroupSessionParticipant[]\n): GroupSessionParticipant[] | undefined {\n  return participants ? participants.map((participant) => ({ ...participant })) : undefined;\n}\n\nfunction sanitizeRecord(record: GroupSessionRecord): GroupSessionRecord {\n  return {\n    ...record,\n    canJoin: false,\n    participants: cloneParticipants(record.participants)\n  };\n}\n\nexport async function setCachedGroupSession(\n  env: Env,\n  record: GroupSessionRecord\n): Promise<void> {\n  const cache = getCache(env);\n  await cache.set(record.id, sanitizeRecord(record), {\n    ttl: DEFAULT_TTL_SECONDS,\n    tags: [`session:${record.id}`]\n  });\n}\n\nexport async function getCachedGroupSession(\n  env: Env,\n  sessionId: string\n): Promise<GroupSessionRecord | null> {\n  const cache = getCache(env);\n  const cached = await cache.get<GroupSessionRecord>(sessionId);\n  if (!cached) {\n    return null;\n  }\n  return {\n    ...cached,\n    participants: cloneParticipants(cached.participants)\n  };\n}\n\nexport async function invalidateGroupSessionCache(env: Env, sessionId: string): Promise<void> {\n  const cache = getCache(env);\n  await cache.delete(sessionId);\n}\n", "import type { Env } from '../index';\n\nconst INVITATION_PREFIX = 'group-session:invitation';\nconst ACTIVE_PREFIX = 'group-session:user-active';\nconst RECENT_PREFIX = 'group-session:recent';\nconst INVITATION_TTL_SECONDS = 60 * 60 * 24 * 3; // 3 days\nconst ACTIVE_TTL_SECONDS = 60 * 60 * 24; // 1 day\nconst RECENT_MAX = 10;\n\ninterface InvitationRecord {\n  sessionId: string;\n  userId: string;\n  hostUserId: string;\n  createdAt: string;\n}\n\ninterface ActiveSessionsRecord {\n  userId: string;\n  sessions: string[];\n  updatedAt: string;\n}\n\ninterface RecentSessionRecord {\n  sessionId: string;\n  viewedAt: string;\n}\n\nfunction invitationKey(sessionId: string, userId: string): string {\n  return `${INVITATION_PREFIX}:${sessionId}:${userId}`;\n}\n\nfunction activeKey(userId: string): string {\n  return `${ACTIVE_PREFIX}:${userId}`;\n}\n\nfunction recentKey(userId: string): string {\n  return `${RECENT_PREFIX}:${userId}`;\n}\n\nexport async function saveInvitation(\n  env: Env,\n  sessionId: string,\n  userId: string,\n  hostUserId: string\n): Promise<void> {\n  const record: InvitationRecord = {\n    sessionId,\n    userId,\n    hostUserId,\n    createdAt: new Date().toISOString()\n  };\n\n  await env.CACHE.put(invitationKey(sessionId, userId), JSON.stringify(record), {\n    expirationTtl: INVITATION_TTL_SECONDS\n  });\n}\n\nexport async function getInvitation(\n  env: Env,\n  sessionId: string,\n  userId: string\n): Promise<InvitationRecord | null> {\n  const raw = await env.CACHE.get(invitationKey(sessionId, userId), { type: 'json' });\n  return (raw as InvitationRecord | null) ?? null;\n}\n\nexport async function deleteInvitation(env: Env, sessionId: string, userId: string): Promise<void> {\n  await env.CACHE.delete(invitationKey(sessionId, userId));\n}\n\nexport async function addActiveSession(env: Env, userId: string, sessionId: string): Promise<void> {\n  const key = activeKey(userId);\n  const existing = (await env.CACHE.get(key, { type: 'json' })) as ActiveSessionsRecord | null;\n  const set = new Set(existing?.sessions ?? []);\n  set.add(sessionId);\n  const record: ActiveSessionsRecord = {\n    userId,\n    sessions: Array.from(set),\n    updatedAt: new Date().toISOString()\n  };\n  await env.CACHE.put(key, JSON.stringify(record), { expirationTtl: ACTIVE_TTL_SECONDS });\n}\n\nexport async function removeActiveSession(env: Env, userId: string, sessionId: string): Promise<void> {\n  const key = activeKey(userId);\n  const existing = (await env.CACHE.get(key, { type: 'json' })) as ActiveSessionsRecord | null;\n  if (!existing) {\n    return;\n  }\n  const set = new Set(existing.sessions);\n  set.delete(sessionId);\n  const record: ActiveSessionsRecord = {\n    userId,\n    sessions: Array.from(set),\n    updatedAt: new Date().toISOString()\n  };\n  if (record.sessions.length === 0) {\n    await env.CACHE.delete(key);\n  } else {\n    await env.CACHE.put(key, JSON.stringify(record), { expirationTtl: ACTIVE_TTL_SECONDS });\n  }\n}\n\nexport async function listActiveSessions(env: Env, userId: string): Promise<string[]> {\n  const key = activeKey(userId);\n  const existing = (await env.CACHE.get(key, { type: 'json' })) as ActiveSessionsRecord | null;\n  return existing?.sessions ?? [];\n}\n\nexport async function addRecentSession(env: Env, userId: string, sessionId: string): Promise<void> {\n  const key = recentKey(userId);\n  const existing = (await env.CACHE.get(key, { type: 'json' })) as string[] | null;\n  const recent = (existing ?? []).filter((id) => id !== sessionId);\n  recent.unshift(sessionId);\n  const trimmed = recent.slice(0, RECENT_MAX);\n  await env.CACHE.put(key, JSON.stringify(trimmed), { expirationTtl: ACTIVE_TTL_SECONDS });\n}\n\nexport async function listRecentSessions(env: Env, userId: string): Promise<string[]> {\n  const key = recentKey(userId);\n  const existing = (await env.CACHE.get(key, { type: 'json' })) as string[] | null;\n  return existing ?? [];\n}\n", "import type { Env } from '../index';\nimport { log } from '../utils/logger';\nimport { generateChatCompletion, sanitizeJsonResponse } from './ai';\nimport type { ChatMessage } from './ai';\n\nexport interface TopicRecommendationInput {\n  language: string;\n  level?: string;\n  interests?: string[];\n  participantCount?: number;\n}\n\nexport interface ConversationAnalysisInput {\n  transcript: string;\n  language?: string;\n  participantId?: string;\n}\n\nexport interface SessionSummaryInput {\n  sessionId?: string;\n  transcript: string;\n  duration?: number;\n  participants?: Array<{\n    id?: string;\n    name?: string;\n    role?: string;\n  }>;\n  language?: string;\n}\n\nexport interface IcebreakerInput {\n  language?: string;\n  level?: string;\n  topic?: string;\n}\n\nexport interface RoleplayInput {\n  language?: string;\n  level?: string;\n  situation?: string;\n  participantRoles?: string[];\n}\n\nexport interface TranslateInput {\n  text: string;\n  fromLanguage?: string;\n  toLanguage: string;\n}\n\nexport interface MatchRecommendationInput {\n  userId: string;\n  userProfile?: Record<string, unknown>;\n  availableSessions?: Array<Record<string, unknown>>;\n}\n\nexport interface LearningProgressRecord {\n  sessionId?: string;\n  userId: string;\n  metrics?: Record<string, unknown>;\n  notes?: string;\n  completedAt?: string;\n  durationMinutes?: number;\n  savedAt: string;\n}\n\nconst PROGRESS_TTL_SECONDS = 60 * 60 * 24 * 90; // 90\uC77C\nconst PROGRESS_HISTORY_LIMIT = 50;\n\nfunction parseJsonWithFallback<T>(text: string, fallback: T): T {\n  try {\n    return JSON.parse(text) as T;\n  } catch (error) {\n    log.warn('Failed to parse AI JSON response', error as Error, {\n      component: 'GROUP_SESSION_AI',\n      preview: text.slice(0, 240)\n    });\n    return fallback;\n  }\n}\n\nasync function callStructuredChat<T>(\n  env: Env,\n  systemPrompt: string,\n  userPrompt: string,\n  fallback: T,\n  options: { temperature?: number; maxTokens?: number } = {}\n): Promise<T> {\n  const messages: ChatMessage[] = [\n    { role: 'system', content: systemPrompt },\n    { role: 'user', content: userPrompt }\n  ];\n\n  const response = await generateChatCompletion(env.AI, messages, {\n    temperature: options.temperature ?? 0.6,\n    max_tokens: options.maxTokens ?? 900,\n    response_format: { type: 'json_object' }\n  });\n\n  const sanitized = sanitizeJsonResponse(response.text);\n  if (!sanitized) {\n    return fallback;\n  }\n  return parseJsonWithFallback(sanitized, fallback);\n}\n\nexport async function recommendSessionTopics(\n  env: Env,\n  userId: string,\n  input: TopicRecommendationInput\n) {\n  const fallback = {\n    topics: [\n      {\n        title: 'Daily Highlights',\n        description: 'Share the most interesting part of your day and ask follow-up questions to others.',\n        difficulty: input.level || 'INTERMEDIATE',\n        culturalTips: [] as string[],\n        followUpQuestions: [\n          'What made that moment special?',\n          'Would you do anything differently next time?'\n        ]\n      }\n    ]\n  };\n\n  const interestsText = (input.interests || []).join(', ') || 'general interests';\n  const userPrompt = `Recommend three engaging conversation topics for a small group session.\n\nContext:\n- Participants' primary learning language: ${input.language || 'English'}\n- Average proficiency level: ${input.level || 'Intermediate'}\n- Shared interests or focus areas: ${interestsText || 'general conversation'}\n- Group size: ${input.participantCount || 4}\n\nReturn JSON in the format:\n{\n  \"topics\": [\n    {\n      \"title\": string,\n      \"description\": string,\n      \"difficulty\": \"BEGINNER\" | \"INTERMEDIATE\" | \"ADVANCED\",\n      \"estimatedDurationMinutes\": number,\n      \"culturalTips\": string[],\n      \"followUpQuestions\": string[]\n    }\n  ]\n}`;\n\n  return callStructuredChat(env,\n    'You are an expert language tutor who designs conversation prompts that encourage balanced participation and vocabulary growth.',\n    userPrompt,\n    fallback,\n    { temperature: 0.7, maxTokens: 800 }\n  );\n}\n\nexport async function analyzeConversationTranscript(\n  env: Env,\n  userId: string,\n  input: ConversationAnalysisInput\n) {\n  const fallback = {\n    overallScore: 70,\n    strengths: ['Clear structure'],\n    improvements: ['Use more varied vocabulary'],\n    suggestedTopics: ['Cultural experiences'],\n    keyPhrases: [] as string[],\n    summary: 'Participants engaged in a structured conversation.',\n    sentiment: 'neutral'\n  };\n\n  const userPrompt = `Analyze this group session transcript for language learning insights.\nProvide:\n- overallScore (0-100)\n- strengths (array of strings)\n- improvements (array of strings)\n- suggestedTopics (array)\n- keyPhrases (array of strings)\n- summary (string)\n- sentiment (positive/neutral/negative)\n\nTranscript:\n${input.transcript}\n`;\n\n  return callStructuredChat(env,\n    'You are an experienced ESL coach. Focus on constructive, encouraging feedback.',\n    userPrompt,\n    fallback,\n    { temperature: 0.4, maxTokens: 800 }\n  );\n}\n\nexport async function generateSessionSummary(\n  env: Env,\n  userId: string,\n  input: SessionSummaryInput\n) {\n  const participantsLine = (input.participants || [])\n    .map((p) => `${p.name || p.id || 'Participant'}${p.role ? ` (${p.role})` : ''}`)\n    .join(', ');\n\n  const fallback = {\n    summary: 'Participants discussed the main topic and shared personal experiences.',\n    highlights: ['Active participation from all members'],\n    actionItems: ['Prepare vocabulary list for next session'],\n    followUpQuestions: ['What vocabulary felt challenging?'],\n    vocabulary: [] as Array<{ phrase: string; meaning: string }>\n  };\n\n  const userPrompt = `Summarize the group session for language learners.\nInclude summary, 2-3 highlights, actionItems, followUpQuestions, and vocabulary array with phrase/meaning.\n\nLanguage: ${input.language || 'English'}\nDuration (minutes): ${input.duration ?? 'unknown'}\nParticipants: ${participantsLine || 'Not specified'}\nTranscript:\n${input.transcript}\n`;\n\n  return callStructuredChat(env,\n    'You are a language coach who produces concise post-session reports for learners.',\n    userPrompt,\n    fallback,\n    { temperature: 0.5, maxTokens: 900 }\n  );\n}\n\nexport async function generateIcebreakers(\n  env: Env,\n  userId: string,\n  input: IcebreakerInput\n) {\n  const fallback = {\n    icebreakers: [\n      'Share one surprising fact about your hometown and ask others to react to it.'\n    ]\n  };\n\n  const userPrompt = `Provide five creative icebreaker prompts for a group session.\nLanguage: ${input.language || 'English'}\nLearner level: ${input.level || 'Intermediate'}\nTopic focus: ${input.topic || 'General conversation'}\nReturn JSON: { \"icebreakers\": string[] }\n`;\n\n  return callStructuredChat(env,\n    'You are a facilitator who creates inclusive, culturally sensitive warm-up questions.',\n    userPrompt,\n    fallback,\n    { temperature: 0.8, maxTokens: 500 }\n  );\n}\n\nexport async function generateRoleplayScenario(\n  env: Env,\n  userId: string,\n  input: RoleplayInput\n) {\n  const fallback = {\n    scenarioTitle: 'Business Meeting Kick-off',\n    setting: 'Virtual conference call with international teammates',\n    roles: ['Project lead', 'Marketing specialist', 'Engineer'],\n    goals: ['Align on project scope', 'Assign next steps'],\n    scriptOutline: [\n      'Introduction and greetings',\n      'Discuss project objectives',\n      'Clarify deliverables'\n    ],\n    vocabulary: [] as Array<{ phrase: string; meaning: string }>\n  };\n\n  const rolesText = (input.participantRoles || []).join(', ') || 'Flexible roles for 3-4 participants';\n  const userPrompt = `Create a roleplay scenario for language learners.\nInclude scenarioTitle, setting, roles, goals, scriptOutline (array of steps), vocabulary (array of { phrase, meaning }).\n\nLanguage: ${input.language || 'English'}\nLevel: ${input.level || 'Intermediate'}\nSituation: ${input.situation || 'Business discussion'}\nParticipant roles: ${rolesText}\n`;\n\n  return callStructuredChat(env,\n    'You design practical roleplay activities that build speaking confidence.',\n    userPrompt,\n    fallback,\n    { temperature: 0.75, maxTokens: 850 }\n  );\n}\n\nexport async function translateExpression(\n  env: Env,\n  userId: string,\n  input: TranslateInput\n) {\n  const fallback = {\n    translation: input.text,\n    pronunciation: null,\n    usageNotes: [],\n    examples: [] as Array<{ original: string; translated: string }>\n  };\n\n  const userPrompt = `Translate the following text for language learners.\nReturn JSON with fields: translation (string), pronunciation (string|null), usageNotes (string[]),\nexamples (array of { original, translated }).\n\nSource language: ${input.fromLanguage || 'auto'}\nTarget language: ${input.toLanguage}\nText:\n${input.text}\n`;\n\n  return callStructuredChat(env,\n    'You are a bilingual language coach who provides nuanced translations with context.',\n    userPrompt,\n    fallback,\n    { temperature: 0.4, maxTokens: 700 }\n  );\n}\n\nexport async function recommendSessionMatches(\n  env: Env,\n  userId: string,\n  input: MatchRecommendationInput\n) {\n  const fallback = {\n    matches: [] as Array<{ sessionId?: string; reason?: string; fitScore?: number }>,\n    strategy: 'Recommend sessions by topic relevance and speaking level proximity.'\n  };\n\n  const profileSummary = JSON.stringify(input.userProfile ?? {});\n  const sessionsInfo = JSON.stringify(input.availableSessions ?? []);\n\n  const userPrompt = `Recommend up to five group sessions for the learner.\nReturn JSON with fields:\n{\n  \"matches\": [\n    {\n      \"sessionId\": string | null,\n      \"title\": string,\n      \"fitScore\": number (0-100),\n      \"reason\": string\n    }\n  ],\n  \"strategy\": string\n}\n\nLearner profile:\n${profileSummary}\n\nAvailable sessions:\n${sessionsInfo}\n`;\n\n  return callStructuredChat(env,\n    'You are an AI assistant matching language learners to the most suitable group discussions.',\n    userPrompt,\n    fallback,\n    { temperature: 0.6, maxTokens: 900 }\n  );\n}\n\nfunction progressKey(userId: string) {\n  return `group-session:progress:${userId}`;\n}\n\nexport async function saveLearningProgress(\n  env: Env,\n  record: Omit<LearningProgressRecord, 'savedAt'>\n): Promise<LearningProgressRecord> {\n  const existingRaw = await env.CACHE.get(progressKey(record.userId));\n  let history: LearningProgressRecord[] = [];\n  if (existingRaw) {\n    try {\n      history = JSON.parse(existingRaw) as LearningProgressRecord[];\n    } catch (error) {\n      log.warn('Failed to parse existing learning progress history', error as Error, {\n        component: 'GROUP_SESSION_AI'\n      });\n      history = [];\n    }\n  }\n\n  const entry: LearningProgressRecord = {\n    ...record,\n    savedAt: new Date().toISOString()\n  };\n\n  history.unshift(entry);\n  if (history.length > PROGRESS_HISTORY_LIMIT) {\n    history = history.slice(0, PROGRESS_HISTORY_LIMIT);\n  }\n\n  await env.CACHE.put(progressKey(record.userId), JSON.stringify(history), {\n    expirationTtl: PROGRESS_TTL_SECONDS\n  });\n\n  return entry;\n}\n\nexport async function listLearningProgress(env: Env, userId: string): Promise<LearningProgressRecord[]> {\n  const raw = await env.CACHE.get(progressKey(userId));\n  if (!raw) return [];\n  try {\n    return JSON.parse(raw) as LearningProgressRecord[];\n  } catch (error) {\n    log.warn('Failed to parse stored learning progress', error as Error, {\n      component: 'GROUP_SESSION_AI'\n    });\n    return [];\n  }\n}\n", "import { Hono } from 'hono';\nimport { z } from 'zod';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport {\n  recommendSessionTopics,\n  analyzeConversationTranscript,\n  generateSessionSummary,\n  generateIcebreakers,\n  generateRoleplayScenario,\n  translateExpression,\n  recommendSessionMatches\n} from '../services/groupSessionsAI';\n\nconst aiRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\naiRoutes.use('*', requireAuth);\n\nconst recommendSchema = z.object({\n  language: z.string().min(1).default('English'),\n  level: z.string().min(1).optional(),\n  interests: z.array(z.string().min(1)).optional(),\n  participantCount: z.number().int().positive().optional()\n});\n\naiRoutes.post('/recommend-topics', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = recommendSchema.parse(payload);\n  const result = await recommendSessionTopics(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nconst analysisSchema = z.object({\n  transcript: z.string().min(5),\n  language: z.string().min(1).optional(),\n  participantId: z.string().min(1).optional()\n});\n\naiRoutes.post('/analyze-conversation', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = analysisSchema.parse(payload);\n  const result = await analyzeConversationTranscript(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nconst summarySchema = z.object({\n  sessionId: z.string().optional(),\n  transcript: z.string().min(5),\n  duration: z.number().int().positive().optional(),\n  language: z.string().min(1).optional(),\n  participants: z\n    .array(\n      z.object({\n        id: z.string().optional(),\n        name: z.string().optional(),\n        role: z.string().optional()\n      })\n    )\n    .optional()\n});\n\naiRoutes.post('/generate-summary', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = summarySchema.parse(payload);\n  const result = await generateSessionSummary(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nconst icebreakerSchema = z.object({\n  language: z.string().optional(),\n  level: z.string().optional(),\n  topic: z.string().optional()\n});\n\naiRoutes.post('/icebreakers', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = icebreakerSchema.parse(payload);\n  const result = await generateIcebreakers(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nconst roleplaySchema = z.object({\n  language: z.string().optional(),\n  level: z.string().optional(),\n  situation: z.string().optional(),\n  participantRoles: z.array(z.string()).optional()\n});\n\naiRoutes.post('/roleplay', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = roleplaySchema.parse(payload);\n  const result = await generateRoleplayScenario(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nconst translateSchema = z.object({\n  text: z.string().min(1),\n  fromLanguage: z.string().optional(),\n  toLanguage: z.string().min(1)\n});\n\naiRoutes.post('/translate', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = translateSchema.parse(payload);\n  const result = await translateExpression(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nconst matchSchema = z.object({\n  userId: z.string().min(1),\n  userProfile: z.record(z.unknown()).optional(),\n  availableSessions: z.array(z.record(z.unknown())).optional()\n});\n\naiRoutes.post('/match-recommendation', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = matchSchema.parse(payload);\n  const result = await recommendSessionMatches(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nexport default aiRoutes;\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware, internalAuth } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\n\nconst presenceRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\ninterface PresencePayload {\n  userId?: string;\n  status: 'ONLINE' | 'OFFLINE' | 'AWAY' | 'STUDYING';\n  deviceInfo?: string;\n  sessionId?: string;\n  metadata?: Record<string, unknown>;\n}\n\nfunction getPresenceId(userId: string): DurableObjectId {\n  const stub = (presenceRoutes as any).context?.env?.USER_PRESENCE as DurableObjectNamespace;\n  if (!stub) {\n    throw new Error('Durable Object binding USER_PRESENCE is not configured');\n  }\n  return stub.idFromString(userId);\n}\n\nasync function fetchPresence(env: Env, userId: string, path: string, init?: RequestInit) {\n  const id = env.USER_PRESENCE.idFromString(userId);\n  const stub = env.USER_PRESENCE.get(id);\n  const url = `https://user-presence/${path}`;\n  return stub.fetch(new Request(url, init));\n}\n\npresenceRoutes.use('/internal/*', internalAuth());\n\npresenceRoutes.post('/internal/presence/set', async (c) => {\n  const body = (await c.req.json()) as PresencePayload;\n  const userId = body.userId;\n  if (!userId) throw new AppError('userId is required', 400, 'INVALID_PAYLOAD');\n  const response = await fetchPresence(c.env, userId, 'set', {\n    method: 'POST',\n    body: JSON.stringify({\n      ...body,\n      userId,\n      lastSeenAt: new Date().toISOString()\n    }),\n    headers: { 'Content-Type': 'application/json' }\n  });\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.post('/internal/presence/touch', async (c) => {\n  const body = (await c.req.json().catch(() => ({}))) as { userId?: string };\n  const userId = body.userId;\n  if (!userId) throw new AppError('userId is required', 400, 'INVALID_PAYLOAD');\n  const response = await fetchPresence(c.env, userId, 'touch', { method: 'POST' });\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.post('/internal/presence/offline', async (c) => {\n  const body = (await c.req.json().catch(() => ({}))) as { userId?: string };\n  const userId = body.userId;\n  if (!userId) throw new AppError('userId is required', 400, 'INVALID_PAYLOAD');\n  const response = await fetchPresence(c.env, userId, 'offline', { method: 'POST' });\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.get('/internal/presence/status/:userId', async (c) => {\n  const userId = c.req.param('userId');\n  if (!userId) throw new AppError('userId is required', 400, 'INVALID_PATH_PARAM');\n  const response = await fetchPresence(c.env, userId, 'status');\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.use('/*', requireAuth);\n\npresenceRoutes.post('/presence/status', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = (await c.req.json().catch(() => ({}))) as PresencePayload;\n  const payload: PresencePayload = {\n    ...body,\n    userId,\n    status: body.status ?? 'ONLINE'\n  };\n  const response = await fetchPresence(c.env, userId, 'set', {\n    method: 'POST',\n    body: JSON.stringify({ ...payload, lastSeenAt: new Date().toISOString() }),\n    headers: { 'Content-Type': 'application/json' }\n  });\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.post('/presence/touch', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const response = await fetchPresence(c.env, userId, 'touch', { method: 'POST' });\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.post('/presence/offline', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const response = await fetchPresence(c.env, userId, 'offline', { method: 'POST' });\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.get('/presence/status', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const response = await fetchPresence(c.env, userId, 'status');\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\nexport default presenceRoutes;\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse, paginatedResponse } from '../utils/response';\nimport {\n  recommendPartners,\n  createMatchingRequest,\n  listSentRequests,\n  listReceivedRequests,\n  acceptMatchingRequest,\n  rejectMatchingRequest,\n  listMatches,\n  removeMatch,\n  addToMatchingQueue,\n  removeFromMatchingQueue,\n  getMatchingQueueStatus,\n  recordFeedback,\n  calculateCompatibilityAnalysis\n} from '../services/matching';\n\nconst matchingRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\nconst requireAuth = authMiddleware();\n\nfunction getPaginationParams(c: any) {\n  const page = Math.max(Number(c.req.query('page') ?? '1'), 1);\n  const size = Math.max(Math.min(Number(c.req.query('size') ?? '20'), 50), 1);\n  return { page, size };\n}\n\nmatchingRoutes.use('*', requireAuth);\n\nasync function getMatchingSettings(env: Env, userId: string) {\n  const key = `matching:settings:${userId}`;\n  const stored = await env.CACHE.get(key, { type: 'json' }) as Record<string, unknown> | null;\n  if (stored) {\n    return stored;\n  }\n  return {\n    autoAcceptMatches: false,\n    showOnlineStatus: true,\n    allowMatchRequests: true,\n    preferredAgeRange: null,\n    preferredGenders: [],\n    preferredNationalities: [],\n    preferredLanguages: [],\n    maxDistance: null,\n    notificationSettings: {\n      matchFound: true,\n      requestReceived: true\n    }\n  };\n}\n\nmatchingRoutes.get('/partners', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n\n  const { page, size } = getPaginationParams(c);\n  try {\n    const result = await recommendPartners(c.env, userId, {\n      nativeLanguage: c.req.query('nativeLanguage') || undefined,\n      targetLanguage: c.req.query('targetLanguage') || undefined,\n      languageLevel: c.req.query('languageLevel') || undefined,\n      minAge: c.req.query('minAge') ? Number(c.req.query('minAge')) : undefined,\n      maxAge: c.req.query('maxAge') ? Number(c.req.query('maxAge')) : undefined,\n      page,\n      size\n    });\n    return paginatedResponse(c, result.data, {\n      page: result.page,\n      limit: result.size,\n      total: result.total\n    });\n  } catch (error) {\n    throw new AppError(\n      error instanceof Error ? error.message : 'Failed to load partners',\n      500,\n      'MATCHING_PARTNERS_FAILED'\n    );\n  }\n});\n\nmatchingRoutes.post('/partners/advanced', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n\n  const filters = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const { page, size } = getPaginationParams(c);\n\n  try {\n    const result = await recommendPartners(c.env, userId, {\n      nativeLanguage: typeof filters.nativeLanguage === 'string' ? filters.nativeLanguage : undefined,\n      targetLanguage: typeof filters.targetLanguage === 'string' ? filters.targetLanguage : undefined,\n      languageLevel: typeof filters.proficiencyLevel === 'string' ? filters.proficiencyLevel : undefined,\n      minAge: typeof filters.minAge === 'number' ? filters.minAge : undefined,\n      maxAge: typeof filters.maxAge === 'number' ? filters.maxAge : undefined,\n      page,\n      size\n    });\n    return paginatedResponse(c, result.data, {\n      page: result.page,\n      limit: result.size,\n      total: result.total\n    });\n  } catch (error) {\n    throw new AppError(\n      error instanceof Error ? error.message : 'Failed to search partners',\n      500,\n      'MATCHING_SEARCH_FAILED'\n    );\n  }\n});\n\nmatchingRoutes.post('/request', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.targetUserId !== 'string') {\n    throw new AppError('targetUserId is required', 400, 'INVALID_PAYLOAD');\n  }\n  try {\n    await createMatchingRequest(c.env, {\n      senderId: userId,\n      receiverId: body.targetUserId,\n      message: typeof body.message === 'string' ? body.message : undefined\n    });\n    return successResponse(c, { success: true });\n  } catch (error) {\n    throw new AppError(\n      error instanceof Error ? error.message : 'Failed to send matching request',\n      400,\n      'MATCHING_REQUEST_FAILED'\n    );\n  }\n});\n\nmatchingRoutes.get('/requests/sent', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listSentRequests(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nmatchingRoutes.get('/requests/received', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listReceivedRequests(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nmatchingRoutes.post('/accept/:requestId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const requestId = c.req.param('requestId');\n  const body = (await c.req.json().catch(() => ({}))) as { responseMessage?: string };\n  try {\n    await acceptMatchingRequest(c.env, {\n      requestId,\n      receiverId: userId,\n      responseMessage: body.responseMessage\n    });\n    return successResponse(c, { success: true });\n  } catch (error) {\n    throw new AppError(\n      error instanceof Error ? error.message : 'Failed to accept matching request',\n      400,\n      'MATCHING_ACCEPT_FAILED'\n    );\n  }\n});\n\nmatchingRoutes.post('/reject/:requestId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const requestId = c.req.param('requestId');\n  const body = (await c.req.json().catch(() => ({}))) as { responseMessage?: string };\n  try {\n    await rejectMatchingRequest(c.env, {\n      requestId,\n      receiverId: userId,\n      responseMessage: body.responseMessage\n    });\n    return successResponse(c, { success: true });\n  } catch (error) {\n    throw new AppError(\n      error instanceof Error ? error.message : 'Failed to reject matching request',\n      400,\n      'MATCHING_REJECT_FAILED'\n    );\n  }\n});\n\nmatchingRoutes.get('/matches', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listMatches(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nmatchingRoutes.delete('/matches/:matchId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const matchId = c.req.param('matchId');\n  await removeMatch(c.env, { matchId, userId });\n  return successResponse(c, { success: true });\n});\n\nmatchingRoutes.post('/queue', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const sessionType = typeof body.sessionType === 'string' ? body.sessionType : 'ANY';\n  await addToMatchingQueue(c.env, userId, sessionType);\n  return successResponse(c, { success: true });\n});\n\nmatchingRoutes.delete('/queue', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  await removeFromMatchingQueue(c.env, userId);\n  return successResponse(c, { success: true });\n});\n\nmatchingRoutes.get('/queue/status', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const status = await getMatchingQueueStatus(c.env, userId);\n  return successResponse(c, status ?? {});\n});\n\nmatchingRoutes.get('/history', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listMatches(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nmatchingRoutes.post('/feedback', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.partnerId !== 'string' || typeof body.matchId !== 'string' || typeof body.overallRating !== 'number') {\n    throw new AppError('partnerId, matchId, overallRating are required', 400, 'INVALID_PAYLOAD');\n  }\n  await recordFeedback(c.env, {\n    reviewerId: userId,\n    partnerId: body.partnerId,\n    matchId: body.matchId,\n    overallRating: body.overallRating,\n    writtenFeedback: typeof body.writtenFeedback === 'string' ? body.writtenFeedback : undefined,\n    wouldMatchAgain: typeof body.wouldMatchAgain === 'boolean' ? body.wouldMatchAgain : undefined\n  });\n  return successResponse(c, { success: true });\n});\n\nmatchingRoutes.get('/my-matches', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const result = await listMatches(c.env, userId, 1, 50);\n  return successResponse(c, result.data);\n});\n\nmatchingRoutes.get('/stats', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const matches = await listMatches(c.env, userId, 1, 20);\n  const queueStatus = await getMatchingQueueStatus(c.env, userId);\n  const activeRequest = (queueStatus as any)?.queue_status === 'WAITING';\n  return successResponse(c, {\n    totalMatches: matches.total,\n    recentMatches: matches.data.slice(0, 5),\n    activeRequest,\n    queueStatus\n  });\n});\n\nmatchingRoutes.get('/compatibility/:partnerId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const partnerId = c.req.param('partnerId');\n  const analysis = await calculateCompatibilityAnalysis(c.env, userId, partnerId);\n  return successResponse(c, {\n    partnerId,\n    ...analysis\n  });\n});\n\nmatchingRoutes.get('/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const settings = await getMatchingSettings(c.env, userId);\n  return successResponse(c, settings);\n});\n\nmatchingRoutes.patch('/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const updates = await c.req.json().catch(() => ({}));\n  const current = await getMatchingSettings(c.env, userId);\n  const merged = {\n    ...current,\n    ...updates,\n    updatedAt: new Date().toISOString()\n  };\n  await c.env.CACHE.put(`matching:settings:${userId}`, JSON.stringify(merged));\n  return successResponse(c, merged);\n});\n\nexport default matchingRoutes;\n", "import type { Env } from '../index';\nimport { query, queryFirst, execute, transaction } from '../utils/db';\nimport { AppError } from '../utils/errors';\nimport type {\n  MatchingPartner,\n  MatchingRequestItem,\n  MatchSummary,\n  CompatibilityScoreResponseType,\n  CompatibilitySharedInsights,\n  CompatibilityCategoryDetail\n} from '../types';\n\nconst MATCHING_DEFAULT_EXPIRE_DAYS = 7;\n\ninterface RecommendOptions {\n  nativeLanguage?: string;\n  targetLanguage?: string;\n  languageLevel?: string;\n  minAge?: number;\n  maxAge?: number;\n  page: number;\n  size: number;\n}\n\ninterface RequestInsertPayload {\n  senderId: string;\n  receiverId: string;\n  message?: string;\n}\n\ninterface AcceptOptions {\n  requestId: string;\n  receiverId: string;\n  responseMessage?: string;\n}\n\ninterface RejectOptions {\n  requestId: string;\n  receiverId: string;\n  responseMessage?: string;\n}\n\ninterface RemoveMatchOptions {\n  matchId: string;\n  userId: string;\n}\n\ninterface PaginatedResult<T> {\n  data: T[];\n  page: number;\n  size: number;\n  total: number;\n}\n\ninterface TargetLanguageProfile {\n  languageId?: number;\n  languageCode?: string;\n  languageName?: string;\n  currentLevelOrder?: number | null;\n  targetLevelOrder?: number | null;\n}\n\ninterface CompatibilityProfile {\n  userId: string;\n  nativeLanguageId?: number;\n  nativeLanguageCode?: string;\n  nativeLanguageName?: string;\n  targetLanguages: TargetLanguageProfile[];\n  personalities: string[];\n  studyGoals: string[];\n  interests: string[];\n}\n\nconst MATCHING_STATUS = {\n  PENDING: 'PENDING',\n  ACCEPTED: 'ACCEPTED',\n  REJECTED: 'REJECTED',\n  CANCELLED: 'CANCELLED'\n} as const;\n\nexport async function recommendPartners(\n  env: Env,\n  userId: string,\n  options: RecommendOptions\n): Promise<PaginatedResult<MatchingPartner>> {\n  const whereClauses: string[] = ['u.user_id != ?', 'IFNULL(u.user_disable, 0) = 0'];\n  const params: (string | number)[] = [userId];\n\n  if (options.nativeLanguage) {\n    whereClauses.push('EXISTS (SELECT 1 FROM languages nl WHERE nl.language_id = u.native_lang_id AND (nl.language_code = ? OR nl.language_name = ?))');\n    params.push(options.nativeLanguage, options.nativeLanguage);\n  }\n\n  if (options.targetLanguage) {\n    whereClauses.push(\n      `EXISTS (\n        SELECT 1 FROM onboarding_lang_level oll\n        JOIN languages tl ON tl.language_id = oll.language_id\n        WHERE oll.user_id = u.user_id AND (tl.language_code = ? OR tl.language_name = ?)\n      )`\n    );\n    params.push(options.targetLanguage, options.targetLanguage);\n  }\n\n  if (options.languageLevel) {\n    whereClauses.push(\n      `EXISTS (\n        SELECT 1 FROM onboarding_lang_level oll\n        JOIN lang_level_type lt ON lt.lang_level_id = oll.target_level_id\n        WHERE oll.user_id = u.user_id AND (lt.lang_level_name = ? OR lt.category = ?)\n      )`\n    );\n    params.push(options.languageLevel, options.languageLevel);\n  }\n\n  const where = whereClauses.length ? `WHERE ${whereClauses.join(' AND ')}` : '';\n\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM users u ${where}`,\n    params\n  );\n\n  const total = totalRow?.count ?? 0;\n  const offset = (options.page - 1) * options.size;\n\n  const selectParams = [...params, options.size, offset];\n\n  const rows = await query<{\n    user_id: string;\n    name: string | null;\n    english_name: string | null;\n    profile_image: string | null;\n    self_bio: string | null;\n    birthyear: string | null;\n    gender: string | null;\n    location_country: string | null;\n    location_city: string | null;\n    native_lang_id: number | null;\n    native_language_name: string | null;\n    native_language_code: string | null;\n    communication_method: string | null;\n    daily_minute: string | null;\n    partner_gender: string | null;\n    learning_expectation: string | null;\n    status: string | null;\n    last_seen_at: string | null;\n  }>(\n    env.DB,\n    `SELECT\n        u.user_id,\n        u.name,\n        u.english_name,\n        u.profile_image,\n        u.self_bio,\n        u.birthyear,\n        u.gender,\n        loc.country AS location_country,\n        loc.city AS location_city,\n        u.native_lang_id,\n        nl.language_name AS native_language_name,\n        nl.language_code AS native_language_code,\n        u.communication_method,\n        u.daily_minute,\n        u.partner_gender,\n        u.learning_expectation,\n        us.status,\n        us.last_seen_at\n      FROM users u\n      LEFT JOIN user_status us ON us.user_id = u.user_id\n      LEFT JOIN locations loc ON loc.location_id = u.location_id\n      LEFT JOIN languages nl ON nl.language_id = u.native_lang_id\n      ${where}\n      ORDER BY u.updated_at DESC, u.created_at DESC\n      LIMIT ? OFFSET ?\n    `,\n    selectParams\n  );\n\n  const userIds = rows.map((row) => row.user_id);\n  const targetLanguagesMap = await loadTargetLanguages(env, userIds);\n  const interestsMap = await loadInterests(env, userIds);\n  const personalitiesMap = await loadPartnerPersonalities(env, userIds);\n\n  const partners: MatchingPartner[] = rows.map((row) => {\n    const birthyearNum = row.birthyear ? Number(row.birthyear) : undefined;\n    let age: number | undefined;\n    if (birthyearNum && Number.isFinite(birthyearNum)) {\n      const currentYear = new Date().getUTCFullYear();\n      age = currentYear - birthyearNum;\n    }\n\n    const profileImageUrl = row.profile_image\n      ? `/api/v1/upload/file/${row.profile_image}`\n      : undefined;\n\n    return {\n      userId: row.user_id,\n      englishName: row.english_name ?? row.name ?? undefined,\n      profileImageUrl,\n      selfBio: row.self_bio ?? undefined,\n      age,\n      gender: row.gender ?? undefined,\n      location: row.location_country\n        ? row.location_city\n          ? `${row.location_country}, ${row.location_city}`\n          : row.location_country\n        : undefined,\n      nativeLanguage: row.native_language_name ?? undefined,\n      targetLanguages: targetLanguagesMap.get(row.user_id) ?? [],\n      interests: interestsMap.get(row.user_id) ?? [],\n      partnerPersonalities: personalitiesMap.get(row.user_id) ?? [],\n      compatibilityScore: calculateQuickCompatibilityScore(row.user_id, userId),\n      onlineStatus: row.status ?? 'OFFLINE',\n      lastActiveTime: row.last_seen_at ?? undefined\n    };\n  });\n\n  return {\n    data: partners,\n    page: options.page,\n    size: options.size,\n    total\n  };\n}\n\nfunction calculateQuickCompatibilityScore(partnerId: string, currentUserId: string): number {\n  const base = partnerId.localeCompare(currentUserId);\n  const normalized = Math.abs(base) % 101;\n  return Math.round(normalized);\n}\n\nasync function loadTargetLanguages(env: Env, userIds: string[]) {\n  const map = new Map<string, MatchingPartner['targetLanguages']>();\n  if (userIds.length === 0) return map;\n\n  const placeholders = userIds.map(() => '?').join(',');\n  const rows = await query<{\n    user_id: string;\n    language_name: string | null;\n    current_level_name: string | null;\n    target_level_name: string | null;\n  }>(\n    env.DB,\n    `SELECT\n        oll.user_id,\n        lang.language_name,\n        curr.lang_level_name AS current_level_name,\n        target.lang_level_name AS target_level_name\n      FROM onboarding_lang_level oll\n      LEFT JOIN languages lang ON lang.language_id = oll.language_id\n      LEFT JOIN lang_level_type curr ON curr.lang_level_id = oll.current_level_id\n      LEFT JOIN lang_level_type target ON target.lang_level_id = oll.target_level_id\n      WHERE oll.user_id IN (${placeholders})\n    `,\n    userIds\n  );\n\n  for (const row of rows) {\n    const list = map.get(row.user_id) ?? [];\n    list.push({\n      languageName: row.language_name ?? 'Unknown',\n      currentLevel: row.current_level_name ?? undefined,\n      targetLevel: row.target_level_name ?? undefined\n    });\n    map.set(row.user_id, list);\n  }\n  return map;\n}\n\nasync function loadInterests(env: Env, userIds: string[]) {\n  const map = new Map<string, string[]>();\n  if (userIds.length === 0) return map;\n  const placeholders = userIds.map(() => '?').join(',');\n  const rows = await query<{\n    user_id: string;\n    topic_name: string | null;\n  }>(\n    env.DB,\n    `SELECT ot.user_id, t.topic_name\n       FROM onboarding_topic ot\n       JOIN topic t ON t.topic_id = ot.topic_id\n       WHERE ot.user_id IN (${placeholders})\n    `,\n    userIds\n  );\n  for (const row of rows) {\n    const list = map.get(row.user_id) ?? [];\n    if (row.topic_name) list.push(row.topic_name);\n    map.set(row.user_id, list);\n  }\n  return map;\n}\n\nasync function loadPartnerPersonalities(env: Env, userIds: string[]) {\n  const map = new Map<string, string[]>();\n  if (userIds.length === 0) return map;\n  const placeholders = userIds.map(() => '?').join(',');\n  const rows = await query<{\n    user_id: string;\n    partner_personality: string | null;\n  }>(\n    env.DB,\n    `SELECT op.user_id, pp.partner_personality\n       FROM onboarding_partner op\n       JOIN partner_personality pp ON pp.partner_personality_id = op.partner_personality_id\n       WHERE op.user_id IN (${placeholders})\n    `,\n    userIds\n  );\n  for (const row of rows) {\n    const list = map.get(row.user_id) ?? [];\n    if (row.partner_personality) list.push(row.partner_personality);\n    map.set(row.user_id, list);\n  }\n  return map;\n}\n\nfunction nowIso(): string {\n  return new Date().toISOString();\n}\n\nfunction addDays(days: number): string {\n  const date = new Date();\n  date.setUTCDate(date.getUTCDate() + days);\n  return date.toISOString();\n}\n\nfunction normalizePair(a: string, b: string): [string, string] {\n  return [a, b].sort((x, y) => (x < y ? -1 : x > y ? 1 : 0)) as [string, string];\n}\n\nexport async function createMatchingRequest(env: Env, payload: RequestInsertPayload) {\n  if (payload.senderId === payload.receiverId) {\n    throw new Error('\uC790\uAE30 \uC790\uC2E0\uC5D0\uAC8C\uB294 \uB9E4\uCE6D\uC744 \uBCF4\uB0BC \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n\n  const duplicate = await queryFirst<{ request_id: string }>(\n    env.DB,\n    `SELECT request_id FROM matching_requests\n       WHERE sender_id = ? AND receiver_id = ? AND status = ?\n       LIMIT 1`,\n    [payload.senderId, payload.receiverId, MATCHING_STATUS.PENDING]\n  );\n\n  if (duplicate) {\n    throw new Error('\uC774\uBBF8 \uB300\uAE30 \uC911\uC778 \uB9E4\uCE6D \uC694\uCCAD\uC774 \uC788\uC2B5\uB2C8\uB2E4.');\n  }\n\n  const [user1, user2] = normalizePair(payload.senderId, payload.receiverId);\n  const existingMatch = await queryFirst<{ match_id: string; is_active: number }>(\n    env.DB,\n    `SELECT match_id, is_active FROM user_matches\n       WHERE (user1_id = ? AND user2_id = ?) OR (user1_id = ? AND user2_id = ?)\n       LIMIT 1`,\n    [user1, user2, user1, user2]\n  );\n\n  if (existingMatch?.is_active) {\n    throw new Error('\uC774\uBBF8 \uB9E4\uCE6D\uB41C \uC0AC\uC6A9\uC790\uC785\uB2C8\uB2E4.');\n  }\n\n  const requestId = crypto.randomUUID();\n  const now = nowIso();\n  const expiresAt = addDays(MATCHING_DEFAULT_EXPIRE_DAYS);\n\n  await execute(\n    env.DB,\n    `INSERT INTO matching_requests (\n        request_id, sender_id, receiver_id, message, status, response_message,\n        responded_at, expires_at, created_at, updated_at\n      ) VALUES (?, ?, ?, ?, ?, NULL, NULL, ?, ?, ?)\n    `,\n    [\n      requestId,\n      payload.senderId,\n      payload.receiverId,\n      payload.message ?? null,\n      MATCHING_STATUS.PENDING,\n      expiresAt,\n      now,\n      now\n    ]\n  );\n\n  return { requestId };\n}\n\nexport async function listSentRequests(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number\n): Promise<PaginatedResult<MatchingRequestItem>> {\n  return listRequests(env, { userId, page, size, mode: 'sent' });\n}\n\nexport async function listReceivedRequests(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number\n): Promise<PaginatedResult<MatchingRequestItem>> {\n  return listRequests(env, { userId, page, size, mode: 'received' });\n}\n\nasync function listRequests(\n  env: Env,\n  options: { userId: string; page: number; size: number; mode: 'sent' | 'received' }\n): Promise<PaginatedResult<MatchingRequestItem>> {\n  const column = options.mode === 'sent' ? 'sender_id' : 'receiver_id';\n  const partnerColumn = options.mode === 'sent' ? 'receiver_id' : 'sender_id';\n\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM matching_requests WHERE ${column} = ?`,\n    [options.userId]\n  );\n  const total = totalRow?.count ?? 0;\n  const offset = (options.page - 1) * options.size;\n\n  const rows = await query<{\n    request_id: string;\n    sender_id: string;\n    receiver_id: string;\n    message: string | null;\n    status: string;\n    response_message: string | null;\n    responded_at: string | null;\n    expires_at: string | null;\n    created_at: string;\n    partner_id: string;\n    partner_name: string | null;\n    partner_profile_image: string | null;\n  }>(\n    env.DB,\n    `SELECT\n        mr.request_id,\n        mr.sender_id,\n        mr.receiver_id,\n        mr.message,\n        mr.status,\n        mr.response_message,\n        mr.responded_at,\n        mr.expires_at,\n        mr.created_at,\n        partner.user_id AS partner_id,\n        partner.name AS partner_name,\n        partner.profile_image AS partner_profile_image\n      FROM matching_requests mr\n      JOIN users partner ON partner.user_id = mr.${partnerColumn}\n      WHERE mr.${column} = ?\n      ORDER BY mr.created_at DESC\n      LIMIT ? OFFSET ?\n    `,\n    [options.userId, options.size, offset]\n  );\n\n  const data: MatchingRequestItem[] = rows.map((row) => ({\n    requestId: row.request_id,\n    senderId: row.sender_id,\n    receiverId: row.receiver_id,\n    message: row.message ?? undefined,\n    status: row.status,\n    responseMessage: row.response_message ?? undefined,\n    respondedAt: row.responded_at ?? undefined,\n    expiresAt: row.expires_at ?? undefined,\n    createdAt: row.created_at,\n    partner: {\n      userId: row.partner_id,\n      name: row.partner_name ?? undefined,\n      profileImageUrl: row.partner_profile_image\n        ? `/api/v1/upload/file/${row.partner_profile_image}`\n        : undefined\n    }\n  }));\n\n  return {\n    data,\n    page: options.page,\n    size: options.size,\n    total\n  };\n}\n\nexport async function acceptMatchingRequest(env: Env, options: AcceptOptions) {\n  const request = await queryFirst<{\n    request_id: string;\n    sender_id: string;\n    receiver_id: string;\n    status: string;\n  }>(\n    env.DB,\n    'SELECT request_id, sender_id, receiver_id, status FROM matching_requests WHERE request_id = ? LIMIT 1',\n    [options.requestId]\n  );\n\n  if (!request) {\n    throw new Error('\uB9E4\uCE6D \uC694\uCCAD\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  if (request.receiver_id !== options.receiverId) {\n    throw new Error('\uB2E4\uB978 \uC0AC\uC6A9\uC790\uC758 \uC694\uCCAD\uC785\uB2C8\uB2E4.');\n  }\n  if (request.status !== MATCHING_STATUS.PENDING) {\n    throw new Error('\uC774\uBBF8 \uCC98\uB9AC\uB41C \uC694\uCCAD\uC785\uB2C8\uB2E4.');\n  }\n\n  const now = nowIso();\n  const [user1, user2] = normalizePair(request.sender_id, request.receiver_id);\n\n  await transaction(env.DB, [\n    {\n      sql: `UPDATE matching_requests\n              SET status = ?, response_message = ?, responded_at = ?, updated_at = ?\n            WHERE request_id = ?`,\n      params: [\n        MATCHING_STATUS.ACCEPTED,\n        options.responseMessage ?? null,\n        now,\n        now,\n        options.requestId\n      ]\n    },\n    {\n      sql: `INSERT INTO user_matches (\n                match_id, user1_id, user2_id, matched_at, is_active, created_at, updated_at\n            ) VALUES (?, ?, ?, ?, 1, ?, ?)\n            ON CONFLICT(user1_id, user2_id) DO UPDATE SET\n              is_active = 1,\n              matched_at = excluded.matched_at,\n              deactivated_at = NULL,\n              deactivated_by = NULL,\n              updated_at = excluded.updated_at`,\n      params: [crypto.randomUUID(), user1, user2, now, now, now]\n    }\n  ]);\n}\n\nexport async function rejectMatchingRequest(env: Env, options: RejectOptions) {\n  const request = await queryFirst<{\n    receiver_id: string;\n    status: string;\n  }>(\n    env.DB,\n    'SELECT receiver_id, status FROM matching_requests WHERE request_id = ? LIMIT 1',\n    [options.requestId]\n  );\n\n  if (!request) {\n    throw new Error('\uB9E4\uCE6D \uC694\uCCAD\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n\n  if (request.receiver_id !== options.receiverId) {\n    throw new Error('\uB2E4\uB978 \uC0AC\uC6A9\uC790\uC758 \uC694\uCCAD\uC785\uB2C8\uB2E4.');\n  }\n\n  if (request.status !== MATCHING_STATUS.PENDING) {\n    throw new Error('\uC774\uBBF8 \uCC98\uB9AC\uB41C \uC694\uCCAD\uC785\uB2C8\uB2E4.');\n  }\n\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE matching_requests\n       SET status = ?, response_message = ?, responded_at = ?, updated_at = ?\n       WHERE request_id = ?`,\n    [MATCHING_STATUS.REJECTED, options.responseMessage ?? null, now, now, options.requestId]\n  );\n}\n\nexport async function listMatches(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number\n): Promise<PaginatedResult<MatchSummary>> {\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    'SELECT COUNT(*) as count FROM user_matches WHERE is_active = 1 AND (user1_id = ? OR user2_id = ?)',\n    [userId, userId]\n  );\n  const total = totalRow?.count ?? 0;\n  const offset = (page - 1) * size;\n\n  const rows = await query<{\n    match_id: string;\n    user1_id: string;\n    user2_id: string;\n    matched_at: string;\n    partner_id: string;\n    partner_name: string | null;\n    partner_profile_image: string | null;\n  }>(\n    env.DB,\n    `SELECT\n        um.match_id,\n        um.user1_id,\n        um.user2_id,\n        um.matched_at,\n        CASE WHEN um.user1_id = ? THEN um.user2_id ELSE um.user1_id END AS partner_id,\n        p.name AS partner_name,\n        p.profile_image AS partner_profile_image\n      FROM user_matches um\n      JOIN users p ON p.user_id = CASE WHEN um.user1_id = ? THEN um.user2_id ELSE um.user1_id END\n      WHERE um.is_active = 1 AND (um.user1_id = ? OR um.user2_id = ?)\n      ORDER BY um.matched_at DESC\n      LIMIT ? OFFSET ?\n    `,\n    [userId, userId, userId, userId, size, offset]\n  );\n\n  const data: MatchSummary[] = rows.map((row) => ({\n    matchId: row.match_id,\n    partnerId: row.partner_id,\n    partnerName: row.partner_name ?? undefined,\n    partnerProfileImageUrl: row.partner_profile_image\n      ? `/api/v1/upload/file/${row.partner_profile_image}`\n      : undefined,\n    matchedAt: row.matched_at\n  }));\n\n  return {\n    data,\n    page,\n    size,\n    total\n  };\n}\n\nexport async function removeMatch(env: Env, options: RemoveMatchOptions) {\n  const match = await queryFirst<{\n    match_id: string;\n    user1_id: string;\n    user2_id: string;\n    is_active: number;\n  }>(\n    env.DB,\n    'SELECT match_id, user1_id, user2_id, is_active FROM user_matches WHERE match_id = ? LIMIT 1',\n    [options.matchId]\n  );\n\n  if (!match) {\n    throw new Error('\uB9E4\uCE6D \uC815\uBCF4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n\n  if (match.is_active !== 1) {\n    return;\n  }\n\n  if (match.user1_id !== options.userId && match.user2_id !== options.userId) {\n    throw new Error('\uD574\uB2F9 \uB9E4\uCE6D\uC5D0 \uB300\uD55C \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE user_matches\n       SET is_active = 0,\n           deactivated_at = ?,\n           deactivated_by = ?,\n           updated_at = ?\n       WHERE match_id = ?`,\n    [now, options.userId, now, options.matchId]\n  );\n}\n\nexport async function getMatchingQueueStatus(env: Env, userId: string) {\n  return queryFirst(\n    env.DB,\n    'SELECT queue_id, session_type, queue_status, priority_score, joined_at, estimated_wait_minutes FROM matching_queue WHERE user_id = ? ORDER BY created_at DESC LIMIT 1',\n    [userId]\n  );\n}\n\nexport async function addToMatchingQueue(env: Env, userId: string, sessionType: string) {\n  const now = nowIso();\n  await transaction(env.DB, [\n    { sql: 'DELETE FROM matching_queue WHERE user_id = ?', params: [userId] },\n    {\n      sql: `INSERT INTO matching_queue (\n              user_id, session_type, queue_status, priority_score,\n              joined_at, created_at, updated_at\n            ) VALUES (?, ?, ?, ?, ?, ?, ?)` ,\n      params: [userId, sessionType, 'WAITING', 0, now, now, now]\n    }\n  ]);\n}\n\nexport async function removeFromMatchingQueue(env: Env, userId: string) {\n  await execute(env.DB, 'DELETE FROM matching_queue WHERE user_id = ?', [userId]);\n}\n\nexport async function recordFeedback(\n  env: Env,\n  options: {\n    reviewerId: string;\n    partnerId: string;\n    matchId: string;\n    overallRating: number;\n    writtenFeedback?: string;\n    wouldMatchAgain?: boolean;\n  }\n) {\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `INSERT INTO matching_feedback (\n        reviewer_id, partner_id, match_id, overall_rating,\n        written_feedback, would_match_again, created_at, updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)` ,\n    [\n      options.reviewerId,\n      options.partnerId,\n      options.matchId,\n      options.overallRating,\n      options.writtenFeedback ?? null,\n      options.wouldMatchAgain ? 1 : 0,\n      now,\n      now\n  ]\n  );\n}\n\nasync function loadCompatibilityProfile(env: Env, userId: string): Promise<CompatibilityProfile> {\n  const userRow = await queryFirst<{\n    user_id: string;\n    native_lang_id: number | null;\n    language_code: string | null;\n    language_name: string | null;\n  }>(\n    env.DB,\n    `SELECT u.user_id,\n            u.native_lang_id,\n            lang.language_code,\n            lang.language_name\n       FROM users u\n       LEFT JOIN languages lang ON lang.language_id = u.native_lang_id\n      WHERE u.user_id = ?\n      LIMIT 1`,\n    [userId]\n  );\n\n  if (!userRow) {\n    throw new AppError('\uC0AC\uC6A9\uC790\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'MATCHING_USER_NOT_FOUND');\n  }\n\n  const languageRows = await query<{\n    language_id: number | null;\n    language_code: string | null;\n    language_name: string | null;\n    current_level_order: number | null;\n    target_level_order: number | null;\n  }>(\n    env.DB,\n    `SELECT\n        oll.language_id,\n        lang.language_code,\n        lang.language_name,\n        curr.level_order AS current_level_order,\n        target.level_order AS target_level_order\n      FROM onboarding_lang_level oll\n      LEFT JOIN languages lang ON lang.language_id = oll.language_id\n      LEFT JOIN lang_level_type curr ON curr.lang_level_id = oll.current_level_id\n      LEFT JOIN lang_level_type target ON target.lang_level_id = oll.target_level_id\n     WHERE oll.user_id = ?`,\n    [userId]\n  );\n\n  const targetLanguages: TargetLanguageProfile[] = languageRows.map((row) => ({\n    languageId: row.language_id ?? undefined,\n    languageCode: row.language_code ?? undefined,\n    languageName: row.language_name ?? undefined,\n    currentLevelOrder: row.current_level_order,\n    targetLevelOrder: row.target_level_order\n  }));\n\n  const personalityMap = await loadPartnerPersonalities(env, [userId]);\n  const interestsMap = await loadInterests(env, [userId]);\n\n  const studyGoalRows = await query<{\n    motivation_name: string | null;\n  }>(\n    env.DB,\n    `SELECT m.motivation_name\n       FROM onboarding_study_goal osg\n       JOIN motivation m ON m.motivation_id = osg.motivation_id\n      WHERE osg.user_id = ?`,\n    [userId]\n  );\n\n  return {\n    userId: userRow.user_id,\n    nativeLanguageId: userRow.native_lang_id ?? undefined,\n    nativeLanguageCode: userRow.language_code ?? undefined,\n    nativeLanguageName: userRow.language_name ?? undefined,\n    targetLanguages,\n    personalities: personalityMap.get(userId) ?? [],\n    studyGoals: studyGoalRows\n      .map((row) => row.motivation_name)\n      .filter((name): name is string => Boolean(name)),\n    interests: interestsMap.get(userId) ?? []\n  };\n}\n\nfunction intersectStrings(a: string[], b: string[]): string[] {\n  const setB = new Set(b.map((value) => value.toLowerCase()));\n  const seen = new Set<string>();\n  const result: string[] = [];\n  for (const value of a) {\n    const key = value.toLowerCase();\n    if (!seen.has(key) && setB.has(key)) {\n      seen.add(key);\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nfunction computeLanguageCompatibility(\n  current: CompatibilityProfile,\n  partner: CompatibilityProfile\n): {\n  score: number;\n  description: string;\n  mutualExchangeLanguages: string[];\n  sharedTargetLanguages: string[];\n} {\n  const descriptionParts: string[] = [];\n  const mutualExchangeLanguages: string[] = [];\n\n  let score = 0;\n\n  if (current.nativeLanguageId) {\n    const partnerTargets = partner.targetLanguages.filter(\n      (lang) => lang.languageId === current.nativeLanguageId\n    );\n    if (partnerTargets.length > 0) {\n      const label = current.nativeLanguageName ?? current.nativeLanguageCode ?? 'native language';\n      mutualExchangeLanguages.push(label);\n      score += 40;\n      descriptionParts.push('\uC0C1\uB300\uAC00 \uB0B4 \uBAA8\uAD6D\uC5B4\uB97C \uD559\uC2B5 \uC911\uC785\uB2C8\uB2E4.');\n    }\n  }\n\n  if (partner.nativeLanguageId) {\n    const userTargets = current.targetLanguages.filter(\n      (lang) => lang.languageId === partner.nativeLanguageId\n    );\n    if (userTargets.length > 0) {\n      const label = partner.nativeLanguageName ?? partner.nativeLanguageCode ?? 'partner language';\n      mutualExchangeLanguages.push(label);\n      score += 40;\n      descriptionParts.push('\uB0B4\uAC00 \uC0C1\uB300\uC758 \uBAA8\uAD6D\uC5B4\uB97C \uD559\uC2B5\uD558\uACE0 \uC788\uC2B5\uB2C8\uB2E4.');\n    }\n  }\n\n  const currentTargets = current.targetLanguages\n    .map((lang) => lang.languageCode ?? lang.languageName ?? String(lang.languageId ?? ''))\n    .filter((value): value is string => value.length > 0);\n  const partnerTargets = partner.targetLanguages\n    .map((lang) => lang.languageCode ?? lang.languageName ?? String(lang.languageId ?? ''))\n    .filter((value): value is string => value.length > 0);\n\n  const sharedTargetLanguages = intersectStrings(currentTargets, partnerTargets);\n\n  if (sharedTargetLanguages.length > 0) {\n    score += 15;\n    descriptionParts.push('\uAC19\uC740 \uBAA9\uD45C \uC5B8\uC5B4\uB97C \uD568\uAED8 \uD559\uC2B5\uD558\uACE0 \uC788\uC2B5\uB2C8\uB2E4.');\n  }\n\n  let levelBonus = 0;\n  if (sharedTargetLanguages.length > 0) {\n    const averages = sharedTargetLanguages.map((code) => {\n      const normalized = code.toLowerCase();\n      const currentLanguage = current.targetLanguages.find((lang) => {\n        const candidate = lang.languageCode ?? lang.languageName ?? '';\n        return candidate.toLowerCase() === normalized;\n      });\n      const partnerLanguage = partner.targetLanguages.find((lang) => {\n        const candidate = lang.languageCode ?? lang.languageName ?? '';\n        return candidate.toLowerCase() === normalized;\n      });\n      const currentLevel = currentLanguage?.targetLevelOrder ?? currentLanguage?.currentLevelOrder;\n      const partnerLevel = partnerLanguage?.targetLevelOrder ?? partnerLanguage?.currentLevelOrder;\n      if (currentLevel != null && partnerLevel != null) {\n        const diff = Math.abs(currentLevel - partnerLevel);\n        if (diff <= 1) return 12;\n        if (diff <= 2) return 8;\n        return 5;\n      }\n      return 5;\n    });\n\n    if (averages.length > 0) {\n      levelBonus = Math.min(15, averages.reduce((sum, value) => sum + value, 0) / averages.length);\n      if (levelBonus >= 10) {\n        descriptionParts.push('\uC5B8\uC5B4 \uB808\uBCA8\uC774 \uBE44\uC2B7\uD574 \uB300\uD654\uAC00 \uC218\uC6D4\uD569\uB2C8\uB2E4.');\n      }\n    }\n  }\n\n  score += levelBonus;\n\n  if (score === 0) {\n    if (current.targetLanguages.length === 0 || partner.targetLanguages.length === 0) {\n      score = 50;\n      descriptionParts.push('\uC5B8\uC5B4 \uD559\uC2B5 \uC815\uBCF4\uAC00 \uBD80\uC871\uD558\uC5EC \uAE30\uBCF8 \uC810\uC218\uB97C \uC801\uC6A9\uD588\uC2B5\uB2C8\uB2E4.');\n    } else {\n      score = 30;\n      descriptionParts.push('\uC5B8\uC5B4 \uD559\uC2B5 \uBC29\uD5A5\uC774 \uBD80\uBD84\uC801\uC73C\uB85C\uB9CC \uACB9\uCE69\uB2C8\uB2E4.');\n    }\n  }\n\n  return {\n    score: Math.min(100, Math.round(score * 10) / 10),\n    description: descriptionParts.join(' '),\n    mutualExchangeLanguages: Array.from(new Set(mutualExchangeLanguages)),\n    sharedTargetLanguages: Array.from(new Set(sharedTargetLanguages))\n  };\n}\n\nfunction hasComplementaryTrait(traitsA: Set<string>, traitsB: Set<string>, pair: [string, string]): boolean {\n  const [first, second] = pair;\n  const aHasFirst = traitsA.has(first);\n  const aHasSecond = traitsA.has(second);\n  const bHasFirst = traitsB.has(first);\n  const bHasSecond = traitsB.has(second);\n  return (aHasFirst && bHasSecond) || (aHasSecond && bHasFirst);\n}\n\nfunction computePersonalityCompatibility(\n  current: CompatibilityProfile,\n  partner: CompatibilityProfile\n): { score: number; description: string; overlap: string[] } {\n  const traitsA = new Set(current.personalities.map((trait) => trait.toUpperCase()));\n  const traitsB = new Set(partner.personalities.map((trait) => trait.toUpperCase()));\n\n  if (traitsA.size === 0 || traitsB.size === 0) {\n    return {\n      score: 50,\n      description: '\uC131\uACA9 \uB370\uC774\uD130\uAC00 \uCDA9\uBD84\uD558\uC9C0 \uC54A\uC544 \uAE30\uBCF8 \uC810\uC218\uB97C \uC801\uC6A9\uD588\uC2B5\uB2C8\uB2E4.',\n      overlap: []\n    };\n  }\n\n  const commonTraits = Array.from(traitsA).filter((trait) => traitsB.has(trait));\n  let score = commonTraits.length * 20;\n\n  const complementaryPairs: Array<[string, string]> = [\n    ['INTROVERT', 'EXTROVERT'],\n    ['LEADER', 'SUPPORTER'],\n    ['PLANNER', 'ADVENTURER'],\n    ['ANALYTICAL', 'CREATIVE']\n  ];\n\n  let complementaryScore = 0;\n  for (const pair of complementaryPairs) {\n    if (hasComplementaryTrait(traitsA, traitsB, pair)) {\n      complementaryScore += 15;\n    }\n  }\n\n  score += complementaryScore;\n\n  if (score === 0) {\n    score = 45;\n  }\n\n  return {\n    score: Math.min(100, Math.round(score * 10) / 10),\n    description:\n      commonTraits.length > 0\n        ? '\uC131\uACA9 \uC720\uD615\uC774 \uC798 \uB9DE\uC73C\uBA70 \uBCF4\uC644 \uAD00\uACC4\uB3C4 \uAE30\uB300\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.'\n        : complementaryScore > 0\n          ? '\uC11C\uB85C\uC758 \uC131\uACA9\uC774 \uBCF4\uC644\uC801\uC778 \uC870\uD569\uC785\uB2C8\uB2E4.'\n          : '\uC131\uACA9 \uC870\uD569 \uB370\uC774\uD130\uAC00 \uC81C\uD55C\uC801\uC785\uB2C8\uB2E4.',\n    overlap: commonTraits\n  };\n}\n\nfunction computeGoalCompatibility(\n  current: CompatibilityProfile,\n  partner: CompatibilityProfile\n): { score: number; description: string; sharedGoals: string[] } {\n  if (current.studyGoals.length === 0 || partner.studyGoals.length === 0) {\n    return {\n      score: 50,\n      description: '\uD559\uC2B5 \uBAA9\uD45C \uB370\uC774\uD130\uAC00 \uBD80\uC871\uD558\uC5EC \uAE30\uBCF8 \uC810\uC218\uB97C \uC801\uC6A9\uD588\uC2B5\uB2C8\uB2E4.',\n      sharedGoals: []\n    };\n  }\n\n  const sharedGoals = intersectStrings(current.studyGoals, partner.studyGoals);\n  let score = sharedGoals.length * 25;\n\n  const normalizedCurrent = current.studyGoals.map((goal) => goal.toUpperCase());\n  const normalizedPartner = partner.studyGoals.map((goal) => goal.toUpperCase());\n  const currentSet = new Set(normalizedCurrent);\n  const partnerSet = new Set(normalizedPartner);\n\n  const complementaryPairs: Array<[string, string]> = [\n    ['BUSINESS', 'CASUAL'],\n    ['ACADEMIC', 'PRACTICAL'],\n    ['TEST_PREP', 'CONVERSATION']\n  ];\n\n  for (const [a, b] of complementaryPairs) {\n    if ((currentSet.has(a) && partnerSet.has(b)) || (currentSet.has(b) && partnerSet.has(a))) {\n      score += 20;\n      break;\n    }\n  }\n\n  if (score === 0) {\n    score = 45;\n  }\n\n  return {\n    score: Math.min(100, Math.round(score * 10) / 10),\n    description:\n      sharedGoals.length > 0\n        ? '\uACF5\uD1B5 \uD559\uC2B5 \uBAA9\uD45C\uAC00 \uC788\uC5B4 \uD559\uC2B5 \uBC29\uD5A5\uC774 \uC720\uC0AC\uD569\uB2C8\uB2E4.'\n        : '\uD559\uC2B5 \uBAA9\uD45C\uAC00 \uBCF4\uC644\uC801\uC774\uC5B4\uC11C \uC11C\uB85C \uC2DC\uB108\uC9C0\uB97C \uB0BC \uC218 \uC788\uC2B5\uB2C8\uB2E4.',\n    sharedGoals\n  };\n}\n\nfunction computeInterestCompatibility(\n  current: CompatibilityProfile,\n  partner: CompatibilityProfile\n): { score: number; description: string; sharedInterests: string[] } {\n  if (current.interests.length === 0 || partner.interests.length === 0) {\n    return {\n      score: 50,\n      description: '\uAD00\uC2EC\uC0AC \uB370\uC774\uD130\uAC00 \uBD80\uC871\uD558\uC5EC \uAE30\uBCF8 \uC810\uC218\uB97C \uC801\uC6A9\uD588\uC2B5\uB2C8\uB2E4.',\n      sharedInterests: []\n    };\n  }\n\n  const sharedInterests = intersectStrings(current.interests, partner.interests);\n  const totalUnique = new Set(\n    [...current.interests.map((i) => i.toLowerCase()), ...partner.interests.map((i) => i.toLowerCase())]\n  ).size;\n  const ratio = totalUnique > 0 ? (sharedInterests.length * 2) / totalUnique : 0;\n  const score = Math.round(Math.min(100, ratio * 1000)) / 10;\n\n  return {\n    score,\n    description:\n      sharedInterests.length > 0\n        ? '\uACF5\uD1B5 \uAD00\uC2EC\uC0AC\uAC00 \uC788\uC5B4 \uC790\uC5F0\uC2A4\uB7FD\uAC8C \uB300\uD654\uB97C \uC774\uC5B4\uAC08 \uC218 \uC788\uC2B5\uB2C8\uB2E4.'\n        : '\uAD00\uC2EC\uC0AC\uAC00 \uB2E4\uC591\uD558\uAC8C \uBD84\uD3EC\uD574 \uC788\uC5B4 \uC0C8\uB85C\uC6B4 \uC8FC\uC81C\uB97C \uACF5\uC720\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.',\n    sharedInterests\n  };\n}\n\nfunction determineCompatibilityLevel(score: number): 'HIGH' | 'MEDIUM' | 'LOW' {\n  if (score >= 80) return 'HIGH';\n  if (score >= 60) return 'MEDIUM';\n  return 'LOW';\n}\n\nfunction createRecommendation(\n  score: number,\n  categoryScores: Record<string, number>\n): string {\n  let message = '';\n  if (score >= 80) {\n    message = '\uB9E4\uC6B0 \uC88B\uC740 \uB9E4\uCE6D\uC785\uB2C8\uB2E4! ';\n  } else if (score >= 60) {\n    message = '\uAD1C\uCC2E\uC740 \uB9E4\uCE6D\uC785\uB2C8\uB2E4. ';\n  } else {\n    message = '\uD638\uD658\uC131\uC774 \uB0AE\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4. ';\n  }\n\n  const bestCategory = Object.entries(categoryScores)\n    .sort((a, b) => b[1] - a[1])\n    .map(([category]) => category)[0];\n\n  switch (bestCategory) {\n    case 'language':\n      message += '\uC5B8\uC5B4 \uAD50\uD658\uC5D0 \uCD5C\uC801\uD654\uB41C \uD30C\uD2B8\uB108\uC785\uB2C8\uB2E4.';\n      break;\n    case 'personality':\n      message += '\uC131\uACA9\uC774 \uC798 \uB9DE\uB294 \uD30C\uD2B8\uB108\uC785\uB2C8\uB2E4.';\n      break;\n    case 'goals':\n      message += '\uD559\uC2B5 \uBAA9\uD45C\uAC00 \uBE44\uC2B7\uD55C \uD30C\uD2B8\uB108\uC785\uB2C8\uB2E4.';\n      break;\n    case 'interests':\n      message += '\uACF5\uD1B5 \uAD00\uC2EC\uC0AC\uAC00 \uB9CE\uC740 \uD30C\uD2B8\uB108\uC785\uB2C8\uB2E4.';\n      break;\n    default:\n      message += '\uD568\uAED8 \uD559\uC2B5\uD558\uBA70 \uC2DC\uB108\uC9C0\uB97C \uD655\uC778\uD574\uBCF4\uC138\uC694!';\n  }\n\n  return message;\n}\n\nexport async function calculateCompatibilityAnalysis(\n  env: Env,\n  currentUserId: string,\n  partnerId: string\n): Promise<CompatibilityScoreResponseType> {\n  if (currentUserId === partnerId) {\n    throw new AppError('\uC790\uC2E0\uACFC\uC758 \uD638\uD658\uC131\uC740 \uBD84\uC11D\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 400, 'MATCHING_SELF_COMPATIBILITY');\n  }\n\n  const [currentProfile, partnerProfile] = await Promise.all([\n    loadCompatibilityProfile(env, currentUserId),\n    loadCompatibilityProfile(env, partnerId)\n  ]);\n\n  const language = computeLanguageCompatibility(currentProfile, partnerProfile);\n  const personality = computePersonalityCompatibility(currentProfile, partnerProfile);\n  const goals = computeGoalCompatibility(currentProfile, partnerProfile);\n  const interests = computeInterestCompatibility(currentProfile, partnerProfile);\n\n  const overallScore = Math.round(\n    (language.score * 0.3 + personality.score * 0.25 + goals.score * 0.25 + interests.score * 0.2) * 10\n  ) / 10;\n\n  const categoryScores: Record<string, number> = {\n    language: language.score,\n    personality: personality.score,\n    goals: goals.score,\n    interests: interests.score\n  };\n\n  const categoryDetails: CompatibilityCategoryDetail[] = [\n    { category: 'language', score: language.score, description: language.description },\n    { category: 'personality', score: personality.score, description: personality.description },\n    { category: 'goals', score: goals.score, description: goals.description },\n    { category: 'interests', score: interests.score, description: interests.description }\n  ];\n\n  const sharedInsights: CompatibilitySharedInsights = {\n    mutualExchangeLanguages: language.mutualExchangeLanguages,\n    sharedTargetLanguages: language.sharedTargetLanguages,\n    sharedInterests: interests.sharedInterests,\n    sharedGoals: goals.sharedGoals,\n    personalityOverlap: personality.overlap\n  };\n\n  return {\n    overallScore,\n    compatibilityLevel: determineCompatibilityLevel(overallScore),\n    recommendation: createRecommendation(overallScore, categoryScores),\n    categoryScores,\n    categoryDetails,\n    sharedInsights\n  };\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport {\n  getAllAchievements,\n  getAchievementsByCategory,\n  getUserAchievements,\n  getCompletedAchievements,\n  getInProgressAchievements,\n  getAchievementStats,\n  updateAchievementProgress,\n  incrementAchievementProgress,\n  claimAchievementReward,\n  initializeUserAchievements,\n  checkAndCompleteAchievements\n} from '../services/achievement';\n\nconst achievementsRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\nfunction requireUserId(userId: string | undefined): string {\n  if (!userId) {\n    throw new AppError('\uC778\uC99D \uC815\uBCF4\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 401, 'UNAUTHORIZED');\n  }\n  return userId;\n}\n\nachievementsRoutes.use('*', requireAuth);\n\nachievementsRoutes.get('/', async (c) => {\n  const achievements = await getAllAchievements(c.env);\n  return successResponse(c, achievements);\n});\n\nachievementsRoutes.get('/category/:category', async (c) => {\n  const category = c.req.param('category');\n  if (!category) {\n    throw new AppError('\uCE74\uD14C\uACE0\uB9AC\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 400, 'INVALID_CATEGORY');\n  }\n  const achievements = await getAchievementsByCategory(c.env, category);\n  return successResponse(c, achievements);\n});\n\nachievementsRoutes.get('/my', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  await initializeUserAchievements(c.env, userId);\n  const achievements = await getUserAchievements(c.env, userId);\n  return successResponse(c, achievements);\n});\n\nachievementsRoutes.get('/my/completed', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const achievements = await getCompletedAchievements(c.env, userId);\n  return successResponse(c, achievements);\n});\n\nachievementsRoutes.get('/my/in-progress', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const achievements = await getInProgressAchievements(c.env, userId);\n  return successResponse(c, achievements);\n});\n\nachievementsRoutes.get('/my/stats', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  await initializeUserAchievements(c.env, userId);\n  const stats = await getAchievementStats(c.env, userId);\n  return successResponse(c, stats);\n});\n\nachievementsRoutes.post('/progress', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const body = await c.req.json().catch(() => ({}));\n  const achievementKey = typeof body?.achievementKey === 'string' ? body.achievementKey.trim() : '';\n  const progress = typeof body?.progress === 'number' ? body.progress : Number(body?.progress);\n  if (!achievementKey) {\n    throw new AppError('achievementKey\uB294 \uD544\uC218\uC785\uB2C8\uB2E4.', 400, 'INVALID_ACHIEVEMENT_KEY');\n  }\n  if (!Number.isFinite(progress)) {\n    throw new AppError('progress\uB294 \uC22B\uC790\uC5EC\uC57C \uD569\uB2C8\uB2E4.', 400, 'INVALID_PROGRESS');\n  }\n  const updated = await updateAchievementProgress(c.env, userId, achievementKey, progress);\n  return successResponse(c, updated);\n});\n\nachievementsRoutes.post('/progress/increment', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const achievementKey = (c.req.query('achievementKey') || '').trim();\n  const incrementRaw = c.req.query('increment');\n  const increment = incrementRaw ? Number(incrementRaw) : 1;\n  if (!achievementKey) {\n    throw new AppError('achievementKey\uB294 \uD544\uC218\uC785\uB2C8\uB2E4.', 400, 'INVALID_ACHIEVEMENT_KEY');\n  }\n  if (!Number.isFinite(increment)) {\n    throw new AppError('increment\uB294 \uC22B\uC790\uC5EC\uC57C \uD569\uB2C8\uB2E4.', 400, 'INVALID_INCREMENT');\n  }\n  const updated = await incrementAchievementProgress(c.env, userId, achievementKey, increment);\n  return successResponse(c, updated);\n});\n\nachievementsRoutes.post('/:userAchievementId/claim-reward', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const idRaw = c.req.param('userAchievementId');\n  const userAchievementId = Number(idRaw);\n  if (!Number.isFinite(userAchievementId)) {\n    throw new AppError('userAchievementId\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.', 400, 'INVALID_PATH_PARAM');\n  }\n  const result = await claimAchievementReward(c.env, userId, userAchievementId);\n  return successResponse(c, result);\n});\n\nachievementsRoutes.post('/initialize', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  await initializeUserAchievements(c.env, userId);\n  return successResponse(c, { initialized: true });\n});\n\nachievementsRoutes.post('/check-completion', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const completed = await checkAndCompleteAchievements(c.env, userId);\n  return successResponse(c, completed);\n});\n\nexport default achievementsRoutes;\n", "import type { Env } from '../index';\nimport type {\n  AchievementResponseType,\n  AchievementStatsResponseType,\n  UserAchievementResponseType\n} from '../types';\nimport { query, queryFirst, execute, transaction } from '../utils/db';\nimport { AppError } from '../utils/errors';\n\ninterface AchievementRow {\n  achievement_id: number;\n  achievement_key: string;\n  title: string;\n  description: string | null;\n  category: string;\n  type: string;\n  tier: string;\n  target_value: number | null;\n  target_unit: string | null;\n  xp_reward: number | null;\n  badge_icon_url: string | null;\n  badge_color: string | null;\n  is_active: number;\n  is_hidden: number;\n  sort_order: number | null;\n  prerequisite_achievement_id: number | null;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface UserAchievementRow {\n  user_achievement_id: number;\n  user_id: string;\n  achievement_id: number;\n  current_progress: number;\n  is_completed: number;\n  completed_at: string | null;\n  is_reward_claimed: number;\n  reward_claimed_at: string | null;\n  achievement_key: string;\n  title: string;\n  description: string | null;\n  category: string;\n  type: string;\n  tier: string;\n  target_value: number | null;\n  target_unit: string | null;\n  xp_reward: number | null;\n  badge_icon_url: string | null;\n  badge_color: string | null;\n  is_active: number;\n  is_hidden: number;\n  sort_order: number | null;\n  prerequisite_achievement_id: number | null;\n}\n\ninterface StatsRow {\n  key: string;\n  count: number;\n}\n\nconst CATEGORY_ALIAS: Record<string, string> = {\n  LEARNING: 'STUDY',\n  SKILL: 'STUDY',\n  SOCIAL: 'SOCIAL',\n  ENGAGEMENT: 'ENGAGEMENT',\n  TIME: 'STREAK',\n  MILESTONE: 'MILESTONE',\n  SPECIAL: 'SPECIAL'\n};\n\nconst DEFAULT_ACHIEVEMENTS = [\n  {\n    achievementKey: 'first_session',\n    title: '\uCCAB \uC138\uC158 \uC644\uB8CC',\n    description: '\uCCAB \uBC88\uC9F8 \uD654\uC0C1 \uC138\uC158\uC744 \uC644\uB8CC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'LEARNING',\n    type: 'COUNT',\n    tier: 'BRONZE',\n    targetValue: 1,\n    targetUnit: '\uC138\uC158',\n    xpReward: 100,\n    badgeColor: '#CD7F32',\n    sortOrder: 1\n  },\n  {\n    achievementKey: 'session_10',\n    title: '\uC138\uC158 \uB9C8\uC2A4\uD130',\n    description: '10\uBC88\uC758 \uD654\uC0C1 \uC138\uC158\uC744 \uC644\uB8CC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'LEARNING',\n    type: 'COUNT',\n    tier: 'SILVER',\n    targetValue: 10,\n    targetUnit: '\uC138\uC158',\n    xpReward: 500,\n    badgeColor: '#C0C0C0',\n    sortOrder: 2\n  },\n  {\n    achievementKey: 'session_50',\n    title: '\uC138\uC158 \uC804\uBB38\uAC00',\n    description: '50\uBC88\uC758 \uD654\uC0C1 \uC138\uC158\uC744 \uC644\uB8CC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'LEARNING',\n    type: 'COUNT',\n    tier: 'GOLD',\n    targetValue: 50,\n    targetUnit: '\uC138\uC158',\n    xpReward: 2000,\n    badgeColor: '#FFD700',\n    sortOrder: 3\n  },\n  {\n    achievementKey: 'streak_7',\n    title: '\uC77C\uC8FC\uC77C \uC5F0\uC18D',\n    description: '7\uC77C \uC5F0\uC18D\uC73C\uB85C \uC138\uC158\uC5D0 \uCC38\uC5EC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'ENGAGEMENT',\n    type: 'STREAK',\n    tier: 'SILVER',\n    targetValue: 7,\n    targetUnit: '\uC77C',\n    xpReward: 750,\n    badgeColor: '#C0C0C0',\n    sortOrder: 4\n  },\n  {\n    achievementKey: 'streak_30',\n    title: '\uD55C \uB2EC \uC5F0\uC18D',\n    description: '30\uC77C \uC5F0\uC18D\uC73C\uB85C \uC138\uC158\uC5D0 \uCC38\uC5EC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'ENGAGEMENT',\n    type: 'STREAK',\n    tier: 'GOLD',\n    targetValue: 30,\n    targetUnit: '\uC77C',\n    xpReward: 3000,\n    badgeColor: '#FFD700',\n    sortOrder: 5\n  },\n  {\n    achievementKey: 'first_friend',\n    title: '\uCCAB \uCE5C\uAD6C',\n    description: '\uCCAB \uBC88\uC9F8 \uD559\uC2B5 \uCE5C\uAD6C\uB97C \uB9CC\uB4E4\uC5C8\uC2B5\uB2C8\uB2E4!',\n    category: 'SOCIAL',\n    type: 'COUNT',\n    tier: 'BRONZE',\n    targetValue: 1,\n    targetUnit: '\uCE5C\uAD6C',\n    xpReward: 200,\n    badgeColor: '#CD7F32',\n    sortOrder: 6\n  },\n  {\n    achievementKey: 'friends_5',\n    title: '\uC778\uAE30\uC7C1\uC774',\n    description: '5\uBA85\uC758 \uD559\uC2B5 \uCE5C\uAD6C\uB97C \uB9CC\uB4E4\uC5C8\uC2B5\uB2C8\uB2E4!',\n    category: 'SOCIAL',\n    type: 'COUNT',\n    tier: 'SILVER',\n    targetValue: 5,\n    targetUnit: '\uCE5C\uAD6C',\n    xpReward: 1000,\n    badgeColor: '#C0C0C0',\n    sortOrder: 7\n  },\n  {\n    achievementKey: 'study_hours_10',\n    title: '10\uC2DC\uAC04 \uB2EC\uC131',\n    description: '\uCD1D 10\uC2DC\uAC04\uC758 \uD559\uC2B5\uC744 \uC644\uB8CC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'TIME',\n    type: 'ACCUMULATE',\n    tier: 'BRONZE',\n    targetValue: 600,\n    targetUnit: '\uBD84',\n    xpReward: 500,\n    badgeColor: '#CD7F32',\n    sortOrder: 8\n  },\n  {\n    achievementKey: 'study_hours_50',\n    title: '50\uC2DC\uAC04 \uB2EC\uC131',\n    description: '\uCD1D 50\uC2DC\uAC04\uC758 \uD559\uC2B5\uC744 \uC644\uB8CC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'TIME',\n    type: 'ACCUMULATE',\n    tier: 'SILVER',\n    targetValue: 3000,\n    targetUnit: '\uBD84',\n    xpReward: 2500,\n    badgeColor: '#C0C0C0',\n    sortOrder: 9\n  },\n  {\n    achievementKey: 'study_hours_100',\n    title: '100\uC2DC\uAC04 \uB2EC\uC131',\n    description: '\uCD1D 100\uC2DC\uAC04\uC758 \uD559\uC2B5\uC744 \uC644\uB8CC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'TIME',\n    type: 'ACCUMULATE',\n    tier: 'GOLD',\n    targetValue: 6000,\n    targetUnit: '\uBD84',\n    xpReward: 5000,\n    badgeColor: '#FFD700',\n    sortOrder: 10\n  },\n  {\n    achievementKey: 'level_up_first',\n    title: '\uCCAB \uB808\uBCA8\uC5C5',\n    description: '\uCC98\uC74C\uC73C\uB85C \uB808\uBCA8\uC774 \uC62C\uB790\uC2B5\uB2C8\uB2E4!',\n    category: 'SKILL',\n    type: 'THRESHOLD',\n    tier: 'BRONZE',\n    targetValue: 2,\n    targetUnit: '\uB808\uBCA8',\n    xpReward: 300,\n    badgeColor: '#CD7F32',\n    sortOrder: 11\n  },\n  {\n    achievementKey: 'level_5',\n    title: '\uC911\uAE09\uC790',\n    description: '\uB808\uBCA8 5\uC5D0 \uB3C4\uB2EC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'SKILL',\n    type: 'THRESHOLD',\n    tier: 'SILVER',\n    targetValue: 5,\n    targetUnit: '\uB808\uBCA8',\n    xpReward: 1500,\n    badgeColor: '#C0C0C0',\n    sortOrder: 12\n  },\n  {\n    achievementKey: 'level_10',\n    title: '\uACE0\uAE09\uC790',\n    description: '\uB808\uBCA8 10\uC5D0 \uB3C4\uB2EC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'SKILL',\n    type: 'THRESHOLD',\n    tier: 'GOLD',\n    targetValue: 10,\n    targetUnit: '\uB808\uBCA8',\n    xpReward: 5000,\n    badgeColor: '#FFD700',\n    sortOrder: 13\n  },\n  {\n    achievementKey: 'early_adopter',\n    title: '\uC5BC\uB9AC \uC5B4\uB2F5\uD130',\n    description: '\uC11C\uBE44\uC2A4 \uC624\uD508 \uCCAB \uB2EC\uC5D0 \uAC00\uC785\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'SPECIAL',\n    type: 'MILESTONE',\n    tier: 'LEGENDARY',\n    xpReward: 1000,\n    badgeColor: '#9932CC',\n    isHidden: true,\n    sortOrder: 14\n  },\n  {\n    achievementKey: 'perfect_week',\n    title: '\uC644\uBCBD\uD55C \uD55C \uC8FC',\n    description: '\uC77C\uC8FC\uC77C \uB3D9\uC548 \uB9E4\uC77C \uC138\uC158\uC5D0 \uCC38\uC5EC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'ENGAGEMENT',\n    type: 'COMBINATION',\n    tier: 'PLATINUM',\n    targetValue: 7,\n    targetUnit: '\uC77C',\n    xpReward: 2000,\n    badgeColor: '#E5E4E2',\n    sortOrder: 15\n  }\n];\n\nfunction toBoolean(value: number | boolean | null | undefined): boolean {\n  return value === 1 || value === true;\n}\n\nfunction aliasCategory(original: string | null): string {\n  if (!original) return 'GENERAL';\n  return CATEGORY_ALIAS[original] ?? original;\n}\n\nfunction mapAchievementRow(row: AchievementRow): AchievementResponseType {\n  return {\n    id: row.achievement_id,\n    achievementKey: row.achievement_key,\n    title: row.title,\n    description: row.description ?? undefined,\n    category: aliasCategory(row.category),\n    originalCategory: row.category,\n    type: row.type,\n    tier: row.tier,\n    targetValue: row.target_value ?? undefined,\n    targetUnit: row.target_unit ?? undefined,\n    xpReward: row.xp_reward ?? undefined,\n    badgeIconUrl: row.badge_icon_url ?? undefined,\n    badgeColor: row.badge_color ?? undefined,\n    isActive: toBoolean(row.is_active),\n    isHidden: toBoolean(row.is_hidden),\n    sortOrder: row.sort_order ?? undefined,\n    prerequisiteAchievementId: row.prerequisite_achievement_id ?? undefined\n  };\n}\n\nfunction mapUserAchievementRow(row: UserAchievementRow): UserAchievementResponseType {\n  const achievement = mapAchievementRow({\n    achievement_id: row.achievement_id,\n    achievement_key: row.achievement_key,\n    title: row.title,\n    description: row.description,\n    category: row.category,\n    type: row.type,\n    tier: row.tier,\n    target_value: row.target_value,\n    target_unit: row.target_unit,\n    xp_reward: row.xp_reward,\n    badge_icon_url: row.badge_icon_url,\n    badge_color: row.badge_color,\n    is_active: row.is_active,\n    is_hidden: row.is_hidden,\n    sort_order: row.sort_order,\n    prerequisite_achievement_id: row.prerequisite_achievement_id,\n    created_at: '',\n    updated_at: ''\n  });\n\n  const targetValue = row.target_value ?? 0;\n  const current = row.current_progress ?? 0;\n  const progressPercentage = targetValue > 0 ? Math.min(100, (current / targetValue) * 100) : (toBoolean(row.is_completed) ? 100 : 0);\n\n  return {\n    id: row.user_achievement_id,\n    achievement,\n    currentProgress: current,\n    isCompleted: toBoolean(row.is_completed),\n    completedAt: row.completed_at ?? undefined,\n    isRewardClaimed: toBoolean(row.is_reward_claimed),\n    rewardClaimedAt: row.reward_claimed_at ?? undefined,\n    progressPercentage\n  };\n}\n\nasync function seedDefaultAchievements(env: Env): Promise<void> {\n  const countRow = await queryFirst<{ count: number }>(\n    env.DB,\n    'SELECT COUNT(*) as count FROM achievements'\n  );\n  if ((countRow?.count ?? 0) > 0) {\n    return;\n  }\n\n  const now = new Date().toISOString();\n  await transaction(\n    env.DB,\n    DEFAULT_ACHIEVEMENTS.map((item) => ({\n      sql: `INSERT INTO achievements (\n              achievement_key,\n              title,\n              description,\n              category,\n              type,\n              tier,\n              target_value,\n              target_unit,\n              xp_reward,\n              badge_icon_url,\n              badge_color,\n              is_active,\n              is_hidden,\n              sort_order,\n              created_at,\n              updated_at\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, 1, ?, ?, ?, ?)`,\n      params: [\n        item.achievementKey,\n        item.title,\n        item.description ?? null,\n        item.category,\n        item.type,\n        item.tier,\n        item.targetValue ?? null,\n        item.targetUnit ?? null,\n        item.xpReward ?? null,\n        item.badgeColor ?? null,\n        item.isHidden ? 1 : 0,\n        item.sortOrder ?? null,\n        now,\n        now\n      ]\n    }))\n  );\n}\n\nasync function fetchAchievementByKey(env: Env, achievementKey: string): Promise<AchievementRow> {\n  const row = await queryFirst<AchievementRow>(\n    env.DB,\n    'SELECT * FROM achievements WHERE achievement_key = ? AND is_active = 1 LIMIT 1',\n    [achievementKey]\n  );\n  if (!row) {\n    throw new AppError('\uC874\uC7AC\uD558\uC9C0 \uC54A\uB294 \uC5C5\uC801\uC785\uB2C8\uB2E4.', 404, 'ACHIEVEMENT_NOT_FOUND');\n  }\n  return row;\n}\n\nasync function ensureUserAchievement(\n  env: Env,\n  userId: string,\n  achievementId: number\n): Promise<UserAchievementRow> {\n  const existing = await queryFirst<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.achievement_id = ?\n      LIMIT 1`,\n    [userId, achievementId]\n  );\n  if (existing) {\n    return existing;\n  }\n\n  const now = new Date().toISOString();\n  await execute(\n    env.DB,\n    `INSERT INTO user_achievements (\n        user_id,\n        achievement_id,\n        current_progress,\n        is_completed,\n        completed_at,\n        is_reward_claimed,\n        reward_claimed_at,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, 0, 0, NULL, 0, NULL, ?, ?)`,\n    [userId, achievementId, now, now]\n  );\n\n  const inserted = await queryFirst<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.achievement_id = ?\n      LIMIT 1`,\n    [userId, achievementId]\n  );\n\n  if (!inserted) {\n    throw new AppError('\uC5C5\uC801 \uC815\uBCF4\uB97C \uCD08\uAE30\uD654\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 500, 'ACHIEVEMENT_INIT_FAILED');\n  }\n  return inserted;\n}\n\nasync function updateUserAchievementProgress(\n  env: Env,\n  userId: string,\n  achievement: AchievementRow,\n  progress: number,\n  incrementMode: boolean\n): Promise<UserAchievementRow> {\n  const targetValue = achievement.target_value ?? undefined;\n  const now = new Date().toISOString();\n\n  const row = await ensureUserAchievement(env, userId, achievement.achievement_id);\n  const current = incrementMode ? Math.max(0, (row.current_progress ?? 0) + progress) : Math.max(0, progress);\n\n  let isCompleted = row.is_completed;\n  let completedAt = row.completed_at;\n  if (typeof targetValue === 'number' && current >= targetValue && !toBoolean(row.is_completed)) {\n    isCompleted = 1;\n    completedAt = now;\n  }\n\n  await execute(\n    env.DB,\n    `UPDATE user_achievements\n        SET current_progress = ?,\n            is_completed = ?,\n            completed_at = ?,\n            updated_at = ?\n      WHERE user_id = ? AND achievement_id = ?`,\n    [current, isCompleted, completedAt, now, userId, achievement.achievement_id]\n  );\n\n  const updated = await queryFirst<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.achievement_id = ?\n      LIMIT 1`,\n    [userId, achievement.achievement_id]\n  );\n\n  if (!updated) {\n    throw new AppError('\uC5C5\uC801 \uC9C4\uD589\uB3C4\uB97C \uAC31\uC2E0\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 500, 'ACHIEVEMENT_UPDATE_FAILED');\n  }\n\n  return updated;\n}\n\nexport async function getAllAchievements(env: Env): Promise<AchievementResponseType[]> {\n  await seedDefaultAchievements(env);\n  const rows = await query<AchievementRow>(\n    env.DB,\n    `SELECT * FROM achievements\n      WHERE is_active = 1\n      ORDER BY COALESCE(sort_order, 9999), title`\n  );\n  return rows.map(mapAchievementRow);\n}\n\nexport async function getAchievementsByCategory(\n  env: Env,\n  category: string\n): Promise<AchievementResponseType[]> {\n  await seedDefaultAchievements(env);\n  const normalized = category.toUpperCase();\n  const rows = await query<AchievementRow>(\n    env.DB,\n    `SELECT * FROM achievements\n      WHERE is_active = 1 AND UPPER(category) = ?\n      ORDER BY COALESCE(sort_order, 9999), title`,\n    [normalized]\n  );\n  return rows.map(mapAchievementRow);\n}\n\nexport async function getUserAchievements(\n  env: Env,\n  userId: string\n): Promise<UserAchievementResponseType[]> {\n  await seedDefaultAchievements(env);\n  const rows = await query<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ?\n      ORDER BY ua.is_completed DESC, ua.completed_at DESC, COALESCE(a.sort_order, 9999)`,\n    [userId]\n  );\n  return rows.map(mapUserAchievementRow);\n}\n\nexport async function getCompletedAchievements(\n  env: Env,\n  userId: string\n): Promise<UserAchievementResponseType[]> {\n  const rows = await query<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.is_completed = 1\n      ORDER BY ua.completed_at DESC`,\n    [userId]\n  );\n  return rows.map(mapUserAchievementRow);\n}\n\nexport async function getInProgressAchievements(\n  env: Env,\n  userId: string\n): Promise<UserAchievementResponseType[]> {\n  const rows = await query<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.is_completed = 0\n      ORDER BY ua.current_progress DESC, COALESCE(a.sort_order, 9999)`,\n    [userId]\n  );\n  return rows.map(mapUserAchievementRow);\n}\n\nexport async function getAchievementStats(\n  env: Env,\n  userId: string\n): Promise<AchievementStatsResponseType> {\n  await seedDefaultAchievements(env);\n\n  const [totalRow, completedRow, inProgressRow, totalXpRow, unclaimedRow] = await Promise.all([\n    queryFirst<{ count: number }>(env.DB, 'SELECT COUNT(*) as count FROM achievements WHERE is_active = 1'),\n    queryFirst<{ count: number }>(\n      env.DB,\n      'SELECT COUNT(*) as count FROM user_achievements WHERE user_id = ? AND is_completed = 1',\n      [userId]\n    ),\n    queryFirst<{ count: number }>(\n      env.DB,\n      'SELECT COUNT(*) as count FROM user_achievements WHERE user_id = ? AND is_completed = 0 AND current_progress > 0',\n      [userId]\n    ),\n    queryFirst<{ total: number }>(\n      env.DB,\n      `SELECT COALESCE(SUM(a.xp_reward), 0) as total\n         FROM user_achievements ua\n         JOIN achievements a ON a.achievement_id = ua.achievement_id\n        WHERE ua.user_id = ? AND ua.is_reward_claimed = 1`,\n      [userId]\n    ),\n    queryFirst<{ count: number }>(\n      env.DB,\n      'SELECT COUNT(*) as count FROM user_achievements WHERE user_id = ? AND is_completed = 1 AND is_reward_claimed = 0',\n      [userId]\n    )\n  ]);\n\n  const achievementsByCategoryRows = await query<StatsRow>(\n    env.DB,\n    `SELECT a.category as key, COUNT(*) as count\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.is_completed = 1\n      GROUP BY a.category`,\n    [userId]\n  );\n\n  const achievementsByTierRows = await query<StatsRow>(\n    env.DB,\n    `SELECT a.tier as key, COUNT(*) as count\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.is_completed = 1\n      GROUP BY a.tier`,\n    [userId]\n  );\n\n  const recentRows = await query<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.is_completed = 1\n      ORDER BY ua.completed_at DESC\n      LIMIT 5`,\n    [userId]\n  );\n\n  const nearCompletionRows = await query<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ?\n        AND ua.is_completed = 0\n        AND a.target_value IS NOT NULL\n        AND a.target_value > 0\n        AND (ua.current_progress * 100.0 / a.target_value) >= 80\n      ORDER BY (ua.current_progress * 100.0 / a.target_value) DESC\n      LIMIT 5`,\n    [userId]\n  );\n\n  const totalAchievements = totalRow?.count ?? 0;\n  const completedAchievements = completedRow?.count ?? 0;\n  const completionRate = totalAchievements > 0 ? (completedAchievements / totalAchievements) * 100 : 0;\n\n  const achievementsByCategory: Record<string, number> = {};\n  for (const row of achievementsByCategoryRows) {\n    achievementsByCategory[aliasCategory(row.key)] = row.count;\n  }\n\n  const achievementsByTier: Record<string, number> = {};\n  for (const row of achievementsByTierRows) {\n    achievementsByTier[row.key ?? 'UNKNOWN'] = row.count;\n  }\n\n  return {\n    totalAchievements,\n    completedAchievements,\n    inProgressAchievements: inProgressRow?.count ?? 0,\n    totalXpEarned: totalXpRow?.total ?? 0,\n    unclaimedRewards: unclaimedRow?.count ?? 0,\n    completionRate,\n    achievementsByCategory,\n    achievementsByTier,\n    recentCompletions: recentRows.map(mapUserAchievementRow),\n    nearCompletion: nearCompletionRows.map(mapUserAchievementRow)\n  };\n}\n\nexport async function updateAchievementProgress(\n  env: Env,\n  userId: string,\n  achievementKey: string,\n  progress: number\n): Promise<UserAchievementResponseType> {\n  if (!achievementKey) {\n    throw new AppError('achievementKey\uB294 \uD544\uC218\uC785\uB2C8\uB2E4.', 400, 'INVALID_ACHIEVEMENT_KEY');\n  }\n  if (!Number.isFinite(progress) || progress < 0) {\n    throw new AppError('progress\uB294 0 \uC774\uC0C1\uC758 \uC22B\uC790\uC5EC\uC57C \uD569\uB2C8\uB2E4.', 400, 'INVALID_PROGRESS');\n  }\n  const achievement = await fetchAchievementByKey(env, achievementKey);\n  const updated = await updateUserAchievementProgress(env, userId, achievement, progress, false);\n  return mapUserAchievementRow(updated);\n}\n\nexport async function incrementAchievementProgress(\n  env: Env,\n  userId: string,\n  achievementKey: string,\n  increment: number\n): Promise<UserAchievementResponseType> {\n  if (!achievementKey) {\n    throw new AppError('achievementKey\uB294 \uD544\uC218\uC785\uB2C8\uB2E4.', 400, 'INVALID_ACHIEVEMENT_KEY');\n  }\n  if (!Number.isFinite(increment) || increment <= 0) {\n    throw new AppError('increment\uB294 1 \uC774\uC0C1\uC758 \uC22B\uC790\uC5EC\uC57C \uD569\uB2C8\uB2E4.', 400, 'INVALID_INCREMENT');\n  }\n  const achievement = await fetchAchievementByKey(env, achievementKey);\n  const updated = await updateUserAchievementProgress(env, userId, achievement, increment, true);\n  return mapUserAchievementRow(updated);\n}\n\nexport async function claimAchievementReward(\n  env: Env,\n  userId: string,\n  userAchievementId: number\n): Promise<UserAchievementResponseType> {\n  const row = await queryFirst<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_achievement_id = ?\n      LIMIT 1`,\n    [userAchievementId]\n  );\n\n  if (!row) {\n    throw new AppError('\uC874\uC7AC\uD558\uC9C0 \uC54A\uB294 \uC0AC\uC6A9\uC790 \uC5C5\uC801\uC785\uB2C8\uB2E4.', 404, 'USER_ACHIEVEMENT_NOT_FOUND');\n  }\n  if (row.user_id !== userId) {\n    throw new AppError('\uBCF8\uC778\uC758 \uC5C5\uC801\uB9CC \uBCF4\uC0C1\uC744 \uBC1B\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4.', 403, 'FORBIDDEN');\n  }\n  if (!toBoolean(row.is_completed)) {\n    throw new AppError('\uC644\uB8CC\uB418\uC9C0 \uC54A\uC740 \uC5C5\uC801\uC785\uB2C8\uB2E4.', 400, 'ACHIEVEMENT_NOT_COMPLETED');\n  }\n  if (toBoolean(row.is_reward_claimed)) {\n    throw new AppError('\uC774\uBBF8 \uBCF4\uC0C1\uC744 \uC218\uB839\uD588\uC2B5\uB2C8\uB2E4.', 400, 'ACHIEVEMENT_REWARD_ALREADY_CLAIMED');\n  }\n\n  const now = new Date().toISOString();\n  await execute(\n    env.DB,\n    `UPDATE user_achievements\n        SET is_reward_claimed = 1,\n            reward_claimed_at = ?,\n            updated_at = ?\n      WHERE user_achievement_id = ?`,\n    [now, now, userAchievementId]\n  );\n\n  const updated = await queryFirst<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_achievement_id = ?\n      LIMIT 1`,\n    [userAchievementId]\n  );\n\n  if (!updated) {\n    throw new AppError('\uC5C5\uC801 \uBCF4\uC0C1 \uC815\uBCF4\uB97C \uAC31\uC2E0\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 500, 'ACHIEVEMENT_REWARD_FAILED');\n  }\n\n  return mapUserAchievementRow(updated);\n}\n\nexport async function initializeUserAchievements(\n  env: Env,\n  userId: string\n): Promise<void> {\n  await seedDefaultAchievements(env);\n  const achievementIds = await query<{ achievement_id: number }>(\n    env.DB,\n    'SELECT achievement_id FROM achievements WHERE is_active = 1'\n  );\n\n  const statements = achievementIds.map(({ achievement_id }) => ({\n    sql: `INSERT OR IGNORE INTO user_achievements (\n            user_id,\n            achievement_id,\n            current_progress,\n            is_completed,\n            completed_at,\n            is_reward_claimed,\n            reward_claimed_at,\n            created_at,\n            updated_at\n          ) VALUES (?, ?, 0, 0, NULL, 0, NULL, ?, ?)`\n    ,\n    params: [userId, achievement_id, new Date().toISOString(), new Date().toISOString()]\n  }));\n\n  if (statements.length) {\n    await transaction(env.DB, statements);\n  }\n}\n\nexport async function checkAndCompleteAchievements(\n  env: Env,\n  userId: string\n): Promise<UserAchievementResponseType[]> {\n  await seedDefaultAchievements(env);\n  const candidates = await query<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.is_completed = 0\n      ORDER BY ua.current_progress DESC`,\n    [userId]\n  );\n\n  const completed: UserAchievementResponseType[] = [];\n  const now = new Date().toISOString();\n\n  for (const candidate of candidates) {\n    const targetValue = candidate.target_value ?? null;\n    if (typeof targetValue !== 'number' || candidate.current_progress < targetValue) {\n      continue;\n    }\n\n    if (candidate.prerequisite_achievement_id) {\n      const prereq = await queryFirst<{ is_completed: number }>(\n        env.DB,\n        `SELECT is_completed FROM user_achievements\n          WHERE user_id = ? AND achievement_id = ?\n          LIMIT 1`,\n        [userId, candidate.prerequisite_achievement_id]\n      );\n      if (!prereq || !toBoolean(prereq.is_completed)) {\n        continue;\n      }\n    }\n\n    await execute(\n      env.DB,\n      `UPDATE user_achievements\n          SET is_completed = 1,\n              completed_at = COALESCE(completed_at, ?),\n              updated_at = ?\n        WHERE user_achievement_id = ?`,\n      [now, now, candidate.user_achievement_id]\n    );\n\n    const updated = await queryFirst<UserAchievementRow>(\n      env.DB,\n      `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n              a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n              a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n         FROM user_achievements ua\n         JOIN achievements a ON a.achievement_id = ua.achievement_id\n        WHERE ua.user_achievement_id = ?\n        LIMIT 1`,\n      [candidate.user_achievement_id]\n    );\n\n    if (updated) {\n      completed.push(mapUserAchievementRow(updated));\n    }\n  }\n\n  return completed;\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport {\n  listUserChatRooms,\n  listPublicChatRooms,\n  createChatRoom,\n  joinChatRoom,\n  leaveChatRoom,\n  listRoomMessages,\n  searchRoomMessages,\n  uploadChatImages,\n  uploadChatAudio,\n  listMyChatFiles,\n  deleteChatFile,\n  markRoomMessagesAsRead,\n  getUnreadCountForRoom,\n  getTotalUnreadCount\n} from '../services/chat';\n\nconst chatRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\nfunction requireUserId(userId: string | undefined): string {\n  if (!userId) {\n    throw new AppError('\uC778\uC99D \uC815\uBCF4\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 401, 'UNAUTHORIZED');\n  }\n  return userId;\n}\n\nfunction parseRoomId(raw: string | undefined): number {\n  const roomId = Number(raw);\n  if (!Number.isFinite(roomId)) {\n    throw new AppError('\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 roomId \uC785\uB2C8\uB2E4.', 400, 'INVALID_ROOM_ID');\n  }\n  return roomId;\n}\n\nchatRoutes.use('*', requireAuth);\n\nchatRoutes.get('/rooms', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const rooms = await listUserChatRooms(c.env, userId);\n  return successResponse(c, rooms);\n});\n\nchatRoutes.get('/rooms/public', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const rooms = await listPublicChatRooms(c.env, userId);\n  return successResponse(c, rooms);\n});\n\nchatRoutes.post('/rooms', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const body = await c.req.json().catch(() => ({}));\n  const roomName = typeof body?.roomName === 'string' ? body.roomName : '';\n  const participantIds = Array.isArray(body?.participantIds)\n    ? body.participantIds.filter((id: unknown): id is string => typeof id === 'string')\n    : [];\n  const isPublic = Boolean(body?.isPublic);\n  const roomType = typeof body?.roomType === 'string' ? body.roomType : undefined;\n  const maxParticipants =\n    typeof body?.maxParticipants === 'number' ? Number(body.maxParticipants) : undefined;\n\n  const room = await createChatRoom(c.env, userId, roomName, participantIds, {\n    isPublic,\n    roomType,\n    maxParticipants\n  });\n  try {\n    const hubId = c.env.CHAT_HUB.idFromName('global');\n    const hubStub = c.env.CHAT_HUB.get(hubId);\n    const publish = (destination: string, payload: unknown, targetUserId?: string) =>\n      hubStub.fetch('https://chat-hub/publish', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ destination, payload, userId: targetUserId })\n      });\n\n    if (room.isPublic) {\n      await publish('/sub/chat/public-rooms', room);\n    }\n\n    if (Array.isArray(room.participants)) {\n      await Promise.all(\n        room.participants\n          .filter((participant) => participant.userId)\n          .map((participant) => publish('/user/queue/rooms', room, participant.userId))\n      );\n    }\n  } catch (error) {\n    console.error('[chatRoutes] Failed to publish room creation event', error);\n  }\n  return successResponse(c, room);\n});\n\nchatRoutes.post('/rooms/:roomId/join', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  const room = await joinChatRoom(c.env, roomId, userId);\n  return successResponse(c, room);\n});\n\nchatRoutes.post('/rooms/:roomId/leave', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  await leaveChatRoom(c.env, roomId, userId);\n  return successResponse(c, { success: true });\n});\n\nchatRoutes.get('/rooms/:roomId/messages', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  const page = Number(c.req.query('page') ?? '0');\n  const size = Number(c.req.query('size') ?? '50');\n  if (!Number.isFinite(page) || page < 0) {\n    throw new AppError('page \uAC12\uC774 \uC62C\uBC14\uB974\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.', 400, 'INVALID_PAGE_PARAM');\n  }\n  const perPage = Number.isFinite(size) && size > 0 ? Math.min(size, 200) : 50;\n  const messages = await listRoomMessages(c.env, roomId, page, perPage);\n  return successResponse(c, messages);\n});\n\nchatRoutes.get('/rooms/:roomId/messages/search', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  const keyword = c.req.query('keyword') ?? '';\n  const page = Number(c.req.query('page') ?? '0');\n  const size = Number(c.req.query('size') ?? '20');\n  const perPage = Number.isFinite(size) && size > 0 ? Math.min(size, 100) : 20;\n  const messages = await searchRoomMessages(c.env, roomId, keyword, page, perPage);\n  return successResponse(c, messages);\n});\n\nchatRoutes.post('/rooms/:roomId/images', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  const formData = await c.req.formData();\n  const entries = formData.getAll('files');\n  const files = entries\n    .filter((value) => typeof value === 'object' && value !== null && 'arrayBuffer' in (value as any))\n    .map((value) => value as File);\n  if (!files.length) {\n    return successResponse(c, []);\n  }\n  const urls = await uploadChatImages(c.env, roomId, userId, files);\n  return successResponse(c, urls);\n});\n\nchatRoutes.post('/upload/image', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const formData = await c.req.formData();\n  const roomIdValue = formData.get('roomId');\n  const roomId = typeof roomIdValue === 'string' ? Number(roomIdValue) : Number(roomIdValue);\n  if (!Number.isFinite(roomId)) {\n    throw new AppError('roomId\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 400, 'INVALID_ROOM_ID');\n  }\n  const fileEntry = formData.get('image') ?? formData.get('file');\n  if (!fileEntry || typeof fileEntry !== 'object' || !('arrayBuffer' in (fileEntry as any))) {\n    throw new AppError('\uC774\uBBF8\uC9C0 \uD30C\uC77C\uC774 \uD544\uC694\uD569\uB2C8\uB2E4.', 400, 'IMAGE_FILE_REQUIRED');\n  }\n  const file = fileEntry as File;\n  const urls = await uploadChatImages(c.env, roomId, userId, [file]);\n  const primary = urls.length > 0 ? urls[0] : null;\n  return successResponse(c, { url: primary, urls });\n});\n\nchatRoutes.post('/rooms/:roomId/audio', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  const formData = await c.req.formData();\n  const entry = formData.get('file');\n  if (!entry || typeof entry !== 'object' || !('arrayBuffer' in (entry as any))) {\n    throw new AppError('\uC624\uB514\uC624 \uD30C\uC77C\uC774 \uD544\uC694\uD569\uB2C8\uB2E4.', 400, 'AUDIO_FILE_REQUIRED');\n  }\n  const file = entry as File;\n  const url = await uploadChatAudio(c.env, roomId, userId, file);\n  return successResponse(c, url);\n});\n\nchatRoutes.get('/files/my-files', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const files = await listMyChatFiles(c.env, userId);\n  return successResponse(c, files);\n});\n\nchatRoutes.delete('/files/:fileId', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const fileId = Number(c.req.param('fileId'));\n  if (!Number.isFinite(fileId)) {\n    throw new AppError('\uD30C\uC77C ID\uAC00 \uC62C\uBC14\uB974\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.', 400, 'INVALID_FILE_ID');\n  }\n  await deleteChatFile(c.env, userId, fileId);\n  return successResponse(c, { success: true });\n});\n\nchatRoutes.post('/read-status/rooms/:roomId/read-all', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  await markRoomMessagesAsRead(c.env, roomId, userId);\n  return successResponse(c, { success: true });\n});\n\nchatRoutes.get('/read-status/rooms/:roomId/unread-count', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  const count = await getUnreadCountForRoom(c.env, roomId, userId);\n  return successResponse(c, count);\n});\n\nchatRoutes.get('/read-status/total-unread-count', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const count = await getTotalUnreadCount(c.env, userId);\n  return successResponse(c, count);\n});\n\nexport default chatRoutes;\n", "import type { Env } from '../index';\nimport type {\n  ChatRoomSummary,\n  ChatParticipant,\n  ChatMessageResponseType,\n  ChatFileResponseType,\n  ChatMessageType\n} from '../types';\nimport { query, queryFirst, execute, transaction } from '../utils/db';\nimport { AppError } from '../utils/errors';\nimport { saveToR2, generateUniqueFileName } from './storage';\n\nfunction nowIso(): string {\n  return new Date().toISOString();\n}\n\ninterface ChatRoomRow {\n  room_id: number;\n  room_name: string;\n  room_type: string;\n  is_public: number;\n  max_participants: number | null;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface ParticipantRow {\n  room_id: number;\n  user_id: string;\n  joined_at: string;\n  name: string | null;\n  profile_image: string | null;\n}\n\ninterface MessageRow {\n  message_id: number;\n  room_id: number;\n  user_id: string;\n  message: string | null;\n  audio_url: string | null;\n  created_at: string;\n  name: string | null;\n  profile_image: string | null;\n}\n\nexport interface ChatMessageCreatePayload {\n  roomId: number;\n  message?: string;\n  imageUrls?: string[];\n  audioData?: string;\n  audioUrl?: string;\n  messageType?: ChatMessageType;\n}\n\ninterface ImageRow {\n  message_id: number;\n  image_url: string;\n}\n\ninterface FileRow {\n  file_id: number;\n  message_id: number;\n  original_filename: string;\n  stored_filename: string;\n  file_path: string;\n  file_url: string | null;\n  file_size: number;\n  content_type: string | null;\n  file_type: string;\n  thumbnail_url: string | null;\n  duration: number | null;\n  is_deleted: number;\n  created_at: string;\n}\n\nfunction toBoolean(value: number | boolean | null | undefined): boolean {\n  return value === 1 || value === true;\n}\n\nfunction mapParticipant(row: ParticipantRow): ChatParticipant {\n  return {\n    userId: row.user_id,\n    name: row.name ?? undefined,\n    profileImage: row.profile_image ?? undefined\n  };\n}\n\nasync function fetchParticipants(env: Env, roomId: number): Promise<ChatParticipant[]> {\n  const rows = await query<ParticipantRow>(\n    env.DB,\n    `SELECT p.room_id, p.user_id, p.joined_at, u.name, u.profile_image\n       FROM chat_room_participant p\n       LEFT JOIN users u ON u.user_id = p.user_id\n      WHERE p.room_id = ?\n      ORDER BY p.joined_at ASC`,\n    [roomId]\n  );\n  return rows.map(mapParticipant);\n}\n\nfunction computeMessageType(row: MessageRow, images: ImageRow[], files: ChatFileResponseType[]): ChatMessageType {\n  const hasText = Boolean(row.message && row.message.trim().length > 0);\n  const hasImages = images.length > 0;\n  const hasAudio = Boolean(row.audio_url);\n  const hasFiles = files.length > 0;\n\n  if (hasAudio && !hasImages && !hasText && !hasFiles) return 'AUDIO';\n  if (hasImages && !hasAudio && !hasText && !hasFiles) return 'IMAGE';\n  if (hasFiles && !hasAudio && !hasImages && !hasText) return 'FILE';\n  if (hasText && !hasAudio && !hasImages && !hasFiles) return 'TEXT';\n  return 'MIXED';\n}\n\nfunction mapFile(row: FileRow): ChatFileResponseType {\n  return {\n    fileId: row.file_id,\n    originalFilename: row.original_filename,\n    fileUrl: row.file_url ?? `/api/v1/upload/file/${row.file_path}`,\n    fileType: row.file_type,\n    contentType: row.content_type ?? undefined,\n    fileSize: row.file_size ?? undefined,\n    thumbnailUrl: row.thumbnail_url ?? undefined,\n    duration: row.duration ?? undefined,\n    createdAt: row.created_at\n  };\n}\n\nfunction mapMessage(\n  row: MessageRow,\n  images: ImageRow[],\n  files: ChatFileResponseType[]\n): ChatMessageResponseType {\n  const participant: ChatParticipant = {\n    userId: row.user_id,\n    name: row.name ?? undefined,\n    profileImage: row.profile_image ?? undefined\n  };\n\n  return {\n    messageId: row.message_id,\n    roomId: row.room_id,\n    sender: participant,\n    message: row.message ?? undefined,\n    imageUrls: images.map((img) => img.image_url),\n    audioUrl: row.audio_url ?? undefined,\n    audioDuration: undefined,\n    files,\n    messageType: computeMessageType(row, images, files),\n    sentAt: row.created_at\n  };\n}\n\nasync function ensureRoomExists(env: Env, roomId: number): Promise<ChatRoomRow> {\n  const row = await queryFirst<ChatRoomRow>(\n    env.DB,\n    'SELECT * FROM chat_room WHERE room_id = ? LIMIT 1',\n    [roomId]\n  );\n  if (!row) {\n    throw new AppError('\uCC44\uD305\uBC29\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'CHAT_ROOM_NOT_FOUND');\n  }\n  return row;\n}\n\nasync function mapRoom(env: Env, room: ChatRoomRow): Promise<ChatRoomSummary> {\n  const participants = await fetchParticipants(env, room.room_id);\n  const lastMessageRow = await queryFirst<{ message: string | null; created_at: string | null }>(\n    env.DB,\n    `SELECT m.message, m.created_at\n       FROM chat_message m\n      WHERE m.room_id = ?\n      ORDER BY m.created_at DESC\n      LIMIT 1`,\n    [room.room_id]\n  );\n\n  return {\n    roomId: room.room_id,\n    roomName: room.room_name,\n    roomType: room.room_type,\n    isPublic: toBoolean(room.is_public),\n    maxParticipants: room.max_participants ?? undefined,\n    participants,\n    lastMessage: lastMessageRow?.message ?? undefined,\n    lastMessageAt: lastMessageRow?.created_at ?? undefined\n  };\n}\n\nexport async function listUserChatRooms(env: Env, userId: string): Promise<ChatRoomSummary[]> {\n  const rows = await query<ChatRoomRow>(\n    env.DB,\n    `SELECT r.*\n       FROM chat_room r\n       JOIN chat_room_participant p ON p.room_id = r.room_id\n      WHERE p.user_id = ?\n      ORDER BY r.updated_at DESC, r.created_at DESC`,\n    [userId]\n  );\n\n  const summaries: ChatRoomSummary[] = [];\n  for (const row of rows) {\n    summaries.push(await mapRoom(env, row));\n  }\n  return summaries;\n}\n\nexport async function listPublicChatRooms(env: Env, userId: string): Promise<ChatRoomSummary[]> {\n  const rows = await query<ChatRoomRow>(\n    env.DB,\n    `SELECT r.*\n       FROM chat_room r\n      WHERE r.is_public = 1\n        AND r.room_id NOT IN (SELECT room_id FROM chat_room_participant WHERE user_id = ?)\n      ORDER BY r.created_at DESC`,\n    [userId]\n  );\n\n  const summaries: ChatRoomSummary[] = [];\n  for (const row of rows) {\n    summaries.push(await mapRoom(env, row));\n  }\n  return summaries;\n}\n\nexport async function createChatRoom(\n  env: Env,\n  creatorId: string,\n  roomName: string,\n  participantIds: string[] = [],\n  options?: { isPublic?: boolean; roomType?: string; maxParticipants?: number }\n): Promise<ChatRoomSummary> {\n  if (!roomName?.trim()) {\n    throw new AppError('\uCC44\uD305\uBC29 \uC774\uB984\uC740 \uD544\uC218\uC785\uB2C8\uB2E4.', 400, 'INVALID_ROOM_NAME');\n  }\n\n  const now = new Date().toISOString();\n  const isPublic = options?.isPublic ? 1 : 0;\n  const roomType = options?.roomType ?? 'GROUP';\n  const maxParticipants = options?.maxParticipants ?? null;\n\n  await execute(\n    env.DB,\n    `INSERT INTO chat_room (room_name, room_type, is_public, max_participants, created_at, updated_at)\n      VALUES (?, ?, ?, ?, ?, ?)`,\n    [roomName.trim(), roomType, isPublic, maxParticipants, now, now]\n  );\n\n  const roomIdRow = await queryFirst<{ id: number }>(env.DB, 'SELECT last_insert_rowid() as id');\n  const roomId = Number(roomIdRow?.id ?? 0);\n  if (!roomId) {\n    throw new AppError('\uCC44\uD305\uBC29\uC744 \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 500, 'CHAT_ROOM_CREATE_FAILED');\n  }\n\n  const uniqueIds = new Set<string>([creatorId, ...participantIds]);\n  const statements = Array.from(uniqueIds).map((id) => ({\n    sql: `INSERT OR IGNORE INTO chat_room_participant (room_id, user_id, joined_at)\n            VALUES (?, ?, ?)`,\n    params: [roomId, id, now]\n  }));\n  await transaction(env.DB, statements);\n\n  const room = await ensureRoomExists(env, roomId);\n  return mapRoom(env, room);\n}\n\nexport async function joinChatRoom(env: Env, roomId: number, userId: string): Promise<ChatRoomSummary> {\n  const room = await ensureRoomExists(env, roomId);\n  const now = new Date().toISOString();\n  await execute(\n    env.DB,\n    `INSERT OR IGNORE INTO chat_room_participant (room_id, user_id, joined_at)\n      VALUES (?, ?, ?)`,\n    [roomId, userId, now]\n  );\n  return mapRoom(env, room);\n}\n\nexport async function leaveChatRoom(env: Env, roomId: number, userId: string): Promise<void> {\n  await ensureRoomExists(env, roomId);\n  await execute(\n    env.DB,\n    'DELETE FROM chat_room_participant WHERE room_id = ? AND user_id = ?',\n    [roomId, userId]\n  );\n}\n\nexport async function listRoomMessages(\n  env: Env,\n  roomId: number,\n  page: number,\n  size: number\n): Promise<ChatMessageResponseType[]> {\n  await ensureRoomExists(env, roomId);\n  const offset = Math.max(page, 0) * size;\n\n  const messageRows = await query<MessageRow>(\n    env.DB,\n    `SELECT m.*, u.name, u.profile_image\n       FROM chat_message m\n       LEFT JOIN users u ON u.user_id = m.user_id\n      WHERE m.room_id = ?\n      ORDER BY m.created_at DESC\n      LIMIT ? OFFSET ?`,\n    [roomId, size, offset]\n  );\n\n  const messageIds = messageRows.map((row) => row.message_id);\n  if (messageIds.length === 0) {\n    return [];\n  }\n\n  const imageRows = await query<ImageRow>(\n    env.DB,\n    `SELECT message_id, image_url\n       FROM chat_image\n      WHERE message_id IN (${messageIds.map(() => '?').join(',')})`,\n    messageIds\n  );\n\n  const fileRows = await query<FileRow>(\n    env.DB,\n    `SELECT f.*\n       FROM chat_files f\n      WHERE f.message_id IN (${messageIds.map(() => '?').join(',')})\n        AND f.is_deleted = 0`,\n    messageIds\n  );\n\n  const imageMap = new Map<number, ImageRow[]>();\n  for (const img of imageRows) {\n    const list = imageMap.get(img.message_id) ?? [];\n    list.push(img);\n    imageMap.set(img.message_id, list);\n  }\n\n  const fileMap = new Map<number, ChatFileResponseType[]>();\n  for (const file of fileRows) {\n    const mapped = mapFile(file);\n    const list = fileMap.get(file.message_id) ?? [];\n    list.push(mapped);\n    fileMap.set(file.message_id, list);\n  }\n\n  const messages = messageRows\n    .map((row) => {\n      const images = imageMap.get(row.message_id) ?? [];\n      const files = fileMap.get(row.message_id) ?? [];\n      return mapMessage(row, images, files);\n    })\n    .reverse();\n\n  return messages;\n}\n\nexport async function searchRoomMessages(\n  env: Env,\n  roomId: number,\n  keyword: string,\n  page: number,\n  size: number\n): Promise<ChatMessageResponseType[]> {\n  await ensureRoomExists(env, roomId);\n  if (!keyword?.trim()) {\n    return [];\n  }\n\n  const offset = Math.max(page, 0) * size;\n  const messageRows = await query<MessageRow>(\n    env.DB,\n    `SELECT m.*, u.name, u.profile_image\n       FROM chat_message m\n       LEFT JOIN users u ON u.user_id = m.user_id\n      WHERE m.room_id = ? AND m.message LIKE ?\n      ORDER BY m.created_at DESC\n      LIMIT ? OFFSET ?`,\n    [roomId, `%${keyword}%`, size, offset]\n  );\n\n  const messageIds = messageRows.map((row) => row.message_id);\n  if (messageIds.length === 0) {\n    return [];\n  }\n\n  const imageRows = await query<ImageRow>(\n    env.DB,\n    `SELECT message_id, image_url\n       FROM chat_image\n      WHERE message_id IN (${messageIds.map(() => '?').join(',')})`,\n    messageIds\n  );\n\n  const fileRows = await query<FileRow>(\n    env.DB,\n    `SELECT f.*\n       FROM chat_files f\n      WHERE f.message_id IN (${messageIds.map(() => '?').join(',')})\n        AND f.is_deleted = 0`,\n    messageIds\n  );\n\n  const imageMap = new Map<number, ImageRow[]>();\n  for (const img of imageRows) {\n    const list = imageMap.get(img.message_id) ?? [];\n    list.push(img);\n    imageMap.set(img.message_id, list);\n  }\n\n  const fileMap = new Map<number, ChatFileResponseType[]>();\n  for (const file of fileRows) {\n    const mapped = mapFile(file);\n    const list = fileMap.get(file.message_id) ?? [];\n    list.push(mapped);\n    fileMap.set(file.message_id, list);\n  }\n\n  return messageRows\n    .map((row) => mapMessage(row, imageMap.get(row.message_id) ?? [], fileMap.get(row.message_id) ?? []))\n    .reverse();\n}\n\nexport async function uploadChatImages(\n  env: Env,\n  roomId: number,\n  userId: string,\n  files: File[]\n): Promise<string[]> {\n  await ensureRoomExists(env, roomId);\n  const participant = await queryFirst(\n    env.DB,\n    'SELECT 1 FROM chat_room_participant WHERE room_id = ? AND user_id = ? LIMIT 1',\n    [roomId, userId]\n  );\n  if (!participant) {\n    throw new AppError('\uCC44\uD305\uBC29\uC5D0 \uCC38\uC5EC\uD558\uC9C0 \uC54A\uC740 \uC0AC\uC6A9\uC790\uC785\uB2C8\uB2E4.', 403, 'CHAT_ROOM_FORBIDDEN');\n  }\n\n  if (!files.length) {\n    return [];\n  }\n\n  const urls: string[] = [];\n  for (const file of files) {\n    const buffer = await file.arrayBuffer();\n    const key = `chat/${roomId}/images/${generateUniqueFileName(file.name, userId)}`;\n    await saveToR2(env.STORAGE, key, buffer, file.type, {\n      roomId: String(roomId),\n      uploader: userId,\n      fileName: file.name\n    });\n    const url = `/api/v1/upload/file/${key}`;\n    urls.push(url);\n  }\n\n  return urls;\n}\n\nexport async function uploadChatAudio(\n  env: Env,\n  roomId: number,\n  userId: string,\n  file: File\n): Promise<string> {\n  await ensureRoomExists(env, roomId);\n  const participant = await queryFirst(\n    env.DB,\n    'SELECT 1 FROM chat_room_participant WHERE room_id = ? AND user_id = ? LIMIT 1',\n    [roomId, userId]\n  );\n  if (!participant) {\n    throw new AppError('\uCC44\uD305\uBC29\uC5D0 \uCC38\uC5EC\uD558\uC9C0 \uC54A\uC740 \uC0AC\uC6A9\uC790\uC785\uB2C8\uB2E4.', 403, 'CHAT_ROOM_FORBIDDEN');\n  }\n\n  const buffer = await file.arrayBuffer();\n  const key = `chat/${roomId}/audio/${generateUniqueFileName(file.name, userId)}`;\n  await saveToR2(env.STORAGE, key, buffer, file.type, {\n    roomId: String(roomId),\n    uploader: userId,\n    fileName: file.name\n  });\n  return `/api/v1/upload/file/${key}`;\n}\n\nexport async function listMyChatFiles(env: Env, userId: string): Promise<ChatFileResponseType[]> {\n  const rows = await query<FileRow>(\n    env.DB,\n    `SELECT f.*\n       FROM chat_files f\n       JOIN chat_message m ON m.message_id = f.message_id\n      WHERE m.user_id = ? AND f.is_deleted = 0\n      ORDER BY f.created_at DESC`,\n    [userId]\n  );\n  return rows.map(mapFile);\n}\n\nexport async function deleteChatFile(env: Env, userId: string, fileId: number): Promise<void> {\n  const row = await queryFirst<FileRow>(\n    env.DB,\n    `SELECT f.*\n       FROM chat_files f\n       JOIN chat_message m ON m.message_id = f.message_id\n      WHERE f.file_id = ?\n      LIMIT 1`,\n    [fileId]\n  );\n  if (!row) {\n    throw new AppError('\uD30C\uC77C\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'CHAT_FILE_NOT_FOUND');\n  }\n  const messageOwner = await queryFirst<{ user_id: string }>(\n    env.DB,\n    'SELECT user_id FROM chat_message WHERE message_id = ? LIMIT 1',\n    [row.message_id]\n  );\n  if (messageOwner?.user_id !== userId) {\n    throw new AppError('\uBCF8\uC778\uC774 \uC5C5\uB85C\uB4DC\uD55C \uD30C\uC77C\uB9CC \uC0AD\uC81C\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.', 403, 'CHAT_FILE_FORBIDDEN');\n  }\n  await execute(\n    env.DB,\n    'UPDATE chat_files SET is_deleted = 1, updated_at = ? WHERE file_id = ?',\n    [new Date().toISOString(), fileId]\n  );\n}\n\nfunction parseDataUrl(base64DataUrl: string): { contentType: string; buffer: ArrayBuffer } {\n  const match = base64DataUrl.match(/^data:(.+);base64,(.*)$/);\n  if (!match) {\n    throw new AppError('\uC798\uBABB\uB41C \uC624\uB514\uC624 \uB370\uC774\uD130\uC785\uB2C8\uB2E4.', 400, 'INVALID_AUDIO_DATA');\n  }\n  const contentType = match[1];\n  const base64 = match[2];\n  const binaryString = atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i += 1) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return { contentType, buffer: bytes.buffer };\n}\n\nexport async function createChatMessage(\n  env: Env,\n  userId: string,\n  payload: ChatMessageCreatePayload\n): Promise<ChatMessageResponseType> {\n  const roomId = Number(payload.roomId);\n  if (!Number.isFinite(roomId)) {\n    throw new AppError('roomId\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 400, 'INVALID_ROOM_ID');\n  }\n\n  const room = await queryFirst<ChatRoomRow>(\n    env.DB,\n    'SELECT * FROM chat_room WHERE room_id = ? LIMIT 1',\n    [roomId]\n  );\n  if (!room) {\n    throw new AppError('\uCC44\uD305\uBC29\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'CHAT_ROOM_NOT_FOUND');\n  }\n\n  const participant = await queryFirst(\n    env.DB,\n    'SELECT 1 FROM chat_room_participant WHERE room_id = ? AND user_id = ? LIMIT 1',\n    [roomId, userId]\n  );\n  if (!participant) {\n    throw new AppError('\uCC44\uD305\uBC29\uC5D0 \uCC38\uC5EC\uD558\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.', 403, 'CHAT_ROOM_FORBIDDEN');\n  }\n\n  const now = nowIso();\n  const messageText = typeof payload.message === 'string' && payload.message.trim().length > 0\n    ? payload.message.trim()\n    : null;\n  const imageUrls = Array.isArray(payload.imageUrls)\n    ? payload.imageUrls.filter((url): url is string => typeof url === 'string' && url.length > 0)\n    : [];\n\n  let audioUrl = payload.audioUrl ?? null;\n  if (!audioUrl && typeof payload.audioData === 'string' && payload.audioData.startsWith('data:')) {\n    const { contentType, buffer } = parseDataUrl(payload.audioData);\n    const key = `chat/${roomId}/audio/${generateUniqueFileName('voice-message.webm', userId)}`;\n    await saveToR2(env.STORAGE, key, buffer, contentType, {\n      roomId: String(roomId),\n      uploader: userId,\n      type: 'voice-message'\n    });\n    audioUrl = `/api/v1/upload/file/${key}`;\n  }\n\n  if (!messageText && !imageUrls.length && !audioUrl) {\n    throw new AppError('\uBA54\uC2DC\uC9C0 \uB0B4\uC6A9\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.', 400, 'EMPTY_MESSAGE');\n  }\n\n  await execute(\n    env.DB,\n    `INSERT INTO chat_message (\n        room_id,\n        user_id,\n        message,\n        audio_url,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?)`,\n    [roomId, userId, messageText ?? null, audioUrl, now, now]\n  );\n\n  const messageIdRow = await queryFirst<{ id: number }>(env.DB, 'SELECT last_insert_rowid() as id');\n  const messageId = Number(messageIdRow?.id ?? 0);\n  if (!messageId) {\n    throw new AppError('\uBA54\uC2DC\uC9C0\uB97C \uC800\uC7A5\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 500, 'CHAT_MESSAGE_CREATE_FAILED');\n  }\n\n  if (imageUrls.length) {\n    for (const url of imageUrls) {\n      await execute(\n        env.DB,\n        `INSERT INTO chat_image (message_id, image_url, created_at, updated_at)\n          VALUES (?, ?, ?, ?)`,\n        [messageId, url, now, now]\n      );\n    }\n  }\n\n  await execute(\n    env.DB,\n    'UPDATE chat_room SET updated_at = ? WHERE room_id = ?',\n    [now, roomId]\n  );\n\n  const messageRow = await queryFirst<MessageRow>(\n    env.DB,\n    `SELECT m.*, u.name, u.profile_image\n       FROM chat_message m\n       LEFT JOIN users u ON u.user_id = m.user_id\n      WHERE m.message_id = ?\n      LIMIT 1`,\n    [messageId]\n  );\n  if (!messageRow) {\n    throw new AppError('\uBA54\uC2DC\uC9C0\uB97C \uC870\uD68C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 500, 'CHAT_MESSAGE_LOAD_FAILED');\n  }\n\n  const images = await query<ImageRow>(\n    env.DB,\n    'SELECT message_id, image_url FROM chat_image WHERE message_id = ?',\n    [messageId]\n  );\n\n  const files = await query<FileRow>(\n    env.DB,\n    'SELECT * FROM chat_files WHERE message_id = ? AND is_deleted = 0',\n    [messageId]\n  );\n\n  const mappedFiles = files.map(mapFile);\n  return mapMessage(messageRow, images, mappedFiles);\n}\n\nexport async function markRoomMessagesAsRead(env: Env, roomId: number, userId: string): Promise<void> {\n  await ensureRoomExists(env, roomId);\n  const messageIds = await query<{ message_id: number }>(\n    env.DB,\n    'SELECT message_id FROM chat_message WHERE room_id = ? AND user_id != ?',\n    [roomId, userId]\n  );\n  if (!messageIds.length) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const statements = messageIds.map(({ message_id }) => ({\n    sql: `INSERT OR REPLACE INTO message_read_status (message_id, user_id, read_at, is_deleted, created_at, updated_at)\n            VALUES (?, ?, ?, 0, ?, ?)`,\n    params: [message_id, userId, now, now, now]\n  }));\n  await transaction(env.DB, statements);\n}\n\nexport async function getUnreadCountForRoom(env: Env, roomId: number, userId: string): Promise<number> {\n  await ensureRoomExists(env, roomId);\n  const row = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count\n       FROM chat_message m\n      WHERE m.room_id = ?\n        AND m.user_id != ?\n        AND m.message_id NOT IN (\n          SELECT message_id FROM message_read_status\n           WHERE user_id = ? AND is_deleted = 0\n        )`,\n    [roomId, userId, userId]\n  );\n  return row?.count ?? 0;\n}\n\nexport async function getTotalUnreadCount(env: Env, userId: string): Promise<number> {\n  const row = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count\n       FROM chat_message m\n      WHERE m.user_id != ?\n        AND m.message_id NOT IN (\n          SELECT message_id FROM message_read_status WHERE user_id = ? AND is_deleted = 0\n        )`,\n    [userId, userId]\n  );\n  return row?.count ?? 0;\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport { getUserProfile, updateUserProfile, getUserSettings, updateUserSettings } from '../services/user';\nimport { query, transaction, execute } from '../utils/db';\n\nconst settingsRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\nsettingsRoutes.use('*', requireAuth);\n\nasync function loadSettingsMap(env: Env, userId: string): Promise<Map<string, string>> {\n  const rows = await query<{ setting_key: string; setting_value: string | null }>(\n    env.DB,\n    'SELECT setting_key, setting_value FROM user_settings WHERE user_id = ?',\n    [userId]\n  );\n  const map = new Map<string, string>();\n  for (const row of rows) {\n    if (row.setting_key) {\n      map.set(row.setting_key, row.setting_value ?? '');\n    }\n  }\n  return map;\n}\n\nasync function saveSettingsEntries(env: Env, userId: string, entries: Record<string, string | null | undefined>) {\n  const now = new Date().toISOString();\n  const statements = Object.entries(entries)\n    .filter(([_, value]) => value !== undefined)\n    .map(([key, value]) => ({\n      sql: 'INSERT OR REPLACE INTO user_settings (user_id, setting_key, setting_value, updated_at) VALUES (?, ?, ?, ?)',\n      params: [userId, key, value === null ? null : String(value), now]\n    }));\n  if (statements.length === 0) return;\n  await transaction(env.DB, statements);\n}\n\nasync function deleteSettingsKeys(env: Env, userId: string, keys: string[]) {\n  if (!keys.length) return;\n  const placeholders = keys.map(() => '?').join(',');\n  await execute(\n    env.DB,\n    `DELETE FROM user_settings WHERE user_id = ? AND setting_key IN (${placeholders})`,\n    [userId, ...keys]\n  );\n}\n\nfunction toBool(value: string | undefined, fallback = false): boolean {\n  if (value === undefined) return fallback;\n  if (value === 'true' || value === '1') return true;\n  if (value === 'false' || value === '0') return false;\n  return fallback;\n}\n\nsettingsRoutes.get('/account', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const [profile, settings] = await Promise.all([\n    getUserProfile(c.env, userId),\n    loadSettingsMap(c.env, userId)\n  ]);\n  if (!profile) {\n    throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n  }\n  return successResponse(c, {\n    email: profile.email ?? '',\n    phoneNumber: settings.get('account.phoneNumber') ?? '',\n    englishName: profile.englishName ?? '',\n    residence: settings.get('account.residence') ?? profile.location?.country ?? '',\n    profileImage: profile.profileImage ?? null,\n    bio: profile.selfBio ?? '',\n    birthDate: profile.birthday ?? '',\n    gender: profile.gender ?? '',\n  });\n});\n\nsettingsRoutes.patch('/account', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n\n  const profilePayload: Record<string, any> = {};\n  if (typeof body.englishName === 'string') profilePayload.englishName = body.englishName.trim();\n  if (typeof body.bio === 'string') profilePayload.selfBio = body.bio.trim();\n  if (typeof body.birthDate === 'string') profilePayload.birthday = body.birthDate;\n  if (typeof body.gender === 'string') profilePayload.gender = body.gender;\n  if (typeof body.profileImage === 'string' && body.profileImage.length > 0) {\n    profilePayload.profileImage = body.profileImage;\n  }\n  if (Object.keys(profilePayload).length > 0) {\n    await updateUserProfile(c.env, userId, profilePayload);\n  }\n\n  const entries: Record<string, string | null> = {};\n  if (body.phoneNumber !== undefined) entries['account.phoneNumber'] = body.phoneNumber ? String(body.phoneNumber) : '';\n  if (body.residence !== undefined) entries['account.residence'] = body.residence ? String(body.residence) : '';\n  if (body.email !== undefined) entries['account.email'] = body.email ? String(body.email) : '';\n\n  await saveSettingsEntries(c.env, userId, entries);\n\n  if (body.email && typeof body.email === 'string') {\n    await execute(\n      c.env.DB,\n      'UPDATE users SET email = ?, updated_at = ? WHERE user_id = ?',\n      [body.email.trim(), new Date().toISOString(), userId]\n    );\n  }\n\n  return successResponse(c, { success: true });\n});\n\nsettingsRoutes.delete('/account', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  await execute(\n    c.env.DB,\n    'UPDATE users SET user_disable = 1, updated_at = ? WHERE user_id = ?',\n    [new Date().toISOString(), userId]\n  );\n  return successResponse(c, { disabled: true });\n});\n\nsettingsRoutes.get('/notifications', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const settings = await getUserSettings(c.env, userId);\n  const prefs = settings.notificationPreferences ?? {};\n  return successResponse(c, {\n    email: prefs.email ?? false,\n    push: prefs.push ?? false,\n    sms: prefs.sms ?? false\n  });\n});\n\nsettingsRoutes.patch('/notifications', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const preferences: Record<string, boolean> = {};\n  for (const key of ['email', 'push', 'sms']) {\n    if (body[key] !== undefined) {\n      preferences[key] = Boolean(body[key]);\n    }\n  }\n  await updateUserSettings(c.env, userId, { notificationPreferences: preferences });\n  return successResponse(c, { success: true });\n});\n\nsettingsRoutes.get('/privacy', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const map = await loadSettingsMap(c.env, userId);\n  return successResponse(c, {\n    profilePublic: toBool(map.get('privacy.profilePublic'), true),\n    showOnlineStatus: toBool(map.get('privacy.showOnlineStatus'), true),\n    allowMessages: toBool(map.get('privacy.allowMessages'), true)\n  });\n});\n\nsettingsRoutes.patch('/privacy', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const entries: Record<string, string> = {};\n  if (body.profilePublic !== undefined) entries['privacy.profilePublic'] = String(Boolean(body.profilePublic));\n  if (body.showOnlineStatus !== undefined) entries['privacy.showOnlineStatus'] = String(Boolean(body.showOnlineStatus));\n  if (body.allowMessages !== undefined) entries['privacy.allowMessages'] = String(Boolean(body.allowMessages));\n  await saveSettingsEntries(c.env, userId, entries);\n  return successResponse(c, { success: true });\n});\n\nsettingsRoutes.get('/language', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const settings = await getUserSettings(c.env, userId);\n  return successResponse(c, {\n    language: settings.language ?? 'ko',\n    timeZone: settings.timeZone ?? 'Asia/Seoul'\n  });\n});\n\nsettingsRoutes.patch('/language', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const payload: any = {};\n  if (body.language !== undefined) payload.language = String(body.language);\n  if (body.timeZone !== undefined) payload.timeZone = String(body.timeZone);\n  if (body.marketingOptIn !== undefined) payload.marketingOptIn = Boolean(body.marketingOptIn);\n  await updateUserSettings(c.env, userId, payload);\n  return successResponse(c, { success: true });\n});\n\nsettingsRoutes.patch('/password', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  if (typeof body.currentPassword !== 'string' || typeof body.newPassword !== 'string') {\n    throw new AppError('currentPassword and newPassword are required', 400, 'INVALID_PAYLOAD');\n  }\n  // \uBE44\uBC00\uBC88\uD638 \uC800\uC7A5 \uB85C\uC9C1\uC740 \uC778\uC99D \uC778\uD504\uB77C\uC5D0 \uB530\uB77C \uB2EC\uB77C\uC9C0\uBBC0\uB85C \uD604\uC7AC\uB294 \uC131\uACF5\uB9CC \uBC18\uD658\n  return successResponse(c, { success: true, message: 'Password change acknowledged (no-op in worker).' });\n});\n\nsettingsRoutes.post('/export', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const profile = await getUserProfile(c.env, userId);\n  return successResponse(c, {\n    exportedAt: new Date().toISOString(),\n    profile,\n    sessions: [],\n    messages: []\n  });\n});\n\nsettingsRoutes.get('/login-history', async (c) => {\n  return successResponse(c, []);\n});\n\nsettingsRoutes.get('/two-factor', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const map = await loadSettingsMap(c.env, userId);\n  const pending = map.get('security.twoFactor.setup');\n  return successResponse(c, {\n    enabled: toBool(map.get('security.twoFactor.enabled'), false),\n    qrCode: pending ? map.get('security.twoFactor.qrCode') ?? null : null\n  });\n});\n\nsettingsRoutes.post('/two-factor/enable', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const secret = crypto.randomUUID().replace(/-/g, '').slice(0, 16).toUpperCase();\n  const otpauth = `otpauth://totp/StudyMate:${userId}?secret=${secret}&issuer=StudyMate`;\n  await saveSettingsEntries(c.env, userId, {\n    'security.twoFactor.setup': 'pending',\n    'security.twoFactor.secret': secret,\n    'security.twoFactor.qrCode': otpauth\n  });\n  return successResponse(c, { qrCode: otpauth });\n});\n\nsettingsRoutes.post('/two-factor/disable', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const map = await loadSettingsMap(c.env, userId);\n  if (map.get('security.twoFactor.setup') === 'pending') {\n    await saveSettingsEntries(c.env, userId, { 'security.twoFactor.enabled': 'true' });\n    await deleteSettingsKeys(c.env, userId, ['security.twoFactor.setup', 'security.twoFactor.qrCode']);\n    return successResponse(c, { success: true, enabled: true, verified: true });\n  }\n  await saveSettingsEntries(c.env, userId, { 'security.twoFactor.enabled': 'false' });\n  await deleteSettingsKeys(c.env, userId, ['security.twoFactor.secret', 'security.twoFactor.qrCode']);\n  return successResponse(c, { success: true, enabled: false });\n});\n\nexport default settingsRoutes;\n", "import { DurableObject } from 'cloudflare:workers';\nimport { log } from '../utils/logger';\nimport { upsertActiveRoom, removeActiveRoom } from '../utils/activeRooms';\nimport { ActiveRoomInfo } from '../types';\n\n// Durable Object for WebRTC Room Management with Hibernation Support\nexport class WebRTCRoom extends DurableObject {\n  private roomData: RoomData;\n  private roomId: string;\n  protected env: any;\n\n  constructor(state: DurableObjectState, env: any) {\n    super(state, env);\n    this.env = env;\n    \n    // Initialize room ID from Durable Object ID\n    this.roomId = state.id.toString();\n    \n    // Initialize room data\n    this.roomData = {\n      id: this.roomId,\n      participants: [],\n      maxParticipants: 4,\n      createdAt: new Date().toISOString(),\n      type: 'audio',\n      metadata: {},\n      settings: {\n        allowScreenShare: true,\n        allowRecording: false,\n        autoMuteOnJoin: false,\n        stunServers: [\n          { urls: 'stun:stun1.l.google.com:19302' },\n          { urls: 'stun:stun2.l.google.com:19302' },\n          { urls: 'stun.cloudflare.com:3478' }\n        ],\n        turnServers: [\n          {\n            urls: 'turn:openrelay.metered.ca:80',\n            username: 'openrelayproject',\n            credential: 'openrelayproject'\n          },\n          {\n            urls: 'turn:openrelay.metered.ca:443',\n            username: 'openrelayproject',\n            credential: 'openrelayproject'\n          },\n          {\n            urls: 'turn:freestun.net:3478',\n            username: 'free',\n            credential: 'free'\n          }\n        ],\n        recordingSettings: {\n          enabled: true,\n          autoStart: false,\n          maxDuration: 60, // 1\uC2DC\uAC04\n          format: 'webm',\n          quality: 'medium',\n          audioOnly: false\n        }\n      },\n      metrics: {\n        totalParticipants: 0,\n        peakParticipants: 0,\n        messagesExchanged: 0,\n        connectionErrors: 0,\n        lastActivity: new Date().toISOString(),\n        sessionDuration: 0\n      }\n    };\n    \n    // Restore participants from hibernation\n    this.restoreParticipants();\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    const url = new URL(request.url);\n    \n    // Handle WebSocket upgrade\n    if (request.headers.get('Upgrade') === 'websocket') {\n      return this.handleWebSocket(request);\n    }\n    \n    // Handle HTTP requests\n    switch (url.pathname) {\n      case '/init':\n        return this.handleInit(request);\n      case '/join':\n        return this.handleJoin(request);\n      case '/leave':\n        return this.handleLeave(request);\n      case '/info':\n        return this.handleInfo();\n      case '/settings':\n        return this.handleSettings(request);\n      case '/metadata':\n        return this.handleMetadata(request);\n      case '/ice-servers':\n        return this.handleIceServers();\n      case '/metrics':\n        return this.handleMetrics();\n      default:\n        return new Response('Not Found', { status: 404 });\n    }\n  }\n\n  private async handleWebSocket(request: Request): Promise<Response> {\n    const url = new URL(request.url);\n    const userId = url.searchParams.get('userId');\n    const userName = url.searchParams.get('userName') || 'Anonymous';\n    \n    if (!userId) {\n      return new Response('Missing userId parameter', { status: 400 });\n    }\n    \n    // Check if room is full\n    const activeParticipants = this.getActiveParticipants();\n    if (activeParticipants.length >= this.roomData.maxParticipants) {\n      return new Response(JSON.stringify({ error: 'Room is full' }), { \n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    // Create WebSocket pair\n    const pair = new WebSocketPair();\n    const [client, server] = Object.values(pair);\n    \n    // Store user data with WebSocket for hibernation\n    const userData: WebSocketData = {\n      userId,\n      userName,\n      joinedAt: new Date().toISOString()\n    };\n    server.serializeAttachment(userData);\n    \n    // Accept WebSocket with hibernation support\n    this.ctx.acceptWebSocket(server, [userId]);\n    \n    // Add participant to room\n    const participant: Participant = {\n      id: userId,\n      name: userName,\n      joinedAt: userData.joinedAt,\n      audioEnabled: true,\n      videoEnabled: this.roomData.type === 'video',\n      isScreenSharing: false\n    };\n    \n    this.roomData.participants.push(participant);\n    \n    // Update metrics for participant join\n    this.updateMetrics('join');\n    await this.saveRoomData();\n    await this.syncActiveRoomCache();\n    \n    // Send analytics\n    await this.sendAnalytics('participant_joined', {\n      userId,\n      userName,\n      totalParticipants: this.roomData.participants.length,\n      roomType: this.roomData.type\n    });\n    \n    // Send initial room state to new participant\n    server.send(JSON.stringify({\n      type: 'connected',\n      roomData: this.roomData,\n      userId\n    }));\n    \n    // Notify other participants\n    this.broadcast({\n      type: 'participant-joined',\n      participant\n    }, userId);\n    \n    return new Response(null, { status: 101, webSocket: client });\n  }\n\n  private async handleInit(request: Request): Promise<Response> {\n    try {\n      const { roomType = 'audio', maxParticipants = 4, metadata = {} } = await request.json() as {\n        roomType?: 'audio' | 'video';\n        maxParticipants?: number;\n        metadata?: any;\n      };\n\n      // Update room data with initialization parameters\n      this.roomData.type = roomType;\n      this.roomData.maxParticipants = maxParticipants;\n      this.roomData.createdAt = new Date().toISOString();\n      this.roomData.metadata = metadata || {};\n      \n      // Save room data to storage\n      await this.saveRoomData();\n      await this.syncActiveRoomCache();\n\n      return new Response(JSON.stringify({\n        success: true,\n        roomId: this.roomId,\n        roomType,\n        maxParticipants,\n        metadata,\n        createdAt: this.roomData.createdAt\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      log.error('Init error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      return new Response(JSON.stringify({ \n        error: 'Failed to initialize room' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  }\n\n  private async handleJoin(request: Request): Promise<Response> {\n    try {\n      const { userId, userName, roomType } = await request.json() as {\n        userId: string;\n        userName: string;\n        roomType?: 'audio' | 'video';\n      };\n      \n      // Check if user already in room\n      const existingParticipant = this.roomData.participants.find(p => p.id === userId);\n      if (existingParticipant) {\n        return new Response(JSON.stringify({ \n          success: true,\n          roomData: this.roomData,\n          message: 'Already in room'\n        }), {\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      const activeParticipants = this.getActiveParticipants();\n      if (activeParticipants.length >= this.roomData.maxParticipants) {\n        return new Response(JSON.stringify({ \n          error: 'Room is full' \n        }), { \n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // Update room type if needed\n      if (roomType && this.roomData.participants.length === 0) {\n        this.roomData.type = roomType;\n      }\n\n      await this.saveRoomData();\n\n      return new Response(JSON.stringify({ \n        success: true,\n        roomData: this.roomData,\n        websocketUrl: `/room/${this.roomId}/websocket?userId=${userId}&userName=${encodeURIComponent(userName)}`\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      log.error('Join error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      return new Response(JSON.stringify({ \n        error: 'Failed to join room' \n      }), { \n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  }\n\n  private async handleLeave(request: Request): Promise<Response> {\n    try {\n      const { userId } = await request.json() as { userId: string };\n      await this.handleParticipantLeave(userId);\n      \n      return new Response(JSON.stringify({ success: true }));\n    } catch (error) {\n      log.error('Leave error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      return new Response(JSON.stringify({ \n        error: 'Failed to leave room' \n      }), { status: 500 });\n    }\n  }\n\n  private async handleSignal(request: Request): Promise<Response> {\n    try {\n      const { from, to, signal } = await request.json() as {\n        from: string;\n        to: string;\n        signal: unknown;\n      };\n\n      // Forward signal to specific participant using WebSocket hibernation groups\n      const websockets = this.ctx.getWebSockets(to);\n      websockets.forEach((ws) => {\n        try {\n          ws.send(JSON.stringify({ type: 'signal', from, signal }));\n        } catch (e) {\n          log.error('Signal forward error', e as Error, undefined, { component: 'WEBRTC_ROOM' });\n        }\n      });\n\n      return new Response(JSON.stringify({ success: true }));\n    } catch (error) {\n      log.error('Signal error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      return new Response(JSON.stringify({ \n        error: 'Failed to send signal' \n      }), { status: 500 });\n    }\n  }\n\n  private async handleInfo(): Promise<Response> {\n    const roomData = await this.ctx.storage.get('roomData') || this.roomData;\n    return new Response(JSON.stringify(roomData));\n  }\n\n  // WebSocket Hibernation API event handlers\n  async webSocketMessage(ws: WebSocket, message: ArrayBuffer | string) {\n    try {\n      // Get user data from WebSocket attachment\n      const userData = ws.deserializeAttachment() as WebSocketData;\n      if (!userData) {\n        ws.close(1008, 'User data not found');\n        return;\n      }\n      \n      const msg = typeof message === 'string' ? JSON.parse(message) : null;\n      if (!msg) return;\n      \n      await this.handleWebSocketMessage(ws, userData.userId, msg);\n    } catch (error) {\n      log.error('WebSocket message error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      this.updateMetrics('error');\n      await this.sendAnalytics('websocket_error', { error: String(error) });\n      ws.send(JSON.stringify({ \n        type: 'error', \n        message: 'Invalid message format' \n      }));\n    }\n  }\n  \n  async webSocketClose(ws: WebSocket, code: number, reason: string, wasClean: boolean) {\n    const userData = ws.deserializeAttachment() as WebSocketData;\n    if (userData) {\n      await this.handleParticipantLeave(userData.userId);\n    }\n  }\n  \n  async webSocketError(ws: WebSocket, error: unknown) {\n    log.error('WebSocket error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n    this.updateMetrics('error');\n    await this.sendAnalytics('websocket_connection_error', { error: String(error) });\n    \n    const userData = ws.deserializeAttachment() as WebSocketData;\n    if (userData) {\n      await this.handleParticipantLeave(userData.userId);\n    }\n  }\n  \n  private async handleWebSocketMessage(ws: WebSocket, userId: string, message: any) {\n    const { type, data } = message;\n    \n    // Update message metrics\n    this.updateMetrics('message');\n\n    switch (type) {\n      case 'offer':\n      case 'answer':\n      case 'ice-candidate':\n        // Forward WebRTC signals to specific participant\n        if (data.to) {\n          this.sendToParticipant(data.to, {\n            type,\n            from: userId,\n            data: data.signal || data\n          });\n        }\n        break;\n\n      case 'toggle-audio':\n        await this.updateParticipantStatus(userId, { audioEnabled: data.enabled });\n        break;\n\n      case 'toggle-video':\n        await this.updateParticipantStatus(userId, { videoEnabled: data.enabled });\n        break;\n        \n      case 'toggle-screen-share':\n        await this.updateParticipantStatus(userId, { isScreenSharing: data.enabled });\n        this.broadcast({\n          type: 'screen-share-changed',\n          userId,\n          isSharing: data.enabled\n        }, userId);\n        break;\n\n      case 'chat':\n        // Broadcast chat message to all participants\n        this.broadcast({\n          type: 'chat',\n          from: userId,\n          message: data.message,\n          timestamp: new Date().toISOString()\n        });\n        break;\n        \n      case 'start-recording':\n        // \uB179\uD654 \uC2DC\uC791 \uBE0C\uB85C\uB4DC\uCE90\uC2A4\uD2B8\n        if (this.roomData.settings.allowRecording && this.roomData.settings.recordingSettings?.enabled) {\n          this.broadcast({\n            type: 'recording-started',\n            initiatedBy: userId,\n            timestamp: new Date().toISOString(),\n            settings: this.roomData.settings.recordingSettings\n          });\n          await this.sendAnalytics('recording_started', { userId });\n        }\n        break;\n\n      case 'stop-recording':\n        // \uB179\uD654 \uC911\uC9C0 \uBE0C\uB85C\uB4DC\uCE90\uC2A4\uD2B8\n        this.broadcast({\n          type: 'recording-stopped',\n          stoppedBy: userId,\n          timestamp: new Date().toISOString()\n        });\n        await this.sendAnalytics('recording_stopped', { userId });\n        break;\n\n      case 'recording-chunk':\n        // \uB179\uD654 \uCCAD\uD06C \uC5C5\uB85C\uB4DC \uC644\uB8CC \uC54C\uB9BC\n        await this.handleRecordingChunk(userId, data);\n        break;\n\n      case 'quality-report':\n        // \uC5F0\uACB0 \uD488\uC9C8 \uB9AC\uD3EC\uD2B8 \uCC98\uB9AC\n        await this.handleQualityReport(userId, data);\n        break;\n        \n      case 'ping':\n        ws.send(JSON.stringify({ type: 'pong' }));\n        break;\n\n      default:\n        log.warn('Unknown message type', { component: 'WEBRTC_ROOM' }, { type });\n    }\n  }\n\n  private async updateParticipantStatus(userId: string, updates: Partial<Participant>) {\n    const participant = this.roomData.participants.find(p => p.id === userId);\n    if (participant) {\n      Object.assign(participant, updates);\n      await this.saveRoomData();\n      \n      this.broadcast({\n        type: 'participant-updated',\n        participant\n      });\n    }\n  }\n\n  private async handleParticipantLeave(userId: string) {\n    const participantIndex = this.roomData.participants.findIndex(p => p.id === userId);\n    if (participantIndex === -1) return;\n    \n    // Remove participant\n    this.roomData.participants.splice(participantIndex, 1);\n    \n    // Update metrics\n    this.updateMetrics('leave');\n    await this.saveRoomData();\n    await this.syncActiveRoomCache();\n    \n    // Send analytics\n    await this.sendAnalytics('participant_left', {\n      userId,\n      remainingParticipants: this.roomData.participants.length,\n      sessionDuration: this.roomData.metrics.sessionDuration\n    });\n    \n    // Notify others\n    this.broadcast({\n      type: 'participant-left',\n      userId\n    });\n\n    // Schedule room cleanup if empty\n    const activeParticipants = this.getActiveParticipants();\n    if (activeParticipants.length === 0) {\n      // Use alarm for cleanup instead of setTimeout\n      const cleanupTime = Date.now() + 60000; // 1 minute\n      await this.ctx.storage.setAlarm(cleanupTime);\n    }\n  }\n  \n  // Handle alarm for room cleanup\n  async alarm() {\n    const activeParticipants = this.getActiveParticipants();\n    if (activeParticipants.length === 0) {\n      await this.ctx.storage.deleteAll();\n      await this.syncActiveRoomCache({ forceRemove: true });\n    }\n  }\n\n  private async handleSettings(request: Request): Promise<Response> {\n    if (request.method === 'GET') {\n      return new Response(JSON.stringify(this.roomData.settings), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    if (request.method === 'PATCH') {\n      try {\n        const updates = await request.json();\n        Object.assign(this.roomData.settings, updates);\n        await this.saveRoomData();\n        await this.syncActiveRoomCache();\n        \n        this.broadcast({\n          type: 'settings-updated',\n          settings: this.roomData.settings\n        });\n        \n        return new Response(JSON.stringify({ success: true }), {\n          headers: { 'Content-Type': 'application/json' }\n        });\n      } catch (error) {\n        return new Response(JSON.stringify({ error: 'Invalid request' }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n    }\n\n    return new Response('Method not allowed', { status: 405 });\n  }\n\n  private async handleMetadata(request: Request): Promise<Response> {\n    if (request.method !== 'PATCH' && request.method !== 'POST') {\n      return new Response('Method not allowed', { status: 405 });\n    }\n\n    try {\n      const metadata = await request.json() as Record<string, unknown> | undefined;\n\n      if (!metadata || typeof metadata !== 'object') {\n        return new Response(JSON.stringify({ error: 'metadata object is required' }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      this.roomData.metadata = {\n        ...(this.roomData.metadata || {}),\n        ...metadata\n      };\n\n      await this.saveRoomData();\n      await this.syncActiveRoomCache();\n\n      return new Response(JSON.stringify({\n        success: true,\n        metadata: this.roomData.metadata\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      log.error('Metadata update error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      return new Response(JSON.stringify({ error: 'Failed to update metadata' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  }\n\n  private async syncActiveRoomCache(options?: { forceRemove?: boolean }) {\n    if (!this.env?.CACHE) {\n      return;\n    }\n\n    try {\n      if (options?.forceRemove) {\n        await removeActiveRoom(this.env.CACHE, this.roomId);\n        return;\n      }\n\n      const activeCount = this.getActiveParticipants().length;\n      const roomInfo: ActiveRoomInfo = {\n        roomId: this.roomId,\n        roomType: this.roomData.type === 'video' ? 'video' : 'audio',\n        currentParticipants: activeCount,\n        maxParticipants: this.roomData.maxParticipants,\n        status: activeCount > 0 ? 'active' : 'waiting',\n        createdAt: this.roomData.createdAt,\n        updatedAt: new Date().toISOString(),\n        metadata: this.roomData.metadata || {}\n      };\n\n      await upsertActiveRoom(this.env.CACHE, roomInfo);\n    } catch (error) {\n      log.warn('Active room cache sync failed', undefined, {\n        component: 'WEBRTC_ROOM',\n        error: error instanceof Error ? error.message : String(error)\n      });\n    }\n  }\n\n  private broadcast(message: any, excludeUserId?: string) {\n    const data = JSON.stringify(message);\n    \n    this.ctx.getWebSockets().forEach(ws => {\n      try {\n        const userData = ws.deserializeAttachment() as WebSocketData;\n        if (userData && userData.userId !== excludeUserId) {\n          ws.send(data);\n        }\n      } catch (error) {\n        log.error('Broadcast error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      }\n    });\n  }\n  \n  private sendToParticipant(userId: string, message: any) {\n    const data = JSON.stringify(message);\n    const websockets = this.ctx.getWebSockets(userId);\n    \n    websockets.forEach(ws => {\n      try {\n        ws.send(data);\n      } catch (error) {\n        log.error('Send to user error', error as Error, undefined, { component: 'WEBRTC_ROOM', userId });\n      }\n    });\n  }\n\n  private async handleIceServers(): Promise<Response> {\n    const iceServers = [\n      ...this.roomData.settings.stunServers || [],\n      ...this.roomData.settings.turnServers || []\n    ];\n\n    return new Response(JSON.stringify({\n      iceServers,\n      ttl: 3600 // ICE \uC11C\uBC84 \uC815\uBCF4 TTL (1\uC2DC\uAC04)\n    }), {\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  private async handleMetrics(): Promise<Response> {\n    // Update session duration before returning metrics\n    this.updateMetrics('message'); // This will update the session duration\n    \n    const activeParticipants = this.getActiveParticipants();\n    \n    const metricsData = {\n      roomId: this.roomData.id,\n      currentParticipants: activeParticipants.length,\n      metrics: this.roomData.metrics,\n      roomSettings: {\n        type: this.roomData.type,\n        maxParticipants: this.roomData.maxParticipants,\n        createdAt: this.roomData.createdAt\n      },\n      participants: activeParticipants.map(p => ({\n        id: p.id,\n        name: p.name,\n        joinedAt: p.joinedAt,\n        audioEnabled: p.audioEnabled,\n        videoEnabled: p.videoEnabled,\n        isScreenSharing: p.isScreenSharing\n      }))\n    };\n\n    return new Response(JSON.stringify(metricsData), {\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n  \n  private getActiveParticipants(): Participant[] {\n    const connectedUserIds = new Set<string>();\n    \n    this.ctx.getWebSockets().forEach(ws => {\n      const userData = ws.deserializeAttachment() as WebSocketData;\n      if (userData) {\n        connectedUserIds.add(userData.userId);\n      }\n    });\n    \n    return this.roomData.participants.filter(p => connectedUserIds.has(p.id));\n  }\n  \n  private async saveRoomData() {\n    await this.ctx.storage.put('roomData', this.roomData);\n  }\n\n  private updateMetrics(type: 'join' | 'leave' | 'message' | 'error', data?: any) {\n    const now = new Date().toISOString();\n    this.roomData.metrics.lastActivity = now;\n\n    switch (type) {\n      case 'join':\n        this.roomData.metrics.totalParticipants++;\n        const currentCount = this.roomData.participants.length;\n        if (currentCount > this.roomData.metrics.peakParticipants) {\n          this.roomData.metrics.peakParticipants = currentCount;\n        }\n        break;\n      case 'message':\n        this.roomData.metrics.messagesExchanged++;\n        break;\n      case 'error':\n        this.roomData.metrics.connectionErrors++;\n        break;\n    }\n\n    // Calculate session duration\n    const createdTime = new Date(this.roomData.createdAt).getTime();\n    const currentTime = new Date(now).getTime();\n    this.roomData.metrics.sessionDuration = Math.floor((currentTime - createdTime) / 1000);\n  }\n\n  private async sendAnalytics(event: string, data: any) {\n    try {\n      // Cloudflare Analytics Engine\uC5D0 \uBA54\uD2B8\uB9AD \uC804\uC1A1 (env.ANALYTICS \uBC14\uC778\uB529 \uC0AC\uC6A9)\n      if (this.env?.ANALYTICS) {\n        await this.env.ANALYTICS.writeDataPoint({\n          blobs: [this.roomData.id, event],\n          doubles: [\n            this.roomData.participants.length,\n            this.roomData.metrics.peakParticipants,\n            this.roomData.metrics.messagesExchanged,\n            this.roomData.metrics.connectionErrors\n          ],\n          indexes: [this.roomData.id]\n        });\n      }\n    } catch (error) {\n      console.error('Analytics error:', error);\n    }\n  }\n\n  private async handleRecordingChunk(userId: string, data: any) {\n    try {\n      const { filename, size, duration } = data;\n      \n      // \uB179\uD654 \uCCAD\uD06C \uBA54\uD0C0\uB370\uC774\uD130 \uC800\uC7A5\n      const recordingMetadata = {\n        roomId: this.roomData.id,\n        userId,\n        filename,\n        size,\n        duration,\n        timestamp: new Date().toISOString(),\n        participants: this.roomData.participants.map(p => ({\n          id: p.id,\n          name: p.name\n        }))\n      };\n\n      // KV\uC5D0 \uB179\uD654 \uBA54\uD0C0\uB370\uC774\uD130 \uC800\uC7A5\n      if (this.env?.CACHE) {\n        const recordingKey = `recording:${this.roomData.id}:${filename}`;\n        await this.env.CACHE.put(recordingKey, JSON.stringify(recordingMetadata), {\n          expirationTtl: 86400 * 30 // 30\uC77C \uBCF4\uAD00\n        });\n      }\n\n      // \uB2E4\uB978 \uCC38\uAC00\uC790\uB4E4\uC5D0\uAC8C \uB179\uD654 \uCCAD\uD06C \uC54C\uB9BC\n      this.broadcast({\n        type: 'recording-chunk-saved',\n        filename,\n        size,\n        duration,\n        uploadedBy: userId,\n        timestamp: recordingMetadata.timestamp\n      }, userId);\n\n      await this.sendAnalytics('recording_chunk_saved', {\n        userId,\n        filename,\n        size,\n        duration\n      });\n\n    } catch (error) {\n      console.error('Recording chunk handling error:', error);\n    }\n  }\n\n  private async handleQualityReport(userId: string, data: any) {\n    try {\n      const { qualityData, timestamp } = data;\n      \n      // \uD488\uC9C8 \uB370\uC774\uD130\uB97C KV\uC5D0 \uC800\uC7A5 (\uC2E4\uC2DC\uAC04 \uBD84\uC11D\uC6A9)\n      if (this.env?.CACHE) {\n        const qualityKey = `quality:${this.roomId}:${userId}:${Date.now()}`;\n        const qualityReport = {\n          roomId: this.roomData.id,\n          userId,\n          timestamp: timestamp || new Date().toISOString(),\n          quality: qualityData,\n          participantCount: this.roomData.participants.length\n        };\n\n        await this.env.CACHE.put(qualityKey, JSON.stringify(qualityReport), {\n          expirationTtl: 3600 // 1\uC2DC\uAC04 \uBCF4\uAD00\n        });\n      }\n\n      // Analytics Engine\uC5D0 \uD488\uC9C8 \uB370\uC774\uD130 \uC804\uC1A1\n      await this.sendQualityAnalytics(userId, qualityData);\n\n      // \uD488\uC9C8\uC774 \uB098\uC05C \uACBD\uC6B0 \uB2E4\uB978 \uCC38\uAC00\uC790\uB4E4\uC5D0\uAC8C \uC54C\uB9BC\n      if (qualityData.overall === 'poor' || qualityData.overall === 'fair') {\n        this.broadcast({\n          type: 'quality-alert',\n          userId,\n          quality: qualityData.overall,\n          issues: this.extractQualityIssues(qualityData),\n          timestamp: new Date().toISOString()\n        }, userId);\n      }\n\n      // \uCC38\uAC00\uC790\uC758 \uD488\uC9C8 \uC815\uBCF4 \uC5C5\uB370\uC774\uD2B8\n      const participant = this.roomData.participants.find(p => p.id === userId);\n      if (participant) {\n        (participant as any).connectionQuality = qualityData.overall;\n        (participant as any).lastQualityUpdate = new Date().toISOString();\n        await this.saveRoomData();\n      }\n\n    } catch (error) {\n      console.error('Quality report handling error:', error);\n    }\n  }\n\n  private async sendQualityAnalytics(userId: string, qualityData: any) {\n    try {\n      if (this.env?.ANALYTICS) {\n        await this.env.ANALYTICS.writeDataPoint({\n          blobs: [this.roomData.id, userId, 'quality_report'],\n          doubles: [\n            qualityData.audio?.stats?.packetLossRate || 0,\n            qualityData.video?.stats?.packetLossRate || 0,\n            qualityData.network?.stats?.roundTripTime || 0,\n            qualityData.audio?.stats?.jitter || 0,\n            this.getQualityScore(qualityData.overall)\n          ],\n          indexes: [this.roomData.id, userId]\n        });\n      }\n    } catch (error) {\n      console.error('Quality analytics error:', error);\n    }\n  }\n\n  private getQualityScore(quality: string): number {\n    const scores: Record<string, number> = { 'excellent': 100, 'good': 75, 'fair': 50, 'poor': 25 };\n    return scores[quality] || 0;\n  }\n\n  private extractQualityIssues(qualityData: any): string[] {\n    const issues = [];\n    \n    if (qualityData.audio?.stats?.packetLossRate > 0.05) {\n      issues.push('audio_packet_loss');\n    }\n    \n    if (qualityData.video?.stats?.packetLossRate > 0.05) {\n      issues.push('video_packet_loss');\n    }\n    \n    if (qualityData.network?.stats?.roundTripTime > 300) {\n      issues.push('high_latency');\n    }\n    \n    if (qualityData.audio?.stats?.jitter > 50) {\n      issues.push('audio_jitter');\n    }\n    \n    return issues;\n  }\n  \n  private async restoreParticipants() {\n    const stored = await this.ctx.storage.get<RoomData>('roomData');\n    if (stored) {\n      this.roomData = stored;\n      \n      // Update participants based on active WebSockets\n      const activeParticipants = this.getActiveParticipants();\n      this.roomData.participants = activeParticipants;\n      \n      if (activeParticipants.length !== stored.participants.length) {\n        await this.saveRoomData();\n      }\n    }\n  }\n}\n\n// Type definitions\ninterface RoomMetrics {\n  totalParticipants: number;\n  peakParticipants: number;\n  messagesExchanged: number;\n  connectionErrors: number;\n  lastActivity: string;\n  sessionDuration: number; // in seconds\n}\n\ninterface RoomSettings {\n  allowScreenShare: boolean;\n  allowRecording: boolean;\n  autoMuteOnJoin: boolean;\n  stunServers?: RTCIceServer[];\n  turnServers?: RTCIceServer[];\n  recordingSettings?: RecordingSettings;\n}\n\ninterface RecordingSettings {\n  enabled: boolean;\n  autoStart: boolean;\n  maxDuration: number; // in minutes\n  format: 'webm' | 'mp4';\n  quality: 'low' | 'medium' | 'high';\n  audioOnly: boolean;\n}\n\ninterface RTCIceServer {\n  urls: string | string[];\n  username?: string;\n  credential?: string;\n}\n\ninterface RoomData {\n  id: string;\n  participants: Participant[];\n  maxParticipants: number;\n  createdAt: string;\n  type: 'audio' | 'video';\n  settings: RoomSettings;\n  metrics: RoomMetrics;\n  metadata?: Record<string, any>;\n}\n\ninterface Participant {\n  id: string;\n  name: string;\n  joinedAt: string;\n  audioEnabled: boolean;\n  videoEnabled: boolean;\n  isScreenSharing: boolean;\n  connectionQuality?: 'excellent' | 'good' | 'fair' | 'poor';\n  lastQualityUpdate?: string;\n}\n\ninterface WebSocketData {\n  userId: string;\n  userName: string;\n  joinedAt: string;\n}\n", "import { DurableObject } from 'cloudflare:workers';\nimport type { Env } from '../index';\nimport { updateUserStatus, touchUserStatus } from '../services/userStatus';\n\ninterface PresenceState {\n  userId: string;\n  status: 'ONLINE' | 'OFFLINE' | 'AWAY' | 'STUDYING';\n  lastSeenAt: string;\n  deviceInfo?: string;\n  sessionId?: string;\n  metadata?: Record<string, unknown>;\n}\n\nconst STATUS_KEY = 'status';\nconst ONLINE_LIST_PREFIX = 'presence:online';\nconst SESSION_PREFIX = 'presence:session';\nconst INACTIVE_THRESHOLD_MS = 15 * 60 * 1000; // 15\uBD84\n\nexport class UserPresence extends DurableObject {\n  env: Env;\n  private userId: string;\n\n  constructor(state: DurableObjectState, env: Env) {\n    super(state, env);\n    this.env = env;\n    this.userId = state.id.toString();\n  }\n\n  private async ensureState(): Promise<PresenceState | null> {\n    const cached = await this.ctx.storage.get<PresenceState>(STATUS_KEY);\n    if (cached) {\n      return cached;\n    }\n\n    const row = await this.env.DB.prepare(\n      `SELECT status, last_seen_at, device_info, current_session_id\n         FROM user_status WHERE user_id = ? LIMIT 1`\n    )\n      .bind(this.userId)\n      .first<{ status: string; last_seen_at: string | null; device_info: string | null; current_session_id: string | null }>();\n\n    if (!row) {\n      return null;\n    }\n\n    const state: PresenceState = {\n      userId: this.userId,\n      status: (row.status as PresenceState['status']) ?? 'OFFLINE',\n      lastSeenAt: row.last_seen_at ?? new Date().toISOString(),\n      deviceInfo: row.device_info ?? undefined,\n      sessionId: row.current_session_id ?? undefined\n    };\n\n    await this.ctx.storage.put(STATUS_KEY, state);\n    await this.updateIndexes(state);\n    return state;\n  }\n\n  async setStatus(request: Request): Promise<Response> {\n    const body = await request.json<PresenceState>();\n    const state: PresenceState = {\n      ...body,\n      userId: body.userId ?? this.userId,\n      lastSeenAt: body.lastSeenAt ?? new Date().toISOString()\n    };\n\n    await this.ctx.storage.put(STATUS_KEY, state);\n    await this.updateIndexes(state);\n    await updateUserStatus(this.env, state.userId, state.status, {\n      sessionId: state.sessionId,\n      deviceInfo: state.deviceInfo\n    });\n\n    return new Response(JSON.stringify(state), { status: 200, headers: { 'Content-Type': 'application/json' } });\n  }\n\n  async touch(): Promise<Response> {\n    const current = (await this.ctx.storage.get<PresenceState>(STATUS_KEY)) ?? (await this.ensureState());\n    if (!current) {\n      return new Response(JSON.stringify({ success: false, reason: 'USER_NOT_FOUND' }), { status: 404 });\n    }\n\n    const updated: PresenceState = {\n      ...current,\n      lastSeenAt: new Date().toISOString()\n    };\n\n    await this.ctx.storage.put(STATUS_KEY, updated);\n    await this.updateIndexes(updated);\n    await touchUserStatus(this.env, updated.userId);\n\n    return new Response(JSON.stringify({ success: true }), { status: 200, headers: { 'Content-Type': 'application/json' } });\n  }\n\n  async getStatus(): Promise<Response> {\n    const current = (await this.ctx.storage.get<PresenceState>(STATUS_KEY)) ?? (await this.ensureState());\n    if (!current) {\n      return new Response(JSON.stringify({ status: 'OFFLINE' }), { status: 200, headers: { 'Content-Type': 'application/json' } });\n    }\n    return new Response(JSON.stringify(current), { status: 200, headers: { 'Content-Type': 'application/json' } });\n  }\n\n  async setOffline(): Promise<Response> {\n    const current = (await this.ctx.storage.get<PresenceState>(STATUS_KEY)) ?? (await this.ensureState());\n    if (!current) {\n      return new Response(JSON.stringify({ success: true }), { status: 200 });\n    }\n\n    const updated: PresenceState = {\n      ...current,\n      status: 'OFFLINE',\n      sessionId: undefined,\n      lastSeenAt: new Date().toISOString()\n    };\n\n    await this.ctx.storage.put(STATUS_KEY, updated);\n    await this.updateIndexes(updated, { removeFromSession: current.sessionId });\n    await updateUserStatus(this.env, updated.userId, 'OFFLINE');\n\n    return new Response(JSON.stringify(updated), { status: 200, headers: { 'Content-Type': 'application/json' } });\n  }\n\n  async alarm(): Promise<void> {\n    const current = await this.ctx.storage.get<PresenceState>(STATUS_KEY);\n    if (!current) {\n      return;\n    }\n\n    const lastSeen = new Date(current.lastSeenAt).getTime();\n    if (Date.now() - lastSeen > INACTIVE_THRESHOLD_MS && current.status !== 'OFFLINE') {\n      await this.setOffline();\n    } else {\n      await this.scheduleAlarm();\n    }\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    const url = new URL(request.url);\n    switch (url.pathname) {\n      case '/status':\n        return this.getStatus();\n      case '/set':\n        if (request.method !== 'POST') return new Response('Method Not Allowed', { status: 405 });\n        await this.scheduleAlarm();\n        return this.setStatus(request);\n      case '/touch':\n        if (request.method !== 'POST') return new Response('Method Not Allowed', { status: 405 });\n        await this.scheduleAlarm();\n        return this.touch();\n      case '/offline':\n        if (request.method !== 'POST') return new Response('Method Not Allowed', { status: 405 });\n        return this.setOffline();\n      default:\n        return new Response('Not Found', { status: 404 });\n    }\n  }\n\n  private async updateIndexes(state: PresenceState, options: { removeFromSession?: string } = {}) {\n    const { status, userId, sessionId } = state;\n\n    if (!userId) return;\n\n    if (status === 'ONLINE' || status === 'STUDYING' || status === 'AWAY') {\n      await this.env.CACHE.put(`${ONLINE_LIST_PREFIX}:${userId}`, state.status, { expirationTtl: 60 * 10 });\n    } else {\n      await this.env.CACHE.delete(`${ONLINE_LIST_PREFIX}:${userId}`);\n    }\n\n    if (sessionId) {\n      await this.env.CACHE.put(`${SESSION_PREFIX}:${sessionId}:${userId}`, state.status, { expirationTtl: 60 * 10 });\n    }\n    if (options.removeFromSession) {\n      await this.env.CACHE.delete(`${SESSION_PREFIX}:${options.removeFromSession}:${userId}`);\n    }\n  }\n\n  private async scheduleAlarm() {\n    const alarmTime = Date.now() + INACTIVE_THRESHOLD_MS;\n    await this.ctx.storage.setAlarm(alarmTime);\n  }\n}\n", "import type { Env } from '../index';\n\nexport type PresenceStatus = 'ONLINE' | 'OFFLINE' | 'AWAY' | 'STUDYING';\n\nexport interface PresenceUpdateOptions {\n  sessionId?: string;\n  deviceInfo?: string;\n  metadata?: Record<string, unknown>;\n}\n\nfunction isoNow(): string {\n  return new Date().toISOString();\n}\n\nexport async function updateUserStatus(\n  env: Env,\n  userId: string,\n  status: PresenceStatus,\n  options: PresenceUpdateOptions = {}\n): Promise<void> {\n  const payload = {\n    userId,\n    status,\n    sessionId: options.sessionId ?? null,\n    deviceInfo: options.deviceInfo ?? null,\n    metadata: options.metadata ?? null,\n    updatedAt: isoNow()\n  };\n\n  const result: any = await env.DB.prepare(\n    `UPDATE user_status\n       SET status = ?,\n           current_session_id = ?,\n           device_info = ?,\n           last_seen_at = ?,\n           updated_at = ?\n     WHERE user_id = ?`\n  )\n    .bind(status, options.sessionId ?? null, options.deviceInfo ?? null, payload.updatedAt, payload.updatedAt, userId)\n    .run();\n\n  if (result.changes === 0) {\n    await env.DB.prepare(\n      `INSERT INTO user_status (\n          user_id,\n          status,\n          last_seen_at,\n          device_info,\n          current_session_id,\n          created_at,\n          updated_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?)`\n    )\n      .bind(\n        userId,\n        status,\n        payload.updatedAt,\n        options.deviceInfo ?? null,\n        options.sessionId ?? null,\n        payload.updatedAt,\n        payload.updatedAt\n      )\n      .run();\n  }\n}\n\nexport async function touchUserStatus(env: Env, userId: string): Promise<void> {\n  const now = isoNow();\n  const result: any = await env.DB.prepare(\n    `UPDATE user_status\n       SET last_seen_at = ?,\n           updated_at = ?\n     WHERE user_id = ?`\n  )\n    .bind(now, now, userId)\n    .run();\n\n  if (result.changes === 0) {\n    await env.DB.prepare(\n      `INSERT INTO user_status (\n          user_id,\n          status,\n          last_seen_at,\n          device_info,\n          current_session_id,\n          created_at,\n          updated_at\n        ) VALUES (?, 'OFFLINE', ?, NULL, NULL, ?, ?)`\n    )\n      .bind(userId, now, now, now)\n      .run();\n  }\n}\n\nexport async function setInactiveUsersOffline(env: Env, cutoffMinutes: number): Promise<number> {\n  const now = isoNow();\n  const cutoffDate = new Date(Date.now() - cutoffMinutes * 60 * 1000).toISOString();\n  const result: any = await env.DB.prepare(\n    `UPDATE user_status\n        SET status = 'OFFLINE',\n            current_session_id = NULL,\n            updated_at = ?,\n            device_info = device_info\n      WHERE status != 'OFFLINE'\n        AND last_seen_at IS NOT NULL\n        AND last_seen_at < ?`\n  )\n    .bind(now, cutoffDate)\n    .run();\n  return result.changes ?? 0;\n}\n", "import type { DurableObjectState } from '@cloudflare/workers-types';\nimport type { Env } from '../index';\nimport { createChatMessage, ChatMessageCreatePayload } from '../services/chat';\nimport { queryFirst } from '../utils/db';\nimport { AppError } from '../utils/errors';\nimport { verify } from 'hono/jwt';\nimport { assertEnvVar } from '../utils/security';\n\ninterface ConnectionState {\n  id: string;\n  userId: string;\n  subscriptions: Map<string, string>;\n  buffer: string;\n  profile?: { name?: string; profileImage?: string };\n}\n\ninterface StompFrame {\n  command: string;\n  headers: Record<string, string>;\n  body: string;\n}\n\nfunction nowIso(): string {\n  return new Date().toISOString();\n}\n\ninterface AuthInfo {\n  id: string;\n  name?: string;\n}\n\ninterface PublishEvent {\n  destination: string;\n  payload: unknown;\n  headers?: Record<string, string>;\n  userId?: string;\n}\n\nfunction parseStompFrame(raw: string): StompFrame | null {\n  const trimmed = raw.replace(/\\r/g, '');\n  if (!trimmed.trim()) {\n    return null;\n  }\n  const parts = trimmed.split('\\n');\n  const command = parts.shift() ?? '';\n  const headers: Record<string, string> = {};\n  while (parts.length > 0) {\n    const line = parts.shift() as string;\n    if (line === '') {\n      break;\n    }\n    const idx = line.indexOf(':');\n    if (idx > -1) {\n      const key = line.slice(0, idx).trim();\n      const value = line.slice(idx + 1).trim();\n      headers[key] = value;\n    }\n  }\n  const body = parts.join('\\n');\n  return { command, headers, body };\n}\n\nfunction serializeStompFrame(frame: StompFrame): string {\n  const headerLines = Object.entries(frame.headers)\n    .map(([key, value]) => `${key}:${value}`)\n    .join('\\n');\n  return `${frame.command}\\n${headerLines}\\n\\n${frame.body}\\0`;\n}\n\nfunction normalizeDestination(destination: string, userId?: string): string {\n  if (destination.startsWith('/user/')) {\n    const keyUser = userId ?? '';\n    return `${destination}|${keyUser}`;\n  }\n  return destination;\n}\n\nfunction safeJsonParse<T>(input: string): T | null {\n  try {\n    return JSON.parse(input) as T;\n  } catch {\n    return null;\n  }\n}\n\nfunction buildMessageFrame(\n  subscriptionId: string,\n  destination: string,\n  body: unknown\n): StompFrame {\n  return {\n    command: 'MESSAGE',\n    headers: {\n      subscription: subscriptionId,\n      'message-id': crypto.randomUUID(),\n      destination,\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(body ?? null)\n  };\n}\n\nexport class ChatHub {\n  private connections = new Map<WebSocket, ConnectionState>();\n  private destinationMap = new Map<string, Map<WebSocket, string>>();\n\n  constructor(private state: DurableObjectState, private env: Env) {}\n\n  async fetch(request: Request): Promise<Response> {\n    const upgradeHeader = request.headers.get('Upgrade');\n    if (upgradeHeader && upgradeHeader.toLowerCase() === 'websocket') {\n      const pair = new WebSocketPair();\n      const client = pair[0];\n      const server = pair[1];\n      this.acceptWebSocket(server);\n      return new Response(null, { status: 101, webSocket: client });\n    }\n\n    if (request.method === 'POST') {\n      const event = await request.json<PublishEvent>();\n      await this.publish(event.destination, event.payload, event.userId);\n      return new Response(null, { status: 204 });\n    }\n\n    return new Response('Not Found', { status: 404 });\n  }\n\n  private acceptWebSocket(socket: WebSocket, userId?: string) {\n    const id = crypto.randomUUID();\n    const state: ConnectionState = {\n      id,\n      userId: userId ?? '',\n      subscriptions: new Map(),\n      buffer: ''\n    };\n    this.connections.set(socket, state);\n\n    socket.accept();\n\n    socket.addEventListener('message', (event) => {\n      if (typeof event.data !== 'string') {\n        return;\n      }\n      state.buffer += event.data as string;\n      let frameEnd = state.buffer.indexOf('\\0');\n      while (frameEnd >= 0) {\n        const rawFrame = state.buffer.slice(0, frameEnd);\n        state.buffer = state.buffer.slice(frameEnd + 1);\n        const frame = parseStompFrame(rawFrame);\n        if (frame) {\n          this.handleFrame(socket, state, frame).catch((error) => {\n            console.error('[ChatHub] Failed to handle frame', error);\n          });\n        }\n        frameEnd = state.buffer.indexOf('\\0');\n      }\n    });\n\n    socket.addEventListener('close', () => {\n      this.cleanup(socket);\n    });\n\n    socket.addEventListener('error', () => {\n      this.cleanup(socket);\n    });\n  }\n\n  private async handleFrame(socket: WebSocket, state: ConnectionState, frame: StompFrame) {\n    switch (frame.command) {\n      case 'CONNECT': {\n        const auth = await this.authenticateConnection(frame.headers);\n        if (!auth) {\n          this.sendError(socket, 'Unauthorized');\n          socket.close(1008, 'Unauthorized');\n          return;\n        }\n        state.userId = auth.id;\n        const profile = await this.getUserProfile(auth.id);\n        state.profile = {\n          name: profile.name ?? auth.name,\n          profileImage: profile.profileImage\n        };\n        this.sendFrame(socket, {\n          command: 'CONNECTED',\n          headers: {\n            version: '1.2',\n            'heart-beat': '0,0'\n          },\n          body: ''\n        });\n        break;\n      }\n      case 'SUBSCRIBE': {\n        const destination = frame.headers.destination;\n        const subscriptionId = frame.headers.id;\n        if (!destination || !subscriptionId) {\n          this.sendError(socket, 'SUBSCRIBE frame missing destination or id');\n          return;\n        }\n        const key = normalizeDestination(destination, state.userId);\n        state.subscriptions.set(subscriptionId, key);\n        let subMap = this.destinationMap.get(key);\n        if (!subMap) {\n          subMap = new Map<WebSocket, string>();\n          this.destinationMap.set(key, subMap);\n        }\n        subMap.set(socket, subscriptionId);\n        break;\n      }\n      case 'UNSUBSCRIBE': {\n        const subscriptionId = frame.headers.id;\n        if (!subscriptionId) {\n          return;\n        }\n        const key = state.subscriptions.get(subscriptionId);\n        if (!key) {\n          return;\n        }\n        state.subscriptions.delete(subscriptionId);\n        const subMap = this.destinationMap.get(key);\n        subMap?.delete(socket);\n        if (subMap && subMap.size === 0) {\n          this.destinationMap.delete(key);\n        }\n        break;\n      }\n      case 'SEND': {\n        const destination = frame.headers.destination;\n        if (!destination) {\n          this.sendError(socket, 'SEND frame missing destination');\n          return;\n        }\n        await this.handleSend(socket, destination, frame.body, state);\n        break;\n      }\n      case 'DISCONNECT': {\n        socket.close(1000, 'Client disconnect');\n        break;\n      }\n      default:\n        // Ignore other commands for now\n        break;\n    }\n  }\n\n  private async handleSend(socket: WebSocket, destination: string, body: string, state: ConnectionState) {\n    if (!state.userId) {\n      this.sendError(socket, 'Unauthorized');\n      socket.close(1008, 'Unauthorized');\n      return;\n    }\n    if (destination === '/pub/chat/message') {\n      const parsed = safeJsonParse<Partial<ChatMessageCreatePayload>>(body) ?? {};\n      const roomId = Number(parsed.roomId);\n      if (!Number.isFinite(roomId)) {\n        throw new AppError('roomId\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 400, 'INVALID_ROOM_ID');\n      }\n      const message = await createChatMessage(this.env, state.userId, {\n        roomId,\n        message: parsed.message,\n        imageUrls: parsed.imageUrls,\n        audioData: parsed.audioData,\n        audioUrl: parsed.audioUrl,\n        messageType: parsed.messageType\n      });\n      await this.publish(`/sub/chat/room/${message.roomId}`, message);\n    } else if (destination === '/pub/chat/typing') {\n      const payload = safeJsonParse<{ roomId: number; isTyping: boolean }>(body);\n      if (!payload || !Number.isFinite(payload.roomId)) {\n        return;\n      }\n      const profile = state.profile ?? await this.getUserProfile(state.userId);\n      state.profile = profile;\n      await this.publish(`/sub/chat/room/${payload.roomId}/typing`, {\n        userId: state.userId,\n        userName: profile.name,\n        userProfileImage: profile.profileImage,\n        isTyping: Boolean(payload.isTyping),\n        timestamp: nowIso()\n      });\n    }\n  }\n\n  private async authenticateConnection(headers: Record<string, string>): Promise<AuthInfo | null> {\n    const authorization = headers['Authorization'] ?? headers['authorization'];\n    if (!authorization) {\n      return null;\n    }\n    const match = authorization.match(/^Bearer (.+)$/i);\n    if (!match) {\n      return null;\n    }\n    try {\n      const secret = assertEnvVar(this.env.JWT_SECRET, 'JWT_SECRET');\n      const verifyOptions: { alg: 'HS512'; iss?: string } = { alg: 'HS512' };\n      const issuer = this.env.JWT_ISSUER ?? this.env.API_BASE_URL;\n      if (issuer) {\n        verifyOptions.iss = issuer;\n      }\n      const payload = await verify(match[1], secret, verifyOptions);\n      const id = payload.sub ? String(payload.sub) : '';\n      if (!id) {\n        return null;\n      }\n      return { id, name: payload.name as string | undefined };\n    } catch {\n      return null;\n    }\n  }\n\n  private async getUserProfile(userId: string): Promise<{ name?: string; profileImage?: string }> {\n    const row = await queryFirst<{ name: string | null; profile_image: string | null }>(\n      this.env.DB,\n      'SELECT name, profile_image FROM users WHERE user_id = ? LIMIT 1',\n      [userId]\n    );\n    return {\n      name: row?.name ?? undefined,\n      profileImage: row?.profile_image ?? undefined\n    };\n  }\n\n  private async publish(destination: string, payload: unknown, userId?: string) {\n    const key = normalizeDestination(destination, userId);\n    const subscribers = this.destinationMap.get(key);\n    if (!subscribers || subscribers.size === 0) {\n      return;\n    }\n    for (const [socket, subscriptionId] of subscribers.entries()) {\n      if (socket.readyState !== WebSocket.OPEN) {\n        continue;\n      }\n      this.sendFrame(socket, buildMessageFrame(subscriptionId, destination, payload));\n    }\n  }\n\n  private sendFrame(socket: WebSocket, frame: StompFrame) {\n    try {\n      socket.send(serializeStompFrame(frame));\n    } catch (error) {\n      console.error('[ChatHub] Failed to send frame', error);\n      socket.close(1011, 'Frame send error');\n    }\n  }\n\n  private sendError(socket: WebSocket, message: string) {\n    this.sendFrame(socket, {\n      command: 'ERROR',\n      headers: { message },\n      body: message\n    });\n  }\n\n  private cleanup(socket: WebSocket) {\n    const state = this.connections.get(socket);\n    if (!state) {\n      return;\n    }\n    for (const [subscriptionId, key] of state.subscriptions.entries()) {\n      const subMap = this.destinationMap.get(key);\n      subMap?.delete(socket);\n      if (subMap && subMap.size === 0) {\n        this.destinationMap.delete(key);\n      }\n    }\n    this.connections.delete(socket);\n  }\n}\n", "export * from './auth';\nexport * from './error-handler';\nexport * from './logger';\nexport * from './security';\n\nimport { compress } from 'hono/compress';\nimport { etag } from 'hono/etag';\nimport { timeout } from 'hono/timeout';\nimport { requestId } from 'hono/request-id';\nimport { prettyJSON } from 'hono/pretty-json';\nimport { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport type { Variables } from '../types';\n\nimport { errorHandler } from './error-handler';\nimport { logger, performanceMonitor } from './logger';\nimport { securityHeaders, rateLimit } from './security';\n\n/**\n * \uAE30\uBCF8 \uBBF8\uB4E4\uC6E8\uC5B4 \uC124\uC815\n */\nexport function setupMiddleware(app: Hono) {\n    // CORS \uC124\uC815 (\uAC00\uC7A5 \uBA3C\uC800 \uC801\uC6A9)\n    app.use('*', cors({\n        origin: (origin) => {\n            // \uD5C8\uC6A9\uB41C \uC624\uB9AC\uC9C4 \uBAA9\uB85D\n            const allowedOrigins = [\n                'http://localhost:3000',\n                'http://localhost:5173',\n                'https://languagemate.kr',\n                'https://www.languagemate.kr',\n                'https://api.languagemate.kr'\n            ];\n\n            // \uC624\uB9AC\uC9C4\uC774 \uC5C6\uAC70\uB098 \uD5C8\uC6A9\uB41C \uBAA9\uB85D\uC5D0 \uC788\uC73C\uBA74 \uD5C8\uC6A9\n            if (!origin || allowedOrigins.includes(origin)) {\n                return origin || '*';\n            }\n\n            // Cloudflare \uAC1C\uBC1C \uD658\uACBD \uD5C8\uC6A9\n            if (origin.includes('.pages.dev') || origin.includes('.workers.dev')) {\n                return origin;\n            }\n\n            return null;\n        },\n        allowMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'],\n        allowHeaders: [\n            'Content-Type',\n            'Authorization',\n            'X-Requested-With',\n            'X-API-Key',\n            'X-Internal-Secret',\n            'X-Trace-ID'\n        ],\n        exposeHeaders: [\n            'Content-Length',\n            'X-Request-ID'\n        ],\n        credentials: true,\n        maxAge: 86400 // 24\uC2DC\uAC04\n    }));\n\n    // \uC694\uCCAD ID \uC0DD\uC131\n    app.use('*', requestId());\n\n    // \uC5D0\uB7EC \uD578\uB4E4\uB9C1\n    app.use('*', errorHandler);\n\n    // \uB85C\uAE45\n    app.use('*', logger);\n\n    // \uBCF4\uC548 \uD5E4\uB354 (CORS \uC774\uD6C4\uC5D0 \uC801\uC6A9)\n    app.use('*', securityHeaders);\n\n    return app;\n}\n", "import { Context, Next } from 'hono';\nimport { Variables } from '../types';\nimport { log, logger as utilLogger } from '../utils/logger';\n\nexport interface LogContext {\n    requestId: string;\n    method: string;\n    path: string;\n    ip?: string;\n    userAgent?: string;\n    userId?: string;\n    duration?: number;\n    status?: number;\n    error?: any;\n}\n\n/**\n * \uD658\uACBD \uCD08\uAE30\uD654\n */\nfunction initializeLogger(env?: any) {\n    if (env?.ENVIRONMENT) {\n        utilLogger.setEnvironment(env.ENVIRONMENT);\n    }\n}\n\n/**\n * \uC694\uCCAD ID \uC0DD\uC131\n */\nfunction generateRequestId(): string {\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n}\n\n/**\n * \uB85C\uAE45 \uBBF8\uB4E4\uC6E8\uC5B4\n * \uBAA8\uB4E0 \uC694\uCCAD/\uC751\uB2F5\uC744 \uAD6C\uC870\uD654\uB41C \uD615\uC2DD\uC73C\uB85C \uB85C\uAE45\n */\nexport async function logger(c: Context<{ Variables: Variables }>, next: Next) {\n    // \uD658\uACBD \uCD08\uAE30\uD654 (\uCD5C\uCD08 1\uD68C)\n    initializeLogger(c.env);\n\n    const requestId = c.req.header('X-Request-ID') || generateRequestId();\n    const startTime = Date.now();\n\n    // \uBCC0\uC218 \uC124\uC815\n    c.set('requestId', requestId);\n    c.set('startTime', startTime);\n\n    // \uC694\uCCAD \uB85C\uAE45\n    const logContext = {\n        requestId,\n        method: c.req.method,\n        path: c.req.path,\n        ip: c.req.header('CF-Connecting-IP') || c.req.header('X-Forwarded-For'),\n        userAgent: c.req.header('User-Agent'),\n        userId: c.get('userId')\n    };\n\n    log.info('Request received', logContext);\n\n    try {\n        await next();\n\n        // \uC751\uB2F5 \uB85C\uAE45\n        const duration = Date.now() - startTime;\n        log.api(c.req.method, c.req.path, c.res.status, duration, logContext);\n    } catch (error) {\n        // \uC5D0\uB7EC \uB85C\uAE45\n        const duration = Date.now() - startTime;\n        log.error(\n            'Request failed', \n            error instanceof Error ? error : new Error(String(error)),\n            { ...logContext, duration }\n        );\n        throw error;\n    }\n}\n\n/**\n * \uC131\uB2A5 \uBAA8\uB2C8\uD130\uB9C1 \uBBF8\uB4E4\uC6E8\uC5B4\n * \uB290\uB9B0 \uC694\uCCAD\uC744 \uAC10\uC9C0\uD558\uACE0 \uACBD\uACE0\n */\nexport function performanceMonitor(threshold: number = 3000) {\n    return async (c: Context<{ Variables: Variables }>, next: Next) => {\n        const startTime = c.get('startTime');\n\n        await next();\n\n        const duration = Date.now() - startTime;\n        if (duration > threshold) {\n            log.warn('Slow request detected', {\n                requestId: c.get('requestId'),\n                method: c.req.method,\n                path: c.req.path,\n                duration,\n                status: c.res.status,\n                component: 'PERFORMANCE'\n            });\n        }\n    };\n}", "// src/middleware/request-id/index.ts\nimport { requestId } from \"./request-id.js\";\nexport {\n  requestId\n};\n", "// src/middleware/request-id/request-id.ts\nvar requestId = ({\n  limitLength = 255,\n  headerName = \"X-Request-Id\",\n  generator = () => crypto.randomUUID()\n} = {}) => {\n  return async function requestId2(c, next) {\n    let reqId = headerName ? c.req.header(headerName) : void 0;\n    if (!reqId || reqId.length > limitLength || /[^\\w\\-]/.test(reqId)) {\n      reqId = generator(c);\n    }\n    c.set(\"requestId\", reqId);\n    if (headerName) {\n      c.header(headerName, reqId);\n    }\n    await next();\n  };\n};\nexport {\n  requestId\n};\n", "import { verify } from 'hono/jwt';\nimport type { Context } from 'hono';\n\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { assertEnvVar } from '../utils/security';\nimport { listNotifications } from '../services/notifications';\nimport type { NotificationListItem } from '../types';\n\ninterface StompFrame {\n  command: string;\n  headers: Record<string, string>;\n  body: string;\n}\n\ninterface SubscriptionContext {\n  destination: string;\n  pollTimer?: ReturnType<typeof setTimeout>;\n}\n\nconst HEARTBEAT_INTERVAL_MS = 25000;\nconst NOTIFICATION_POLL_INTERVAL_MS = 15000;\nconst MAX_SENT_HISTORY = 200;\n\nexport async function handleNotificationWebSocket(\n  c: Context<{ Bindings: Env; Variables: Variables }>\n): Promise<Response> {\n  const url = new URL(c.req.url);\n  const token = url.searchParams.get('token')\n    ?? extractBearerToken(c.req.header('Authorization'))\n    ?? '';\n\n  const user = await verifyUserToken(token, c.env);\n  if (!user) {\n    return new Response('Unauthorized', { status: 401 });\n  }\n\n  const { 0: client, 1: server } = new WebSocketPair();\n  const session = new NotificationSocketSession(server, c.env, user.id);\n  session.start();\n\n  return new Response(null, { status: 101, webSocket: client });\n}\n\nfunction extractBearerToken(authorizationHeader?: string | null): string | undefined {\n  if (!authorizationHeader) return undefined;\n  const match = authorizationHeader.match(/^Bearer (.+)$/i);\n  return match?.[1];\n}\n\nasync function verifyUserToken(token: string, env: Env): Promise<{ id: string } | null> {\n  if (!token) return null;\n  try {\n    const secret = assertEnvVar(env.JWT_SECRET, 'JWT_SECRET');\n    const verifyOptions: { alg: 'HS512'; iss?: string } = { alg: 'HS512' };\n    const issuer = env.JWT_ISSUER ?? env.API_BASE_URL;\n    if (issuer) {\n      verifyOptions.iss = issuer;\n    }\n\n    const payload = await verify(token, secret, verifyOptions);\n    if (typeof payload.sub !== 'string') {\n      return null;\n    }\n    return { id: payload.sub };\n  } catch (error) {\n    console.error('[notifications-ws] Failed to verify token', error);\n    return null;\n  }\n}\n\nclass NotificationSocketSession {\n  private readonly ws: WebSocket;\n  private readonly env: Env;\n  private readonly userId: string;\n  private buffer = '';\n  private connected = false;\n  private heartbeatTimer?: ReturnType<typeof setTimeout>;\n  private readonly subscriptions = new Map<string, SubscriptionContext>();\n  private readonly sentHistory = new Set<number>();\n  private readonly sentOrder: number[] = [];\n\n  constructor(ws: WebSocket, env: Env, userId: string) {\n    this.ws = ws;\n    this.env = env;\n    this.userId = userId;\n  }\n\n  start() {\n    this.ws.accept();\n    this.ws.addEventListener('message', (event) => {\n      this.handleIncomingData(event.data);\n    });\n    this.ws.addEventListener('close', () => {\n      this.cleanup();\n    });\n    this.ws.addEventListener('error', (event) => {\n      console.error('[notifications-ws] Socket error', event);\n      this.cleanup();\n    });\n  }\n\n  private handleIncomingData(data: unknown) {\n    const text = typeof data === 'string'\n      ? data\n      : data instanceof ArrayBuffer\n        ? new TextDecoder().decode(data)\n        : '';\n\n    if (!text) {\n      return;\n    }\n\n    this.buffer += text;\n\n    while (true) {\n      const terminatorIndex = this.buffer.indexOf('\\u0000');\n      if (terminatorIndex === -1) {\n        break;\n      }\n\n      const frameText = this.buffer.slice(0, terminatorIndex);\n      this.buffer = this.buffer.slice(terminatorIndex + 1);\n\n      const trimmed = frameText.trim();\n      if (trimmed === '') {\n        continue; // heartbeat\n      }\n\n      const frame = this.parseFrame(frameText);\n      if (frame) {\n        this.handleFrame(frame);\n      }\n    }\n  }\n\n  private parseFrame(raw: string): StompFrame | null {\n    const lines = raw.split('\\n');\n    if (!lines.length) return null;\n\n    const command = lines.shift()?.trim() ?? '';\n    if (!command) return null;\n\n    const headers: Record<string, string> = {};\n    let line: string | undefined;\n    while ((line = lines.shift()) !== undefined) {\n      if (line === '') break;\n      const separatorIndex = line.indexOf(':');\n      if (separatorIndex === -1) continue;\n      const key = line.slice(0, separatorIndex).trim();\n      const value = line.slice(separatorIndex + 1).trim();\n      headers[key] = value;\n    }\n\n    const body = lines.join('\\n');\n    return { command, headers, body };\n  }\n\n  private handleFrame(frame: StompFrame) {\n    const { command } = frame;\n    switch (command) {\n      case 'CONNECT':\n      case 'STOMP':\n        this.handleConnect(frame);\n        break;\n      case 'SUBSCRIBE':\n        this.handleSubscribe(frame);\n        break;\n      case 'UNSUBSCRIBE':\n        this.handleUnsubscribe(frame);\n        break;\n      case 'DISCONNECT':\n        this.handleDisconnect(frame);\n        break;\n      case 'SEND':\n        // Notifications are server-driven; acknowledge politely\n        this.ackReceipt(frame.headers['receipt']);\n        break;\n      default:\n        console.warn('[notifications-ws] Unsupported STOMP command', command);\n        this.sendError(`Unsupported command: ${command}`);\n    }\n  }\n\n  private handleConnect(frame: StompFrame) {\n    if (this.connected) {\n      return;\n    }\n\n    const heartbeatHeader = frame.headers['heart-beat'] ?? '0,0';\n    const [, clientHeartbeatRaw] = heartbeatHeader.split(',');\n    const clientHeartbeat = Number(clientHeartbeatRaw) || 0;\n    const serverHeartbeat = Math.max(clientHeartbeat, HEARTBEAT_INTERVAL_MS);\n\n    this.connected = true;\n    this.sendFrame('CONNECTED', {\n      version: '1.2',\n      'heart-beat': `0,${serverHeartbeat}`\n    });\n\n    this.scheduleHeartbeat(serverHeartbeat);\n  }\n\n  private scheduleHeartbeat(interval: number) {\n    if (interval <= 0) return;\n    const sendBeat = () => {\n      if (this.ws.readyState === WebSocket.OPEN) {\n        this.ws.send('\\n');\n        this.heartbeatTimer = setTimeout(sendBeat, interval);\n      }\n    };\n    this.heartbeatTimer = setTimeout(sendBeat, interval);\n  }\n\n  private handleSubscribe(frame: StompFrame) {\n    const id = frame.headers['id'] ?? crypto.randomUUID();\n    const destination = frame.headers['destination'];\n\n    if (!destination) {\n      this.sendError('SUBSCRIBE frame missing destination header');\n      return;\n    }\n\n    this.subscriptions.set(id, { destination });\n\n    if (destination.includes('notifications')) {\n      this.startNotificationPolling(id, destination);\n    }\n\n    this.ackReceipt(frame.headers['receipt']);\n  }\n\n  private handleUnsubscribe(frame: StompFrame) {\n    const id = frame.headers['id'];\n    if (!id) {\n      this.sendError('UNSUBSCRIBE frame missing id header');\n      return;\n    }\n    this.stopNotificationPolling(id);\n    this.subscriptions.delete(id);\n    this.ackReceipt(frame.headers['receipt']);\n  }\n\n  private handleDisconnect(frame: StompFrame) {\n    this.ackReceipt(frame.headers['receipt']);\n    this.cleanup();\n    this.ws.close(1000, 'Client disconnected');\n  }\n\n  private ackReceipt(receiptId?: string) {\n    if (!receiptId) return;\n    this.sendFrame('RECEIPT', { 'receipt-id': receiptId });\n  }\n\n  private sendError(message: string) {\n    this.sendFrame('ERROR', { message }, message);\n  }\n\n  private sendFrame(command: string, headers: Record<string, string> = {}, body = '') {\n    if (this.ws.readyState !== WebSocket.OPEN) {\n      return;\n    }\n\n    const headerLines = Object.entries(headers).map(([key, value]) => `${key}:${value}`);\n    const frame = [command, ...headerLines, '', body, '\\u0000'].join('\\n');\n    this.ws.send(frame);\n  }\n\n  private async startNotificationPolling(subscriptionId: string, destination: string) {\n    const poll = async () => {\n      try {\n        await this.sendNotificationSnapshot(subscriptionId, destination);\n      } catch (error) {\n        console.error('[notifications-ws] Failed to send notification snapshot', error);\n      }\n\n      const context = this.subscriptions.get(subscriptionId);\n      if (!context) return;\n      context.pollTimer = setTimeout(poll, NOTIFICATION_POLL_INTERVAL_MS);\n    };\n\n    await poll();\n  }\n\n  private stopNotificationPolling(subscriptionId: string) {\n    const context = this.subscriptions.get(subscriptionId);\n    if (context?.pollTimer) {\n      clearTimeout(context.pollTimer);\n    }\n  }\n\n  private async sendNotificationSnapshot(subscriptionId: string, destination: string) {\n    const result = await listNotifications(this.env, this.userId, {\n      page: 1,\n      size: 20,\n      unreadOnly: true\n    });\n\n    const freshNotifications = result.data.filter((item) => this.registerNotification(item.id));\n\n    for (const notification of freshNotifications) {\n      const payload = this.serializeNotification(notification, result.unreadCount);\n      this.sendFrame('MESSAGE', {\n        subscription: subscriptionId,\n        'message-id': crypto.randomUUID(),\n        destination,\n        'content-type': 'application/json'\n      }, payload);\n    }\n  }\n\n  private registerNotification(notificationId: number): boolean {\n    if (this.sentHistory.has(notificationId)) {\n      return false;\n    }\n\n    this.sentHistory.add(notificationId);\n    this.sentOrder.push(notificationId);\n\n    if (this.sentOrder.length > MAX_SENT_HISTORY) {\n      const expired = this.sentOrder.shift();\n      if (typeof expired === 'number') {\n        this.sentHistory.delete(expired);\n      }\n    }\n\n    return true;\n  }\n\n  private serializeNotification(notification: NotificationListItem, unreadCount: number): string {\n    const payload = {\n      ...notification,\n      unreadCount,\n      timestamp: new Date().toISOString()\n    };\n    return JSON.stringify(payload);\n  }\n\n  private cleanup() {\n    if (this.heartbeatTimer) {\n      clearTimeout(this.heartbeatTimer);\n      this.heartbeatTimer = undefined;\n    }\n\n    for (const [id, context] of this.subscriptions.entries()) {\n      if (context.pollTimer) {\n        clearTimeout(context.pollTimer);\n      }\n      this.subscriptions.delete(id);\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": ["init_performance", "init_performance", "PerformanceMark", "init_performance", "init_performance", "init_performance", "init_performance", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "init_console", "init_performance", "init_console", "init_performance", "hrtime", "init_performance", "init_performance", "dir", "env", "count", "init_performance", "init_performance", "init_performance", "cwd", "hrtime", "assert", "init_process", "init_performance", "init_process", "init_performance", "init_performance", "init_performance", "init_performance", "raw", "init_performance", "context", "init_performance", "init_performance", "init_cookie", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "platform", "init_performance", "init_performance", "init_performance", "init_performance", "init_jwt", "init_performance", "verifyWithJwks", "verify", "decode", "sign", "init_jwt", "init_performance", "init_cookie", "init_jwt", "init_performance", "init_performance", "errorHandler", "error", "requestId", "isValid", "init_performance", "env", "error", "init_performance", "init_performance", "env", "nowIso", "sign", "config", "init_performance", "init_jwt", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "context", "init_performance", "init_performance", "app", "env", "context", "init_performance", "init_performance", "init_performance", "context", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "Node", "Node", "Hono", "init_performance", "init_performance", "init_performance", "init_jwt", "init_performance", "init_performance", "init_performance", "env", "context", "error", "log", "errorHandler", "error", "log", "notFoundHandler", "env", "verify", "error", "permission", "init_performance", "init_performance", "error", "log", "error", "log", "raw", "error", "log", "init_performance", "error", "Hono", "env", "raw", "error", "log", "answer", "init_performance", "init_performance", "raw", "error", "Hono", "error", "id", "room", "init_performance", "init_performance", "Hono", "error", "init_performance", "Hono", "error", "log", "init_performance", "app", "Hono", "error", "context", "init_performance", "app", "Hono", "error", "init_performance", "init_performance", "util", "objectUtil", "error", "errorUtil", "errorMap", "version", "ctx", "result", "issues", "elements", "processed", "ZodFirstPartyTypeKind", "init_performance", "init_jwt", "verify", "error", "log", "app", "Hono", "env", "config", "error", "log", "app", "init_performance", "init_performance", "init_performance", "profile", "env", "error", "app", "Hono", "error", "init_performance", "app", "Hono", "error", "log", "init_performance", "app", "Hono", "query", "error", "streamMetrics", "getFieldIndex", "init_performance", "init_performance", "Hono", "log", "error", "room", "context", "init_performance", "init_performance", "env", "profile", "error", "Hono", "error", "profile", "init_performance", "init_performance", "env", "error", "table", "profile", "Hono", "error", "env", "profile", "info", "raw", "init_performance", "init_performance", "env", "nowIso", "raw", "progressKey", "Hono", "requireAuth", "wrapError", "error", "raw", "env", "profile", "normalizedCode", "init_performance", "init_performance", "env", "createSession", "title", "raw", "Hono", "requireAuth", "createSession", "init_performance", "init_performance", "nowIso", "error", "raw", "time", "env", "env", "nowIso", "error", "title", "Hono", "requireAuth", "count", "init_performance", "init_performance", "init_performance", "DEFAULT_TTL_SECONDS", "env", "init_performance", "env", "raw", "env", "nowIso", "cloneParticipants", "env", "init_performance", "error", "log", "env", "Hono", "requireAuth", "getPaginationParams", "init_performance", "Hono", "requireAuth", "init_performance", "Hono", "requireAuth", "env", "requireAuth", "init_performance", "init_performance", "env", "nowIso", "addDays", "requestId", "partnerTargets", "Hono", "requireAuth", "getPaginationParams", "env", "error", "requestId", "init_performance", "init_performance", "env", "Hono", "requireAuth", "requireUserId", "init_performance", "init_performance", "nowIso", "toBoolean", "fetchParticipants", "env", "Hono", "requireAuth", "requireUserId", "raw", "error", "count", "init_performance", "Hono", "requireAuth", "env", "profile", "init_performance", "env", "error", "log", "init_performance", "DurableObject", "init_performance", "env", "SESSION_PREFIX", "DurableObject", "env", "init_performance", "init_jwt", "nowIso", "raw", "env", "error", "auth", "profile", "verify", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_jwt", "env", "verify", "error", "raw", "context", "env", "error", "app", "Hono", "errorHandler", "handleOAuthCallback", "AppError", "notFoundHandler"]
}
