{
  "version": 3,
  "sources": ["../../../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../node_modules/unenv/dist/runtime/node/perf_hooks.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../node_modules/unenv/dist/runtime/node/console.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/tty.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "wrangler-modules-watch:wrangler:modules-watch", "../../../node_modules/wrangler/templates/modules-watch-stub.js", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/utils/cookie.js", "../../../node_modules/hono/dist/helper/cookie/index.js", "../../../node_modules/hono/dist/http-exception.js", "../../../node_modules/hono/dist/utils/encode.js", "../../../node_modules/hono/dist/utils/jwt/jwa.js", "../../../node_modules/hono/dist/helper/adapter/index.js", "../../../node_modules/hono/dist/utils/jwt/types.js", "../../../node_modules/hono/dist/utils/jwt/utf8.js", "../../../node_modules/hono/dist/utils/jwt/jws.js", "../../../node_modules/hono/dist/utils/jwt/jwt.js", "../../../node_modules/hono/dist/utils/jwt/index.js", "../../../node_modules/hono/dist/middleware/jwt/jwt.js", "../../../node_modules/hono/dist/middleware/jwt/index.js", "../../../src/utils/errors.ts", "../../../src/utils/security.ts", "../../../src/middleware/analytics.ts", "../../../src/utils/db.ts", "../../../src/utils/userAgent.ts", "../../../src/services/auth.ts", "../bundle-FXIIUY/middleware-loader.entry.ts", "../bundle-FXIIUY/middleware-insertion-facade.js", "../../../src/index.ts", "../../../node_modules/hono/dist/index.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/router/reg-exp-router/index.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/smart-router/index.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/index.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../src/routes/levelTest.ts", "../../../src/middleware/auth.ts", "../../../src/middleware/error-handler.ts", "../../../src/types/index.ts", "../../../src/utils/logger.ts", "../../../src/utils/response.ts", "../../../src/services/ai.ts", "../../../src/services/advancedLevelEvaluation.ts", "../../../src/services/storage.ts", "../../../src/routes/webrtc.ts", "../../../src/utils/activeRooms.ts", "../../../src/routes/upload.ts", "../../../src/middleware/security.ts", "../../../src/routes/whisper.ts", "../../../src/routes/llm.ts", "../../../src/routes/images.ts", "../../../src/routes/transcribe.ts", "../../../node_modules/zod/index.js", "../../../node_modules/zod/v4/classic/external.js", "../../../node_modules/zod/v4/core/index.js", "../../../node_modules/zod/v4/core/core.js", "../../../node_modules/zod/v4/core/parse.js", "../../../node_modules/zod/v4/core/errors.js", "../../../node_modules/zod/v4/core/util.js", "../../../node_modules/zod/v4/core/schemas.js", "../../../node_modules/zod/v4/core/checks.js", "../../../node_modules/zod/v4/core/regexes.js", "../../../node_modules/zod/v4/core/doc.js", "../../../node_modules/zod/v4/core/versions.js", "../../../node_modules/zod/v4/locales/index.js", "../../../node_modules/zod/v4/locales/ar.js", "../../../node_modules/zod/v4/locales/az.js", "../../../node_modules/zod/v4/locales/be.js", "../../../node_modules/zod/v4/locales/bg.js", "../../../node_modules/zod/v4/locales/ca.js", "../../../node_modules/zod/v4/locales/cs.js", "../../../node_modules/zod/v4/locales/da.js", "../../../node_modules/zod/v4/locales/de.js", "../../../node_modules/zod/v4/locales/en.js", "../../../node_modules/zod/v4/locales/eo.js", "../../../node_modules/zod/v4/locales/es.js", "../../../node_modules/zod/v4/locales/fa.js", "../../../node_modules/zod/v4/locales/fi.js", "../../../node_modules/zod/v4/locales/fr.js", "../../../node_modules/zod/v4/locales/fr-CA.js", "../../../node_modules/zod/v4/locales/he.js", "../../../node_modules/zod/v4/locales/hu.js", "../../../node_modules/zod/v4/locales/id.js", "../../../node_modules/zod/v4/locales/is.js", "../../../node_modules/zod/v4/locales/it.js", "../../../node_modules/zod/v4/locales/ja.js", "../../../node_modules/zod/v4/locales/ka.js", "../../../node_modules/zod/v4/locales/kh.js", "../../../node_modules/zod/v4/locales/km.js", "../../../node_modules/zod/v4/locales/ko.js", "../../../node_modules/zod/v4/locales/lt.js", "../../../node_modules/zod/v4/locales/mk.js", "../../../node_modules/zod/v4/locales/ms.js", "../../../node_modules/zod/v4/locales/nl.js", "../../../node_modules/zod/v4/locales/no.js", "../../../node_modules/zod/v4/locales/ota.js", "../../../node_modules/zod/v4/locales/ps.js", "../../../node_modules/zod/v4/locales/pl.js", "../../../node_modules/zod/v4/locales/pt.js", "../../../node_modules/zod/v4/locales/ru.js", "../../../node_modules/zod/v4/locales/sl.js", "../../../node_modules/zod/v4/locales/sv.js", "../../../node_modules/zod/v4/locales/ta.js", "../../../node_modules/zod/v4/locales/th.js", "../../../node_modules/zod/v4/locales/tr.js", "../../../node_modules/zod/v4/locales/ua.js", "../../../node_modules/zod/v4/locales/uk.js", "../../../node_modules/zod/v4/locales/ur.js", "../../../node_modules/zod/v4/locales/vi.js", "../../../node_modules/zod/v4/locales/zh-CN.js", "../../../node_modules/zod/v4/locales/zh-TW.js", "../../../node_modules/zod/v4/locales/yo.js", "../../../node_modules/zod/v4/core/registries.js", "../../../node_modules/zod/v4/core/api.js", "../../../node_modules/zod/v4/core/to-json-schema.js", "../../../node_modules/zod/v4/core/json-schema.js", "../../../node_modules/zod/v4/classic/schemas.js", "../../../node_modules/zod/v4/classic/checks.js", "../../../node_modules/zod/v4/classic/iso.js", "../../../node_modules/zod/v4/classic/parse.js", "../../../node_modules/zod/v4/classic/errors.js", "../../../node_modules/zod/v4/classic/compat.js", "../../../node_modules/zod/v4/classic/coerce.js", "../../../src/utils/auth.ts", "../../../src/routes/cache.ts", "../../../src/middleware/cache.ts", "../../../src/services/cache.ts", "../../../src/routes/translate.ts", "../../../src/routes/analytics.ts", "../../../src/services/learningAnalytics.ts", "../../../src/routes/internal.ts", "../../../src/constants/whisper.ts", "../../../src/routes/auth.ts", "../../../src/services/user.ts", "../../../src/middleware/rateLimit.ts", "../../../src/routes/users.ts", "../../../src/services/onboarding.ts", "../../../src/routes/onboarding.ts", "../../../src/services/onboardingState.ts", "../../../src/routes/sessions.ts", "../../../src/services/session.ts", "../../../src/routes/notifications.ts", "../../../src/services/notifications.ts", "../../../src/routes/groupSessions.ts", "../../../src/services/groupSessions.ts", "../../../src/services/groupSessionsCache.ts", "../../../src/services/groupSessionsState.ts", "../../../src/services/groupSessionsAI.ts", "../../../src/routes/groupSessionsAI.ts", "../../../src/routes/presence.ts", "../../../src/routes/matching.ts", "../../../src/services/matching.ts", "../../../src/services/aiMatching.ts", "../../../src/routes/achievements.ts", "../../../src/services/achievement.ts", "../../../src/routes/chat.ts", "../../../src/services/chat.ts", "../../../src/routes/settings.ts", "../../../src/routes/pronunciation.ts", "../../../src/services/pronunciationEvaluation.ts", "../../../src/durable/WebRTCRoom.ts", "../../../src/durable/UserPresence.ts", "../../../src/services/userStatus.ts", "../../../src/durable/ChatHub.ts", "../../../src/middleware/index.ts", "../../../src/middleware/logger.ts", "../../../node_modules/hono/dist/middleware/request-id/index.js", "../../../node_modules/hono/dist/middleware/request-id/request-id.js", "../../../src/websocket/notificationSocket.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "/Users/minhan/Desktop/public-repo/studymate/STYDYMATE-CLIENT/workers/.wrangler/tmp/dev-uy8TA5",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import { IntervalHistogram, RecordableHistogram } from \"./internal/perf_hooks/histogram.mjs\";\nimport { performance, Performance, PerformanceEntry, PerformanceMark, PerformanceMeasure, PerformanceObserverEntryList, PerformanceObserver, PerformanceResourceTiming } from \"./internal/perf_hooks/performance.mjs\";\nexport * from \"./internal/perf_hooks/performance.mjs\";\n// prettier-ignore\nimport { NODE_PERFORMANCE_GC_MAJOR, NODE_PERFORMANCE_GC_MINOR, NODE_PERFORMANCE_GC_INCREMENTAL, NODE_PERFORMANCE_GC_WEAKCB, NODE_PERFORMANCE_GC_FLAGS_NO, NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED, NODE_PERFORMANCE_GC_FLAGS_FORCED, NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING, NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE, NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY, NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE, NODE_PERFORMANCE_ENTRY_TYPE_GC, NODE_PERFORMANCE_ENTRY_TYPE_HTTP, NODE_PERFORMANCE_ENTRY_TYPE_HTTP2, NODE_PERFORMANCE_ENTRY_TYPE_NET, NODE_PERFORMANCE_ENTRY_TYPE_DNS, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN, NODE_PERFORMANCE_MILESTONE_ENVIRONMENT, NODE_PERFORMANCE_MILESTONE_NODE_START, NODE_PERFORMANCE_MILESTONE_V8_START, NODE_PERFORMANCE_MILESTONE_LOOP_START, NODE_PERFORMANCE_MILESTONE_LOOP_EXIT, NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE } from \"./internal/perf_hooks/constants.mjs\";\n// prettier-ignore\nexport const constants = {\n\tNODE_PERFORMANCE_GC_MAJOR,\n\tNODE_PERFORMANCE_GC_MINOR,\n\tNODE_PERFORMANCE_GC_INCREMENTAL,\n\tNODE_PERFORMANCE_GC_WEAKCB,\n\tNODE_PERFORMANCE_GC_FLAGS_NO,\n\tNODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED,\n\tNODE_PERFORMANCE_GC_FLAGS_FORCED,\n\tNODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY,\n\tNODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE,\n\tNODE_PERFORMANCE_ENTRY_TYPE_GC,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP2,\n\tNODE_PERFORMANCE_ENTRY_TYPE_NET,\n\tNODE_PERFORMANCE_ENTRY_TYPE_DNS,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN,\n\tNODE_PERFORMANCE_MILESTONE_ENVIRONMENT,\n\tNODE_PERFORMANCE_MILESTONE_NODE_START,\n\tNODE_PERFORMANCE_MILESTONE_V8_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_EXIT,\n\tNODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE\n};\nexport const monitorEventLoopDelay = function(_options) {\n\treturn new IntervalHistogram();\n};\nexport const createHistogram = function(_options) {\n\treturn new RecordableHistogram();\n};\nexport default {\n\tPerformance,\n\tPerformanceMark,\n\tPerformanceEntry,\n\tPerformanceMeasure,\n\tPerformanceObserverEntryList,\n\tPerformanceObserver,\n\tPerformanceResourceTiming,\n\tperformance,\n\tconstants,\n\tcreateHistogram,\n\tmonitorEventLoopDelay\n};\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "import { ReadStream } from \"./internal/tty/read-stream.mjs\";\nimport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport { ReadStream } from \"./internal/tty/read-stream.mjs\";\nexport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport const isatty = function() {\n\treturn false;\n};\nexport default {\n\tReadStream,\n\tWriteStream,\n\tisatty\n};\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nconst workerdProcess = getBuiltinModule(\"node:process\");\nconst isWorkerdProcessV2 = globalThis.Cloudflare.compatibilityFlags.enable_nodejs_process_v2;\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  // `hrtime` is only available from workerd process v2\n  hrtime: isWorkerdProcessV2 ? workerdProcess.hrtime : UnenvHrTime,\n  // `nextTick` is available from workerd process v1\n  nextTick: workerdProcess.nextTick\n});\nexport const { exit, features, platform } = workerdProcess;\nexport const {\n  // Always implemented by workerd\n  env,\n  // Only implemented in workerd v2\n  hrtime,\n  // Always implemented by workerd\n  nextTick\n} = unenvProcess;\nexport const {\n  _channel,\n  _disconnect,\n  _events,\n  _eventsCount,\n  _handleQueue,\n  _maxListeners,\n  _pendingMessage,\n  _send,\n  assert,\n  disconnect,\n  mainModule\n} = unenvProcess;\nexport const {\n  // @ts-expect-error `_debugEnd` is missing typings\n  _debugEnd,\n  // @ts-expect-error `_debugProcess` is missing typings\n  _debugProcess,\n  // @ts-expect-error `_exiting` is missing typings\n  _exiting,\n  // @ts-expect-error `_fatalException` is missing typings\n  _fatalException,\n  // @ts-expect-error `_getActiveHandles` is missing typings\n  _getActiveHandles,\n  // @ts-expect-error `_getActiveRequests` is missing typings\n  _getActiveRequests,\n  // @ts-expect-error `_kill` is missing typings\n  _kill,\n  // @ts-expect-error `_linkedBinding` is missing typings\n  _linkedBinding,\n  // @ts-expect-error `_preload_modules` is missing typings\n  _preload_modules,\n  // @ts-expect-error `_rawDebug` is missing typings\n  _rawDebug,\n  // @ts-expect-error `_startProfilerIdleNotifier` is missing typings\n  _startProfilerIdleNotifier,\n  // @ts-expect-error `_stopProfilerIdleNotifier` is missing typings\n  _stopProfilerIdleNotifier,\n  // @ts-expect-error `_tickCallback` is missing typings\n  _tickCallback,\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  arch,\n  argv,\n  argv0,\n  availableMemory,\n  // @ts-expect-error `binding` is missing typings\n  binding,\n  channel,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  // @ts-expect-error `domain` is missing typings\n  domain,\n  emit,\n  emitWarning,\n  eventNames,\n  execArgv,\n  execPath,\n  exitCode,\n  finalization,\n  getActiveResourcesInfo,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getMaxListeners,\n  getuid,\n  hasUncaughtExceptionCaptureCallback,\n  // @ts-expect-error `initgroups` is missing typings\n  initgroups,\n  kill,\n  listenerCount,\n  listeners,\n  loadEnvFile,\n  memoryUsage,\n  // @ts-expect-error `moduleLoadList` is missing typings\n  moduleLoadList,\n  off,\n  on,\n  once,\n  // @ts-expect-error `openStdin` is missing typings\n  openStdin,\n  permission,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  // @ts-expect-error `reallyExit` is missing typings\n  reallyExit,\n  ref,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  send,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  setuid,\n  setUncaughtExceptionCaptureCallback,\n  sourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  throwDeprecation,\n  title,\n  traceDeprecation,\n  umask,\n  unref,\n  uptime,\n  version,\n  versions\n} = isWorkerdProcessV2 ? workerdProcess : unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\n    \"/\",\n    url.charCodeAt(9) === 58 ? 13 : 8\n  );\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/utils/cookie.ts\nimport { decodeURIComponent_, tryDecode } from \"./url.js\";\nvar algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\nvar getCryptoKey = async (secret) => {\n  const secretBuf = typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret;\n  return await crypto.subtle.importKey(\"raw\", secretBuf, algorithm, false, [\"sign\", \"verify\"]);\n};\nvar makeSignature = async (value, secret) => {\n  const key = await getCryptoKey(secret);\n  const signature = await crypto.subtle.sign(algorithm.name, key, new TextEncoder().encode(value));\n  return btoa(String.fromCharCode(...new Uint8Array(signature)));\n};\nvar verifySignature = async (base64Signature, value, secret) => {\n  try {\n    const signatureBinStr = atob(base64Signature);\n    const signature = new Uint8Array(signatureBinStr.length);\n    for (let i = 0, len = signatureBinStr.length; i < len; i++) {\n      signature[i] = signatureBinStr.charCodeAt(i);\n    }\n    return await crypto.subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));\n  } catch {\n    return false;\n  }\n};\nvar validCookieNameRegEx = /^[\\w!#$%&'*.^`|~+-]+$/;\nvar validCookieValueRegEx = /^[ !#-:<-[\\]-~]*$/;\nvar parse = (cookie, name) => {\n  if (name && cookie.indexOf(name) === -1) {\n    return {};\n  }\n  const pairs = cookie.trim().split(\";\");\n  const parsedCookie = {};\n  for (let pairStr of pairs) {\n    pairStr = pairStr.trim();\n    const valueStartPos = pairStr.indexOf(\"=\");\n    if (valueStartPos === -1) {\n      continue;\n    }\n    const cookieName = pairStr.substring(0, valueStartPos).trim();\n    if (name && name !== cookieName || !validCookieNameRegEx.test(cookieName)) {\n      continue;\n    }\n    let cookieValue = pairStr.substring(valueStartPos + 1).trim();\n    if (cookieValue.startsWith('\"') && cookieValue.endsWith('\"')) {\n      cookieValue = cookieValue.slice(1, -1);\n    }\n    if (validCookieValueRegEx.test(cookieValue)) {\n      parsedCookie[cookieName] = cookieValue.indexOf(\"%\") !== -1 ? tryDecode(cookieValue, decodeURIComponent_) : cookieValue;\n      if (name) {\n        break;\n      }\n    }\n  }\n  return parsedCookie;\n};\nvar parseSigned = async (cookie, secret, name) => {\n  const parsedCookie = {};\n  const secretKey = await getCryptoKey(secret);\n  for (const [key, value] of Object.entries(parse(cookie, name))) {\n    const signatureStartPos = value.lastIndexOf(\".\");\n    if (signatureStartPos < 1) {\n      continue;\n    }\n    const signedValue = value.substring(0, signatureStartPos);\n    const signature = value.substring(signatureStartPos + 1);\n    if (signature.length !== 44 || !signature.endsWith(\"=\")) {\n      continue;\n    }\n    const isVerified = await verifySignature(signature, signedValue, secretKey);\n    parsedCookie[key] = isVerified ? signedValue : false;\n  }\n  return parsedCookie;\n};\nvar _serialize = (name, value, opt = {}) => {\n  let cookie = `${name}=${value}`;\n  if (name.startsWith(\"__Secure-\") && !opt.secure) {\n    throw new Error(\"__Secure- Cookie must have Secure attributes\");\n  }\n  if (name.startsWith(\"__Host-\")) {\n    if (!opt.secure) {\n      throw new Error(\"__Host- Cookie must have Secure attributes\");\n    }\n    if (opt.path !== \"/\") {\n      throw new Error('__Host- Cookie must have Path attributes with \"/\"');\n    }\n    if (opt.domain) {\n      throw new Error(\"__Host- Cookie must not have Domain attributes\");\n    }\n  }\n  if (opt && typeof opt.maxAge === \"number\" && opt.maxAge >= 0) {\n    if (opt.maxAge > 3456e4) {\n      throw new Error(\n        \"Cookies Max-Age SHOULD NOT be greater than 400 days (34560000 seconds) in duration.\"\n      );\n    }\n    cookie += `; Max-Age=${opt.maxAge | 0}`;\n  }\n  if (opt.domain && opt.prefix !== \"host\") {\n    cookie += `; Domain=${opt.domain}`;\n  }\n  if (opt.path) {\n    cookie += `; Path=${opt.path}`;\n  }\n  if (opt.expires) {\n    if (opt.expires.getTime() - Date.now() > 3456e7) {\n      throw new Error(\n        \"Cookies Expires SHOULD NOT be greater than 400 days (34560000 seconds) in the future.\"\n      );\n    }\n    cookie += `; Expires=${opt.expires.toUTCString()}`;\n  }\n  if (opt.httpOnly) {\n    cookie += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    cookie += \"; Secure\";\n  }\n  if (opt.sameSite) {\n    cookie += `; SameSite=${opt.sameSite.charAt(0).toUpperCase() + opt.sameSite.slice(1)}`;\n  }\n  if (opt.priority) {\n    cookie += `; Priority=${opt.priority.charAt(0).toUpperCase() + opt.priority.slice(1)}`;\n  }\n  if (opt.partitioned) {\n    if (!opt.secure) {\n      throw new Error(\"Partitioned Cookie must have Secure attributes\");\n    }\n    cookie += \"; Partitioned\";\n  }\n  return cookie;\n};\nvar serialize = (name, value, opt) => {\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nvar serializeSigned = async (name, value, secret, opt = {}) => {\n  const signature = await makeSignature(value, secret);\n  value = `${value}.${signature}`;\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nexport {\n  parse,\n  parseSigned,\n  serialize,\n  serializeSigned\n};\n", "// src/helper/cookie/index.ts\nimport { parse, parseSigned, serialize, serializeSigned } from \"../../utils/cookie.js\";\nvar getCookie = (c, key, prefix) => {\n  const cookie = c.req.raw.headers.get(\"Cookie\");\n  if (typeof key === \"string\") {\n    if (!cookie) {\n      return void 0;\n    }\n    let finalKey = key;\n    if (prefix === \"secure\") {\n      finalKey = \"__Secure-\" + key;\n    } else if (prefix === \"host\") {\n      finalKey = \"__Host-\" + key;\n    }\n    const obj2 = parse(cookie, finalKey);\n    return obj2[finalKey];\n  }\n  if (!cookie) {\n    return {};\n  }\n  const obj = parse(cookie);\n  return obj;\n};\nvar getSignedCookie = async (c, secret, key, prefix) => {\n  const cookie = c.req.raw.headers.get(\"Cookie\");\n  if (typeof key === \"string\") {\n    if (!cookie) {\n      return void 0;\n    }\n    let finalKey = key;\n    if (prefix === \"secure\") {\n      finalKey = \"__Secure-\" + key;\n    } else if (prefix === \"host\") {\n      finalKey = \"__Host-\" + key;\n    }\n    const obj2 = await parseSigned(cookie, secret, finalKey);\n    return obj2[finalKey];\n  }\n  if (!cookie) {\n    return {};\n  }\n  const obj = await parseSigned(cookie, secret);\n  return obj;\n};\nvar generateCookie = (name, value, opt) => {\n  let cookie;\n  if (opt?.prefix === \"secure\") {\n    cookie = serialize(\"__Secure-\" + name, value, { path: \"/\", ...opt, secure: true });\n  } else if (opt?.prefix === \"host\") {\n    cookie = serialize(\"__Host-\" + name, value, {\n      ...opt,\n      path: \"/\",\n      secure: true,\n      domain: void 0\n    });\n  } else {\n    cookie = serialize(name, value, { path: \"/\", ...opt });\n  }\n  return cookie;\n};\nvar setCookie = (c, name, value, opt) => {\n  const cookie = generateCookie(name, value, opt);\n  c.header(\"Set-Cookie\", cookie, { append: true });\n};\nvar generateSignedCookie = async (name, value, secret, opt) => {\n  let cookie;\n  if (opt?.prefix === \"secure\") {\n    cookie = await serializeSigned(\"__Secure-\" + name, value, secret, {\n      path: \"/\",\n      ...opt,\n      secure: true\n    });\n  } else if (opt?.prefix === \"host\") {\n    cookie = await serializeSigned(\"__Host-\" + name, value, secret, {\n      ...opt,\n      path: \"/\",\n      secure: true,\n      domain: void 0\n    });\n  } else {\n    cookie = await serializeSigned(name, value, secret, { path: \"/\", ...opt });\n  }\n  return cookie;\n};\nvar setSignedCookie = async (c, name, value, secret, opt) => {\n  const cookie = await generateSignedCookie(name, value, secret, opt);\n  c.header(\"set-cookie\", cookie, { append: true });\n};\nvar deleteCookie = (c, name, opt) => {\n  const deletedCookie = getCookie(c, name, opt?.prefix);\n  setCookie(c, name, \"\", { ...opt, maxAge: 0 });\n  return deletedCookie;\n};\nexport {\n  deleteCookie,\n  generateCookie,\n  generateSignedCookie,\n  getCookie,\n  getSignedCookie,\n  setCookie,\n  setSignedCookie\n};\n", "// src/http-exception.ts\nvar HTTPException = class extends Error {\n  res;\n  status;\n  constructor(status = 500, options) {\n    super(options?.message, { cause: options?.cause });\n    this.res = options?.res;\n    this.status = status;\n  }\n  getResponse() {\n    if (this.res) {\n      const newResponse = new Response(this.res.body, {\n        status: this.status,\n        headers: this.res.headers\n      });\n      return newResponse;\n    }\n    return new Response(this.message, {\n      status: this.status\n    });\n  }\n};\nexport {\n  HTTPException\n};\n", "// src/utils/encode.ts\nvar decodeBase64Url = (str) => {\n  return decodeBase64(str.replace(/_|-/g, (m) => ({ _: \"/\", \"-\": \"+\" })[m] ?? m));\n};\nvar encodeBase64Url = (buf) => encodeBase64(buf).replace(/\\/|\\+/g, (m) => ({ \"/\": \"_\", \"+\": \"-\" })[m] ?? m);\nvar encodeBase64 = (buf) => {\n  let binary = \"\";\n  const bytes = new Uint8Array(buf);\n  for (let i = 0, len = bytes.length; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n};\nvar decodeBase64 = (str) => {\n  const binary = atob(str);\n  const bytes = new Uint8Array(new ArrayBuffer(binary.length));\n  const half = binary.length / 2;\n  for (let i = 0, j = binary.length - 1; i <= half; i++, j--) {\n    bytes[i] = binary.charCodeAt(i);\n    bytes[j] = binary.charCodeAt(j);\n  }\n  return bytes;\n};\nexport {\n  decodeBase64,\n  decodeBase64Url,\n  encodeBase64,\n  encodeBase64Url\n};\n", "// src/utils/jwt/jwa.ts\nvar AlgorithmTypes = /* @__PURE__ */ ((AlgorithmTypes2) => {\n  AlgorithmTypes2[\"HS256\"] = \"HS256\";\n  AlgorithmTypes2[\"HS384\"] = \"HS384\";\n  AlgorithmTypes2[\"HS512\"] = \"HS512\";\n  AlgorithmTypes2[\"RS256\"] = \"RS256\";\n  AlgorithmTypes2[\"RS384\"] = \"RS384\";\n  AlgorithmTypes2[\"RS512\"] = \"RS512\";\n  AlgorithmTypes2[\"PS256\"] = \"PS256\";\n  AlgorithmTypes2[\"PS384\"] = \"PS384\";\n  AlgorithmTypes2[\"PS512\"] = \"PS512\";\n  AlgorithmTypes2[\"ES256\"] = \"ES256\";\n  AlgorithmTypes2[\"ES384\"] = \"ES384\";\n  AlgorithmTypes2[\"ES512\"] = \"ES512\";\n  AlgorithmTypes2[\"EdDSA\"] = \"EdDSA\";\n  return AlgorithmTypes2;\n})(AlgorithmTypes || {});\nexport {\n  AlgorithmTypes\n};\n", "// src/helper/adapter/index.ts\nvar env = (c, runtime) => {\n  const global = globalThis;\n  const globalEnv = global?.process?.env;\n  runtime ??= getRuntimeKey();\n  const runtimeEnvHandlers = {\n    bun: () => globalEnv,\n    node: () => globalEnv,\n    \"edge-light\": () => globalEnv,\n    deno: () => {\n      return Deno.env.toObject();\n    },\n    workerd: () => c.env,\n    fastly: () => ({}),\n    other: () => ({})\n  };\n  return runtimeEnvHandlers[runtime]();\n};\nvar knownUserAgents = {\n  deno: \"Deno\",\n  bun: \"Bun\",\n  workerd: \"Cloudflare-Workers\",\n  node: \"Node.js\"\n};\nvar getRuntimeKey = () => {\n  const global = globalThis;\n  const userAgentSupported = typeof navigator !== \"undefined\" && typeof navigator.userAgent === \"string\";\n  if (userAgentSupported) {\n    for (const [runtimeKey, userAgent] of Object.entries(knownUserAgents)) {\n      if (checkUserAgentEquals(userAgent)) {\n        return runtimeKey;\n      }\n    }\n  }\n  if (typeof global?.EdgeRuntime === \"string\") {\n    return \"edge-light\";\n  }\n  if (global?.fastly !== void 0) {\n    return \"fastly\";\n  }\n  if (global?.process?.release?.name === \"node\") {\n    return \"node\";\n  }\n  return \"other\";\n};\nvar checkUserAgentEquals = (platform) => {\n  const userAgent = navigator.userAgent;\n  return userAgent.startsWith(platform);\n};\nexport {\n  checkUserAgentEquals,\n  env,\n  getRuntimeKey,\n  knownUserAgents\n};\n", "// src/utils/jwt/types.ts\nvar JwtAlgorithmNotImplemented = class extends Error {\n  constructor(alg) {\n    super(`${alg} is not an implemented algorithm`);\n    this.name = \"JwtAlgorithmNotImplemented\";\n  }\n};\nvar JwtTokenInvalid = class extends Error {\n  constructor(token) {\n    super(`invalid JWT token: ${token}`);\n    this.name = \"JwtTokenInvalid\";\n  }\n};\nvar JwtTokenNotBefore = class extends Error {\n  constructor(token) {\n    super(`token (${token}) is being used before it's valid`);\n    this.name = \"JwtTokenNotBefore\";\n  }\n};\nvar JwtTokenExpired = class extends Error {\n  constructor(token) {\n    super(`token (${token}) expired`);\n    this.name = \"JwtTokenExpired\";\n  }\n};\nvar JwtTokenIssuedAt = class extends Error {\n  constructor(currentTimestamp, iat) {\n    super(\n      `Invalid \"iat\" claim, must be a valid number lower than \"${currentTimestamp}\" (iat: \"${iat}\")`\n    );\n    this.name = \"JwtTokenIssuedAt\";\n  }\n};\nvar JwtTokenIssuer = class extends Error {\n  constructor(expected, iss) {\n    super(`expected issuer \"${expected}\", got ${iss ? `\"${iss}\"` : \"none\"} `);\n    this.name = \"JwtTokenIssuer\";\n  }\n};\nvar JwtHeaderInvalid = class extends Error {\n  constructor(header) {\n    super(`jwt header is invalid: ${JSON.stringify(header)}`);\n    this.name = \"JwtHeaderInvalid\";\n  }\n};\nvar JwtHeaderRequiresKid = class extends Error {\n  constructor(header) {\n    super(`required \"kid\" in jwt header: ${JSON.stringify(header)}`);\n    this.name = \"JwtHeaderRequiresKid\";\n  }\n};\nvar JwtTokenSignatureMismatched = class extends Error {\n  constructor(token) {\n    super(`token(${token}) signature mismatched`);\n    this.name = \"JwtTokenSignatureMismatched\";\n  }\n};\nvar CryptoKeyUsage = /* @__PURE__ */ ((CryptoKeyUsage2) => {\n  CryptoKeyUsage2[\"Encrypt\"] = \"encrypt\";\n  CryptoKeyUsage2[\"Decrypt\"] = \"decrypt\";\n  CryptoKeyUsage2[\"Sign\"] = \"sign\";\n  CryptoKeyUsage2[\"Verify\"] = \"verify\";\n  CryptoKeyUsage2[\"DeriveKey\"] = \"deriveKey\";\n  CryptoKeyUsage2[\"DeriveBits\"] = \"deriveBits\";\n  CryptoKeyUsage2[\"WrapKey\"] = \"wrapKey\";\n  CryptoKeyUsage2[\"UnwrapKey\"] = \"unwrapKey\";\n  return CryptoKeyUsage2;\n})(CryptoKeyUsage || {});\nexport {\n  CryptoKeyUsage,\n  JwtAlgorithmNotImplemented,\n  JwtHeaderInvalid,\n  JwtHeaderRequiresKid,\n  JwtTokenExpired,\n  JwtTokenInvalid,\n  JwtTokenIssuedAt,\n  JwtTokenIssuer,\n  JwtTokenNotBefore,\n  JwtTokenSignatureMismatched\n};\n", "// src/utils/jwt/utf8.ts\nvar utf8Encoder = new TextEncoder();\nvar utf8Decoder = new TextDecoder();\nexport {\n  utf8Decoder,\n  utf8Encoder\n};\n", "// src/utils/jwt/jws.ts\nimport { getRuntimeKey } from \"../../helper/adapter/index.js\";\nimport { decodeBase64 } from \"../encode.js\";\nimport { CryptoKeyUsage, JwtAlgorithmNotImplemented } from \"./types.js\";\nimport { utf8Encoder } from \"./utf8.js\";\nasync function signing(privateKey, alg, data) {\n  const algorithm = getKeyAlgorithm(alg);\n  const cryptoKey = await importPrivateKey(privateKey, algorithm);\n  return await crypto.subtle.sign(algorithm, cryptoKey, data);\n}\nasync function verifying(publicKey, alg, signature, data) {\n  const algorithm = getKeyAlgorithm(alg);\n  const cryptoKey = await importPublicKey(publicKey, algorithm);\n  return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n}\nfunction pemToBinary(pem) {\n  return decodeBase64(pem.replace(/-+(BEGIN|END).*/g, \"\").replace(/\\s/g, \"\"));\n}\nasync function importPrivateKey(key, alg) {\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  if (isCryptoKey(key)) {\n    if (key.type !== \"private\" && key.type !== \"secret\") {\n      throw new Error(\n        `unexpected key type: CryptoKey.type is ${key.type}, expected private or secret`\n      );\n    }\n    return key;\n  }\n  const usages = [CryptoKeyUsage.Sign];\n  if (typeof key === \"object\") {\n    return await crypto.subtle.importKey(\"jwk\", key, alg, false, usages);\n  }\n  if (key.includes(\"PRIVATE\")) {\n    return await crypto.subtle.importKey(\"pkcs8\", pemToBinary(key), alg, false, usages);\n  }\n  return await crypto.subtle.importKey(\"raw\", utf8Encoder.encode(key), alg, false, usages);\n}\nasync function importPublicKey(key, alg) {\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  if (isCryptoKey(key)) {\n    if (key.type === \"public\" || key.type === \"secret\") {\n      return key;\n    }\n    key = await exportPublicJwkFrom(key);\n  }\n  if (typeof key === \"string\" && key.includes(\"PRIVATE\")) {\n    const privateKey = await crypto.subtle.importKey(\"pkcs8\", pemToBinary(key), alg, true, [\n      CryptoKeyUsage.Sign\n    ]);\n    key = await exportPublicJwkFrom(privateKey);\n  }\n  const usages = [CryptoKeyUsage.Verify];\n  if (typeof key === \"object\") {\n    return await crypto.subtle.importKey(\"jwk\", key, alg, false, usages);\n  }\n  if (key.includes(\"PUBLIC\")) {\n    return await crypto.subtle.importKey(\"spki\", pemToBinary(key), alg, false, usages);\n  }\n  return await crypto.subtle.importKey(\"raw\", utf8Encoder.encode(key), alg, false, usages);\n}\nasync function exportPublicJwkFrom(privateKey) {\n  if (privateKey.type !== \"private\") {\n    throw new Error(`unexpected key type: ${privateKey.type}`);\n  }\n  if (!privateKey.extractable) {\n    throw new Error(\"unexpected private key is unextractable\");\n  }\n  const jwk = await crypto.subtle.exportKey(\"jwk\", privateKey);\n  const { kty } = jwk;\n  const { alg, e, n } = jwk;\n  const { crv, x, y } = jwk;\n  return { kty, alg, e, n, crv, x, y, key_ops: [CryptoKeyUsage.Verify] };\n}\nfunction getKeyAlgorithm(name) {\n  switch (name) {\n    case \"HS256\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-256\"\n        }\n      };\n    case \"HS384\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-384\"\n        }\n      };\n    case \"HS512\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-512\"\n        }\n      };\n    case \"RS256\":\n      return {\n        name: \"RSASSA-PKCS1-v1_5\",\n        hash: {\n          name: \"SHA-256\"\n        }\n      };\n    case \"RS384\":\n      return {\n        name: \"RSASSA-PKCS1-v1_5\",\n        hash: {\n          name: \"SHA-384\"\n        }\n      };\n    case \"RS512\":\n      return {\n        name: \"RSASSA-PKCS1-v1_5\",\n        hash: {\n          name: \"SHA-512\"\n        }\n      };\n    case \"PS256\":\n      return {\n        name: \"RSA-PSS\",\n        hash: {\n          name: \"SHA-256\"\n        },\n        saltLength: 32\n      };\n    case \"PS384\":\n      return {\n        name: \"RSA-PSS\",\n        hash: {\n          name: \"SHA-384\"\n        },\n        saltLength: 48\n      };\n    case \"PS512\":\n      return {\n        name: \"RSA-PSS\",\n        hash: {\n          name: \"SHA-512\"\n        },\n        saltLength: 64\n      };\n    case \"ES256\":\n      return {\n        name: \"ECDSA\",\n        hash: {\n          name: \"SHA-256\"\n        },\n        namedCurve: \"P-256\"\n      };\n    case \"ES384\":\n      return {\n        name: \"ECDSA\",\n        hash: {\n          name: \"SHA-384\"\n        },\n        namedCurve: \"P-384\"\n      };\n    case \"ES512\":\n      return {\n        name: \"ECDSA\",\n        hash: {\n          name: \"SHA-512\"\n        },\n        namedCurve: \"P-521\"\n      };\n    case \"EdDSA\":\n      return {\n        name: \"Ed25519\",\n        namedCurve: \"Ed25519\"\n      };\n    default:\n      throw new JwtAlgorithmNotImplemented(name);\n  }\n}\nfunction isCryptoKey(key) {\n  const runtime = getRuntimeKey();\n  if (runtime === \"node\" && !!crypto.webcrypto) {\n    return key instanceof crypto.webcrypto.CryptoKey;\n  }\n  return key instanceof CryptoKey;\n}\nexport {\n  signing,\n  verifying\n};\n", "// src/utils/jwt/jwt.ts\nimport { decodeBase64Url, encodeBase64Url } from \"../../utils/encode.js\";\nimport { AlgorithmTypes } from \"./jwa.js\";\nimport { signing, verifying } from \"./jws.js\";\nimport {\n  JwtHeaderInvalid,\n  JwtHeaderRequiresKid,\n  JwtTokenExpired,\n  JwtTokenInvalid,\n  JwtTokenIssuedAt,\n  JwtTokenIssuer,\n  JwtTokenNotBefore,\n  JwtTokenSignatureMismatched\n} from \"./types.js\";\nimport { utf8Decoder, utf8Encoder } from \"./utf8.js\";\nvar encodeJwtPart = (part) => encodeBase64Url(utf8Encoder.encode(JSON.stringify(part)).buffer).replace(/=/g, \"\");\nvar encodeSignaturePart = (buf) => encodeBase64Url(buf).replace(/=/g, \"\");\nvar decodeJwtPart = (part) => JSON.parse(utf8Decoder.decode(decodeBase64Url(part)));\nfunction isTokenHeader(obj) {\n  if (typeof obj === \"object\" && obj !== null) {\n    const objWithAlg = obj;\n    return \"alg\" in objWithAlg && Object.values(AlgorithmTypes).includes(objWithAlg.alg) && (!(\"typ\" in objWithAlg) || objWithAlg.typ === \"JWT\");\n  }\n  return false;\n}\nvar sign = async (payload, privateKey, alg = \"HS256\") => {\n  const encodedPayload = encodeJwtPart(payload);\n  let encodedHeader;\n  if (typeof privateKey === \"object\" && \"alg\" in privateKey) {\n    alg = privateKey.alg;\n    encodedHeader = encodeJwtPart({ alg, typ: \"JWT\", kid: privateKey.kid });\n  } else {\n    encodedHeader = encodeJwtPart({ alg, typ: \"JWT\" });\n  }\n  const partialToken = `${encodedHeader}.${encodedPayload}`;\n  const signaturePart = await signing(privateKey, alg, utf8Encoder.encode(partialToken));\n  const signature = encodeSignaturePart(signaturePart);\n  return `${partialToken}.${signature}`;\n};\nvar verify = async (token, publicKey, algOrOptions) => {\n  const optsIn = typeof algOrOptions === \"string\" ? { alg: algOrOptions } : algOrOptions || {};\n  const opts = {\n    alg: optsIn.alg ?? \"HS256\",\n    iss: optsIn.iss,\n    nbf: optsIn.nbf ?? true,\n    exp: optsIn.exp ?? true,\n    iat: optsIn.iat ?? true\n  };\n  const tokenParts = token.split(\".\");\n  if (tokenParts.length !== 3) {\n    throw new JwtTokenInvalid(token);\n  }\n  const { header, payload } = decode(token);\n  if (!isTokenHeader(header)) {\n    throw new JwtHeaderInvalid(header);\n  }\n  const now = Date.now() / 1e3 | 0;\n  if (opts.nbf && payload.nbf && payload.nbf > now) {\n    throw new JwtTokenNotBefore(token);\n  }\n  if (opts.exp && payload.exp && payload.exp <= now) {\n    throw new JwtTokenExpired(token);\n  }\n  if (opts.iat && payload.iat && now < payload.iat) {\n    throw new JwtTokenIssuedAt(now, payload.iat);\n  }\n  if (opts.iss) {\n    if (!payload.iss) {\n      throw new JwtTokenIssuer(opts.iss, null);\n    }\n    if (typeof opts.iss === \"string\" && payload.iss !== opts.iss) {\n      throw new JwtTokenIssuer(opts.iss, payload.iss);\n    }\n    if (opts.iss instanceof RegExp && !opts.iss.test(payload.iss)) {\n      throw new JwtTokenIssuer(opts.iss, payload.iss);\n    }\n  }\n  const headerPayload = token.substring(0, token.lastIndexOf(\".\"));\n  const verified = await verifying(\n    publicKey,\n    opts.alg,\n    decodeBase64Url(tokenParts[2]),\n    utf8Encoder.encode(headerPayload)\n  );\n  if (!verified) {\n    throw new JwtTokenSignatureMismatched(token);\n  }\n  return payload;\n};\nvar verifyWithJwks = async (token, options, init) => {\n  const verifyOpts = options.verification || {};\n  const header = decodeHeader(token);\n  if (!isTokenHeader(header)) {\n    throw new JwtHeaderInvalid(header);\n  }\n  if (!header.kid) {\n    throw new JwtHeaderRequiresKid(header);\n  }\n  if (options.jwks_uri) {\n    const response = await fetch(options.jwks_uri, init);\n    if (!response.ok) {\n      throw new Error(`failed to fetch JWKS from ${options.jwks_uri}`);\n    }\n    const data = await response.json();\n    if (!data.keys) {\n      throw new Error('invalid JWKS response. \"keys\" field is missing');\n    }\n    if (!Array.isArray(data.keys)) {\n      throw new Error('invalid JWKS response. \"keys\" field is not an array');\n    }\n    if (options.keys) {\n      options.keys.push(...data.keys);\n    } else {\n      options.keys = data.keys;\n    }\n  } else if (!options.keys) {\n    throw new Error('verifyWithJwks requires options for either \"keys\" or \"jwks_uri\" or both');\n  }\n  const matchingKey = options.keys.find((key) => key.kid === header.kid);\n  if (!matchingKey) {\n    throw new JwtTokenInvalid(token);\n  }\n  return await verify(token, matchingKey, {\n    alg: matchingKey.alg || header.alg,\n    ...verifyOpts\n  });\n};\nvar decode = (token) => {\n  try {\n    const [h, p] = token.split(\".\");\n    const header = decodeJwtPart(h);\n    const payload = decodeJwtPart(p);\n    return {\n      header,\n      payload\n    };\n  } catch {\n    throw new JwtTokenInvalid(token);\n  }\n};\nvar decodeHeader = (token) => {\n  try {\n    const [h] = token.split(\".\");\n    return decodeJwtPart(h);\n  } catch {\n    throw new JwtTokenInvalid(token);\n  }\n};\nexport {\n  decode,\n  decodeHeader,\n  isTokenHeader,\n  sign,\n  verify,\n  verifyWithJwks\n};\n", "// src/utils/jwt/index.ts\nimport { decode, sign, verify, verifyWithJwks } from \"./jwt.js\";\nvar Jwt = { sign, verify, decode, verifyWithJwks };\nexport {\n  Jwt\n};\n", "// src/middleware/jwt/jwt.ts\nimport { getCookie, getSignedCookie } from \"../../helper/cookie/index.js\";\nimport { HTTPException } from \"../../http-exception.js\";\nimport { Jwt } from \"../../utils/jwt/index.js\";\nimport \"../../context.js\";\nvar jwt = (options) => {\n  const verifyOpts = options.verification || {};\n  if (!options || !options.secret) {\n    throw new Error('JWT auth middleware requires options for \"secret\"');\n  }\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  return async function jwt2(ctx, next) {\n    const headerName = options.headerName || \"Authorization\";\n    const credentials = ctx.req.raw.headers.get(headerName);\n    let token;\n    if (credentials) {\n      const parts = credentials.split(/\\s+/);\n      if (parts.length !== 2) {\n        const errDescription = \"invalid credentials structure\";\n        throw new HTTPException(401, {\n          message: errDescription,\n          res: unauthorizedResponse({\n            ctx,\n            error: \"invalid_request\",\n            errDescription\n          })\n        });\n      } else {\n        token = parts[1];\n      }\n    } else if (options.cookie) {\n      if (typeof options.cookie == \"string\") {\n        token = getCookie(ctx, options.cookie);\n      } else if (options.cookie.secret) {\n        if (options.cookie.prefixOptions) {\n          token = await getSignedCookie(\n            ctx,\n            options.cookie.secret,\n            options.cookie.key,\n            options.cookie.prefixOptions\n          );\n        } else {\n          token = await getSignedCookie(ctx, options.cookie.secret, options.cookie.key);\n        }\n      } else {\n        if (options.cookie.prefixOptions) {\n          token = getCookie(ctx, options.cookie.key, options.cookie.prefixOptions);\n        } else {\n          token = getCookie(ctx, options.cookie.key);\n        }\n      }\n    }\n    if (!token) {\n      const errDescription = \"no authorization included in request\";\n      throw new HTTPException(401, {\n        message: errDescription,\n        res: unauthorizedResponse({\n          ctx,\n          error: \"invalid_request\",\n          errDescription\n        })\n      });\n    }\n    let payload;\n    let cause;\n    try {\n      payload = await Jwt.verify(token, options.secret, {\n        alg: options.alg,\n        ...verifyOpts\n      });\n    } catch (e) {\n      cause = e;\n    }\n    if (!payload) {\n      throw new HTTPException(401, {\n        message: \"Unauthorized\",\n        res: unauthorizedResponse({\n          ctx,\n          error: \"invalid_token\",\n          statusText: \"Unauthorized\",\n          errDescription: \"token verification failure\"\n        }),\n        cause\n      });\n    }\n    ctx.set(\"jwtPayload\", payload);\n    await next();\n  };\n};\nfunction unauthorizedResponse(opts) {\n  return new Response(\"Unauthorized\", {\n    status: 401,\n    statusText: opts.statusText,\n    headers: {\n      \"WWW-Authenticate\": `Bearer realm=\"${opts.ctx.req.url}\",error=\"${opts.error}\",error_description=\"${opts.errDescription}\"`\n    }\n  });\n}\nvar verifyWithJwks = Jwt.verifyWithJwks;\nvar verify = Jwt.verify;\nvar decode = Jwt.decode;\nvar sign = Jwt.sign;\nexport {\n  decode,\n  jwt,\n  sign,\n  verify,\n  verifyWithJwks\n};\n", "// src/middleware/jwt/index.ts\nimport { jwt, verifyWithJwks, verify, decode, sign } from \"./jwt.js\";\nexport {\n  decode,\n  jwt,\n  sign,\n  verify,\n  verifyWithJwks\n};\n", "// Error handling utilities\n\nimport { Context } from 'hono';\nimport { HTTPException } from 'hono/http-exception';\n\n// Custom error class\nexport class AppError extends Error {\n  public readonly statusCode: number;\n  public readonly errorCode: string;\n  public readonly details?: any;\n\n  constructor(\n    message: string,\n    statusCode: number = 500,\n    errorCode: string = 'INTERNAL_ERROR',\n    details?: any\n  ) {\n    super(message);\n    this.name = 'AppError';\n    this.statusCode = statusCode;\n    this.errorCode = errorCode;\n    this.details = details;\n    Object.setPrototypeOf(this, AppError.prototype);\n  }\n}\n\n// Common error types\nexport class ValidationError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, 400, 'VALIDATION_ERROR', details);\n    this.name = 'ValidationError';\n  }\n}\n\nexport class AuthenticationError extends AppError {\n  constructor(message: string = 'Authentication required') {\n    super(message, 401, 'AUTHENTICATION_ERROR');\n    this.name = 'AuthenticationError';\n  }\n}\n\nexport class AuthorizationError extends AppError {\n  constructor(message: string = 'Insufficient permissions') {\n    super(message, 403, 'AUTHORIZATION_ERROR');\n    this.name = 'AuthorizationError';\n  }\n}\n\nexport class NotFoundError extends AppError {\n  constructor(resource: string = 'Resource') {\n    super(`${resource} not found`, 404, 'NOT_FOUND');\n    this.name = 'NotFoundError';\n  }\n}\n\nexport class ConflictError extends AppError {\n  constructor(message: string) {\n    super(message, 409, 'CONFLICT_ERROR');\n    this.name = 'ConflictError';\n  }\n}\n\nexport class RateLimitError extends AppError {\n  constructor(retryAfter?: number) {\n    super('Too many requests', 429, 'RATE_LIMIT_ERROR', { retryAfter });\n    this.name = 'RateLimitError';\n  }\n}\n\nexport class ExternalServiceError extends AppError {\n  constructor(service: string, originalError?: any) {\n    super(\n      `External service error: ${service}`,\n      502,\n      'EXTERNAL_SERVICE_ERROR',\n      { service, originalError }\n    );\n    this.name = 'ExternalServiceError';\n  }\n}\n\n// Error response formatter\nexport function formatErrorResponse(error: Error | AppError | HTTPException) {\n  // Check if it's our custom error\n  if (error instanceof AppError) {\n    return {\n      error: {\n        code: error.errorCode,\n        message: error.message,\n        details: error.details\n      },\n      status: error.statusCode\n    };\n  }\n\n  // Check if it's Hono's HTTPException\n  if (error instanceof HTTPException) {\n    return {\n      error: {\n        code: 'HTTP_ERROR',\n        message: error.message,\n        status: error.status\n      },\n      status: error.status\n    };\n  }\n\n  // Generic error\n  const isDevelopment = (globalThis as any).NODE_ENV === 'development';\n  return {\n    error: {\n      code: 'INTERNAL_ERROR',\n      message: isDevelopment ? error.message : 'An unexpected error occurred',\n      stack: isDevelopment ? error.stack : undefined\n    },\n    status: 500\n  };\n}\n\n// Global error handler middleware\nexport async function errorHandler(\n  err: Error | AppError | HTTPException,\n  c: Context\n) {\n  console.error('Error:', err);\n\n  const { error, status } = formatErrorResponse(err);\n\n  // Add error tracking headers\n  const requestId = c.req.header('X-Request-ID') || crypto.randomUUID();\n  c.header('X-Request-ID', requestId);\n\n  // Log to external service in production\n  if ((globalThis as any).NODE_ENV === 'production') {\n    // Here you would send to Sentry, DataDog, etc.\n    console.error('Production error:', {\n      requestId,\n      error,\n      url: c.req.url,\n      method: c.req.method,\n      headers: Object.fromEntries(c.req.raw.headers.entries())\n    });\n  }\n\n  // Handle rate limit errors specially\n  if (err instanceof RateLimitError && err.details?.retryAfter) {\n    c.header('Retry-After', String(err.details.retryAfter));\n  }\n\n  return c.json(error as any, status as any);\n}\n\n// Async error wrapper\nexport function asyncHandler<T extends (...args: any[]) => Promise<any>>(\n  fn: T\n): T {\n  return (async (...args: Parameters<T>) => {\n    try {\n      return await fn(...args);\n    } catch (error) {\n      throw error;\n    }\n  }) as T;\n}\n\n// Validation helper\nexport function validateRequired(\n  data: Record<string, any>,\n  fields: string[]\n): void {\n  const missing = fields.filter(field => !data[field]);\n  if (missing.length > 0) {\n    throw new ValidationError(\n      `Missing required fields: ${missing.join(', ')}`,\n      { missingFields: missing }\n    );\n  }\n}\n\n// Type validation helper\nexport function validateType(\n  value: any,\n  type: 'string' | 'number' | 'boolean' | 'array' | 'object',\n  fieldName: string\n): void {\n  let isValid = false;\n\n  switch (type) {\n    case 'string':\n      isValid = typeof value === 'string';\n      break;\n    case 'number':\n      isValid = typeof value === 'number' && !isNaN(value);\n      break;\n    case 'boolean':\n      isValid = typeof value === 'boolean';\n      break;\n    case 'array':\n      isValid = Array.isArray(value);\n      break;\n    case 'object':\n      isValid = value !== null && typeof value === 'object' && !Array.isArray(value);\n      break;\n  }\n\n  if (!isValid) {\n    throw new ValidationError(\n      `Invalid type for ${fieldName}: expected ${type}`,\n      { field: fieldName, expectedType: type, actualType: typeof value }\n    );\n  }\n}\n\n// Alias for errorHandler (for compatibility)\nexport const handleError = errorHandler;", "export async function hashSha256(input: string): Promise<string> {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(input);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n}\n\nexport function generateState(prefix: string = 'state'): string {\n  return `${prefix}_${crypto.randomUUID()}`;\n}\n\nexport function sanitizeFileName(name: string): string {\n  return name\n    .normalize('NFKD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/[^a-zA-Z0-9._-]/g, '_')\n    .replace(/_{2,}/g, '_')\n    .replace(/^_+|_+$/g, '')\n    .toLowerCase();\n}\n\nexport function assertEnvVar(value: string | undefined, variableName: string): string {\n  if (!value) {\n    throw new Error(`Environment variable ${variableName} is required`);\n  }\n  return value;\n}\n\n", "import type { Context, MiddlewareHandler } from 'hono';\nimport type { AppBindings as Env } from '../index';\n\n// \uBA54\uD2B8\uB9AD \uD0C0\uC785 \uC815\uC758\ninterface RequestMetrics {\n    // \uAE30\uBCF8 \uBA54\uD2B8\uB9AD\n    method: string;\n    path: string;\n    status: number;\n    duration: number;\n    cpuTime: number;\n\n    // \uCD94\uAC00 \uBA54\uD2B8\uB9AD\n    userAgent?: string;\n    country?: string;\n    city?: string;\n    colo?: string;\n    tlsVersion?: string;\n    httpProtocol?: string;\n\n    // \uC5D0\uB7EC \uC815\uBCF4\n    error?: string;\n    errorType?: string;\n\n    // AI \uBA54\uD2B8\uB9AD\n    aiModel?: string;\n    aiTokensUsed?: number;\n    aiDuration?: number;\n\n    // \uCE90\uC2DC \uBA54\uD2B8\uB9AD\n    cacheStatus?: string;\n    cacheHit?: boolean;\n}\n\n// \uBD84\uC11D \uC774\uBCA4\uD2B8 \uD0C0\uC785\ninterface AnalyticsEvent {\n    timestamp: number;\n    type: 'api_request' | 'ai_usage' | 'error' | 'performance';\n    metrics: RequestMetrics;\n    metadata?: Record<string, any>;\n}\n\n// \uC131\uB2A5 \uC784\uACC4\uAC12\nconst PERFORMANCE_THRESHOLDS = {\n    duration: {\n        good: 100,     // 100ms \uC774\uD558\n        warning: 500,  // 500ms \uC774\uD558\n        critical: 1000 // 1\uCD08 \uC774\uC0C1\n    },\n    cpuTime: {\n        good: 50,      // 50ms \uC774\uD558\n        warning: 200,  // 200ms \uC774\uD558\n        critical: 500  // 500ms \uC774\uC0C1\n    }\n};\n\n// \uBD84\uC11D \uBBF8\uB4E4\uC6E8\uC5B4\nexport const analyticsMiddleware: MiddlewareHandler = async (c, next) => {\n    const startTime = Date.now();\n    const startCpu = (c.executionCtx as any).cpuTime || 0;\n\n    // \uC694\uCCAD \uC815\uBCF4 \uC218\uC9D1\n    const request = c.req.raw;\n    const url = new URL(request.url);\n    const cf = request.cf as any;\n\n    try {\n        // \uB2E4\uC74C \uBBF8\uB4E4\uC6E8\uC5B4/\uD578\uB4E4\uB7EC \uC2E4\uD589\n        await next();\n\n        // \uC751\uB2F5 \uD6C4 \uBA54\uD2B8\uB9AD \uC218\uC9D1\n        const duration = Date.now() - startTime;\n        const cpuTime = ((c.executionCtx as any).cpuTime || 0) - startCpu;\n        const status = c.res.status;\n\n        // \uAE30\uBCF8 \uBA54\uD2B8\uB9AD\n        const metrics: RequestMetrics = {\n            method: request.method,\n            path: url.pathname,\n            status,\n            duration,\n            cpuTime,\n            userAgent: request.headers.get('user-agent') || undefined,\n            country: cf?.country,\n            city: cf?.city,\n            colo: cf?.colo,\n            tlsVersion: cf?.tlsVersion,\n            httpProtocol: cf?.httpProtocol,\n            cacheStatus: c.res.headers.get('cf-cache-status') || undefined,\n            cacheHit: c.res.headers.get('cf-cache-status') === 'HIT'\n        };\n\n        // AI \uBA54\uD2B8\uB9AD \uCD94\uAC00 (\uC788\uB294 \uACBD\uC6B0)\n        const aiMetrics = c.get('aiMetrics');\n        if (aiMetrics) {\n            metrics.aiModel = aiMetrics.model;\n            metrics.aiTokensUsed = aiMetrics.tokensUsed;\n            metrics.aiDuration = aiMetrics.duration;\n        }\n\n        // \uC5D0\uB7EC \uC815\uBCF4 \uCD94\uAC00 (\uC788\uB294 \uACBD\uC6B0)\n        if (status >= 400) {\n            const error = c.get('error');\n            if (error) {\n                metrics.error = error.message;\n                metrics.errorType = error.type || 'unknown';\n            }\n        }\n\n        // Analytics Engine\uC5D0 \uC804\uC1A1\n        await sendToAnalyticsEngine(c.env, {\n            timestamp: Date.now(),\n            type: 'api_request',\n            metrics,\n            metadata: {\n                environment: c.env.ENVIRONMENT,\n                version: c.env.API_VERSION\n            }\n        });\n\n        // \uC131\uB2A5 \uACBD\uACE0 \uCCB4\uD06C\n        checkPerformanceThresholds(metrics, c.env);\n\n        // \uC751\uB2F5 \uD5E4\uB354\uC5D0 \uC11C\uBC84 \uD0C0\uC774\uBC0D \uCD94\uAC00\n        c.res.headers.set('Server-Timing', [\n            `cpu;dur=${cpuTime.toFixed(2)}`,\n            `total;dur=${duration.toFixed(2)}`,\n            cf?.colo ? `colo;desc=\"${cf.colo}\"` : null\n        ].filter(Boolean).join(', '));\n\n    } catch (error) {\n        console.error('Analytics middleware error:', error);\n        // \uBD84\uC11D \uC624\uB958\uAC00 \uC694\uCCAD\uC744 \uC2E4\uD328\uC2DC\uD0A4\uC9C0 \uC54A\uB3C4\uB85D \uD568\n    }\n};\n\n// Analytics Engine\uC5D0 \uC774\uBCA4\uD2B8 \uC804\uC1A1\nasync function sendToAnalyticsEngine(env: Env, event: AnalyticsEvent) {\n    if (!env.ANALYTICS) return;\n\n    try {\n        const statusIndex = event.metrics.status != null\n            ? event.metrics.status.toString()\n            : 'unknown';\n\n        await (env.ANALYTICS as any).writeDataPoint({\n            blobs: [\n                event.type,\n                event.metrics.method,\n                event.metrics.path,\n                event.metrics.error || '',\n                event.metrics.aiModel || '',\n                event.metrics.country || '',\n                event.metrics.cacheStatus || '',\n                event.metadata?.environment || '',\n                event.metadata?.version || ''\n            ],\n            doubles: [\n                event.metrics.duration,\n                event.metrics.cpuTime,\n                event.metrics.aiTokensUsed || 0,\n                event.metrics.aiDuration || 0,\n                event.metrics.cacheHit ? 1 : 0\n            ],\n            indexes: [statusIndex]\n        });\n    } catch (error) {\n        console.error('Failed to write to Analytics Engine:', error);\n    }\n}\n\n// \uC131\uB2A5 \uC784\uACC4\uAC12 \uCCB4\uD06C \uBC0F \uACBD\uACE0\nfunction checkPerformanceThresholds(metrics: RequestMetrics, env: Env) {\n    const { duration, cpuTime } = metrics;\n\n    // Duration \uCCB4\uD06C\n    let durationLevel: 'good' | 'warning' | 'critical' = 'good';\n    if (duration > PERFORMANCE_THRESHOLDS.duration.critical) {\n        durationLevel = 'critical';\n    } else if (duration > PERFORMANCE_THRESHOLDS.duration.warning) {\n        durationLevel = 'warning';\n    }\n\n    // CPU Time \uCCB4\uD06C\n    let cpuLevel: 'good' | 'warning' | 'critical' = 'good';\n    if (cpuTime > PERFORMANCE_THRESHOLDS.cpuTime.critical) {\n        cpuLevel = 'critical';\n    } else if (cpuTime > PERFORMANCE_THRESHOLDS.cpuTime.warning) {\n        cpuLevel = 'warning';\n    }\n\n    // \uACBD\uACE0 \uB85C\uAE45\n    if (durationLevel !== 'good' || cpuLevel !== 'good') {\n        console.warn('Performance threshold exceeded:', {\n            path: metrics.path,\n            duration: `${duration}ms (${durationLevel})`,\n            cpuTime: `${cpuTime}ms (${cpuLevel})`,\n            status: metrics.status\n        });\n    }\n}\n\n// \uC5D0\uB7EC \uCD94\uC801 \uBBF8\uB4E4\uC6E8\uC5B4\nexport const errorTrackingMiddleware: MiddlewareHandler = async (c, next) => {\n    try {\n        await next();\n    } catch (error: any) {\n        // \uC5D0\uB7EC \uC815\uBCF4 \uC800\uC7A5\n        c.set('error', {\n            message: error.message,\n            type: error.constructor.name,\n            stack: error.stack\n        });\n\n        // \uC5D0\uB7EC \uC774\uBCA4\uD2B8 \uC804\uC1A1\n        await sendToAnalyticsEngine(c.env, {\n            timestamp: Date.now(),\n            type: 'error',\n            metrics: {\n                method: c.req.method,\n                path: new URL(c.req.url).pathname,\n                status: 500,\n                duration: 0,\n                cpuTime: 0,\n                error: error.message,\n                errorType: error.constructor.name\n            },\n            metadata: {\n                stack: error.stack,\n                environment: c.env.ENVIRONMENT\n            }\n        });\n\n        // \uC5D0\uB7EC \uC7AC\uBC1C\uC0DD\n        throw error;\n    }\n};\n\n// \uBA54\uD2B8\uB9AD \uC9D1\uACC4 \uD568\uC218\nexport async function getAggregatedMetrics(\n    env: Env,\n    timeRange: { start: Date; end: Date },\n    groupBy?: 'path' | 'status' | 'country'\n): Promise<any> {\n    if (!env.ANALYTICS) return null;\n    try {\n        const result = await (env.ANALYTICS as any)?.query?.({\n            timeRange: [timeRange.start, timeRange.end],\n            filter: { blob1: 'api_request' },\n            aggregations: {\n                count: { count: {} },\n                avgDuration: { avg: { field: 'double1' } },\n                avgCpuTime: { avg: { field: 'double2' } },\n                p95Duration: { quantile: { field: 'double1', quantile: 0.95 } },\n                p95CpuTime: { quantile: { field: 'double2', quantile: 0.95 } }\n            },\n            groupBy: groupBy ? [`blob${getFieldIndex(groupBy)}`] : undefined\n        });\n        return result ?? null;\n    } catch (error) {\n        console.error('Failed to query Analytics Engine:', error);\n        return null;\n    }\n}\n\n// \uD544\uB4DC \uC778\uB371\uC2A4 \uB9E4\uD551\nfunction getFieldIndex(field: string): number {\n    const fieldMap: Record<string, number> = {\n        'path': 3,\n        'status': 1,\n        'country': 2\n    };\n    return fieldMap[field] || 1;\n}\n\n// \uC2E4\uC2DC\uAC04 \uBA54\uD2B8\uB9AD \uC2A4\uD2B8\uB9BC (WebSocket)\nexport async function streamMetrics(ws: WebSocket, env: Env) {\n    const interval = setInterval(async () => {\n        try {\n            // \uCD5C\uADFC 1\uBD84\uAC04\uC758 \uBA54\uD2B8\uB9AD \uC870\uD68C\n            const metrics = await getAggregatedMetrics(env, {\n                start: new Date(Date.now() - 60000),\n                end: new Date()\n            });\n\n            if (metrics && ws.readyState === WebSocket.OPEN) {\n                ws.send(JSON.stringify({\n                    type: 'metrics_update',\n                    timestamp: Date.now(),\n                    data: metrics\n                }));\n            }\n        } catch (error) {\n            console.error('Failed to stream metrics:', error);\n        }\n    }, 5000); // 5\uCD08\uB9C8\uB2E4 \uC5C5\uB370\uC774\uD2B8\n\n    // WebSocket \uC885\uB8CC \uC2DC \uC815\uB9AC\n    ws.addEventListener('close', () => {\n        clearInterval(interval);\n    });\n}\n", "import type { D1Database, D1Result } from '@cloudflare/workers-types';\n\nexport type D1Value = string | number | boolean | null;\n\nexport async function query<T = unknown>(\n  db: D1Database,\n  sql: string,\n  params: D1Value[] = []\n): Promise<T[]> {\n  const result = await db.prepare(sql).bind(...params).all<T>();\n  return result.results ?? [];\n}\n\nexport async function queryFirst<T = unknown>(\n  db: D1Database,\n  sql: string,\n  params: D1Value[] = []\n): Promise<T | null> {\n  const rows = await query<T>(db, sql, params);\n  return rows.length > 0 ? rows[0] : null;\n}\n\nexport async function execute(\n  db: D1Database,\n  sql: string,\n  params: D1Value[] = []\n): Promise<D1Result> {\n  return db.prepare(sql).bind(...params).run();\n}\n\nexport async function transaction<T>(\n  db: D1Database,\n  statements: Array<{ sql: string; params?: D1Value[] }>,\n  reducer?: (result: D1Result, index: number, acc: T | undefined) => T\n): Promise<T | undefined> {\n  let accumulator: T | undefined = undefined;\n\n  await db.batch(\n    statements.map(({ sql, params }) => db.prepare(sql).bind(...(params ?? [])))\n  ).then((results) => {\n    if (reducer) {\n      results.forEach((res, index) => {\n        accumulator = reducer(res, index, accumulator);\n      });\n    }\n  });\n\n  return accumulator;\n}\n\n", "/**\n * User-Agent \uD30C\uC2F1 \uC720\uD2F8\uB9AC\uD2F0\n */\n\nexport interface ParsedUserAgent {\n  device: string;\n  browser: string;\n  os: string;\n}\n\n/**\n * User-Agent \uBB38\uC790\uC5F4\uC744 \uD30C\uC2F1\uD558\uC5EC \uB514\uBC14\uC774\uC2A4, \uBE0C\uB77C\uC6B0\uC800, OS \uC815\uBCF4 \uCD94\uCD9C\n */\nexport function parseUserAgent(userAgent?: string): ParsedUserAgent {\n  if (!userAgent) {\n    return {\n      device: 'Unknown Device',\n      browser: 'Unknown Browser',\n      os: 'Unknown OS'\n    };\n  }\n\n  const ua = userAgent.toLowerCase();\n\n  // OS \uAC10\uC9C0\n  let os = 'Unknown OS';\n  if (ua.includes('windows')) {\n    os = 'Windows';\n    if (ua.includes('windows nt 10.0')) os = 'Windows 10';\n    else if (ua.includes('windows nt 6.3')) os = 'Windows 8.1';\n    else if (ua.includes('windows nt 6.2')) os = 'Windows 8';\n    else if (ua.includes('windows nt 6.1')) os = 'Windows 7';\n  } else if (ua.includes('mac os x')) {\n    os = 'MacOS';\n    const match = ua.match(/mac os x (\\d+[._]\\d+)/);\n    if (match) {\n      os = `MacOS ${match[1].replace('_', '.')}`;\n    }\n  } else if (ua.includes('android')) {\n    os = 'Android';\n    const match = ua.match(/android (\\d+\\.?\\d*)/);\n    if (match) {\n      os = `Android ${match[1]}`;\n    }\n  } else if (ua.includes('iphone') || ua.includes('ipad')) {\n    os = ua.includes('ipad') ? 'iPadOS' : 'iOS';\n    const match = ua.match(/os (\\d+[._]\\d+)/);\n    if (match) {\n      os = `${os} ${match[1].replace('_', '.')}`;\n    }\n  } else if (ua.includes('linux')) {\n    os = 'Linux';\n  }\n\n  // \uBE0C\uB77C\uC6B0\uC800 \uAC10\uC9C0\n  let browser = 'Unknown Browser';\n  let version = '';\n\n  if (ua.includes('edg/')) {\n    browser = 'Edge';\n    const match = ua.match(/edg\\/(\\d+\\.?\\d*)/);\n    if (match) version = match[1];\n  } else if (ua.includes('chrome/') && !ua.includes('edg')) {\n    browser = 'Chrome';\n    const match = ua.match(/chrome\\/(\\d+\\.?\\d*)/);\n    if (match) version = match[1];\n  } else if (ua.includes('safari/') && !ua.includes('chrome')) {\n    browser = 'Safari';\n    const match = ua.match(/version\\/(\\d+\\.?\\d*)/);\n    if (match) version = match[1];\n  } else if (ua.includes('firefox/')) {\n    browser = 'Firefox';\n    const match = ua.match(/firefox\\/(\\d+\\.?\\d*)/);\n    if (match) version = match[1];\n  } else if (ua.includes('opera/') || ua.includes('opr/')) {\n    browser = 'Opera';\n    const match = ua.match(/(?:opera|opr)\\/(\\d+\\.?\\d*)/);\n    if (match) version = match[1];\n  }\n\n  if (version) {\n    browser = `${browser} ${version.split('.')[0]}`;\n  }\n\n  // \uB514\uBC14\uC774\uC2A4 \uD0C0\uC785 \uAC10\uC9C0\n  let device = 'Desktop';\n  if (ua.includes('mobile')) {\n    device = 'Mobile';\n  } else if (ua.includes('tablet') || ua.includes('ipad')) {\n    device = 'Tablet';\n  }\n\n  // \uAD6C\uCCB4\uC801\uC778 \uB514\uBC14\uC774\uC2A4 \uC815\uBCF4\n  const deviceInfo = `${browser} on ${os}`;\n\n  return {\n    device: deviceInfo,\n    browser,\n    os\n  };\n}\n\n/**\n * IP \uC8FC\uC18C\uB85C\uBD80\uD130 \uC704\uCE58 \uC815\uBCF4 \uCD94\uC815 (\uAC04\uB2E8\uD55C \uBC84\uC804)\n * \uC2E4\uC81C\uB85C\uB294 GeoIP \uC11C\uBE44\uC2A4\uB97C \uC0AC\uC6A9\uD574\uC57C \uD568\n */\nexport function getLocationFromIP(ipAddress?: string): { location: string; countryCode: string } {\n  // TODO: \uC2E4\uC81C GeoIP \uC11C\uBE44\uC2A4 \uC5F0\uB3D9\n  // Cloudflare Workers\uC758 \uACBD\uC6B0 request.cf.country \uC0AC\uC6A9 \uAC00\uB2A5\n  return {\n    location: 'Unknown Location',\n    countryCode: 'XX'\n  };\n}\n\n/**\n * \uC758\uC2EC\uC2A4\uB7EC\uC6B4 \uB85C\uADF8\uC778 \uD65C\uB3D9 \uAC10\uC9C0 (\uAC04\uB2E8\uD55C \uBC84\uC804)\n */\nexport function detectSuspiciousActivity(params: {\n  ipAddress?: string;\n  userAgent?: string;\n  previousIpAddress?: string;\n  previousCountry?: string;\n}): { suspicious: boolean; reason?: string } {\n  // TODO: \uC2E4\uC81C \uB85C\uC9C1 \uAD6C\uD604\n  // - \uB2E4\uB978 \uAD6D\uAC00\uC5D0\uC11C\uC758 \uB85C\uADF8\uC778\n  // - \uC9E7\uC740 \uC2DC\uAC04 \uB0B4 \uB2E4\uB978 \uC704\uCE58\uC5D0\uC11C\uC758 \uB85C\uADF8\uC778\n  // - \uC54C\uB824\uC9C0\uC9C0 \uC54A\uC740 \uB514\uBC14\uC774\uC2A4\n  // - \uBE44\uC815\uC0C1\uC801\uC778 \uC2DC\uAC04\uB300 \uB85C\uADF8\uC778\n\n  return {\n    suspicious: false,\n    reason: undefined\n  };\n}\n", "import { sign } from 'hono/jwt';\nimport type { Env } from '../index';\nimport type { AuthUser } from '../types';\nimport { assertEnvVar, generateState, hashSha256 } from '../utils/security';\nimport { queryFirst, execute, transaction } from '../utils/db';\nimport { parseUserAgent, getLocationFromIP, detectSuspiciousActivity } from '../utils/userAgent';\n\ninterface ProviderConfig {\n  clientId: string;\n  clientSecret: string;\n  redirectUri: string;\n}\n\ntype OAuthProvider = 'naver' | 'google';\n\ninterface StatePayload {\n  provider: OAuthProvider;\n  redirectUri: string;\n  callbackUrl?: string;\n  createdAt: string;\n}\n\ninterface DbUserRow {\n  user_id: string;\n  user_identity: string;\n  email: string | null;\n  name: string | null;\n  english_name: string | null;\n  profile_image: string | null;\n  self_bio: string | null;\n  gender: string | null;\n}\n\ninterface IssueTokenOptions {\n  env: Env;\n  userId: string;\n  email?: string | null;\n  role?: string | null;\n  permissions?: string[];\n  userAgent?: string;\n  ipAddress?: string;\n  replaceTokenId?: string;\n}\n\nexport interface OAuthCallbackResult {\n  user: AuthUser;\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: number;\n  redirectUri: string;\n  callbackUrl?: string;\n}\n\nconst DEFAULT_ACCESS_TOKEN_TTL_SECONDS = 24 * 60 * 60; // 24\uC2DC\uAC04\nconst DEFAULT_REFRESH_TOKEN_TTL_SECONDS = 7 * 24 * 60 * 60; // 7\uC77C\n\nfunction resolveNumericEnv(value: string | undefined, fallback: number): number {\n  if (!value) return fallback;\n  const parsed = Number(value);\n  if (Number.isFinite(parsed) && parsed > 0) {\n    return Math.floor(parsed);\n  }\n  return fallback;\n}\n\nfunction getAccessTokenTtl(env: Env): number {\n  return resolveNumericEnv(env.ACCESS_TOKEN_TTL_SECONDS, DEFAULT_ACCESS_TOKEN_TTL_SECONDS);\n}\n\nfunction getRefreshTokenTtl(env: Env): number {\n  return resolveNumericEnv(env.REFRESH_TOKEN_TTL_SECONDS, DEFAULT_REFRESH_TOKEN_TTL_SECONDS);\n}\n\nfunction getJwtIssuer(env: Env): string {\n  return env.JWT_ISSUER ?? env.API_BASE_URL ?? 'https://api.languagemate.kr';\n}\n\nconst NAVER_AUTHORIZE_URL = 'https://nid.naver.com/oauth2.0/authorize';\nconst NAVER_TOKEN_URL = 'https://nid.naver.com/oauth2.0/token';\nconst NAVER_USERINFO_URL = 'https://openapi.naver.com/v1/nid/me';\n\nconst GOOGLE_AUTHORIZE_URL = 'https://accounts.google.com/o/oauth2/v2/auth';\nconst GOOGLE_TOKEN_URL = 'https://oauth2.googleapis.com/token';\nconst GOOGLE_USERINFO_URL = 'https://www.googleapis.com/oauth2/v2/userinfo';\n\nfunction getProviderConfig(env: Env, provider: OAuthProvider): ProviderConfig {\n  switch (provider) {\n    case 'naver':\n      return {\n        clientId: assertEnvVar(env.NAVER_CLIENT_ID, 'NAVER_CLIENT_ID'),\n        clientSecret: assertEnvVar(env.NAVER_CLIENT_SECRET, 'NAVER_CLIENT_SECRET'),\n        redirectUri: assertEnvVar(env.NAVER_REDIRECT_URI, 'NAVER_REDIRECT_URI')\n      };\n    case 'google':\n      return {\n        clientId: assertEnvVar(env.GOOGLE_CLIENT_ID, 'GOOGLE_CLIENT_ID'),\n        clientSecret: assertEnvVar(env.GOOGLE_CLIENT_SECRET, 'GOOGLE_CLIENT_SECRET'),\n        redirectUri: assertEnvVar(env.GOOGLE_REDIRECT_URI, 'GOOGLE_REDIRECT_URI')\n      };\n    default:\n      throw new Error(`Unsupported provider: ${provider}`);\n  }\n}\n\nfunction normalizeProvider(provider: string): OAuthProvider {\n  const value = provider.toLowerCase();\n  if (value !== 'naver' && value !== 'google') {\n    throw new Error(`Invalid OAuth provider: ${provider}`);\n  }\n  return value;\n}\n\nasync function upsertOAuthUser(\n  env: Env,\n  identity: string,\n  provider: OAuthProvider,\n  payload: { name?: string | null; email?: string | null; profileImage?: string | null }\n): Promise<DbUserRow> {\n  const existing = await queryFirst<DbUserRow>(\n    env.DB,\n    'SELECT user_id, user_identity, email, name, english_name, profile_image, self_bio, gender FROM users WHERE user_identity = ? LIMIT 1',\n    [identity]\n  );\n\n  const nowIso = new Date().toISOString();\n\n  if (existing) {\n    const updates: string[] = [];\n    const params: (string | null)[] = [];\n\n    if (payload.name) {\n      updates.push('name = ?');\n      params.push(payload.name);\n    }\n    if (payload.email) {\n      updates.push('email = ?');\n      params.push(payload.email);\n    }\n    if (payload.profileImage) {\n      updates.push('profile_image = ?');\n      params.push(payload.profileImage);\n    }\n\n    if (updates.length > 0) {\n      updates.push('updated_at = ?');\n      params.push(nowIso);\n      params.push(existing.user_id);\n      await execute(env.DB, `UPDATE users SET ${updates.join(', ')} WHERE user_id = ?`, params);\n    }\n\n    return {\n      ...existing,\n      email: payload.email ?? existing.email,\n      name: payload.name ?? existing.name,\n      profile_image: payload.profileImage ?? existing.profile_image\n    };\n  }\n\n  const userId = crypto.randomUUID();\n  await execute(\n    env.DB,\n    `INSERT INTO users (\n        user_id,\n        user_identity,\n        email,\n        name,\n        profile_image,\n        user_disable,\n        is_onboarding_completed,\n        user_identity_type,\n        user_created_at,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, 0, 0, ?, ?, ?, ?)\n    `,\n    [\n      userId,\n      identity,\n      payload.email ?? null,\n      payload.name ?? null,\n      payload.profileImage ?? null,\n      provider.toUpperCase(),\n      nowIso,\n      nowIso,\n      nowIso\n    ]\n  );\n\n  return {\n    user_id: userId,\n    user_identity: identity,\n    email: payload.email ?? null,\n    name: payload.name ?? null,\n    english_name: null,\n    profile_image: payload.profileImage ?? null,\n    self_bio: null,\n    gender: null\n  };\n}\n\nasync function issueTokens(options: IssueTokenOptions): Promise<{ accessToken: string; refreshToken: string; expiresIn: number }> {\n  const {\n    env,\n    userId,\n    email,\n    role = 'USER',\n    permissions = [],\n    userAgent,\n    ipAddress,\n    replaceTokenId\n  } = options;\n\n  const secret = assertEnvVar(env.JWT_SECRET, 'JWT_SECRET');\n  const accessTokenTtl = getAccessTokenTtl(env);\n  const refreshTokenTtl = getRefreshTokenTtl(env);\n  const issuer = getJwtIssuer(env);\n  const nowSeconds = Math.floor(Date.now() / 1000);\n  const expiresAtSeconds = nowSeconds + accessTokenTtl;\n\n  const payload = {\n    sub: userId,\n    email,\n    role,\n    permissions,\n    iat: nowSeconds,\n    exp: expiresAtSeconds,\n    iss: issuer\n  } as Record<string, unknown>;\n\n  const accessToken = await sign(payload, secret, 'HS512');\n\n  const refreshId = crypto.randomUUID();\n  const refreshPayload = {\n    jti: refreshId,\n    sub: userId,\n    type: 'refresh',\n    iat: nowSeconds,\n    exp: nowSeconds + refreshTokenTtl,\n    iss: issuer\n  } as Record<string, unknown>;\n  const refreshToken = await sign(refreshPayload, secret, 'HS512');\n  const refreshHash = await hashSha256(refreshToken);\n  const issuedAtIso = new Date(nowSeconds * 1000).toISOString();\n  const refreshExpiresAtIso = new Date((nowSeconds + refreshTokenTtl) * 1000).toISOString();\n\n  // User-Agent \uD30C\uC2F1 \uBC0F \uC704\uCE58 \uC815\uBCF4 \uCD94\uCD9C\n  const parsedUA = parseUserAgent(userAgent);\n  const locationInfo = getLocationFromIP(ipAddress);\n  const suspiciousCheck = detectSuspiciousActivity({\n    ipAddress,\n    userAgent\n  });\n\n  await transaction(env.DB, [\n    ...(replaceTokenId\n      ? [\n          {\n            sql: 'UPDATE refresh_tokens SET revoked_at = ? WHERE token_id = ?',\n            params: [issuedAtIso, replaceTokenId]\n          }\n        ]\n      : []),\n    {\n      sql: `INSERT INTO refresh_tokens (\n              token_id,\n              user_id,\n              token_hash,\n              issued_at,\n              expires_at,\n              user_agent,\n              ip_address\n            ) VALUES (?, ?, ?, ?, ?, ?, ?)` ,\n      params: [refreshId, userId, refreshHash, issuedAtIso, refreshExpiresAtIso, userAgent ?? null, ipAddress ?? null]\n    },\n    // \uB85C\uADF8\uC778 \uD788\uC2A4\uD1A0\uB9AC \uAE30\uB85D\n    {\n      sql: `INSERT INTO login_history (\n              user_id,\n              login_time,\n              ip_address,\n              user_agent,\n              device,\n              browser,\n              location,\n              country_code,\n              suspicious,\n              suspicious_reason,\n              session_id,\n              success\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\n      params: [\n        userId,\n        issuedAtIso,\n        ipAddress ?? null,\n        userAgent ?? null,\n        parsedUA.device,\n        parsedUA.browser,\n        locationInfo.location,\n        locationInfo.countryCode,\n        suspiciousCheck.suspicious ? 1 : 0,\n        suspiciousCheck.reason ?? null,\n        refreshId,\n        1 // success = 1\n      ]\n    }\n  ]);\n\n  return {\n    accessToken,\n    refreshToken,\n    expiresIn: accessTokenTtl\n  };\n}\n\nasync function getUserById(env: Env, userId: string): Promise<DbUserRow | null> {\n  return queryFirst<DbUserRow>(\n    env.DB,\n    'SELECT user_id, user_identity, email, name, english_name, profile_image, self_bio, gender FROM users WHERE user_id = ? LIMIT 1',\n    [userId]\n  );\n}\n\nfunction mapDbUserToAuthUser(row: DbUserRow): AuthUser {\n  return {\n    id: row.user_id,\n    email: row.email ?? undefined,\n    role: 'USER',\n    permissions: []\n  };\n}\n\nasync function consumeState(env: Env, state?: string): Promise<StatePayload | null> {\n  if (!state) {\n    return null;\n  }\n  const key = `oauth:state:${state}`;\n  const value = await env.CACHE.get(key, { type: 'json' });\n  if (value) {\n    await env.CACHE.delete(key);\n  }\n  return value as StatePayload | null;\n}\n\nexport async function generateLoginUrl(\n  env: Env,\n  providerName: string,\n  redirectUri?: string\n): Promise<{ url: string; state: string }> {\n  const provider = normalizeProvider(providerName);\n  const config = getProviderConfig(env, provider);\n  const state = generateState(provider);\n\n  // redirectUri\uB294 \uB85C\uADF8\uC778 \uC644\uB8CC \uD6C4 \uD504\uB860\uD2B8\uC5D4\uB4DC\uB85C \uB9AC\uB2E4\uC774\uB809\uD2B8\uD560 URL (target)\n  // OAuth redirect_uri\uB294 \uD56D\uC0C1 config.redirectUri \uC0AC\uC6A9 (\uB124\uC774\uBC84/\uAD6C\uAE00\uC5D0 \uB4F1\uB85D\uB41C \uAC83)\n  const baseRedirect = redirectUri || 'https://languagemate.kr';\n  const callbackUrl = (() => {\n    try {\n      return new URL(`/login/oauth2/code/${provider}`, baseRedirect).toString();\n    } catch {\n      return `https://languagemate.kr/login/oauth2/code/${provider}`;\n    }\n  })();\n\n  const statePayload: StatePayload = {\n    provider,\n    redirectUri: baseRedirect,  // \uCD5C\uC885 \uB9AC\uB2E4\uC774\uB809\uD2B8 \uBAA9\uC801\uC9C0\n    callbackUrl,\n    createdAt: new Date().toISOString()\n  };\n\n  await env.CACHE.put(`oauth:state:${state}`, JSON.stringify(statePayload), {\n    expirationTtl: 300\n  });\n\n  const authorizeUrl = new URL(provider === 'naver' ? NAVER_AUTHORIZE_URL : GOOGLE_AUTHORIZE_URL);\n  authorizeUrl.searchParams.set('response_type', 'code');\n  authorizeUrl.searchParams.set('client_id', config.clientId);\n  authorizeUrl.searchParams.set('redirect_uri', config.redirectUri);  // \uD56D\uC0C1 OAuth \uC571\uC5D0 \uB4F1\uB85D\uB41C URL \uC0AC\uC6A9\n  authorizeUrl.searchParams.set('state', state);\n\n  if (provider === 'google') {\n    authorizeUrl.searchParams.set('scope', 'openid email profile');\n    authorizeUrl.searchParams.set('access_type', 'offline');\n    authorizeUrl.searchParams.set('prompt', 'consent');\n  }\n\n  return {\n    url: authorizeUrl.toString(),\n    state\n  };\n}\n\nexport async function handleOAuthCallback(\n  env: Env,\n  providerName: string,\n  params: { code: string; state?: string },\n  metadata: { userAgent?: string; ipAddress?: string } = {}\n): Promise<OAuthCallbackResult> {\n  const provider = normalizeProvider(providerName);\n  const config = getProviderConfig(env, provider);\n  const statePayload = await consumeState(env, params.state);\n\n  // redirectUri\uB294 \uCD5C\uC885 \uD504\uB860\uD2B8\uC5D4\uB4DC \uB9AC\uB2E4\uC774\uB809\uD2B8 \uBAA9\uC801\uC9C0\n  const finalRedirectUri = statePayload?.redirectUri ?? 'https://languagemate.kr';\n  const callbackUrl = statePayload?.callbackUrl ?? (() => {\n    try {\n      return new URL(`/login/oauth2/code/${provider}`, finalRedirectUri).toString();\n    } catch {\n      return `https://languagemate.kr/login/oauth2/code/${provider}`;\n    }\n  })();\n\n  if (statePayload && statePayload.provider !== provider) {\n    throw new Error('OAuth provider mismatch for provided state');\n  }\n\n  // OAuth \uD1A0\uD070 \uAD50\uD658\uC5D0\uB294 config.redirectUri \uC0AC\uC6A9 (OAuth \uC571\uC5D0 \uB4F1\uB85D\uB41C \uAC83)\n  const result = provider === 'naver'\n    ? await handleNaverCallback(env, config, params.code, params.state, config.redirectUri, metadata)\n    : await handleGoogleCallback(env, config, params.code, config.redirectUri, metadata);\n\n  return {\n    ...result,\n    redirectUri: finalRedirectUri,\n    callbackUrl\n  };\n}\n\nasync function handleNaverCallback(\n  env: Env,\n  config: ProviderConfig,\n  code: string,\n  state: string | undefined,\n  redirectUri: string,\n  metadata: { userAgent?: string; ipAddress?: string }\n): Promise<OAuthCallbackResult> {\n  const body = new URLSearchParams({\n    grant_type: 'authorization_code',\n    client_id: config.clientId,\n    client_secret: config.clientSecret,\n    code,\n    state: state ?? '',\n    redirect_uri: redirectUri\n  });\n\n  const tokenRes = await fetch(NAVER_TOKEN_URL, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body\n  });\n\n  if (!tokenRes.ok) {\n    throw new Error(`Naver token exchange failed: ${tokenRes.status}`);\n  }\n\n  const tokenJson = await tokenRes.json() as { access_token?: string };\n  const accessToken = tokenJson.access_token;\n  if (!accessToken) {\n    throw new Error('Naver token exchange response missing access_token');\n  }\n\n  const profileRes = await fetch(NAVER_USERINFO_URL, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  });\n\n  if (!profileRes.ok) {\n    throw new Error(`Naver userinfo request failed: ${profileRes.status}`);\n  }\n\n  const profileJson = await profileRes.json() as { response?: Record<string, any> };\n  const response = profileJson.response ?? {};\n  const identity = response.id as string;\n\n  if (!identity) {\n    throw new Error('Naver userinfo did not include id');\n  }\n\n  const userRow = await upsertOAuthUser(env, identity, 'naver', {\n    name: response.name ?? response.nickname ?? null,\n    email: response.email ?? null,\n    profileImage: response.profile_image ?? null\n  });\n\n  const tokens = await issueTokens({\n    env,\n    userId: userRow.user_id,\n    email: userRow.email,\n    role: 'USER',\n    permissions: [],\n    userAgent: metadata.userAgent,\n    ipAddress: metadata.ipAddress\n  });\n\n  return {\n    user: mapDbUserToAuthUser(userRow),\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    expiresIn: tokens.expiresIn,\n    redirectUri\n  };\n}\n\nasync function handleGoogleCallback(\n  env: Env,\n  config: ProviderConfig,\n  code: string,\n  redirectUri: string,\n  metadata: { userAgent?: string; ipAddress?: string }\n): Promise<OAuthCallbackResult> {\n  const body = new URLSearchParams({\n    grant_type: 'authorization_code',\n    client_id: config.clientId,\n    client_secret: config.clientSecret,\n    code,\n    redirect_uri: redirectUri\n  });\n\n  const tokenRes = await fetch(GOOGLE_TOKEN_URL, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body\n  });\n\n  if (!tokenRes.ok) {\n    throw new Error(`Google token exchange failed: ${tokenRes.status}`);\n  }\n\n  const tokenJson = await tokenRes.json() as { access_token?: string };\n  const accessToken = tokenJson.access_token;\n\n  if (!accessToken) {\n    throw new Error('Google token exchange response missing access_token');\n  }\n\n  const profileRes = await fetch(GOOGLE_USERINFO_URL, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  });\n\n  if (!profileRes.ok) {\n    throw new Error(`Google userinfo request failed: ${profileRes.status}`);\n  }\n\n  const profileJson = await profileRes.json() as { id?: string; email?: string; name?: string; picture?: string };\n  if (!profileJson.id) {\n    throw new Error('Google userinfo did not include id');\n  }\n\n  const userRow = await upsertOAuthUser(env, profileJson.id, 'google', {\n    name: profileJson.name ?? null,\n    email: profileJson.email ?? null,\n    profileImage: profileJson.picture ?? null\n  });\n\n  const tokens = await issueTokens({\n    env,\n    userId: userRow.user_id,\n    email: userRow.email,\n    role: 'USER',\n    permissions: [],\n    userAgent: metadata.userAgent,\n    ipAddress: metadata.ipAddress\n  });\n\n  return {\n    user: mapDbUserToAuthUser(userRow),\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    expiresIn: tokens.expiresIn,\n    redirectUri\n  };\n}\n\nexport async function refreshTokens(\n  env: Env,\n  refreshToken: string,\n  metadata: { userAgent?: string; ipAddress?: string } = {}\n): Promise<{ accessToken: string; refreshToken: string; expiresIn: number }> {\n  const refreshHash = await hashSha256(refreshToken);\n  const row = await queryFirst<{\n    token_id: string;\n    user_id: string;\n    expires_at: string;\n    revoked_at: string | null;\n  }>(\n    env.DB,\n    'SELECT token_id, user_id, expires_at, revoked_at FROM refresh_tokens WHERE token_hash = ? LIMIT 1',\n    [refreshHash]\n  );\n\n  if (!row) {\n    throw new Error('Invalid refresh token');\n  }\n\n  if (row.revoked_at) {\n    throw new Error('Refresh token revoked');\n  }\n\n  if (Date.parse(row.expires_at) < Date.now()) {\n    throw new Error('Refresh token expired');\n  }\n\n  const user = await getUserById(env, row.user_id);\n  if (!user) {\n    throw new Error('User not found for refresh token');\n  }\n\n  return issueTokens({\n    env,\n    userId: user.user_id,\n    email: user.email,\n    role: 'USER',\n    permissions: [],\n    userAgent: metadata.userAgent,\n    ipAddress: metadata.ipAddress,\n    replaceTokenId: row.token_id\n  });\n}\n\nexport async function logoutUser(\n  env: Env,\n  _accessToken: string,\n  refreshToken?: string\n): Promise<void> {\n  if (!refreshToken) {\n    return;\n  }\n\n  const refreshHash = await hashSha256(refreshToken);\n  await execute(\n    env.DB,\n    'UPDATE refresh_tokens SET revoked_at = ? WHERE token_hash = ?',\n    [new Date().toISOString(), refreshHash]\n  );\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/minhan/Desktop/public-repo/studymate/STYDYMATE-CLIENT/workers/.wrangler/tmp/bundle-FXIIUY/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/minhan/Desktop/public-repo/studymate/STYDYMATE-CLIENT/workers/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/minhan/Desktop/public-repo/studymate/STYDYMATE-CLIENT/workers/.wrangler/tmp/bundle-FXIIUY/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/minhan/Desktop/public-repo/studymate/STYDYMATE-CLIENT/workers/.wrangler/tmp/bundle-FXIIUY/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/minhan/Desktop/public-repo/studymate/STYDYMATE-CLIENT/workers/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/minhan/Desktop/public-repo/studymate/STYDYMATE-CLIENT/workers/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/minhan/Desktop/public-repo/studymate/STYDYMATE-CLIENT/workers/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/minhan/Desktop/public-repo/studymate/STYDYMATE-CLIENT/workers/src/index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { Hono, type MiddlewareHandler } from 'hono';\nimport type { D1Database, ExportedHandler } from '@cloudflare/workers-types';\nimport { cors } from 'hono/cors';\nimport { timing } from 'hono/timing';\nimport { levelTestRoutes } from './routes/levelTest';\nimport { webrtcRoutes } from './routes/webrtc';\nimport { uploadRoutes } from './routes/upload';\nimport whisperRoutes from './routes/whisper';\nimport llmRoutes from './routes/llm';\nimport imagesRoutes from './routes/images';\nimport transcribeRoutes from './routes/transcribe';\nimport cacheRoutes from './routes/cache';\nimport translateRoutes from './routes/translate';\nimport { analyticsRoutes } from './routes/analytics';\nimport internalRoutes from './routes/internal';\nimport authRoutes from './routes/auth';\nimport userRoutes from './routes/users';\nimport onboardingRoutes from './routes/onboarding';\nimport sessionsRoutes from './routes/sessions';\nimport notificationsRoutes from './routes/notifications';\nimport groupSessionsRoutes from './routes/groupSessions';\nimport groupSessionsAIRoutes from './routes/groupSessionsAI';\nimport presenceRoutes from './routes/presence';\nimport matchingRoutes from './routes/matching';\nimport achievementsRoutes from './routes/achievements';\nimport chatRoutes from './routes/chat';\nimport settingsRoutes from './routes/settings';\nimport pronunciationRoutes from './routes/pronunciation';\nimport { WebRTCRoom } from './durable/WebRTCRoom';\nimport { UserPresence } from './durable/UserPresence';\nimport { ChatHub } from './durable/ChatHub';\nimport { errorHandler, notFoundHandler } from './middleware';\nimport { analyticsMiddleware, errorTrackingMiddleware } from './middleware/analytics';\nimport { successResponse } from './utils/response';\nimport { Variables } from './types';\nimport { setInactiveUsersOffline } from './services/userStatus';\nimport {\n  processScheduledNotifications,\n  createStudyReminderNotifications,\n  createGoalProgressNotifications\n} from './services/notifications';\nimport { handleNotificationWebSocket } from './websocket/notificationSocket';\n\n// Export Durable Object\nexport { WebRTCRoom, UserPresence, ChatHub };\n\n// Type definitions for bindings\nexport interface AppBindings {\n  AI: Ai;\n  ROOM: DurableObjectNamespace;\n  USER_PRESENCE: DurableObjectNamespace;\n  CHAT_HUB: DurableObjectNamespace;\n  STORAGE: R2Bucket;\n  CACHE: KVNamespace;\n  ANALYTICS?: AnalyticsEngineDataset;\n  ENVIRONMENT: string;\n  CORS_ORIGIN: string;\n  JWT_SECRET?: string;\n  API_KEYS?: string;\n  INTERNAL_SECRET?: string;\n  INTERNAL_API_KEY?: string;\n  API_VERSION?: string;\n  DB: D1Database;\n  API_BASE_URL?: string;\n  NAVER_CLIENT_ID?: string;\n  NAVER_CLIENT_SECRET?: string;\n  NAVER_REDIRECT_URI?: string;\n  GOOGLE_CLIENT_ID?: string;\n  GOOGLE_CLIENT_SECRET?: string;\n  GOOGLE_REDIRECT_URI?: string;\n  ACCESS_TOKEN_TTL_SECONDS?: string;\n  REFRESH_TOKEN_TTL_SECONDS?: string;\n  JWT_ISSUER?: string;\n}\n\n// Export Env type for other modules\nexport type Env = AppBindings;\n\nexport const scheduled: ExportedHandler<AppBindings>['scheduled'] = async (controller, env, ctx) => {\n  const job = (async () => {\n    const currentHour = new Date().getUTCHours();\n    const currentDay = new Date().getUTCDay(); // 0 = Sunday, 1 = Monday, etc.\n\n    // 1. \uBE44\uD65C\uC131 \uC0AC\uC6A9\uC790 \uC624\uD504\uB77C\uC778 \uCC98\uB9AC (\uB9E4 5\uBD84\uB9C8\uB2E4)\n    try {\n      const changed = await setInactiveUsersOffline(env, 15);\n      if (changed > 0) {\n        console.log(`[presence-cron] Marked ${changed} users offline.`);\n      }\n    } catch (error) {\n      console.error('[presence-cron] Failed to update inactive users', error);\n    }\n\n    // 2. \uC2A4\uCF00\uC904\uB41C \uC54C\uB9BC \uCC98\uB9AC (\uB9E4 5\uBD84\uB9C8\uB2E4)\n    try {\n      const delivered = await processScheduledNotifications(env);\n      if (delivered > 0) {\n        console.log(`[notifications-cron] Delivered ${delivered} scheduled notifications.`);\n      }\n    } catch (error) {\n      console.error('[notifications-cron] Failed to process scheduled notifications', error);\n    }\n\n    // 3. \uD559\uC2B5 \uB9AC\uB9C8\uC778\uB354 \uC54C\uB9BC (\uB9E4\uC77C \uC624\uD6C4 8\uC2DC UTC = \uD55C\uAD6D\uC2DC\uAC04 \uC624\uC804 5\uC2DC)\n    if (currentHour === 20) {\n      try {\n        const created = await createStudyReminderNotifications(env);\n        if (created > 0) {\n          console.log(`[study-reminder-cron] Created ${created} study reminder notifications.`);\n        }\n      } catch (error) {\n        console.error('[study-reminder-cron] Failed to create study reminders', error);\n      }\n    }\n\n    // 4. \uBAA9\uD45C \uC9C4\uD589\uB960 \uC54C\uB9BC (\uB9E4\uC8FC \uC77C\uC694\uC77C \uC624\uD6C4 9\uC2DC UTC = \uD55C\uAD6D\uC2DC\uAC04 \uC6D4\uC694\uC77C \uC624\uC804 6\uC2DC)\n    if (currentDay === 0 && currentHour === 21) {\n      try {\n        const created = await createGoalProgressNotifications(env);\n        if (created > 0) {\n          console.log(`[goal-progress-cron] Created ${created} goal progress notifications.`);\n        }\n      } catch (error) {\n        console.error('[goal-progress-cron] Failed to create goal progress notifications', error);\n      }\n    }\n  })();\n  ctx.waitUntil(job);\n};\n\n// API \uBC84\uC804\nconst API_VERSION = 'v1';\n\n// Create Hono app with typed context\nexport const app = new Hono<{ Bindings: AppBindings; Variables: Variables }>();\n\n// \uACF5\uD1B5 \uC5D0\uB7EC \uD578\uB4E4\uB7EC\uB97C \uCD5C\uC0C1\uB2E8\uC5D0 \uB4F1\uB85D\uD574 ApiError\uB97C \uC62C\uBC14\uB978 \uC0C1\uD0DC\uCF54\uB4DC\uB85C \uBCC0\uD658\napp.use('*', errorHandler);\n\n// Analytics \uBC0F \uC5D0\uB7EC \uCD94\uC801 \uBBF8\uB4E4\uC6E8\uC5B4\napp.use(errorTrackingMiddleware);\napp.use(analyticsMiddleware);\n\n// CORS middleware\napp.use('*', async (c, next) => {\n  // CORS_ORIGIN\uC774 \uCF64\uB9C8\uB85C \uAD6C\uBD84\uB41C \uC5EC\uB7EC \uB3C4\uBA54\uC778\uC77C \uC218 \uC788\uC74C\n  const corsOrigin = c.env?.CORS_ORIGIN || 'http://localhost:3000';\n  const allowedOrigins = corsOrigin.split(',').map(o => o.trim());\n\n  const corsMiddleware = cors({\n    origin: (origin) => {\n      // origin\uC774 \uC5C6\uB294 \uACBD\uC6B0 (\uC608: \uB3D9\uC77C \uCD9C\uCC98 \uC694\uCCAD)\uB3C4 \uD5C8\uC6A9\n      if (!origin) return corsOrigin;\n      // \uD5C8\uC6A9\uB41C origin \uBAA9\uB85D\uC5D0 \uC788\uB294\uC9C0 \uD655\uC778\n      if (allowedOrigins.some(allowed => origin.startsWith(allowed))) {\n        return origin;\n      }\n      // \uAE30\uBCF8\uAC12 \uBC18\uD658\n      return allowedOrigins[0];\n    },\n    allowMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n    allowHeaders: ['Content-Type', 'Authorization', 'X-Request-ID', 'X-API-Key'],\n    exposeHeaders: ['Content-Length', 'X-Request-ID', 'X-RateLimit-Limit', 'X-RateLimit-Remaining'],\n    maxAge: 86400,\n    credentials: true,\n  });\n  return corsMiddleware(c, next);\n});\n\napp.get('/ws/chat', (c) => {\n  const id = c.env.CHAT_HUB.idFromName('global');\n  const stub = c.env.CHAT_HUB.get(id);\n  return stub.fetch(c.req.raw);\n});\n\napp.get('/ws/notifications', (c) => handleNotificationWebSocket(c));\n\n// API \uC815\uBCF4 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.get('/', (c) => {\n  return successResponse(c, {\n    name: 'STUDYMATE API',\n    version: API_VERSION,\n    status: 'operational',\n    documentation: '/api/docs',\n    endpoints: {\n      health: '/health',\n      levelTest: `/api/${API_VERSION}/level-test`,\n      webrtc: `/api/${API_VERSION}/room`,\n      upload: `/api/${API_VERSION}/upload`,\n      whisper: `/api/${API_VERSION}/whisper`,\n      llm: `/api/${API_VERSION}/llm`,\n      images: `/api/${API_VERSION}/images`,\n      cache: `/api/${API_VERSION}/cache`,\n      transcribe: `/api/${API_VERSION}/transcribe`,\n      analytics: `/api/${API_VERSION}/analytics`,\n      translate: `/api/${API_VERSION}/translate`\n    }\n  });\n});\n\n// Health check\napp.get('/health', (c) => {\n  return successResponse(c, {\n    status: 'healthy',\n    environment: c.env?.ENVIRONMENT,\n    version: API_VERSION,\n    services: {\n      ai: 'operational',\n      storage: 'operational',\n      cache: 'operational',\n      durableObjects: 'operational'\n    }\n  });\n});\n\n// \uBA54\uD2B8\uB9AD\uC2A4 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.get('/metrics', (c) => {\n  // \uC2E4\uC81C \uAD6C\uD604\uC5D0\uC11C\uB294 Prometheus \uD615\uC2DD\uC73C\uB85C \uBA54\uD2B8\uB9AD \uB178\uCD9C\n  return c.text(`# HELP http_requests_total Total number of HTTP requests\n# TYPE http_requests_total counter\nhttp_requests_total{method=\"GET\",endpoint=\"/health\"} 1\n`);\n});\n\n// API v1 \uB77C\uC6B0\uD2B8 \uADF8\uB8F9\nconst v1 = new Hono<{ Bindings: AppBindings; Variables: Variables }>();\n\n// v1 API \uB77C\uC6B0\uD2B8 \uB4F1\uB85D (\uBCF5\uC218\uD615 & kebab-case \uD45C\uC900)\nv1.route('/auth', authRoutes);\nv1.route('/login', authRoutes);  // OAuth login \uACBD\uB85C \uCD94\uAC00\nv1.route('/users', userRoutes);\nv1.route('/onboarding', onboardingRoutes);\nv1.route('/sessions', sessionsRoutes);\nv1.route('/notifications', notificationsRoutes);\nv1.route('/group-sessions', groupSessionsRoutes);\nv1.route('/group-sessions/ai', groupSessionsAIRoutes);\nv1.route('/presence', presenceRoutes);\nv1.route('/matching', matchingRoutes);\nv1.route('/achievements', achievementsRoutes);\nv1.route('/chat', chatRoutes);\nv1.route('/settings', settingsRoutes);\nv1.route('/pronunciation', pronunciationRoutes);\nv1.route('/level-test', levelTestRoutes);\nv1.route('/room', webrtcRoutes);\nv1.route('/upload', uploadRoutes);\nv1.route('/whisper', whisperRoutes);\nv1.route('/llm', llmRoutes);\nv1.route('/images', imagesRoutes);\nv1.route('/cache', cacheRoutes);\nv1.route('/transcribe', transcribeRoutes);\nv1.route('/translate', translateRoutes);\nv1.route('/analytics', analyticsRoutes);\n\n// \uB0B4\uBD80 \uC11C\uBE44\uC2A4 API (\uB808\uAC70\uC2DC \uC5F0\uB3D9)\nv1.route('/internal', internalRoutes);\n\n// API \uBC84\uC804 \uB77C\uC6B0\uD305\napp.route(`/api/${API_VERSION}`, v1);\n\n// /api/v1/health \uC5D4\uB4DC\uD3EC\uC778\uD2B8 (\uD504\uB860\uD2B8\uC5D4\uB4DC \uD638\uD658\uC131)\napp.get(`/api/${API_VERSION}/health`, (c) => {\n  return successResponse(c, {\n    status: 'healthy',\n    environment: c.env?.ENVIRONMENT,\n    version: API_VERSION,\n    services: {\n      ai: 'operational',\n      storage: 'operational',\n      cache: 'operational',\n      durableObjects: 'operational'\n    }\n  });\n});\n\n// OAuth \uCF5C\uBC31\uC744 \uC704\uD55C \uC9C1\uC811 \uB77C\uC6B0\uD305 (\uB124\uC774\uBC84/\uAD6C\uAE00\uC5D0 \uB4F1\uB85D\uB41C redirect_uri)\n// /login/oauth2/code/naver\uC640 /login/oauth2/code/google\uC744 \uC9C1\uC811 \uCC98\uB9AC\napp.get('/login/oauth2/code/:provider', async (c) => {\n  const provider = c.req.param('provider');\n  const code = c.req.query('code');\n  const state = c.req.query('state') || undefined;\n\n  if (!code) {\n    return c.json({\n      success: false,\n      error: {\n        message: 'Missing OAuth code',\n        code: 'INVALID_OAUTH_CALLBACK'\n      }\n    }, 400);\n  }\n\n  // handleOAuthCallback \uC9C1\uC811 \uC784\uD3EC\uD2B8\n  const { handleOAuthCallback } = await import('./services/auth');\n  const { AppError } = await import('./utils/errors');\n\n  try {\n    const result = await handleOAuthCallback(\n      c.env,\n      provider,\n      { code, state },\n      {\n        userAgent: c.req.header('User-Agent') || undefined,\n        ipAddress:\n          c.req.header('CF-Connecting-IP') ||\n          c.req.header('X-Forwarded-For') ||\n          c.req.header('X-Real-IP') ||\n          undefined\n      }\n    );\n    const acceptsJson = (c.req.header('Accept') || '').includes('application/json');\n    if (!acceptsJson) {\n      const redirectTarget = result.callbackUrl || result.redirectUri;\n      if (!redirectTarget) {\n        return successResponse(c, result);\n      }\n      const redirectUrl = new URL(redirectTarget);\n      redirectUrl.searchParams.set('accessToken', result.accessToken);\n      redirectUrl.searchParams.set('refreshToken', result.refreshToken);\n      redirectUrl.searchParams.set('provider', provider);\n      if (state) {\n        redirectUrl.searchParams.set('state', state);\n      }\n      if (result.redirectUri && result.redirectUri !== redirectTarget) {\n        redirectUrl.searchParams.set('redirect', result.redirectUri);\n      }\n      return c.redirect(redirectUrl.toString());\n    }\n    return successResponse(c, result);\n  } catch (error) {\n    if (error instanceof AppError) {\n      throw error;\n    }\n    const message = error instanceof Error ? error.message : 'Authentication failure';\n    throw new AppError(message, 500, 'AUTH_OPERATION_FAILED');\n  }\n});\n\n// 404 handler\napp.notFound(notFoundHandler);\n\n// Global error handler\uB294 middleware\uC5D0\uC11C \uCC98\uB9AC\n\nconst fetchHandler: ExportedHandler<AppBindings>['fetch'] = (request, env, ctx) =>\n  app.fetch(request, env, ctx);\n\nconst worker: ExportedHandler<AppBindings> = {\n  fetch: fetchHandler,\n  scheduled,\n};\n\nexport default worker;\n", "// src/index.ts\nimport { Hono } from \"./hono.js\";\nexport {\n  Hono\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/router/reg-exp-router/index.ts\nimport { RegExpRouter } from \"./router.js\";\nexport {\n  RegExpRouter\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        if (regexpStr === \".*\") {\n          throw PATH_ERROR;\n        }\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/smart-router/index.ts\nimport { SmartRouter } from \"./router.js\";\nexport {\n  SmartRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/index.ts\nimport { TrieRouter } from \"./router.js\";\nexport {\n  TrieRouter\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          if (!part && !(matcher instanceof RegExp)) {\n            continue;\n          }\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "import { Hono } from 'hono';\nimport type { AppBindings as Env } from '../index';\nimport { Variables } from '../types';\nimport { auth } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport { processAudio, evaluateLanguageLevel, generateLevelFeedback } from '../services/ai';\nimport { performComprehensiveEvaluation } from '../services/advancedLevelEvaluation';\nimport { saveToR2, getFromR2 } from '../services/storage';\nimport { log } from '../utils/logger';\n\nconst levelTestRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\nconst SESSION_TTL_SECONDS = 60 * 60 * 24 * 14; // 14 days\nconst HISTORY_TTL_SECONDS = 60 * 60 * 24 * 90; // 90 days\nconst MAX_HISTORY_ITEMS = 20;\n\nconst SCORE_KEYS = ['pronunciation', 'fluency', 'grammar', 'vocabulary', 'coherence', 'interaction'] as const;\ntype ScoreKey = typeof SCORE_KEYS[number];\n\ninterface LevelTestAnswer {\n  questionId: number;\n  transcription?: string;\n  audioKey?: string;\n  audioType?: string;\n  submittedAt: string;\n  responseTimeSeconds?: number | null;\n  evaluation?: {\n    scores: Record<ScoreKey, number>;\n    feedback: string;\n    suggestions: string[];\n    estimatedLevel?: string;\n  };\n}\n\ninterface LevelTestResult {\n  testId: string;\n  level: string;\n  estimatedLevel: string;\n  overallScore: number;\n  scores: Record<ScoreKey, number>;\n  strengths: string[];\n  improvements: string[];\n  suggestions: string[];\n  evaluations: Array<{\n    questionId: number;\n    question: string;\n    transcription: string;\n    scores: Record<ScoreKey, number>;\n    feedback: string;\n    suggestions: string[];\n    estimatedLevel?: string;\n  }>;\n  completedAt: string;\n  feedbackSummary: string;\n}\n\ninterface LevelTestSession {\n  testId: string;\n  userId: string;\n  languageCode: string;\n  testType: string;\n  testLevel: string;\n  questionCount: number;\n  mode: 'standard' | 'voice';\n  questions: typeof TEST_QUESTIONS;\n  answers: LevelTestAnswer[];\n  status: 'in-progress' | 'completed' | 'cancelled';\n  startedAt: string;\n  completedAt?: string;\n  result?: LevelTestResult;\n}\n\ninterface LevelTestHistoryEntry {\n  testId: string;\n  startedAt: string;\n  completedAt?: string;\n  status: LevelTestSession['status'];\n  languageCode: string;\n  testType: string;\n  testLevel: string;\n  overallScore?: number;\n  level?: string;\n}\n\nconst optionalAuth = auth({ optional: true });\nlevelTestRoutes.use('*', optionalAuth);\n\nconst TEST_QUESTIONS = [\n  {\n    id: 1,\n    text: \"Introduce yourself. Tell me about your name, where you're from, and what you do.\",\n    korean: \"\uC790\uAE30\uC18C\uAC1C\uB97C \uD574\uC8FC\uC138\uC694. \uC774\uB984, \uCD9C\uC2E0\uC9C0, \uD558\uB294 \uC77C\uC5D0 \uB300\uD574 \uB9D0\uC500\uD574\uC8FC\uC138\uC694.\",\n    duration: 60,\n    difficulty: 'A1-A2'\n  },\n  {\n    id: 2,\n    text: \"Describe your typical day. What do you usually do from morning to evening?\",\n    korean: \"\uC77C\uC0C1\uC801\uC778 \uD558\uB8E8\uB97C \uC124\uBA85\uD574\uC8FC\uC138\uC694. \uC544\uCE68\uBD80\uD130 \uC800\uB141\uAE4C\uC9C0 \uBCF4\uD1B5 \uBB34\uC5C7\uC744 \uD558\uB098\uC694?\",\n    duration: 90,\n    difficulty: 'A2-B1'\n  },\n  {\n    id: 3,\n    text: \"Talk about a memorable experience you had recently. What happened and how did you feel?\",\n    korean: \"\uCD5C\uADFC\uC5D0 \uC788\uC5C8\uB358 \uAE30\uC5B5\uC5D0 \uB0A8\uB294 \uACBD\uD5D8\uC5D0 \uB300\uD574 \uC774\uC57C\uAE30\uD574\uC8FC\uC138\uC694. \uBB34\uC2A8 \uC77C\uC774 \uC788\uC5C8\uACE0 \uC5B4\uB5BB\uAC8C \uB290\uAF08\uB098\uC694?\",\n    duration: 120,\n    difficulty: 'B1-B2'\n  },\n  {\n    id: 4,\n    text: \"What are your thoughts on technology's impact on education? Discuss both positive and negative aspects.\",\n    korean: \"\uAE30\uC220\uC774 \uAD50\uC721\uC5D0 \uBBF8\uCE58\uB294 \uC601\uD5A5\uC5D0 \uB300\uD55C \uB2F9\uC2E0\uC758 \uC0DD\uAC01\uC740 \uBB34\uC5C7\uC778\uAC00\uC694? \uAE0D\uC815\uC801\uC778 \uBA74\uACFC \uBD80\uC815\uC801\uC778 \uBA74\uC744 \uBAA8\uB450 \uB17C\uC758\uD574\uC8FC\uC138\uC694.\",\n    duration: 180,\n    difficulty: 'B2-C1'\n  }\n];\n\nfunction generateTestId(): string {\n  const now = Date.now();\n  const random = Math.floor(Math.random() * 1000);\n  return String(now * 1000 + random);\n}\n\nfunction sessionKey(testId: string) {\n  return `level-test:session:${testId}`;\n}\n\nfunction userHistoryKey(userId: string) {\n  return `level-test:history:${userId}`;\n}\n\nasync function loadSession(env: Env, testId: string): Promise<LevelTestSession | null> {\n  const raw = await env.CACHE.get(sessionKey(testId));\n  if (!raw) return null;\n  try {\n    return JSON.parse(raw);\n  } catch (error) {\n    log.error('Failed to parse level test session', error as Error, { component: 'LEVEL_TEST', testId });\n    return null;\n  }\n}\n\nasync function requireSession(env: Env, testId: string): Promise<LevelTestSession> {\n  const session = await loadSession(env, testId);\n  if (!session) {\n    throw new AppError('Level test not found', 404, 'LEVEL_TEST_NOT_FOUND');\n  }\n  return session;\n}\n\nfunction ensureOwnership(session: LevelTestSession, userId: string) {\n  if (session.userId !== userId) {\n    throw new AppError('You do not have access to this test', 403, 'LEVEL_TEST_FORBIDDEN');\n  }\n}\n\nasync function saveSession(env: Env, session: LevelTestSession) {\n  await env.CACHE.put(sessionKey(session.testId), JSON.stringify(session), {\n    expirationTtl: SESSION_TTL_SECONDS\n  });\n  await updateHistory(env, session.userId, session);\n}\n\nasync function updateHistory(env: Env, userId: string, session: LevelTestSession) {\n  const key = userHistoryKey(userId);\n  const raw = await env.CACHE.get(key);\n  let history: LevelTestHistoryEntry[] = [];\n  if (raw) {\n    try {\n      history = JSON.parse(raw);\n    } catch (error) {\n      history = [];\n    }\n  }\n\n  const summary: LevelTestHistoryEntry = {\n    testId: session.testId,\n    startedAt: session.startedAt,\n    completedAt: session.completedAt,\n    status: session.status,\n    languageCode: session.languageCode,\n    testType: session.testType,\n    testLevel: session.testLevel,\n    overallScore: session.result?.overallScore,\n    level: session.result?.level\n  };\n\n  history = history.filter((item) => item.testId !== session.testId);\n  history.unshift(summary);\n  if (history.length > MAX_HISTORY_ITEMS) {\n    history = history.slice(0, MAX_HISTORY_ITEMS);\n  }\n\n  await env.CACHE.put(key, JSON.stringify(history), {\n    expirationTtl: HISTORY_TTL_SECONDS\n  });\n}\n\nasync function getUserHistory(env: Env, userId: string): Promise<LevelTestHistoryEntry[]> {\n  const raw = await env.CACHE.get(userHistoryKey(userId));\n  if (!raw) return [];\n  try {\n    return JSON.parse(raw);\n  } catch (error) {\n    return [];\n  }\n}\n\nfunction buildAudioKey(session: LevelTestSession, questionId: number) {\n  return `level-test/${session.userId}/${session.testId}/question-${questionId}.webm`;\n}\n\nfunction buildAudioUrl(testId: string, questionId: number) {\n  return `/api/v1/level-test/${testId}/audio/${questionId}`;\n}\n\nfunction sanitizeSession(session: LevelTestSession) {\n  return {\n    testId: Number(session.testId),\n    status: session.status,\n    languageCode: session.languageCode,\n    testType: session.testType,\n    testLevel: session.testLevel,\n    mode: session.mode,\n    startedAt: session.startedAt,\n    completedAt: session.completedAt ?? null,\n    questions: session.questions,\n    answers: session.answers.map((answer) => ({\n      questionId: answer.questionId,\n      transcription: answer.transcription ?? null,\n      submittedAt: answer.submittedAt,\n      responseTimeSeconds: answer.responseTimeSeconds ?? null,\n      audioUrl: answer.audioKey ? buildAudioUrl(session.testId, answer.questionId) : null,\n      evaluation: answer.evaluation ?? null\n    })),\n    result: session.result\n      ? {\n          ...session.result,\n          testId: Number(session.result.testId)\n        }\n      : null\n  };\n}\n\nfunction getUserIdOrThrow(c: any): string {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('Authentication required', 401, 'AUTH_REQUIRED');\n  }\n  return userId;\n}\n\nfunction pickScore(value: unknown): number | undefined {\n  if (typeof value === 'number' && Number.isFinite(value)) {\n    return Math.max(0, Math.min(100, value));\n  }\n  if (typeof value === 'string') {\n    const parsed = Number.parseFloat(value);\n    if (Number.isFinite(parsed)) {\n      return Math.max(0, Math.min(100, parsed));\n    }\n  }\n  return undefined;\n}\n\nfunction upsertAnswer(session: LevelTestSession, questionId: number): LevelTestAnswer {\n  const existing = session.answers.find((answer) => answer.questionId === questionId);\n  if (existing) {\n    return existing;\n  }\n  const answer: LevelTestAnswer = {\n    questionId,\n    submittedAt: new Date().toISOString(),\n    responseTimeSeconds: null\n  };\n  session.answers.push(answer);\n  return answer;\n}\n\nfunction resolveQuestion(session: LevelTestSession, questionId?: number | null) {\n  if (questionId) {\n    const question = session.questions.find((item) => item.id === questionId);\n    if (!question) {\n      throw new AppError('Invalid question id', 400, 'LEVEL_TEST_INVALID_QUESTION');\n    }\n    return question;\n  }\n\n  const unanswered = session.questions.find((question) => !session.answers.some((answer) => answer.questionId === question.id));\n  if (!unanswered) {\n    throw new AppError('All questions already answered', 400, 'LEVEL_TEST_COMPLETED');\n  }\n  return unanswered;\n}\n\nfunction aggregateScores(evaluations: LevelTestResult['evaluations']): Record<ScoreKey, number> {\n  const totals: Record<ScoreKey, { sum: number; count: number }> = {\n    pronunciation: { sum: 0, count: 0 },\n    fluency: { sum: 0, count: 0 },\n    grammar: { sum: 0, count: 0 },\n    vocabulary: { sum: 0, count: 0 },\n    coherence: { sum: 0, count: 0 },\n    interaction: { sum: 0, count: 0 }\n  };\n\n  for (const evaluation of evaluations) {\n    for (const key of SCORE_KEYS) {\n      const value = pickScore(evaluation.scores[key]);\n      if (value !== undefined) {\n        totals[key].sum += value;\n        totals[key].count += 1;\n      }\n    }\n  }\n\n  const averages: Record<ScoreKey, number> = {\n    pronunciation: 0,\n    fluency: 0,\n    grammar: 0,\n    vocabulary: 0,\n    coherence: 0,\n    interaction: 0\n  };\n\n  for (const key of SCORE_KEYS) {\n    averages[key] = totals[key].count > 0 ? Math.round(totals[key].sum / totals[key].count) : 0;\n  }\n\n  return averages;\n}\n\nfunction determineLevel(overallScore: number): string {\n  if (overallScore >= 85) return 'C2';\n  if (overallScore >= 75) return 'C1';\n  if (overallScore >= 65) return 'B2';\n  if (overallScore >= 55) return 'B1';\n  if (overallScore >= 45) return 'A2';\n  return 'A1';\n}\n\nasync function evaluateSession(env: Env, session: LevelTestSession): Promise<LevelTestResult> {\n  const evaluations: LevelTestResult['evaluations'] = [];\n\n  for (const question of session.questions) {\n    const answer = session.answers.find((item) => item.questionId === question.id);\n    if (!answer?.transcription) {\n      continue;\n    }\n\n    if (!answer.evaluation) {\n      // Use comprehensive evaluation for detailed CEFR analysis\n      try {\n        const comprehensiveEval = await performComprehensiveEvaluation(\n          env.AI,\n          answer.transcription,\n          question.text,\n          'good', // audioQuality - default to 'good', can be enhanced later\n          0      // responseTime - can be calculated from answer metadata\n        );\n\n        const scores: Record<ScoreKey, number> = {\n          pronunciation: comprehensiveEval.detailedScores.pronunciation,\n          fluency: comprehensiveEval.detailedScores.fluency,\n          grammar: comprehensiveEval.detailedScores.grammar,\n          vocabulary: comprehensiveEval.detailedScores.vocabulary,\n          coherence: comprehensiveEval.detailedScores.coherence,\n          interaction: comprehensiveEval.detailedScores.coherence  // Use coherence for interaction\n        };\n\n        // Generate feedback from comprehensive analysis\n        const feedback = `Overall Level: ${comprehensiveEval.overallLevel} (${comprehensiveEval.subLevel})\nConfidence: ${Math.round(comprehensiveEval.confidenceScore)}%\n\nPronunciation: ${comprehensiveEval.pronunciationAnalysis.overallScore}/100 - ${comprehensiveEval.pronunciationAnalysis.clarity} clarity\nGrammar: ${comprehensiveEval.grammarAnalysis.accuracyScore}/100 - ${comprehensiveEval.grammarAnalysis.complexity} complexity\nVocabulary: ${comprehensiveEval.vocabularyAnalysis.rangeScore}/100 - ${comprehensiveEval.vocabularyAnalysis.sophisticationLevel} level\nFluency: ${comprehensiveEval.fluencyAnalysis.overallScore}/100 - ${comprehensiveEval.fluencyAnalysis.speedLevel} speed`;\n\n        const suggestions: string[] = [\n          ...comprehensiveEval.pronunciationAnalysis.improvementAreas.map(area => `Pronunciation: ${area}`),\n          ...comprehensiveEval.grammarAnalysis.commonErrors.slice(0, 2).map(err => `Grammar: ${err}`),\n          ...comprehensiveEval.studyPlan.shortTerm.slice(0, 2)\n        ];\n\n        answer.evaluation = {\n          scores,\n          feedback,\n          suggestions,\n          estimatedLevel: comprehensiveEval.overallLevel,\n          // Store comprehensive data for later use\n          comprehensiveData: comprehensiveEval\n        };\n      } catch (error) {\n        // Fallback to basic evaluation\n        log.warn('Comprehensive evaluation failed, using basic evaluation:', error);\n        const evaluation = await evaluateLanguageLevel(env.AI, answer.transcription, question.text);\n        const scores: Record<ScoreKey, number> = {\n          pronunciation: pickScore(evaluation?.scores?.pronunciation) ?? 0,\n          fluency: pickScore(evaluation?.scores?.fluency) ?? 0,\n          grammar: pickScore(evaluation?.scores?.grammar) ?? 0,\n          vocabulary: pickScore(evaluation?.scores?.vocabulary) ?? 0,\n          coherence: pickScore(evaluation?.scores?.coherence) ?? 0,\n          interaction: pickScore(evaluation?.scores?.interaction) ?? 0\n        };\n\n        answer.evaluation = {\n          scores,\n          feedback: evaluation?.feedback ?? '',\n          suggestions: Array.isArray(evaluation?.suggestions) ? evaluation.suggestions.filter(Boolean) : [],\n          estimatedLevel: evaluation?.estimatedLevel\n        };\n      }\n    }\n\n    evaluations.push({\n      questionId: question.id,\n      question: question.text,\n      transcription: answer.transcription,\n      scores: answer.evaluation!.scores,\n      feedback: answer.evaluation!.feedback,\n      suggestions: answer.evaluation!.suggestions,\n      estimatedLevel: answer.evaluation!.estimatedLevel\n    });\n  }\n\n  if (evaluations.length === 0) {\n    throw new AppError('No submissions to evaluate', 400, 'LEVEL_TEST_NO_SUBMISSIONS');\n  }\n\n  const averages = aggregateScores(evaluations);\n  const overallScore = Math.round(\n    SCORE_KEYS.reduce((sum, key) => sum + averages[key], 0) / SCORE_KEYS.length\n  );\n  const level = determineLevel(overallScore);\n\n  const strengths = SCORE_KEYS.filter((key) => averages[key] >= 75).map((key) => key);\n  const improvements = SCORE_KEYS.filter((key) => averages[key] <= 55).map((key) => key);\n\n  const suggestions = Array.from(\n    new Set(\n      evaluations\n        .flatMap((evaluation) => evaluation.suggestions)\n        .filter(Boolean)\n    )\n  ).slice(0, 6);\n\n  const analysis = {\n    grammar: averages.grammar,\n    vocabulary: averages.vocabulary,\n    fluency: averages.fluency,\n    pronunciation: averages.pronunciation,\n    taskAchievement: averages.coherence,\n    interaction: averages.interaction\n  };\n\n  const feedbackSummary = await generateLevelFeedback(env.AI, analysis, level as any);\n\n  const result: LevelTestResult = {\n    testId: session.testId,\n    level,\n    estimatedLevel: level,\n    overallScore,\n    scores: averages,\n    strengths,\n    improvements,\n    suggestions,\n    evaluations,\n    completedAt: new Date().toISOString(),\n    feedbackSummary\n  };\n\n  return result;\n}\n\nasync function createSession(c: any, mode: 'standard' | 'voice') {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const body = await c.req.json().catch(() => ({}));\n\n  const languageCode = typeof body?.languageCode === 'string' ? body.languageCode : typeof body?.targetLanguage === 'string' ? body.targetLanguage : 'en';\n  const testType = typeof body?.testType === 'string' ? body.testType : 'SPEAKING';\n  const testLevel = typeof body?.testLevel === 'string' ? body.testLevel : 'INTERMEDIATE';\n  const requestedQuestions = Number(body?.totalQuestions) || TEST_QUESTIONS.length;\n  const questionCount = Math.min(Math.max(requestedQuestions, 1), TEST_QUESTIONS.length);\n\n  const testId = generateTestId();\n  const questions = TEST_QUESTIONS.slice(0, questionCount).map((question, index) => ({\n    ...question,\n    id: index + 1\n  }));\n\n  const session: LevelTestSession = {\n    testId,\n    userId,\n    languageCode,\n    testType,\n    testLevel,\n    questionCount,\n    mode,\n    questions,\n    answers: [],\n    status: 'in-progress',\n    startedAt: new Date().toISOString()\n  };\n\n  await saveSession(env, session);\n  return session;\n}\n\nasync function handleAudioSubmission(c: any, session: LevelTestSession, providedQuestionId?: number | null) {\n  const env: Env = c.env;\n  const formData = await c.req.formData();\n  const audio = formData.get('audio') as File | null;\n  if (!audio) {\n    throw new AppError('Audio file missing', 400, 'LEVEL_TEST_AUDIO_REQUIRED');\n  }\n\n  const questionIdFromForm = formData.get('questionId');\n  const questionNumber = providedQuestionId ?? (typeof questionIdFromForm === 'string' ? Number.parseInt(questionIdFromForm, 10) : undefined);\n\n  const question = resolveQuestion(session, Number.isFinite(questionNumber) ? Number(questionNumber) : undefined);\n  const answer = upsertAnswer(session, question.id);\n\n  const audioBuffer = await audio.arrayBuffer();\n  const audioKey = buildAudioKey(session, question.id);\n  await saveToR2(env.STORAGE, audioKey, audioBuffer, audio.type || 'audio/webm');\n\n  const transcription = await processAudio(env.AI, audioBuffer, {\n    task: 'transcribe',\n    language: session.languageCode || 'en',\n    vad_filter: true,\n    initial_prompt: question.text\n  });\n\n  answer.audioKey = audioKey;\n  answer.audioType = audio.type || 'audio/webm';\n  answer.transcription = transcription?.text ?? transcription;\n  answer.submittedAt = new Date().toISOString();\n  answer.responseTimeSeconds = typeof formData.get('responseTimeSeconds') === 'string'\n    ? Number.parseFloat(formData.get('responseTimeSeconds') as string)\n    : answer.responseTimeSeconds ?? null;\n  answer.evaluation = undefined;\n\n  await saveSession(env, session);\n\n  return {\n    testId: Number(session.testId),\n    questionId: question.id,\n    transcription: answer.transcription,\n    audioUrl: buildAudioUrl(session.testId, question.id),\n    submittedAt: answer.submittedAt\n  };\n}\n\n// --- Routes ---\n\nlevelTestRoutes.get('/questions', (c) => {\n  return successResponse(c, { questions: TEST_QUESTIONS });\n});\n\nlevelTestRoutes.post('/start', auth(), async (c) => {\n  const session = await createSession(c, 'standard');\n  return successResponse(c, {\n    testId: Number(session.testId),\n    languageCode: session.languageCode,\n    testType: session.testType,\n    testLevel: session.testLevel,\n    totalQuestions: session.questionCount,\n    questions: session.questions,\n    startedAt: session.startedAt\n  });\n});\n\nlevelTestRoutes.post('/restart', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const body = await c.req.json().catch(() => ({}));\n  const previousTestId = typeof body?.previousTestId === 'string' ? body.previousTestId : typeof body?.testId === 'string' ? body.testId : undefined;\n\n  if (previousTestId) {\n    const previous = await loadSession(env, previousTestId);\n    if (previous && previous.userId === userId && previous.status === 'in-progress') {\n      previous.status = 'cancelled';\n      previous.completedAt = new Date().toISOString();\n      await saveSession(env, previous);\n    }\n  }\n\n  const session = await createSession(c, 'standard');\n  return successResponse(c, {\n    testId: Number(session.testId),\n    languageCode: session.languageCode,\n    testType: session.testType,\n    testLevel: session.testLevel,\n    totalQuestions: session.questionCount,\n    questions: session.questions,\n    startedAt: session.startedAt\n  });\n});\n\nlevelTestRoutes.post('/voice/start', auth(), async (c) => {\n  const session = await createSession(c, 'voice');\n  return successResponse(c, {\n    testId: Number(session.testId),\n    languageCode: session.languageCode,\n    testType: session.testType,\n    testLevel: session.testLevel,\n    totalQuestions: session.questionCount,\n    questions: session.questions,\n    startedAt: session.startedAt\n  });\n});\n\nlevelTestRoutes.post('/voice/:testId/upload', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n  if (session.status === 'completed') {\n    throw new AppError('Test already completed', 400, 'LEVEL_TEST_ALREADY_COMPLETED');\n  }\n  const response = await handleAudioSubmission(c, session, null);\n  return successResponse(c, response);\n});\n\nlevelTestRoutes.post('/voice/transcribe', auth(), async (c) => {\n  const userId = getUserIdOrThrow(c);\n  const contentType = c.req.header('Content-Type') || '';\n\n  let audioBuffer: ArrayBuffer | null = null;\n  let mimeType = 'audio/webm';\n  let whisperOptions: Record<string, unknown> = {};\n\n  if (contentType.startsWith('multipart/form-data')) {\n    const formData = await c.req.formData();\n    const audio = formData.get('audio');\n    if (!(audio instanceof File)) {\n      throw new AppError('audio file is required', 400, 'LEVEL_TEST_AUDIO_REQUIRED');\n    }\n    audioBuffer = await audio.arrayBuffer();\n    mimeType = audio.type || mimeType;\n    whisperOptions = {\n      language: formData.get('language') || undefined,\n      task: formData.get('task') || undefined,\n      initial_prompt: formData.get('initialPrompt') || undefined,\n      prefix: formData.get('prefix') || undefined,\n      vad_filter: formData.get('vadFilter') ?? formData.get('vad_filter') ?? undefined\n    };\n  } else {\n    const body = await c.req.json().catch(() => ({}));\n    if (typeof body.audio === 'string') {\n      const cleaned = body.audio.replace(/^data:[^;]+;base64,/, '');\n      const binaryString = atob(cleaned);\n      const view = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        view[i] = binaryString.charCodeAt(i);\n      }\n      audioBuffer = view.buffer;\n      mimeType = typeof body.mimeType === 'string' ? body.mimeType : mimeType;\n    }\n    whisperOptions = {\n      language: typeof body.language === 'string' ? body.language : undefined,\n      task: typeof body.task === 'string' ? body.task : undefined,\n      initial_prompt: typeof body.initialPrompt === 'string' ? body.initialPrompt : undefined,\n      prefix: typeof body.prefix === 'string' ? body.prefix : undefined,\n      vad_filter: typeof body.vadFilter === 'boolean' ? body.vadFilter : undefined\n    };\n  }\n\n  if (!audioBuffer) {\n    throw new AppError('audio payload is required', 400, 'LEVEL_TEST_AUDIO_REQUIRED');\n  }\n\n  const transcription = await processAudio(c.env.AI, audioBuffer, {\n    task: (whisperOptions.task as string) || 'transcribe',\n    language: (whisperOptions.language as string) || 'auto',\n    vad_filter: whisperOptions.vad_filter !== undefined ? Boolean(whisperOptions.vad_filter) : true,\n    initial_prompt: whisperOptions.initial_prompt as string | undefined,\n    prefix: whisperOptions.prefix as string | undefined\n  });\n\n  return successResponse(c, {\n    userId,\n    mimeType,\n    transcription: transcription.text,\n    wordCount: transcription.word_count,\n    words: transcription.words ?? [],\n    chunks: transcription.chunks\n  });\n});\n\nlevelTestRoutes.post('/voice/:testId/analyze', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n\n  const result = await evaluateSession(env, session);\n  session.result = result;\n  session.status = 'completed';\n  session.completedAt = result.completedAt;\n  await saveSession(env, session);\n\n  return successResponse(c, {\n    ...result,\n    testId: Number(result.testId)\n  });\n});\n\nlevelTestRoutes.get('/voice/:testId/result', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n  if (!session.result) {\n    throw new AppError('Result not available yet', 404, 'LEVEL_TEST_RESULT_NOT_READY');\n  }\n  return successResponse(c, {\n    ...session.result,\n    testId: Number(session.result.testId)\n  });\n});\n\nlevelTestRoutes.post('/submit', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const body = await c.req.json().catch(() => ({}));\n\n  const testId = typeof body?.testId === 'number' ? String(body.testId) : typeof body?.testId === 'string' ? body.testId : undefined;\n  const questionNumber = typeof body?.questionNumber === 'number' ? body.questionNumber : Number(body?.questionId);\n  const userAnswer = typeof body?.userAnswer === 'string' ? body.userAnswer.trim() : undefined;\n\n  if (!testId || !questionNumber || !userAnswer) {\n    throw new AppError('testId, questionNumber and userAnswer are required', 400, 'LEVEL_TEST_INVALID_SUBMISSION');\n  }\n\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n  if (session.status === 'completed') {\n    throw new AppError('Test already completed', 400, 'LEVEL_TEST_ALREADY_COMPLETED');\n  }\n\n  const question = resolveQuestion(session, questionNumber);\n  const answer = upsertAnswer(session, question.id);\n  answer.transcription = userAnswer;\n  answer.submittedAt = new Date().toISOString();\n  answer.responseTimeSeconds = typeof body?.responseTimeSeconds === 'number'\n    ? body.responseTimeSeconds\n    : answer.responseTimeSeconds ?? null;\n  answer.evaluation = undefined;\n\n  await saveSession(env, session);\n\n  return successResponse(c, {\n    testId: Number(session.testId),\n    questionId: question.id,\n    saved: true\n  });\n});\n\nlevelTestRoutes.post('/:testId/audio-answer', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n  if (session.status === 'completed') {\n    throw new AppError('Test already completed', 400, 'LEVEL_TEST_ALREADY_COMPLETED');\n  }\n\n  const response = await handleAudioSubmission(c, session);\n  return successResponse(c, response);\n});\n\nlevelTestRoutes.post('/:testId/complete', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n\n  const result = await evaluateSession(env, session);\n  session.result = result;\n  session.status = 'completed';\n  session.completedAt = result.completedAt;\n  await saveSession(env, session);\n\n  return successResponse(c, {\n    ...result,\n    testId: Number(result.testId)\n  });\n});\n\nlevelTestRoutes.get('/my-tests', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const history = await getUserHistory(env, userId);\n  return successResponse(c, history.map((entry) => ({\n    ...entry,\n    testId: Number(entry.testId)\n  })));\n});\n\nlevelTestRoutes.get('/summary', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const history = await getUserHistory(env, userId);\n\n  if (history.length === 0) {\n    return successResponse(c, {\n      totalTests: 0,\n      completedTests: 0,\n      averageScore: null,\n      latestLevel: null,\n      latestCompletedAt: null\n    });\n  }\n\n  const completed = history.filter((item) => item.status === 'completed' && typeof item.overallScore === 'number');\n  const averageScore = completed.length > 0\n    ? Math.round(completed.reduce((sum, item) => sum + (item.overallScore || 0), 0) / completed.length)\n    : null;\n\n  const latestCompleted = completed.sort((a, b) => (b.completedAt ? Date.parse(b.completedAt) : 0) - (a.completedAt ? Date.parse(a.completedAt) : 0))[0];\n\n  return successResponse(c, {\n    totalTests: history.length,\n    completedTests: completed.length,\n    averageScore,\n    latestLevel: latestCompleted?.level ?? null,\n    latestCompletedAt: latestCompleted?.completedAt ?? null\n  });\n});\n\nlevelTestRoutes.get('/:testId/audio/:questionId', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const questionId = Number.parseInt(c.req.param('questionId'), 10);\n\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n\n  const answer = session.answers.find((item) => item.questionId === questionId);\n  if (!answer?.audioKey) {\n    throw new AppError('Audio not found for this question', 404, 'LEVEL_TEST_AUDIO_NOT_FOUND');\n  }\n\n  const audio = await getFromR2(env.STORAGE, answer.audioKey);\n  if (!audio) {\n    throw new AppError('Audio not found', 404, 'LEVEL_TEST_AUDIO_NOT_FOUND');\n  }\n\n  return new Response(audio.body, {\n    headers: {\n      'Content-Type': answer.audioType || audio.httpMetadata?.contentType || 'audio/webm',\n      'Cache-Control': 'private, max-age=86400'\n    }\n  });\n});\n\nlevelTestRoutes.get('/:testId', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n  return successResponse(c, sanitizeSession(session));\n});\n\n// Get comprehensive evaluation details for a specific answer\nlevelTestRoutes.get('/:testId/answer/:questionId/detailed', auth(), async (c) => {\n  const env: Env = c.env;\n  const userId = getUserIdOrThrow(c);\n  const testId = c.req.param('testId');\n  const questionId = c.req.param('questionId');\n\n  const session = await requireSession(env, testId);\n  ensureOwnership(session, userId);\n\n  const answer = session.answers.find(a => a.questionId === questionId);\n  if (!answer) {\n    throw new AppError('Answer not found', 404, 'ANSWER_NOT_FOUND');\n  }\n\n  // Return comprehensive evaluation data if available\n  if (answer.evaluation && 'comprehensiveData' in answer.evaluation) {\n    return successResponse(c, {\n      questionId,\n      transcription: answer.transcription,\n      evaluation: answer.evaluation.comprehensiveData\n    });\n  }\n\n  throw new AppError('Detailed evaluation not available', 404, 'DETAILED_EVALUATION_NOT_FOUND');\n});\n\nexport { levelTestRoutes };\n", "import { Context, Next } from 'hono';\nimport { verify } from 'hono/jwt';\nimport { AuthUser, Variables } from '../types';\nimport { authError, forbiddenError } from './error-handler';\nimport type { AppBindings as Env } from '../index';\nimport { assertEnvVar } from '../utils/security';\n\ninterface AuthOptions {\n    optional?: boolean; // \uC778\uC99D\uC774 \uC120\uD0DD\uC801\uC778\uC9C0\n    roles?: string[];   // \uD5C8\uC6A9\uB41C \uC5ED\uD560\n    permissions?: string[]; // \uD544\uC694\uD55C \uAD8C\uD55C\n}\n\n/**\n * JWT \uD1A0\uD070\uC5D0\uC11C \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uCD94\uCD9C\n */\nasync function extractUser(token: string, env: Env): Promise<AuthUser | null> {\n    try {\n        const secret = assertEnvVar(env.JWT_SECRET, 'JWT_SECRET');\n        const verifyOptions: {\n            alg: 'HS512';\n            iss?: string;\n        } = { alg: 'HS512' };\n        const issuer = env.JWT_ISSUER ?? env.API_BASE_URL;\n        if (issuer) {\n            verifyOptions.iss = issuer;\n        }\n        const payload = await verify(token, secret, verifyOptions);\n        return {\n            id: payload.sub as string,\n            email: payload.email as string,\n            role: payload.role as string,\n            permissions: payload.permissions as string[]\n        };\n    } catch (error) {\n        return null;\n    }\n}\n\n/**\n * Bearer \uD1A0\uD070 \uC778\uC99D \uBBF8\uB4E4\uC6E8\uC5B4\n */\nexport function auth(options: AuthOptions = {}) {\n    return async (c: Context<{ Bindings: Env; Variables: Variables }>, next: Next) => {\n        const authHeader = c.req.header('Authorization');\n\n        if (!authHeader) {\n            if (options.optional) {\n                return next();\n            }\n\n            return c.json({\n                success: false,\n                error: {\n                    message: 'Authorization header required',\n                    code: 'AUTH_ERROR'\n                },\n                meta: {\n                    timestamp: new Date().toISOString(),\n                    requestId: c.get('requestId')\n                }\n            }, 401);\n        }\n\n        const match = authHeader.match(/^Bearer (.+)$/);\n        if (!match) {\n            return c.json({\n                success: false,\n                error: {\n                    message: 'Invalid authorization format. Use: Bearer <token>',\n                    code: 'AUTH_ERROR'\n                },\n                meta: {\n                    timestamp: new Date().toISOString(),\n                    requestId: c.get('requestId')\n                }\n            }, 401);\n        }\n\n        const token = match[1];\n        const user = await extractUser(token, c.env);\n\n        if (!user) {\n            return c.json({\n                success: false,\n                error: {\n                    message: 'Invalid or expired token',\n                    code: 'AUTH_ERROR'\n                },\n                meta: {\n                    timestamp: new Date().toISOString(),\n                    requestId: c.get('requestId')\n                }\n            }, 401);\n        }\n\n        // \uC5ED\uD560 \uD655\uC778\n        if (options.roles && options.roles.length > 0) {\n            if (!user.role || !options.roles.includes(user.role)) {\n                throw forbiddenError('Insufficient role');\n            }\n        }\n\n        // \uAD8C\uD55C \uD655\uC778\n        if (options.permissions && options.permissions.length > 0) {\n            const hasPermission = options.permissions.some(\n                permission => user.permissions?.includes(permission)\n            );\n            if (!hasPermission) {\n                throw forbiddenError('Insufficient permissions');\n            }\n        }\n\n        // \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uC800\uC7A5\n        c.set('userId', user.id);\n        c.set('user', user as unknown as any);\n\n        await next();\n    };\n}\n\n/**\n * API \uD0A4 \uC778\uC99D \uBBF8\uB4E4\uC6E8\uC5B4\n */\nexport function apiKey(headerName: string = 'X-API-Key') {\n    return async (c: Context<{ Bindings: Env }>, next: Next) => {\n        const key = c.req.header(headerName);\n\n        if (!key) {\n            throw authError(`${headerName} header required`);\n        }\n\n        const validKeys = c.env.API_KEYS?.split(',') || [];\n        if (!validKeys.includes(key)) {\n            throw authError('Invalid API key');\n        }\n\n        await next();\n    };\n}\n\n/**\n * \uB0B4\uBD80 \uC11C\uBE44\uC2A4 \uAC04 \uC778\uC99D \uBBF8\uB4E4\uC6E8\uC5B4\n */\nexport function internalAuth(secret?: string) {\n    return async (c: Context<{ Bindings: Env }>, next: Next) => {\n        const authSecret = c.req.header('X-Internal-Secret');\n        const expectedSecret = secret || c.env.INTERNAL_SECRET;\n\n        if (!authSecret || authSecret !== expectedSecret) {\n            throw authError('Invalid internal authentication');\n        }\n\n        await next();\n    };\n}\n\n/**\n * \uD604\uC7AC \uC778\uC99D\uB41C \uC0AC\uC6A9\uC790 \uAC00\uC838\uC624\uAE30 \uD5EC\uD37C\n */\nexport function getCurrentUser(c: Context): AuthUser | null {\n    return c.get('user') || null;\n}\n\n/**\n * \uC778\uC99D \uD544\uC218 \uD655\uC778 \uD5EC\uD37C\n */\nexport function requireAuth(c: Context): AuthUser {\n    const user = getCurrentUser(c);\n    if (!user) {\n        throw authError('Authentication required');\n    }\n    return user;\n}\n", "import { Context, Next } from 'hono';\nimport { HTTPException } from 'hono/http-exception';\nimport { ApiError, ApiResponse } from '../types';\nimport { log } from '../utils/logger';\nimport { AppError } from '../utils/errors';\n\n/**\n * \uC804\uC5ED \uC5D0\uB7EC \uD578\uB4E4\uB9C1 \uBBF8\uB4E4\uC6E8\uC5B4\n * \uBAA8\uB4E0 \uC608\uC678\uB97C \uCE90\uCE58\uD558\uC5EC \uC77C\uAD00\uB41C \uD615\uC2DD\uC73C\uB85C \uC751\uB2F5\n */\nexport async function errorHandler(c: Context, next: Next) {\n    try {\n        await next();\n    } catch (error) {\n        // \uD1B5\uD569 \uB85C\uAC70 \uC0AC\uC6A9\n        log.error(\n            'Unhandled error in request',\n            error instanceof Error ? error : new Error(String(error)),\n            {\n                requestId: c.get('requestId'),\n                path: c.req.path,\n                method: c.req.method,\n                component: 'ERROR_HANDLER'\n            }\n        );\n\n        // AppError \uCC98\uB9AC (utils/errors.ts\uC5D0\uC11C \uC815\uC758)\n        if (error instanceof AppError) {\n            return c.json<ApiResponse>({\n                success: false,\n                error: {\n                    message: error.message,\n                    code: error.errorCode,\n                    details: error.details\n                },\n                meta: {\n                    timestamp: new Date().toISOString(),\n                    requestId: c.get('requestId')\n                }\n            }, error.statusCode as any);\n        }\n\n        // API \uC5D0\uB7EC \uCC98\uB9AC\n        if (error instanceof ApiError) {\n            return c.json<ApiResponse>({\n                success: false,\n                error: {\n                    message: error.message,\n                    code: error.code,\n                    details: error.details\n                },\n                meta: {\n                    timestamp: new Date().toISOString(),\n                    requestId: c.get('requestId')\n                }\n            }, error.statusCode as any);\n        }\n\n        // Hono HTTP \uC608\uC678 \uCC98\uB9AC\n        if (error instanceof HTTPException) {\n            return c.json<ApiResponse>({\n                success: false,\n                error: {\n                    message: error.message,\n                    code: 'HTTP_EXCEPTION'\n                },\n                meta: {\n                    timestamp: new Date().toISOString(),\n                    requestId: c.get('requestId')\n                }\n            }, { status: error.status });\n        }\n\n        // \uC608\uC0C1\uCE58 \uBABB\uD55C \uC5D0\uB7EC\n        const isDevelopment = c.env.ENVIRONMENT === 'development';\n        return c.json<ApiResponse>({\n            success: false,\n            error: {\n                message: isDevelopment ? (error as Error).message : 'Internal Server Error',\n                code: 'INTERNAL_ERROR',\n                details: isDevelopment ? (error as Error).stack : undefined\n            },\n            meta: {\n                timestamp: new Date().toISOString(),\n                requestId: c.get('requestId')\n            }\n        }, { status: 500 });\n    }\n}\n\n/**\n * 404 \uD578\uB4E4\uB7EC\n */\nexport function notFoundHandler(c: Context): Response {\n    return c.json<ApiResponse>({\n        success: false,\n        error: {\n            message: `Route not found: ${c.req.method} ${c.req.path}`,\n            code: 'NOT_FOUND'\n        },\n        meta: {\n            timestamp: new Date().toISOString(),\n            requestId: c.get('requestId')\n        }\n    }, { status: 404 });\n}\n\n/**\n * \uC720\uD6A8\uC131 \uAC80\uC0AC \uC5D0\uB7EC \uC0DD\uC131 \uD5EC\uD37C\n */\nexport function validationError(message: string, details?: any): ApiError {\n    return new ApiError(400, 'VALIDATION_ERROR', message, details);\n}\n\n/**\n * \uC778\uC99D \uC5D0\uB7EC \uC0DD\uC131 \uD5EC\uD37C\n */\nexport function authError(message: string = 'Unauthorized'): ApiError {\n    return new ApiError(401, 'AUTH_ERROR', message);\n}\n\n/**\n * \uAD8C\uD55C \uC5D0\uB7EC \uC0DD\uC131 \uD5EC\uD37C\n */\nexport function forbiddenError(message: string = 'Forbidden'): ApiError {\n    return new ApiError(403, 'FORBIDDEN', message);\n}\n\n/**\n * \uB9AC\uC18C\uC2A4 \uC5C6\uC74C \uC5D0\uB7EC \uC0DD\uC131 \uD5EC\uD37C\n */\nexport function notFoundError(resource: string): ApiError {\n    return new ApiError(404, 'NOT_FOUND', `${resource} not found`);\n}\n\n/**\n * \uCDA9\uB3CC \uC5D0\uB7EC \uC0DD\uC131 \uD5EC\uD37C\n */\nexport function conflictError(message: string): ApiError {\n    return new ApiError(409, 'CONFLICT', message);\n}", "// API \uC751\uB2F5 \uD0C0\uC785\nexport interface ApiResponse<T = any> {\n    success: boolean;\n    data?: T;\n    error?: {\n        message: string;\n        code?: string;\n        details?: any;\n    };\n    meta?: {\n        timestamp: string;\n        requestId?: string;\n        version?: string;\n        note?: string;\n    };\n}\n\n// \uC5D0\uB7EC \uD0C0\uC785\nexport class ApiError extends Error {\n    constructor(\n        public statusCode: number,\n        public code: string,\n        message: string,\n        public details?: any\n    ) {\n        super(message);\n        this.name = 'ApiError';\n    }\n}\n\n// \uCEE8\uD14D\uC2A4\uD2B8 \uBCC0\uC218 \uD0C0\uC785\nexport interface Variables {\n    requestId: string;\n    userId?: string;\n    startTime: number;\n    user?: AuthUser;\n}\n\n// Context Variable Map for Hono\nexport interface ContextVariableMap {\n    user: AuthUser;\n}\n\n// \uC778\uC99D \uC815\uBCF4 \uD0C0\uC785\nexport interface AuthUser {\n    id: string;\n    email?: string;\n    role?: string;\n    permissions?: string[];\n}\n\n// \uD398\uC774\uC9C0\uB124\uC774\uC158 \uD0C0\uC785\nexport interface PaginationParams {\n    page?: number;\n    limit?: number;\n    sort?: string;\n    order?: 'asc' | 'desc';\n}\n\nexport interface PaginatedResponse<T> extends ApiResponse<T[]> {\n    meta: ApiResponse['meta'] & {\n        page: number;\n        limit: number;\n        total: number;\n        totalPages: number;\n    };\n}\n\n// \uB808\uBCA8 \uD14C\uC2A4\uD2B8 \uAD00\uB828 \uD0C0\uC785\nexport interface LevelTestSubmission {\n    userId: string;\n    questionId: string;\n    audio: File;\n}\n\nexport interface LevelTestResult {\n    userId: string;\n    level: string;\n    analysis: {\n        grammar: number;\n        vocabulary: number;\n        pronunciation: number;\n        fluency: number;\n        coherence: number;\n    };\n    timestamp: string;\n}\n\n// WebRTC \uAD00\uB828 \uD0C0\uC785\nexport interface WebRTCParticipantInfo {\n    userId: string;\n    userName?: string;\n    joinedAt?: string;\n    audioEnabled?: boolean;\n    videoEnabled?: boolean;\n    isScreenSharing?: boolean;\n}\n\nexport interface WebRTCRoom {\n    id: string;\n    participants: WebRTCParticipantInfo[];\n    createdAt: string;\n    type: 'video' | 'audio';\n    maxParticipants: number;\n    metadata?: Record<string, any>;\n}\n\nexport interface ActiveRoomInfo {\n    roomId: string;\n    roomType: 'video' | 'audio';\n    currentParticipants: number;\n    maxParticipants: number;\n    status: 'waiting' | 'active';\n    createdAt: string;\n    updatedAt: string;\n    metadata?: Record<string, any>;\n}\n\nexport interface WebRTCSignal {\n    type: 'offer' | 'answer' | 'ice-candidate';\n    data: any;\n    from: string;\n    to: string;\n}\n\n// User domain types (Workers migration)\nexport interface UserProfile {\n    id: string;\n    email?: string;\n    name?: string;\n    englishName?: string;\n    birthday?: string;\n    birthyear?: string;\n    gender?: string;\n    profileImage?: string;\n    selfBio?: string;\n    location?: {\n        id: number;\n        country: string;\n        city?: string;\n        timeZone?: string;\n    };\n    nativeLanguage?: {\n        id: number;\n        name: string;\n        code: string;\n    };\n    onboardingCompleted: boolean;\n    communicationMethod?: string;\n    dailyMinute?: string;\n    partnerGender?: string;\n    learningExpectation?: string;\n    createdAt: string;\n    updatedAt: string;\n}\n\nexport interface UserSettings {\n    language?: string;\n    marketingOptIn?: boolean;\n    notificationPreferences?: Record<string, boolean>;\n    timeZone?: string;\n}\n\nexport interface OnboardingSummary {\n    languages: Array<{\n        languageId: number;\n        currentLevelId?: number;\n        targetLevelId?: number;\n    }>;\n    topics: number[];\n    motivations: Array<{ motivationId: number; priority?: number }>;\n    learningStyles: number[];\n    groupSizes: number[];\n    partnerPreferences: Array<{ partnerPersonalityId: number; partnerGender?: string }>;\n    schedules: Array<{\n        scheduleId: number;\n        dayOfWeek: string;\n        classTime?: string;\n    }>;\n    communicationMethod?: string;\n}\n\n// Matching domain types\nexport interface MatchingPartner {\n    userId: string;\n    englishName?: string;\n    profileImageUrl?: string;\n    selfBio?: string;\n    age?: number;\n    gender?: string;\n    location?: string;\n    nativeLanguage?: string;\n    targetLanguages?: Array<{\n        languageName: string;\n        currentLevel?: string;\n        targetLevel?: string;\n    }>;\n    interests?: string[];\n    partnerPersonalities?: string[];\n    compatibilityScore: number;\n    compatibilityLevel?: 'HIGH' | 'MEDIUM' | 'LOW';\n    onlineStatus?: string;\n    lastActiveTime?: string;\n}\n\nexport interface CompatibilityCategoryDetail {\n    category: 'language' | 'personality' | 'goals' | 'interests';\n    score: number;\n    description: string;\n}\n\nexport interface CompatibilitySharedInsights {\n    mutualExchangeLanguages: string[];\n    sharedTargetLanguages: string[];\n    sharedInterests: string[];\n    sharedGoals: string[];\n    personalityOverlap: string[];\n}\n\nexport interface CompatibilityScoreResponseType {\n    overallScore: number;\n    compatibilityLevel: 'HIGH' | 'MEDIUM' | 'LOW';\n    recommendation: string;\n    categoryScores: Record<string, number>;\n    categoryDetails: CompatibilityCategoryDetail[];\n    sharedInsights: CompatibilitySharedInsights;\n}\n\n// Achievement domain types\nexport interface AchievementResponseType {\n    id: number;\n    achievementKey: string;\n    title: string;\n    description?: string;\n    category: string;\n    originalCategory?: string;\n    type: string;\n    tier: string;\n    targetValue?: number;\n    targetUnit?: string;\n    xpReward?: number;\n    badgeIconUrl?: string;\n    badgeColor?: string;\n    isActive: boolean;\n    isHidden: boolean;\n    sortOrder?: number;\n    prerequisiteAchievementId?: number;\n}\n\nexport interface UserAchievementResponseType {\n    id: number;\n    achievement: AchievementResponseType;\n    currentProgress: number;\n    isCompleted: boolean;\n    completedAt?: string;\n    isRewardClaimed: boolean;\n    rewardClaimedAt?: string;\n    progressPercentage: number;\n}\n\nexport interface AchievementStatsResponseType {\n    totalAchievements: number;\n    completedAchievements: number;\n    inProgressAchievements: number;\n    totalXpEarned: number;\n    unclaimedRewards: number;\n    completionRate: number;\n    achievementsByCategory: Record<string, number>;\n    achievementsByTier: Record<string, number>;\n    recentCompletions: UserAchievementResponseType[];\n    nearCompletion: UserAchievementResponseType[];\n}\n\n// Chat domain types\nexport interface ChatParticipant {\n    userId: string;\n    name?: string;\n    profileImage?: string;\n}\n\nexport type ChatMessageType = 'TEXT' | 'IMAGE' | 'AUDIO' | 'FILE' | 'MIXED';\n\nexport interface ChatFileResponseType {\n    fileId: number;\n    originalFilename: string;\n    fileUrl: string;\n    fileType: string;\n    contentType?: string;\n    fileSize?: number;\n    thumbnailUrl?: string;\n    duration?: number;\n    createdAt?: string;\n}\n\nexport interface ChatMessageResponseType {\n    messageId: number;\n    roomId: number;\n    sender: ChatParticipant;\n    message?: string;\n    imageUrls: string[];\n    audioUrl?: string;\n    audioDuration?: number;\n    files: ChatFileResponseType[];\n    messageType: ChatMessageType;\n    sentAt: string;\n}\n\nexport interface ChatRoomSummary {\n    roomId: number;\n    roomName: string;\n    roomType: string;\n    isPublic: boolean;\n    maxParticipants?: number;\n    participants: ChatParticipant[];\n    lastMessage?: string;\n    lastMessageAt?: string;\n}\n\nexport interface SessionParticipantInfo {\n    userId: string;\n    name?: string;\n    role: 'HOST' | 'GUEST' | 'BOOKED';\n    joinedAt?: string;\n    profileImage?: string;\n}\n\nexport interface SessionNotificationSettings {\n    reminderBefore: number;\n    enableEmailReminder: boolean;\n    enablePushReminder: boolean;\n    enableSmsReminder: boolean;\n    updatedAt: string;\n}\n\nexport type SessionStatsPeriod = 'week' | 'month' | 'year';\n\nexport interface SessionStatsResponseType {\n    period: SessionStatsPeriod;\n    totalSessions: number;\n    completedSessions: number;\n    cancelledSessions: number;\n    upcomingSessions: number;\n    totalMinutes: number;\n    averageDuration: number;\n    partnersCount: number;\n    streakDays: number;\n    lastSessionAt?: string;\n}\n\nexport interface SessionSummaryResponse {\n    sessionId: number;\n    notes?: string;\n    durationMinutes?: number;\n    rating?: number;\n    highlights: string[];\n    actionItems: string[];\n    feedback?: {\n        rating?: number;\n        comment?: string;\n        partnerRating?: number;\n        partnerComment?: string;\n        tags?: string[];\n        improvementAreas?: string[];\n        wouldRecommend?: boolean;\n    };\n    updatedAt: string;\n}\n\nexport interface SessionTranscriptSegment {\n    speaker: string;\n    content: string;\n    startTime?: string;\n    endTime?: string;\n}\n\nexport interface SessionTranscriptResponse {\n    sessionId: number;\n    language?: string;\n    segments: SessionTranscriptSegment[];\n    generatedAt: string;\n}\n\nexport interface SessionRecordingStatus {\n    sessionId: number;\n    status: 'idle' | 'scheduled' | 'recording' | 'completed' | 'failed';\n    recordAudio: boolean;\n    recordVideo: boolean;\n    recordTranscript: boolean;\n    downloadUrl?: string;\n    message?: string;\n    updatedAt: string;\n}\n\nexport interface SessionInviteResponse {\n    sessionId: number;\n    inviteToken: string;\n    expiresAt: string;\n    joinUrl: string;\n}\n\nexport interface SessionHistoryResponse {\n    sessions: SessionResponseType[];\n    page: number;\n    size: number;\n    total: number;\n}\n\nexport interface MatchingRequestItem {\n    requestId: string;\n    senderId: string;\n    receiverId: string;\n    message?: string;\n    status: string;\n    responseMessage?: string;\n    respondedAt?: string;\n    expiresAt?: string;\n    createdAt: string;\n    partner: {\n        userId: string;\n        name?: string;\n        profileImageUrl?: string;\n    };\n}\n\nexport interface MatchSummary {\n    matchId: string;\n    partnerId: string;\n    partnerName?: string;\n    partnerProfileImageUrl?: string;\n    matchedAt: string;\n}\n\n// Session domain types\nexport interface SessionCreatePayload {\n    title: string;\n    description?: string;\n    sessionType: string;\n    languageCode?: string;\n    skillFocus?: string;\n    levelRequirement?: string;\n    scheduledAt: string; // ISO string\n    durationMinutes: number;\n    maxParticipants?: number;\n    isRecurring?: boolean;\n    recurrencePattern?: string;\n    recurrenceEndDate?: string;\n    isPublic?: boolean;\n    tags?: string;\n    preparationNotes?: string;\n    meetingUrl?: string;\n    partnerId?: string;\n    topic?: string;\n    language?: string;\n    targetLanguage?: string;\n    webRtcRoomId?: string;\n    webRtcRoomType?: string;\n    duration?: number;\n    metadata?: Record<string, any>;\n}\n\nexport interface SessionResponseType {\n    sessionId: number;\n    hostUserId: string;\n    hostUserName?: string;\n    hostUserProfileImage?: string;\n    guestUserId?: string;\n    guestUserName?: string;\n    guestUserProfileImage?: string;\n    title: string;\n    description?: string;\n    sessionType: string;\n    languageCode?: string;\n    skillFocus?: string;\n    levelRequirement?: string;\n    scheduledAt: string;\n    durationMinutes: number;\n    maxParticipants?: number;\n    currentParticipants: number;\n    status: string;\n    meetingUrl?: string;\n    isRecurring: boolean;\n    recurrencePattern?: string;\n    recurrenceEndDate?: string;\n    isPublic: boolean;\n    tags?: string;\n    preparationNotes?: string;\n    startedAt?: string;\n    endedAt?: string;\n    canJoin?: boolean;\n    isHost?: boolean;\n    isParticipant?: boolean;\n}\n\nexport interface SessionBookingResponseType {\n    bookingId: number;\n    sessionId: number;\n    sessionTitle: string;\n    sessionScheduledAt: string;\n    sessionDurationMinutes: number;\n    sessionLanguageCode?: string;\n    hostUserId: string;\n    hostUserName?: string;\n    hostUserProfileImage?: string;\n    status: string;\n    bookingMessage?: string;\n    bookedAt: string;\n    cancelledAt?: string;\n    cancellationReason?: string;\n    attended: boolean;\n    feedbackRating?: number;\n    feedbackComment?: string;\n    reminderSent: boolean;\n    canCancel: boolean;\n}\n\nexport interface SessionCalendarResponse {\n    events: Array<{\n        sessionId: number;\n        title: string;\n        description?: string;\n        startTime: string;\n        endTime: string;\n        eventType: string;\n        status: string;\n        isHost: boolean;\n        color?: string;\n    }>;\n    availableSlots: Array<{\n        startTime: string;\n        endTime: string;\n        isAvailable: boolean;\n    }>;\n}\n\n// Notification domain types\nexport interface NotificationRecord {\n    userId: string;\n    notificationId: number;\n    type: string;\n    title: string;\n    content: string;\n    actionUrl?: string;\n    actionData?: Record<string, any> | null;\n    imageUrl?: string;\n    iconUrl?: string;\n    status: string;\n    priority: number;\n    category?: string;\n    scheduledAt?: string;\n    sentAt?: string;\n    readAt?: string;\n    expiresAt?: string;\n    createdAt: string;\n    isPersistent: boolean;\n    senderUserId?: string;\n    templateId?: string;\n    deliveryChannels?: string;\n    pushSent: boolean;\n    emailSent: boolean;\n    smsSent: boolean;\n    expired?: boolean;\n    highPriority?: boolean;\n    scheduleMetadata?: Record<string, any> | null;\n}\n\nexport interface NotificationListItem {\n    id: number;\n    type: string;\n    category?: string;\n    title: string;\n    message: string;\n    content: string;\n    isRead: boolean;\n    status: string;\n    priority: number;\n    createdAt: string;\n    readAt?: string;\n    scheduledAt?: string;\n    expiresAt?: string;\n    clickUrl?: string;\n    data?: Record<string, any>;\n    imageUrl?: string;\n    iconUrl?: string;\n    highPriority?: boolean;\n    expired?: boolean;\n    scheduleMetadata?: Record<string, any> | null;\n}\n\nexport interface NotificationPreferenceSettings {\n    notificationsEnabled: boolean;\n    pushEnabled: boolean;\n    emailEnabled: boolean;\n    smsEnabled: boolean;\n    sessionNotifications: boolean;\n    sessionReminders: boolean;\n    matchingNotifications: boolean;\n    chatNotifications: boolean;\n    levelTestNotifications: boolean;\n    systemNotifications: boolean;\n    marketingNotifications: boolean;\n    quietHoursEnabled: boolean;\n    quietHoursStart?: string;\n    quietHoursEnd?: string;\n    timezone?: string;\n    notificationLanguage?: string;\n    digestEnabled: boolean;\n    digestFrequency?: string;\n    digestTime?: string;\n    subscriptionTopics?: string[];\n}\n\nexport interface NotificationStats {\n    total: number;\n    unread: number;\n    read: number;\n    today: number;\n    categories: Record<string, number>;\n}\n\n// Group session domain types\nexport interface GroupSessionRecord {\n    id: string;\n    title: string;\n    description?: string;\n    hostUserId: string;\n    hostUserName?: string;\n    hostProfileImage?: string;\n    topicCategory?: string;\n    targetLanguage?: string;\n    languageLevel?: string;\n    maxParticipants?: number;\n    currentParticipants: number;\n    scheduledAt?: string;\n    sessionDuration?: number;\n    status?: string;\n    roomId?: string;\n    sessionTags?: string[];\n    isPublic?: boolean;\n    joinCode?: string;\n    startedAt?: string;\n    endedAt?: string;\n    ratingAverage?: number;\n    ratingCount?: number;\n    participants?: GroupSessionParticipant[];\n    canJoin?: boolean;\n    joinMessage?: string;\n}\n\nexport interface GroupSessionParticipant {\n    userId: string;\n    userName?: string;\n    profileImage?: string;\n    status?: string;\n    joinedAt?: string;\n    isMuted?: boolean;\n    isVideoEnabled?: boolean;\n}\n\nexport interface GroupSessionListItem {\n    id: string;\n    title: string;\n    description?: string;\n    hostUserName?: string;\n    hostProfileImage?: string;\n    topicCategory?: string;\n    targetLanguage?: string;\n    languageLevel?: string;\n    maxParticipants?: number;\n    currentParticipants: number;\n    scheduledAt?: string;\n    sessionDuration?: number;\n    status?: string;\n    sessionTags?: string[];\n    ratingAverage?: number;\n    ratingCount?: number;\n    canJoin?: boolean;\n    timeUntilStart?: string;\n}\n", "/**\n * Cloudflare Workers\uC6A9 \uD1B5\uD569 \uB85C\uAE45 \uC2DC\uC2A4\uD15C\n * Edge \uD658\uACBD\uC758 \uD2B9\uC131\uC744 \uACE0\uB824\uD55C \uCD5C\uC801\uD654\uB41C \uB85C\uAE45\n */\n\nexport interface LogLevel {\n    DEBUG: 0;\n    INFO: 1;\n    WARN: 2;\n    ERROR: 3;\n}\n\nexport const LOG_LEVELS: LogLevel = {\n    DEBUG: 0,\n    INFO: 1,\n    WARN: 2,\n    ERROR: 3\n};\n\nexport interface LogContext {\n    requestId?: string;\n    userId?: string;\n    method?: string;\n    path?: string;\n    ip?: string;\n    userAgent?: string;\n    duration?: number;\n    status?: number;\n    component?: string;\n    operation?: string;\n}\n\nexport interface LogEntry {\n    level: keyof LogLevel;\n    message: string;\n    timestamp: string;\n    context?: LogContext;\n    error?: {\n        name: string;\n        message: string;\n        stack?: string;\n    };\n    metadata?: Record<string, any>;\n}\n\nexport class WorkersLogger {\n    private static instance: WorkersLogger;\n    private currentLevel: number = LOG_LEVELS.INFO;\n    private environment: string = 'production';\n\n    private constructor() {}\n\n    static getInstance(): WorkersLogger {\n        if (!WorkersLogger.instance) {\n            WorkersLogger.instance = new WorkersLogger();\n        }\n        return WorkersLogger.instance;\n    }\n\n    setLevel(level: keyof LogLevel) {\n        this.currentLevel = LOG_LEVELS[level];\n    }\n\n    setEnvironment(env: string) {\n        this.environment = env;\n        // \uAC1C\uBC1C \uD658\uACBD\uC5D0\uC11C\uB294 DEBUG \uB808\uBCA8\uAE4C\uC9C0 \uB85C\uAE45\n        if (env === 'development' || env === 'staging') {\n            this.setLevel('DEBUG');\n        }\n    }\n\n    private shouldLog(level: number): boolean {\n        return level >= this.currentLevel;\n    }\n\n    private createLogEntry(\n        level: keyof LogLevel,\n        message: string,\n        context?: LogContext,\n        error?: Error,\n        metadata?: Record<string, any>\n    ): LogEntry {\n        const entry: LogEntry = {\n            level,\n            message,\n            timestamp: new Date().toISOString(),\n            context,\n            metadata\n        };\n\n        if (error) {\n            entry.error = {\n                name: error.name,\n                message: error.message,\n                stack: this.environment === 'development' ? error.stack : undefined\n            };\n        }\n\n        return entry;\n    }\n\n    private output(entry: LogEntry) {\n        const logString = JSON.stringify(entry);\n        \n        switch (entry.level) {\n            case 'ERROR':\n                console.error(logString);\n                break;\n            case 'WARN':\n                console.warn(logString);\n                break;\n            case 'INFO':\n            case 'DEBUG':\n            default:\n                console.log(logString);\n                break;\n        }\n    }\n\n    debug(message: string, context?: LogContext, metadata?: Record<string, any>) {\n        if (!this.shouldLog(LOG_LEVELS.DEBUG)) return;\n        const entry = this.createLogEntry('DEBUG', message, context, undefined, metadata);\n        this.output(entry);\n    }\n\n    info(message: string, context?: LogContext, metadata?: Record<string, any>) {\n        if (!this.shouldLog(LOG_LEVELS.INFO)) return;\n        const entry = this.createLogEntry('INFO', message, context, undefined, metadata);\n        this.output(entry);\n    }\n\n    warn(message: string, context?: LogContext, metadata?: Record<string, any>) {\n        if (!this.shouldLog(LOG_LEVELS.WARN)) return;\n        const entry = this.createLogEntry('WARN', message, context, undefined, metadata);\n        this.output(entry);\n    }\n\n    error(message: string, error?: Error, context?: LogContext, metadata?: Record<string, any>) {\n        if (!this.shouldLog(LOG_LEVELS.ERROR)) return;\n        const entry = this.createLogEntry('ERROR', message, context, error, metadata);\n        this.output(entry);\n    }\n\n    // API \uD638\uCD9C \uC804\uC6A9 \uB85C\uAE45\n    apiCall(method: string, path: string, status: number, duration: number, context?: LogContext) {\n        const message = `${method.toUpperCase()} ${path} - ${status} (${duration}ms)`;\n        const apiContext: LogContext = {\n            ...context,\n            method: method.toUpperCase(),\n            path,\n            status,\n            duration,\n            component: 'API'\n        };\n\n        if (status >= 500) {\n            this.error(message, undefined, apiContext);\n        } else if (status >= 400) {\n            this.warn(message, apiContext);\n        } else {\n            this.info(message, apiContext);\n        }\n    }\n\n    // \uC131\uB2A5 \uB85C\uAE45\n    performance(operation: string, duration: number, context?: LogContext) {\n        const perfContext: LogContext = {\n            ...context,\n            operation,\n            duration,\n            component: 'PERFORMANCE'\n        };\n\n        if (duration > 5000) {\n            this.warn(`Slow operation: ${operation} (${duration}ms)`, perfContext);\n        } else if (duration > 1000) {\n            this.info(`Operation: ${operation} (${duration}ms)`, perfContext);\n        } else {\n            this.debug(`Operation: ${operation} (${duration}ms)`, perfContext);\n        }\n    }\n\n    // AI \uC11C\uBE44\uC2A4 \uB85C\uAE45\n    aiOperation(service: string, operation: string, duration: number, tokens?: number, context?: LogContext) {\n        const aiContext: LogContext = {\n            ...context,\n            component: 'AI',\n            operation: `${service}.${operation}`,\n            duration\n        };\n\n        const metadata = tokens ? { tokens } : undefined;\n        this.info(`AI ${service}: ${operation} (${duration}ms)`, aiContext, metadata);\n    }\n\n    // WebRTC \uB85C\uAE45\n    webrtc(event: string, roomId?: string, userId?: string, context?: LogContext) {\n        const webrtcContext: LogContext = {\n            ...context,\n            component: 'WEBRTC',\n            operation: event,\n            userId\n        };\n\n        const metadata = roomId ? { roomId } : undefined;\n        this.info(`WebRTC: ${event}`, webrtcContext, metadata);\n    }\n\n    // \uC2A4\uD1A0\uB9AC\uC9C0 \uC791\uC5C5 \uB85C\uAE45\n    storage(operation: string, key: string, size?: number, context?: LogContext) {\n        const storageContext: LogContext = {\n            ...context,\n            component: 'STORAGE',\n            operation\n        };\n\n        const metadata = { key, size };\n        this.debug(`Storage ${operation}: ${key}`, storageContext, metadata);\n    }\n\n    // \uCE90\uC2DC \uC791\uC5C5 \uB85C\uAE45\n    cache(operation: 'HIT' | 'MISS' | 'SET' | 'DELETE', key: string, context?: LogContext) {\n        const cacheContext: LogContext = {\n            ...context,\n            component: 'CACHE',\n            operation\n        };\n\n        const metadata = { key };\n        this.debug(`Cache ${operation}: ${key}`, cacheContext, metadata);\n    }\n\n    // \uBCF4\uC548 \uC774\uBCA4\uD2B8 \uB85C\uAE45\n    security(event: string, ip?: string, context?: LogContext) {\n        const securityContext: LogContext = {\n            ...context,\n            component: 'SECURITY',\n            operation: event,\n            ip\n        };\n\n        this.warn(`Security event: ${event}`, securityContext);\n    }\n}\n\n// \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4 \uB0B4\uBCF4\uB0B4\uAE30\nexport const logger = WorkersLogger.getInstance();\n\n// \uD3B8\uC758 \uD568\uC218\uB4E4\nexport const log = {\n    debug: (msg: string, ctx?: LogContext, meta?: Record<string, any>) => logger.debug(msg, ctx, meta),\n    info: (msg: string, ctx?: LogContext, meta?: Record<string, any>) => logger.info(msg, ctx, meta),\n    warn: (msg: string, ctx?: LogContext, meta?: Record<string, any>) => logger.warn(msg, ctx, meta),\n    error: (msg: string, err?: Error, ctx?: LogContext, meta?: Record<string, any>) => logger.error(msg, err, ctx, meta),\n    api: (method: string, path: string, status: number, duration: number, ctx?: LogContext) => \n        logger.apiCall(method, path, status, duration, ctx),\n    perf: (operation: string, duration: number, ctx?: LogContext) => \n        logger.performance(operation, duration, ctx),\n    ai: (service: string, operation: string, duration: number, tokens?: number, ctx?: LogContext) =>\n        logger.aiOperation(service, operation, duration, tokens, ctx),\n    webrtc: (event: string, roomId?: string, userId?: string, ctx?: LogContext) =>\n        logger.webrtc(event, roomId, userId, ctx),\n    storage: (operation: string, key: string, size?: number, ctx?: LogContext) =>\n        logger.storage(operation, key, size, ctx),\n    cache: (operation: 'HIT' | 'MISS' | 'SET' | 'DELETE', key: string, ctx?: LogContext) =>\n        logger.cache(operation, key, ctx),\n    security: (event: string, ip?: string, ctx?: LogContext) =>\n        logger.security(event, ip, ctx)\n};\n\nexport default logger;", "import { Context } from 'hono';\nimport { ApiResponse, PaginatedResponse } from '../types';\n\n/**\n * \uC131\uACF5 \uC751\uB2F5 \uC0DD\uC131\n */\nexport function successResponse<T>(\n    c: Context,\n    data: T,\n    meta?: Partial<ApiResponse['meta']>\n): Response {\n    const response: ApiResponse<T> = {\n        success: true,\n        data,\n        meta: {\n            timestamp: new Date().toISOString(),\n            requestId: c.get('requestId'),\n            ...meta\n        }\n    };\n    return c.json(response, 200);\n}\n\n/**\n * \uC0DD\uC131 \uC131\uACF5 \uC751\uB2F5 (201)\n */\nexport function createdResponse<T>(\n    c: Context,\n    data: T,\n    location?: string\n): Response {\n    const response: ApiResponse<T> = {\n        success: true,\n        data,\n        meta: {\n            timestamp: new Date().toISOString(),\n            requestId: c.get('requestId')\n        }\n    };\n\n    if (location) {\n        c.header('Location', location);\n    }\n\n    return c.json(response, 201);\n}\n\n/**\n * \uC0AD\uC81C \uC131\uACF5 \uC751\uB2F5 (204)\n */\nexport function noContentResponse(c: Context): Response {\n    return c.body(null, 204);\n}\n\n/**\n * \uD398\uC774\uC9C0\uB124\uC774\uC158 \uC751\uB2F5 \uC0DD\uC131\n */\nexport function paginatedResponse<T>(\n    c: Context,\n    data: T[],\n    pagination: {\n        page: number;\n        limit: number;\n        total: number;\n    }\n): Response {\n    const response: PaginatedResponse<T> = {\n        success: true,\n        data,\n        meta: {\n            timestamp: new Date().toISOString(),\n            requestId: c.get('requestId'),\n            page: pagination.page,\n            limit: pagination.limit,\n            total: pagination.total,\n            totalPages: Math.ceil(pagination.total / pagination.limit)\n        }\n    };\n    return c.json(response, 200);\n}\n\n/**\n * \uCE90\uC2DC \uD5E4\uB354 \uC124\uC815\n */\nexport function setCacheHeaders(\n    c: Context,\n    options: {\n        maxAge?: number;      // \uCD08 \uB2E8\uC704\n        sMaxAge?: number;     // CDN \uCE90\uC2DC \uC2DC\uAC04\n        mustRevalidate?: boolean;\n        private?: boolean;\n        noCache?: boolean;\n        noStore?: boolean;\n    } = {}\n): void {\n    const directives: string[] = [];\n\n    if (options.noStore) {\n        directives.push('no-store');\n    } else if (options.noCache) {\n        directives.push('no-cache');\n    } else {\n        if (options.private) {\n            directives.push('private');\n        } else {\n            directives.push('public');\n        }\n\n        if (options.maxAge !== undefined) {\n            directives.push(`max-age=${options.maxAge}`);\n        }\n\n        if (options.sMaxAge !== undefined) {\n            directives.push(`s-maxage=${options.sMaxAge}`);\n        }\n\n        if (options.mustRevalidate) {\n            directives.push('must-revalidate');\n        }\n    }\n\n    c.header('Cache-Control', directives.join(', '));\n}\n\n/**\n * ETag \uC0DD\uC131 \uBC0F \uAC80\uC99D\n */\nexport async function handleETag(\n    c: Context,\n    data: any,\n    weak: boolean = false\n): Promise<boolean> {\n    const content = JSON.stringify(data);\n    const hash = await crypto.subtle.digest(\n        'SHA-256',\n        new TextEncoder().encode(content)\n    );\n    const etag = `${weak ? 'W/' : ''}\"${btoa(String.fromCharCode(...new Uint8Array(hash)))}\"`;\n\n    c.header('ETag', etag);\n\n    const ifNoneMatch = c.req.header('If-None-Match');\n    if (ifNoneMatch === etag) {\n        c.status(304);\n        return true; // Not Modified\n    }\n\n    return false;\n}\n\n/**\n * \uC751\uB2F5 \uC555\uCD95 \uD655\uC778\n */\nexport function shouldCompress(c: Context): boolean {\n    const acceptEncoding = c.req.header('Accept-Encoding') || '';\n    return acceptEncoding.includes('gzip') || acceptEncoding.includes('br');\n}\n\n/**\n * CORS \uD504\uB9AC\uD50C\uB77C\uC774\uD2B8 \uC751\uB2F5\n */\nexport function preflightResponse(c: Context): Response {\n    return new Response(null, {\n        status: 204,\n        headers: {\n            'Access-Control-Allow-Origin': c.req.header('Origin') || '*',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Request-ID',\n            'Access-Control-Max-Age': '86400',\n            'Access-Control-Allow-Credentials': 'true'\n        }\n    });\n}\n\n/**\n * \uC5D0\uB7EC \uC751\uB2F5 \uC0DD\uC131\n */\nexport function errorResponse(\n    c: Context,\n    message: string,\n    code?: string,\n    details?: any,\n    status: number = 500\n): Response {\n    const response: ApiResponse = {\n        success: false,\n        error: {\n            message,\n            code: code || 'INTERNAL_ERROR',\n            details\n        },\n        meta: {\n            timestamp: new Date().toISOString(),\n            requestId: c.get('requestId')\n        }\n    };\n    return c.json(response, status as any);\n}", "// Cloudflare Workers AI \uC11C\uBE44\uC2A4\n\nimport { log } from '../utils/logger';\n\n// \uC624\uB514\uC624\uB97C \uCCAD\uD06C\uB85C \uB098\uB204\uB294 \uD568\uC218\nexport async function splitAudioIntoChunks(audioBuffer: ArrayBuffer, chunkSize: number = 1024 * 1024): Promise<ArrayBuffer[]> {\n    const chunks: ArrayBuffer[] = [];\n\n    // 1MB \uCCAD\uD06C\uB85C \uB098\uB204\uAE30\n    for (let i = 0; i < audioBuffer.byteLength; i += chunkSize) {\n        const chunk = audioBuffer.slice(i, Math.min(i + chunkSize, audioBuffer.byteLength));\n        chunks.push(chunk);\n    }\n\n    return chunks;\n}\n\n// \uB2E8\uC77C \uCCAD\uD06C \uCC98\uB9AC\nasync function processAudioChunk(\n    ai: Ai,\n    audioChunk: ArrayBuffer,\n    options: WhisperOptions = {}\n): Promise<WhisperResponse> {\n    try {\n        const response = await ai.run('@cf/openai/whisper-large-v3-turbo', {\n            audio: [...new Uint8Array(audioChunk)] as any,\n            task: options.task || 'transcribe',\n            language: options.language || 'auto',\n            vad_filter: options.vad_filter || true,\n            initial_prompt: options.initial_prompt,\n            prefix: options.prefix\n        });\n\n        return response;\n    } catch (error) {\n        log.error('Whisper chunk processing error', error as Error, { component: 'AI_SERVICE' });\n        return { text: '[Error transcribing chunk]', word_count: 0 };\n    }\n}\n\n// \uBA54\uC778 \uC624\uB514\uC624 \uCC98\uB9AC \uD568\uC218 (\uCCAD\uD0B9 \uC9C0\uC6D0)\nexport async function processAudio(\n    ai: Ai,\n    audioBuffer: ArrayBuffer,\n    options: WhisperOptions = {}\n): Promise<WhisperFullResponse> {\n    try {\n        // \uD30C\uC77C \uD06C\uAE30\uAC00 1MB \uC774\uD558\uBA74 \uC9C1\uC811 \uCC98\uB9AC\n        if (audioBuffer.byteLength <= 1024 * 1024) {\n            const response = await processAudioChunk(ai, audioBuffer, options);\n            return {\n                text: response.text || '',\n                word_count: response.word_count || 0,\n                words: response.words || [],\n                chunks: 1\n            };\n        }\n\n        // \uD070 \uD30C\uC77C\uC740 \uCCAD\uD06C\uB85C \uB098\uB204\uC5B4 \uCC98\uB9AC\n        const chunks = await splitAudioIntoChunks(audioBuffer);\n        const results: WhisperResponse[] = [];\n        let fullTranscript = '';\n        let totalWordCount = 0;\n        const allWords: WhisperWord[] = [];\n        let timeOffset = 0;\n\n        for (const chunk of chunks) {\n            const result = await processAudioChunk(ai, chunk, options);\n            results.push(result);\n\n            fullTranscript += result.text + ' ';\n            totalWordCount += result.word_count || 0;\n\n            // \uB2E8\uC5B4 \uD0C0\uC784\uC2A4\uD0EC\uD504 \uC870\uC815\n            if (result.words) {\n                const adjustedWords = result.words.map(word => ({\n                    ...word,\n                    start: word.start + timeOffset,\n                    end: word.end + timeOffset\n                }));\n                allWords.push(...adjustedWords);\n\n                // \uB2E4\uC74C \uCCAD\uD06C\uB97C \uC704\uD55C \uC2DC\uAC04 \uC624\uD504\uC14B \uC5C5\uB370\uC774\uD2B8\n                const lastWord = result.words[result.words.length - 1];\n                if (lastWord) {\n                    timeOffset = lastWord.end;\n                }\n            }\n        }\n\n        return {\n            text: fullTranscript.trim(),\n            word_count: totalWordCount,\n            words: allWords,\n            chunks: chunks.length\n        };\n    } catch (error) {\n        log.error('Whisper processing error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to process audio with Whisper');\n    }\n}\n\n// \uD14D\uC2A4\uD2B8 \uBD84\uC11D \uD568\uC218\nexport async function analyzeText(ai: Ai, text: string): Promise<LanguageAnalysis> {\n    try {\n        // LLM\uC73C\uB85C \uD14D\uC2A4\uD2B8 \uBD84\uC11D\n        const prompt = `\n      Analyze the following English text for language proficiency assessment.\n      Evaluate these 6 areas and provide a score (0-100) for each:\n      1. Grammar accuracy\n      2. Vocabulary range\n      3. Fluency and coherence\n      4. Pronunciation clarity (based on transcription quality)\n      5. Task achievement\n      6. Interaction skills\n\n      Text to analyze: \"${text}\"\n\n      Respond in JSON format with scores and brief feedback for each area.\n    `;\n\n        const response = await ai.run('@cf/meta/llama-3-8b-instruct', {\n            messages: [\n                { role: 'system', content: 'You are a professional language assessment expert.' },\n                { role: 'user', content: prompt }\n            ],\n            temperature: 0.3,\n            max_tokens: 500\n        });\n\n        // Parse the JSON response\n        try {\n            const analysis = JSON.parse((response as any).response);\n            return analysis;\n        } catch {\n            // Fallback if JSON parsing fails\n            return {\n                grammar: 70,\n                vocabulary: 70,\n                fluency: 70,\n                pronunciation: 70,\n                taskAchievement: 70,\n                interaction: 70,\n                feedback: response.response\n            };\n        }\n    } catch (error) {\n        log.error('Text analysis error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to analyze text');\n    }\n}\n\n// CEFR \uB808\uBCA8 \uACC4\uC0B0\nexport function calculateLevel(analysis: LanguageAnalysis): CEFRLevel {\n    // Calculate average score\n    const scores = [\n        analysis.grammar,\n        analysis.vocabulary,\n        analysis.fluency,\n        analysis.pronunciation,\n        analysis.taskAchievement,\n        analysis.interaction\n    ];\n\n    const averageScore = scores.reduce((a, b) => a + b, 0) / scores.length;\n\n    // Map to CEFR levels\n    if (averageScore >= 90) return 'C2';\n    if (averageScore >= 80) return 'C1';\n    if (averageScore >= 70) return 'B2';\n    if (averageScore >= 60) return 'B1';\n    if (averageScore >= 50) return 'A2';\n    return 'A1';\n}\n\n// \uC784\uBCA0\uB529 \uC0DD\uC131\nexport async function generateEmbedding(ai: Ai, text: string): Promise<number[]> {\n    try {\n        const response = await ai.run('@cf/baai/bge-base-en-v1.5', {\n            text: text\n        });\n\n        return (response as any).data?.[0] || [];\n    } catch (error) {\n        log.error('Embedding generation error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to generate embedding');\n    }\n}\n\n// LLM \uD14D\uC2A4\uD2B8 \uC0DD\uC131 \uD568\uC218\nexport async function generateText(\n    ai: Ai,\n    prompt: string,\n    options: LLMOptions = {}\n): Promise<LLMResponse> {\n    try {\n        const model = options.model || '@cf/meta/llama-3.2-3b-instruct';\n        const response = await ai.run(model as any, {\n            prompt: prompt,\n            stream: options.stream || false,\n            max_tokens: options.max_tokens || 1024,\n            temperature: options.temperature || 0.7,\n            top_p: options.top_p || 0.9,\n            top_k: options.top_k || 40,\n            repetition_penalty: options.repetition_penalty || 1.1,\n            frequency_penalty: options.frequency_penalty || 0,\n            presence_penalty: options.presence_penalty || 0,\n            seed: options.seed\n        });\n\n        return {\n            text: (response as any).response || response,\n            model: model,\n            usage: (response as any).usage || {\n                prompt_tokens: 0,\n                completion_tokens: 0,\n                total_tokens: 0\n            }\n        };\n    } catch (error) {\n        log.error('Text generation error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to generate text');\n    }\n}\n\n// \uB300\uD654\uD615 \uD14D\uC2A4\uD2B8 \uC0DD\uC131 \uD568\uC218 (Chat Completion)\nfunction normalizeAiResponseBody(raw: unknown): string {\n    if (typeof raw === 'string') {\n        return raw;\n    }\n\n    if (Array.isArray(raw)) {\n        return raw\n            .map((part) => {\n                if (typeof part === 'string') return part;\n                if (part && typeof part === 'object' && 'text' in part) {\n                    const textValue = (part as Record<string, unknown>).text;\n                    return typeof textValue === 'string' ? textValue : JSON.stringify(textValue ?? {});\n                }\n                return JSON.stringify(part ?? {});\n            })\n            .join('');\n    }\n\n    if (raw && typeof raw === 'object') {\n        if ('text' in (raw as Record<string, unknown>)) {\n            const textValue = (raw as Record<string, unknown>).text;\n            return typeof textValue === 'string' ? textValue : JSON.stringify(textValue ?? {});\n        }\n\n        return JSON.stringify(raw);\n    }\n\n    return '';\n}\n\nexport function sanitizeJsonResponse(raw: string | undefined | null): string {\n    if (!raw) return '';\n\n    let text = raw.trim();\n\n    if (text.startsWith('```')) {\n        text = text.replace(/^```(?:json)?\\s*/i, '');\n        const closingIndex = text.lastIndexOf('```');\n        if (closingIndex !== -1) {\n            text = text.slice(0, closingIndex);\n        }\n        text = text.trim();\n    }\n\n    return text;\n}\n\nexport async function generateChatCompletion(\n    ai: Ai,\n    messages: ChatMessage[],\n    options: LLMOptions = {}\n): Promise<LLMResponse> {\n    try {\n        const model = options.model || '@cf/meta/llama-3.3-70b-instruct-fp8-fast';\n\n        // Function calling \uC9C0\uC6D0 \uD655\uC778\n        const supportsFunctions = ['llama-3.3-70b-instruct-fp8-fast', 'llama-4-scout-17b-16e-instruct'].some(\n            m => model.includes(m)\n        );\n\n        const requestParams: any = {\n            messages: messages,\n            stream: options.stream || false,\n            max_tokens: options.max_tokens || 1024,\n            temperature: options.temperature || 0.7,\n            top_p: options.top_p || 0.9,\n            top_k: options.top_k || 40,\n            repetition_penalty: options.repetition_penalty || 1.1,\n            frequency_penalty: options.frequency_penalty || 0,\n            presence_penalty: options.presence_penalty || 0,\n            seed: options.seed\n        };\n\n        // JSON \uBAA8\uB4DC \uC9C0\uC6D0\n        if (options.response_format) {\n            requestParams.response_format = options.response_format;\n        }\n\n        // Function calling \uC9C0\uC6D0\n        if (options.tools && supportsFunctions) {\n            requestParams.tools = options.tools;\n        }\n\n        const response = await ai.run(model as any, requestParams);\n        const rawText = (response as any).response ?? response;\n\n        return {\n            text: normalizeAiResponseBody(rawText),\n            model: model,\n            usage: (response as any).usage || {\n                prompt_tokens: 0,\n                completion_tokens: 0,\n                total_tokens: 0\n            },\n            tool_calls: (response as any).tool_calls\n        };\n    } catch (error) {\n        log.error('Chat completion error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to generate chat completion');\n    }\n}\n\n// \uC5B8\uC5B4 \uB808\uBCA8 \uD3C9\uAC00 \uD568\uC218\nexport async function evaluateLanguageLevel(\n    ai: Ai,\n    transcription: string,\n    question: string\n): Promise<any> {\n    try {\n        const prompt = `Evaluate the following English response for language proficiency.\n\nQuestion asked: \"${question}\"\nStudent's response: \"${transcription}\"\n\nEvaluate the response across these 6 dimensions and provide a score (0-100) for each:\n1. Pronunciation clarity (based on transcription quality)\n2. Fluency and flow\n3. Grammar accuracy\n4. Vocabulary range and appropriateness\n5. Coherence and organization\n6. Interaction and responsiveness to the question\n\nAlso provide:\n- Brief feedback on overall performance\n- 2-3 specific suggestions for improvement\n- Estimated CEFR level (A1-C2)\n\nRespond in JSON format:\n{\n  \"scores\": {\n    \"pronunciation\": number,\n    \"fluency\": number,\n    \"grammar\": number,\n    \"vocabulary\": number,\n    \"coherence\": number,\n    \"interaction\": number\n  },\n  \"feedback\": \"string\",\n  \"suggestions\": [\"string\", \"string\", \"string\"],\n  \"estimatedLevel\": \"string\"\n}`;\n\n        const response = await generateChatCompletion(ai, [\n            { role: 'system', content: 'You are an expert English language assessor. Provide fair and constructive evaluations.' },\n            { role: 'user', content: prompt }\n        ], {\n            temperature: 0.3,\n            max_tokens: 600,\n            response_format: { type: 'json_object' }\n        });\n\n        const sanitized = sanitizeJsonResponse(response.text);\n\n        try {\n            return JSON.parse(sanitized);\n        } catch (parseError) {\n            log.warn('Language evaluation parse error', undefined, {\n                component: 'AI_SERVICE',\n                model: response.model,\n                rawPreview: response.text?.slice(0, 500),\n                sanitizedPreview: sanitized.slice(0, 500),\n                errorMessage: parseError instanceof Error ? parseError.message : String(parseError)\n            });\n            // Fallback evaluation\n            return {\n                scores: {\n                    pronunciation: 70,\n                    fluency: 70,\n                    grammar: 70,\n                    vocabulary: 70,\n                    coherence: 70,\n                    interaction: 70\n                },\n                feedback: \"Good effort in responding to the question.\",\n                suggestions: [\"Practice speaking more fluently\", \"Expand vocabulary range\", \"Work on grammar accuracy\"],\n                estimatedLevel: \"B1\"\n            };\n        }\n    } catch (error) {\n        log.error('Language evaluation error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to evaluate language level');\n    }\n}\n\n// \uB808\uBCA8 \uD53C\uB4DC\uBC31 \uC0DD\uC131\nexport async function generateLevelFeedback(\n    ai: Ai,\n    analysis: LanguageAnalysis,\n    level: CEFRLevel\n): Promise<string> {\n    try {\n        const prompt = `Based on the following language assessment results, provide personalized feedback and learning recommendations.\n\nLevel: ${level}\nScores:\n- Grammar: ${analysis.grammar}/100\n- Vocabulary: ${analysis.vocabulary}/100\n- Fluency: ${analysis.fluency}/100\n- Pronunciation: ${analysis.pronunciation}/100\n- Task Achievement: ${analysis.taskAchievement}/100\n- Interaction: ${analysis.interaction}/100\n\nProvide:\n1. Overall assessment (2-3 sentences)\n2. Strengths (2-3 points)\n3. Areas for improvement (2-3 points)\n4. Specific study recommendations (3-4 actionable tips)\n5. Next steps to reach the next CEFR level\n\nKeep the tone encouraging and constructive. Format in clear sections.`;\n\n        const response = await generateText(ai, prompt, {\n            temperature: 0.6,\n            max_tokens: 800\n        });\n\n        return response.text;\n    } catch (error) {\n        log.error('Feedback generation error', error as Error, { component: 'AI_SERVICE' });\n        return 'Unable to generate detailed feedback at this time.';\n    }\n}\n\n// \uB300\uD654 \uC8FC\uC81C \uC0DD\uC131\nexport async function generateConversationTopics(\n    ai: Ai,\n    level: string,\n    interests: string[],\n    language: string\n): Promise<string[]> {\n    try {\n        const prompt = `Generate 5 conversation topics suitable for ${level} level ${language} learners.\nConsider their interests: ${interests.join(', ')}.\n\nRequirements:\n- Topics should match their proficiency level\n- Be engaging and relevant to their interests\n- Include mix of everyday and educational topics\n- Encourage natural conversation flow\n\nReturn ONLY a JSON array of 5 topic strings, no other text.`;\n\n        const response = await generateText(ai, prompt, {\n            temperature: 0.8,\n            max_tokens: 200\n        });\n\n        try {\n            const topics = JSON.parse(response.text);\n            return Array.isArray(topics) ? topics : [];\n        } catch {\n            return [\n                'Daily routines and habits',\n                'Hobbies and free time activities',\n                'Travel experiences and plans',\n                'Technology in daily life',\n                'Cultural differences and similarities'\n            ];\n        }\n    } catch (error) {\n        log.error('Topic generation error', error as Error, { component: 'AI_SERVICE' });\n        return [];\n    }\n}\n\n// \uC2E4\uC2DC\uAC04 \uBC88\uC5ED\nexport async function translateText(\n    ai: Ai,\n    text: string,\n    targetLanguage: string,\n    sourceLanguage: string = 'auto'\n): Promise<string> {\n    try {\n        const prompt = `Translate the following text from ${sourceLanguage} to ${targetLanguage}. \nOnly provide the translated text without any explanation or additional formatting.\nIf the text is already in the target language, return it as is.\n\nText to translate: \"${text}\"`;\n\n        const response = await generateChatCompletion(ai, [\n            {\n                role: 'system',\n                content: 'You are a professional translator. Provide accurate, natural-sounding translations while preserving the original meaning and tone.'\n            },\n            { role: 'user', content: prompt }\n        ], {\n            temperature: 0.3,\n            max_tokens: 500\n        });\n\n        return response.text.trim();\n    } catch (error) {\n        log.error('Translation error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to translate text');\n    }\n}\n\n// \uB2E4\uC911 \uC5B8\uC5B4 \uB3D9\uC2DC \uBC88\uC5ED\nexport async function translateToMultipleLanguages(\n    ai: Ai,\n    text: string,\n    targetLanguages: string[],\n    sourceLanguage: string = 'auto'\n): Promise<Record<string, string>> {\n    try {\n        const languageMap: Record<string, string> = {\n            'en': 'English',\n            'ko': 'Korean',\n            'ja': 'Japanese',\n            'zh': 'Chinese',\n            'es': 'Spanish',\n            'fr': 'French',\n            'de': 'German',\n            'pt': 'Portuguese',\n            'ru': 'Russian',\n            'ar': 'Arabic'\n        };\n\n        const languageList = targetLanguages\n            .map(code => `${languageMap[code] || code}: [translation]`)\n            .join('\\n');\n\n        const prompt = `Translate the following text to multiple languages. Provide ONLY the translations in the exact format shown, with no additional text:\n\n${languageList}\n\nText to translate: \"${text}\"`;\n\n        const response = await generateChatCompletion(ai, [\n            {\n                role: 'system',\n                content: 'You are a professional translator. Provide accurate translations in the requested format.'\n            },\n            { role: 'user', content: prompt }\n        ], {\n            temperature: 0.3,\n            max_tokens: 1000\n        });\n\n        const translations: Record<string, string> = {};\n        const lines = response.text.trim().split('\\n');\n\n        for (const line of lines) {\n            const match = line.match(/^(English|Korean|Japanese|Chinese|Spanish|French|German|Portuguese|Russian|Arabic):\\s*(.+)$/);\n            if (match) {\n                const langName = match[1];\n                const translation = match[2].trim();\n                const langCode = Object.entries(languageMap).find(([code, name]) => name === langName)?.[0];\n                if (langCode) {\n                    translations[langCode] = translation;\n                }\n            }\n        }\n\n        return translations;\n    } catch (error) {\n        log.error('Multi-translation error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to translate to multiple languages');\n    }\n}\n\n// \uC138\uC158 \uC694\uC57D \uC0DD\uC131\nexport async function generateSessionSummary(\n    ai: Ai,\n    transcript: string,\n    duration: number,\n    participants: string[]\n): Promise<SessionSummary> {\n    try {\n        const prompt = `Analyze this language learning session and provide a structured summary.\n\nSession Duration: ${Math.round(duration / 60)} minutes\nParticipants: ${participants.join(', ')}\nTranscript: \"${transcript}\"\n\nProvide a JSON response with:\n{\n  \"keyPoints\": [\"list of 3-5 main topics discussed\"],\n  \"vocabularyUsed\": [\"list of 5-10 key vocabulary items\"],\n  \"grammarPatterns\": [\"list of 3-5 grammar structures used\"],\n  \"speakingTime\": { \"participant1\": percentage, \"participant2\": percentage },\n  \"suggestions\": [\"list of 3-4 improvement suggestions\"],\n  \"overallRating\": number (1-10)\n}`;\n\n        const response = await generateChatCompletion(ai, [\n            { role: 'system', content: 'You are a language learning session analyzer. Respond only with valid JSON.' },\n            { role: 'user', content: prompt }\n        ], {\n            temperature: 0.3,\n            max_tokens: 600,\n            response_format: { type: 'json_object' }\n        });\n\n        try {\n            return JSON.parse(response.text);\n        } catch {\n            return {\n                keyPoints: ['Session completed'],\n                vocabularyUsed: [],\n                grammarPatterns: [],\n                speakingTime: {},\n                suggestions: ['Continue practicing'],\n                overallRating: 7\n            };\n        }\n    } catch (error) {\n        log.error('Session summary error', error as Error, { component: 'AI_SERVICE' });\n        throw new Error('Failed to generate session summary');\n    }\n}\n\n// Type definitions\nexport interface WhisperOptions {\n    task?: 'transcribe' | 'translate';\n    language?: string;\n    vad_filter?: boolean;\n    initial_prompt?: string;\n    prefix?: string;\n}\n\nexport interface WhisperResponse {\n    text: string;\n    word_count?: number;\n    words?: WhisperWord[];\n    vtt?: string;\n}\n\nexport interface WhisperWord {\n    word: string;\n    start: number;\n    end: number;\n}\n\nexport interface WhisperFullResponse extends WhisperResponse {\n    chunks: number;\n}\n\ninterface LanguageAnalysis {\n    grammar: number;\n    vocabulary: number;\n    fluency: number;\n    pronunciation: number;\n    taskAchievement: number;\n    interaction: number;\n    feedback?: string;\n}\n\ntype CEFRLevel = 'A1' | 'A2' | 'B1' | 'B2' | 'C1' | 'C2';\n\n// LLM \uD0C0\uC785 \uC815\uC758\nexport interface LLMOptions {\n    model?: string;\n    stream?: boolean;\n    max_tokens?: number;\n    temperature?: number;\n    top_p?: number;\n    top_k?: number;\n    repetition_penalty?: number;\n    frequency_penalty?: number;\n    presence_penalty?: number;\n    seed?: number;\n    response_format?: {\n        type: 'json_object' | 'json_schema';\n        json_schema?: any;\n    };\n    tools?: Tool[];\n}\n\nexport interface LLMResponse {\n    text: string;\n    model: string;\n    usage: {\n        prompt_tokens: number;\n        completion_tokens: number;\n        total_tokens: number;\n    };\n    tool_calls?: ToolCall[];\n}\n\nexport interface ChatMessage {\n    role: 'system' | 'user' | 'assistant' | 'tool';\n    content: string;\n    tool_call_id?: string;\n}\n\nexport interface Tool {\n    type: 'function';\n    function: {\n        name: string;\n        description: string;\n        parameters: {\n            type: string;\n            properties: Record<string, any>;\n            required?: string[];\n        };\n    };\n}\n\nexport interface ToolCall {\n    name: string;\n    arguments: Record<string, any>;\n}\n\nexport interface SessionSummary {\n    keyPoints: string[];\n    vocabularyUsed: string[];\n    grammarPatterns: string[];\n    speakingTime: Record<string, number>;\n    suggestions: string[];\n    overallRating: number;\n}\n\n// \uC0AC\uC6A9 \uAC00\uB2A5\uD55C \uBAA8\uB378 \uBAA9\uB85D\nexport const AVAILABLE_MODELS = {\n    // Llama \uBAA8\uB378\uB4E4\n    'llama-3.3-70b-instruct-fp8-fast': {\n        name: 'Llama 3.3 70B (Fast)',\n        contextWindow: 24000,\n        supportsTools: true,\n        costPerMInput: 0.29,\n        costPerMOutput: 2.25\n    },\n    'llama-3.2-3b-instruct': {\n        name: 'Llama 3.2 3B',\n        contextWindow: 128000,\n        supportsTools: false,\n        costPerMInput: 0.051,\n        costPerMOutput: 0.34\n    },\n    'llama-4-scout-17b-16e-instruct': {\n        name: 'Llama 4 Scout 17B',\n        contextWindow: 131000,\n        supportsTools: true,\n        costPerMInput: 0.27,\n        costPerMOutput: 0.85\n    },\n    'llama-3.1-8b-instruct': {\n        name: 'Llama 3.1 8B',\n        contextWindow: 7968,\n        supportsTools: false,\n        costPerMInput: 0.28,\n        costPerMOutput: 0.83\n    },\n    'llama-3-8b-instruct': {\n        name: 'Llama 3 8B',\n        contextWindow: 8192,\n        supportsTools: false,\n        costPerMInput: 0.28,\n        costPerMOutput: 0.83\n    },\n    'llama-2-7b-chat-fp16': {\n        name: 'Llama 2 7B',\n        contextWindow: 4096,\n        supportsTools: false,\n        costPerMInput: 0.56,\n        costPerMOutput: 6.67\n    }\n};\n", "// \uACE0\uB3C4\uD654\uB41C \uB808\uBCA8 \uD14C\uC2A4\uD2B8 AI \uD3C9\uAC00 \uC2DC\uC2A4\uD15C\n// CEFR (A1-C2) \uC0C1\uC138 \uD3C9\uAC00 \uBC0F \uBC1C\uC74C \uC815\uBC00 \uBD84\uC11D\n\nimport { generateChatCompletion, sanitizeJsonResponse, type ChatMessage } from './ai';\nimport { log } from '../utils/logger';\n\nexport type CEFRLevel = 'A1' | 'A2' | 'B1' | 'B2' | 'C1' | 'C2';\nexport type CEFRSubLevel = 'low' | 'mid' | 'high';\n\n// CEFR \uB808\uBCA8\uBCC4 \uAE30\uC900 \uC810\uC218 (\uC720\uB7FD\uC5B8\uC5B4\uACF5\uD1B5\uCC38\uC870\uAE30\uC900 \uAE30\uBC18)\nconst CEFR_THRESHOLDS = {\n  A1: { min: 0, max: 40 },\n  A2: { min: 40, max: 55 },\n  B1: { min: 55, max: 70 },\n  B2: { min: 70, max: 80 },\n  C1: { min: 80, max: 90 },\n  C2: { min: 90, max: 100 }\n};\n\n// 6\uAC1C \uD3C9\uAC00 \uC601\uC5ED (CEFR \uACF5\uC2DD \uAE30\uC900)\nexport interface DetailedScores {\n  pronunciation: number;  // \uBC1C\uC74C \uBA85\uD655\uC131\n  fluency: number;       // \uC720\uCC3D\uC131 \uBC0F \uC18D\uB3C4\n  grammar: number;       // \uBB38\uBC95 \uC815\uD655\uC131\n  vocabulary: number;    // \uC5B4\uD718 \uBC94\uC704 \uBC0F \uC801\uC808\uC131\n  coherence: number;     // \uB2F4\uD654 \uAD6C\uC131\uB825\n  interaction: number;   // \uACFC\uC81C \uC218\uD589 \uB2A5\uB825\n}\n\n// \uBC1C\uC74C \uC0C1\uC138 \uBD84\uC11D\nexport interface PronunciationAnalysis {\n  overallScore: number;\n  clarity: number;              // \uBA85\uD655\uC131 (0-100)\n  intonation: number;           // \uC5B5\uC591 (0-100)\n  rhythm: number;               // \uB9AC\uB4EC (0-100)\n  stress: number;               // \uAC15\uC138 (0-100)\n  problematicSounds: {\n    sound: string;\n    frequency: number;\n    suggestion: string;\n  }[];\n  nativelikeness: number;       // \uC6D0\uC5B4\uBBFC \uC720\uC0AC\uB3C4 (0-100)\n}\n\n// \uBB38\uBC95 \uC0C1\uC138 \uBD84\uC11D\nexport interface GrammarAnalysis {\n  overallScore: number;\n  accuracy: number;             // \uC815\uD655\uC131 (0-100)\n  complexity: number;           // \uBCF5\uC7A1\uB3C4 (0-100)\n  range: number;                // \uB2E4\uC591\uC131 (0-100)\n  commonErrors: {\n    type: string;\n    example: string;\n    correction: string;\n    frequency: number;\n  }[];\n  strengths: string[];\n}\n\n// \uC5B4\uD718 \uC0C1\uC138 \uBD84\uC11D\nexport interface VocabularyAnalysis {\n  overallScore: number;\n  range: number;                // \uBC94\uC704 (0-100)\n  appropriateness: number;      // \uC801\uC808\uC131 (0-100)\n  sophistication: number;       // \uACE0\uAE09\uB3C4 (0-100)\n  academicLevel: string;        // \uD559\uC220 \uC218\uC900 (basic/intermediate/advanced)\n  keyVocabulary: string[];\n  collocations: string[];       // \uC5F0\uC5B4\n  idiomsUsed: string[];        // \uAD00\uC6A9\uAD6C\n}\n\n// \uC720\uCC3D\uC131 \uC0C1\uC138 \uBD84\uC11D\nexport interface FluencyAnalysis {\n  overallScore: number;\n  speed: number;                // \uC18D\uB3C4 (0-100)\n  pauses: number;               // \uD734\uC9C0 \uCC98\uB9AC (0-100)\n  repetition: number;           // \uBC18\uBCF5 \uCD5C\uC18C\uD654 (0-100)\n  selfCorrection: number;       // \uC790\uAC00 \uC218\uC815 \uB2A5\uB825 (0-100)\n  hesitation: number;           // \uC8FC\uC800 \uCD5C\uC18C\uD654 (0-100)\n}\n\n// \uB2F4\uD654 \uAD6C\uC131\uB825 \uC0C1\uC138 \uBD84\uC11D\nexport interface CoherenceAnalysis {\n  overallScore: number;\n  organization: number;         // \uC870\uC9C1\uD654 (0-100)\n  cohesion: number;            // \uC751\uC9D1\uC131 (0-100)\n  logicalFlow: number;         // \uB17C\uB9AC\uC801 \uD750\uB984 (0-100)\n  topicDevelopment: number;    // \uC8FC\uC81C \uC804\uAC1C (0-100)\n  linkingDevices: string[];    // \uC0AC\uC6A9\uB41C \uC5F0\uACB0\uC0AC\n}\n\n// \uC885\uD569 \uD3C9\uAC00 \uACB0\uACFC\nexport interface ComprehensiveEvaluation {\n  overallLevel: CEFRLevel;\n  subLevel: CEFRSubLevel;\n  confidenceScore: number;      // \uD3C9\uAC00 \uC2E0\uB8B0\uB3C4 (0-100)\n  detailedScores: DetailedScores;\n\n  // \uC601\uC5ED\uBCC4 \uC0C1\uC138 \uBD84\uC11D\n  pronunciationAnalysis: PronunciationAnalysis;\n  grammarAnalysis: GrammarAnalysis;\n  vocabularyAnalysis: VocabularyAnalysis;\n  fluencyAnalysis: FluencyAnalysis;\n  coherenceAnalysis: CoherenceAnalysis;\n\n  // \uC885\uD569 \uD53C\uB4DC\uBC31\n  strengths: string[];\n  weaknesses: string[];\n  priorityImprovements: {\n    area: string;\n    currentLevel: number;\n    targetLevel: number;\n    actionItems: string[];\n  }[];\n\n  // \uD559\uC2B5 \uB85C\uB4DC\uB9F5\n  studyPlan: {\n    shortTerm: string[];        // 1-2\uC8FC \uBAA9\uD45C\n    mediumTerm: string[];       // 1-3\uAC1C\uC6D4 \uBAA9\uD45C\n    longTerm: string[];         // 3-6\uAC1C\uC6D4 \uBAA9\uD45C\n  };\n\n  // \uB2E4\uC74C \uB808\uBCA8 \uB2EC\uC131 \uC804\uB7B5\n  nextLevelStrategy: {\n    targetLevel: CEFRLevel;\n    estimatedTimeMonths: number;\n    keyMilestones: string[];\n    recommendedResources: string[];\n  };\n}\n\n/**\n * \uC74C\uC131 \uC804\uC0AC \uD14D\uC2A4\uD2B8\uC758 \uBC1C\uC74C \uD328\uD134 \uBD84\uC11D\n */\nasync function analyzePronunciation(\n  ai: Ai,\n  transcription: string,\n  audioQuality: string\n): Promise<PronunciationAnalysis> {\n  try {\n    const prompt = `Analyze the pronunciation quality based on the audio transcription and quality assessment.\n\nTranscription: \"${transcription}\"\nAudio Quality Note: \"${audioQuality}\"\n\nEvaluate pronunciation across these dimensions (0-100 each):\n1. Clarity - How clear and understandable is the speech?\n2. Intonation - Natural rise and fall of voice?\n3. Rhythm - Proper pacing and timing?\n4. Stress - Correct word and sentence stress?\n5. Nativelikeness - How close to native speaker pronunciation?\n\nAlso identify:\n- 3-5 problematic sounds with suggestions (e.g., /th/, /r/, /l/)\n- Overall pronunciation score\n\nRespond in JSON format:\n{\n  \"clarity\": number,\n  \"intonation\": number,\n  \"rhythm\": number,\n  \"stress\": number,\n  \"nativelikeness\": number,\n  \"problematicSounds\": [\n    {\n      \"sound\": \"string\",\n      \"frequency\": \"high|medium|low\",\n      \"suggestion\": \"string\"\n    }\n  ],\n  \"overallScore\": number\n}`;\n\n    const response = await generateChatCompletion(ai, [\n      {\n        role: 'system',\n        content: 'You are an expert phonetics and pronunciation assessor with extensive training in CEFR-aligned evaluation.'\n      },\n      { role: 'user', content: prompt }\n    ], {\n      temperature: 0.2,\n      max_tokens: 800,\n      response_format: { type: 'json_object' }\n    });\n\n    const sanitized = sanitizeJsonResponse(response.text);\n    const parsed = JSON.parse(sanitized);\n\n    // Frequency\uB97C \uC22B\uC790\uB85C \uBCC0\uD658\n    const problematicSounds = (parsed.problematicSounds || []).map((item: any) => ({\n      sound: item.sound || '',\n      frequency: item.frequency === 'high' ? 3 : item.frequency === 'medium' ? 2 : 1,\n      suggestion: item.suggestion || ''\n    }));\n\n    return {\n      overallScore: parsed.overallScore || 70,\n      clarity: parsed.clarity || 70,\n      intonation: parsed.intonation || 70,\n      rhythm: parsed.rhythm || 70,\n      stress: parsed.stress || 70,\n      nativelikeness: parsed.nativelikeness || 65,\n      problematicSounds\n    };\n  } catch (error) {\n    log.error('Pronunciation analysis error', error as Error, { component: 'ADVANCED_EVAL' });\n    // Fallback\n    return {\n      overallScore: 70,\n      clarity: 70,\n      intonation: 70,\n      rhythm: 70,\n      stress: 70,\n      nativelikeness: 65,\n      problematicSounds: []\n    };\n  }\n}\n\n/**\n * \uBB38\uBC95 \uC815\uBC00 \uBD84\uC11D\n */\nasync function analyzeGrammar(\n  ai: Ai,\n  transcription: string,\n  questionContext: string\n): Promise<GrammarAnalysis> {\n  try {\n    const prompt = `Perform a detailed grammar analysis of this English response.\n\nQuestion: \"${questionContext}\"\nResponse: \"${transcription}\"\n\nEvaluate:\n1. Accuracy - Correctness of grammar structures (0-100)\n2. Complexity - Use of complex structures (0-100)\n3. Range - Variety of grammar patterns (0-100)\n\nIdentify:\n- 3-5 common grammar errors with corrections\n- 2-3 grammar strengths\n\nRespond in JSON format:\n{\n  \"accuracy\": number,\n  \"complexity\": number,\n  \"range\": number,\n  \"commonErrors\": [\n    {\n      \"type\": \"string (e.g., 'Subject-verb agreement')\",\n      \"example\": \"string (original text)\",\n      \"correction\": \"string (corrected version)\",\n      \"frequency\": number (1-5)\n    }\n  ],\n  \"strengths\": [\"string\", \"string\"],\n  \"overallScore\": number\n}`;\n\n    const response = await generateChatCompletion(ai, [\n      {\n        role: 'system',\n        content: 'You are an expert English grammar assessor. Provide detailed, constructive feedback aligned with CEFR standards.'\n      },\n      { role: 'user', content: prompt }\n    ], {\n      temperature: 0.2,\n      max_tokens: 1000,\n      response_format: { type: 'json_object' }\n    });\n\n    const sanitized = sanitizeJsonResponse(response.text);\n    const parsed = JSON.parse(sanitized);\n\n    return {\n      overallScore: parsed.overallScore || 70,\n      accuracy: parsed.accuracy || 70,\n      complexity: parsed.complexity || 65,\n      range: parsed.range || 68,\n      commonErrors: parsed.commonErrors || [],\n      strengths: parsed.strengths || []\n    };\n  } catch (error) {\n    log.error('Grammar analysis error', error as Error, { component: 'ADVANCED_EVAL' });\n    return {\n      overallScore: 70,\n      accuracy: 70,\n      complexity: 65,\n      range: 68,\n      commonErrors: [],\n      strengths: ['Attempted response', 'Basic structure maintained']\n    };\n  }\n}\n\n/**\n * \uC5B4\uD718 \uC815\uBC00 \uBD84\uC11D\n */\nasync function analyzeVocabulary(\n  ai: Ai,\n  transcription: string\n): Promise<VocabularyAnalysis> {\n  try {\n    const prompt = `Analyze the vocabulary usage in this English text.\n\nText: \"${transcription}\"\n\nEvaluate:\n1. Range - Breadth of vocabulary (0-100)\n2. Appropriateness - Context-appropriate word choice (0-100)\n3. Sophistication - Use of advanced vocabulary (0-100)\n4. Academic Level - basic/intermediate/advanced\n\nIdentify:\n- 5-10 key vocabulary items used\n- 2-4 collocations (word combinations)\n- Any idioms or phrasal verbs\n\nRespond in JSON format:\n{\n  \"range\": number,\n  \"appropriateness\": number,\n  \"sophistication\": number,\n  \"academicLevel\": \"basic|intermediate|advanced\",\n  \"keyVocabulary\": [\"word1\", \"word2\", ...],\n  \"collocations\": [\"make decision\", \"take time\", ...],\n  \"idiomsUsed\": [\"string\", ...],\n  \"overallScore\": number\n}`;\n\n    const response = await generateChatCompletion(ai, [\n      {\n        role: 'system',\n        content: 'You are an expert lexicographer and vocabulary assessor with deep knowledge of academic and everyday English.'\n      },\n      { role: 'user', content: prompt }\n    ], {\n      temperature: 0.25,\n      max_tokens: 800,\n      response_format: { type: 'json_object' }\n    });\n\n    const sanitized = sanitizeJsonResponse(response.text);\n    const parsed = JSON.parse(sanitized);\n\n    return {\n      overallScore: parsed.overallScore || 70,\n      range: parsed.range || 68,\n      appropriateness: parsed.appropriateness || 72,\n      sophistication: parsed.sophistication || 60,\n      academicLevel: parsed.academicLevel || 'intermediate',\n      keyVocabulary: parsed.keyVocabulary || [],\n      collocations: parsed.collocations || [],\n      idiomsUsed: parsed.idiomsUsed || []\n    };\n  } catch (error) {\n    log.error('Vocabulary analysis error', error as Error, { component: 'ADVANCED_EVAL' });\n    return {\n      overallScore: 70,\n      range: 68,\n      appropriateness: 72,\n      sophistication: 60,\n      academicLevel: 'intermediate',\n      keyVocabulary: [],\n      collocations: [],\n      idiomsUsed: []\n    };\n  }\n}\n\n/**\n * \uC720\uCC3D\uC131 \uBD84\uC11D\n */\nasync function analyzeFluency(\n  ai: Ai,\n  transcription: string,\n  responseTime: number,\n  wordCount: number\n): Promise<FluencyAnalysis> {\n  try {\n    const wordsPerMinute = wordCount / (responseTime / 60);\n\n    const prompt = `Analyze the fluency of this English response.\n\nText: \"${transcription}\"\nResponse time: ${responseTime} seconds\nWord count: ${wordCount}\nSpeed: ${Math.round(wordsPerMinute)} words/minute\n\nEvaluate (0-100 each):\n1. Speed - Appropriate speaking pace\n2. Pauses - Effective use of pauses\n3. Repetition - Minimal unnecessary repetition\n4. SelfCorrection - Ability to self-correct naturally\n5. Hesitation - Minimal hesitation markers (um, uh, like)\n\nRespond in JSON format:\n{\n  \"speed\": number,\n  \"pauses\": number,\n  \"repetition\": number,\n  \"selfCorrection\": number,\n  \"hesitation\": number,\n  \"overallScore\": number\n}`;\n\n    const response = await generateChatCompletion(ai, [\n      {\n        role: 'system',\n        content: 'You are an expert in analyzing spoken language fluency and prosody.'\n      },\n      { role: 'user', content: prompt }\n    ], {\n      temperature: 0.2,\n      max_tokens: 500,\n      response_format: { type: 'json_object' }\n    });\n\n    const sanitized = sanitizeJsonResponse(response.text);\n    const parsed = JSON.parse(sanitized);\n\n    return {\n      overallScore: parsed.overallScore || 70,\n      speed: parsed.speed || 70,\n      pauses: parsed.pauses || 68,\n      repetition: parsed.repetition || 72,\n      selfCorrection: parsed.selfCorrection || 65,\n      hesitation: parsed.hesitation || 68\n    };\n  } catch (error) {\n    log.error('Fluency analysis error', error as Error, { component: 'ADVANCED_EVAL' });\n    return {\n      overallScore: 70,\n      speed: 70,\n      pauses: 68,\n      repetition: 72,\n      selfCorrection: 65,\n      hesitation: 68\n    };\n  }\n}\n\n/**\n * \uB2F4\uD654 \uAD6C\uC131\uB825 \uBD84\uC11D\n */\nasync function analyzeCoherence(\n  ai: Ai,\n  transcription: string,\n  questionContext: string\n): Promise<CoherenceAnalysis> {\n  try {\n    const prompt = `Analyze the coherence and cohesion of this English response.\n\nQuestion: \"${questionContext}\"\nResponse: \"${transcription}\"\n\nEvaluate (0-100 each):\n1. Organization - Logical structure\n2. Cohesion - Use of linking words and devices\n3. LogicalFlow - Clear progression of ideas\n4. TopicDevelopment - Staying on topic and developing ideas\n\nIdentify linking devices used (e.g., \"however\", \"therefore\", \"in addition\")\n\nRespond in JSON format:\n{\n  \"organization\": number,\n  \"cohesion\": number,\n  \"logicalFlow\": number,\n  \"topicDevelopment\": number,\n  \"linkingDevices\": [\"word1\", \"word2\", ...],\n  \"overallScore\": number\n}`;\n\n    const response = await generateChatCompletion(ai, [\n      {\n        role: 'system',\n        content: 'You are an expert in discourse analysis and text coherence assessment.'\n      },\n      { role: 'user', content: prompt }\n    ], {\n      temperature: 0.2,\n      max_tokens: 600,\n      response_format: { type: 'json_object' }\n    });\n\n    const sanitized = sanitizeJsonResponse(response.text);\n    const parsed = JSON.parse(sanitized);\n\n    return {\n      overallScore: parsed.overallScore || 70,\n      organization: parsed.organization || 68,\n      cohesion: parsed.cohesion || 70,\n      logicalFlow: parsed.logicalFlow || 69,\n      topicDevelopment: parsed.topicDevelopment || 71,\n      linkingDevices: parsed.linkingDevices || []\n    };\n  } catch (error) {\n    log.error('Coherence analysis error', error as Error, { component: 'ADVANCED_EVAL' });\n    return {\n      overallScore: 70,\n      organization: 68,\n      cohesion: 70,\n      logicalFlow: 69,\n      topicDevelopment: 71,\n      linkingDevices: []\n    };\n  }\n}\n\n/**\n * CEFR \uB808\uBCA8 \uBC0F \uC11C\uBE0C\uB808\uBCA8 \uACC4\uC0B0\n */\nfunction calculateCEFRLevel(averageScore: number): { level: CEFRLevel; subLevel: CEFRSubLevel } {\n  let level: CEFRLevel = 'A1';\n\n  for (const [cefrLevel, range] of Object.entries(CEFR_THRESHOLDS)) {\n    if (averageScore >= range.min && averageScore < range.max) {\n      level = cefrLevel as CEFRLevel;\n      break;\n    }\n  }\n\n  if (averageScore >= CEFR_THRESHOLDS.C2.min) {\n    level = 'C2';\n  }\n\n  // \uC11C\uBE0C\uB808\uBCA8 \uACC4\uC0B0\n  const range = CEFR_THRESHOLDS[level];\n  const rangeSize = range.max - range.min;\n  const position = averageScore - range.min;\n  const percentage = (position / rangeSize) * 100;\n\n  let subLevel: CEFRSubLevel = 'low';\n  if (percentage >= 66) subLevel = 'high';\n  else if (percentage >= 33) subLevel = 'mid';\n\n  return { level, subLevel };\n}\n\n/**\n * \uC885\uD569 \uD3C9\uAC00 \uC218\uD589 (\uBA54\uC778 \uD568\uC218)\n */\nexport async function performComprehensiveEvaluation(\n  ai: Ai,\n  transcription: string,\n  questionText: string,\n  audioQuality: string,\n  responseTime: number\n): Promise<ComprehensiveEvaluation> {\n  try {\n    const wordCount = transcription.split(/\\s+/).length;\n\n    // \uBCD1\uB82C\uB85C \uBAA8\uB4E0 \uBD84\uC11D \uC218\uD589\n    const [\n      pronunciationAnalysis,\n      grammarAnalysis,\n      vocabularyAnalysis,\n      fluencyAnalysis,\n      coherenceAnalysis\n    ] = await Promise.all([\n      analyzePronunciation(ai, transcription, audioQuality),\n      analyzeGrammar(ai, transcription, questionText),\n      analyzeVocabulary(ai, transcription),\n      analyzeFluency(ai, transcription, responseTime, wordCount),\n      analyzeCoherence(ai, transcription, questionText)\n    ]);\n\n    // Interaction \uC810\uC218\uB294 \uC9C8\uBB38 \uAD00\uB828\uC131 \uBC0F \uACFC\uC81C \uC218\uD589\uB3C4\uB85C \uD3C9\uAC00\n    const interactionScore = (coherenceAnalysis.topicDevelopment + grammarAnalysis.accuracy) / 2;\n\n    const detailedScores: DetailedScores = {\n      pronunciation: pronunciationAnalysis.overallScore,\n      fluency: fluencyAnalysis.overallScore,\n      grammar: grammarAnalysis.overallScore,\n      vocabulary: vocabularyAnalysis.overallScore,\n      coherence: coherenceAnalysis.overallScore,\n      interaction: interactionScore\n    };\n\n    // \uC885\uD569 \uD3C9\uADE0 \uACC4\uC0B0\n    const averageScore = Object.values(detailedScores).reduce((sum, score) => sum + score, 0) / 6;\n    const { level: overallLevel, subLevel } = calculateCEFRLevel(averageScore);\n\n    // \uC2E0\uB8B0\uB3C4 \uC810\uC218 (\uC77C\uAD00\uC131 \uAE30\uBC18)\n    const scores = Object.values(detailedScores);\n    const standardDeviation = Math.sqrt(\n      scores.reduce((sum, score) => sum + Math.pow(score - averageScore, 2), 0) / scores.length\n    );\n    const confidenceScore = Math.max(0, 100 - (standardDeviation * 2));\n\n    // \uAC15\uC810 \uBC0F \uC57D\uC810 \uC2DD\uBCC4\n    const strengths: string[] = [];\n    const weaknesses: string[] = [];\n    const priorityImprovements: ComprehensiveEvaluation['priorityImprovements'] = [];\n\n    Object.entries(detailedScores).forEach(([area, score]) => {\n      if (score >= 75) {\n        strengths.push(`Strong ${area} skills (${Math.round(score)}/100)`);\n      } else if (score < 60) {\n        weaknesses.push(`${area.charAt(0).toUpperCase() + area.slice(1)} needs improvement (${Math.round(score)}/100)`);\n        priorityImprovements.push({\n          area,\n          currentLevel: Math.round(score),\n          targetLevel: Math.round(score) + 20,\n          actionItems: getImprovementActions(area, score)\n        });\n      }\n    });\n\n    // \uD559\uC2B5 \uB85C\uB4DC\uB9F5 \uC0DD\uC131\n    const studyPlan = await generateStudyPlan(ai, overallLevel, detailedScores, priorityImprovements);\n\n    // \uB2E4\uC74C \uB808\uBCA8 \uC804\uB7B5\n    const nextLevelStrategy = await generateNextLevelStrategy(ai, overallLevel, detailedScores);\n\n    return {\n      overallLevel,\n      subLevel,\n      confidenceScore: Math.round(confidenceScore),\n      detailedScores,\n      pronunciationAnalysis,\n      grammarAnalysis,\n      vocabularyAnalysis,\n      fluencyAnalysis,\n      coherenceAnalysis,\n      strengths,\n      weaknesses,\n      priorityImprovements,\n      studyPlan,\n      nextLevelStrategy\n    };\n  } catch (error) {\n    log.error('Comprehensive evaluation error', error as Error, { component: 'ADVANCED_EVAL' });\n    throw new Error('Failed to perform comprehensive evaluation');\n  }\n}\n\n/**\n * \uC601\uC5ED\uBCC4 \uAC1C\uC120 \uC561\uC158 \uC544\uC774\uD15C\n */\nfunction getImprovementActions(area: string, currentScore: number): string[] {\n  const actions: Record<string, string[]> = {\n    pronunciation: [\n      'Practice shadowing native speakers daily (15-20 minutes)',\n      'Record yourself and compare with native pronunciation',\n      'Focus on problematic sounds identified in the analysis',\n      'Use pronunciation apps like ELSA or Speechling'\n    ],\n    fluency: [\n      'Practice speaking on topics for 2-3 minutes without stopping',\n      'Reduce filler words (um, uh, like) through conscious practice',\n      'Join conversation clubs or language exchange',\n      'Read aloud daily to improve flow and rhythm'\n    ],\n    grammar: [\n      'Review and practice specific grammar structures identified as weak',\n      'Complete grammar exercises targeting your error patterns',\n      'Write daily journal entries and self-correct',\n      'Use grammar checking tools with explanations'\n    ],\n    vocabulary: [\n      'Learn 10 new words daily with context examples',\n      'Practice using academic word lists (AWL)',\n      'Read extensively in your areas of interest',\n      'Use spaced repetition apps like Anki or Memrise'\n    ],\n    coherence: [\n      'Practice organizing ideas before speaking',\n      'Learn and use discourse markers (however, therefore, moreover)',\n      'Outline your thoughts using mind maps',\n      'Practice presenting structured 2-3 minute talks'\n    ],\n    interaction: [\n      'Practice responding to various question types',\n      'Work on directly addressing the question asked',\n      'Develop ideas fully with examples and details',\n      'Practice active listening and appropriate responses'\n    ]\n  };\n\n  return actions[area] || ['Practice regularly', 'Seek feedback from teachers', 'Use targeted learning resources'];\n}\n\n/**\n * \uAC1C\uC778\uD654\uB41C \uD559\uC2B5 \uACC4\uD68D \uC0DD\uC131\n */\nasync function generateStudyPlan(\n  ai: Ai,\n  currentLevel: CEFRLevel,\n  scores: DetailedScores,\n  priorities: ComprehensiveEvaluation['priorityImprovements']\n): Promise<ComprehensiveEvaluation['studyPlan']> {\n  try {\n    const prompt = `Create a personalized study plan for an English learner.\n\nCurrent Level: ${currentLevel}\nDetailed Scores: ${JSON.stringify(scores)}\nPriority Areas: ${priorities.map(p => p.area).join(', ')}\n\nProvide:\n- Short-term goals (1-2 weeks): 3-4 actionable items\n- Medium-term goals (1-3 months): 3-4 objectives\n- Long-term goals (3-6 months): 2-3 major milestones\n\nRespond in JSON format:\n{\n  \"shortTerm\": [\"goal1\", \"goal2\", ...],\n  \"mediumTerm\": [\"goal1\", \"goal2\", ...],\n  \"longTerm\": [\"goal1\", \"goal2\", ...]\n}`;\n\n    const response = await generateChatCompletion(ai, [\n      {\n        role: 'system',\n        content: 'You are an expert language learning coach. Create SMART goals (Specific, Measurable, Achievable, Relevant, Time-bound).'\n      },\n      { role: 'user', content: prompt }\n    ], {\n      temperature: 0.4,\n      max_tokens: 800,\n      response_format: { type: 'json_object' }\n    });\n\n    const sanitized = sanitizeJsonResponse(response.text);\n    const parsed = JSON.parse(sanitized);\n\n    return {\n      shortTerm: parsed.shortTerm || ['Practice daily pronunciation drills', 'Complete grammar exercises'],\n      mediumTerm: parsed.mediumTerm || ['Expand vocabulary by 300 words', 'Improve fluency through conversation practice'],\n      longTerm: parsed.longTerm || ['Achieve next CEFR level', 'Maintain consistent practice routine']\n    };\n  } catch (error) {\n    log.error('Study plan generation error', error as Error, { component: 'ADVANCED_EVAL' });\n    return {\n      shortTerm: ['Practice speaking 15 minutes daily', 'Learn 10 new vocabulary words per day'],\n      mediumTerm: ['Complete structured grammar course', 'Join language exchange program'],\n      longTerm: ['Reach next CEFR level', 'Achieve fluent conversation ability']\n    };\n  }\n}\n\n/**\n * \uB2E4\uC74C \uB808\uBCA8 \uB2EC\uC131 \uC804\uB7B5 \uC0DD\uC131\n */\nasync function generateNextLevelStrategy(\n  ai: Ai,\n  currentLevel: CEFRLevel,\n  scores: DetailedScores\n): Promise<ComprehensiveEvaluation['nextLevelStrategy']> {\n  const levelOrder: CEFRLevel[] = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\n  const currentIndex = levelOrder.indexOf(currentLevel);\n  const targetLevel: CEFRLevel = currentIndex < levelOrder.length - 1\n    ? levelOrder[currentIndex + 1]\n    : 'C2';\n\n  try {\n    const prompt = `Create a strategy to progress from ${currentLevel} to ${targetLevel} in English.\n\nCurrent Scores: ${JSON.stringify(scores)}\n\nProvide:\n- Estimated time in months (realistic estimate)\n- 4-5 key milestones to achieve\n- 4-5 recommended resources (books, apps, courses, websites)\n\nRespond in JSON format:\n{\n  \"estimatedTimeMonths\": number,\n  \"keyMilestones\": [\"milestone1\", \"milestone2\", ...],\n  \"recommendedResources\": [\"resource1\", \"resource2\", ...]\n}`;\n\n    const response = await generateChatCompletion(ai, [\n      {\n        role: 'system',\n        content: 'You are an expert in language learning pathways and CEFR progression strategies.'\n      },\n      { role: 'user', content: prompt }\n    ], {\n      temperature: 0.3,\n      max_tokens: 800,\n      response_format: { type: 'json_object' }\n    });\n\n    const sanitized = sanitizeJsonResponse(response.text);\n    const parsed = JSON.parse(sanitized);\n\n    return {\n      targetLevel,\n      estimatedTimeMonths: parsed.estimatedTimeMonths || 6,\n      keyMilestones: parsed.keyMilestones || [\n        `Master ${targetLevel} grammar structures`,\n        `Build ${targetLevel}-appropriate vocabulary (1000+ words)`,\n        `Achieve fluent conversation at ${targetLevel} topics`\n      ],\n      recommendedResources: parsed.recommendedResources || [\n        'English Grammar in Use (Cambridge)',\n        'IELTS/TOEFL preparation materials',\n        'Language exchange platforms (HelloTalk, Tandem)',\n        'Listening practice (TED Talks, podcasts)'\n      ]\n    };\n  } catch (error) {\n    log.error('Next level strategy error', error as Error, { component: 'ADVANCED_EVAL' });\n    return {\n      targetLevel,\n      estimatedTimeMonths: 6,\n      keyMilestones: ['Improve all skill areas', 'Practice consistently', 'Seek feedback regularly'],\n      recommendedResources: ['Standard English textbooks', 'Online learning platforms', 'Language exchange apps']\n    };\n  }\n}\n", "// R2 Storage \uC11C\uBE44\uC2A4\n\nexport async function saveToR2(\n  bucket: R2Bucket,\n  key: string,\n  data: ArrayBuffer | ReadableStream,\n  contentType?: string,\n  customMetadata?: Record<string, string>\n): Promise<R2Object> {\n  try {\n    const httpMetadata: R2HTTPMetadata = {};\n\n    if (contentType) {\n      httpMetadata.contentType = contentType;\n    }\n\n    // Set cache control based on content type\n    if (contentType?.startsWith('image/')) {\n      httpMetadata.cacheControl = 'public, max-age=31536000'; // 1 year for images\n    } else if (contentType?.startsWith('audio/')) {\n      httpMetadata.cacheControl = 'public, max-age=86400'; // 24 hours for audio\n    } else {\n      httpMetadata.cacheControl = 'public, max-age=3600'; // 1 hour default\n    }\n\n    const object = await bucket.put(key, data, {\n      httpMetadata,\n      customMetadata: {\n        uploadedAt: new Date().toISOString(),\n        ...customMetadata\n      }\n    });\n\n    return object;\n  } catch (error) {\n    console.error('R2 save error:', error);\n    throw new Error(`Failed to save to R2: ${key}`);\n  }\n}\n\nexport async function getFromR2(\n  bucket: R2Bucket,\n  key: string\n): Promise<R2ObjectBody | null> {\n  try {\n    const object = await bucket.get(key);\n    return object;\n  } catch (error) {\n    console.error('R2 get error:', error);\n    return null;\n  }\n}\n\nexport async function deleteFromR2(\n  bucket: R2Bucket,\n  key: string\n): Promise<void> {\n  try {\n    await bucket.delete(key);\n  } catch (error) {\n    console.error('R2 delete error:', error);\n    throw new Error(`Failed to delete from R2: ${key}`);\n  }\n}\n\nexport async function listR2Objects(\n  bucket: R2Bucket,\n  prefix?: string,\n  limit?: number\n): Promise<R2Objects> {\n  try {\n    const options: R2ListOptions = {\n      limit: limit || 1000\n    };\n\n    if (prefix) {\n      options.prefix = prefix;\n    }\n\n    return await bucket.list(options);\n  } catch (error) {\n    console.error('R2 list error:', error);\n    throw new Error('Failed to list R2 objects');\n  }\n}\n\nexport async function getSignedUrl(\n  bucket: R2Bucket,\n  key: string,\n  expiresIn: number = 3600\n): Promise<string> {\n  try {\n    // R2\uC5D0\uC11C \uC11C\uBA85\uB41C URL\uC744 \uC9C1\uC811 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC74C\n    // Worker\uB97C \uD1B5\uD55C \uC9C1\uC811 URL \uBC18\uD658\uC73C\uB85C \uB300\uCCB4\n    return `/api/v1/upload/file/${key}`;\n  } catch (error) {\n    console.error('Signed URL error:', error);\n    throw new Error('Failed to generate signed URL');\n  }\n}\n\n// Utility function to validate file types\nexport function isValidFileType(\n  mimeType: string,\n  allowedTypes: string[]\n): boolean {\n  return allowedTypes.some(type => {\n    if (type.endsWith('/*')) {\n      const category = type.slice(0, -2);\n      return mimeType.startsWith(category + '/');\n    }\n    return mimeType === type;\n  });\n}\n\n// Utility function to generate unique file names\nexport function generateUniqueFileName(\n  originalName: string,\n  userId: string\n): string {\n  const timestamp = Date.now();\n  const random = Math.random().toString(36).substring(2, 8);\n  const extension = originalName.split('.').pop();\n  const nameWithoutExt = originalName.replace(/\\.[^/.]+$/, '');\n\n  // Sanitize filename\n  const sanitized = nameWithoutExt\n    .replace(/[^a-zA-Z0-9_-]/g, '_')\n    .substring(0, 50);\n\n  return `${userId}/${timestamp}_${random}_${sanitized}.${extension}`;\n}\n\n// Type definitions for R2\ninterface R2HTTPMetadata {\n  contentType?: string;\n  contentLanguage?: string;\n  contentDisposition?: string;\n  contentEncoding?: string;\n  cacheControl?: string;\n  cacheExpiry?: Date;\n}\n\ninterface R2ListOptions {\n  limit?: number;\n  prefix?: string;\n  cursor?: string;\n  delimiters?: string;\n  startAfter?: string;\n}\n", "import { Hono } from 'hono';\nimport { Env } from '../index';\nimport { Variables, WebRTCRoom } from '../types';\nimport { successResponse, createdResponse } from '../utils/response';\nimport { validationError, notFoundError, conflictError } from '../middleware/error-handler';\nimport { auth } from '../middleware/auth';\nimport { log } from '../utils/logger';\nimport { getActiveRooms } from '../utils/activeRooms';\n\nexport const webrtcRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\n// Create a new room\nwebrtcRoutes.post('/create', auth({ optional: true }), async (c) => {\n  const { roomType = 'audio', maxParticipants = 4, metadata = {} } = await c.req.json();\n\n  // Validate room type\n  if (!['audio', 'video'].includes(roomType)) {\n    throw validationError('Invalid room type. Must be \"audio\" or \"video\"');\n  }\n\n  // Validate max participants\n  if (maxParticipants < 2 || maxParticipants > 10) {\n    throw validationError('Max participants must be between 2 and 10');\n  }\n\n  // Generate unique room ID\n  const roomId = crypto.randomUUID();\n\n  // Create Durable Object instance\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  // Initialize room\n  const response = await room.fetch(new Request('http://room/init', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ roomType, maxParticipants, metadata })\n  }));\n\n  if (!response.ok) {\n    const error = await response.json() as any;\n    throw new Error(String(error?.message) || 'Failed to initialize room');\n  }\n\n  const data = {\n    roomId,\n    roomType,\n    maxParticipants,\n    metadata,\n    websocketUrl: `/api/v1/room/${roomId}/ws`,\n    joinUrl: `/api/v1/room/${roomId}/join`,\n    createdAt: new Date().toISOString()\n  };\n\n  // Cache room info\n  await c.env.CACHE.put(\n    `room:${roomId}`,\n    JSON.stringify(data),\n    { expirationTtl: 3600 } // 1 hour\n  );\n\n  return createdResponse(c, data, `/api/v1/room/${roomId}`);\n});\n\n// List active rooms (for dashboards / client session list)\nwebrtcRoutes.get('/active', async (c) => {\n  const rooms = await getActiveRooms(c.env.CACHE);\n  return successResponse(c, rooms);\n});\n\n// Join a room\nwebrtcRoutes.post('/:roomId/join', auth({ optional: true }), async (c) => {\n  const roomId = c.req.param('roomId');\n  const { userId, userName, userMetadata = {} } = await c.req.json();\n\n  if (!userId || !userName) {\n    throw validationError('userId and userName are required');\n  }\n\n  // Check if room exists in cache\n  const cachedRoom = await c.env.CACHE.get(`room:${roomId}`);\n  if (!cachedRoom) {\n    // Try to get room info from Durable Object\n    const id = c.env.ROOM.idFromName(roomId);\n    const room = c.env.ROOM.get(id);\n\n    const infoResponse = await room.fetch(new Request('http://room/info'));\n    if (!infoResponse.ok) {\n      throw notFoundError('Room');\n    }\n  }\n\n  // Get Durable Object instance\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  // Join room\n  const response = await room.fetch(new Request('http://room/join', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ userId, userName, userMetadata })\n  }));\n\n  if (!response.ok) {\n    const error = await response.json() as any;\n    if (response.status === 409) {\n      throw conflictError(String(error?.message) || 'Room is full');\n    }\n    throw new Error(String(error?.message) || 'Failed to join room');\n  }\n\n  const result = await response.json() as any;\n\n  return successResponse(c, {\n    ...(result || {}),\n    websocketUrl: `/api/v1/room/${roomId}/ws?userId=${userId}&userName=${encodeURIComponent(userName)}`\n  });\n});\n\n// Leave a room\nwebrtcRoutes.post('/:roomId/leave', auth({ optional: true }), async (c) => {\n  const roomId = c.req.param('roomId');\n  const { userId } = await c.req.json();\n\n  if (!userId) {\n    throw validationError('userId is required');\n  }\n\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  const response = await room.fetch(new Request('http://room/leave', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ userId })\n  }));\n\n  if (!response.ok) {\n    const error = await response.json() as any;\n    throw new Error(String(error?.message) || 'Failed to leave room');\n  }\n\n  return successResponse(c, await response.json());\n});\n\n// WebSocket endpoint for signaling\nwebrtcRoutes.get('/:roomId/ws', async (c) => {\n  const roomId = c.req.param('roomId');\n  const userId = c.req.query('userId');\n  const userName = c.req.query('userName') || 'Anonymous';\n  const upgrade = c.req.header('Upgrade');\n\n  if (!upgrade || upgrade !== 'websocket') {\n    throw validationError('Expected WebSocket upgrade header');\n  }\n\n  if (!userId) {\n    throw validationError('userId parameter is required');\n  }\n\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  // Forward WebSocket request with query parameters\n  const wsUrl = `http://room/websocket?userId=${userId}&userName=${encodeURIComponent(userName)}`;\n\n  return room.fetch(new Request(wsUrl, {\n    headers: c.req.raw.headers\n  }));\n});\n\n// Update room settings\nwebrtcRoutes.patch('/:roomId/settings', auth({ optional: true }), async (c) => {\n  const roomId = c.req.param('roomId');\n  const settings = await c.req.json();\n\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  const response = await room.fetch(new Request('http://room/settings', {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(settings)\n  }));\n\n  if (!response.ok) {\n    const error = await response.json() as any;\n    throw new Error(String(error?.message) || 'Failed to update settings');\n  }\n\n  // Update cache if room exists\n  const cachedRoom = await c.env.CACHE.get(`room:${roomId}`);\n  if (cachedRoom) {\n    const roomData = JSON.parse(cachedRoom);\n    await c.env.CACHE.put(\n      `room:${roomId}`,\n      JSON.stringify({ ...roomData, ...settings }),\n      { expirationTtl: 3600 }\n    );\n  }\n\n  return successResponse(c, await response.json());\n});\n\n// Get room info\nwebrtcRoutes.get('/:roomId/info', async (c) => {\n  const roomId = c.req.param('roomId');\n\n  // Check cache first\n  const cachedRoom = await c.env.CACHE.get(`room:${roomId}`);\n  if (cachedRoom) {\n    return successResponse(c, JSON.parse(cachedRoom));\n  }\n\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  const response = await room.fetch(new Request('http://room/info'));\n\n  if (!response.ok) {\n    if (response.status === 404) {\n      throw notFoundError('Room');\n    }\n    const error = await response.json() as any;\n    throw new Error(String(error?.message) || 'Failed to get room info');\n  }\n\n  const data = await response.json();\n\n  // Cache the result\n  await c.env.CACHE.put(\n    `room:${roomId}`,\n    JSON.stringify(data),\n    { expirationTtl: 3600 }\n  );\n\n  return successResponse(c, data);\n});\n\n// Get ICE servers for a room\nwebrtcRoutes.get('/:roomId/ice-servers', async (c) => {\n  const roomId = c.req.param('roomId');\n\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  const response = await room.fetch(new Request('http://room/ice-servers'));\n\n  if (!response.ok) {\n    const error = await response.json() as any;\n    throw new Error(String(error?.message) || 'Failed to get ICE servers');\n  }\n\n  return successResponse(c, await response.json());\n});\n\n// Get room metrics and analytics\nwebrtcRoutes.get('/:roomId/metrics', auth({ optional: true }), async (c) => {\n  const roomId = c.req.param('roomId');\n\n  const id = c.env.ROOM.idFromName(roomId);\n  const room = c.env.ROOM.get(id);\n\n  const response = await room.fetch(new Request('http://room/metrics'));\n\n  if (!response.ok) {\n    if (response.status === 404) {\n      throw notFoundError('Room');\n    }\n    const error = await response.json() as any;\n    throw new Error(String(error?.message) || 'Failed to get room metrics');\n  }\n\n  const data = await response.json() as any;\n\n  return successResponse(c, {\n    ...(data || {}),\n    analytics: {\n      uptimeHours: Math.floor((data?.metrics?.sessionDuration || 0) / 3600),\n      averageParticipants: (data?.metrics?.totalParticipants || 0) > 0 ? \n        (data?.metrics?.peakParticipants || 0) / Math.max(1, data?.currentParticipants || 0) : 0,\n      messagesPerMinute: (data?.metrics?.sessionDuration || 0) > 0 ? \n        ((data?.metrics?.messagesExchanged || 0) / ((data?.metrics?.sessionDuration || 0) / 60)) : 0\n    }\n  });\n});\n\n// Upload recording chunk to R2 storage\nwebrtcRoutes.post('/:roomId/recording/upload', auth({ optional: true }), async (c) => {\n  const roomId = c.req.param('roomId');\n  const formData = await c.req.formData();\n  \n  const file = formData.get('recording') as File | null;\n  const userId = formData.get('userId') as string;\n  const filename = formData.get('filename') as string;\n  \n  if (!file || !userId || !filename) {\n    throw validationError('recording, userId, and filename are required');\n  }\n\n  // Generate unique filename\n  const timestamp = Date.now();\n  const extension = filename.split('.').pop() || 'webm';\n  const storageKey = `recordings/${roomId}/${userId}/${timestamp}-${filename}`;\n\n  try {\n    // Upload to R2\n    await c.env.STORAGE.put(storageKey, file.stream(), {\n      httpMetadata: {\n        contentType: file.type || 'video/webm'\n      }\n    });\n\n    // Get Durable Object to notify about the upload\n    const id = c.env.ROOM.idFromName(roomId);\n    const room = c.env.ROOM.get(id);\n\n    // Notify room about recording chunk\n    await room.fetch(new Request('http://room/websocket', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        type: 'recording-chunk',\n        userId,\n        data: {\n          filename: storageKey,\n          originalFilename: filename,\n          size: file.size,\n          duration: formData.get('duration') || 0,\n          contentType: file.type\n        }\n      })\n    }));\n\n    return successResponse(c, {\n      uploadedTo: storageKey,\n      size: file.size,\n      contentType: file.type,\n      uploadedAt: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('Recording upload error:', error);\n    throw new Error('Failed to upload recording');\n  }\n});\n\n// List active rooms (admin only)\nwebrtcRoutes.get('/list', auth({ roles: ['admin'] }), async (c) => {\n  // This would require a separate storage mechanism to track active rooms\n  // For now, return empty list\n  return successResponse(c, {\n    rooms: [],\n    total: 0,\n    message: 'Room listing requires additional infrastructure setup'\n  });\n});\n", "import { ActiveRoomInfo } from '../types';\n\nconst ACTIVE_ROOMS_CACHE_KEY = 'active_rooms';\nconst DEFAULT_TTL_SECONDS = 3600;\n\nasync function readActiveRooms(cache: KVNamespace): Promise<ActiveRoomInfo[]> {\n  if (!cache) return [];\n  const raw = await cache.get(ACTIVE_ROOMS_CACHE_KEY);\n  if (!raw) return [];\n  try {\n    const parsed = JSON.parse(raw) as ActiveRoomInfo[];\n    if (Array.isArray(parsed)) {\n      return parsed;\n    }\n    return [];\n  } catch (error) {\n    console.error('Failed to parse active rooms cache', error);\n    return [];\n  }\n}\n\nasync function writeActiveRooms(cache: KVNamespace, rooms: ActiveRoomInfo[]): Promise<void> {\n  if (!cache) return;\n  await cache.put(\n    ACTIVE_ROOMS_CACHE_KEY,\n    JSON.stringify(rooms),\n    { expirationTtl: DEFAULT_TTL_SECONDS }\n  );\n}\n\nexport async function getActiveRooms(cache: KVNamespace): Promise<ActiveRoomInfo[]> {\n  return readActiveRooms(cache);\n}\n\nexport async function upsertActiveRoom(cache: KVNamespace, room: ActiveRoomInfo): Promise<void> {\n  if (!cache) return;\n  const rooms = await readActiveRooms(cache);\n  const index = rooms.findIndex((item) => item.roomId === room.roomId);\n  const nextRoom: ActiveRoomInfo = {\n    ...room,\n    updatedAt: room.updatedAt || new Date().toISOString(),\n  };\n  if (index >= 0) {\n    rooms[index] = nextRoom;\n  } else {\n    rooms.push(nextRoom);\n  }\n  await writeActiveRooms(cache, rooms);\n}\n\nexport async function removeActiveRoom(cache: KVNamespace, roomId: string): Promise<void> {\n  if (!cache) return;\n  const rooms = await readActiveRooms(cache);\n  const filtered = rooms.filter((room) => room.roomId !== roomId);\n  if (filtered.length === rooms.length) {\n    return;\n  }\n  await writeActiveRooms(cache, filtered);\n}\n\n", "import { Hono } from 'hono';\nimport { Env } from '../index';\nimport { Variables } from '../types';\nimport { successResponse, createdResponse, noContentResponse, setCacheHeaders } from '../utils/response';\nimport { validationError, notFoundError, forbiddenError } from '../middleware/error-handler';\nimport { auth, getCurrentUser } from '../middleware/auth';\nimport { bodySizeLimit } from '../middleware/security';\nimport { saveToR2, getFromR2, deleteFromR2 } from '../services/storage';\n\nexport const uploadRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\ninterface UploadResponse {\n  key: string;\n  url: string;\n  size: number;\n  type: string;\n  variants?: Record<string, string>;\n  metadata?: Record<string, any>;\n}\n\n// File type and size limits\nconst FILE_LIMITS = {\n  audio: {\n    types: ['audio/webm', 'audio/mp3', 'audio/wav', 'audio/ogg', 'audio/m4a'],\n    maxSize: 50 * 1024 * 1024 // 50MB\n  },\n  image: {\n    types: ['image/jpeg', 'image/png', 'image/webp', 'image/gif', 'image/avif'],\n    maxSize: 10 * 1024 * 1024 // 10MB\n  },\n  video: {\n    types: ['video/mp4', 'video/webm', 'video/quicktime'],\n    maxSize: 100 * 1024 * 1024 // 100MB\n  },\n  document: {\n    types: ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'],\n    maxSize: 20 * 1024 * 1024 // 20MB\n  }\n};\n\n// Validate file\nfunction validateFile(file: File, type: keyof typeof FILE_LIMITS): void {\n  const limits = FILE_LIMITS[type];\n\n  if (!limits.types.includes(file.type)) {\n    throw validationError(`Invalid file type. Allowed types: ${limits.types.join(', ')}`);\n  }\n\n  if (file.size > limits.maxSize) {\n    const maxSizeMB = limits.maxSize / (1024 * 1024);\n    throw validationError(`File too large. Maximum size: ${maxSizeMB}MB`);\n  }\n}\n\n// Generate unique file key\nfunction generateFileKey(type: string, userId: string, fileName: string, folder?: string): string {\n  const timestamp = Date.now();\n  const safeFileName = fileName.replace(/[^a-zA-Z0-9.-]/g, '_');\n  const parts = [type];\n\n  if (folder) {\n    parts.push(folder);\n  }\n\n  parts.push(userId, `${timestamp}-${safeFileName}`);\n\n  return parts.join('/');\n}\n\n// Upload audio file\nuploadRoutes.post('/audio', auth(), bodySizeLimit(50 * 1024 * 1024), async (c) => {\n  const formData = await c.req.formData();\n  const file = formData.get('file') as File | null;\n  const folder = formData.get('folder') as string;\n  const metadata = formData.get('metadata') as string;\n\n  if (!file) {\n    throw validationError('File is required');\n  }\n\n  const user = getCurrentUser(c)!;\n  validateFile(file, 'audio');\n\n  const buffer = await file.arrayBuffer();\n  const key = generateFileKey('audio', user.id, file.name, folder);\n\n  // Save file with metadata\n  const uploadMetadata = metadata ? JSON.parse(metadata) : {};\n  await saveToR2(c.env.STORAGE, key, buffer, file.type, {\n    userId: user.id,\n    originalName: file.name,\n    ...uploadMetadata\n  });\n\n  const response: UploadResponse = {\n    key,\n    url: `/api/v1/upload/file/${key}`,\n    size: file.size,\n    type: file.type,\n    metadata: uploadMetadata\n  };\n\n  return createdResponse(c, response, response.url);\n});\n\n// Upload image file\nuploadRoutes.post('/image', auth(), bodySizeLimit(10 * 1024 * 1024), async (c) => {\n  const formData = await c.req.formData();\n  const file = formData.get('file') as File | null;\n  const type = formData.get('type') as string; // 'profile' | 'chat' | 'general'\n  const metadata = formData.get('metadata') as string;\n\n  if (!file) {\n    throw validationError('File is required');\n  }\n\n  const user = getCurrentUser(c)!;\n  validateFile(file, 'image');\n\n  const buffer = await file.arrayBuffer();\n  const key = generateFileKey('images', user.id, file.name, type || 'general');\n\n  // Save file with metadata\n  const uploadMetadata = metadata ? JSON.parse(metadata) : {};\n  await saveToR2(c.env.STORAGE, key, buffer, file.type, {\n    userId: user.id,\n    originalName: file.name,\n    imageType: type,\n    ...uploadMetadata\n  });\n\n  // Generate variant URLs (for Cloudflare Images integration)\n  let variants: Record<string, string> = {};\n  if (type === 'profile') {\n    variants = {\n      thumbnail: `/api/v1/upload/file/${key}?variant=thumbnail`,\n      medium: `/api/v1/upload/file/${key}?variant=medium`,\n      large: `/api/v1/upload/file/${key}?variant=large`\n    };\n  }\n\n  const response: UploadResponse = {\n    key,\n    url: `/api/v1/upload/file/${key}`,\n    size: file.size,\n    type: file.type,\n    variants,\n    metadata: uploadMetadata\n  };\n\n  // Cache profile image URL\n  if (type === 'profile') {\n    await c.env.CACHE.put(\n      `profile-image:${user.id}`,\n      JSON.stringify(response),\n      { expirationTtl: 86400 } // 24 hours\n    );\n  }\n\n  return createdResponse(c, response, response.url);\n});\n\n// Upload video file\nuploadRoutes.post('/video', auth(), bodySizeLimit(100 * 1024 * 1024), async (c) => {\n  const formData = await c.req.formData();\n  const file = formData.get('file') as File | null;\n  const metadata = formData.get('metadata') as string;\n\n  if (!file) {\n    throw validationError('File is required');\n  }\n\n  const user = getCurrentUser(c)!;\n  validateFile(file, 'video');\n\n  // For large video files, consider using multipart upload\n  // This is a simplified version\n  const buffer = await file.arrayBuffer();\n  const key = generateFileKey('videos', user.id, file.name);\n\n  const uploadMetadata = metadata ? JSON.parse(metadata) : {};\n  await saveToR2(c.env.STORAGE, key, buffer, file.type, {\n    userId: user.id,\n    originalName: file.name,\n    ...uploadMetadata\n  });\n\n  const response: UploadResponse = {\n    key,\n    url: `/api/v1/upload/file/${key}`,\n    size: file.size,\n    type: file.type,\n    metadata: uploadMetadata\n  };\n\n  return createdResponse(c, response, response.url);\n});\n\n// Get uploaded file\nuploadRoutes.get('/file/*', async (c) => {\n  const path = c.req.path.replace('/api/v1/upload/file/', '');\n  const variant = c.req.query('variant');\n  const download = c.req.query('download') === 'true';\n\n  if (!path) {\n    throw validationError('Invalid file path');\n  }\n\n  // Check cache first for frequently accessed files\n  const cacheKey = `file:${path}${variant ? `:${variant}` : ''}`;\n  const cached = await c.env.CACHE.get(cacheKey, { type: 'stream' });\n  if (cached) {\n    setCacheHeaders(c, { maxAge: 3600, sMaxAge: 86400 });\n    return new Response(cached, {\n      headers: c.res.headers\n    });\n  }\n\n  const file = await getFromR2(c.env.STORAGE, path);\n\n  if (!file) {\n    throw notFoundError('File');\n  }\n\n  // Set appropriate headers\n  const headers = new Headers();\n  headers.set('Content-Type', file.httpMetadata?.contentType || 'application/octet-stream');\n\n  if (download || file.httpMetadata?.contentDisposition) {\n    const filename = file.customMetadata?.originalName || path.split('/').pop();\n    headers.set('Content-Disposition', `attachment; filename=\"${filename}\"`);\n  } else {\n    headers.set('Content-Disposition', 'inline');\n  }\n\n  // Set cache headers\n  setCacheHeaders(c, {\n    maxAge: 3600,       // 1 hour browser cache\n    sMaxAge: 86400,     // 24 hours CDN cache\n    private: false\n  });\n\n  Object.entries(c.res.headers).forEach(([key, value]) => {\n    headers.set(key, value as string);\n  });\n\n  // Cache frequently accessed files\n  if (!download && file.size < 1024 * 1024) { // Cache files under 1MB\n    await c.env.CACHE.put(\n      cacheKey,\n      file.body,\n      { expirationTtl: 3600 }\n    );\n  }\n\n  return new Response(file.body, { headers });\n});\n\n// Delete file\nuploadRoutes.delete('/file/*', auth(), async (c) => {\n  const path = c.req.path.replace('/api/v1/upload/file/', '');\n  const user = getCurrentUser(c)!;\n\n  if (!path) {\n    throw validationError('Invalid file path');\n  }\n\n  // Get file metadata to verify ownership\n  const file = await getFromR2(c.env.STORAGE, path);\n  if (!file) {\n    throw notFoundError('File');\n  }\n\n  // Verify user owns the file\n  const fileUserId = file.customMetadata?.userId;\n  if (fileUserId !== user.id && user.role !== 'admin') {\n    throw forbiddenError('You do not have permission to delete this file');\n  }\n\n  await deleteFromR2(c.env.STORAGE, path);\n\n  // Clear related caches\n  await c.env.CACHE.delete(`file:${path}`);\n  if (path.includes('profile')) {\n    await c.env.CACHE.delete(`profile-image:${user.id}`);\n  }\n\n  return noContentResponse(c);\n});\n\n// Get upload URL (for direct uploads)\nuploadRoutes.post('/presigned-url', auth(), async (c) => {\n  const { fileName, fileType, type = 'general' } = await c.req.json();\n\n  if (!fileName || !fileType) {\n    throw validationError('fileName and fileType are required');\n  }\n\n  const user = getCurrentUser(c)!;\n  const key = generateFileKey(type, user.id, fileName);\n\n  // R2\uB97C \uC704\uD55C presigned URL \uC0DD\uC131 - R2\uB294 presigned URL\uC744 \uC9C1\uC811 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC73C\uBBC0\uB85C Worker \uC5C5\uB85C\uB4DC URL \uBC18\uD658\n  try {\n    // R2\uB294 AWS S3\uC640 \uB2EC\uB9AC presigned URL\uC744 \uC9C1\uC811 \uC81C\uACF5\uD558\uC9C0 \uC54A\uC74C\n    // \uB300\uC2E0 Worker\uB97C \uD1B5\uD55C \uC5C5\uB85C\uB4DC \uC5D4\uB4DC\uD3EC\uC778\uD2B8 \uC81C\uACF5\n    const uploadUrl = `/api/v1/upload/${type}`;\n    \n    return successResponse(c, {\n      uploadUrl,\n      key,\n      method: 'POST', // Worker \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uB294 POST \uBA54\uC11C\uB4DC \uC0AC\uC6A9\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      fields: {\n        key,\n        fileName,\n        fileType,\n        type\n      },\n      expiresAt: new Date(Date.now() + 3600 * 1000).toISOString()\n    });\n  } catch (error) {\n    console.error('Upload URL generation failed:', error);\n    throw validationError('Failed to generate upload URL');\n  }\n});\n", "import { Context, Next } from 'hono';\nimport { ApiError } from '../types';\nimport type { AppBindings as Env } from '../index';\n\n/**\n * \uBCF4\uC548 \uD5E4\uB354 \uBBF8\uB4E4\uC6E8\uC5B4\n * OWASP \uAD8C\uC7A5\uC0AC\uD56D\uC5D0 \uB530\uB978 \uBCF4\uC548 \uD5E4\uB354 \uC124\uC815\n */\nexport async function securityHeaders(c: Context, next: Next) {\n    await next();\n\n    // \uBCF4\uC548 \uD5E4\uB354 \uC124\uC815\n    c.header('X-Content-Type-Options', 'nosniff');\n    c.header('X-Frame-Options', 'DENY');\n    c.header('X-XSS-Protection', '1; mode=block');\n    c.header('Referrer-Policy', 'strict-origin-when-cross-origin');\n    c.header('Permissions-Policy', 'camera=(), microphone=(), geolocation=()');\n\n    // CSP\uB294 \uD658\uACBD\uC5D0 \uB530\uB77C \uB2E4\uB974\uAC8C \uC124\uC815\n    const isDevelopment = (c as any).env?.ENVIRONMENT === 'development';\n    if (!isDevelopment) {\n        c.header(\n            'Content-Security-Policy',\n            \"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:\"\n        );\n    }\n\n    // HSTS (HTTPS \uD658\uACBD\uC5D0\uC11C\uB9CC)\n    if (c.req.header('X-Forwarded-Proto') === 'https') {\n        c.header('Strict-Transport-Security', 'max-age=31536000; includeSubDomains');\n    }\n}\n\n/**\n * Rate Limiting \uBBF8\uB4E4\uC6E8\uC5B4\n * IP \uAE30\uBC18 \uC694\uCCAD \uC81C\uD55C\n */\nexport function rateLimit(options: {\n    windowMs?: number;  // \uC2DC\uAC04 \uCC3D (\uAE30\uBCF8: 15\uBD84)\n    max?: number;       // \uCD5C\uB300 \uC694\uCCAD \uC218 (\uAE30\uBCF8: 100)\n    keyGenerator?: (c: Context) => string; // \uD0A4 \uC0DD\uC131 \uD568\uC218\n    skipSuccessfulRequests?: boolean; // \uC131\uACF5\uD55C \uC694\uCCAD\uC740 \uC81C\uC678\n    skipFailedRequests?: boolean;     // \uC2E4\uD328\uD55C \uC694\uCCAD\uC740 \uC81C\uC678\n} = {}) {\n    const {\n        windowMs = 15 * 60 * 1000, // 15\uBD84\n        max = 100,\n        keyGenerator = (c) => c.req.header('CF-Connecting-IP') || 'unknown',\n        skipSuccessfulRequests = false,\n        skipFailedRequests = false\n    } = options;\n\n    return async (c: Context<{ Bindings: Env }>, next: Next) => {\n        const key = `rate-limit:${keyGenerator(c)}`;\n        const now = Date.now();\n        const windowStart = now - windowMs;\n\n        try {\n            // KV\uC5D0\uC11C \uD604\uC7AC \uC694\uCCAD \uAE30\uB85D \uAC00\uC838\uC624\uAE30\n            const stored = await c.env.CACHE.get(key);\n            let requests: number[] = stored ? JSON.parse(stored) : [];\n\n            // \uC708\uB3C4\uC6B0 \uBC16\uC758 \uC694\uCCAD \uC81C\uAC70\n            requests = requests.filter(timestamp => timestamp > windowStart);\n\n            // \uC81C\uD55C \uD655\uC778\n            if (requests.length >= max) {\n                const retryAfter = Math.ceil((requests[0] + windowMs - now) / 1000);\n                c.header('Retry-After', retryAfter.toString());\n                c.header('X-RateLimit-Limit', max.toString());\n                c.header('X-RateLimit-Remaining', '0');\n                c.header('X-RateLimit-Reset', new Date(requests[0] + windowMs).toISOString());\n\n                throw new ApiError(429, 'RATE_LIMIT_EXCEEDED', 'Too many requests');\n            }\n\n            // \uB2E4\uC74C \uBBF8\uB4E4\uC6E8\uC5B4 \uC2E4\uD589\n            await next();\n\n            // \uC694\uCCAD \uAE30\uB85D (\uC635\uC158\uC5D0 \uB530\uB77C)\n            const shouldSkip =\n                (skipSuccessfulRequests && c.res.status < 400) ||\n                (skipFailedRequests && c.res.status >= 400);\n\n            if (!shouldSkip) {\n                requests.push(now);\n                await c.env.CACHE.put(key, JSON.stringify(requests), {\n                    expirationTtl: Math.ceil(windowMs / 1000)\n                });\n            }\n\n            // Rate limit \uD5E4\uB354 \uC124\uC815\n            c.header('X-RateLimit-Limit', max.toString());\n            c.header('X-RateLimit-Remaining', (max - requests.length).toString());\n            c.header('X-RateLimit-Reset', new Date(now + windowMs).toISOString());\n        } catch (error) {\n            if (error instanceof ApiError && error.statusCode === 429) {\n                throw error;\n            }\n            // KV \uC5D0\uB7EC\uB294 \uBB34\uC2DC\uD558\uACE0 \uACC4\uC18D \uC9C4\uD589\n            console.error('Rate limit error:', error);\n            await next();\n        }\n    };\n}\n\n/**\n * IP \uD654\uC774\uD2B8\uB9AC\uC2A4\uD2B8/\uBE14\uB799\uB9AC\uC2A4\uD2B8 \uBBF8\uB4E4\uC6E8\uC5B4\n */\nexport function ipFilter(options: {\n    whitelist?: string[];\n    blacklist?: string[];\n} = {}) {\n    return async (c: Context, next: Next) => {\n        const clientIp = c.req.header('CF-Connecting-IP') ||\n            c.req.header('X-Forwarded-For')?.split(',')[0] ||\n            'unknown';\n\n        // \uBE14\uB799\uB9AC\uC2A4\uD2B8 \uD655\uC778\n        if (options.blacklist?.includes(clientIp)) {\n            throw new ApiError(403, 'FORBIDDEN', 'Access denied');\n        }\n\n        // \uD654\uC774\uD2B8\uB9AC\uC2A4\uD2B8 \uD655\uC778 (\uC124\uC815\uB41C \uACBD\uC6B0)\n        if (options.whitelist && options.whitelist.length > 0) {\n            if (!options.whitelist.includes(clientIp)) {\n                throw new ApiError(403, 'FORBIDDEN', 'Access denied');\n            }\n        }\n\n        await next();\n    };\n}\n\n/**\n * \uC694\uCCAD \uD06C\uAE30 \uC81C\uD55C \uBBF8\uB4E4\uC6E8\uC5B4\n */\nexport function bodySizeLimit(maxSize: number = 10 * 1024 * 1024) { // \uAE30\uBCF8 10MB\n    return async (c: Context, next: Next) => {\n        const contentLength = c.req.header('Content-Length');\n\n        if (contentLength && parseInt(contentLength) > maxSize) {\n            throw new ApiError(413, 'PAYLOAD_TOO_LARGE', `Request body too large. Maximum size: ${maxSize} bytes`);\n        }\n\n        await next();\n    };\n}", "import { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport { processAudio, WhisperOptions } from '../services/ai';\nimport { handleError } from '../utils/errors';\nimport type { AppBindings as Env } from '../index';\nimport { log } from '../utils/logger';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// CORS \uC124\uC815\napp.use('/*', cors());\n\n// Whisper \uC74C\uC131 \uC778\uC2DD \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/transcribe', async (c) => {\n    try {\n        const contentType = c.req.header('content-type');\n        let audioBuffer: ArrayBuffer;\n        let options: WhisperOptions = {};\n\n        if (contentType?.includes('multipart/form-data')) {\n            // FormData\uB85C \uC624\uB514\uC624 \uD30C\uC77C\uACFC \uC635\uC158 \uBC1B\uAE30\n            const formData = await c.req.formData();\n            const audioFile = formData.get('audio') as File | null;\n\n            if (!audioFile) {\n                return c.json({ error: 'No audio file provided' }, 400);\n            }\n\n            audioBuffer = await audioFile.arrayBuffer();\n\n            // \uC635\uC158 \uD30C\uC2F1\n            const task = formData.get('task') as string;\n            const language = formData.get('language') as string;\n            const vadFilter = formData.get('vad_filter') as string;\n            const initialPrompt = formData.get('initial_prompt') as string;\n            const prefix = formData.get('prefix') as string;\n\n            options = {\n                task: task as 'transcribe' | 'translate' || 'transcribe',\n                language: language || 'auto',\n                vad_filter: vadFilter === 'true',\n                initial_prompt: initialPrompt,\n                prefix: prefix\n            };\n        } else if (contentType?.includes('application/json')) {\n            // JSON\uC73C\uB85C base64 \uC624\uB514\uC624 \uBC1B\uAE30\n            const body = await c.req.json<{\n                audio: string; // base64\n                options?: WhisperOptions;\n            }>();\n\n            if (!body.audio) {\n                return c.json({ error: 'No audio data provided' }, 400);\n            }\n\n            // Base64\uB97C ArrayBuffer\uB85C \uBCC0\uD658\n            const binaryString = atob(body.audio);\n            const bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n                bytes[i] = binaryString.charCodeAt(i);\n            }\n            audioBuffer = bytes.buffer;\n            options = body.options || {};\n        } else {\n            // \uC9C1\uC811 \uBC14\uC774\uB108\uB9AC \uB370\uC774\uD130\n            audioBuffer = await c.req.arrayBuffer();\n        }\n\n        // \uD30C\uC77C \uD06C\uAE30 \uD655\uC778 (\uCD5C\uB300 25MB)\n        if (audioBuffer.byteLength > 25 * 1024 * 1024) {\n            return c.json({ error: 'Audio file too large. Maximum size is 25MB' }, 400);\n        }\n\n        // Whisper \uCC98\uB9AC\n        const result = await processAudio(c.env.AI, audioBuffer, options);\n\n        // \uC751\uB2F5\n        return c.json({\n            success: true,\n            transcription: result.text,\n            word_count: result.word_count,\n            words: result.words,\n            chunks_processed: result.chunks,\n            language: options.language || 'auto',\n            task: options.task || 'transcribe'\n        });\n\n    } catch (error) {\n        log.error('Transcription error', error as Error, { component: 'WHISPER_SERVICE' });\n        return c.json({\n            error: 'Transcription failed',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        }, 500);\n    }\n});\n\n// \uC9C0\uC6D0\uB418\uB294 \uC5B8\uC5B4 \uBAA9\uB85D\napp.get('/languages', (c) => {\n    return c.json({\n        supported_languages: [\n            { code: 'auto', name: 'Auto-detect' },\n            { code: 'en', name: 'English' },\n            { code: 'zh', name: 'Chinese' },\n            { code: 'de', name: 'German' },\n            { code: 'es', name: 'Spanish' },\n            { code: 'ru', name: 'Russian' },\n            { code: 'ko', name: 'Korean' },\n            { code: 'fr', name: 'French' },\n            { code: 'ja', name: 'Japanese' },\n            { code: 'pt', name: 'Portuguese' },\n            { code: 'tr', name: 'Turkish' },\n            { code: 'pl', name: 'Polish' },\n            { code: 'ca', name: 'Catalan' },\n            { code: 'nl', name: 'Dutch' },\n            { code: 'ar', name: 'Arabic' },\n            { code: 'sv', name: 'Swedish' },\n            { code: 'it', name: 'Italian' },\n            { code: 'id', name: 'Indonesian' },\n            { code: 'hi', name: 'Hindi' },\n            { code: 'fi', name: 'Finnish' },\n            { code: 'vi', name: 'Vietnamese' },\n            { code: 'he', name: 'Hebrew' },\n            { code: 'uk', name: 'Ukrainian' },\n            { code: 'el', name: 'Greek' },\n            { code: 'ms', name: 'Malay' },\n            { code: 'cs', name: 'Czech' },\n            { code: 'ro', name: 'Romanian' },\n            { code: 'da', name: 'Danish' },\n            { code: 'hu', name: 'Hungarian' },\n            { code: 'ta', name: 'Tamil' },\n            { code: 'no', name: 'Norwegian' },\n            { code: 'th', name: 'Thai' },\n            { code: 'ur', name: 'Urdu' },\n            { code: 'hr', name: 'Croatian' },\n            { code: 'bg', name: 'Bulgarian' },\n            { code: 'lt', name: 'Lithuanian' },\n            { code: 'la', name: 'Latin' },\n            { code: 'mi', name: 'Maori' },\n            { code: 'ml', name: 'Malayalam' },\n            { code: 'cy', name: 'Welsh' },\n            { code: 'sk', name: 'Slovak' },\n            { code: 'te', name: 'Telugu' },\n            { code: 'fa', name: 'Persian' },\n            { code: 'lv', name: 'Latvian' },\n            { code: 'bn', name: 'Bengali' },\n            { code: 'sr', name: 'Serbian' },\n            { code: 'az', name: 'Azerbaijani' },\n            { code: 'sl', name: 'Slovenian' },\n            { code: 'kn', name: 'Kannada' },\n            { code: 'et', name: 'Estonian' },\n            { code: 'mk', name: 'Macedonian' },\n            { code: 'br', name: 'Breton' },\n            { code: 'eu', name: 'Basque' },\n            { code: 'is', name: 'Icelandic' },\n            { code: 'hy', name: 'Armenian' },\n            { code: 'ne', name: 'Nepali' },\n            { code: 'mn', name: 'Mongolian' },\n            { code: 'bs', name: 'Bosnian' },\n            { code: 'kk', name: 'Kazakh' },\n            { code: 'sq', name: 'Albanian' },\n            { code: 'sw', name: 'Swahili' },\n            { code: 'gl', name: 'Galician' },\n            { code: 'mr', name: 'Marathi' },\n            { code: 'pa', name: 'Punjabi' },\n            { code: 'si', name: 'Sinhala' },\n            { code: 'km', name: 'Khmer' },\n            { code: 'sn', name: 'Shona' },\n            { code: 'yo', name: 'Yoruba' },\n            { code: 'so', name: 'Somali' },\n            { code: 'af', name: 'Afrikaans' },\n            { code: 'oc', name: 'Occitan' },\n            { code: 'ka', name: 'Georgian' },\n            { code: 'be', name: 'Belarusian' },\n            { code: 'tg', name: 'Tajik' },\n            { code: 'sd', name: 'Sindhi' },\n            { code: 'gu', name: 'Gujarati' },\n            { code: 'am', name: 'Amharic' },\n            { code: 'yi', name: 'Yiddish' },\n            { code: 'lo', name: 'Lao' },\n            { code: 'uz', name: 'Uzbek' },\n            { code: 'fo', name: 'Faroese' },\n            { code: 'ht', name: 'Haitian creole' },\n            { code: 'ps', name: 'Pashto' },\n            { code: 'tk', name: 'Turkmen' },\n            { code: 'nn', name: 'Nynorsk' },\n            { code: 'mt', name: 'Maltese' },\n            { code: 'sa', name: 'Sanskrit' },\n            { code: 'lb', name: 'Luxembourgish' },\n            { code: 'my', name: 'Myanmar' },\n            { code: 'bo', name: 'Tibetan' },\n            { code: 'tl', name: 'Tagalog' },\n            { code: 'mg', name: 'Malagasy' },\n            { code: 'as', name: 'Assamese' },\n            { code: 'tt', name: 'Tatar' },\n            { code: 'haw', name: 'Hawaiian' },\n            { code: 'ln', name: 'Lingala' },\n            { code: 'ha', name: 'Hausa' },\n            { code: 'ba', name: 'Bashkir' },\n            { code: 'jw', name: 'Javanese' },\n            { code: 'su', name: 'Sundanese' }\n        ]\n    });\n});\n\n// \uBAA8\uB378 \uC815\uBCF4\napp.get('/models', (c) => {\n    return c.json({\n        available_models: [\n            {\n                id: '@cf/openai/whisper',\n                name: 'Whisper',\n                description: 'General-purpose speech recognition model',\n                languages: 'Multilingual',\n                max_duration: '30 minutes',\n                pricing: '$0.00045 per audio minute'\n            },\n            {\n                id: '@cf/openai/whisper-large-v3-turbo',\n                name: 'Whisper Large v3 Turbo',\n                description: 'Large model optimized for speed and accuracy',\n                languages: 'Multilingual',\n                max_duration: '30 minutes',\n                pricing: '$0.00045 per audio minute',\n                recommended: true\n            },\n            {\n                id: '@cf/openai/whisper-tiny-en',\n                name: 'Whisper Tiny (English)',\n                description: 'Small model for English-only transcription',\n                languages: 'English only',\n                max_duration: '30 minutes',\n                pricing: '$0.00045 per audio minute',\n                beta: true\n            }\n        ]\n    });\n});\n\nexport default app;", "import { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport type { AppBindings as Env } from '../index';\nimport { successResponse } from '../utils/response';\n\nconst app = new Hono();\n\n// CORS \uC124\uC815\napp.use('/*', cors());\n\n// \uD14D\uC2A4\uD2B8 \uC0DD\uC131 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/generate', async (c) => {\n  try {\n    const body = await c.req.json<{\n      prompt?: string;\n      messages?: Array<{ role: string; content: string }>;\n      model?: string;\n      temperature?: number;\n      max_tokens?: number;\n      stream?: boolean;\n      system?: string;\n    }>();\n\n    const model = body.model || '@cf/meta/llama-3.3-70b-instruct-fp8-fast';\n\n    // \uBA54\uC2DC\uC9C0 \uD615\uC2DD \uC900\uBE44\n    let messages;\n    if (body.messages) {\n      messages = body.messages;\n    } else if (body.prompt) {\n      messages = [\n        { role: 'system', content: body.system || 'You are a helpful assistant.' },\n        { role: 'user', content: body.prompt }\n      ];\n    } else {\n      return c.json({ error: 'Either prompt or messages required' }, 400);\n    }\n\n    // \uC2A4\uD2B8\uB9AC\uBC0D \uC751\uB2F5\n    const ai = (c as any).env.AI as any;\n\n    if (body.stream) {\n      const stream = await ai.run(model, {\n        messages,\n        stream: true,\n        temperature: body.temperature || 0.7,\n        max_tokens: body.max_tokens || 1000\n      });\n\n      return new Response(stream, {\n        headers: {\n          'Content-Type': 'text/event-stream',\n          'Cache-Control': 'no-cache',\n          'Connection': 'keep-alive'\n        }\n      });\n    }\n\n    // \uC77C\uBC18 \uC751\uB2F5\n    const response = await ai.run(model, {\n      messages,\n      temperature: body.temperature || 0.7,\n      max_tokens: body.max_tokens || 1000\n    });\n\n    return successResponse(c, {\n      response: response.response,\n      usage: response.usage,\n      model: model\n    });\n\n  } catch (error: any) {\n    console.error('LLM generation error:', error);\n    return c.json({ error: error.message || 'Text generation failed' }, 500);\n  }\n});\n\n// \uC601\uC5B4 \uB808\uBCA8 \uD3C9\uAC00 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/evaluate-english', async (c) => {\n  try {\n    const { text, context } = await c.req.json<{\n      text: string;\n      context?: string;\n    }>();\n\n    if (!text) {\n      return c.json({ error: 'Text is required' }, 400);\n    }\n\n    const prompt = `You are an expert English language assessor. Evaluate the following English text for language proficiency.\n\n${context ? `Context: ${context}\\n` : ''}\nText to evaluate: \"${text}\"\n\nProvide a detailed assessment with scores (0-100) for each of these 6 areas:\n1. Grammar accuracy\n2. Vocabulary range and appropriateness\n3. Fluency and coherence\n4. Pronunciation clarity (based on transcription quality if applicable)\n5. Task achievement / Content relevance\n6. Interaction skills / Communication effectiveness\n\nAlso determine the CEFR level (A1, A2, B1, B2, C1, or C2) based on the overall proficiency.\n\nResponse in JSON format with this structure:\n{\n  \"scores\": {\n    \"grammar\": <0-100>,\n    \"vocabulary\": <0-100>,\n    \"fluency\": <0-100>,\n    \"pronunciation\": <0-100>,\n    \"taskAchievement\": <0-100>,\n    \"interaction\": <0-100>\n  },\n  \"averageScore\": <0-100>,\n  \"cefrLevel\": \"<A1-C2>\",\n  \"feedback\": {\n    \"strengths\": [\"point 1\", \"point 2\"],\n    \"improvements\": [\"point 1\", \"point 2\"],\n    \"suggestions\": [\"suggestion 1\", \"suggestion 2\"]\n  },\n  \"detailedAnalysis\": {\n    \"grammar\": \"Detailed grammar analysis...\",\n    \"vocabulary\": \"Detailed vocabulary analysis...\",\n    \"fluency\": \"Detailed fluency analysis...\",\n    \"pronunciation\": \"Detailed pronunciation analysis...\",\n    \"taskAchievement\": \"Detailed task achievement analysis...\",\n    \"interaction\": \"Detailed interaction analysis...\"\n  }\n}`;\n\n    const ai = (c as any).env.AI as any;\n    const response = await ai.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n      messages: [\n        {\n          role: 'system',\n          content: 'You are a professional English language assessment expert. Always respond with valid JSON.'\n        },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.3,\n      max_tokens: 2000\n    });\n\n    try {\n      const evaluation = JSON.parse(response.response);\n      return successResponse(c, {\n        evaluation,\n        evaluatedText: text\n      });\n    } catch (parseError) {\n      // JSON \uD30C\uC2F1 \uC2E4\uD328 \uC2DC \uD14D\uC2A4\uD2B8 \uC751\uB2F5 \uBC18\uD658\n      return successResponse(c, {\n        evaluation: {\n          textResponse: response.response,\n          scores: {\n            grammar: 70,\n            vocabulary: 70,\n            fluency: 70,\n            pronunciation: 70,\n            taskAchievement: 70,\n            interaction: 70\n          },\n          averageScore: 70,\n          cefrLevel: 'B1'\n        },\n        evaluatedText: text\n      });\n    }\n\n  } catch (error: any) {\n    console.error('English evaluation error:', error);\n    return c.json({ error: error.message || 'Evaluation failed' }, 500);\n  }\n});\n\n// \uBB38\uBC95 \uCCB4\uD06C \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/check-grammar', async (c) => {\n  try {\n    const { text } = await c.req.json<{ text: string }>();\n\n    if (!text) {\n      return c.json({ error: 'Text is required' }, 400);\n    }\n\n    const prompt = `Check the grammar of the following text and provide corrections:\n\nText: \"${text}\"\n\nProvide a response in JSON format:\n{\n  \"hasErrors\": boolean,\n  \"correctedText\": \"the corrected version of the text\",\n  \"errors\": [\n    {\n      \"type\": \"grammar/spelling/punctuation\",\n      \"original\": \"original text\",\n      \"correction\": \"corrected text\",\n      \"explanation\": \"why this is wrong and how to fix it\"\n    }\n  ],\n  \"suggestions\": [\"general writing improvement suggestions\"]\n}`;\n\n    const ai = (c as any).env.AI as any;\n    const response = await ai.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n      messages: [\n        {\n          role: 'system',\n          content: 'You are a grammar expert. Always respond with valid JSON.'\n        },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.2,\n      max_tokens: 1500\n    });\n\n    try {\n      const result = JSON.parse(response.response);\n      return successResponse(c, result);\n    } catch (parseError) {\n      return c.json({\n        error: 'Failed to parse grammar check response',\n        rawResponse: response.response\n      }, 400);\n    }\n\n  } catch (error: any) {\n    console.error('Grammar check error:', error);\n    return c.json({ error: error.message || 'Grammar check failed' }, 500);\n  }\n});\n\n// \uB300\uD654 \uC5F0\uC2B5 \uD53C\uB4DC\uBC31 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/conversation-feedback', async (c) => {\n  try {\n    const { conversation, topic, level } = await c.req.json<{\n      conversation: Array<{ speaker: string; text: string }>;\n      topic?: string;\n      level?: string;\n    }>();\n\n    if (!conversation || conversation.length === 0) {\n      return c.json({ error: 'Conversation is required' }, 400);\n    }\n\n    const conversationText = conversation\n      .map(turn => `${turn.speaker}: ${turn.text}`)\n      .join('\\n');\n\n    const prompt = `Analyze this English conversation and provide detailed feedback:\n\n${topic ? `Topic: ${topic}` : ''}\n${level ? `Expected Level: ${level}` : ''}\n\nConversation:\n${conversationText}\n\nProvide comprehensive feedback in JSON format:\n{\n  \"overallAssessment\": \"general assessment of the conversation\",\n  \"participantFeedback\": {\n    \"<speaker_name>\": {\n      \"strengths\": [\"strength 1\", \"strength 2\"],\n      \"weaknesses\": [\"weakness 1\", \"weakness 2\"],\n      \"languageUse\": \"assessment of grammar, vocabulary, fluency\",\n      \"communicationSkills\": \"assessment of interaction, turn-taking, etc.\"\n    }\n  },\n  \"suggestions\": {\n    \"vocabulary\": [\"useful words/phrases for this topic\"],\n    \"expressions\": [\"natural expressions to use\"],\n    \"grammar\": [\"grammar points to focus on\"]\n  },\n  \"nextSteps\": [\"recommendation 1\", \"recommendation 2\"]\n}`;\n\n    const ai = (c as any).env.AI as any;\n    const response = await ai.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n      messages: [\n        {\n          role: 'system',\n          content: 'You are an experienced English conversation coach. Always respond with valid JSON.'\n        },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.4,\n      max_tokens: 2000\n    });\n\n    try {\n      const feedback = JSON.parse(response.response);\n      return successResponse(c, {\n        feedback,\n        conversationLength: conversation.length,\n        topic,\n        level\n      });\n    } catch (parseError) {\n      return successResponse(c, {\n        feedback: {\n          textResponse: response.response\n        },\n        conversationLength: conversation.length,\n        topic,\n        level\n      });\n    }\n\n  } catch (error: any) {\n    console.error('Conversation feedback error:', error);\n    return c.json({ error: error.message || 'Feedback generation failed' }, 500);\n  }\n});\n\n// \uC0AC\uC6A9 \uAC00\uB2A5\uD55C \uBAA8\uB378 \uBAA9\uB85D\napp.get('/models', (c) => {\n  return successResponse(c, {\n    available_models: [\n      {\n        id: '@cf/meta/llama-3.3-70b-instruct-fp8-fast',\n        name: 'Llama 3.3 70B Instruct',\n        description: 'Fast 70B parameter model optimized for instruction following',\n        context_window: 24000,\n        recommended: true\n      },\n      {\n        id: '@cf/meta/llama-3-8b-instruct',\n        name: 'Llama 3 8B Instruct',\n        description: 'Smaller, faster model for general tasks',\n        context_window: 8192\n      },\n      {\n        id: '@cf/microsoft/phi-2',\n        name: 'Phi-2',\n        description: 'Small but capable model from Microsoft',\n        context_window: 2048\n      },\n      {\n        id: '@cf/qwen/qwen1.5-14b-chat-awq',\n        name: 'Qwen 1.5 14B',\n        description: 'Multilingual model with strong performance',\n        context_window: 32768\n      }\n    ],\n    features: [\n      'Text generation',\n      'English evaluation',\n      'Grammar checking',\n      'Conversation feedback',\n      'Streaming support'\n    ]\n  });\n});\n\nexport default app;", "import { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport type { AppBindings as Env } from '../index';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// CORS \uC124\uC815\napp.use('/*', cors());\n\n// \uC774\uBBF8\uC9C0 \uC5C5\uB85C\uB4DC \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/upload', async (c) => {\n  try {\n    const formData = await c.req.formData();\n    const file = formData.get('image') as File | null;\n    if (!file) {\n        return c.json({ error: 'No image file provided' }, 400);\n    }\n    const userId = formData.get('userId') as string;\n    const type = formData.get('type') as string || 'profile'; // profile, chat, etc.\n\n    if (!file || !userId) {\n      return c.json({ error: 'Image file and userId are required' }, 400);\n    }\n\n    // \uD30C\uC77C \uD0C0\uC785 \uAC80\uC99D\n    const allowedTypes = ['image/jpeg', 'image/png', 'image/webp', 'image/gif'];\n    if (!allowedTypes.includes(file.type)) {\n      return c.json({ error: 'Invalid file type. Only JPEG, PNG, WebP, and GIF are allowed' }, 400);\n    }\n\n    // \uD30C\uC77C \uD06C\uAE30 \uAC80\uC99D (\uCD5C\uB300 10MB)\n    const maxSize = 10 * 1024 * 1024; // 10MB\n    if (file.size > maxSize) {\n      return c.json({ error: 'File size exceeds 10MB limit' }, 400);\n    }\n\n    // \uACE0\uC720 \uD30C\uC77C\uBA85 \uC0DD\uC131\n    const timestamp = Date.now();\n    const fileExt = file.name.split('.').pop();\n    const fileName = `${type}/${userId}/${timestamp}.${fileExt}`;\n\n    // R2\uC5D0 \uC6D0\uBCF8 \uC774\uBBF8\uC9C0 \uC800\uC7A5\n    const arrayBuffer = await file.arrayBuffer();\n    await c.env.STORAGE.put(fileName, arrayBuffer, {\n      httpMetadata: {\n        contentType: file.type,\n      },\n      customMetadata: {\n        userId,\n        type,\n        originalName: file.name,\n        uploadedAt: new Date().toISOString()\n      }\n    });\n\n    // \uC774\uBBF8\uC9C0 \uBCC0\uD615 URL \uC0DD\uC131\n    const baseUrl = `https://${c.req.header('host')}`;\n    const variants = {\n      original: `${baseUrl}/api/v1/images/serve/${fileName}`,\n      thumbnail: `${baseUrl}/api/v1/images/transform/${fileName}?width=150&height=150&fit=cover`,\n      medium: `${baseUrl}/api/v1/images/transform/${fileName}?width=400&height=400&fit=contain`,\n      large: `${baseUrl}/api/v1/images/transform/${fileName}?width=800&height=800&fit=contain`\n    };\n\n    // \uBA54\uD0C0\uB370\uC774\uD130 \uCE90\uC2F1\n    await c.env.CACHE.put(\n      `image:${fileName}`,\n      JSON.stringify({\n        fileName,\n        userId,\n        type,\n        originalName: file.name,\n        size: file.size,\n        contentType: file.type,\n        uploadedAt: new Date().toISOString(),\n        variants\n      }),\n      { expirationTtl: 86400 * 30 } // 30\uC77C \uCE90\uC2DC\n    );\n\n    return c.json({\n      success: true,\n      fileName,\n      variants,\n      size: file.size,\n      type: file.type\n    });\n\n  } catch (error: any) {\n    console.error('Image upload error:', error);\n    return c.json({ error: error.message || 'Failed to upload image' }, 500);\n  }\n});\n\n// \uC774\uBBF8\uC9C0 \uBCC0\uD658 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.get('/transform/*', async (c) => {\n  try {\n    const path = c.req.param('*');\n    if (!path) {\n      return c.json({ error: 'Image path is required' }, 400);\n    }\n\n    // \uCFFC\uB9AC \uD30C\uB77C\uBBF8\uD130 \uD30C\uC2F1\n    const { searchParams } = new URL(c.req.url);\n    const width = parseInt(searchParams.get('width') || '0');\n    const height = parseInt(searchParams.get('height') || '0');\n    const quality = parseInt(searchParams.get('quality') || '85');\n    const fit = searchParams.get('fit') || 'contain'; // contain, cover, fill, inside, outside\n    const format = searchParams.get('format') || 'auto'; // auto, webp, avif, jpeg, png\n\n    // R2\uC5D0\uC11C \uC6D0\uBCF8 \uC774\uBBF8\uC9C0 \uAC00\uC838\uC624\uAE30\n    const object = await c.env.STORAGE.get(path);\n    if (!object) {\n      return c.json({ error: 'Image not found' }, 404);\n    }\n\n    // \uCE90\uC2DC \uD0A4 \uC0DD\uC131\n    const cacheKey = `transformed:${path}:w${width}:h${height}:q${quality}:${fit}:${format}`;\n    \n    // \uCE90\uC2DC \uD655\uC778\n    const cached = await c.env.CACHE.get(cacheKey, { type: 'arrayBuffer' });\n    if (cached) {\n      return new Response(cached, {\n        headers: {\n          'Content-Type': format === 'auto' ? 'image/webp' : `image/${format}`,\n          'Cache-Control': 'public, max-age=31536000',\n          'X-Cache': 'HIT'\n        }\n      });\n    }\n\n    // \uC774\uBBF8\uC9C0 \uBCC0\uD658 \uCC98\uB9AC\n    const imageBuffer = await object.arrayBuffer();\n\n    // \uC774\uBBF8\uC9C0 \uBCC0\uD658 \uC635\uC158 \uC801\uC6A9\n    let transformedBuffer = imageBuffer;\n    let contentType = object.httpMetadata?.contentType || 'image/jpeg';\n\n    // \uAC04\uB2E8\uD55C \uBCC0\uD658 \uB85C\uC9C1 (\uC2E4\uC81C\uB85C\uB294 Cloudflare Images API \uB610\uB294 \uC804\uC6A9 \uBCC0\uD658 \uC11C\uBE44\uC2A4 \uC0AC\uC6A9)\n    if (format !== 'auto' && format !== object.httpMetadata?.contentType?.split('/')[1]) {\n      // \uBCC0\uD658 \uC694\uCCAD \uC2DC \uC6D0\uBCF8 \uC774\uBBF8\uC9C0 \uBC18\uD658 (\uC2E4\uC81C \uBCC0\uD658\uC740 CDN\uC5D0\uC11C \uCC98\uB9AC)\n      // \uC2E4\uC81C \uD504\uB85C\uB355\uC158\uC5D0\uC11C\uB294 Cloudflare Images \uB610\uB294 \uC678\uBD80 \uBCC0\uD658 \uC11C\uBE44\uC2A4 \uC5F0\uB3D9 \uD544\uC694\n      contentType = `image/${format}`; // \uCD5C\uC801\uD654\uB41C \uD3EC\uB9F7\uC73C\uB85C \uBC18\uD658\n    } else if (format === 'auto') {\n      contentType = 'image/webp'; // auto\uBA74 webp\uB85C \uBCC0\uD658\n    }\n\n    return new Response(transformedBuffer, {\n      headers: {\n        'Content-Type': contentType,\n        'Cache-Control': 'public, max-age=31536000',\n        'X-Cache': 'HIT',\n        'X-Image-Format': format || 'original'\n      }\n    });\n\n  } catch (error: any) {\n    console.error('Image transform error:', error);\n    return c.json({ error: error.message || 'Failed to transform image' }, 500);\n  }\n});\n\n// \uC6D0\uBCF8 \uC774\uBBF8\uC9C0 \uC81C\uACF5 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.get('/serve/*', async (c) => {\n  try {\n    const path = c.req.param('*');\n    if (!path) {\n      return c.json({ error: 'Image path is required' }, 400);\n    }\n\n    // R2\uC5D0\uC11C \uC774\uBBF8\uC9C0 \uAC00\uC838\uC624\uAE30\n    const object = await c.env.STORAGE.get(path);\n    if (!object) {\n      return c.json({ error: 'Image not found' }, 404);\n    }\n\n    const headers = new Headers();\n    object.writeHttpMetadata(headers);\n    headers.set('Cache-Control', 'public, max-age=31536000');\n    \n    // \uBCF4\uC548\uC744 \uC704\uD55C Content-Security-Policy \uCD94\uAC00\n    headers.set('Content-Security-Policy', \"default-src 'none'; img-src 'self';\");\n    headers.set('X-Content-Type-Options', 'nosniff');\n\n    return new Response(object.body, { headers });\n\n  } catch (error: any) {\n    console.error('Image serve error:', error);\n    return c.json({ error: error.message || 'Failed to serve image' }, 500);\n  }\n});\n\n// \uC774\uBBF8\uC9C0 \uC0AD\uC81C \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.delete('/:fileName', async (c) => {\n  try {\n    const fileName = c.req.param('fileName');\n    const userId = c.req.header('x-user-id');\n\n    if (!fileName || !userId) {\n      return c.json({ error: 'fileName and userId are required' }, 400);\n    }\n\n    // \uBA54\uD0C0\uB370\uC774\uD130 \uD655\uC778\uC73C\uB85C \uC18C\uC720\uAD8C \uAC80\uC99D\n    const metadata = await c.env.CACHE.get(`image:${fileName}`, { type: 'json' });\n    if (!metadata || (metadata as any).userId !== userId) {\n      return c.json({ error: 'Unauthorized' }, 403);\n    }\n\n    // R2\uC5D0\uC11C \uC0AD\uC81C\n    await c.env.STORAGE.delete(fileName);\n\n    // \uCE90\uC2DC\uC5D0\uC11C \uBA54\uD0C0\uB370\uC774\uD130 \uC0AD\uC81C\n    await c.env.CACHE.delete(`image:${fileName}`);\n\n    return c.json({\n      success: true,\n      message: 'Image deleted successfully'\n    });\n\n  } catch (error: any) {\n    console.error('Image delete error:', error);\n    return c.json({ error: error.message || 'Failed to delete image' }, 500);\n  }\n});\n\n// \uC0AC\uC6A9\uC790 \uC774\uBBF8\uC9C0 \uBAA9\uB85D \uC870\uD68C\napp.get('/list/:userId', async (c) => {\n  try {\n    const userId = c.req.param('userId');\n    const type = c.req.query('type'); // optional filter by type\n\n    if (!userId) {\n      return c.json({ error: 'userId is required' }, 400);\n    }\n\n    // R2\uC5D0\uC11C \uC0AC\uC6A9\uC790 \uC774\uBBF8\uC9C0 \uBAA9\uB85D \uC870\uD68C\n    const prefix = type ? `${type}/${userId}/` : userId;\n    const list = await c.env.STORAGE.list({ prefix, limit: 1000 });\n\n    const images = await Promise.all(\n      list.objects.map(async (obj: any) => {\n        // \uCE90\uC2DC\uC5D0\uC11C \uBA54\uD0C0\uB370\uC774\uD130 \uC870\uD68C\n        const metadata = await c.env.CACHE.get(`image:${obj.key}`, { type: 'json' });\n        \n        return {\n          key: obj.key,\n          size: obj.size,\n          uploadedAt: obj.uploaded.toISOString(),\n          metadata: metadata || {\n            fileName: obj.key,\n            contentType: obj.httpMetadata?.contentType\n          }\n        };\n      })\n    );\n\n    return c.json({\n      success: true,\n      images,\n      count: images.length\n    });\n\n  } catch (error: any) {\n    console.error('Image list error:', error);\n    return c.json({ error: error.message || 'Failed to list images' }, 500);\n  }\n});\n\n// \uC774\uBBF8\uC9C0 \uBA54\uD0C0\uB370\uC774\uD130 \uC870\uD68C\napp.get('/info/:fileName', async (c) => {\n  try {\n    const fileName = c.req.param('fileName');\n\n    if (!fileName) {\n      return c.json({ error: 'fileName is required' }, 400);\n    }\n\n    // \uCE90\uC2DC\uC5D0\uC11C \uBA54\uD0C0\uB370\uC774\uD130 \uC870\uD68C\n    const metadata = await c.env.CACHE.get(`image:${fileName}`, { type: 'json' });\n    if (!metadata) {\n      // R2\uC5D0\uC11C \uC9C1\uC811 \uC870\uD68C\n      const object = await c.env.STORAGE.head(fileName);\n      if (!object) {\n        return c.json({ error: 'Image not found' }, 404);\n      }\n\n      return c.json({\n        fileName,\n        size: object.size,\n        uploadedAt: object.uploaded.toISOString(),\n        contentType: object.httpMetadata?.contentType,\n        customMetadata: object.customMetadata\n      });\n    }\n\n    return c.json(metadata);\n\n  } catch (error: any) {\n    console.error('Image info error:', error);\n    return c.json({ error: error.message || 'Failed to get image info' }, 500);\n  }\n});\n\nexport default app;\n", "import { Hono } from 'hono';\nimport { z } from 'zod';\nimport { Env } from '../index';\nimport { processAudio, translateToMultipleLanguages } from '../services/ai';\nimport { validateAuth } from '../utils/auth';\nimport { log } from '../utils/logger';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// WebSocket \uC2A4\uD2B8\uB9AC\uBC0D \uC804\uC0AC\napp.get('/stream', async (c) => {\n    // WebSocket \uC5C5\uADF8\uB808\uC774\uB4DC \uD655\uC778\n    const upgradeHeader = c.req.header('upgrade');\n    if (!upgradeHeader || upgradeHeader !== 'websocket') {\n        return c.json({ error: 'Expected WebSocket' }, 426);\n    }\n\n    const webSocketPair = new WebSocketPair();\n    const [client, server] = Object.values(webSocketPair);\n\n    // WebSocket \uD578\uB4E4\uB7EC\n    server.accept();\n    handleWebSocket(server, c.env);\n\n    return new Response(null, {\n        status: 101,\n        webSocket: client,\n    });\n});\n\n// WebSocket \uBA54\uC2DC\uC9C0 \uD578\uB4E4\uB7EC\nasync function handleWebSocket(ws: WebSocket, env: Env) {\n    let config = {\n        language: 'en',\n        model: 'whisper-large-v3-turbo',\n        task: 'transcribe' as 'transcribe' | 'translate',\n        enableTranslation: false,\n        targetLanguages: [] as string[]\n    };\n\n    // \uC624\uB514\uC624 \uBC84\uD37C\n    const audioBuffer: ArrayBuffer[] = [];\n    let isProcessing = false;\n    let sessionActive = true;\n\n    ws.addEventListener('message', async (event) => {\n        try {\n            // \uC124\uC815 \uBA54\uC2DC\uC9C0 \uCC98\uB9AC\n            if (typeof event.data === 'string') {\n                const message = JSON.parse(event.data);\n\n                if (message.type === 'config') {\n                    config = { ...config, ...message };\n                    ws.send(JSON.stringify({\n                        type: 'config_updated',\n                        config\n                    }));\n                } else if (message.type === 'end_session') {\n                    sessionActive = false;\n                    ws.close();\n                }\n            }\n            // \uC624\uB514\uC624 \uB370\uC774\uD130 \uCC98\uB9AC\n            else if (event.data instanceof ArrayBuffer) {\n                audioBuffer.push(event.data);\n\n                // \uBC84\uD37C\uAC00 \uCDA9\uBD84\uD788 \uC313\uC774\uBA74 \uCC98\uB9AC (\uC57D 1\uCD08 \uBD84\uB7C9)\n                const totalSize = audioBuffer.reduce((sum, buf) => sum + buf.byteLength, 0);\n                const targetSize = 16000 * 2; // 16kHz * 2 bytes per sample * 1 second\n\n                if (totalSize >= targetSize && !isProcessing) {\n                    isProcessing = true;\n\n                    // \uBC84\uD37C \uD569\uCE58\uAE30\n                    const combinedBuffer = new ArrayBuffer(totalSize);\n                    const view = new Uint8Array(combinedBuffer);\n                    let offset = 0;\n\n                    for (const buffer of audioBuffer) {\n                        view.set(new Uint8Array(buffer), offset);\n                        offset += buffer.byteLength;\n                    }\n\n                    // \uBC84\uD37C \uBE44\uC6B0\uAE30\n                    audioBuffer.length = 0;\n\n                    // Whisper\uB85C \uC804\uC0AC\n                    try {\n                        const transcription = await processAudio(env.AI, combinedBuffer, {\n                            task: config.task,\n                            language: config.language,\n                            vad_filter: true\n                        } as any);\n\n                        // \uACB0\uACFC \uC804\uC1A1\n                        if (transcription.text && transcription.text.trim()) {\n                            const transcribedText = transcription.text.trim();\n\n                            // \uBC88\uC5ED\uC774 \uD65C\uC131\uD654\uB418\uC5B4 \uC788\uACE0 \uB300\uC0C1 \uC5B8\uC5B4\uAC00 \uC788\uB294 \uACBD\uC6B0\n                            let translations: Record<string, string> = {};\n                            if (config.enableTranslation && config.targetLanguages.length > 0) {\n                                try {\n                                    translations = await translateToMultipleLanguages(\n                                        env.AI,\n                                        transcribedText,\n                                        config.targetLanguages,\n                                        (transcription as any).language || 'auto'\n                                    );\n                                } catch (error) {\n                                    log.error('Translation error', error as Error, { component: 'TRANSCRIBE_SERVICE' });\n                                }\n                            }\n\n                            ws.send(JSON.stringify({\n                                type: 'transcription',\n                                text: transcribedText,\n                                language: (transcription as any).language,\n                                words: (transcription as any).words,\n                                translations,\n                                is_final: true,\n                                timestamp: Date.now(),\n                                confidence: (transcription as any).confidence || 0.95\n                            }));\n                        }\n                    } catch (error) {\n                        log.error('Transcription error', error as Error, { component: 'TRANSCRIBE_SERVICE' });\n                        ws.send(JSON.stringify({\n                            type: 'error',\n                            message: 'Transcription failed'\n                        }));\n                    }\n\n                    isProcessing = false;\n                }\n            }\n        } catch (error) {\n            log.error('WebSocket error', error as Error, { component: 'TRANSCRIBE_SERVICE' });\n            ws.send(JSON.stringify({\n                type: 'error',\n                message: 'Processing error'\n            }));\n        }\n    });\n\n    ws.addEventListener('close', () => {\n        sessionActive = false;\n        audioBuffer.length = 0;\n    });\n\n    // \uD551/\uD401 \uC720\uC9C0\n    const pingInterval = setInterval(() => {\n        if (sessionActive && ws.readyState === WebSocket.OPEN) {\n            ws.send(JSON.stringify({ type: 'ping' }));\n        } else {\n            clearInterval(pingInterval);\n        }\n    }, 30000);\n}\n\n// \uC77C\uBC18 \uD30C\uC77C \uC804\uC0AC (\uAE30\uC874 \uC5D4\uB4DC\uD3EC\uC778\uD2B8)\nconst transcribeSchema = z.object({\n    audio_url: z.string().url().optional(),\n    audio_base64: z.string().optional(),\n    language: z.string().optional(),\n    task: z.enum(['transcribe', 'translate']).optional(),\n    word_timestamps: z.boolean().optional()\n});\n\napp.post('/', validateAuth, async (c) => {\n    try {\n        const body = await c.req.json();\n        const { audio_url, audio_base64, language, task, word_timestamps } = transcribeSchema.parse(body);\n\n        let audioBuffer: ArrayBuffer;\n\n        if (audio_url) {\n            // URL\uC5D0\uC11C \uC624\uB514\uC624 \uB2E4\uC6B4\uB85C\uB4DC\n            const response = await fetch(audio_url);\n            if (!response.ok) {\n                return c.json({ error: 'Failed to fetch audio' }, 400);\n            }\n            audioBuffer = await response.arrayBuffer();\n        } else if (audio_base64) {\n            // Base64 \uB514\uCF54\uB529\n            const binaryString = atob(audio_base64);\n            const bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n                bytes[i] = binaryString.charCodeAt(i);\n            }\n            audioBuffer = bytes.buffer;\n        } else {\n            return c.json({ error: 'No audio provided' }, 400);\n        }\n\n        // Whisper\uB85C \uC804\uC0AC\n        const result = await processAudio(c.env.AI, audioBuffer, {\n            task: task || 'transcribe',\n            language: language || 'auto',\n            vad_filter: true\n        } as any);\n\n        return c.json({\n            success: true,\n            transcription: result\n        });\n    } catch (error) {\n        log.error('Transcription error', error as Error, { component: 'TRANSCRIBE_SERVICE' });\n        return c.json({\n            error: 'Transcription failed',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        }, 500);\n    }\n});\n\nexport { app as transcribeRoutes };\nexport default app;", "import * as z from \"./v4/classic/external.js\";\nexport * from \"./v4/classic/external.js\";\nexport { z };\nexport default z;\n", "export * as core from \"../core/index.js\";\nexport * from \"./schemas.js\";\nexport * from \"./checks.js\";\nexport * from \"./errors.js\";\nexport * from \"./parse.js\";\nexport * from \"./compat.js\";\n// zod-specified\nimport { config } from \"../core/index.js\";\nimport en from \"../locales/en.js\";\nconfig(en());\nexport { globalRegistry, registry, config, $output, $input, $brand, clone, regexes, treeifyError, prettifyError, formatError, flattenError, toJSONSchema, TimePrecision, util, NEVER, } from \"../core/index.js\";\nexport * as locales from \"../locales/index.js\";\n// iso\n// must be exported from top-level\n// https://github.com/colinhacks/zod/issues/4491\nexport { ZodISODateTime, ZodISODate, ZodISOTime, ZodISODuration } from \"./iso.js\";\nexport * as iso from \"./iso.js\";\nexport * as coerce from \"./coerce.js\";\n", "export * from \"./core.js\";\nexport * from \"./parse.js\";\nexport * from \"./errors.js\";\nexport * from \"./schemas.js\";\nexport * from \"./checks.js\";\nexport * from \"./versions.js\";\nexport * as util from \"./util.js\";\nexport * as regexes from \"./regexes.js\";\nexport * as locales from \"../locales/index.js\";\nexport * from \"./registries.js\";\nexport * from \"./doc.js\";\nexport * from \"./api.js\";\nexport * from \"./to-json-schema.js\";\nexport * as JSONSchema from \"./json-schema.js\";\n", "/** A special constant with type `never` */\nexport const NEVER = Object.freeze({\n    status: \"aborted\",\n});\nexport /*@__NO_SIDE_EFFECTS__*/ function $constructor(name, initializer, params) {\n    function init(inst, def) {\n        var _a;\n        Object.defineProperty(inst, \"_zod\", {\n            value: inst._zod ?? {},\n            enumerable: false,\n        });\n        (_a = inst._zod).traits ?? (_a.traits = new Set());\n        inst._zod.traits.add(name);\n        initializer(inst, def);\n        // support prototype modifications\n        for (const k in _.prototype) {\n            if (!(k in inst))\n                Object.defineProperty(inst, k, { value: _.prototype[k].bind(inst) });\n        }\n        inst._zod.constr = _;\n        inst._zod.def = def;\n    }\n    // doesn't work if Parent has a constructor with arguments\n    const Parent = params?.Parent ?? Object;\n    class Definition extends Parent {\n    }\n    Object.defineProperty(Definition, \"name\", { value: name });\n    function _(def) {\n        var _a;\n        const inst = params?.Parent ? new Definition() : this;\n        init(inst, def);\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\n        for (const fn of inst._zod.deferred) {\n            fn();\n        }\n        return inst;\n    }\n    Object.defineProperty(_, \"init\", { value: init });\n    Object.defineProperty(_, Symbol.hasInstance, {\n        value: (inst) => {\n            if (params?.Parent && inst instanceof params.Parent)\n                return true;\n            return inst?._zod?.traits?.has(name);\n        },\n    });\n    Object.defineProperty(_, \"name\", { value: name });\n    return _;\n}\n//////////////////////////////   UTILITIES   ///////////////////////////////////////\nexport const $brand = Symbol(\"zod_brand\");\nexport class $ZodAsyncError extends Error {\n    constructor() {\n        super(`Encountered Promise during synchronous parse. Use .parseAsync() instead.`);\n    }\n}\nexport class $ZodEncodeError extends Error {\n    constructor(name) {\n        super(`Encountered unidirectional transform during encode: ${name}`);\n        this.name = \"ZodEncodeError\";\n    }\n}\nexport const globalConfig = {};\nexport function config(newConfig) {\n    if (newConfig)\n        Object.assign(globalConfig, newConfig);\n    return globalConfig;\n}\n", "import * as core from \"./core.js\";\nimport * as errors from \"./errors.js\";\nimport * as util from \"./util.js\";\nexport const _parse = (_Err) => (schema, value, _ctx, _params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: false }) : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    if (result.issues.length) {\n        const e = new (_params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        util.captureStackTrace(e, _params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parse = /* @__PURE__*/ _parse(errors.$ZodRealError);\nexport const _parseAsync = (_Err) => async (schema, value, _ctx, params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    if (result.issues.length) {\n        const e = new (params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        util.captureStackTrace(e, params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parseAsync = /* @__PURE__*/ _parseAsync(errors.$ZodRealError);\nexport const _safeParse = (_Err) => (schema, value, _ctx) => {\n    const ctx = _ctx ? { ..._ctx, async: false } : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    return result.issues.length\n        ? {\n            success: false,\n            error: new (_Err ?? errors.$ZodError)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParse = /* @__PURE__*/ _safeParse(errors.$ZodRealError);\nexport const _safeParseAsync = (_Err) => async (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    return result.issues.length\n        ? {\n            success: false,\n            error: new _Err(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParseAsync = /* @__PURE__*/ _safeParseAsync(errors.$ZodRealError);\nexport const _encode = (_Err) => (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { direction: \"backward\" }) : { direction: \"backward\" };\n    return _parse(_Err)(schema, value, ctx);\n};\nexport const encode = /* @__PURE__*/ _encode(errors.$ZodRealError);\nexport const _decode = (_Err) => (schema, value, _ctx) => {\n    return _parse(_Err)(schema, value, _ctx);\n};\nexport const decode = /* @__PURE__*/ _decode(errors.$ZodRealError);\nexport const _encodeAsync = (_Err) => async (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { direction: \"backward\" }) : { direction: \"backward\" };\n    return _parseAsync(_Err)(schema, value, ctx);\n};\nexport const encodeAsync = /* @__PURE__*/ _encodeAsync(errors.$ZodRealError);\nexport const _decodeAsync = (_Err) => async (schema, value, _ctx) => {\n    return _parseAsync(_Err)(schema, value, _ctx);\n};\nexport const decodeAsync = /* @__PURE__*/ _decodeAsync(errors.$ZodRealError);\nexport const _safeEncode = (_Err) => (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { direction: \"backward\" }) : { direction: \"backward\" };\n    return _safeParse(_Err)(schema, value, ctx);\n};\nexport const safeEncode = /* @__PURE__*/ _safeEncode(errors.$ZodRealError);\nexport const _safeDecode = (_Err) => (schema, value, _ctx) => {\n    return _safeParse(_Err)(schema, value, _ctx);\n};\nexport const safeDecode = /* @__PURE__*/ _safeDecode(errors.$ZodRealError);\nexport const _safeEncodeAsync = (_Err) => async (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { direction: \"backward\" }) : { direction: \"backward\" };\n    return _safeParseAsync(_Err)(schema, value, ctx);\n};\nexport const safeEncodeAsync = /* @__PURE__*/ _safeEncodeAsync(errors.$ZodRealError);\nexport const _safeDecodeAsync = (_Err) => async (schema, value, _ctx) => {\n    return _safeParseAsync(_Err)(schema, value, _ctx);\n};\nexport const safeDecodeAsync = /* @__PURE__*/ _safeDecodeAsync(errors.$ZodRealError);\n", "import { $constructor } from \"./core.js\";\nimport * as util from \"./util.js\";\nconst initializer = (inst, def) => {\n    inst.name = \"$ZodError\";\n    Object.defineProperty(inst, \"_zod\", {\n        value: inst._zod,\n        enumerable: false,\n    });\n    Object.defineProperty(inst, \"issues\", {\n        value: def,\n        enumerable: false,\n    });\n    inst.message = JSON.stringify(def, util.jsonStringifyReplacer, 2);\n    Object.defineProperty(inst, \"toString\", {\n        value: () => inst.message,\n        enumerable: false,\n    });\n};\nexport const $ZodError = $constructor(\"$ZodError\", initializer);\nexport const $ZodRealError = $constructor(\"$ZodError\", initializer, { Parent: Error });\nexport function flattenError(error, mapper = (issue) => issue.message) {\n    const fieldErrors = {};\n    const formErrors = [];\n    for (const sub of error.issues) {\n        if (sub.path.length > 0) {\n            fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n            fieldErrors[sub.path[0]].push(mapper(sub));\n        }\n        else {\n            formErrors.push(mapper(sub));\n        }\n    }\n    return { formErrors, fieldErrors };\n}\nexport function formatError(error, mapper = (issue) => issue.message) {\n    const fieldErrors = { _errors: [] };\n    const processError = (error) => {\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                issue.errors.map((issues) => processError({ issues }));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.path.length === 0) {\n                fieldErrors._errors.push(mapper(issue));\n            }\n            else {\n                let curr = fieldErrors;\n                let i = 0;\n                while (i < issue.path.length) {\n                    const el = issue.path[i];\n                    const terminal = i === issue.path.length - 1;\n                    if (!terminal) {\n                        curr[el] = curr[el] || { _errors: [] };\n                    }\n                    else {\n                        curr[el] = curr[el] || { _errors: [] };\n                        curr[el]._errors.push(mapper(issue));\n                    }\n                    curr = curr[el];\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return fieldErrors;\n}\nexport function treeifyError(error, mapper = (issue) => issue.message) {\n    const result = { errors: [] };\n    const processError = (error, path = []) => {\n        var _a, _b;\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                // regular union error\n                issue.errors.map((issues) => processError({ issues }, issue.path));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else {\n                const fullpath = [...path, ...issue.path];\n                if (fullpath.length === 0) {\n                    result.errors.push(mapper(issue));\n                    continue;\n                }\n                let curr = result;\n                let i = 0;\n                while (i < fullpath.length) {\n                    const el = fullpath[i];\n                    const terminal = i === fullpath.length - 1;\n                    if (typeof el === \"string\") {\n                        curr.properties ?? (curr.properties = {});\n                        (_a = curr.properties)[el] ?? (_a[el] = { errors: [] });\n                        curr = curr.properties[el];\n                    }\n                    else {\n                        curr.items ?? (curr.items = []);\n                        (_b = curr.items)[el] ?? (_b[el] = { errors: [] });\n                        curr = curr.items[el];\n                    }\n                    if (terminal) {\n                        curr.errors.push(mapper(issue));\n                    }\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return result;\n}\n/** Format a ZodError as a human-readable string in the following form.\n *\n * From\n *\n * ```ts\n * ZodError {\n *   issues: [\n *     {\n *       expected: 'string',\n *       code: 'invalid_type',\n *       path: [ 'username' ],\n *       message: 'Invalid input: expected string'\n *     },\n *     {\n *       expected: 'number',\n *       code: 'invalid_type',\n *       path: [ 'favoriteNumbers', 1 ],\n *       message: 'Invalid input: expected number'\n *     }\n *   ];\n * }\n * ```\n *\n * to\n *\n * ```\n * username\n *   \u2716 Expected number, received string at \"username\n * favoriteNumbers[0]\n *   \u2716 Invalid input: expected number\n * ```\n */\nexport function toDotPath(_path) {\n    const segs = [];\n    const path = _path.map((seg) => (typeof seg === \"object\" ? seg.key : seg));\n    for (const seg of path) {\n        if (typeof seg === \"number\")\n            segs.push(`[${seg}]`);\n        else if (typeof seg === \"symbol\")\n            segs.push(`[${JSON.stringify(String(seg))}]`);\n        else if (/[^\\w$]/.test(seg))\n            segs.push(`[${JSON.stringify(seg)}]`);\n        else {\n            if (segs.length)\n                segs.push(\".\");\n            segs.push(seg);\n        }\n    }\n    return segs.join(\"\");\n}\nexport function prettifyError(error) {\n    const lines = [];\n    // sort by path length\n    const issues = [...error.issues].sort((a, b) => (a.path ?? []).length - (b.path ?? []).length);\n    // Process each issue\n    for (const issue of issues) {\n        lines.push(`\u2716 ${issue.message}`);\n        if (issue.path?.length)\n            lines.push(`  \u2192 at ${toDotPath(issue.path)}`);\n    }\n    // Convert Map to formatted string\n    return lines.join(\"\\n\");\n}\n", "// functions\nexport function assertEqual(val) {\n    return val;\n}\nexport function assertNotEqual(val) {\n    return val;\n}\nexport function assertIs(_arg) { }\nexport function assertNever(_x) {\n    throw new Error();\n}\nexport function assert(_) { }\nexport function getEnumValues(entries) {\n    const numericValues = Object.values(entries).filter((v) => typeof v === \"number\");\n    const values = Object.entries(entries)\n        .filter(([k, _]) => numericValues.indexOf(+k) === -1)\n        .map(([_, v]) => v);\n    return values;\n}\nexport function joinValues(array, separator = \"|\") {\n    return array.map((val) => stringifyPrimitive(val)).join(separator);\n}\nexport function jsonStringifyReplacer(_, value) {\n    if (typeof value === \"bigint\")\n        return value.toString();\n    return value;\n}\nexport function cached(getter) {\n    const set = false;\n    return {\n        get value() {\n            if (!set) {\n                const value = getter();\n                Object.defineProperty(this, \"value\", { value });\n                return value;\n            }\n            throw new Error(\"cached value already set\");\n        },\n    };\n}\nexport function nullish(input) {\n    return input === null || input === undefined;\n}\nexport function cleanRegex(source) {\n    const start = source.startsWith(\"^\") ? 1 : 0;\n    const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\n    return source.slice(start, end);\n}\nexport function floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepString = step.toString();\n    let stepDecCount = (stepString.split(\".\")[1] || \"\").length;\n    if (stepDecCount === 0 && /\\d?e-\\d?/.test(stepString)) {\n        const match = stepString.match(/\\d?e-(\\d?)/);\n        if (match?.[1]) {\n            stepDecCount = Number.parseInt(match[1]);\n        }\n    }\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nconst EVALUATING = Symbol(\"evaluating\");\nexport function defineLazy(object, key, getter) {\n    let value = undefined;\n    Object.defineProperty(object, key, {\n        get() {\n            if (value === EVALUATING) {\n                // Circular reference detected, return undefined to break the cycle\n                return undefined;\n            }\n            if (value === undefined) {\n                value = EVALUATING;\n                value = getter();\n            }\n            return value;\n        },\n        set(v) {\n            Object.defineProperty(object, key, {\n                value: v,\n                // configurable: true,\n            });\n            // object[key] = v;\n        },\n        configurable: true,\n    });\n}\nexport function objectClone(obj) {\n    return Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\n}\nexport function assignProp(target, prop, value) {\n    Object.defineProperty(target, prop, {\n        value,\n        writable: true,\n        enumerable: true,\n        configurable: true,\n    });\n}\nexport function mergeDefs(...defs) {\n    const mergedDescriptors = {};\n    for (const def of defs) {\n        const descriptors = Object.getOwnPropertyDescriptors(def);\n        Object.assign(mergedDescriptors, descriptors);\n    }\n    return Object.defineProperties({}, mergedDescriptors);\n}\nexport function cloneDef(schema) {\n    return mergeDefs(schema._zod.def);\n}\nexport function getElementAtPath(obj, path) {\n    if (!path)\n        return obj;\n    return path.reduce((acc, key) => acc?.[key], obj);\n}\nexport function promiseAllObject(promisesObj) {\n    const keys = Object.keys(promisesObj);\n    const promises = keys.map((key) => promisesObj[key]);\n    return Promise.all(promises).then((results) => {\n        const resolvedObj = {};\n        for (let i = 0; i < keys.length; i++) {\n            resolvedObj[keys[i]] = results[i];\n        }\n        return resolvedObj;\n    });\n}\nexport function randomString(length = 10) {\n    const chars = \"abcdefghijklmnopqrstuvwxyz\";\n    let str = \"\";\n    for (let i = 0; i < length; i++) {\n        str += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return str;\n}\nexport function esc(str) {\n    return JSON.stringify(str);\n}\nexport const captureStackTrace = (\"captureStackTrace\" in Error ? Error.captureStackTrace : (..._args) => { });\nexport function isObject(data) {\n    return typeof data === \"object\" && data !== null && !Array.isArray(data);\n}\nexport const allowsEval = cached(() => {\n    // @ts-ignore\n    if (typeof navigator !== \"undefined\" && navigator?.userAgent?.includes(\"Cloudflare\")) {\n        return false;\n    }\n    try {\n        const F = Function;\n        new F(\"\");\n        return true;\n    }\n    catch (_) {\n        return false;\n    }\n});\nexport function isPlainObject(o) {\n    if (isObject(o) === false)\n        return false;\n    // modified constructor\n    const ctor = o.constructor;\n    if (ctor === undefined)\n        return true;\n    // modified prototype\n    const prot = ctor.prototype;\n    if (isObject(prot) === false)\n        return false;\n    // ctor doesn't have static `isPrototypeOf`\n    if (Object.prototype.hasOwnProperty.call(prot, \"isPrototypeOf\") === false) {\n        return false;\n    }\n    return true;\n}\nexport function shallowClone(o) {\n    if (isPlainObject(o))\n        return { ...o };\n    if (Array.isArray(o))\n        return [...o];\n    return o;\n}\nexport function numKeys(data) {\n    let keyCount = 0;\n    for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            keyCount++;\n        }\n    }\n    return keyCount;\n}\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return \"undefined\";\n        case \"string\":\n            return \"string\";\n        case \"number\":\n            return Number.isNaN(data) ? \"nan\" : \"number\";\n        case \"boolean\":\n            return \"boolean\";\n        case \"function\":\n            return \"function\";\n        case \"bigint\":\n            return \"bigint\";\n        case \"symbol\":\n            return \"symbol\";\n        case \"object\":\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return \"promise\";\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return \"map\";\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return \"set\";\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return \"date\";\n            }\n            // @ts-ignore\n            if (typeof File !== \"undefined\" && data instanceof File) {\n                return \"file\";\n            }\n            return \"object\";\n        default:\n            throw new Error(`Unknown data type: ${t}`);\n    }\n};\nexport const propertyKeyTypes = new Set([\"string\", \"number\", \"symbol\"]);\nexport const primitiveTypes = new Set([\"string\", \"number\", \"bigint\", \"boolean\", \"symbol\", \"undefined\"]);\nexport function escapeRegex(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n// zod-specific utils\nexport function clone(inst, def, params) {\n    const cl = new inst._zod.constr(def ?? inst._zod.def);\n    if (!def || params?.parent)\n        cl._zod.parent = inst;\n    return cl;\n}\nexport function normalizeParams(_params) {\n    const params = _params;\n    if (!params)\n        return {};\n    if (typeof params === \"string\")\n        return { error: () => params };\n    if (params?.message !== undefined) {\n        if (params?.error !== undefined)\n            throw new Error(\"Cannot specify both `message` and `error` params\");\n        params.error = params.message;\n    }\n    delete params.message;\n    if (typeof params.error === \"string\")\n        return { ...params, error: () => params.error };\n    return params;\n}\nexport function createTransparentProxy(getter) {\n    let target;\n    return new Proxy({}, {\n        get(_, prop, receiver) {\n            target ?? (target = getter());\n            return Reflect.get(target, prop, receiver);\n        },\n        set(_, prop, value, receiver) {\n            target ?? (target = getter());\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has(_, prop) {\n            target ?? (target = getter());\n            return Reflect.has(target, prop);\n        },\n        deleteProperty(_, prop) {\n            target ?? (target = getter());\n            return Reflect.deleteProperty(target, prop);\n        },\n        ownKeys(_) {\n            target ?? (target = getter());\n            return Reflect.ownKeys(target);\n        },\n        getOwnPropertyDescriptor(_, prop) {\n            target ?? (target = getter());\n            return Reflect.getOwnPropertyDescriptor(target, prop);\n        },\n        defineProperty(_, prop, descriptor) {\n            target ?? (target = getter());\n            return Reflect.defineProperty(target, prop, descriptor);\n        },\n    });\n}\nexport function stringifyPrimitive(value) {\n    if (typeof value === \"bigint\")\n        return value.toString() + \"n\";\n    if (typeof value === \"string\")\n        return `\"${value}\"`;\n    return `${value}`;\n}\nexport function optionalKeys(shape) {\n    return Object.keys(shape).filter((k) => {\n        return shape[k]._zod.optin === \"optional\" && shape[k]._zod.optout === \"optional\";\n    });\n}\nexport const NUMBER_FORMAT_RANGES = {\n    safeint: [Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER],\n    int32: [-2147483648, 2147483647],\n    uint32: [0, 4294967295],\n    float32: [-3.4028234663852886e38, 3.4028234663852886e38],\n    float64: [-Number.MAX_VALUE, Number.MAX_VALUE],\n};\nexport const BIGINT_FORMAT_RANGES = {\n    int64: [/* @__PURE__*/ BigInt(\"-9223372036854775808\"), /* @__PURE__*/ BigInt(\"9223372036854775807\")],\n    uint64: [/* @__PURE__*/ BigInt(0), /* @__PURE__*/ BigInt(\"18446744073709551615\")],\n};\nexport function pick(schema, mask) {\n    const currDef = schema._zod.def;\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const newShape = {};\n            for (const key in mask) {\n                if (!(key in currDef.shape)) {\n                    throw new Error(`Unrecognized key: \"${key}\"`);\n                }\n                if (!mask[key])\n                    continue;\n                newShape[key] = currDef.shape[key];\n            }\n            assignProp(this, \"shape\", newShape); // self-caching\n            return newShape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\nexport function omit(schema, mask) {\n    const currDef = schema._zod.def;\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const newShape = { ...schema._zod.def.shape };\n            for (const key in mask) {\n                if (!(key in currDef.shape)) {\n                    throw new Error(`Unrecognized key: \"${key}\"`);\n                }\n                if (!mask[key])\n                    continue;\n                delete newShape[key];\n            }\n            assignProp(this, \"shape\", newShape); // self-caching\n            return newShape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\nexport function extend(schema, shape) {\n    if (!isPlainObject(shape)) {\n        throw new Error(\"Invalid input to extend: expected a plain object\");\n    }\n    const checks = schema._zod.def.checks;\n    const hasChecks = checks && checks.length > 0;\n    if (hasChecks) {\n        throw new Error(\"Object schemas containing refinements cannot be extended. Use `.safeExtend()` instead.\");\n    }\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const _shape = { ...schema._zod.def.shape, ...shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\nexport function safeExtend(schema, shape) {\n    if (!isPlainObject(shape)) {\n        throw new Error(\"Invalid input to safeExtend: expected a plain object\");\n    }\n    const def = {\n        ...schema._zod.def,\n        get shape() {\n            const _shape = { ...schema._zod.def.shape, ...shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        checks: schema._zod.def.checks,\n    };\n    return clone(schema, def);\n}\nexport function merge(a, b) {\n    const def = mergeDefs(a._zod.def, {\n        get shape() {\n            const _shape = { ...a._zod.def.shape, ...b._zod.def.shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        get catchall() {\n            return b._zod.def.catchall;\n        },\n        checks: [], // delete existing checks\n    });\n    return clone(a, def);\n}\nexport function partial(Class, schema, mask) {\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const oldShape = schema._zod.def.shape;\n            const shape = { ...oldShape };\n            if (mask) {\n                for (const key in mask) {\n                    if (!(key in oldShape)) {\n                        throw new Error(`Unrecognized key: \"${key}\"`);\n                    }\n                    if (!mask[key])\n                        continue;\n                    // if (oldShape[key]!._zod.optin === \"optional\") continue;\n                    shape[key] = Class\n                        ? new Class({\n                            type: \"optional\",\n                            innerType: oldShape[key],\n                        })\n                        : oldShape[key];\n                }\n            }\n            else {\n                for (const key in oldShape) {\n                    // if (oldShape[key]!._zod.optin === \"optional\") continue;\n                    shape[key] = Class\n                        ? new Class({\n                            type: \"optional\",\n                            innerType: oldShape[key],\n                        })\n                        : oldShape[key];\n                }\n            }\n            assignProp(this, \"shape\", shape); // self-caching\n            return shape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\nexport function required(Class, schema, mask) {\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const oldShape = schema._zod.def.shape;\n            const shape = { ...oldShape };\n            if (mask) {\n                for (const key in mask) {\n                    if (!(key in shape)) {\n                        throw new Error(`Unrecognized key: \"${key}\"`);\n                    }\n                    if (!mask[key])\n                        continue;\n                    // overwrite with non-optional\n                    shape[key] = new Class({\n                        type: \"nonoptional\",\n                        innerType: oldShape[key],\n                    });\n                }\n            }\n            else {\n                for (const key in oldShape) {\n                    // overwrite with non-optional\n                    shape[key] = new Class({\n                        type: \"nonoptional\",\n                        innerType: oldShape[key],\n                    });\n                }\n            }\n            assignProp(this, \"shape\", shape); // self-caching\n            return shape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\n// invalid_type | too_big | too_small | invalid_format | not_multiple_of | unrecognized_keys | invalid_union | invalid_key | invalid_element | invalid_value | custom\nexport function aborted(x, startIndex = 0) {\n    if (x.aborted === true)\n        return true;\n    for (let i = startIndex; i < x.issues.length; i++) {\n        if (x.issues[i]?.continue !== true) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function prefixIssues(path, issues) {\n    return issues.map((iss) => {\n        var _a;\n        (_a = iss).path ?? (_a.path = []);\n        iss.path.unshift(path);\n        return iss;\n    });\n}\nexport function unwrapMessage(message) {\n    return typeof message === \"string\" ? message : message?.message;\n}\nexport function finalizeIssue(iss, ctx, config) {\n    const full = { ...iss, path: iss.path ?? [] };\n    // for backwards compatibility\n    if (!iss.message) {\n        const message = unwrapMessage(iss.inst?._zod.def?.error?.(iss)) ??\n            unwrapMessage(ctx?.error?.(iss)) ??\n            unwrapMessage(config.customError?.(iss)) ??\n            unwrapMessage(config.localeError?.(iss)) ??\n            \"Invalid input\";\n        full.message = message;\n    }\n    // delete (full as any).def;\n    delete full.inst;\n    delete full.continue;\n    if (!ctx?.reportInput) {\n        delete full.input;\n    }\n    return full;\n}\nexport function getSizableOrigin(input) {\n    if (input instanceof Set)\n        return \"set\";\n    if (input instanceof Map)\n        return \"map\";\n    // @ts-ignore\n    if (input instanceof File)\n        return \"file\";\n    return \"unknown\";\n}\nexport function getLengthableOrigin(input) {\n    if (Array.isArray(input))\n        return \"array\";\n    if (typeof input === \"string\")\n        return \"string\";\n    return \"unknown\";\n}\nexport function issue(...args) {\n    const [iss, input, inst] = args;\n    if (typeof iss === \"string\") {\n        return {\n            message: iss,\n            code: \"custom\",\n            input,\n            inst,\n        };\n    }\n    return { ...iss };\n}\nexport function cleanEnum(obj) {\n    return Object.entries(obj)\n        .filter(([k, _]) => {\n        // return true if NaN, meaning it's not a number, thus a string key\n        return Number.isNaN(Number.parseInt(k, 10));\n    })\n        .map((el) => el[1]);\n}\n// Codec utility functions\nexport function base64ToUint8Array(base64) {\n    const binaryString = atob(base64);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function uint8ArrayToBase64(bytes) {\n    let binaryString = \"\";\n    for (let i = 0; i < bytes.length; i++) {\n        binaryString += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binaryString);\n}\nexport function base64urlToUint8Array(base64url) {\n    const base64 = base64url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const padding = \"=\".repeat((4 - (base64.length % 4)) % 4);\n    return base64ToUint8Array(base64 + padding);\n}\nexport function uint8ArrayToBase64url(bytes) {\n    return uint8ArrayToBase64(bytes).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n}\nexport function hexToUint8Array(hex) {\n    const cleanHex = hex.replace(/^0x/, \"\");\n    if (cleanHex.length % 2 !== 0) {\n        throw new Error(\"Invalid hex string length\");\n    }\n    const bytes = new Uint8Array(cleanHex.length / 2);\n    for (let i = 0; i < cleanHex.length; i += 2) {\n        bytes[i / 2] = Number.parseInt(cleanHex.slice(i, i + 2), 16);\n    }\n    return bytes;\n}\nexport function uint8ArrayToHex(bytes) {\n    return Array.from(bytes)\n        .map((b) => b.toString(16).padStart(2, \"0\"))\n        .join(\"\");\n}\n// instanceof\nexport class Class {\n    constructor(..._args) { }\n}\n", "import * as checks from \"./checks.js\";\nimport * as core from \"./core.js\";\nimport { Doc } from \"./doc.js\";\nimport { parse, parseAsync, safeParse, safeParseAsync } from \"./parse.js\";\nimport * as regexes from \"./regexes.js\";\nimport * as util from \"./util.js\";\nimport { version } from \"./versions.js\";\nexport const $ZodType = /*@__PURE__*/ core.$constructor(\"$ZodType\", (inst, def) => {\n    var _a;\n    inst ?? (inst = {});\n    inst._zod.def = def; // set _def property\n    inst._zod.bag = inst._zod.bag || {}; // initialize _bag object\n    inst._zod.version = version;\n    const checks = [...(inst._zod.def.checks ?? [])];\n    // if inst is itself a checks.$ZodCheck, run it as a check\n    if (inst._zod.traits.has(\"$ZodCheck\")) {\n        checks.unshift(inst);\n    }\n    for (const ch of checks) {\n        for (const fn of ch._zod.onattach) {\n            fn(inst);\n        }\n    }\n    if (checks.length === 0) {\n        // deferred initializer\n        // inst._zod.parse is not yet defined\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\n        inst._zod.deferred?.push(() => {\n            inst._zod.run = inst._zod.parse;\n        });\n    }\n    else {\n        const runChecks = (payload, checks, ctx) => {\n            let isAborted = util.aborted(payload);\n            let asyncResult;\n            for (const ch of checks) {\n                if (ch._zod.def.when) {\n                    const shouldRun = ch._zod.def.when(payload);\n                    if (!shouldRun)\n                        continue;\n                }\n                else if (isAborted) {\n                    continue;\n                }\n                const currLen = payload.issues.length;\n                const _ = ch._zod.check(payload);\n                if (_ instanceof Promise && ctx?.async === false) {\n                    throw new core.$ZodAsyncError();\n                }\n                if (asyncResult || _ instanceof Promise) {\n                    asyncResult = (asyncResult ?? Promise.resolve()).then(async () => {\n                        await _;\n                        const nextLen = payload.issues.length;\n                        if (nextLen === currLen)\n                            return;\n                        if (!isAborted)\n                            isAborted = util.aborted(payload, currLen);\n                    });\n                }\n                else {\n                    const nextLen = payload.issues.length;\n                    if (nextLen === currLen)\n                        continue;\n                    if (!isAborted)\n                        isAborted = util.aborted(payload, currLen);\n                }\n            }\n            if (asyncResult) {\n                return asyncResult.then(() => {\n                    return payload;\n                });\n            }\n            return payload;\n        };\n        // const handleChecksResult = (\n        //   checkResult: ParsePayload,\n        //   originalResult: ParsePayload,\n        //   ctx: ParseContextInternal\n        // ): util.MaybeAsync<ParsePayload> => {\n        //   // if the checks mutated the value && there are no issues, re-parse the result\n        //   if (checkResult.value !== originalResult.value && !checkResult.issues.length)\n        //     return inst._zod.parse(checkResult, ctx);\n        //   return originalResult;\n        // };\n        const handleCanaryResult = (canary, payload, ctx) => {\n            // abort if the canary is aborted\n            if (util.aborted(canary)) {\n                canary.aborted = true;\n                return canary;\n            }\n            // run checks first, then\n            const checkResult = runChecks(payload, checks, ctx);\n            if (checkResult instanceof Promise) {\n                if (ctx.async === false)\n                    throw new core.$ZodAsyncError();\n                return checkResult.then((checkResult) => inst._zod.parse(checkResult, ctx));\n            }\n            return inst._zod.parse(checkResult, ctx);\n        };\n        inst._zod.run = (payload, ctx) => {\n            if (ctx.skipChecks) {\n                return inst._zod.parse(payload, ctx);\n            }\n            if (ctx.direction === \"backward\") {\n                // run canary\n                // initial pass (no checks)\n                const canary = inst._zod.parse({ value: payload.value, issues: [] }, { ...ctx, skipChecks: true });\n                if (canary instanceof Promise) {\n                    return canary.then((canary) => {\n                        return handleCanaryResult(canary, payload, ctx);\n                    });\n                }\n                return handleCanaryResult(canary, payload, ctx);\n            }\n            // forward\n            const result = inst._zod.parse(payload, ctx);\n            if (result instanceof Promise) {\n                if (ctx.async === false)\n                    throw new core.$ZodAsyncError();\n                return result.then((result) => runChecks(result, checks, ctx));\n            }\n            return runChecks(result, checks, ctx);\n        };\n    }\n    inst[\"~standard\"] = {\n        validate: (value) => {\n            try {\n                const r = safeParse(inst, value);\n                return r.success ? { value: r.data } : { issues: r.error?.issues };\n            }\n            catch (_) {\n                return safeParseAsync(inst, value).then((r) => (r.success ? { value: r.data } : { issues: r.error?.issues }));\n            }\n        },\n        vendor: \"zod\",\n        version: 1,\n    };\n});\nexport { clone } from \"./util.js\";\nexport const $ZodString = /*@__PURE__*/ core.$constructor(\"$ZodString\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = [...(inst?._zod.bag?.patterns ?? [])].pop() ?? regexes.string(inst._zod.bag);\n    inst._zod.parse = (payload, _) => {\n        if (def.coerce)\n            try {\n                payload.value = String(payload.value);\n            }\n            catch (_) { }\n        if (typeof payload.value === \"string\")\n            return payload;\n        payload.issues.push({\n            expected: \"string\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodStringFormat\", (inst, def) => {\n    // check initialization must come first\n    checks.$ZodCheckStringFormat.init(inst, def);\n    $ZodString.init(inst, def);\n});\nexport const $ZodGUID = /*@__PURE__*/ core.$constructor(\"$ZodGUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.guid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodUUID = /*@__PURE__*/ core.$constructor(\"$ZodUUID\", (inst, def) => {\n    if (def.version) {\n        const versionMap = {\n            v1: 1,\n            v2: 2,\n            v3: 3,\n            v4: 4,\n            v5: 5,\n            v6: 6,\n            v7: 7,\n            v8: 8,\n        };\n        const v = versionMap[def.version];\n        if (v === undefined)\n            throw new Error(`Invalid UUID version: \"${def.version}\"`);\n        def.pattern ?? (def.pattern = regexes.uuid(v));\n    }\n    else\n        def.pattern ?? (def.pattern = regexes.uuid());\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodEmail = /*@__PURE__*/ core.$constructor(\"$ZodEmail\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.email);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodURL = /*@__PURE__*/ core.$constructor(\"$ZodURL\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        try {\n            // Trim whitespace from input\n            const trimmed = payload.value.trim();\n            // @ts-ignore\n            const url = new URL(trimmed);\n            if (def.hostname) {\n                def.hostname.lastIndex = 0;\n                if (!def.hostname.test(url.hostname)) {\n                    payload.issues.push({\n                        code: \"invalid_format\",\n                        format: \"url\",\n                        note: \"Invalid hostname\",\n                        pattern: regexes.hostname.source,\n                        input: payload.value,\n                        inst,\n                        continue: !def.abort,\n                    });\n                }\n            }\n            if (def.protocol) {\n                def.protocol.lastIndex = 0;\n                if (!def.protocol.test(url.protocol.endsWith(\":\") ? url.protocol.slice(0, -1) : url.protocol)) {\n                    payload.issues.push({\n                        code: \"invalid_format\",\n                        format: \"url\",\n                        note: \"Invalid protocol\",\n                        pattern: def.protocol.source,\n                        input: payload.value,\n                        inst,\n                        continue: !def.abort,\n                    });\n                }\n            }\n            // Set the output value based on normalize flag\n            if (def.normalize) {\n                // Use normalized URL\n                payload.value = url.href;\n            }\n            else {\n                // Preserve the original input (trimmed)\n                payload.value = trimmed;\n            }\n            return;\n        }\n        catch (_) {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"url\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\nexport const $ZodEmoji = /*@__PURE__*/ core.$constructor(\"$ZodEmoji\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.emoji());\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodNanoID = /*@__PURE__*/ core.$constructor(\"$ZodNanoID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.nanoid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCUID = /*@__PURE__*/ core.$constructor(\"$ZodCUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cuid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCUID2 = /*@__PURE__*/ core.$constructor(\"$ZodCUID2\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cuid2);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodULID = /*@__PURE__*/ core.$constructor(\"$ZodULID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ulid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodXID = /*@__PURE__*/ core.$constructor(\"$ZodXID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.xid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodKSUID = /*@__PURE__*/ core.$constructor(\"$ZodKSUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ksuid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODateTime = /*@__PURE__*/ core.$constructor(\"$ZodISODateTime\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.datetime(def));\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODate = /*@__PURE__*/ core.$constructor(\"$ZodISODate\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.date);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISOTime = /*@__PURE__*/ core.$constructor(\"$ZodISOTime\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.time(def));\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODuration = /*@__PURE__*/ core.$constructor(\"$ZodISODuration\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.duration);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodIPv4 = /*@__PURE__*/ core.$constructor(\"$ZodIPv4\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ipv4);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = `ipv4`;\n    });\n});\nexport const $ZodIPv6 = /*@__PURE__*/ core.$constructor(\"$ZodIPv6\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ipv6);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = `ipv6`;\n    });\n    inst._zod.check = (payload) => {\n        try {\n            // @ts-ignore\n            new URL(`http://[${payload.value}]`);\n            // return;\n        }\n        catch {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"ipv6\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\nexport const $ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv4\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cidrv4);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv6\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cidrv6); // not used for validation\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        const parts = payload.value.split(\"/\");\n        try {\n            if (parts.length !== 2)\n                throw new Error();\n            const [address, prefix] = parts;\n            if (!prefix)\n                throw new Error();\n            const prefixNum = Number(prefix);\n            if (`${prefixNum}` !== prefix)\n                throw new Error();\n            if (prefixNum < 0 || prefixNum > 128)\n                throw new Error();\n            // @ts-ignore\n            new URL(`http://[${address}]`);\n        }\n        catch {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"cidrv6\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\n//////////////////////////////   ZodBase64   //////////////////////////////\nexport function isValidBase64(data) {\n    if (data === \"\")\n        return true;\n    if (data.length % 4 !== 0)\n        return false;\n    try {\n        // @ts-ignore\n        atob(data);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexport const $ZodBase64 = /*@__PURE__*/ core.$constructor(\"$ZodBase64\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.base64);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.contentEncoding = \"base64\";\n    });\n    inst._zod.check = (payload) => {\n        if (isValidBase64(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"base64\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\n//////////////////////////////   ZodBase64   //////////////////////////////\nexport function isValidBase64URL(data) {\n    if (!regexes.base64url.test(data))\n        return false;\n    const base64 = data.replace(/[-_]/g, (c) => (c === \"-\" ? \"+\" : \"/\"));\n    const padded = base64.padEnd(Math.ceil(base64.length / 4) * 4, \"=\");\n    return isValidBase64(padded);\n}\nexport const $ZodBase64URL = /*@__PURE__*/ core.$constructor(\"$ZodBase64URL\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.base64url);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.contentEncoding = \"base64url\";\n    });\n    inst._zod.check = (payload) => {\n        if (isValidBase64URL(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"base64url\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodE164 = /*@__PURE__*/ core.$constructor(\"$ZodE164\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.e164);\n    $ZodStringFormat.init(inst, def);\n});\n//////////////////////////////   ZodJWT   //////////////////////////////\nexport function isValidJWT(token, algorithm = null) {\n    try {\n        const tokensParts = token.split(\".\");\n        if (tokensParts.length !== 3)\n            return false;\n        const [header] = tokensParts;\n        if (!header)\n            return false;\n        // @ts-ignore\n        const parsedHeader = JSON.parse(atob(header));\n        if (\"typ\" in parsedHeader && parsedHeader?.typ !== \"JWT\")\n            return false;\n        if (!parsedHeader.alg)\n            return false;\n        if (algorithm && (!(\"alg\" in parsedHeader) || parsedHeader.alg !== algorithm))\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexport const $ZodJWT = /*@__PURE__*/ core.$constructor(\"$ZodJWT\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        if (isValidJWT(payload.value, def.alg))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"jwt\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCustomStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodCustomStringFormat\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        if (def.fn(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: def.format,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodNumber = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = inst._zod.bag.pattern ?? regexes.number;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = Number(payload.value);\n            }\n            catch (_) { }\n        const input = payload.value;\n        if (typeof input === \"number\" && !Number.isNaN(input) && Number.isFinite(input)) {\n            return payload;\n        }\n        const received = typeof input === \"number\"\n            ? Number.isNaN(input)\n                ? \"NaN\"\n                : !Number.isFinite(input)\n                    ? \"Infinity\"\n                    : undefined\n            : undefined;\n        payload.issues.push({\n            expected: \"number\",\n            code: \"invalid_type\",\n            input,\n            inst,\n            ...(received ? { received } : {}),\n        });\n        return payload;\n    };\n});\nexport const $ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\n    checks.$ZodCheckNumberFormat.init(inst, def);\n    $ZodNumber.init(inst, def); // no format checksp\n});\nexport const $ZodBoolean = /*@__PURE__*/ core.$constructor(\"$ZodBoolean\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.boolean;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = Boolean(payload.value);\n            }\n            catch (_) { }\n        const input = payload.value;\n        if (typeof input === \"boolean\")\n            return payload;\n        payload.issues.push({\n            expected: \"boolean\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodBigInt = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.bigint;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = BigInt(payload.value);\n            }\n            catch (_) { }\n        if (typeof payload.value === \"bigint\")\n            return payload;\n        payload.issues.push({\n            expected: \"bigint\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\n    checks.$ZodCheckBigIntFormat.init(inst, def);\n    $ZodBigInt.init(inst, def); // no format checks\n});\nexport const $ZodSymbol = /*@__PURE__*/ core.$constructor(\"$ZodSymbol\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (typeof input === \"symbol\")\n            return payload;\n        payload.issues.push({\n            expected: \"symbol\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodUndefined = /*@__PURE__*/ core.$constructor(\"$ZodUndefined\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.undefined;\n    inst._zod.values = new Set([undefined]);\n    inst._zod.optin = \"optional\";\n    inst._zod.optout = \"optional\";\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (typeof input === \"undefined\")\n            return payload;\n        payload.issues.push({\n            expected: \"undefined\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodNull = /*@__PURE__*/ core.$constructor(\"$ZodNull\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.null;\n    inst._zod.values = new Set([null]);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (input === null)\n            return payload;\n        payload.issues.push({\n            expected: \"null\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodAny = /*@__PURE__*/ core.$constructor(\"$ZodAny\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload) => payload;\n});\nexport const $ZodUnknown = /*@__PURE__*/ core.$constructor(\"$ZodUnknown\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload) => payload;\n});\nexport const $ZodNever = /*@__PURE__*/ core.$constructor(\"$ZodNever\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        payload.issues.push({\n            expected: \"never\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodVoid = /*@__PURE__*/ core.$constructor(\"$ZodVoid\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (typeof input === \"undefined\")\n            return payload;\n        payload.issues.push({\n            expected: \"void\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodDate = /*@__PURE__*/ core.$constructor(\"$ZodDate\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce) {\n            try {\n                payload.value = new Date(payload.value);\n            }\n            catch (_err) { }\n        }\n        const input = payload.value;\n        const isDate = input instanceof Date;\n        const isValidDate = isDate && !Number.isNaN(input.getTime());\n        if (isValidDate)\n            return payload;\n        payload.issues.push({\n            expected: \"date\",\n            code: \"invalid_type\",\n            input,\n            ...(isDate ? { received: \"Invalid Date\" } : {}),\n            inst,\n        });\n        return payload;\n    };\n});\nfunction handleArrayResult(result, final, index) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(index, result.issues));\n    }\n    final.value[index] = result.value;\n}\nexport const $ZodArray = /*@__PURE__*/ core.$constructor(\"$ZodArray\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!Array.isArray(input)) {\n            payload.issues.push({\n                expected: \"array\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        payload.value = Array(input.length);\n        const proms = [];\n        for (let i = 0; i < input.length; i++) {\n            const item = input[i];\n            const result = def.element._zod.run({\n                value: item,\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleArrayResult(result, payload, i)));\n            }\n            else {\n                handleArrayResult(result, payload, i);\n            }\n        }\n        if (proms.length) {\n            return Promise.all(proms).then(() => payload);\n        }\n        return payload; //handleArrayResultsAsync(parseResults, final);\n    };\n});\nfunction handlePropertyResult(result, final, key, input) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(key, result.issues));\n    }\n    if (result.value === undefined) {\n        if (key in input) {\n            final.value[key] = undefined;\n        }\n    }\n    else {\n        final.value[key] = result.value;\n    }\n}\nfunction normalizeDef(def) {\n    const keys = Object.keys(def.shape);\n    for (const k of keys) {\n        if (!def.shape?.[k]?._zod?.traits?.has(\"$ZodType\")) {\n            throw new Error(`Invalid element at key \"${k}\": expected a Zod schema`);\n        }\n    }\n    const okeys = util.optionalKeys(def.shape);\n    return {\n        ...def,\n        keys,\n        keySet: new Set(keys),\n        numKeys: keys.length,\n        optionalKeys: new Set(okeys),\n    };\n}\nfunction handleCatchall(proms, input, payload, ctx, def, inst) {\n    const unrecognized = [];\n    // iterate over input keys\n    const keySet = def.keySet;\n    const _catchall = def.catchall._zod;\n    const t = _catchall.def.type;\n    for (const key of Object.keys(input)) {\n        if (keySet.has(key))\n            continue;\n        if (t === \"never\") {\n            unrecognized.push(key);\n            continue;\n        }\n        const r = _catchall.run({ value: input[key], issues: [] }, ctx);\n        if (r instanceof Promise) {\n            proms.push(r.then((r) => handlePropertyResult(r, payload, key, input)));\n        }\n        else {\n            handlePropertyResult(r, payload, key, input);\n        }\n    }\n    if (unrecognized.length) {\n        payload.issues.push({\n            code: \"unrecognized_keys\",\n            keys: unrecognized,\n            input,\n            inst,\n        });\n    }\n    if (!proms.length)\n        return payload;\n    return Promise.all(proms).then(() => {\n        return payload;\n    });\n}\nexport const $ZodObject = /*@__PURE__*/ core.$constructor(\"$ZodObject\", (inst, def) => {\n    // requires cast because technically $ZodObject doesn't extend\n    $ZodType.init(inst, def);\n    // const sh = def.shape;\n    const desc = Object.getOwnPropertyDescriptor(def, \"shape\");\n    if (!desc?.get) {\n        const sh = def.shape;\n        Object.defineProperty(def, \"shape\", {\n            get: () => {\n                const newSh = { ...sh };\n                Object.defineProperty(def, \"shape\", {\n                    value: newSh,\n                });\n                return newSh;\n            },\n        });\n    }\n    const _normalized = util.cached(() => normalizeDef(def));\n    util.defineLazy(inst._zod, \"propValues\", () => {\n        const shape = def.shape;\n        const propValues = {};\n        for (const key in shape) {\n            const field = shape[key]._zod;\n            if (field.values) {\n                propValues[key] ?? (propValues[key] = new Set());\n                for (const v of field.values)\n                    propValues[key].add(v);\n            }\n        }\n        return propValues;\n    });\n    const isObject = util.isObject;\n    const catchall = def.catchall;\n    let value;\n    inst._zod.parse = (payload, ctx) => {\n        value ?? (value = _normalized.value);\n        const input = payload.value;\n        if (!isObject(input)) {\n            payload.issues.push({\n                expected: \"object\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        payload.value = {};\n        const proms = [];\n        const shape = value.shape;\n        for (const key of value.keys) {\n            const el = shape[key];\n            const r = el._zod.run({ value: input[key], issues: [] }, ctx);\n            if (r instanceof Promise) {\n                proms.push(r.then((r) => handlePropertyResult(r, payload, key, input)));\n            }\n            else {\n                handlePropertyResult(r, payload, key, input);\n            }\n        }\n        if (!catchall) {\n            return proms.length ? Promise.all(proms).then(() => payload) : payload;\n        }\n        return handleCatchall(proms, input, payload, ctx, _normalized.value, inst);\n    };\n});\nexport const $ZodObjectJIT = /*@__PURE__*/ core.$constructor(\"$ZodObjectJIT\", (inst, def) => {\n    // requires cast because technically $ZodObject doesn't extend\n    $ZodObject.init(inst, def);\n    const superParse = inst._zod.parse;\n    const _normalized = util.cached(() => normalizeDef(def));\n    const generateFastpass = (shape) => {\n        const doc = new Doc([\"shape\", \"payload\", \"ctx\"]);\n        const normalized = _normalized.value;\n        const parseStr = (key) => {\n            const k = util.esc(key);\n            return `shape[${k}]._zod.run({ value: input[${k}], issues: [] }, ctx)`;\n        };\n        doc.write(`const input = payload.value;`);\n        const ids = Object.create(null);\n        let counter = 0;\n        for (const key of normalized.keys) {\n            ids[key] = `key_${counter++}`;\n        }\n        // A: preserve key order {\n        doc.write(`const newResult = {};`);\n        for (const key of normalized.keys) {\n            const id = ids[key];\n            const k = util.esc(key);\n            doc.write(`const ${id} = ${parseStr(key)};`);\n            doc.write(`\n        if (${id}.issues.length) {\n          payload.issues = payload.issues.concat(${id}.issues.map(iss => ({\n            ...iss,\n            path: iss.path ? [${k}, ...iss.path] : [${k}]\n          })));\n        }\n        \n        \n        if (${id}.value === undefined) {\n          if (${k} in input) {\n            newResult[${k}] = undefined;\n          }\n        } else {\n          newResult[${k}] = ${id}.value;\n        }\n        \n      `);\n        }\n        doc.write(`payload.value = newResult;`);\n        doc.write(`return payload;`);\n        const fn = doc.compile();\n        return (payload, ctx) => fn(shape, payload, ctx);\n    };\n    let fastpass;\n    const isObject = util.isObject;\n    const jit = !core.globalConfig.jitless;\n    const allowsEval = util.allowsEval;\n    const fastEnabled = jit && allowsEval.value; // && !def.catchall;\n    const catchall = def.catchall;\n    let value;\n    inst._zod.parse = (payload, ctx) => {\n        value ?? (value = _normalized.value);\n        const input = payload.value;\n        if (!isObject(input)) {\n            payload.issues.push({\n                expected: \"object\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        if (jit && fastEnabled && ctx?.async === false && ctx.jitless !== true) {\n            // always synchronous\n            if (!fastpass)\n                fastpass = generateFastpass(def.shape);\n            payload = fastpass(payload, ctx);\n            if (!catchall)\n                return payload;\n            return handleCatchall([], input, payload, ctx, value, inst);\n        }\n        return superParse(payload, ctx);\n    };\n});\nfunction handleUnionResults(results, final, inst, ctx) {\n    for (const result of results) {\n        if (result.issues.length === 0) {\n            final.value = result.value;\n            return final;\n        }\n    }\n    const nonaborted = results.filter((r) => !util.aborted(r));\n    if (nonaborted.length === 1) {\n        final.value = nonaborted[0].value;\n        return nonaborted[0];\n    }\n    final.issues.push({\n        code: \"invalid_union\",\n        input: final.value,\n        inst,\n        errors: results.map((result) => result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n    });\n    return final;\n}\nexport const $ZodUnion = /*@__PURE__*/ core.$constructor(\"$ZodUnion\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.options.some((o) => o._zod.optin === \"optional\") ? \"optional\" : undefined);\n    util.defineLazy(inst._zod, \"optout\", () => def.options.some((o) => o._zod.optout === \"optional\") ? \"optional\" : undefined);\n    util.defineLazy(inst._zod, \"values\", () => {\n        if (def.options.every((o) => o._zod.values)) {\n            return new Set(def.options.flatMap((option) => Array.from(option._zod.values)));\n        }\n        return undefined;\n    });\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        if (def.options.every((o) => o._zod.pattern)) {\n            const patterns = def.options.map((o) => o._zod.pattern);\n            return new RegExp(`^(${patterns.map((p) => util.cleanRegex(p.source)).join(\"|\")})$`);\n        }\n        return undefined;\n    });\n    const single = def.options.length === 1;\n    const first = def.options[0]._zod.run;\n    inst._zod.parse = (payload, ctx) => {\n        if (single) {\n            return first(payload, ctx);\n        }\n        let async = false;\n        const results = [];\n        for (const option of def.options) {\n            const result = option._zod.run({\n                value: payload.value,\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                results.push(result);\n                async = true;\n            }\n            else {\n                if (result.issues.length === 0)\n                    return result;\n                results.push(result);\n            }\n        }\n        if (!async)\n            return handleUnionResults(results, payload, inst, ctx);\n        return Promise.all(results).then((results) => {\n            return handleUnionResults(results, payload, inst, ctx);\n        });\n    };\n});\nexport const $ZodDiscriminatedUnion = \n/*@__PURE__*/\ncore.$constructor(\"$ZodDiscriminatedUnion\", (inst, def) => {\n    $ZodUnion.init(inst, def);\n    const _super = inst._zod.parse;\n    util.defineLazy(inst._zod, \"propValues\", () => {\n        const propValues = {};\n        for (const option of def.options) {\n            const pv = option._zod.propValues;\n            if (!pv || Object.keys(pv).length === 0)\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(option)}\"`);\n            for (const [k, v] of Object.entries(pv)) {\n                if (!propValues[k])\n                    propValues[k] = new Set();\n                for (const val of v) {\n                    propValues[k].add(val);\n                }\n            }\n        }\n        return propValues;\n    });\n    const disc = util.cached(() => {\n        const opts = def.options;\n        const map = new Map();\n        for (const o of opts) {\n            const values = o._zod.propValues?.[def.discriminator];\n            if (!values || values.size === 0)\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(o)}\"`);\n            for (const v of values) {\n                if (map.has(v)) {\n                    throw new Error(`Duplicate discriminator value \"${String(v)}\"`);\n                }\n                map.set(v, o);\n            }\n        }\n        return map;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!util.isObject(input)) {\n            payload.issues.push({\n                code: \"invalid_type\",\n                expected: \"object\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const opt = disc.value.get(input?.[def.discriminator]);\n        if (opt) {\n            return opt._zod.run(payload, ctx);\n        }\n        if (def.unionFallback) {\n            return _super(payload, ctx);\n        }\n        // no matching discriminator\n        payload.issues.push({\n            code: \"invalid_union\",\n            errors: [],\n            note: \"No matching discriminator\",\n            discriminator: def.discriminator,\n            input,\n            path: [def.discriminator],\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodIntersection = /*@__PURE__*/ core.$constructor(\"$ZodIntersection\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        const left = def.left._zod.run({ value: input, issues: [] }, ctx);\n        const right = def.right._zod.run({ value: input, issues: [] }, ctx);\n        const async = left instanceof Promise || right instanceof Promise;\n        if (async) {\n            return Promise.all([left, right]).then(([left, right]) => {\n                return handleIntersectionResults(payload, left, right);\n            });\n        }\n        return handleIntersectionResults(payload, left, right);\n    };\n});\nfunction mergeValues(a, b) {\n    // const aType = parse.t(a);\n    // const bType = parse.t(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    if (a instanceof Date && b instanceof Date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    if (util.isPlainObject(a) && util.isPlainObject(b)) {\n        const bKeys = Object.keys(b);\n        const sharedKeys = Object.keys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return {\n                    valid: false,\n                    mergeErrorPath: [key, ...sharedValue.mergeErrorPath],\n                };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return { valid: false, mergeErrorPath: [] };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return {\n                    valid: false,\n                    mergeErrorPath: [index, ...sharedValue.mergeErrorPath],\n                };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    return { valid: false, mergeErrorPath: [] };\n}\nfunction handleIntersectionResults(result, left, right) {\n    if (left.issues.length) {\n        result.issues.push(...left.issues);\n    }\n    if (right.issues.length) {\n        result.issues.push(...right.issues);\n    }\n    if (util.aborted(result))\n        return result;\n    const merged = mergeValues(left.value, right.value);\n    if (!merged.valid) {\n        throw new Error(`Unmergable intersection. Error path: ` + `${JSON.stringify(merged.mergeErrorPath)}`);\n    }\n    result.value = merged.data;\n    return result;\n}\nexport const $ZodTuple = /*@__PURE__*/ core.$constructor(\"$ZodTuple\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const items = def.items;\n    const optStart = items.length - [...items].reverse().findIndex((item) => item._zod.optin !== \"optional\");\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!Array.isArray(input)) {\n            payload.issues.push({\n                input,\n                inst,\n                expected: \"tuple\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        payload.value = [];\n        const proms = [];\n        if (!def.rest) {\n            const tooBig = input.length > items.length;\n            const tooSmall = input.length < optStart - 1;\n            if (tooBig || tooSmall) {\n                payload.issues.push({\n                    ...(tooBig ? { code: \"too_big\", maximum: items.length } : { code: \"too_small\", minimum: items.length }),\n                    input,\n                    inst,\n                    origin: \"array\",\n                });\n                return payload;\n            }\n        }\n        let i = -1;\n        for (const item of items) {\n            i++;\n            if (i >= input.length)\n                if (i >= optStart)\n                    continue;\n            const result = item._zod.run({\n                value: input[i],\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleTupleResult(result, payload, i)));\n            }\n            else {\n                handleTupleResult(result, payload, i);\n            }\n        }\n        if (def.rest) {\n            const rest = input.slice(items.length);\n            for (const el of rest) {\n                i++;\n                const result = def.rest._zod.run({\n                    value: el,\n                    issues: [],\n                }, ctx);\n                if (result instanceof Promise) {\n                    proms.push(result.then((result) => handleTupleResult(result, payload, i)));\n                }\n                else {\n                    handleTupleResult(result, payload, i);\n                }\n            }\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleTupleResult(result, final, index) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(index, result.issues));\n    }\n    final.value[index] = result.value;\n}\nexport const $ZodRecord = /*@__PURE__*/ core.$constructor(\"$ZodRecord\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!util.isPlainObject(input)) {\n            payload.issues.push({\n                expected: \"record\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        if (def.keyType._zod.values) {\n            const values = def.keyType._zod.values;\n            payload.value = {};\n            for (const key of values) {\n                if (typeof key === \"string\" || typeof key === \"number\" || typeof key === \"symbol\") {\n                    const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\n                    if (result instanceof Promise) {\n                        proms.push(result.then((result) => {\n                            if (result.issues.length) {\n                                payload.issues.push(...util.prefixIssues(key, result.issues));\n                            }\n                            payload.value[key] = result.value;\n                        }));\n                    }\n                    else {\n                        if (result.issues.length) {\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\n                        }\n                        payload.value[key] = result.value;\n                    }\n                }\n            }\n            let unrecognized;\n            for (const key in input) {\n                if (!values.has(key)) {\n                    unrecognized = unrecognized ?? [];\n                    unrecognized.push(key);\n                }\n            }\n            if (unrecognized && unrecognized.length > 0) {\n                payload.issues.push({\n                    code: \"unrecognized_keys\",\n                    input,\n                    inst,\n                    keys: unrecognized,\n                });\n            }\n        }\n        else {\n            payload.value = {};\n            for (const key of Reflect.ownKeys(input)) {\n                if (key === \"__proto__\")\n                    continue;\n                const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\n                if (keyResult instanceof Promise) {\n                    throw new Error(\"Async schemas not supported in object keys currently\");\n                }\n                if (keyResult.issues.length) {\n                    payload.issues.push({\n                        code: \"invalid_key\",\n                        origin: \"record\",\n                        issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                        input: key,\n                        path: [key],\n                        inst,\n                    });\n                    payload.value[keyResult.value] = keyResult.value;\n                    continue;\n                }\n                const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\n                if (result instanceof Promise) {\n                    proms.push(result.then((result) => {\n                        if (result.issues.length) {\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\n                        }\n                        payload.value[keyResult.value] = result.value;\n                    }));\n                }\n                else {\n                    if (result.issues.length) {\n                        payload.issues.push(...util.prefixIssues(key, result.issues));\n                    }\n                    payload.value[keyResult.value] = result.value;\n                }\n            }\n        }\n        if (proms.length) {\n            return Promise.all(proms).then(() => payload);\n        }\n        return payload;\n    };\n});\nexport const $ZodMap = /*@__PURE__*/ core.$constructor(\"$ZodMap\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!(input instanceof Map)) {\n            payload.issues.push({\n                expected: \"map\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        payload.value = new Map();\n        for (const [key, value] of input) {\n            const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\n            const valueResult = def.valueType._zod.run({ value: value, issues: [] }, ctx);\n            if (keyResult instanceof Promise || valueResult instanceof Promise) {\n                proms.push(Promise.all([keyResult, valueResult]).then(([keyResult, valueResult]) => {\n                    handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\n                }));\n            }\n            else {\n                handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\n            }\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleMapResult(keyResult, valueResult, final, key, input, inst, ctx) {\n    if (keyResult.issues.length) {\n        if (util.propertyKeyTypes.has(typeof key)) {\n            final.issues.push(...util.prefixIssues(key, keyResult.issues));\n        }\n        else {\n            final.issues.push({\n                code: \"invalid_key\",\n                origin: \"map\",\n                input,\n                inst,\n                issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n            });\n        }\n    }\n    if (valueResult.issues.length) {\n        if (util.propertyKeyTypes.has(typeof key)) {\n            final.issues.push(...util.prefixIssues(key, valueResult.issues));\n        }\n        else {\n            final.issues.push({\n                origin: \"map\",\n                code: \"invalid_element\",\n                input,\n                inst,\n                key: key,\n                issues: valueResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n            });\n        }\n    }\n    final.value.set(keyResult.value, valueResult.value);\n}\nexport const $ZodSet = /*@__PURE__*/ core.$constructor(\"$ZodSet\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!(input instanceof Set)) {\n            payload.issues.push({\n                input,\n                inst,\n                expected: \"set\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        const proms = [];\n        payload.value = new Set();\n        for (const item of input) {\n            const result = def.valueType._zod.run({ value: item, issues: [] }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleSetResult(result, payload)));\n            }\n            else\n                handleSetResult(result, payload);\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleSetResult(result, final) {\n    if (result.issues.length) {\n        final.issues.push(...result.issues);\n    }\n    final.value.add(result.value);\n}\nexport const $ZodEnum = /*@__PURE__*/ core.$constructor(\"$ZodEnum\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const values = util.getEnumValues(def.entries);\n    const valuesSet = new Set(values);\n    inst._zod.values = valuesSet;\n    inst._zod.pattern = new RegExp(`^(${values\n        .filter((k) => util.propertyKeyTypes.has(typeof k))\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o.toString()))\n        .join(\"|\")})$`);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (valuesSet.has(input)) {\n            return payload;\n        }\n        payload.issues.push({\n            code: \"invalid_value\",\n            values,\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodLiteral = /*@__PURE__*/ core.$constructor(\"$ZodLiteral\", (inst, def) => {\n    $ZodType.init(inst, def);\n    if (def.values.length === 0) {\n        throw new Error(\"Cannot create literal schema with no valid values\");\n    }\n    inst._zod.values = new Set(def.values);\n    inst._zod.pattern = new RegExp(`^(${def.values\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o ? util.escapeRegex(o.toString()) : String(o)))\n        .join(\"|\")})$`);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (inst._zod.values.has(input)) {\n            return payload;\n        }\n        payload.issues.push({\n            code: \"invalid_value\",\n            values: def.values,\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodFile = /*@__PURE__*/ core.$constructor(\"$ZodFile\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        // @ts-ignore\n        if (input instanceof File)\n            return payload;\n        payload.issues.push({\n            expected: \"file\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodTransform = /*@__PURE__*/ core.$constructor(\"$ZodTransform\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            throw new core.$ZodEncodeError(inst.constructor.name);\n        }\n        const _out = def.transform(payload.value, payload);\n        if (ctx.async) {\n            const output = _out instanceof Promise ? _out : Promise.resolve(_out);\n            return output.then((output) => {\n                payload.value = output;\n                return payload;\n            });\n        }\n        if (_out instanceof Promise) {\n            throw new core.$ZodAsyncError();\n        }\n        payload.value = _out;\n        return payload;\n    };\n});\nfunction handleOptionalResult(result, input) {\n    if (result.issues.length && input === undefined) {\n        return { issues: [], value: undefined };\n    }\n    return result;\n}\nexport const $ZodOptional = /*@__PURE__*/ core.$constructor(\"$ZodOptional\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.optin = \"optional\";\n    inst._zod.optout = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => {\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, undefined]) : undefined;\n    });\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        const pattern = def.innerType._zod.pattern;\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)})?$`) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        if (def.innerType._zod.optin === \"optional\") {\n            const result = def.innerType._zod.run(payload, ctx);\n            if (result instanceof Promise)\n                return result.then((r) => handleOptionalResult(r, payload.value));\n            return handleOptionalResult(result, payload.value);\n        }\n        if (payload.value === undefined) {\n            return payload;\n        }\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodNullable = /*@__PURE__*/ core.$constructor(\"$ZodNullable\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        const pattern = def.innerType._zod.pattern;\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)}|null)$`) : undefined;\n    });\n    util.defineLazy(inst._zod, \"values\", () => {\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, null]) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        // Forward direction (decode): allow null to pass through\n        if (payload.value === null)\n            return payload;\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodDefault = /*@__PURE__*/ core.$constructor(\"$ZodDefault\", (inst, def) => {\n    $ZodType.init(inst, def);\n    // inst._zod.qin = \"true\";\n    inst._zod.optin = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            return def.innerType._zod.run(payload, ctx);\n        }\n        // Forward direction (decode): apply defaults for undefined input\n        if (payload.value === undefined) {\n            payload.value = def.defaultValue;\n            /**\n             * $ZodDefault returns the default value immediately in forward direction.\n             * It doesn't pass the default value into the validator (\"prefault\"). There's no reason to pass the default value through validation. The validity of the default is enforced by TypeScript statically. Otherwise, it's the responsibility of the user to ensure the default is valid. In the case of pipes with divergent in/out types, you can specify the default on the `in` schema of your ZodPipe to set a \"prefault\" for the pipe.   */\n            return payload;\n        }\n        // Forward direction: continue with default handling\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => handleDefaultResult(result, def));\n        }\n        return handleDefaultResult(result, def);\n    };\n});\nfunction handleDefaultResult(payload, def) {\n    if (payload.value === undefined) {\n        payload.value = def.defaultValue;\n    }\n    return payload;\n}\nexport const $ZodPrefault = /*@__PURE__*/ core.$constructor(\"$ZodPrefault\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.optin = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            return def.innerType._zod.run(payload, ctx);\n        }\n        // Forward direction (decode): apply prefault for undefined input\n        if (payload.value === undefined) {\n            payload.value = def.defaultValue;\n        }\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodNonOptional = /*@__PURE__*/ core.$constructor(\"$ZodNonOptional\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => {\n        const v = def.innerType._zod.values;\n        return v ? new Set([...v].filter((x) => x !== undefined)) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => handleNonOptionalResult(result, inst));\n        }\n        return handleNonOptionalResult(result, inst);\n    };\n});\nfunction handleNonOptionalResult(payload, inst) {\n    if (!payload.issues.length && payload.value === undefined) {\n        payload.issues.push({\n            code: \"invalid_type\",\n            expected: \"nonoptional\",\n            input: payload.value,\n            inst,\n        });\n    }\n    return payload;\n}\nexport const $ZodSuccess = /*@__PURE__*/ core.$constructor(\"$ZodSuccess\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            throw new core.$ZodEncodeError(\"ZodSuccess\");\n        }\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => {\n                payload.value = result.issues.length === 0;\n                return payload;\n            });\n        }\n        payload.value = result.issues.length === 0;\n        return payload;\n    };\n});\nexport const $ZodCatch = /*@__PURE__*/ core.$constructor(\"$ZodCatch\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            return def.innerType._zod.run(payload, ctx);\n        }\n        // Forward direction (decode): apply catch logic\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => {\n                payload.value = result.value;\n                if (result.issues.length) {\n                    payload.value = def.catchValue({\n                        ...payload,\n                        error: {\n                            issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                        },\n                        input: payload.value,\n                    });\n                    payload.issues = [];\n                }\n                return payload;\n            });\n        }\n        payload.value = result.value;\n        if (result.issues.length) {\n            payload.value = def.catchValue({\n                ...payload,\n                error: {\n                    issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                },\n                input: payload.value,\n            });\n            payload.issues = [];\n        }\n        return payload;\n    };\n});\nexport const $ZodNaN = /*@__PURE__*/ core.$constructor(\"$ZodNaN\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"number\" || !Number.isNaN(payload.value)) {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                expected: \"nan\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        return payload;\n    };\n});\nexport const $ZodPipe = /*@__PURE__*/ core.$constructor(\"$ZodPipe\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => def.in._zod.values);\n    util.defineLazy(inst._zod, \"optin\", () => def.in._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.out._zod.optout);\n    util.defineLazy(inst._zod, \"propValues\", () => def.in._zod.propValues);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            const right = def.out._zod.run(payload, ctx);\n            if (right instanceof Promise) {\n                return right.then((right) => handlePipeResult(right, def.in, ctx));\n            }\n            return handlePipeResult(right, def.in, ctx);\n        }\n        const left = def.in._zod.run(payload, ctx);\n        if (left instanceof Promise) {\n            return left.then((left) => handlePipeResult(left, def.out, ctx));\n        }\n        return handlePipeResult(left, def.out, ctx);\n    };\n});\nfunction handlePipeResult(left, next, ctx) {\n    if (left.issues.length) {\n        // prevent further checks\n        left.aborted = true;\n        return left;\n    }\n    return next._zod.run({ value: left.value, issues: left.issues }, ctx);\n}\nexport const $ZodCodec = /*@__PURE__*/ core.$constructor(\"$ZodCodec\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => def.in._zod.values);\n    util.defineLazy(inst._zod, \"optin\", () => def.in._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.out._zod.optout);\n    util.defineLazy(inst._zod, \"propValues\", () => def.in._zod.propValues);\n    inst._zod.parse = (payload, ctx) => {\n        const direction = ctx.direction || \"forward\";\n        if (direction === \"forward\") {\n            const left = def.in._zod.run(payload, ctx);\n            if (left instanceof Promise) {\n                return left.then((left) => handleCodecAResult(left, def, ctx));\n            }\n            return handleCodecAResult(left, def, ctx);\n        }\n        else {\n            const right = def.out._zod.run(payload, ctx);\n            if (right instanceof Promise) {\n                return right.then((right) => handleCodecAResult(right, def, ctx));\n            }\n            return handleCodecAResult(right, def, ctx);\n        }\n    };\n});\nfunction handleCodecAResult(result, def, ctx) {\n    if (result.issues.length) {\n        // prevent further checks\n        result.aborted = true;\n        return result;\n    }\n    const direction = ctx.direction || \"forward\";\n    if (direction === \"forward\") {\n        const transformed = def.transform(result.value, result);\n        if (transformed instanceof Promise) {\n            return transformed.then((value) => handleCodecTxResult(result, value, def.out, ctx));\n        }\n        return handleCodecTxResult(result, transformed, def.out, ctx);\n    }\n    else {\n        const transformed = def.reverseTransform(result.value, result);\n        if (transformed instanceof Promise) {\n            return transformed.then((value) => handleCodecTxResult(result, value, def.in, ctx));\n        }\n        return handleCodecTxResult(result, transformed, def.in, ctx);\n    }\n}\nfunction handleCodecTxResult(left, value, nextSchema, ctx) {\n    // Check if transform added any issues\n    if (left.issues.length) {\n        left.aborted = true;\n        return left;\n    }\n    return nextSchema._zod.run({ value, issues: left.issues }, ctx);\n}\nexport const $ZodReadonly = /*@__PURE__*/ core.$constructor(\"$ZodReadonly\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"propValues\", () => def.innerType._zod.propValues);\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    inst._zod.parse = (payload, ctx) => {\n        if (ctx.direction === \"backward\") {\n            return def.innerType._zod.run(payload, ctx);\n        }\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then(handleReadonlyResult);\n        }\n        return handleReadonlyResult(result);\n    };\n});\nfunction handleReadonlyResult(payload) {\n    payload.value = Object.freeze(payload.value);\n    return payload;\n}\nexport const $ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"$ZodTemplateLiteral\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const regexParts = [];\n    for (const part of def.parts) {\n        if (typeof part === \"object\" && part !== null) {\n            // is Zod schema\n            if (!part._zod.pattern) {\n                // if (!source)\n                throw new Error(`Invalid template literal part, no pattern found: ${[...part._zod.traits].shift()}`);\n            }\n            const source = part._zod.pattern instanceof RegExp ? part._zod.pattern.source : part._zod.pattern;\n            if (!source)\n                throw new Error(`Invalid template literal part: ${part._zod.traits}`);\n            const start = source.startsWith(\"^\") ? 1 : 0;\n            const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\n            regexParts.push(source.slice(start, end));\n        }\n        else if (part === null || util.primitiveTypes.has(typeof part)) {\n            regexParts.push(util.escapeRegex(`${part}`));\n        }\n        else {\n            throw new Error(`Invalid template literal part: ${part}`);\n        }\n    }\n    inst._zod.pattern = new RegExp(`^${regexParts.join(\"\")}$`);\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"string\") {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                expected: \"template_literal\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        inst._zod.pattern.lastIndex = 0;\n        if (!inst._zod.pattern.test(payload.value)) {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                code: \"invalid_format\",\n                format: def.format ?? \"template_literal\",\n                pattern: inst._zod.pattern.source,\n            });\n            return payload;\n        }\n        return payload;\n    };\n});\nexport const $ZodFunction = /*@__PURE__*/ core.$constructor(\"$ZodFunction\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._def = def;\n    inst._zod.def = def;\n    inst.implement = (func) => {\n        if (typeof func !== \"function\") {\n            throw new Error(\"implement() must be called with a function\");\n        }\n        return function (...args) {\n            const parsedArgs = inst._def.input ? parse(inst._def.input, args) : args;\n            const result = Reflect.apply(func, this, parsedArgs);\n            if (inst._def.output) {\n                return parse(inst._def.output, result);\n            }\n            return result;\n        };\n    };\n    inst.implementAsync = (func) => {\n        if (typeof func !== \"function\") {\n            throw new Error(\"implementAsync() must be called with a function\");\n        }\n        return async function (...args) {\n            const parsedArgs = inst._def.input ? await parseAsync(inst._def.input, args) : args;\n            const result = await Reflect.apply(func, this, parsedArgs);\n            if (inst._def.output) {\n                return await parseAsync(inst._def.output, result);\n            }\n            return result;\n        };\n    };\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"function\") {\n            payload.issues.push({\n                code: \"invalid_type\",\n                expected: \"function\",\n                input: payload.value,\n                inst,\n            });\n            return payload;\n        }\n        // Check if output is a promise type to determine if we should use async implementation\n        const hasPromiseOutput = inst._def.output && inst._def.output._zod.def.type === \"promise\";\n        if (hasPromiseOutput) {\n            payload.value = inst.implementAsync(payload.value);\n        }\n        else {\n            payload.value = inst.implement(payload.value);\n        }\n        return payload;\n    };\n    inst.input = (...args) => {\n        const F = inst.constructor;\n        if (Array.isArray(args[0])) {\n            return new F({\n                type: \"function\",\n                input: new $ZodTuple({\n                    type: \"tuple\",\n                    items: args[0],\n                    rest: args[1],\n                }),\n                output: inst._def.output,\n            });\n        }\n        return new F({\n            type: \"function\",\n            input: args[0],\n            output: inst._def.output,\n        });\n    };\n    inst.output = (output) => {\n        const F = inst.constructor;\n        return new F({\n            type: \"function\",\n            input: inst._def.input,\n            output,\n        });\n    };\n    return inst;\n});\nexport const $ZodPromise = /*@__PURE__*/ core.$constructor(\"$ZodPromise\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        return Promise.resolve(payload.value).then((inner) => def.innerType._zod.run({ value: inner, issues: [] }, ctx));\n    };\n});\nexport const $ZodLazy = /*@__PURE__*/ core.$constructor(\"$ZodLazy\", (inst, def) => {\n    $ZodType.init(inst, def);\n    // let _innerType!: any;\n    // util.defineLazy(def, \"getter\", () => {\n    //   if (!_innerType) {\n    //     _innerType = def.getter();\n    //   }\n    //   return () => _innerType;\n    // });\n    util.defineLazy(inst._zod, \"innerType\", () => def.getter());\n    util.defineLazy(inst._zod, \"pattern\", () => inst._zod.innerType._zod.pattern);\n    util.defineLazy(inst._zod, \"propValues\", () => inst._zod.innerType._zod.propValues);\n    util.defineLazy(inst._zod, \"optin\", () => inst._zod.innerType._zod.optin ?? undefined);\n    util.defineLazy(inst._zod, \"optout\", () => inst._zod.innerType._zod.optout ?? undefined);\n    inst._zod.parse = (payload, ctx) => {\n        const inner = inst._zod.innerType;\n        return inner._zod.run(payload, ctx);\n    };\n});\nexport const $ZodCustom = /*@__PURE__*/ core.$constructor(\"$ZodCustom\", (inst, def) => {\n    checks.$ZodCheck.init(inst, def);\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _) => {\n        return payload;\n    };\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const r = def.fn(input);\n        if (r instanceof Promise) {\n            return r.then((r) => handleRefineResult(r, payload, input, inst));\n        }\n        handleRefineResult(r, payload, input, inst);\n        return;\n    };\n});\nfunction handleRefineResult(result, payload, input, inst) {\n    if (!result) {\n        const _iss = {\n            code: \"custom\",\n            input,\n            inst, // incorporates params.error into issue reporting\n            path: [...(inst._zod.def.path ?? [])], // incorporates params.error into issue reporting\n            continue: !inst._zod.def.abort,\n            // params: inst._zod.def.params,\n        };\n        if (inst._zod.def.params)\n            _iss.params = inst._zod.def.params;\n        payload.issues.push(util.issue(_iss));\n    }\n}\n", "// import { $ZodType } from \"./schemas.js\";\nimport * as core from \"./core.js\";\nimport * as regexes from \"./regexes.js\";\nimport * as util from \"./util.js\";\nexport const $ZodCheck = /*@__PURE__*/ core.$constructor(\"$ZodCheck\", (inst, def) => {\n    var _a;\n    inst._zod ?? (inst._zod = {});\n    inst._zod.def = def;\n    (_a = inst._zod).onattach ?? (_a.onattach = []);\n});\nconst numericOriginMap = {\n    number: \"number\",\n    bigint: \"bigint\",\n    object: \"date\",\n};\nexport const $ZodCheckLessThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckLessThan\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const origin = numericOriginMap[typeof def.value];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        const curr = (def.inclusive ? bag.maximum : bag.exclusiveMaximum) ?? Number.POSITIVE_INFINITY;\n        if (def.value < curr) {\n            if (def.inclusive)\n                bag.maximum = def.value;\n            else\n                bag.exclusiveMaximum = def.value;\n        }\n    });\n    inst._zod.check = (payload) => {\n        if (def.inclusive ? payload.value <= def.value : payload.value < def.value) {\n            return;\n        }\n        payload.issues.push({\n            origin,\n            code: \"too_big\",\n            maximum: def.value,\n            input: payload.value,\n            inclusive: def.inclusive,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckGreaterThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckGreaterThan\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const origin = numericOriginMap[typeof def.value];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        const curr = (def.inclusive ? bag.minimum : bag.exclusiveMinimum) ?? Number.NEGATIVE_INFINITY;\n        if (def.value > curr) {\n            if (def.inclusive)\n                bag.minimum = def.value;\n            else\n                bag.exclusiveMinimum = def.value;\n        }\n    });\n    inst._zod.check = (payload) => {\n        if (def.inclusive ? payload.value >= def.value : payload.value > def.value) {\n            return;\n        }\n        payload.issues.push({\n            origin,\n            code: \"too_small\",\n            minimum: def.value,\n            input: payload.value,\n            inclusive: def.inclusive,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMultipleOf = \n/*@__PURE__*/ core.$constructor(\"$ZodCheckMultipleOf\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        var _a;\n        (_a = inst._zod.bag).multipleOf ?? (_a.multipleOf = def.value);\n    });\n    inst._zod.check = (payload) => {\n        if (typeof payload.value !== typeof def.value)\n            throw new Error(\"Cannot mix number and bigint in multiple_of check.\");\n        const isMultiple = typeof payload.value === \"bigint\"\n            ? payload.value % def.value === BigInt(0)\n            : util.floatSafeRemainder(payload.value, def.value) === 0;\n        if (isMultiple)\n            return;\n        payload.issues.push({\n            origin: typeof payload.value,\n            code: \"not_multiple_of\",\n            divisor: def.value,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckNumberFormat\", (inst, def) => {\n    $ZodCheck.init(inst, def); // no format checks\n    def.format = def.format || \"float64\";\n    const isInt = def.format?.includes(\"int\");\n    const origin = isInt ? \"int\" : \"number\";\n    const [minimum, maximum] = util.NUMBER_FORMAT_RANGES[def.format];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        bag.minimum = minimum;\n        bag.maximum = maximum;\n        if (isInt)\n            bag.pattern = regexes.integer;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        if (isInt) {\n            if (!Number.isInteger(input)) {\n                // invalid_format issue\n                // payload.issues.push({\n                //   expected: def.format,\n                //   format: def.format,\n                //   code: \"invalid_format\",\n                //   input,\n                //   inst,\n                // });\n                // invalid_type issue\n                payload.issues.push({\n                    expected: origin,\n                    format: def.format,\n                    code: \"invalid_type\",\n                    continue: false,\n                    input,\n                    inst,\n                });\n                return;\n                // not_multiple_of issue\n                // payload.issues.push({\n                //   code: \"not_multiple_of\",\n                //   origin: \"number\",\n                //   input,\n                //   inst,\n                //   divisor: 1,\n                // });\n            }\n            if (!Number.isSafeInteger(input)) {\n                if (input > 0) {\n                    // too_big\n                    payload.issues.push({\n                        input,\n                        code: \"too_big\",\n                        maximum: Number.MAX_SAFE_INTEGER,\n                        note: \"Integers must be within the safe integer range.\",\n                        inst,\n                        origin,\n                        continue: !def.abort,\n                    });\n                }\n                else {\n                    // too_small\n                    payload.issues.push({\n                        input,\n                        code: \"too_small\",\n                        minimum: Number.MIN_SAFE_INTEGER,\n                        note: \"Integers must be within the safe integer range.\",\n                        inst,\n                        origin,\n                        continue: !def.abort,\n                    });\n                }\n                return;\n            }\n        }\n        if (input < minimum) {\n            payload.issues.push({\n                origin: \"number\",\n                input,\n                code: \"too_small\",\n                minimum,\n                inclusive: true,\n                inst,\n                continue: !def.abort,\n            });\n        }\n        if (input > maximum) {\n            payload.issues.push({\n                origin: \"number\",\n                input,\n                code: \"too_big\",\n                maximum,\n                inst,\n            });\n        }\n    };\n});\nexport const $ZodCheckBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckBigIntFormat\", (inst, def) => {\n    $ZodCheck.init(inst, def); // no format checks\n    const [minimum, maximum] = util.BIGINT_FORMAT_RANGES[def.format];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        bag.minimum = minimum;\n        bag.maximum = maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        if (input < minimum) {\n            payload.issues.push({\n                origin: \"bigint\",\n                input,\n                code: \"too_small\",\n                minimum: minimum,\n                inclusive: true,\n                inst,\n                continue: !def.abort,\n            });\n        }\n        if (input > maximum) {\n            payload.issues.push({\n                origin: \"bigint\",\n                input,\n                code: \"too_big\",\n                maximum,\n                inst,\n            });\n        }\n    };\n});\nexport const $ZodCheckMaxSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxSize\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\n        if (def.maximum < curr)\n            inst._zod.bag.maximum = def.maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size <= def.maximum)\n            return;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            code: \"too_big\",\n            maximum: def.maximum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMinSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinSize\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\n        if (def.minimum > curr)\n            inst._zod.bag.minimum = def.minimum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size >= def.minimum)\n            return;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            code: \"too_small\",\n            minimum: def.minimum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckSizeEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckSizeEquals\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.minimum = def.size;\n        bag.maximum = def.size;\n        bag.size = def.size;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size === def.size)\n            return;\n        const tooBig = size > def.size;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            ...(tooBig ? { code: \"too_big\", maximum: def.size } : { code: \"too_small\", minimum: def.size }),\n            inclusive: true,\n            exact: true,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMaxLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxLength\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\n        if (def.maximum < curr)\n            inst._zod.bag.maximum = def.maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length <= def.maximum)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        payload.issues.push({\n            origin,\n            code: \"too_big\",\n            maximum: def.maximum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMinLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinLength\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\n        if (def.minimum > curr)\n            inst._zod.bag.minimum = def.minimum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length >= def.minimum)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        payload.issues.push({\n            origin,\n            code: \"too_small\",\n            minimum: def.minimum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckLengthEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckLengthEquals\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.minimum = def.length;\n        bag.maximum = def.length;\n        bag.length = def.length;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length === def.length)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        const tooBig = length > def.length;\n        payload.issues.push({\n            origin,\n            ...(tooBig ? { code: \"too_big\", maximum: def.length } : { code: \"too_small\", minimum: def.length }),\n            inclusive: true,\n            exact: true,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckStringFormat\", (inst, def) => {\n    var _a, _b;\n    $ZodCheck.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        if (def.pattern) {\n            bag.patterns ?? (bag.patterns = new Set());\n            bag.patterns.add(def.pattern);\n        }\n    });\n    if (def.pattern)\n        (_a = inst._zod).check ?? (_a.check = (payload) => {\n            def.pattern.lastIndex = 0;\n            if (def.pattern.test(payload.value))\n                return;\n            payload.issues.push({\n                origin: \"string\",\n                code: \"invalid_format\",\n                format: def.format,\n                input: payload.value,\n                ...(def.pattern ? { pattern: def.pattern.toString() } : {}),\n                inst,\n                continue: !def.abort,\n            });\n        });\n    else\n        (_b = inst._zod).check ?? (_b.check = () => { });\n});\nexport const $ZodCheckRegex = /*@__PURE__*/ core.$constructor(\"$ZodCheckRegex\", (inst, def) => {\n    $ZodCheckStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        def.pattern.lastIndex = 0;\n        if (def.pattern.test(payload.value))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"regex\",\n            input: payload.value,\n            pattern: def.pattern.toString(),\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckLowerCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckLowerCase\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.lowercase);\n    $ZodCheckStringFormat.init(inst, def);\n});\nexport const $ZodCheckUpperCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckUpperCase\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.uppercase);\n    $ZodCheckStringFormat.init(inst, def);\n});\nexport const $ZodCheckIncludes = /*@__PURE__*/ core.$constructor(\"$ZodCheckIncludes\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const escapedRegex = util.escapeRegex(def.includes);\n    const pattern = new RegExp(typeof def.position === \"number\" ? `^.{${def.position}}${escapedRegex}` : escapedRegex);\n    def.pattern = pattern;\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.includes(def.includes, def.position))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"includes\",\n            includes: def.includes,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckStartsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckStartsWith\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const pattern = new RegExp(`^${util.escapeRegex(def.prefix)}.*`);\n    def.pattern ?? (def.pattern = pattern);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.startsWith(def.prefix))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"starts_with\",\n            prefix: def.prefix,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckEndsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckEndsWith\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const pattern = new RegExp(`.*${util.escapeRegex(def.suffix)}$`);\n    def.pattern ?? (def.pattern = pattern);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.endsWith(def.suffix))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"ends_with\",\n            suffix: def.suffix,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\n///////////////////////////////////\n/////    $ZodCheckProperty    /////\n///////////////////////////////////\nfunction handleCheckPropertyResult(result, payload, property) {\n    if (result.issues.length) {\n        payload.issues.push(...util.prefixIssues(property, result.issues));\n    }\n}\nexport const $ZodCheckProperty = /*@__PURE__*/ core.$constructor(\"$ZodCheckProperty\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.check = (payload) => {\n        const result = def.schema._zod.run({\n            value: payload.value[def.property],\n            issues: [],\n        }, {});\n        if (result instanceof Promise) {\n            return result.then((result) => handleCheckPropertyResult(result, payload, def.property));\n        }\n        handleCheckPropertyResult(result, payload, def.property);\n        return;\n    };\n});\nexport const $ZodCheckMimeType = /*@__PURE__*/ core.$constructor(\"$ZodCheckMimeType\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const mimeSet = new Set(def.mime);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.mime = def.mime;\n    });\n    inst._zod.check = (payload) => {\n        if (mimeSet.has(payload.value.type))\n            return;\n        payload.issues.push({\n            code: \"invalid_value\",\n            values: def.mime,\n            input: payload.value.type,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckOverwrite = /*@__PURE__*/ core.$constructor(\"$ZodCheckOverwrite\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.check = (payload) => {\n        payload.value = def.tx(payload.value);\n    };\n});\n", "export const cuid = /^[cC][^\\s-]{8,}$/;\nexport const cuid2 = /^[0-9a-z]+$/;\nexport const ulid = /^[0-9A-HJKMNP-TV-Za-hjkmnp-tv-z]{26}$/;\nexport const xid = /^[0-9a-vA-V]{20}$/;\nexport const ksuid = /^[A-Za-z0-9]{27}$/;\nexport const nanoid = /^[a-zA-Z0-9_-]{21}$/;\n/** ISO 8601-1 duration regex. Does not support the 8601-2 extensions like negative durations or fractional/negative components. */\nexport const duration = /^P(?:(\\d+W)|(?!.*W)(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+([.,]\\d+)?S)?)?)$/;\n/** Implements ISO 8601-2 extensions like explicit +- prefixes, mixing weeks with other units, and fractional/negative components. */\nexport const extendedDuration = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n/** A regex for any UUID-like identifier: 8-4-4-4-12 hex pattern */\nexport const guid = /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})$/;\n/** Returns a regex for validating an RFC 9562/4122 UUID.\n *\n * @param version Optionally specify a version 1-8. If no version is specified, all versions are supported. */\nexport const uuid = (version) => {\n    if (!version)\n        return /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/;\n    return new RegExp(`^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-${version}[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12})$`);\n};\nexport const uuid4 = /*@__PURE__*/ uuid(4);\nexport const uuid6 = /*@__PURE__*/ uuid(6);\nexport const uuid7 = /*@__PURE__*/ uuid(7);\n/** Practical email validation */\nexport const email = /^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$/;\n/** Equivalent to the HTML5 input[type=email] validation implemented by browsers. Source: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email */\nexport const html5Email = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/** The classic emailregex.com regex for RFC 5322-compliant emails */\nexport const rfc5322Email = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n/** A loose regex that allows Unicode characters, enforces length limits, and that's about it. */\nexport const unicodeEmail = /^[^\\s@\"]{1,64}@[^\\s@]{1,255}$/u;\nexport const idnEmail = unicodeEmail;\nexport const browserEmail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emoji = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nexport function emoji() {\n    return new RegExp(_emoji, \"u\");\n}\nexport const ipv4 = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nexport const ipv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$/;\nexport const cidrv4 = /^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/([0-9]|[1-2][0-9]|3[0-2])$/;\nexport const cidrv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nexport const base64 = /^$|^(?:[0-9a-zA-Z+/]{4})*(?:(?:[0-9a-zA-Z+/]{2}==)|(?:[0-9a-zA-Z+/]{3}=))?$/;\nexport const base64url = /^[A-Za-z0-9_-]*$/;\n// based on https://stackoverflow.com/questions/106179/regular-expression-to-match-dns-hostname-or-ip-address\n// export const hostname: RegExp = /^([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+$/;\nexport const hostname = /^(?=.{1,253}\\.?$)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[-0-9a-zA-Z]{0,61}[0-9a-zA-Z])?)*\\.?$/;\nexport const domain = /^([a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$/;\n// https://blog.stevenlevithan.com/archives/validate-phone-number#r4-3 (regex sans spaces)\nexport const e164 = /^\\+(?:[0-9]){6,14}[0-9]$/;\n// const dateSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateSource = `(?:(?:\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\\\d|30)|(?:02)-(?:0[1-9]|1\\\\d|2[0-8])))`;\nexport const date = /*@__PURE__*/ new RegExp(`^${dateSource}$`);\nfunction timeSource(args) {\n    const hhmm = `(?:[01]\\\\d|2[0-3]):[0-5]\\\\d`;\n    const regex = typeof args.precision === \"number\"\n        ? args.precision === -1\n            ? `${hhmm}`\n            : args.precision === 0\n                ? `${hhmm}:[0-5]\\\\d`\n                : `${hhmm}:[0-5]\\\\d\\\\.\\\\d{${args.precision}}`\n        : `${hhmm}(?::[0-5]\\\\d(?:\\\\.\\\\d+)?)?`;\n    return regex;\n}\nexport function time(args) {\n    return new RegExp(`^${timeSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetime(args) {\n    const time = timeSource({ precision: args.precision });\n    const opts = [\"Z\"];\n    if (args.local)\n        opts.push(\"\");\n    // if (args.offset) opts.push(`([+-]\\\\d{2}:\\\\d{2})`);\n    if (args.offset)\n        opts.push(`([+-](?:[01]\\\\d|2[0-3]):[0-5]\\\\d)`);\n    const timeRegex = `${time}(?:${opts.join(\"|\")})`;\n    return new RegExp(`^${dateSource}T(?:${timeRegex})$`);\n}\nexport const string = (params) => {\n    const regex = params ? `[\\\\s\\\\S]{${params?.minimum ?? 0},${params?.maximum ?? \"\"}}` : `[\\\\s\\\\S]*`;\n    return new RegExp(`^${regex}$`);\n};\nexport const bigint = /^-?\\d+n?$/;\nexport const integer = /^-?\\d+$/;\nexport const number = /^-?\\d+(?:\\.\\d+)?/;\nexport const boolean = /^(?:true|false)$/i;\nconst _null = /^null$/i;\nexport { _null as null };\nconst _undefined = /^undefined$/i;\nexport { _undefined as undefined };\n// regex for string with no uppercase letters\nexport const lowercase = /^[^A-Z]*$/;\n// regex for string with no lowercase letters\nexport const uppercase = /^[^a-z]*$/;\n// regex for hexadecimal strings (any length)\nexport const hex = /^[0-9a-fA-F]*$/;\n// Hash regexes for different algorithms and encodings\n// Helper function to create base64 regex with exact length and padding\nfunction fixedBase64(bodyLength, padding) {\n    return new RegExp(`^[A-Za-z0-9+/]{${bodyLength}}${padding}$`);\n}\n// Helper function to create base64url regex with exact length (no padding)\nfunction fixedBase64url(length) {\n    return new RegExp(`^[A-Za-z0-9_-]{${length}}$`);\n}\n// MD5 (16 bytes): base64 = 24 chars total (22 + \"==\")\nexport const md5_hex = /^[0-9a-fA-F]{32}$/;\nexport const md5_base64 = /*@__PURE__*/ fixedBase64(22, \"==\");\nexport const md5_base64url = /*@__PURE__*/ fixedBase64url(22);\n// SHA1 (20 bytes): base64 = 28 chars total (27 + \"=\")\nexport const sha1_hex = /^[0-9a-fA-F]{40}$/;\nexport const sha1_base64 = /*@__PURE__*/ fixedBase64(27, \"=\");\nexport const sha1_base64url = /*@__PURE__*/ fixedBase64url(27);\n// SHA256 (32 bytes): base64 = 44 chars total (43 + \"=\")\nexport const sha256_hex = /^[0-9a-fA-F]{64}$/;\nexport const sha256_base64 = /*@__PURE__*/ fixedBase64(43, \"=\");\nexport const sha256_base64url = /*@__PURE__*/ fixedBase64url(43);\n// SHA384 (48 bytes): base64 = 64 chars total (no padding)\nexport const sha384_hex = /^[0-9a-fA-F]{96}$/;\nexport const sha384_base64 = /*@__PURE__*/ fixedBase64(64, \"\");\nexport const sha384_base64url = /*@__PURE__*/ fixedBase64url(64);\n// SHA512 (64 bytes): base64 = 88 chars total (86 + \"==\")\nexport const sha512_hex = /^[0-9a-fA-F]{128}$/;\nexport const sha512_base64 = /*@__PURE__*/ fixedBase64(86, \"==\");\nexport const sha512_base64url = /*@__PURE__*/ fixedBase64url(86);\n", "export class Doc {\n    constructor(args = []) {\n        this.content = [];\n        this.indent = 0;\n        if (this)\n            this.args = args;\n    }\n    indented(fn) {\n        this.indent += 1;\n        fn(this);\n        this.indent -= 1;\n    }\n    write(arg) {\n        if (typeof arg === \"function\") {\n            arg(this, { execution: \"sync\" });\n            arg(this, { execution: \"async\" });\n            return;\n        }\n        const content = arg;\n        const lines = content.split(\"\\n\").filter((x) => x);\n        const minIndent = Math.min(...lines.map((x) => x.length - x.trimStart().length));\n        const dedented = lines.map((x) => x.slice(minIndent)).map((x) => \" \".repeat(this.indent * 2) + x);\n        for (const line of dedented) {\n            this.content.push(line);\n        }\n    }\n    compile() {\n        const F = Function;\n        const args = this?.args;\n        const content = this?.content ?? [``];\n        const lines = [...content.map((x) => `  ${x}`)];\n        // console.log(lines.join(\"\\n\"));\n        return new F(...args, lines.join(\"\\n\"));\n    }\n}\n", "export const version = {\n    major: 4,\n    minor: 1,\n    patch: 12,\n};\n", "export { default as ar } from \"./ar.js\";\nexport { default as az } from \"./az.js\";\nexport { default as be } from \"./be.js\";\nexport { default as bg } from \"./bg.js\";\nexport { default as ca } from \"./ca.js\";\nexport { default as cs } from \"./cs.js\";\nexport { default as da } from \"./da.js\";\nexport { default as de } from \"./de.js\";\nexport { default as en } from \"./en.js\";\nexport { default as eo } from \"./eo.js\";\nexport { default as es } from \"./es.js\";\nexport { default as fa } from \"./fa.js\";\nexport { default as fi } from \"./fi.js\";\nexport { default as fr } from \"./fr.js\";\nexport { default as frCA } from \"./fr-CA.js\";\nexport { default as he } from \"./he.js\";\nexport { default as hu } from \"./hu.js\";\nexport { default as id } from \"./id.js\";\nexport { default as is } from \"./is.js\";\nexport { default as it } from \"./it.js\";\nexport { default as ja } from \"./ja.js\";\nexport { default as ka } from \"./ka.js\";\nexport { default as kh } from \"./kh.js\";\nexport { default as km } from \"./km.js\";\nexport { default as ko } from \"./ko.js\";\nexport { default as lt } from \"./lt.js\";\nexport { default as mk } from \"./mk.js\";\nexport { default as ms } from \"./ms.js\";\nexport { default as nl } from \"./nl.js\";\nexport { default as no } from \"./no.js\";\nexport { default as ota } from \"./ota.js\";\nexport { default as ps } from \"./ps.js\";\nexport { default as pl } from \"./pl.js\";\nexport { default as pt } from \"./pt.js\";\nexport { default as ru } from \"./ru.js\";\nexport { default as sl } from \"./sl.js\";\nexport { default as sv } from \"./sv.js\";\nexport { default as ta } from \"./ta.js\";\nexport { default as th } from \"./th.js\";\nexport { default as tr } from \"./tr.js\";\nexport { default as ua } from \"./ua.js\";\nexport { default as uk } from \"./uk.js\";\nexport { default as ur } from \"./ur.js\";\nexport { default as vi } from \"./vi.js\";\nexport { default as zhCN } from \"./zh-CN.js\";\nexport { default as zhTW } from \"./zh-TW.js\";\nexport { default as yo } from \"./yo.js\";\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u062D\u0631\u0641\", verb: \"\u0623\u0646 \u064A\u062D\u0648\u064A\" },\n        file: { unit: \"\u0628\u0627\u064A\u062A\", verb: \"\u0623\u0646 \u064A\u062D\u0648\u064A\" },\n        array: { unit: \"\u0639\u0646\u0635\u0631\", verb: \"\u0623\u0646 \u064A\u062D\u0648\u064A\" },\n        set: { unit: \"\u0639\u0646\u0635\u0631\", verb: \"\u0623\u0646 \u064A\u062D\u0648\u064A\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u0645\u062F\u062E\u0644\",\n        email: \"\u0628\u0631\u064A\u062F \u0625\u0644\u0643\u062A\u0631\u0648\u0646\u064A\",\n        url: \"\u0631\u0627\u0628\u0637\",\n        emoji: \"\u0625\u064A\u0645\u0648\u062C\u064A\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"\u062A\u0627\u0631\u064A\u062E \u0648\u0648\u0642\u062A \u0628\u0645\u0639\u064A\u0627\u0631 ISO\",\n        date: \"\u062A\u0627\u0631\u064A\u062E \u0628\u0645\u0639\u064A\u0627\u0631 ISO\",\n        time: \"\u0648\u0642\u062A \u0628\u0645\u0639\u064A\u0627\u0631 ISO\",\n        duration: \"\u0645\u062F\u0629 \u0628\u0645\u0639\u064A\u0627\u0631 ISO\",\n        ipv4: \"\u0639\u0646\u0648\u0627\u0646 IPv4\",\n        ipv6: \"\u0639\u0646\u0648\u0627\u0646 IPv6\",\n        cidrv4: \"\u0645\u062F\u0649 \u0639\u0646\u0627\u0648\u064A\u0646 \u0628\u0635\u064A\u063A\u0629 IPv4\",\n        cidrv6: \"\u0645\u062F\u0649 \u0639\u0646\u0627\u0648\u064A\u0646 \u0628\u0635\u064A\u063A\u0629 IPv6\",\n        base64: \"\u0646\u064E\u0635 \u0628\u062A\u0631\u0645\u064A\u0632 base64-encoded\",\n        base64url: \"\u0646\u064E\u0635 \u0628\u062A\u0631\u0645\u064A\u0632 base64url-encoded\",\n        json_string: \"\u0646\u064E\u0635 \u0639\u0644\u0649 \u0647\u064A\u0626\u0629 JSON\",\n        e164: \"\u0631\u0642\u0645 \u0647\u0627\u062A\u0641 \u0628\u0645\u0639\u064A\u0627\u0631 E.164\",\n        jwt: \"JWT\",\n        template_literal: \"\u0645\u062F\u062E\u0644\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u0645\u062F\u062E\u0644\u0627\u062A \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644\u0629: \u064A\u0641\u062A\u0631\u0636 \u0625\u062F\u062E\u0627\u0644 ${issue.expected}\u060C \u0648\u0644\u0643\u0646 \u062A\u0645 \u0625\u062F\u062E\u0627\u0644 ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u0645\u062F\u062E\u0644\u0627\u062A \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644\u0629: \u064A\u0641\u062A\u0631\u0636 \u0625\u062F\u062E\u0627\u0644 ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u0627\u062E\u062A\u064A\u0627\u0631 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644: \u064A\u062A\u0648\u0642\u0639 \u0627\u0646\u062A\u0642\u0627\u0621 \u0623\u062D\u062F \u0647\u0630\u0647 \u0627\u0644\u062E\u064A\u0627\u0631\u0627\u062A: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return ` \u0623\u0643\u0628\u0631 \u0645\u0646 \u0627\u0644\u0644\u0627\u0632\u0645: \u064A\u0641\u062A\u0631\u0636 \u0623\u0646 \u062A\u0643\u0648\u0646 ${issue.origin ?? \"\u0627\u0644\u0642\u064A\u0645\u0629\"} ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"\u0639\u0646\u0635\u0631\"}`;\n                return `\u0623\u0643\u0628\u0631 \u0645\u0646 \u0627\u0644\u0644\u0627\u0632\u0645: \u064A\u0641\u062A\u0631\u0636 \u0623\u0646 \u062A\u0643\u0648\u0646 ${issue.origin ?? \"\u0627\u0644\u0642\u064A\u0645\u0629\"} ${adj} ${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u0623\u0635\u063A\u0631 \u0645\u0646 \u0627\u0644\u0644\u0627\u0632\u0645: \u064A\u0641\u062A\u0631\u0636 \u0644\u0640 ${issue.origin} \u0623\u0646 \u064A\u0643\u0648\u0646 ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `\u0623\u0635\u063A\u0631 \u0645\u0646 \u0627\u0644\u0644\u0627\u0632\u0645: \u064A\u0641\u062A\u0631\u0636 \u0644\u0640 ${issue.origin} \u0623\u0646 \u064A\u0643\u0648\u0646 ${adj} ${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `\u0646\u064E\u0635 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644: \u064A\u062C\u0628 \u0623\u0646 \u064A\u0628\u062F\u0623 \u0628\u0640 \"${issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `\u0646\u064E\u0635 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644: \u064A\u062C\u0628 \u0623\u0646 \u064A\u0646\u062A\u0647\u064A \u0628\u0640 \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `\u0646\u064E\u0635 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644: \u064A\u062C\u0628 \u0623\u0646 \u064A\u062A\u0636\u0645\u0651\u064E\u0646 \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `\u0646\u064E\u0635 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644: \u064A\u062C\u0628 \u0623\u0646 \u064A\u0637\u0627\u0628\u0642 \u0627\u0644\u0646\u0645\u0637 ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644`;\n            }\n            case \"not_multiple_of\":\n                return `\u0631\u0642\u0645 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644: \u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0645\u0646 \u0645\u0636\u0627\u0639\u0641\u0627\u062A ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `\u0645\u0639\u0631\u0641${issue.keys.length > 1 ? \"\u0627\u062A\" : \"\"} \u063A\u0631\u064A\u0628${issue.keys.length > 1 ? \"\u0629\" : \"\"}: ${util.joinValues(issue.keys, \"\u060C \")}`;\n            case \"invalid_key\":\n                return `\u0645\u0639\u0631\u0641 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644 \u0641\u064A ${issue.origin}`;\n            case \"invalid_union\":\n                return \"\u0645\u062F\u062E\u0644 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644\";\n            case \"invalid_element\":\n                return `\u0645\u062F\u062E\u0644 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644 \u0641\u064A ${issue.origin}`;\n            default:\n                return \"\u0645\u062F\u062E\u0644 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644\";\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"simvol\", verb: \"olmal\u0131d\u0131r\" },\n        file: { unit: \"bayt\", verb: \"olmal\u0131d\u0131r\" },\n        array: { unit: \"element\", verb: \"olmal\u0131d\u0131r\" },\n        set: { unit: \"element\", verb: \"olmal\u0131d\u0131r\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"email address\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO datetime\",\n        date: \"ISO date\",\n        time: \"ISO time\",\n        duration: \"ISO duration\",\n        ipv4: \"IPv4 address\",\n        ipv6: \"IPv6 address\",\n        cidrv4: \"IPv4 range\",\n        cidrv6: \"IPv6 range\",\n        base64: \"base64-encoded string\",\n        base64url: \"base64url-encoded string\",\n        json_string: \"JSON string\",\n        e164: \"E.164 number\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Yanl\u0131\u015F d\u0259y\u0259r: g\u00F6zl\u0259nil\u0259n ${issue.expected}, daxil olan ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Yanl\u0131\u015F d\u0259y\u0259r: g\u00F6zl\u0259nil\u0259n ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Yanl\u0131\u015F se\u00E7im: a\u015Fa\u011F\u0131dak\u0131lardan biri olmal\u0131d\u0131r: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u00C7ox b\u00F6y\u00FCk: g\u00F6zl\u0259nil\u0259n ${issue.origin ?? \"d\u0259y\u0259r\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"element\"}`;\n                return `\u00C7ox b\u00F6y\u00FCk: g\u00F6zl\u0259nil\u0259n ${issue.origin ?? \"d\u0259y\u0259r\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u00C7ox ki\u00E7ik: g\u00F6zl\u0259nil\u0259n ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                return `\u00C7ox ki\u00E7ik: g\u00F6zl\u0259nil\u0259n ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Yanl\u0131\u015F m\u0259tn: \"${_issue.prefix}\" il\u0259 ba\u015Flamal\u0131d\u0131r`;\n                if (_issue.format === \"ends_with\")\n                    return `Yanl\u0131\u015F m\u0259tn: \"${_issue.suffix}\" il\u0259 bitm\u0259lidir`;\n                if (_issue.format === \"includes\")\n                    return `Yanl\u0131\u015F m\u0259tn: \"${_issue.includes}\" daxil olmal\u0131d\u0131r`;\n                if (_issue.format === \"regex\")\n                    return `Yanl\u0131\u015F m\u0259tn: ${_issue.pattern} \u015Fablonuna uy\u011Fun olmal\u0131d\u0131r`;\n                return `Yanl\u0131\u015F ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Yanl\u0131\u015F \u0259d\u0259d: ${issue.divisor} il\u0259 b\u00F6l\u00FCn\u0259 bil\u0259n olmal\u0131d\u0131r`;\n            case \"unrecognized_keys\":\n                return `Tan\u0131nmayan a\u00E7ar${issue.keys.length > 1 ? \"lar\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} daxilind\u0259 yanl\u0131\u015F a\u00E7ar`;\n            case \"invalid_union\":\n                return \"Yanl\u0131\u015F d\u0259y\u0259r\";\n            case \"invalid_element\":\n                return `${issue.origin} daxilind\u0259 yanl\u0131\u015F d\u0259y\u0259r`;\n            default:\n                return `Yanl\u0131\u015F d\u0259y\u0259r`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nfunction getBelarusianPlural(count, one, few, many) {\n    const absCount = Math.abs(count);\n    const lastDigit = absCount % 10;\n    const lastTwoDigits = absCount % 100;\n    if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {\n        return many;\n    }\n    if (lastDigit === 1) {\n        return one;\n    }\n    if (lastDigit >= 2 && lastDigit <= 4) {\n        return few;\n    }\n    return many;\n}\nconst error = () => {\n    const Sizable = {\n        string: {\n            unit: {\n                one: \"\u0441\u0456\u043C\u0432\u0430\u043B\",\n                few: \"\u0441\u0456\u043C\u0432\u0430\u043B\u044B\",\n                many: \"\u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E\",\n            },\n            verb: \"\u043C\u0435\u0446\u044C\",\n        },\n        array: {\n            unit: {\n                one: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\",\n                few: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u044B\",\n                many: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\u045E\",\n            },\n            verb: \"\u043C\u0435\u0446\u044C\",\n        },\n        set: {\n            unit: {\n                one: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\",\n                few: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u044B\",\n                many: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\u045E\",\n            },\n            verb: \"\u043C\u0435\u0446\u044C\",\n        },\n        file: {\n            unit: {\n                one: \"\u0431\u0430\u0439\u0442\",\n                few: \"\u0431\u0430\u0439\u0442\u044B\",\n                many: \"\u0431\u0430\u0439\u0442\u0430\u045E\",\n            },\n            verb: \"\u043C\u0435\u0446\u044C\",\n        },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"\u043B\u0456\u043A\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"\u043C\u0430\u0441\u0456\u045E\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u0443\u0432\u043E\u0434\",\n        email: \"email \u0430\u0434\u0440\u0430\u0441\",\n        url: \"URL\",\n        emoji: \"\u044D\u043C\u043E\u0434\u0437\u0456\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO \u0434\u0430\u0442\u0430 \u0456 \u0447\u0430\u0441\",\n        date: \"ISO \u0434\u0430\u0442\u0430\",\n        time: \"ISO \u0447\u0430\u0441\",\n        duration: \"ISO \u043F\u0440\u0430\u0446\u044F\u0433\u043B\u0430\u0441\u0446\u044C\",\n        ipv4: \"IPv4 \u0430\u0434\u0440\u0430\u0441\",\n        ipv6: \"IPv6 \u0430\u0434\u0440\u0430\u0441\",\n        cidrv4: \"IPv4 \u0434\u044B\u044F\u043F\u0430\u0437\u043E\u043D\",\n        cidrv6: \"IPv6 \u0434\u044B\u044F\u043F\u0430\u0437\u043E\u043D\",\n        base64: \"\u0440\u0430\u0434\u043E\u043A \u0443 \u0444\u0430\u0440\u043C\u0430\u0446\u0435 base64\",\n        base64url: \"\u0440\u0430\u0434\u043E\u043A \u0443 \u0444\u0430\u0440\u043C\u0430\u0446\u0435 base64url\",\n        json_string: \"JSON \u0440\u0430\u0434\u043E\u043A\",\n        e164: \"\u043D\u0443\u043C\u0430\u0440 E.164\",\n        jwt: \"JWT\",\n        template_literal: \"\u0443\u0432\u043E\u0434\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u045E\u0432\u043E\u0434: \u0447\u0430\u043A\u0430\u045E\u0441\u044F ${issue.expected}, \u0430\u0442\u0440\u044B\u043C\u0430\u043D\u0430 ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u045E\u0432\u043E\u0434: \u0447\u0430\u043A\u0430\u043B\u0430\u0441\u044F ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u0432\u0430\u0440\u044B\u044F\u043D\u0442: \u0447\u0430\u043A\u0430\u045E\u0441\u044F \u0430\u0434\u0437\u0456\u043D \u0437 ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    const maxValue = Number(issue.maximum);\n                    const unit = getBelarusianPlural(maxValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\n                    return `\u0417\u0430\u043D\u0430\u0434\u0442\u0430 \u0432\u044F\u043B\u0456\u043A\u0456: \u0447\u0430\u043A\u0430\u043B\u0430\u0441\u044F, \u0448\u0442\u043E ${issue.origin ?? \"\u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435\"} \u043F\u0430\u0432\u0456\u043D\u043D\u0430 ${sizing.verb} ${adj}${issue.maximum.toString()} ${unit}`;\n                }\n                return `\u0417\u0430\u043D\u0430\u0434\u0442\u0430 \u0432\u044F\u043B\u0456\u043A\u0456: \u0447\u0430\u043A\u0430\u043B\u0430\u0441\u044F, \u0448\u0442\u043E ${issue.origin ?? \"\u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435\"} \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    const minValue = Number(issue.minimum);\n                    const unit = getBelarusianPlural(minValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\n                    return `\u0417\u0430\u043D\u0430\u0434\u0442\u0430 \u043C\u0430\u043B\u044B: \u0447\u0430\u043A\u0430\u043B\u0430\u0441\u044F, \u0448\u0442\u043E ${issue.origin} \u043F\u0430\u0432\u0456\u043D\u043D\u0430 ${sizing.verb} ${adj}${issue.minimum.toString()} ${unit}`;\n                }\n                return `\u0417\u0430\u043D\u0430\u0434\u0442\u0430 \u043C\u0430\u043B\u044B: \u0447\u0430\u043A\u0430\u043B\u0430\u0441\u044F, \u0448\u0442\u043E ${issue.origin} \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u0440\u0430\u0434\u043E\u043A: \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u043F\u0430\u0447\u044B\u043D\u0430\u0446\u0446\u0430 \u0437 \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u0440\u0430\u0434\u043E\u043A: \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0437\u0430\u043A\u0430\u043D\u0447\u0432\u0430\u0446\u0446\u0430 \u043D\u0430 \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u0440\u0430\u0434\u043E\u043A: \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0437\u043C\u044F\u0448\u0447\u0430\u0446\u044C \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u0440\u0430\u0434\u043E\u043A: \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0430\u0434\u043F\u0430\u0432\u044F\u0434\u0430\u0446\u044C \u0448\u0430\u0431\u043B\u043E\u043D\u0443 ${_issue.pattern}`;\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u043B\u0456\u043A: \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0431\u044B\u0446\u044C \u043A\u0440\u0430\u0442\u043D\u044B\u043C ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `\u041D\u0435\u0440\u0430\u0441\u043F\u0430\u0437\u043D\u0430\u043D\u044B ${issue.keys.length > 1 ? \"\u043A\u043B\u044E\u0447\u044B\" : \"\u043A\u043B\u044E\u0447\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u043A\u043B\u044E\u0447 \u0443 ${issue.origin}`;\n            case \"invalid_union\":\n                return \"\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u045E\u0432\u043E\u0434\";\n            case \"invalid_element\":\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u0430\u0435 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u045E ${issue.origin}`;\n            default:\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u045E\u0432\u043E\u0434`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nexport const parsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"number\": {\n            return Number.isNaN(data) ? \"NaN\" : \"\u0447\u0438\u0441\u043B\u043E\";\n        }\n        case \"object\": {\n            if (Array.isArray(data)) {\n                return \"\u043C\u0430\u0441\u0438\u0432\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                return data.constructor.name;\n            }\n        }\n    }\n    return t;\n};\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u0441\u0438\u043C\u0432\u043E\u043B\u0430\", verb: \"\u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430\" },\n        file: { unit: \"\u0431\u0430\u0439\u0442\u0430\", verb: \"\u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430\" },\n        array: { unit: \"\u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0430\", verb: \"\u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430\" },\n        set: { unit: \"\u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0430\", verb: \"\u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const Nouns = {\n        regex: \"\u0432\u0445\u043E\u0434\",\n        email: \"\u0438\u043C\u0435\u0439\u043B \u0430\u0434\u0440\u0435\u0441\",\n        url: \"URL\",\n        emoji: \"\u0435\u043C\u043E\u0434\u0436\u0438\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO \u0432\u0440\u0435\u043C\u0435\",\n        date: \"ISO \u0434\u0430\u0442\u0430\",\n        time: \"ISO \u0432\u0440\u0435\u043C\u0435\",\n        duration: \"ISO \u043F\u0440\u043E\u0434\u044A\u043B\u0436\u0438\u0442\u0435\u043B\u043D\u043E\u0441\u0442\",\n        ipv4: \"IPv4 \u0430\u0434\u0440\u0435\u0441\",\n        ipv6: \"IPv6 \u0430\u0434\u0440\u0435\u0441\",\n        cidrv4: \"IPv4 \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\",\n        cidrv6: \"IPv6 \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\",\n        base64: \"base64-\u043A\u043E\u0434\u0438\u0440\u0430\u043D \u043D\u0438\u0437\",\n        base64url: \"base64url-\u043A\u043E\u0434\u0438\u0440\u0430\u043D \u043D\u0438\u0437\",\n        json_string: \"JSON \u043D\u0438\u0437\",\n        e164: \"E.164 \u043D\u043E\u043C\u0435\u0440\",\n        jwt: \"JWT\",\n        template_literal: \"\u0432\u0445\u043E\u0434\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0432\u0445\u043E\u0434: \u043E\u0447\u0430\u043A\u0432\u0430\u043D ${issue.expected}, \u043F\u043E\u043B\u0443\u0447\u0435\u043D ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0432\u0445\u043E\u0434: \u043E\u0447\u0430\u043A\u0432\u0430\u043D ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u043E\u043F\u0446\u0438\u044F: \u043E\u0447\u0430\u043A\u0432\u0430\u043D\u043E \u0435\u0434\u043D\u043E \u043E\u0442 ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u0422\u0432\u044A\u0440\u0434\u0435 \u0433\u043E\u043B\u044F\u043C\u043E: \u043E\u0447\u0430\u043A\u0432\u0430 \u0441\u0435 ${issue.origin ?? \"\u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442\"} \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0430\"}`;\n                return `\u0422\u0432\u044A\u0440\u0434\u0435 \u0433\u043E\u043B\u044F\u043C\u043E: \u043E\u0447\u0430\u043A\u0432\u0430 \u0441\u0435 ${issue.origin ?? \"\u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442\"} \u0434\u0430 \u0431\u044A\u0434\u0435 ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u0422\u0432\u044A\u0440\u0434\u0435 \u043C\u0430\u043B\u043A\u043E: \u043E\u0447\u0430\u043A\u0432\u0430 \u0441\u0435 ${issue.origin} \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `\u0422\u0432\u044A\u0440\u0434\u0435 \u043C\u0430\u043B\u043A\u043E: \u043E\u0447\u0430\u043A\u0432\u0430 \u0441\u0435 ${issue.origin} \u0434\u0430 \u0431\u044A\u0434\u0435 ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D \u043D\u0438\u0437: \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0437\u0430\u043F\u043E\u0447\u0432\u0430 \u0441 \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D \u043D\u0438\u0437: \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0437\u0430\u0432\u044A\u0440\u0448\u0432\u0430 \u0441 \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D \u043D\u0438\u0437: \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0432\u043A\u043B\u044E\u0447\u0432\u0430 \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D \u043D\u0438\u0437: \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0432\u043F\u0430\u0434\u0430 \u0441 ${_issue.pattern}`;\n                let invalid_adj = \"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D\";\n                if (_issue.format === \"emoji\")\n                    invalid_adj = \"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u043E\";\n                if (_issue.format === \"datetime\")\n                    invalid_adj = \"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u043E\";\n                if (_issue.format === \"date\")\n                    invalid_adj = \"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0430\";\n                if (_issue.format === \"time\")\n                    invalid_adj = \"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u043E\";\n                if (_issue.format === \"duration\")\n                    invalid_adj = \"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0430\";\n                return `${invalid_adj} ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u043E \u0447\u0438\u0441\u043B\u043E: \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043A\u0440\u0430\u0442\u043D\u043E \u043D\u0430 ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `\u041D\u0435\u0440\u0430\u0437\u043F\u043E\u0437\u043D\u0430\u0442${issue.keys.length > 1 ? \"\u0438\" : \"\"} \u043A\u043B\u044E\u0447${issue.keys.length > 1 ? \"\u043E\u0432\u0435\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D \u043A\u043B\u044E\u0447 \u0432 ${issue.origin}`;\n            case \"invalid_union\":\n                return \"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0432\u0445\u043E\u0434\";\n            case \"invalid_element\":\n                return `\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442 \u0432 ${issue.origin}`;\n            default:\n                return `\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0432\u0445\u043E\u0434`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"car\u00E0cters\", verb: \"contenir\" },\n        file: { unit: \"bytes\", verb: \"contenir\" },\n        array: { unit: \"elements\", verb: \"contenir\" },\n        set: { unit: \"elements\", verb: \"contenir\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"entrada\",\n        email: \"adre\u00E7a electr\u00F2nica\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"data i hora ISO\",\n        date: \"data ISO\",\n        time: \"hora ISO\",\n        duration: \"durada ISO\",\n        ipv4: \"adre\u00E7a IPv4\",\n        ipv6: \"adre\u00E7a IPv6\",\n        cidrv4: \"rang IPv4\",\n        cidrv6: \"rang IPv6\",\n        base64: \"cadena codificada en base64\",\n        base64url: \"cadena codificada en base64url\",\n        json_string: \"cadena JSON\",\n        e164: \"n\u00FAmero E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entrada\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Tipus inv\u00E0lid: s'esperava ${issue.expected}, s'ha rebut ${parsedType(issue.input)}`;\n            // return `Tipus inv\u00E0lid: s'esperava ${issue.expected}, s'ha rebut ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Valor inv\u00E0lid: s'esperava ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Opci\u00F3 inv\u00E0lida: s'esperava una de ${util.joinValues(issue.values, \" o \")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"com a m\u00E0xim\" : \"menys de\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Massa gran: s'esperava que ${issue.origin ?? \"el valor\"} contingu\u00E9s ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"elements\"}`;\n                return `Massa gran: s'esperava que ${issue.origin ?? \"el valor\"} fos ${adj} ${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"com a m\u00EDnim\" : \"m\u00E9s de\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Massa petit: s'esperava que ${issue.origin} contingu\u00E9s ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Massa petit: s'esperava que ${issue.origin} fos ${adj} ${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Format inv\u00E0lid: ha de comen\u00E7ar amb \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Format inv\u00E0lid: ha d'acabar amb \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Format inv\u00E0lid: ha d'incloure \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Format inv\u00E0lid: ha de coincidir amb el patr\u00F3 ${_issue.pattern}`;\n                return `Format inv\u00E0lid per a ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `N\u00FAmero inv\u00E0lid: ha de ser m\u00FAltiple de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Clau${issue.keys.length > 1 ? \"s\" : \"\"} no reconeguda${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Clau inv\u00E0lida a ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entrada inv\u00E0lida\"; // Could also be \"Tipus d'uni\u00F3 inv\u00E0lid\" but \"Entrada inv\u00E0lida\" is more general\n            case \"invalid_element\":\n                return `Element inv\u00E0lid a ${issue.origin}`;\n            default:\n                return `Entrada inv\u00E0lida`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"znak\u016F\", verb: \"m\u00EDt\" },\n        file: { unit: \"bajt\u016F\", verb: \"m\u00EDt\" },\n        array: { unit: \"prvk\u016F\", verb: \"m\u00EDt\" },\n        set: { unit: \"prvk\u016F\", verb: \"m\u00EDt\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"\u010D\u00EDslo\";\n            }\n            case \"string\": {\n                return \"\u0159et\u011Bzec\";\n            }\n            case \"boolean\": {\n                return \"boolean\";\n            }\n            case \"bigint\": {\n                return \"bigint\";\n            }\n            case \"function\": {\n                return \"funkce\";\n            }\n            case \"symbol\": {\n                return \"symbol\";\n            }\n            case \"undefined\": {\n                return \"undefined\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"pole\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"regul\u00E1rn\u00ED v\u00FDraz\",\n        email: \"e-mailov\u00E1 adresa\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"datum a \u010Das ve form\u00E1tu ISO\",\n        date: \"datum ve form\u00E1tu ISO\",\n        time: \"\u010Das ve form\u00E1tu ISO\",\n        duration: \"doba trv\u00E1n\u00ED ISO\",\n        ipv4: \"IPv4 adresa\",\n        ipv6: \"IPv6 adresa\",\n        cidrv4: \"rozsah IPv4\",\n        cidrv6: \"rozsah IPv6\",\n        base64: \"\u0159et\u011Bzec zak\u00F3dovan\u00FD ve form\u00E1tu base64\",\n        base64url: \"\u0159et\u011Bzec zak\u00F3dovan\u00FD ve form\u00E1tu base64url\",\n        json_string: \"\u0159et\u011Bzec ve form\u00E1tu JSON\",\n        e164: \"\u010D\u00EDslo E.164\",\n        jwt: \"JWT\",\n        template_literal: \"vstup\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Neplatn\u00FD vstup: o\u010Dek\u00E1v\u00E1no ${issue.expected}, obdr\u017Eeno ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Neplatn\u00FD vstup: o\u010Dek\u00E1v\u00E1no ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Neplatn\u00E1 mo\u017Enost: o\u010Dek\u00E1v\u00E1na jedna z hodnot ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Hodnota je p\u0159\u00EDli\u0161 velk\u00E1: ${issue.origin ?? \"hodnota\"} mus\u00ED m\u00EDt ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"prvk\u016F\"}`;\n                }\n                return `Hodnota je p\u0159\u00EDli\u0161 velk\u00E1: ${issue.origin ?? \"hodnota\"} mus\u00ED b\u00FDt ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Hodnota je p\u0159\u00EDli\u0161 mal\u00E1: ${issue.origin ?? \"hodnota\"} mus\u00ED m\u00EDt ${adj}${issue.minimum.toString()} ${sizing.unit ?? \"prvk\u016F\"}`;\n                }\n                return `Hodnota je p\u0159\u00EDli\u0161 mal\u00E1: ${issue.origin ?? \"hodnota\"} mus\u00ED b\u00FDt ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Neplatn\u00FD \u0159et\u011Bzec: mus\u00ED za\u010D\u00EDnat na \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Neplatn\u00FD \u0159et\u011Bzec: mus\u00ED kon\u010Dit na \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Neplatn\u00FD \u0159et\u011Bzec: mus\u00ED obsahovat \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Neplatn\u00FD \u0159et\u011Bzec: mus\u00ED odpov\u00EDdat vzoru ${_issue.pattern}`;\n                return `Neplatn\u00FD form\u00E1t ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Neplatn\u00E9 \u010D\u00EDslo: mus\u00ED b\u00FDt n\u00E1sobkem ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Nezn\u00E1m\u00E9 kl\u00ED\u010De: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Neplatn\u00FD kl\u00ED\u010D v ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Neplatn\u00FD vstup\";\n            case \"invalid_element\":\n                return `Neplatn\u00E1 hodnota v ${issue.origin}`;\n            default:\n                return `Neplatn\u00FD vstup`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"tegn\", verb: \"havde\" },\n        file: { unit: \"bytes\", verb: \"havde\" },\n        array: { unit: \"elementer\", verb: \"indeholdt\" },\n        set: { unit: \"elementer\", verb: \"indeholdt\" },\n    };\n    const TypeNames = {\n        string: \"streng\",\n        number: \"tal\",\n        boolean: \"boolean\",\n        array: \"liste\",\n        object: \"objekt\",\n        set: \"s\u00E6t\",\n        file: \"fil\",\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    function getTypeName(type) {\n        return TypeNames[type] ?? type;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"tal\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"liste\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n                return \"objekt\";\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"e-mailadresse\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO dato- og klokkesl\u00E6t\",\n        date: \"ISO-dato\",\n        time: \"ISO-klokkesl\u00E6t\",\n        duration: \"ISO-varighed\",\n        ipv4: \"IPv4-omr\u00E5de\",\n        ipv6: \"IPv6-omr\u00E5de\",\n        cidrv4: \"IPv4-spektrum\",\n        cidrv6: \"IPv6-spektrum\",\n        base64: \"base64-kodet streng\",\n        base64url: \"base64url-kodet streng\",\n        json_string: \"JSON-streng\",\n        e164: \"E.164-nummer\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ugyldigt input: forventede ${getTypeName(issue.expected)}, fik ${getTypeName(parsedType(issue.input))}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ugyldig v\u00E6rdi: forventede ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ugyldigt valg: forventede en af f\u00F8lgende ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                const origin = getTypeName(issue.origin);\n                if (sizing)\n                    return `For stor: forventede ${origin ?? \"value\"} ${sizing.verb} ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"elementer\"}`;\n                return `For stor: forventede ${origin ?? \"value\"} havde ${adj} ${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                const origin = getTypeName(issue.origin);\n                if (sizing) {\n                    return `For lille: forventede ${origin} ${sizing.verb} ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `For lille: forventede ${origin} havde ${adj} ${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Ugyldig streng: skal starte med \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Ugyldig streng: skal ende med \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Ugyldig streng: skal indeholde \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Ugyldig streng: skal matche m\u00F8nsteret ${_issue.pattern}`;\n                return `Ugyldig ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ugyldigt tal: skal v\u00E6re deleligt med ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Ukendte n\u00F8gler\" : \"Ukendt n\u00F8gle\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ugyldig n\u00F8gle i ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Ugyldigt input: matcher ingen af de tilladte typer\";\n            case \"invalid_element\":\n                return `Ugyldig v\u00E6rdi i ${issue.origin}`;\n            default:\n                return `Ugyldigt input`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"Zeichen\", verb: \"zu haben\" },\n        file: { unit: \"Bytes\", verb: \"zu haben\" },\n        array: { unit: \"Elemente\", verb: \"zu haben\" },\n        set: { unit: \"Elemente\", verb: \"zu haben\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"Zahl\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"Array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"Eingabe\",\n        email: \"E-Mail-Adresse\",\n        url: \"URL\",\n        emoji: \"Emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO-Datum und -Uhrzeit\",\n        date: \"ISO-Datum\",\n        time: \"ISO-Uhrzeit\",\n        duration: \"ISO-Dauer\",\n        ipv4: \"IPv4-Adresse\",\n        ipv6: \"IPv6-Adresse\",\n        cidrv4: \"IPv4-Bereich\",\n        cidrv6: \"IPv6-Bereich\",\n        base64: \"Base64-codierter String\",\n        base64url: \"Base64-URL-codierter String\",\n        json_string: \"JSON-String\",\n        e164: \"E.164-Nummer\",\n        jwt: \"JWT\",\n        template_literal: \"Eingabe\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ung\u00FCltige Eingabe: erwartet ${issue.expected}, erhalten ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ung\u00FCltige Eingabe: erwartet ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ung\u00FCltige Option: erwartet eine von ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Zu gro\u00DF: erwartet, dass ${issue.origin ?? \"Wert\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"Elemente\"} hat`;\n                return `Zu gro\u00DF: erwartet, dass ${issue.origin ?? \"Wert\"} ${adj}${issue.maximum.toString()} ist`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Zu klein: erwartet, dass ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} hat`;\n                }\n                return `Zu klein: erwartet, dass ${issue.origin} ${adj}${issue.minimum.toString()} ist`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Ung\u00FCltiger String: muss mit \"${_issue.prefix}\" beginnen`;\n                if (_issue.format === \"ends_with\")\n                    return `Ung\u00FCltiger String: muss mit \"${_issue.suffix}\" enden`;\n                if (_issue.format === \"includes\")\n                    return `Ung\u00FCltiger String: muss \"${_issue.includes}\" enthalten`;\n                if (_issue.format === \"regex\")\n                    return `Ung\u00FCltiger String: muss dem Muster ${_issue.pattern} entsprechen`;\n                return `Ung\u00FCltig: ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ung\u00FCltige Zahl: muss ein Vielfaches von ${issue.divisor} sein`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Unbekannte Schl\u00FCssel\" : \"Unbekannter Schl\u00FCssel\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ung\u00FCltiger Schl\u00FCssel in ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Ung\u00FCltige Eingabe\";\n            case \"invalid_element\":\n                return `Ung\u00FCltiger Wert in ${issue.origin}`;\n            default:\n                return `Ung\u00FCltige Eingabe`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nexport const parsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"number\": {\n            return Number.isNaN(data) ? \"NaN\" : \"number\";\n        }\n        case \"object\": {\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                return data.constructor.name;\n            }\n        }\n    }\n    return t;\n};\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"characters\", verb: \"to have\" },\n        file: { unit: \"bytes\", verb: \"to have\" },\n        array: { unit: \"items\", verb: \"to have\" },\n        set: { unit: \"items\", verb: \"to have\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const Nouns = {\n        regex: \"input\",\n        email: \"email address\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO datetime\",\n        date: \"ISO date\",\n        time: \"ISO time\",\n        duration: \"ISO duration\",\n        ipv4: \"IPv4 address\",\n        ipv6: \"IPv6 address\",\n        cidrv4: \"IPv4 range\",\n        cidrv6: \"IPv6 range\",\n        base64: \"base64-encoded string\",\n        base64url: \"base64url-encoded string\",\n        json_string: \"JSON string\",\n        e164: \"E.164 number\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Invalid input: expected ${issue.expected}, received ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Invalid input: expected ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Invalid option: expected one of ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Too big: expected ${issue.origin ?? \"value\"} to have ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elements\"}`;\n                return `Too big: expected ${issue.origin ?? \"value\"} to be ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Too small: expected ${issue.origin} to have ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Too small: expected ${issue.origin} to be ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Invalid string: must start with \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Invalid string: must end with \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Invalid string: must include \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Invalid string: must match pattern ${_issue.pattern}`;\n                return `Invalid ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Invalid number: must be a multiple of ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Unrecognized key${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Invalid key in ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Invalid input\";\n            case \"invalid_element\":\n                return `Invalid value in ${issue.origin}`;\n            default:\n                return `Invalid input`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nexport const parsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"number\": {\n            return Number.isNaN(data) ? \"NaN\" : \"nombro\";\n        }\n        case \"object\": {\n            if (Array.isArray(data)) {\n                return \"tabelo\";\n            }\n            if (data === null) {\n                return \"senvalora\";\n            }\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                return data.constructor.name;\n            }\n        }\n    }\n    return t;\n};\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"karaktrojn\", verb: \"havi\" },\n        file: { unit: \"bajtojn\", verb: \"havi\" },\n        array: { unit: \"elementojn\", verb: \"havi\" },\n        set: { unit: \"elementojn\", verb: \"havi\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const Nouns = {\n        regex: \"enigo\",\n        email: \"retadreso\",\n        url: \"URL\",\n        emoji: \"emo\u011Dio\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO-datotempo\",\n        date: \"ISO-dato\",\n        time: \"ISO-tempo\",\n        duration: \"ISO-da\u016Dro\",\n        ipv4: \"IPv4-adreso\",\n        ipv6: \"IPv6-adreso\",\n        cidrv4: \"IPv4-rango\",\n        cidrv6: \"IPv6-rango\",\n        base64: \"64-ume kodita karaktraro\",\n        base64url: \"URL-64-ume kodita karaktraro\",\n        json_string: \"JSON-karaktraro\",\n        e164: \"E.164-nombro\",\n        jwt: \"JWT\",\n        template_literal: \"enigo\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Nevalida enigo: atendi\u011Dis ${issue.expected}, ricevi\u011Dis ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Nevalida enigo: atendi\u011Dis ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Nevalida opcio: atendi\u011Dis unu el ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Tro granda: atendi\u011Dis ke ${issue.origin ?? \"valoro\"} havu ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementojn\"}`;\n                return `Tro granda: atendi\u011Dis ke ${issue.origin ?? \"valoro\"} havu ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Tro malgranda: atendi\u011Dis ke ${issue.origin} havu ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Tro malgranda: atendi\u011Dis ke ${issue.origin} estu ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Nevalida karaktraro: devas komenci\u011Di per \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Nevalida karaktraro: devas fini\u011Di per \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Nevalida karaktraro: devas inkluzivi \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Nevalida karaktraro: devas kongrui kun la modelo ${_issue.pattern}`;\n                return `Nevalida ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Nevalida nombro: devas esti oblo de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Nekonata${issue.keys.length > 1 ? \"j\" : \"\"} \u015Dlosilo${issue.keys.length > 1 ? \"j\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Nevalida \u015Dlosilo en ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Nevalida enigo\";\n            case \"invalid_element\":\n                return `Nevalida valoro en ${issue.origin}`;\n            default:\n                return `Nevalida enigo`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caracteres\", verb: \"tener\" },\n        file: { unit: \"bytes\", verb: \"tener\" },\n        array: { unit: \"elementos\", verb: \"tener\" },\n        set: { unit: \"elementos\", verb: \"tener\" },\n    };\n    const TypeNames = {\n        string: \"texto\",\n        number: \"n\u00FAmero\",\n        boolean: \"booleano\",\n        array: \"arreglo\",\n        object: \"objeto\",\n        set: \"conjunto\",\n        file: \"archivo\",\n        date: \"fecha\",\n        bigint: \"n\u00FAmero grande\",\n        symbol: \"s\u00EDmbolo\",\n        undefined: \"indefinido\",\n        null: \"nulo\",\n        function: \"funci\u00F3n\",\n        map: \"mapa\",\n        record: \"registro\",\n        tuple: \"tupla\",\n        enum: \"enumeraci\u00F3n\",\n        union: \"uni\u00F3n\",\n        literal: \"literal\",\n        promise: \"promesa\",\n        void: \"vac\u00EDo\",\n        never: \"nunca\",\n        unknown: \"desconocido\",\n        any: \"cualquiera\",\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    function getTypeName(type) {\n        return TypeNames[type] ?? type;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype) {\n                    return data.constructor.name;\n                }\n                return \"object\";\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"entrada\",\n        email: \"direcci\u00F3n de correo electr\u00F3nico\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"fecha y hora ISO\",\n        date: \"fecha ISO\",\n        time: \"hora ISO\",\n        duration: \"duraci\u00F3n ISO\",\n        ipv4: \"direcci\u00F3n IPv4\",\n        ipv6: \"direcci\u00F3n IPv6\",\n        cidrv4: \"rango IPv4\",\n        cidrv6: \"rango IPv6\",\n        base64: \"cadena codificada en base64\",\n        base64url: \"URL codificada en base64\",\n        json_string: \"cadena JSON\",\n        e164: \"n\u00FAmero E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entrada\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Entrada inv\u00E1lida: se esperaba ${getTypeName(issue.expected)}, recibido ${getTypeName(parsedType(issue.input))}`;\n            // return `Entrada inv\u00E1lida: se esperaba ${issue.expected}, recibido ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Entrada inv\u00E1lida: se esperaba ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Opci\u00F3n inv\u00E1lida: se esperaba una de ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                const origin = getTypeName(issue.origin);\n                if (sizing)\n                    return `Demasiado grande: se esperaba que ${origin ?? \"valor\"} tuviera ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementos\"}`;\n                return `Demasiado grande: se esperaba que ${origin ?? \"valor\"} fuera ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                const origin = getTypeName(issue.origin);\n                if (sizing) {\n                    return `Demasiado peque\u00F1o: se esperaba que ${origin} tuviera ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Demasiado peque\u00F1o: se esperaba que ${origin} fuera ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Cadena inv\u00E1lida: debe comenzar con \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Cadena inv\u00E1lida: debe terminar en \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Cadena inv\u00E1lida: debe incluir \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Cadena inv\u00E1lida: debe coincidir con el patr\u00F3n ${_issue.pattern}`;\n                return `Inv\u00E1lido ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `N\u00FAmero inv\u00E1lido: debe ser m\u00FAltiplo de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Llave${issue.keys.length > 1 ? \"s\" : \"\"} desconocida${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Llave inv\u00E1lida en ${getTypeName(issue.origin)}`;\n            case \"invalid_union\":\n                return \"Entrada inv\u00E1lida\";\n            case \"invalid_element\":\n                return `Valor inv\u00E1lido en ${getTypeName(issue.origin)}`;\n            default:\n                return `Entrada inv\u00E1lida`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u06A9\u0627\u0631\u0627\u06A9\u062A\u0631\", verb: \"\u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F\" },\n        file: { unit: \"\u0628\u0627\u06CC\u062A\", verb: \"\u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F\" },\n        array: { unit: \"\u0622\u06CC\u062A\u0645\", verb: \"\u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F\" },\n        set: { unit: \"\u0622\u06CC\u062A\u0645\", verb: \"\u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"\u0639\u062F\u062F\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"\u0622\u0631\u0627\u06CC\u0647\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u0648\u0631\u0648\u062F\u06CC\",\n        email: \"\u0622\u062F\u0631\u0633 \u0627\u06CC\u0645\u06CC\u0644\",\n        url: \"URL\",\n        emoji: \"\u0627\u06CC\u0645\u0648\u062C\u06CC\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"\u062A\u0627\u0631\u06CC\u062E \u0648 \u0632\u0645\u0627\u0646 \u0627\u06CC\u0632\u0648\",\n        date: \"\u062A\u0627\u0631\u06CC\u062E \u0627\u06CC\u0632\u0648\",\n        time: \"\u0632\u0645\u0627\u0646 \u0627\u06CC\u0632\u0648\",\n        duration: \"\u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u0627\u06CC\u0632\u0648\",\n        ipv4: \"IPv4 \u0622\u062F\u0631\u0633\",\n        ipv6: \"IPv6 \u0622\u062F\u0631\u0633\",\n        cidrv4: \"IPv4 \u062F\u0627\u0645\u0646\u0647\",\n        cidrv6: \"IPv6 \u062F\u0627\u0645\u0646\u0647\",\n        base64: \"base64-encoded \u0631\u0634\u062A\u0647\",\n        base64url: \"base64url-encoded \u0631\u0634\u062A\u0647\",\n        json_string: \"JSON \u0631\u0634\u062A\u0647\",\n        e164: \"E.164 \u0639\u062F\u062F\",\n        jwt: \"JWT\",\n        template_literal: \"\u0648\u0631\u0648\u062F\u06CC\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u0648\u0631\u0648\u062F\u06CC \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0645\u06CC\u200C\u0628\u0627\u06CC\u0633\u062A ${issue.expected} \u0645\u06CC\u200C\u0628\u0648\u062F\u060C ${parsedType(issue.input)} \u062F\u0631\u06CC\u0627\u0641\u062A \u0634\u062F`;\n            case \"invalid_value\":\n                if (issue.values.length === 1) {\n                    return `\u0648\u0631\u0648\u062F\u06CC \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0645\u06CC\u200C\u0628\u0627\u06CC\u0633\u062A ${util.stringifyPrimitive(issue.values[0])} \u0645\u06CC\u200C\u0628\u0648\u062F`;\n                }\n                return `\u06AF\u0632\u06CC\u0646\u0647 \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0645\u06CC\u200C\u0628\u0627\u06CC\u0633\u062A \u06CC\u06A9\u06CC \u0627\u0632 ${util.joinValues(issue.values, \"|\")} \u0645\u06CC\u200C\u0628\u0648\u062F`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u062E\u06CC\u0644\u06CC \u0628\u0632\u0631\u06AF: ${issue.origin ?? \"\u0645\u0642\u062F\u0627\u0631\"} \u0628\u0627\u06CC\u062F ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u0639\u0646\u0635\u0631\"} \u0628\u0627\u0634\u062F`;\n                }\n                return `\u062E\u06CC\u0644\u06CC \u0628\u0632\u0631\u06AF: ${issue.origin ?? \"\u0645\u0642\u062F\u0627\u0631\"} \u0628\u0627\u06CC\u062F ${adj}${issue.maximum.toString()} \u0628\u0627\u0634\u062F`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u062E\u06CC\u0644\u06CC \u06A9\u0648\u0686\u06A9: ${issue.origin} \u0628\u0627\u06CC\u062F ${adj}${issue.minimum.toString()} ${sizing.unit} \u0628\u0627\u0634\u062F`;\n                }\n                return `\u062E\u06CC\u0644\u06CC \u06A9\u0648\u0686\u06A9: ${issue.origin} \u0628\u0627\u06CC\u062F ${adj}${issue.minimum.toString()} \u0628\u0627\u0634\u062F`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `\u0631\u0634\u062A\u0647 \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0628\u0627\u06CC\u062F \u0628\u0627 \"${_issue.prefix}\" \u0634\u0631\u0648\u0639 \u0634\u0648\u062F`;\n                }\n                if (_issue.format === \"ends_with\") {\n                    return `\u0631\u0634\u062A\u0647 \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0628\u0627\u06CC\u062F \u0628\u0627 \"${_issue.suffix}\" \u062A\u0645\u0627\u0645 \u0634\u0648\u062F`;\n                }\n                if (_issue.format === \"includes\") {\n                    return `\u0631\u0634\u062A\u0647 \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0628\u0627\u06CC\u062F \u0634\u0627\u0645\u0644 \"${_issue.includes}\" \u0628\u0627\u0634\u062F`;\n                }\n                if (_issue.format === \"regex\") {\n                    return `\u0631\u0634\u062A\u0647 \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0628\u0627\u06CC\u062F \u0628\u0627 \u0627\u0644\u06AF\u0648\u06CC ${_issue.pattern} \u0645\u0637\u0627\u0628\u0642\u062A \u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F`;\n                }\n                return `${Nouns[_issue.format] ?? issue.format} \u0646\u0627\u0645\u0639\u062A\u0628\u0631`;\n            }\n            case \"not_multiple_of\":\n                return `\u0639\u062F\u062F \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0628\u0627\u06CC\u062F \u0645\u0636\u0631\u0628 ${issue.divisor} \u0628\u0627\u0634\u062F`;\n            case \"unrecognized_keys\":\n                return `\u06A9\u0644\u06CC\u062F${issue.keys.length > 1 ? \"\u0647\u0627\u06CC\" : \"\"} \u0646\u0627\u0634\u0646\u0627\u0633: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `\u06A9\u0644\u06CC\u062F \u0646\u0627\u0634\u0646\u0627\u0633 \u062F\u0631 ${issue.origin}`;\n            case \"invalid_union\":\n                return `\u0648\u0631\u0648\u062F\u06CC \u0646\u0627\u0645\u0639\u062A\u0628\u0631`;\n            case \"invalid_element\":\n                return `\u0645\u0642\u062F\u0627\u0631 \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u062F\u0631 ${issue.origin}`;\n            default:\n                return `\u0648\u0631\u0648\u062F\u06CC \u0646\u0627\u0645\u0639\u062A\u0628\u0631`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"merkki\u00E4\", subject: \"merkkijonon\" },\n        file: { unit: \"tavua\", subject: \"tiedoston\" },\n        array: { unit: \"alkiota\", subject: \"listan\" },\n        set: { unit: \"alkiota\", subject: \"joukon\" },\n        number: { unit: \"\", subject: \"luvun\" },\n        bigint: { unit: \"\", subject: \"suuren kokonaisluvun\" },\n        int: { unit: \"\", subject: \"kokonaisluvun\" },\n        date: { unit: \"\", subject: \"p\u00E4iv\u00E4m\u00E4\u00E4r\u00E4n\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"s\u00E4\u00E4nn\u00F6llinen lauseke\",\n        email: \"s\u00E4hk\u00F6postiosoite\",\n        url: \"URL-osoite\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO-aikaleima\",\n        date: \"ISO-p\u00E4iv\u00E4m\u00E4\u00E4r\u00E4\",\n        time: \"ISO-aika\",\n        duration: \"ISO-kesto\",\n        ipv4: \"IPv4-osoite\",\n        ipv6: \"IPv6-osoite\",\n        cidrv4: \"IPv4-alue\",\n        cidrv6: \"IPv6-alue\",\n        base64: \"base64-koodattu merkkijono\",\n        base64url: \"base64url-koodattu merkkijono\",\n        json_string: \"JSON-merkkijono\",\n        e164: \"E.164-luku\",\n        jwt: \"JWT\",\n        template_literal: \"templaattimerkkijono\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Virheellinen tyyppi: odotettiin ${issue.expected}, oli ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Virheellinen sy\u00F6te: t\u00E4ytyy olla ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Virheellinen valinta: t\u00E4ytyy olla yksi seuraavista: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Liian suuri: ${sizing.subject} t\u00E4ytyy olla ${adj}${issue.maximum.toString()} ${sizing.unit}`.trim();\n                }\n                return `Liian suuri: arvon t\u00E4ytyy olla ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Liian pieni: ${sizing.subject} t\u00E4ytyy olla ${adj}${issue.minimum.toString()} ${sizing.unit}`.trim();\n                }\n                return `Liian pieni: arvon t\u00E4ytyy olla ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Virheellinen sy\u00F6te: t\u00E4ytyy alkaa \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Virheellinen sy\u00F6te: t\u00E4ytyy loppua \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Virheellinen sy\u00F6te: t\u00E4ytyy sis\u00E4lt\u00E4\u00E4 \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\") {\n                    return `Virheellinen sy\u00F6te: t\u00E4ytyy vastata s\u00E4\u00E4nn\u00F6llist\u00E4 lauseketta ${_issue.pattern}`;\n                }\n                return `Virheellinen ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Virheellinen luku: t\u00E4ytyy olla luvun ${issue.divisor} monikerta`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Tuntemattomat avaimet\" : \"Tuntematon avain\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return \"Virheellinen avain tietueessa\";\n            case \"invalid_union\":\n                return \"Virheellinen unioni\";\n            case \"invalid_element\":\n                return \"Virheellinen arvo joukossa\";\n            default:\n                return `Virheellinen sy\u00F6te`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caract\u00E8res\", verb: \"avoir\" },\n        file: { unit: \"octets\", verb: \"avoir\" },\n        array: { unit: \"\u00E9l\u00E9ments\", verb: \"avoir\" },\n        set: { unit: \"\u00E9l\u00E9ments\", verb: \"avoir\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"nombre\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"tableau\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"entr\u00E9e\",\n        email: \"adresse e-mail\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"date et heure ISO\",\n        date: \"date ISO\",\n        time: \"heure ISO\",\n        duration: \"dur\u00E9e ISO\",\n        ipv4: \"adresse IPv4\",\n        ipv6: \"adresse IPv6\",\n        cidrv4: \"plage IPv4\",\n        cidrv6: \"plage IPv6\",\n        base64: \"cha\u00EEne encod\u00E9e en base64\",\n        base64url: \"cha\u00EEne encod\u00E9e en base64url\",\n        json_string: \"cha\u00EEne JSON\",\n        e164: \"num\u00E9ro E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entr\u00E9e\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Entr\u00E9e invalide : ${issue.expected} attendu, ${parsedType(issue.input)} re\u00E7u`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Entr\u00E9e invalide : ${util.stringifyPrimitive(issue.values[0])} attendu`;\n                return `Option invalide : une valeur parmi ${util.joinValues(issue.values, \"|\")} attendue`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Trop grand : ${issue.origin ?? \"valeur\"} doit ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u00E9l\u00E9ment(s)\"}`;\n                return `Trop grand : ${issue.origin ?? \"valeur\"} doit \u00EAtre ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Trop petit : ${issue.origin} doit ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Trop petit : ${issue.origin} doit \u00EAtre ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Cha\u00EEne invalide : doit commencer par \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Cha\u00EEne invalide : doit se terminer par \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Cha\u00EEne invalide : doit inclure \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Cha\u00EEne invalide : doit correspondre au mod\u00E8le ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} invalide`;\n            }\n            case \"not_multiple_of\":\n                return `Nombre invalide : doit \u00EAtre un multiple de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Cl\u00E9${issue.keys.length > 1 ? \"s\" : \"\"} non reconnue${issue.keys.length > 1 ? \"s\" : \"\"} : ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Cl\u00E9 invalide dans ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entr\u00E9e invalide\";\n            case \"invalid_element\":\n                return `Valeur invalide dans ${issue.origin}`;\n            default:\n                return `Entr\u00E9e invalide`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caract\u00E8res\", verb: \"avoir\" },\n        file: { unit: \"octets\", verb: \"avoir\" },\n        array: { unit: \"\u00E9l\u00E9ments\", verb: \"avoir\" },\n        set: { unit: \"\u00E9l\u00E9ments\", verb: \"avoir\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"entr\u00E9e\",\n        email: \"adresse courriel\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"date-heure ISO\",\n        date: \"date ISO\",\n        time: \"heure ISO\",\n        duration: \"dur\u00E9e ISO\",\n        ipv4: \"adresse IPv4\",\n        ipv6: \"adresse IPv6\",\n        cidrv4: \"plage IPv4\",\n        cidrv6: \"plage IPv6\",\n        base64: \"cha\u00EEne encod\u00E9e en base64\",\n        base64url: \"cha\u00EEne encod\u00E9e en base64url\",\n        json_string: \"cha\u00EEne JSON\",\n        e164: \"num\u00E9ro E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entr\u00E9e\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Entr\u00E9e invalide : attendu ${issue.expected}, re\u00E7u ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Entr\u00E9e invalide : attendu ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Option invalide : attendu l'une des valeurs suivantes ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"\u2264\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Trop grand : attendu que ${issue.origin ?? \"la valeur\"} ait ${adj}${issue.maximum.toString()} ${sizing.unit}`;\n                return `Trop grand : attendu que ${issue.origin ?? \"la valeur\"} soit ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"\u2265\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Trop petit : attendu que ${issue.origin} ait ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Trop petit : attendu que ${issue.origin} soit ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Cha\u00EEne invalide : doit commencer par \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Cha\u00EEne invalide : doit se terminer par \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Cha\u00EEne invalide : doit inclure \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Cha\u00EEne invalide : doit correspondre au motif ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} invalide`;\n            }\n            case \"not_multiple_of\":\n                return `Nombre invalide : doit \u00EAtre un multiple de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Cl\u00E9${issue.keys.length > 1 ? \"s\" : \"\"} non reconnue${issue.keys.length > 1 ? \"s\" : \"\"} : ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Cl\u00E9 invalide dans ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entr\u00E9e invalide\";\n            case \"invalid_element\":\n                return `Valeur invalide dans ${issue.origin}`;\n            default:\n                return `Entr\u00E9e invalide`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u05D0\u05D5\u05EA\u05D9\u05D5\u05EA\", verb: \"\u05DC\u05DB\u05DC\u05D5\u05DC\" },\n        file: { unit: \"\u05D1\u05D9\u05D9\u05D8\u05D9\u05DD\", verb: \"\u05DC\u05DB\u05DC\u05D5\u05DC\" },\n        array: { unit: \"\u05E4\u05E8\u05D9\u05D8\u05D9\u05DD\", verb: \"\u05DC\u05DB\u05DC\u05D5\u05DC\" },\n        set: { unit: \"\u05E4\u05E8\u05D9\u05D8\u05D9\u05DD\", verb: \"\u05DC\u05DB\u05DC\u05D5\u05DC\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u05E7\u05DC\u05D8\",\n        email: \"\u05DB\u05EA\u05D5\u05D1\u05EA \u05D0\u05D9\u05DE\u05D9\u05D9\u05DC\",\n        url: \"\u05DB\u05EA\u05D5\u05D1\u05EA \u05E8\u05E9\u05EA\",\n        emoji: \"\u05D0\u05D9\u05DE\u05D5\u05D2'\u05D9\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"\u05EA\u05D0\u05E8\u05D9\u05DA \u05D5\u05D6\u05DE\u05DF ISO\",\n        date: \"\u05EA\u05D0\u05E8\u05D9\u05DA ISO\",\n        time: \"\u05D6\u05DE\u05DF ISO\",\n        duration: \"\u05DE\u05E9\u05DA \u05D6\u05DE\u05DF ISO\",\n        ipv4: \"\u05DB\u05EA\u05D5\u05D1\u05EA IPv4\",\n        ipv6: \"\u05DB\u05EA\u05D5\u05D1\u05EA IPv6\",\n        cidrv4: \"\u05D8\u05D5\u05D5\u05D7 IPv4\",\n        cidrv6: \"\u05D8\u05D5\u05D5\u05D7 IPv6\",\n        base64: \"\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA \u05D1\u05D1\u05E1\u05D9\u05E1 64\",\n        base64url: \"\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA \u05D1\u05D1\u05E1\u05D9\u05E1 64 \u05DC\u05DB\u05EA\u05D5\u05D1\u05D5\u05EA \u05E8\u05E9\u05EA\",\n        json_string: \"\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA JSON\",\n        e164: \"\u05DE\u05E1\u05E4\u05E8 E.164\",\n        jwt: \"JWT\",\n        template_literal: \"\u05E7\u05DC\u05D8\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u05E7\u05DC\u05D8 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF: \u05E6\u05E8\u05D9\u05DA ${issue.expected}, \u05D4\u05EA\u05E7\u05D1\u05DC ${parsedType(issue.input)}`;\n            // return `Invalid input: expected ${issue.expected}, received ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u05E7\u05DC\u05D8 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF: \u05E6\u05E8\u05D9\u05DA ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u05E7\u05DC\u05D8 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF: \u05E6\u05E8\u05D9\u05DA \u05D0\u05D7\u05EA \u05DE\u05D4\u05D0\u05E4\u05E9\u05E8\u05D5\u05D9\u05D5\u05EA  ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u05D2\u05D3\u05D5\u05DC \u05DE\u05D3\u05D9: ${issue.origin ?? \"value\"} \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elements\"}`;\n                return `\u05D2\u05D3\u05D5\u05DC \u05DE\u05D3\u05D9: ${issue.origin ?? \"value\"} \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u05E7\u05D8\u05DF \u05DE\u05D3\u05D9: ${issue.origin} \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `\u05E7\u05D8\u05DF \u05DE\u05D3\u05D9: ${issue.origin} \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA \u05DC\u05D0 \u05EA\u05E7\u05D9\u05E0\u05D4: \u05D7\u05D9\u05D9\u05D1\u05EA \u05DC\u05D4\u05EA\u05D7\u05D9\u05DC \u05D1\"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA \u05DC\u05D0 \u05EA\u05E7\u05D9\u05E0\u05D4: \u05D7\u05D9\u05D9\u05D1\u05EA \u05DC\u05D4\u05E1\u05EA\u05D9\u05D9\u05DD \u05D1 \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA \u05DC\u05D0 \u05EA\u05E7\u05D9\u05E0\u05D4: \u05D7\u05D9\u05D9\u05D1\u05EA \u05DC\u05DB\u05DC\u05D5\u05DC \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA \u05DC\u05D0 \u05EA\u05E7\u05D9\u05E0\u05D4: \u05D7\u05D9\u05D9\u05D1\u05EA \u05DC\u05D4\u05EA\u05D0\u05D9\u05DD \u05DC\u05EA\u05D1\u05E0\u05D9\u05EA ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF`;\n            }\n            case \"not_multiple_of\":\n                return `\u05DE\u05E1\u05E4\u05E8 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF: \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05DE\u05DB\u05E4\u05DC\u05D4 \u05E9\u05DC ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `\u05DE\u05E4\u05EA\u05D7${issue.keys.length > 1 ? \"\u05D5\u05EA\" : \"\"} \u05DC\u05D0 \u05DE\u05D6\u05D5\u05D4${issue.keys.length > 1 ? \"\u05D9\u05DD\" : \"\u05D4\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `\u05DE\u05E4\u05EA\u05D7 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF \u05D1${issue.origin}`;\n            case \"invalid_union\":\n                return \"\u05E7\u05DC\u05D8 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF\";\n            case \"invalid_element\":\n                return `\u05E2\u05E8\u05DA \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF \u05D1${issue.origin}`;\n            default:\n                return `\u05E7\u05DC\u05D8 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"karakter\", verb: \"legyen\" },\n        file: { unit: \"byte\", verb: \"legyen\" },\n        array: { unit: \"elem\", verb: \"legyen\" },\n        set: { unit: \"elem\", verb: \"legyen\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"sz\u00E1m\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"t\u00F6mb\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"bemenet\",\n        email: \"email c\u00EDm\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO id\u0151b\u00E9lyeg\",\n        date: \"ISO d\u00E1tum\",\n        time: \"ISO id\u0151\",\n        duration: \"ISO id\u0151intervallum\",\n        ipv4: \"IPv4 c\u00EDm\",\n        ipv6: \"IPv6 c\u00EDm\",\n        cidrv4: \"IPv4 tartom\u00E1ny\",\n        cidrv6: \"IPv6 tartom\u00E1ny\",\n        base64: \"base64-k\u00F3dolt string\",\n        base64url: \"base64url-k\u00F3dolt string\",\n        json_string: \"JSON string\",\n        e164: \"E.164 sz\u00E1m\",\n        jwt: \"JWT\",\n        template_literal: \"bemenet\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u00C9rv\u00E9nytelen bemenet: a v\u00E1rt \u00E9rt\u00E9k ${issue.expected}, a kapott \u00E9rt\u00E9k ${parsedType(issue.input)}`;\n            // return `Invalid input: expected ${issue.expected}, received ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u00C9rv\u00E9nytelen bemenet: a v\u00E1rt \u00E9rt\u00E9k ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u00C9rv\u00E9nytelen opci\u00F3: valamelyik \u00E9rt\u00E9k v\u00E1rt ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `T\u00FAl nagy: ${issue.origin ?? \"\u00E9rt\u00E9k\"} m\u00E9rete t\u00FAl nagy ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elem\"}`;\n                return `T\u00FAl nagy: a bemeneti \u00E9rt\u00E9k ${issue.origin ?? \"\u00E9rt\u00E9k\"} t\u00FAl nagy: ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `T\u00FAl kicsi: a bemeneti \u00E9rt\u00E9k ${issue.origin} m\u00E9rete t\u00FAl kicsi ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `T\u00FAl kicsi: a bemeneti \u00E9rt\u00E9k ${issue.origin} t\u00FAl kicsi ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `\u00C9rv\u00E9nytelen string: \"${_issue.prefix}\" \u00E9rt\u00E9kkel kell kezd\u0151dnie`;\n                if (_issue.format === \"ends_with\")\n                    return `\u00C9rv\u00E9nytelen string: \"${_issue.suffix}\" \u00E9rt\u00E9kkel kell v\u00E9gz\u0151dnie`;\n                if (_issue.format === \"includes\")\n                    return `\u00C9rv\u00E9nytelen string: \"${_issue.includes}\" \u00E9rt\u00E9ket kell tartalmaznia`;\n                if (_issue.format === \"regex\")\n                    return `\u00C9rv\u00E9nytelen string: ${_issue.pattern} mint\u00E1nak kell megfelelnie`;\n                return `\u00C9rv\u00E9nytelen ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u00C9rv\u00E9nytelen sz\u00E1m: ${issue.divisor} t\u00F6bbsz\u00F6r\u00F6s\u00E9nek kell lennie`;\n            case \"unrecognized_keys\":\n                return `Ismeretlen kulcs${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `\u00C9rv\u00E9nytelen kulcs ${issue.origin}`;\n            case \"invalid_union\":\n                return \"\u00C9rv\u00E9nytelen bemenet\";\n            case \"invalid_element\":\n                return `\u00C9rv\u00E9nytelen \u00E9rt\u00E9k: ${issue.origin}`;\n            default:\n                return `\u00C9rv\u00E9nytelen bemenet`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"karakter\", verb: \"memiliki\" },\n        file: { unit: \"byte\", verb: \"memiliki\" },\n        array: { unit: \"item\", verb: \"memiliki\" },\n        set: { unit: \"item\", verb: \"memiliki\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"alamat email\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"tanggal dan waktu format ISO\",\n        date: \"tanggal format ISO\",\n        time: \"jam format ISO\",\n        duration: \"durasi format ISO\",\n        ipv4: \"alamat IPv4\",\n        ipv6: \"alamat IPv6\",\n        cidrv4: \"rentang alamat IPv4\",\n        cidrv6: \"rentang alamat IPv6\",\n        base64: \"string dengan enkode base64\",\n        base64url: \"string dengan enkode base64url\",\n        json_string: \"string JSON\",\n        e164: \"angka E.164\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Input tidak valid: diharapkan ${issue.expected}, diterima ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Input tidak valid: diharapkan ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Pilihan tidak valid: diharapkan salah satu dari ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Terlalu besar: diharapkan ${issue.origin ?? \"value\"} memiliki ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elemen\"}`;\n                return `Terlalu besar: diharapkan ${issue.origin ?? \"value\"} menjadi ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Terlalu kecil: diharapkan ${issue.origin} memiliki ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Terlalu kecil: diharapkan ${issue.origin} menjadi ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `String tidak valid: harus dimulai dengan \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `String tidak valid: harus berakhir dengan \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `String tidak valid: harus menyertakan \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `String tidak valid: harus sesuai pola ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} tidak valid`;\n            }\n            case \"not_multiple_of\":\n                return `Angka tidak valid: harus kelipatan dari ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Kunci tidak dikenali ${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Kunci tidak valid di ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Input tidak valid\";\n            case \"invalid_element\":\n                return `Nilai tidak valid di ${issue.origin}`;\n            default:\n                return `Input tidak valid`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nexport const parsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"number\": {\n            return Number.isNaN(data) ? \"NaN\" : \"n\u00FAmer\";\n        }\n        case \"object\": {\n            if (Array.isArray(data)) {\n                return \"fylki\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                return data.constructor.name;\n            }\n        }\n    }\n    return t;\n};\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"stafi\", verb: \"a\u00F0 hafa\" },\n        file: { unit: \"b\u00E6ti\", verb: \"a\u00F0 hafa\" },\n        array: { unit: \"hluti\", verb: \"a\u00F0 hafa\" },\n        set: { unit: \"hluti\", verb: \"a\u00F0 hafa\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const Nouns = {\n        regex: \"gildi\",\n        email: \"netfang\",\n        url: \"vefsl\u00F3\u00F0\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO dagsetning og t\u00EDmi\",\n        date: \"ISO dagsetning\",\n        time: \"ISO t\u00EDmi\",\n        duration: \"ISO t\u00EDmalengd\",\n        ipv4: \"IPv4 address\",\n        ipv6: \"IPv6 address\",\n        cidrv4: \"IPv4 range\",\n        cidrv6: \"IPv6 range\",\n        base64: \"base64-encoded strengur\",\n        base64url: \"base64url-encoded strengur\",\n        json_string: \"JSON strengur\",\n        e164: \"E.164 t\u00F6lugildi\",\n        jwt: \"JWT\",\n        template_literal: \"gildi\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Rangt gildi: \u00DE\u00FA sl\u00F3st inn ${parsedType(issue.input)} \u00FEar sem \u00E1 a\u00F0 vera ${issue.expected}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Rangt gildi: gert r\u00E1\u00F0 fyrir ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u00D3gilt val: m\u00E1 vera eitt af eftirfarandi ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Of st\u00F3rt: gert er r\u00E1\u00F0 fyrir a\u00F0 ${issue.origin ?? \"gildi\"} hafi ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"hluti\"}`;\n                return `Of st\u00F3rt: gert er r\u00E1\u00F0 fyrir a\u00F0 ${issue.origin ?? \"gildi\"} s\u00E9 ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Of l\u00EDti\u00F0: gert er r\u00E1\u00F0 fyrir a\u00F0 ${issue.origin} hafi ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Of l\u00EDti\u00F0: gert er r\u00E1\u00F0 fyrir a\u00F0 ${issue.origin} s\u00E9 ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `\u00D3gildur strengur: ver\u00F0ur a\u00F0 byrja \u00E1 \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `\u00D3gildur strengur: ver\u00F0ur a\u00F0 enda \u00E1 \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `\u00D3gildur strengur: ver\u00F0ur a\u00F0 innihalda \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `\u00D3gildur strengur: ver\u00F0ur a\u00F0 fylgja mynstri ${_issue.pattern}`;\n                return `Rangt ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `R\u00F6ng tala: ver\u00F0ur a\u00F0 vera margfeldi af ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `\u00D3\u00FEekkt ${issue.keys.length > 1 ? \"ir lyklar\" : \"ur lykill\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Rangur lykill \u00ED ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Rangt gildi\";\n            case \"invalid_element\":\n                return `Rangt gildi \u00ED ${issue.origin}`;\n            default:\n                return `Rangt gildi`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caratteri\", verb: \"avere\" },\n        file: { unit: \"byte\", verb: \"avere\" },\n        array: { unit: \"elementi\", verb: \"avere\" },\n        set: { unit: \"elementi\", verb: \"avere\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"numero\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"vettore\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"indirizzo email\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"data e ora ISO\",\n        date: \"data ISO\",\n        time: \"ora ISO\",\n        duration: \"durata ISO\",\n        ipv4: \"indirizzo IPv4\",\n        ipv6: \"indirizzo IPv6\",\n        cidrv4: \"intervallo IPv4\",\n        cidrv6: \"intervallo IPv6\",\n        base64: \"stringa codificata in base64\",\n        base64url: \"URL codificata in base64\",\n        json_string: \"stringa JSON\",\n        e164: \"numero E.164\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Input non valido: atteso ${issue.expected}, ricevuto ${parsedType(issue.input)}`;\n            // return `Input non valido: atteso ${issue.expected}, ricevuto ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Input non valido: atteso ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Opzione non valida: atteso uno tra ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Troppo grande: ${issue.origin ?? \"valore\"} deve avere ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementi\"}`;\n                return `Troppo grande: ${issue.origin ?? \"valore\"} deve essere ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Troppo piccolo: ${issue.origin} deve avere ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Troppo piccolo: ${issue.origin} deve essere ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Stringa non valida: deve iniziare con \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Stringa non valida: deve terminare con \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Stringa non valida: deve includere \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Stringa non valida: deve corrispondere al pattern ${_issue.pattern}`;\n                return `Invalid ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Numero non valido: deve essere un multiplo di ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Chiav${issue.keys.length > 1 ? \"i\" : \"e\"} non riconosciut${issue.keys.length > 1 ? \"e\" : \"a\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Chiave non valida in ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Input non valido\";\n            case \"invalid_element\":\n                return `Valore non valido in ${issue.origin}`;\n            default:\n                return `Input non valido`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u6587\u5B57\", verb: \"\u3067\u3042\u308B\" },\n        file: { unit: \"\u30D0\u30A4\u30C8\", verb: \"\u3067\u3042\u308B\" },\n        array: { unit: \"\u8981\u7D20\", verb: \"\u3067\u3042\u308B\" },\n        set: { unit: \"\u8981\u7D20\", verb: \"\u3067\u3042\u308B\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"\u6570\u5024\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"\u914D\u5217\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u5165\u529B\u5024\",\n        email: \"\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\",\n        url: \"URL\",\n        emoji: \"\u7D75\u6587\u5B57\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO\u65E5\u6642\",\n        date: \"ISO\u65E5\u4ED8\",\n        time: \"ISO\u6642\u523B\",\n        duration: \"ISO\u671F\u9593\",\n        ipv4: \"IPv4\u30A2\u30C9\u30EC\u30B9\",\n        ipv6: \"IPv6\u30A2\u30C9\u30EC\u30B9\",\n        cidrv4: \"IPv4\u7BC4\u56F2\",\n        cidrv6: \"IPv6\u7BC4\u56F2\",\n        base64: \"base64\u30A8\u30F3\u30B3\u30FC\u30C9\u6587\u5B57\u5217\",\n        base64url: \"base64url\u30A8\u30F3\u30B3\u30FC\u30C9\u6587\u5B57\u5217\",\n        json_string: \"JSON\u6587\u5B57\u5217\",\n        e164: \"E.164\u756A\u53F7\",\n        jwt: \"JWT\",\n        template_literal: \"\u5165\u529B\u5024\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u7121\u52B9\u306A\u5165\u529B: ${issue.expected}\u304C\u671F\u5F85\u3055\u308C\u307E\u3057\u305F\u304C\u3001${parsedType(issue.input)}\u304C\u5165\u529B\u3055\u308C\u307E\u3057\u305F`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u7121\u52B9\u306A\u5165\u529B: ${util.stringifyPrimitive(issue.values[0])}\u304C\u671F\u5F85\u3055\u308C\u307E\u3057\u305F`;\n                return `\u7121\u52B9\u306A\u9078\u629E: ${util.joinValues(issue.values, \"\u3001\")}\u306E\u3044\u305A\u308C\u304B\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"\u4EE5\u4E0B\u3067\u3042\u308B\" : \"\u3088\u308A\u5C0F\u3055\u3044\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u5927\u304D\u3059\u304E\u308B\u5024: ${issue.origin ?? \"\u5024\"}\u306F${issue.maximum.toString()}${sizing.unit ?? \"\u8981\u7D20\"}${adj}\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\n                return `\u5927\u304D\u3059\u304E\u308B\u5024: ${issue.origin ?? \"\u5024\"}\u306F${issue.maximum.toString()}${adj}\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"\u4EE5\u4E0A\u3067\u3042\u308B\" : \"\u3088\u308A\u5927\u304D\u3044\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u5C0F\u3055\u3059\u304E\u308B\u5024: ${issue.origin}\u306F${issue.minimum.toString()}${sizing.unit}${adj}\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\n                return `\u5C0F\u3055\u3059\u304E\u308B\u5024: ${issue.origin}\u306F${issue.minimum.toString()}${adj}\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `\u7121\u52B9\u306A\u6587\u5B57\u5217: \"${_issue.prefix}\"\u3067\u59CB\u307E\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\n                if (_issue.format === \"ends_with\")\n                    return `\u7121\u52B9\u306A\u6587\u5B57\u5217: \"${_issue.suffix}\"\u3067\u7D42\u308F\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\n                if (_issue.format === \"includes\")\n                    return `\u7121\u52B9\u306A\u6587\u5B57\u5217: \"${_issue.includes}\"\u3092\u542B\u3080\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\n                if (_issue.format === \"regex\")\n                    return `\u7121\u52B9\u306A\u6587\u5B57\u5217: \u30D1\u30BF\u30FC\u30F3${_issue.pattern}\u306B\u4E00\u81F4\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\n                return `\u7121\u52B9\u306A${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u7121\u52B9\u306A\u6570\u5024: ${issue.divisor}\u306E\u500D\u6570\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\n            case \"unrecognized_keys\":\n                return `\u8A8D\u8B58\u3055\u308C\u3066\u3044\u306A\u3044\u30AD\u30FC${issue.keys.length > 1 ? \"\u7FA4\" : \"\"}: ${util.joinValues(issue.keys, \"\u3001\")}`;\n            case \"invalid_key\":\n                return `${issue.origin}\u5185\u306E\u7121\u52B9\u306A\u30AD\u30FC`;\n            case \"invalid_union\":\n                return \"\u7121\u52B9\u306A\u5165\u529B\";\n            case \"invalid_element\":\n                return `${issue.origin}\u5185\u306E\u7121\u52B9\u306A\u5024`;\n            default:\n                return `\u7121\u52B9\u306A\u5165\u529B`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nexport const parsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"number\": {\n            return Number.isNaN(data) ? \"NaN\" : \"\u10E0\u10D8\u10EA\u10EE\u10D5\u10D8\";\n        }\n        case \"object\": {\n            if (Array.isArray(data)) {\n                return \"\u10DB\u10D0\u10E1\u10D8\u10D5\u10D8\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                return data.constructor.name;\n            }\n        }\n    }\n    const typeMap = {\n        string: \"\u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8\",\n        boolean: \"\u10D1\u10E3\u10DA\u10D4\u10D0\u10DC\u10D8\",\n        undefined: \"undefined\",\n        bigint: \"bigint\",\n        symbol: \"symbol\",\n        function: \"\u10E4\u10E3\u10DC\u10E5\u10EA\u10D8\u10D0\",\n    };\n    return typeMap[t] ?? t;\n};\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u10E1\u10D8\u10DB\u10D1\u10DD\u10DA\u10DD\", verb: \"\u10E3\u10DC\u10D3\u10D0 \u10E8\u10D4\u10D8\u10EA\u10D0\u10D5\u10D3\u10D4\u10E1\" },\n        file: { unit: \"\u10D1\u10D0\u10D8\u10E2\u10D8\", verb: \"\u10E3\u10DC\u10D3\u10D0 \u10E8\u10D4\u10D8\u10EA\u10D0\u10D5\u10D3\u10D4\u10E1\" },\n        array: { unit: \"\u10D4\u10DA\u10D4\u10DB\u10D4\u10DC\u10E2\u10D8\", verb: \"\u10E3\u10DC\u10D3\u10D0 \u10E8\u10D4\u10D8\u10EA\u10D0\u10D5\u10D3\u10D4\u10E1\" },\n        set: { unit: \"\u10D4\u10DA\u10D4\u10DB\u10D4\u10DC\u10E2\u10D8\", verb: \"\u10E3\u10DC\u10D3\u10D0 \u10E8\u10D4\u10D8\u10EA\u10D0\u10D5\u10D3\u10D4\u10E1\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const Nouns = {\n        regex: \"\u10E8\u10D4\u10E7\u10D5\u10D0\u10DC\u10D0\",\n        email: \"\u10D4\u10DA-\u10E4\u10DD\u10E1\u10E2\u10D8\u10E1 \u10DB\u10D8\u10E1\u10D0\u10DB\u10D0\u10E0\u10D7\u10D8\",\n        url: \"URL\",\n        emoji: \"\u10D4\u10DB\u10DD\u10EF\u10D8\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"\u10D7\u10D0\u10E0\u10D8\u10E6\u10D8-\u10D3\u10E0\u10DD\",\n        date: \"\u10D7\u10D0\u10E0\u10D8\u10E6\u10D8\",\n        time: \"\u10D3\u10E0\u10DD\",\n        duration: \"\u10EE\u10D0\u10DC\u10D2\u10E0\u10EB\u10DA\u10D8\u10D5\u10DD\u10D1\u10D0\",\n        ipv4: \"IPv4 \u10DB\u10D8\u10E1\u10D0\u10DB\u10D0\u10E0\u10D7\u10D8\",\n        ipv6: \"IPv6 \u10DB\u10D8\u10E1\u10D0\u10DB\u10D0\u10E0\u10D7\u10D8\",\n        cidrv4: \"IPv4 \u10D3\u10D8\u10D0\u10DE\u10D0\u10D6\u10DD\u10DC\u10D8\",\n        cidrv6: \"IPv6 \u10D3\u10D8\u10D0\u10DE\u10D0\u10D6\u10DD\u10DC\u10D8\",\n        base64: \"base64-\u10D9\u10DD\u10D3\u10D8\u10E0\u10D4\u10D1\u10E3\u10DA\u10D8 \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8\",\n        base64url: \"base64url-\u10D9\u10DD\u10D3\u10D8\u10E0\u10D4\u10D1\u10E3\u10DA\u10D8 \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8\",\n        json_string: \"JSON \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8\",\n        e164: \"E.164 \u10DC\u10DD\u10DB\u10D4\u10E0\u10D8\",\n        jwt: \"JWT\",\n        template_literal: \"\u10E8\u10D4\u10E7\u10D5\u10D0\u10DC\u10D0\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E8\u10D4\u10E7\u10D5\u10D0\u10DC\u10D0: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8 ${issue.expected}, \u10DB\u10D8\u10E6\u10D4\u10D1\u10E3\u10DA\u10D8 ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E8\u10D4\u10E7\u10D5\u10D0\u10DC\u10D0: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8 ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10D5\u10D0\u10E0\u10D8\u10D0\u10DC\u10E2\u10D8: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8\u10D0 \u10D4\u10E0\u10D7-\u10D4\u10E0\u10D7\u10D8 ${util.joinValues(issue.values, \"|\")}-\u10D3\u10D0\u10DC`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u10D6\u10D4\u10D3\u10DB\u10D4\u10E2\u10D0\u10D3 \u10D3\u10D8\u10D3\u10D8: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8 ${issue.origin ?? \"\u10DB\u10DC\u10D8\u10E8\u10D5\u10DC\u10D4\u10DA\u10DD\u10D1\u10D0\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit}`;\n                return `\u10D6\u10D4\u10D3\u10DB\u10D4\u10E2\u10D0\u10D3 \u10D3\u10D8\u10D3\u10D8: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8 ${issue.origin ?? \"\u10DB\u10DC\u10D8\u10E8\u10D5\u10DC\u10D4\u10DA\u10DD\u10D1\u10D0\"} \u10D8\u10E7\u10DD\u10E1 ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u10D6\u10D4\u10D3\u10DB\u10D4\u10E2\u10D0\u10D3 \u10DE\u10D0\u10E2\u10D0\u10E0\u10D0: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8 ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `\u10D6\u10D4\u10D3\u10DB\u10D4\u10E2\u10D0\u10D3 \u10DE\u10D0\u10E2\u10D0\u10E0\u10D0: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8 ${issue.origin} \u10D8\u10E7\u10DD\u10E1 ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8: \u10E3\u10DC\u10D3\u10D0 \u10D8\u10EC\u10E7\u10D4\u10D1\u10DD\u10D3\u10D4\u10E1 \"${_issue.prefix}\"-\u10D8\u10D7`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8: \u10E3\u10DC\u10D3\u10D0 \u10DB\u10D7\u10D0\u10D5\u10E0\u10D3\u10D4\u10D1\u10DD\u10D3\u10D4\u10E1 \"${_issue.suffix}\"-\u10D8\u10D7`;\n                if (_issue.format === \"includes\")\n                    return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8: \u10E3\u10DC\u10D3\u10D0 \u10E8\u10D4\u10D8\u10EA\u10D0\u10D5\u10D3\u10D4\u10E1 \"${_issue.includes}\"-\u10E1`;\n                if (_issue.format === \"regex\")\n                    return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8: \u10E3\u10DC\u10D3\u10D0 \u10E8\u10D4\u10D4\u10E1\u10D0\u10D1\u10D0\u10DB\u10D4\u10D1\u10DD\u10D3\u10D4\u10E1 \u10E8\u10D0\u10D1\u10DA\u10DD\u10DC\u10E1 ${_issue.pattern}`;\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E0\u10D8\u10EA\u10EE\u10D5\u10D8: \u10E3\u10DC\u10D3\u10D0 \u10D8\u10E7\u10DD\u10E1 ${issue.divisor}-\u10D8\u10E1 \u10EF\u10D4\u10E0\u10D0\u10D3\u10D8`;\n            case \"unrecognized_keys\":\n                return `\u10E3\u10EA\u10DC\u10DD\u10D1\u10D8 \u10D2\u10D0\u10E1\u10D0\u10E6\u10D4\u10D1${issue.keys.length > 1 ? \"\u10D4\u10D1\u10D8\" : \"\u10D8\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10D2\u10D0\u10E1\u10D0\u10E6\u10D4\u10D1\u10D8 ${issue.origin}-\u10E8\u10D8`;\n            case \"invalid_union\":\n                return \"\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E8\u10D4\u10E7\u10D5\u10D0\u10DC\u10D0\";\n            case \"invalid_element\":\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10DB\u10DC\u10D8\u10E8\u10D5\u10DC\u10D4\u10DA\u10DD\u10D1\u10D0 ${issue.origin}-\u10E8\u10D8`;\n            default:\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E8\u10D4\u10E7\u10D5\u10D0\u10DC\u10D0`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import km from \"./km.js\";\n/** @deprecated Use `km` instead. */\nexport default function () {\n    return km();\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u178F\u17BD\u17A2\u1780\u17D2\u179F\u179A\", verb: \"\u1782\u17BD\u179A\u1798\u17B6\u1793\" },\n        file: { unit: \"\u1794\u17C3\", verb: \"\u1782\u17BD\u179A\u1798\u17B6\u1793\" },\n        array: { unit: \"\u1792\u17B6\u178F\u17BB\", verb: \"\u1782\u17BD\u179A\u1798\u17B6\u1793\" },\n        set: { unit: \"\u1792\u17B6\u178F\u17BB\", verb: \"\u1782\u17BD\u179A\u1798\u17B6\u1793\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"\u1798\u17B7\u1793\u1798\u17C2\u1793\u1787\u17B6\u179B\u17C1\u1781 (NaN)\" : \"\u179B\u17C1\u1781\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"\u17A2\u17B6\u179A\u17C1 (Array)\";\n                }\n                if (data === null) {\n                    return \"\u1782\u17D2\u1798\u17B6\u1793\u178F\u1798\u17D2\u179B\u17C3 (null)\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1794\u1789\u17D2\u1785\u17BC\u179B\",\n        email: \"\u17A2\u17B6\u179F\u1799\u178A\u17D2\u178B\u17B6\u1793\u17A2\u17CA\u17B8\u1798\u17C2\u179B\",\n        url: \"URL\",\n        emoji: \"\u179F\u1789\u17D2\u1789\u17B6\u17A2\u17B6\u179A\u1798\u17D2\u1798\u178E\u17CD\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"\u1780\u17B6\u179B\u1794\u179A\u17B7\u1785\u17D2\u1786\u17C1\u1791 \u1793\u17B7\u1784\u1798\u17C9\u17C4\u1784 ISO\",\n        date: \"\u1780\u17B6\u179B\u1794\u179A\u17B7\u1785\u17D2\u1786\u17C1\u1791 ISO\",\n        time: \"\u1798\u17C9\u17C4\u1784 ISO\",\n        duration: \"\u179A\u1799\u17C8\u1796\u17C1\u179B ISO\",\n        ipv4: \"\u17A2\u17B6\u179F\u1799\u178A\u17D2\u178B\u17B6\u1793 IPv4\",\n        ipv6: \"\u17A2\u17B6\u179F\u1799\u178A\u17D2\u178B\u17B6\u1793 IPv6\",\n        cidrv4: \"\u178A\u17C2\u1793\u17A2\u17B6\u179F\u1799\u178A\u17D2\u178B\u17B6\u1793 IPv4\",\n        cidrv6: \"\u178A\u17C2\u1793\u17A2\u17B6\u179F\u1799\u178A\u17D2\u178B\u17B6\u1793 IPv6\",\n        base64: \"\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A\u17A2\u17CA\u17B7\u1780\u17BC\u178A base64\",\n        base64url: \"\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A\u17A2\u17CA\u17B7\u1780\u17BC\u178A base64url\",\n        json_string: \"\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A JSON\",\n        e164: \"\u179B\u17C1\u1781 E.164\",\n        jwt: \"JWT\",\n        template_literal: \"\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1794\u1789\u17D2\u1785\u17BC\u179B\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1794\u1789\u17D2\u1785\u17BC\u179B\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1780\u17B6\u179A ${issue.expected} \u1794\u17C9\u17BB\u1793\u17D2\u178F\u17C2\u1791\u1791\u17BD\u179B\u1794\u17B6\u1793 ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1794\u1789\u17D2\u1785\u17BC\u179B\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1780\u17B6\u179A ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u1787\u1798\u17D2\u179A\u17BE\u179F\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1787\u17B6\u1798\u17BD\u1799\u1780\u17D2\u1793\u17BB\u1784\u1785\u17C6\u178E\u17C4\u1798 ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u1792\u17C6\u1796\u17C1\u1780\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1780\u17B6\u179A ${issue.origin ?? \"\u178F\u1798\u17D2\u179B\u17C3\"} ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"\u1792\u17B6\u178F\u17BB\"}`;\n                return `\u1792\u17C6\u1796\u17C1\u1780\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1780\u17B6\u179A ${issue.origin ?? \"\u178F\u1798\u17D2\u179B\u17C3\"} ${adj} ${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u178F\u17BC\u1785\u1796\u17C1\u1780\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1780\u17B6\u179A ${issue.origin} ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `\u178F\u17BC\u1785\u1796\u17C1\u1780\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1780\u17B6\u179A ${issue.origin} ${adj} ${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1785\u17B6\u1794\u17CB\u1795\u17D2\u178F\u17BE\u1798\u178A\u17C4\u1799 \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1794\u1789\u17D2\u1785\u1794\u17CB\u178A\u17C4\u1799 \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1798\u17B6\u1793 \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u1795\u17D2\u1782\u17BC\u1795\u17D2\u1782\u1784\u1793\u17B9\u1784\u1791\u1798\u17D2\u179A\u1784\u17CB\u178A\u17C2\u179B\u1794\u17B6\u1793\u1780\u17C6\u178E\u178F\u17CB ${_issue.pattern}`;\n                return `\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u179B\u17C1\u1781\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u1787\u17B6\u1796\u17A0\u17BB\u1782\u17BB\u178E\u1793\u17C3 ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `\u179A\u1780\u1783\u17BE\u1789\u179F\u17C4\u1798\u17B7\u1793\u179F\u17D2\u1782\u17B6\u179B\u17CB\u17D6 ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `\u179F\u17C4\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u1793\u17C5\u1780\u17D2\u1793\u17BB\u1784 ${issue.origin}`;\n            case \"invalid_union\":\n                return `\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C`;\n            case \"invalid_element\":\n                return `\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u1793\u17C5\u1780\u17D2\u1793\u17BB\u1784 ${issue.origin}`;\n            default:\n                return `\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\uBB38\uC790\", verb: \"to have\" },\n        file: { unit: \"\uBC14\uC774\uD2B8\", verb: \"to have\" },\n        array: { unit: \"\uAC1C\", verb: \"to have\" },\n        set: { unit: \"\uAC1C\", verb: \"to have\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\uC785\uB825\",\n        email: \"\uC774\uBA54\uC77C \uC8FC\uC18C\",\n        url: \"URL\",\n        emoji: \"\uC774\uBAA8\uC9C0\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO \uB0A0\uC9DC\uC2DC\uAC04\",\n        date: \"ISO \uB0A0\uC9DC\",\n        time: \"ISO \uC2DC\uAC04\",\n        duration: \"ISO \uAE30\uAC04\",\n        ipv4: \"IPv4 \uC8FC\uC18C\",\n        ipv6: \"IPv6 \uC8FC\uC18C\",\n        cidrv4: \"IPv4 \uBC94\uC704\",\n        cidrv6: \"IPv6 \uBC94\uC704\",\n        base64: \"base64 \uC778\uCF54\uB529 \uBB38\uC790\uC5F4\",\n        base64url: \"base64url \uC778\uCF54\uB529 \uBB38\uC790\uC5F4\",\n        json_string: \"JSON \uBB38\uC790\uC5F4\",\n        e164: \"E.164 \uBC88\uD638\",\n        jwt: \"JWT\",\n        template_literal: \"\uC785\uB825\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\uC798\uBABB\uB41C \uC785\uB825: \uC608\uC0C1 \uD0C0\uC785\uC740 ${issue.expected}, \uBC1B\uC740 \uD0C0\uC785\uC740 ${parsedType(issue.input)}\uC785\uB2C8\uB2E4`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\uC798\uBABB\uB41C \uC785\uB825: \uAC12\uC740 ${util.stringifyPrimitive(issue.values[0])} \uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4`;\n                return `\uC798\uBABB\uB41C \uC635\uC158: ${util.joinValues(issue.values, \"\uB610\uB294 \")} \uC911 \uD558\uB098\uC5EC\uC57C \uD569\uB2C8\uB2E4`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"\uC774\uD558\" : \"\uBBF8\uB9CC\";\n                const suffix = adj === \"\uBBF8\uB9CC\" ? \"\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4\" : \"\uC5EC\uC57C \uD569\uB2C8\uB2E4\";\n                const sizing = getSizing(issue.origin);\n                const unit = sizing?.unit ?? \"\uC694\uC18C\";\n                if (sizing)\n                    return `${issue.origin ?? \"\uAC12\"}\uC774 \uB108\uBB34 \uD07D\uB2C8\uB2E4: ${issue.maximum.toString()}${unit} ${adj}${suffix}`;\n                return `${issue.origin ?? \"\uAC12\"}\uC774 \uB108\uBB34 \uD07D\uB2C8\uB2E4: ${issue.maximum.toString()} ${adj}${suffix}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"\uC774\uC0C1\" : \"\uCD08\uACFC\";\n                const suffix = adj === \"\uC774\uC0C1\" ? \"\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4\" : \"\uC5EC\uC57C \uD569\uB2C8\uB2E4\";\n                const sizing = getSizing(issue.origin);\n                const unit = sizing?.unit ?? \"\uC694\uC18C\";\n                if (sizing) {\n                    return `${issue.origin ?? \"\uAC12\"}\uC774 \uB108\uBB34 \uC791\uC2B5\uB2C8\uB2E4: ${issue.minimum.toString()}${unit} ${adj}${suffix}`;\n                }\n                return `${issue.origin ?? \"\uAC12\"}\uC774 \uB108\uBB34 \uC791\uC2B5\uB2C8\uB2E4: ${issue.minimum.toString()} ${adj}${suffix}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `\uC798\uBABB\uB41C \uBB38\uC790\uC5F4: \"${_issue.prefix}\"(\uC73C)\uB85C \uC2DC\uC791\uD574\uC57C \uD569\uB2C8\uB2E4`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `\uC798\uBABB\uB41C \uBB38\uC790\uC5F4: \"${_issue.suffix}\"(\uC73C)\uB85C \uB05D\uB098\uC57C \uD569\uB2C8\uB2E4`;\n                if (_issue.format === \"includes\")\n                    return `\uC798\uBABB\uB41C \uBB38\uC790\uC5F4: \"${_issue.includes}\"\uC744(\uB97C) \uD3EC\uD568\uD574\uC57C \uD569\uB2C8\uB2E4`;\n                if (_issue.format === \"regex\")\n                    return `\uC798\uBABB\uB41C \uBB38\uC790\uC5F4: \uC815\uADDC\uC2DD ${_issue.pattern} \uD328\uD134\uACFC \uC77C\uCE58\uD574\uC57C \uD569\uB2C8\uB2E4`;\n                return `\uC798\uBABB\uB41C ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\uC798\uBABB\uB41C \uC22B\uC790: ${issue.divisor}\uC758 \uBC30\uC218\uC5EC\uC57C \uD569\uB2C8\uB2E4`;\n            case \"unrecognized_keys\":\n                return `\uC778\uC2DD\uD560 \uC218 \uC5C6\uB294 \uD0A4: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `\uC798\uBABB\uB41C \uD0A4: ${issue.origin}`;\n            case \"invalid_union\":\n                return `\uC798\uBABB\uB41C \uC785\uB825`;\n            case \"invalid_element\":\n                return `\uC798\uBABB\uB41C \uAC12: ${issue.origin}`;\n            default:\n                return `\uC798\uBABB\uB41C \uC785\uB825`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nexport const parsedType = (data) => {\n    const t = typeof data;\n    return parsedTypeFromType(t, data);\n};\nconst parsedTypeFromType = (t, data = undefined) => {\n    switch (t) {\n        case \"number\": {\n            return Number.isNaN(data) ? \"NaN\" : \"skai\u010Dius\";\n        }\n        case \"bigint\": {\n            return \"sveikasis skai\u010Dius\";\n        }\n        case \"string\": {\n            return \"eilut\u0117\";\n        }\n        case \"boolean\": {\n            return \"login\u0117 reik\u0161m\u0117\";\n        }\n        case \"undefined\":\n        case \"void\": {\n            return \"neapibr\u0117\u017Eta reik\u0161m\u0117\";\n        }\n        case \"function\": {\n            return \"funkcija\";\n        }\n        case \"symbol\": {\n            return \"simbolis\";\n        }\n        case \"object\": {\n            if (data === undefined)\n                return \"ne\u017Einomas objektas\";\n            if (data === null)\n                return \"nulin\u0117 reik\u0161m\u0117\";\n            if (Array.isArray(data))\n                return \"masyvas\";\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                return data.constructor.name;\n            }\n            return \"objektas\";\n        }\n        //Zod types below\n        case \"null\": {\n            return \"nulin\u0117 reik\u0161m\u0117\";\n        }\n    }\n    return t;\n};\nconst capitalizeFirstCharacter = (text) => {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n};\nfunction getUnitTypeFromNumber(number) {\n    const abs = Math.abs(number);\n    const last = abs % 10;\n    const last2 = abs % 100;\n    if ((last2 >= 11 && last2 <= 19) || last === 0)\n        return \"many\";\n    if (last === 1)\n        return \"one\";\n    return \"few\";\n}\nconst error = () => {\n    const Sizable = {\n        string: {\n            unit: {\n                one: \"simbolis\",\n                few: \"simboliai\",\n                many: \"simboli\u0173\",\n            },\n            verb: {\n                smaller: {\n                    inclusive: \"turi b\u016Bti ne ilgesn\u0117 kaip\",\n                    notInclusive: \"turi b\u016Bti trumpesn\u0117 kaip\",\n                },\n                bigger: {\n                    inclusive: \"turi b\u016Bti ne trumpesn\u0117 kaip\",\n                    notInclusive: \"turi b\u016Bti ilgesn\u0117 kaip\",\n                },\n            },\n        },\n        file: {\n            unit: {\n                one: \"baitas\",\n                few: \"baitai\",\n                many: \"bait\u0173\",\n            },\n            verb: {\n                smaller: {\n                    inclusive: \"turi b\u016Bti ne didesnis kaip\",\n                    notInclusive: \"turi b\u016Bti ma\u017Eesnis kaip\",\n                },\n                bigger: {\n                    inclusive: \"turi b\u016Bti ne ma\u017Eesnis kaip\",\n                    notInclusive: \"turi b\u016Bti didesnis kaip\",\n                },\n            },\n        },\n        array: {\n            unit: {\n                one: \"element\u0105\",\n                few: \"elementus\",\n                many: \"element\u0173\",\n            },\n            verb: {\n                smaller: {\n                    inclusive: \"turi tur\u0117ti ne daugiau kaip\",\n                    notInclusive: \"turi tur\u0117ti ma\u017Eiau kaip\",\n                },\n                bigger: {\n                    inclusive: \"turi tur\u0117ti ne ma\u017Eiau kaip\",\n                    notInclusive: \"turi tur\u0117ti daugiau kaip\",\n                },\n            },\n        },\n        set: {\n            unit: {\n                one: \"element\u0105\",\n                few: \"elementus\",\n                many: \"element\u0173\",\n            },\n            verb: {\n                smaller: {\n                    inclusive: \"turi tur\u0117ti ne daugiau kaip\",\n                    notInclusive: \"turi tur\u0117ti ma\u017Eiau kaip\",\n                },\n                bigger: {\n                    inclusive: \"turi tur\u0117ti ne ma\u017Eiau kaip\",\n                    notInclusive: \"turi tur\u0117ti daugiau kaip\",\n                },\n            },\n        },\n    };\n    function getSizing(origin, unitType, inclusive, targetShouldBe) {\n        const result = Sizable[origin] ?? null;\n        if (result === null)\n            return result;\n        return {\n            unit: result.unit[unitType],\n            verb: result.verb[targetShouldBe][inclusive ? \"inclusive\" : \"notInclusive\"],\n        };\n    }\n    const Nouns = {\n        regex: \"\u012Fvestis\",\n        email: \"el. pa\u0161to adresas\",\n        url: \"URL\",\n        emoji: \"jaustukas\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO data ir laikas\",\n        date: \"ISO data\",\n        time: \"ISO laikas\",\n        duration: \"ISO trukm\u0117\",\n        ipv4: \"IPv4 adresas\",\n        ipv6: \"IPv6 adresas\",\n        cidrv4: \"IPv4 tinklo prefiksas (CIDR)\",\n        cidrv6: \"IPv6 tinklo prefiksas (CIDR)\",\n        base64: \"base64 u\u017Ekoduota eilut\u0117\",\n        base64url: \"base64url u\u017Ekoduota eilut\u0117\",\n        json_string: \"JSON eilut\u0117\",\n        e164: \"E.164 numeris\",\n        jwt: \"JWT\",\n        template_literal: \"\u012Fvestis\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Gautas tipas ${parsedType(issue.input)}, o tik\u0117tasi - ${parsedTypeFromType(issue.expected)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Privalo b\u016Bti ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Privalo b\u016Bti vienas i\u0161 ${util.joinValues(issue.values, \"|\")} pasirinkim\u0173`;\n            case \"too_big\": {\n                const origin = parsedTypeFromType(issue.origin);\n                const sizing = getSizing(issue.origin, getUnitTypeFromNumber(Number(issue.maximum)), issue.inclusive ?? false, \"smaller\");\n                if (sizing?.verb)\n                    return `${capitalizeFirstCharacter(origin ?? issue.origin ?? \"reik\u0161m\u0117\")} ${sizing.verb} ${issue.maximum.toString()} ${sizing.unit ?? \"element\u0173\"}`;\n                const adj = issue.inclusive ? \"ne didesnis kaip\" : \"ma\u017Eesnis kaip\";\n                return `${capitalizeFirstCharacter(origin ?? issue.origin ?? \"reik\u0161m\u0117\")} turi b\u016Bti ${adj} ${issue.maximum.toString()} ${sizing?.unit}`;\n            }\n            case \"too_small\": {\n                const origin = parsedTypeFromType(issue.origin);\n                const sizing = getSizing(issue.origin, getUnitTypeFromNumber(Number(issue.minimum)), issue.inclusive ?? false, \"bigger\");\n                if (sizing?.verb)\n                    return `${capitalizeFirstCharacter(origin ?? issue.origin ?? \"reik\u0161m\u0117\")} ${sizing.verb} ${issue.minimum.toString()} ${sizing.unit ?? \"element\u0173\"}`;\n                const adj = issue.inclusive ? \"ne ma\u017Eesnis kaip\" : \"didesnis kaip\";\n                return `${capitalizeFirstCharacter(origin ?? issue.origin ?? \"reik\u0161m\u0117\")} turi b\u016Bti ${adj} ${issue.minimum.toString()} ${sizing?.unit}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Eilut\u0117 privalo prasid\u0117ti \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Eilut\u0117 privalo pasibaigti \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Eilut\u0117 privalo \u012Ftraukti \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Eilut\u0117 privalo atitikti ${_issue.pattern}`;\n                return `Neteisingas ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Skai\u010Dius privalo b\u016Bti ${issue.divisor} kartotinis.`;\n            case \"unrecognized_keys\":\n                return `Neatpa\u017Eint${issue.keys.length > 1 ? \"i\" : \"as\"} rakt${issue.keys.length > 1 ? \"ai\" : \"as\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return \"Rastas klaidingas raktas\";\n            case \"invalid_union\":\n                return \"Klaidinga \u012Fvestis\";\n            case \"invalid_element\": {\n                const origin = parsedTypeFromType(issue.origin);\n                return `${capitalizeFirstCharacter(origin ?? issue.origin ?? \"reik\u0161m\u0117\")} turi klaiding\u0105 \u012Fvest\u012F`;\n            }\n            default:\n                return \"Klaidinga \u012Fvestis\";\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u0437\u043D\u0430\u0446\u0438\", verb: \"\u0434\u0430 \u0438\u043C\u0430\u0430\u0442\" },\n        file: { unit: \"\u0431\u0430\u0458\u0442\u0438\", verb: \"\u0434\u0430 \u0438\u043C\u0430\u0430\u0442\" },\n        array: { unit: \"\u0441\u0442\u0430\u0432\u043A\u0438\", verb: \"\u0434\u0430 \u0438\u043C\u0430\u0430\u0442\" },\n        set: { unit: \"\u0441\u0442\u0430\u0432\u043A\u0438\", verb: \"\u0434\u0430 \u0438\u043C\u0430\u0430\u0442\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"\u0431\u0440\u043E\u0458\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"\u043D\u0438\u0437\u0430\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u0432\u043D\u0435\u0441\",\n        email: \"\u0430\u0434\u0440\u0435\u0441\u0430 \u043D\u0430 \u0435-\u043F\u043E\u0448\u0442\u0430\",\n        url: \"URL\",\n        emoji: \"\u0435\u043C\u043E\u045F\u0438\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO \u0434\u0430\u0442\u0443\u043C \u0438 \u0432\u0440\u0435\u043C\u0435\",\n        date: \"ISO \u0434\u0430\u0442\u0443\u043C\",\n        time: \"ISO \u0432\u0440\u0435\u043C\u0435\",\n        duration: \"ISO \u0432\u0440\u0435\u043C\u0435\u0442\u0440\u0430\u0435\u045A\u0435\",\n        ipv4: \"IPv4 \u0430\u0434\u0440\u0435\u0441\u0430\",\n        ipv6: \"IPv6 \u0430\u0434\u0440\u0435\u0441\u0430\",\n        cidrv4: \"IPv4 \u043E\u043F\u0441\u0435\u0433\",\n        cidrv6: \"IPv6 \u043E\u043F\u0441\u0435\u0433\",\n        base64: \"base64-\u0435\u043D\u043A\u043E\u0434\u0438\u0440\u0430\u043D\u0430 \u043D\u0438\u0437\u0430\",\n        base64url: \"base64url-\u0435\u043D\u043A\u043E\u0434\u0438\u0440\u0430\u043D\u0430 \u043D\u0438\u0437\u0430\",\n        json_string: \"JSON \u043D\u0438\u0437\u0430\",\n        e164: \"E.164 \u0431\u0440\u043E\u0458\",\n        jwt: \"JWT\",\n        template_literal: \"\u0432\u043D\u0435\u0441\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u0413\u0440\u0435\u0448\u0435\u043D \u0432\u043D\u0435\u0441: \u0441\u0435 \u043E\u0447\u0435\u043A\u0443\u0432\u0430 ${issue.expected}, \u043F\u0440\u0438\u043C\u0435\u043D\u043E ${parsedType(issue.input)}`;\n            // return `Invalid input: expected ${issue.expected}, received ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Invalid input: expected ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u0413\u0440\u0435\u0448\u0430\u043D\u0430 \u043E\u043F\u0446\u0438\u0458\u0430: \u0441\u0435 \u043E\u0447\u0435\u043A\u0443\u0432\u0430 \u0435\u0434\u043D\u0430 ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u041F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u0433\u043E\u043B\u0435\u043C: \u0441\u0435 \u043E\u0447\u0435\u043A\u0443\u0432\u0430 ${issue.origin ?? \"\u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442\u0430\"} \u0434\u0430 \u0438\u043C\u0430 ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0438\"}`;\n                return `\u041F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u0433\u043E\u043B\u0435\u043C: \u0441\u0435 \u043E\u0447\u0435\u043A\u0443\u0432\u0430 ${issue.origin ?? \"\u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442\u0430\"} \u0434\u0430 \u0431\u0438\u0434\u0435 ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u041F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u043C\u0430\u043B: \u0441\u0435 \u043E\u0447\u0435\u043A\u0443\u0432\u0430 ${issue.origin} \u0434\u0430 \u0438\u043C\u0430 ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `\u041F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u043C\u0430\u043B: \u0441\u0435 \u043E\u0447\u0435\u043A\u0443\u0432\u0430 ${issue.origin} \u0434\u0430 \u0431\u0438\u0434\u0435 ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `\u041D\u0435\u0432\u0430\u0436\u0435\u0447\u043A\u0430 \u043D\u0438\u0437\u0430: \u043C\u043E\u0440\u0430 \u0434\u0430 \u0437\u0430\u043F\u043E\u0447\u043D\u0443\u0432\u0430 \u0441\u043E \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `\u041D\u0435\u0432\u0430\u0436\u0435\u0447\u043A\u0430 \u043D\u0438\u0437\u0430: \u043C\u043E\u0440\u0430 \u0434\u0430 \u0437\u0430\u0432\u0440\u0448\u0443\u0432\u0430 \u0441\u043E \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `\u041D\u0435\u0432\u0430\u0436\u0435\u0447\u043A\u0430 \u043D\u0438\u0437\u0430: \u043C\u043E\u0440\u0430 \u0434\u0430 \u0432\u043A\u043B\u0443\u0447\u0443\u0432\u0430 \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `\u041D\u0435\u0432\u0430\u0436\u0435\u0447\u043A\u0430 \u043D\u0438\u0437\u0430: \u043C\u043E\u0440\u0430 \u0434\u0430 \u043E\u0434\u0433\u043E\u0430\u0440\u0430 \u043D\u0430 \u043F\u0430\u0442\u0435\u0440\u043D\u043E\u0442 ${_issue.pattern}`;\n                return `Invalid ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u0413\u0440\u0435\u0448\u0435\u043D \u0431\u0440\u043E\u0458: \u043C\u043E\u0440\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u0434\u0435\u043B\u0438\u0432 \u0441\u043E ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"\u041D\u0435\u043F\u0440\u0435\u043F\u043E\u0437\u043D\u0430\u0435\u043D\u0438 \u043A\u043B\u0443\u0447\u0435\u0432\u0438\" : \"\u041D\u0435\u043F\u0440\u0435\u043F\u043E\u0437\u043D\u0430\u0435\u043D \u043A\u043B\u0443\u0447\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `\u0413\u0440\u0435\u0448\u0435\u043D \u043A\u043B\u0443\u0447 \u0432\u043E ${issue.origin}`;\n            case \"invalid_union\":\n                return \"\u0413\u0440\u0435\u0448\u0435\u043D \u0432\u043D\u0435\u0441\";\n            case \"invalid_element\":\n                return `\u0413\u0440\u0435\u0448\u043D\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0432\u043E ${issue.origin}`;\n            default:\n                return `\u0413\u0440\u0435\u0448\u0435\u043D \u0432\u043D\u0435\u0441`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"aksara\", verb: \"mempunyai\" },\n        file: { unit: \"bait\", verb: \"mempunyai\" },\n        array: { unit: \"elemen\", verb: \"mempunyai\" },\n        set: { unit: \"elemen\", verb: \"mempunyai\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"nombor\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"alamat e-mel\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"tarikh masa ISO\",\n        date: \"tarikh ISO\",\n        time: \"masa ISO\",\n        duration: \"tempoh ISO\",\n        ipv4: \"alamat IPv4\",\n        ipv6: \"alamat IPv6\",\n        cidrv4: \"julat IPv4\",\n        cidrv6: \"julat IPv6\",\n        base64: \"string dikodkan base64\",\n        base64url: \"string dikodkan base64url\",\n        json_string: \"string JSON\",\n        e164: \"nombor E.164\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Input tidak sah: dijangka ${issue.expected}, diterima ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Input tidak sah: dijangka ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Pilihan tidak sah: dijangka salah satu daripada ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Terlalu besar: dijangka ${issue.origin ?? \"nilai\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elemen\"}`;\n                return `Terlalu besar: dijangka ${issue.origin ?? \"nilai\"} adalah ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Terlalu kecil: dijangka ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Terlalu kecil: dijangka ${issue.origin} adalah ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `String tidak sah: mesti bermula dengan \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `String tidak sah: mesti berakhir dengan \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `String tidak sah: mesti mengandungi \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `String tidak sah: mesti sepadan dengan corak ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} tidak sah`;\n            }\n            case \"not_multiple_of\":\n                return `Nombor tidak sah: perlu gandaan ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Kunci tidak dikenali: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Kunci tidak sah dalam ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Input tidak sah\";\n            case \"invalid_element\":\n                return `Nilai tidak sah dalam ${issue.origin}`;\n            default:\n                return `Input tidak sah`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"tekens\" },\n        file: { unit: \"bytes\" },\n        array: { unit: \"elementen\" },\n        set: { unit: \"elementen\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"getal\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"invoer\",\n        email: \"emailadres\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO datum en tijd\",\n        date: \"ISO datum\",\n        time: \"ISO tijd\",\n        duration: \"ISO duur\",\n        ipv4: \"IPv4-adres\",\n        ipv6: \"IPv6-adres\",\n        cidrv4: \"IPv4-bereik\",\n        cidrv6: \"IPv6-bereik\",\n        base64: \"base64-gecodeerde tekst\",\n        base64url: \"base64 URL-gecodeerde tekst\",\n        json_string: \"JSON string\",\n        e164: \"E.164-nummer\",\n        jwt: \"JWT\",\n        template_literal: \"invoer\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ongeldige invoer: verwacht ${issue.expected}, ontving ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ongeldige invoer: verwacht ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ongeldige optie: verwacht \u00E9\u00E9n van ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Te lang: verwacht dat ${issue.origin ?? \"waarde\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementen\"} bevat`;\n                return `Te lang: verwacht dat ${issue.origin ?? \"waarde\"} ${adj}${issue.maximum.toString()} is`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Te kort: verwacht dat ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} bevat`;\n                }\n                return `Te kort: verwacht dat ${issue.origin} ${adj}${issue.minimum.toString()} is`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Ongeldige tekst: moet met \"${_issue.prefix}\" beginnen`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Ongeldige tekst: moet op \"${_issue.suffix}\" eindigen`;\n                if (_issue.format === \"includes\")\n                    return `Ongeldige tekst: moet \"${_issue.includes}\" bevatten`;\n                if (_issue.format === \"regex\")\n                    return `Ongeldige tekst: moet overeenkomen met patroon ${_issue.pattern}`;\n                return `Ongeldig: ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ongeldig getal: moet een veelvoud van ${issue.divisor} zijn`;\n            case \"unrecognized_keys\":\n                return `Onbekende key${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ongeldige key in ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Ongeldige invoer\";\n            case \"invalid_element\":\n                return `Ongeldige waarde in ${issue.origin}`;\n            default:\n                return `Ongeldige invoer`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"tegn\", verb: \"\u00E5 ha\" },\n        file: { unit: \"bytes\", verb: \"\u00E5 ha\" },\n        array: { unit: \"elementer\", verb: \"\u00E5 inneholde\" },\n        set: { unit: \"elementer\", verb: \"\u00E5 inneholde\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"tall\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"liste\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"e-postadresse\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO dato- og klokkeslett\",\n        date: \"ISO-dato\",\n        time: \"ISO-klokkeslett\",\n        duration: \"ISO-varighet\",\n        ipv4: \"IPv4-omr\u00E5de\",\n        ipv6: \"IPv6-omr\u00E5de\",\n        cidrv4: \"IPv4-spekter\",\n        cidrv6: \"IPv6-spekter\",\n        base64: \"base64-enkodet streng\",\n        base64url: \"base64url-enkodet streng\",\n        json_string: \"JSON-streng\",\n        e164: \"E.164-nummer\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ugyldig input: forventet ${issue.expected}, fikk ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ugyldig verdi: forventet ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ugyldig valg: forventet en av ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `For stor(t): forventet ${issue.origin ?? \"value\"} til \u00E5 ha ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementer\"}`;\n                return `For stor(t): forventet ${issue.origin ?? \"value\"} til \u00E5 ha ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `For lite(n): forventet ${issue.origin} til \u00E5 ha ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `For lite(n): forventet ${issue.origin} til \u00E5 ha ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Ugyldig streng: m\u00E5 starte med \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Ugyldig streng: m\u00E5 ende med \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Ugyldig streng: m\u00E5 inneholde \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Ugyldig streng: m\u00E5 matche m\u00F8nsteret ${_issue.pattern}`;\n                return `Ugyldig ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ugyldig tall: m\u00E5 v\u00E6re et multiplum av ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Ukjente n\u00F8kler\" : \"Ukjent n\u00F8kkel\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ugyldig n\u00F8kkel i ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Ugyldig input\";\n            case \"invalid_element\":\n                return `Ugyldig verdi i ${issue.origin}`;\n            default:\n                return `Ugyldig input`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"harf\", verb: \"olmal\u0131d\u0131r\" },\n        file: { unit: \"bayt\", verb: \"olmal\u0131d\u0131r\" },\n        array: { unit: \"unsur\", verb: \"olmal\u0131d\u0131r\" },\n        set: { unit: \"unsur\", verb: \"olmal\u0131d\u0131r\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"numara\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"saf\";\n                }\n                if (data === null) {\n                    return \"gayb\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"giren\",\n        email: \"epostag\u00E2h\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO heng\u00E2m\u0131\",\n        date: \"ISO tarihi\",\n        time: \"ISO zaman\u0131\",\n        duration: \"ISO m\u00FCddeti\",\n        ipv4: \"IPv4 ni\u015F\u00E2n\u0131\",\n        ipv6: \"IPv6 ni\u015F\u00E2n\u0131\",\n        cidrv4: \"IPv4 menzili\",\n        cidrv6: \"IPv6 menzili\",\n        base64: \"base64-\u015Fifreli metin\",\n        base64url: \"base64url-\u015Fifreli metin\",\n        json_string: \"JSON metin\",\n        e164: \"E.164 say\u0131s\u0131\",\n        jwt: \"JWT\",\n        template_literal: \"giren\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `F\u00E2sit giren: umulan ${issue.expected}, al\u0131nan ${parsedType(issue.input)}`;\n            // return `F\u00E2sit giren: umulan ${issue.expected}, al\u0131nan ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `F\u00E2sit giren: umulan ${util.stringifyPrimitive(issue.values[0])}`;\n                return `F\u00E2sit tercih: m\u00FBteberler ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Fazla b\u00FCy\u00FCk: ${issue.origin ?? \"value\"}, ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elements\"} sahip olmal\u0131yd\u0131.`;\n                return `Fazla b\u00FCy\u00FCk: ${issue.origin ?? \"value\"}, ${adj}${issue.maximum.toString()} olmal\u0131yd\u0131.`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Fazla k\u00FC\u00E7\u00FCk: ${issue.origin}, ${adj}${issue.minimum.toString()} ${sizing.unit} sahip olmal\u0131yd\u0131.`;\n                }\n                return `Fazla k\u00FC\u00E7\u00FCk: ${issue.origin}, ${adj}${issue.minimum.toString()} olmal\u0131yd\u0131.`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `F\u00E2sit metin: \"${_issue.prefix}\" ile ba\u015Flamal\u0131.`;\n                if (_issue.format === \"ends_with\")\n                    return `F\u00E2sit metin: \"${_issue.suffix}\" ile bitmeli.`;\n                if (_issue.format === \"includes\")\n                    return `F\u00E2sit metin: \"${_issue.includes}\" ihtiv\u00E2 etmeli.`;\n                if (_issue.format === \"regex\")\n                    return `F\u00E2sit metin: ${_issue.pattern} nak\u015F\u0131na uymal\u0131.`;\n                return `F\u00E2sit ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `F\u00E2sit say\u0131: ${issue.divisor} kat\u0131 olmal\u0131yd\u0131.`;\n            case \"unrecognized_keys\":\n                return `Tan\u0131nmayan anahtar ${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} i\u00E7in tan\u0131nmayan anahtar var.`;\n            case \"invalid_union\":\n                return \"Giren tan\u0131namad\u0131.\";\n            case \"invalid_element\":\n                return `${issue.origin} i\u00E7in tan\u0131nmayan k\u0131ymet var.`;\n            default:\n                return `K\u0131ymet tan\u0131namad\u0131.`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u062A\u0648\u06A9\u064A\", verb: \"\u0648\u0644\u0631\u064A\" },\n        file: { unit: \"\u0628\u0627\u06CC\u067C\u0633\", verb: \"\u0648\u0644\u0631\u064A\" },\n        array: { unit: \"\u062A\u0648\u06A9\u064A\", verb: \"\u0648\u0644\u0631\u064A\" },\n        set: { unit: \"\u062A\u0648\u06A9\u064A\", verb: \"\u0648\u0644\u0631\u064A\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"\u0639\u062F\u062F\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"\u0627\u0631\u06D0\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u0648\u0631\u0648\u062F\u064A\",\n        email: \"\u0628\u0631\u06CC\u069A\u0646\u0627\u0644\u06CC\u06A9\",\n        url: \"\u06CC\u0648 \u0622\u0631 \u0627\u0644\",\n        emoji: \"\u0627\u06CC\u0645\u0648\u062C\u064A\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"\u0646\u06CC\u067C\u0647 \u0627\u0648 \u0648\u062E\u062A\",\n        date: \"\u0646\u06D0\u067C\u0647\",\n        time: \"\u0648\u062E\u062A\",\n        duration: \"\u0645\u0648\u062F\u0647\",\n        ipv4: \"\u062F IPv4 \u067E\u062A\u0647\",\n        ipv6: \"\u062F IPv6 \u067E\u062A\u0647\",\n        cidrv4: \"\u062F IPv4 \u0633\u0627\u062D\u0647\",\n        cidrv6: \"\u062F IPv6 \u0633\u0627\u062D\u0647\",\n        base64: \"base64-encoded \u0645\u062A\u0646\",\n        base64url: \"base64url-encoded \u0645\u062A\u0646\",\n        json_string: \"JSON \u0645\u062A\u0646\",\n        e164: \"\u062F E.164 \u0634\u0645\u06D0\u0631\u0647\",\n        jwt: \"JWT\",\n        template_literal: \"\u0648\u0631\u0648\u062F\u064A\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u0646\u0627\u0633\u0645 \u0648\u0631\u0648\u062F\u064A: \u0628\u0627\u06CC\u062F ${issue.expected} \u0648\u0627\u06CC, \u0645\u06AB\u0631 ${parsedType(issue.input)} \u062A\u0631\u0644\u0627\u0633\u0647 \u0634\u0648`;\n            case \"invalid_value\":\n                if (issue.values.length === 1) {\n                    return `\u0646\u0627\u0633\u0645 \u0648\u0631\u0648\u062F\u064A: \u0628\u0627\u06CC\u062F ${util.stringifyPrimitive(issue.values[0])} \u0648\u0627\u06CC`;\n                }\n                return `\u0646\u0627\u0633\u0645 \u0627\u0646\u062A\u062E\u0627\u0628: \u0628\u0627\u06CC\u062F \u06CC\u0648 \u0644\u0647 ${util.joinValues(issue.values, \"|\")} \u0685\u062E\u0647 \u0648\u0627\u06CC`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u0689\u06CC\u0631 \u0644\u0648\u06CC: ${issue.origin ?? \"\u0627\u0631\u0632\u069A\u062A\"} \u0628\u0627\u06CC\u062F ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u0639\u0646\u0635\u0631\u0648\u0646\u0647\"} \u0648\u0644\u0631\u064A`;\n                }\n                return `\u0689\u06CC\u0631 \u0644\u0648\u06CC: ${issue.origin ?? \"\u0627\u0631\u0632\u069A\u062A\"} \u0628\u0627\u06CC\u062F ${adj}${issue.maximum.toString()} \u0648\u064A`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u0689\u06CC\u0631 \u06A9\u0648\u0686\u0646\u06CC: ${issue.origin} \u0628\u0627\u06CC\u062F ${adj}${issue.minimum.toString()} ${sizing.unit} \u0648\u0644\u0631\u064A`;\n                }\n                return `\u0689\u06CC\u0631 \u06A9\u0648\u0686\u0646\u06CC: ${issue.origin} \u0628\u0627\u06CC\u062F ${adj}${issue.minimum.toString()} \u0648\u064A`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `\u0646\u0627\u0633\u0645 \u0645\u062A\u0646: \u0628\u0627\u06CC\u062F \u062F \"${_issue.prefix}\" \u0633\u0631\u0647 \u067E\u06CC\u0644 \u0634\u064A`;\n                }\n                if (_issue.format === \"ends_with\") {\n                    return `\u0646\u0627\u0633\u0645 \u0645\u062A\u0646: \u0628\u0627\u06CC\u062F \u062F \"${_issue.suffix}\" \u0633\u0631\u0647 \u067E\u0627\u06CC \u062A\u0647 \u0648\u0631\u0633\u064A\u0696\u064A`;\n                }\n                if (_issue.format === \"includes\") {\n                    return `\u0646\u0627\u0633\u0645 \u0645\u062A\u0646: \u0628\u0627\u06CC\u062F \"${_issue.includes}\" \u0648\u0644\u0631\u064A`;\n                }\n                if (_issue.format === \"regex\") {\n                    return `\u0646\u0627\u0633\u0645 \u0645\u062A\u0646: \u0628\u0627\u06CC\u062F \u062F ${_issue.pattern} \u0633\u0631\u0647 \u0645\u0637\u0627\u0628\u0642\u062A \u0648\u0644\u0631\u064A`;\n                }\n                return `${Nouns[_issue.format] ?? issue.format} \u0646\u0627\u0633\u0645 \u062F\u06CC`;\n            }\n            case \"not_multiple_of\":\n                return `\u0646\u0627\u0633\u0645 \u0639\u062F\u062F: \u0628\u0627\u06CC\u062F \u062F ${issue.divisor} \u0645\u0636\u0631\u0628 \u0648\u064A`;\n            case \"unrecognized_keys\":\n                return `\u0646\u0627\u0633\u0645 ${issue.keys.length > 1 ? \"\u06A9\u0644\u06CC\u0689\u0648\u0646\u0647\" : \"\u06A9\u0644\u06CC\u0689\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `\u0646\u0627\u0633\u0645 \u06A9\u0644\u06CC\u0689 \u067E\u0647 ${issue.origin} \u06A9\u06D0`;\n            case \"invalid_union\":\n                return `\u0646\u0627\u0633\u0645\u0647 \u0648\u0631\u0648\u062F\u064A`;\n            case \"invalid_element\":\n                return `\u0646\u0627\u0633\u0645 \u0639\u0646\u0635\u0631 \u067E\u0647 ${issue.origin} \u06A9\u06D0`;\n            default:\n                return `\u0646\u0627\u0633\u0645\u0647 \u0648\u0631\u0648\u062F\u064A`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"znak\u00F3w\", verb: \"mie\u0107\" },\n        file: { unit: \"bajt\u00F3w\", verb: \"mie\u0107\" },\n        array: { unit: \"element\u00F3w\", verb: \"mie\u0107\" },\n        set: { unit: \"element\u00F3w\", verb: \"mie\u0107\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"liczba\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"tablica\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"wyra\u017Cenie\",\n        email: \"adres email\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"data i godzina w formacie ISO\",\n        date: \"data w formacie ISO\",\n        time: \"godzina w formacie ISO\",\n        duration: \"czas trwania ISO\",\n        ipv4: \"adres IPv4\",\n        ipv6: \"adres IPv6\",\n        cidrv4: \"zakres IPv4\",\n        cidrv6: \"zakres IPv6\",\n        base64: \"ci\u0105g znak\u00F3w zakodowany w formacie base64\",\n        base64url: \"ci\u0105g znak\u00F3w zakodowany w formacie base64url\",\n        json_string: \"ci\u0105g znak\u00F3w w formacie JSON\",\n        e164: \"liczba E.164\",\n        jwt: \"JWT\",\n        template_literal: \"wej\u015Bcie\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Nieprawid\u0142owe dane wej\u015Bciowe: oczekiwano ${issue.expected}, otrzymano ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Nieprawid\u0142owe dane wej\u015Bciowe: oczekiwano ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Nieprawid\u0142owa opcja: oczekiwano jednej z warto\u015Bci ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Za du\u017Ca warto\u015B\u0107: oczekiwano, \u017Ce ${issue.origin ?? \"warto\u015B\u0107\"} b\u0119dzie mie\u0107 ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"element\u00F3w\"}`;\n                }\n                return `Zbyt du\u017C(y/a/e): oczekiwano, \u017Ce ${issue.origin ?? \"warto\u015B\u0107\"} b\u0119dzie wynosi\u0107 ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Za ma\u0142a warto\u015B\u0107: oczekiwano, \u017Ce ${issue.origin ?? \"warto\u015B\u0107\"} b\u0119dzie mie\u0107 ${adj}${issue.minimum.toString()} ${sizing.unit ?? \"element\u00F3w\"}`;\n                }\n                return `Zbyt ma\u0142(y/a/e): oczekiwano, \u017Ce ${issue.origin ?? \"warto\u015B\u0107\"} b\u0119dzie wynosi\u0107 ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Nieprawid\u0142owy ci\u0105g znak\u00F3w: musi zaczyna\u0107 si\u0119 od \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Nieprawid\u0142owy ci\u0105g znak\u00F3w: musi ko\u0144czy\u0107 si\u0119 na \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Nieprawid\u0142owy ci\u0105g znak\u00F3w: musi zawiera\u0107 \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Nieprawid\u0142owy ci\u0105g znak\u00F3w: musi odpowiada\u0107 wzorcowi ${_issue.pattern}`;\n                return `Nieprawid\u0142ow(y/a/e) ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Nieprawid\u0142owa liczba: musi by\u0107 wielokrotno\u015Bci\u0105 ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Nierozpoznane klucze${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Nieprawid\u0142owy klucz w ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Nieprawid\u0142owe dane wej\u015Bciowe\";\n            case \"invalid_element\":\n                return `Nieprawid\u0142owa warto\u015B\u0107 w ${issue.origin}`;\n            default:\n                return `Nieprawid\u0142owe dane wej\u015Bciowe`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caracteres\", verb: \"ter\" },\n        file: { unit: \"bytes\", verb: \"ter\" },\n        array: { unit: \"itens\", verb: \"ter\" },\n        set: { unit: \"itens\", verb: \"ter\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"n\u00FAmero\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"nulo\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"padr\u00E3o\",\n        email: \"endere\u00E7o de e-mail\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"data e hora ISO\",\n        date: \"data ISO\",\n        time: \"hora ISO\",\n        duration: \"dura\u00E7\u00E3o ISO\",\n        ipv4: \"endere\u00E7o IPv4\",\n        ipv6: \"endere\u00E7o IPv6\",\n        cidrv4: \"faixa de IPv4\",\n        cidrv6: \"faixa de IPv6\",\n        base64: \"texto codificado em base64\",\n        base64url: \"URL codificada em base64\",\n        json_string: \"texto JSON\",\n        e164: \"n\u00FAmero E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entrada\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Tipo inv\u00E1lido: esperado ${issue.expected}, recebido ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Entrada inv\u00E1lida: esperado ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Op\u00E7\u00E3o inv\u00E1lida: esperada uma das ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Muito grande: esperado que ${issue.origin ?? \"valor\"} tivesse ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementos\"}`;\n                return `Muito grande: esperado que ${issue.origin ?? \"valor\"} fosse ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Muito pequeno: esperado que ${issue.origin} tivesse ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Muito pequeno: esperado que ${issue.origin} fosse ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Texto inv\u00E1lido: deve come\u00E7ar com \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Texto inv\u00E1lido: deve terminar com \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Texto inv\u00E1lido: deve incluir \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Texto inv\u00E1lido: deve corresponder ao padr\u00E3o ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} inv\u00E1lido`;\n            }\n            case \"not_multiple_of\":\n                return `N\u00FAmero inv\u00E1lido: deve ser m\u00FAltiplo de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Chave${issue.keys.length > 1 ? \"s\" : \"\"} desconhecida${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Chave inv\u00E1lida em ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entrada inv\u00E1lida\";\n            case \"invalid_element\":\n                return `Valor inv\u00E1lido em ${issue.origin}`;\n            default:\n                return `Campo inv\u00E1lido`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nfunction getRussianPlural(count, one, few, many) {\n    const absCount = Math.abs(count);\n    const lastDigit = absCount % 10;\n    const lastTwoDigits = absCount % 100;\n    if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {\n        return many;\n    }\n    if (lastDigit === 1) {\n        return one;\n    }\n    if (lastDigit >= 2 && lastDigit <= 4) {\n        return few;\n    }\n    return many;\n}\nconst error = () => {\n    const Sizable = {\n        string: {\n            unit: {\n                one: \"\u0441\u0438\u043C\u0432\u043E\u043B\",\n                few: \"\u0441\u0438\u043C\u0432\u043E\u043B\u0430\",\n                many: \"\u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432\",\n            },\n            verb: \"\u0438\u043C\u0435\u0442\u044C\",\n        },\n        file: {\n            unit: {\n                one: \"\u0431\u0430\u0439\u0442\",\n                few: \"\u0431\u0430\u0439\u0442\u0430\",\n                many: \"\u0431\u0430\u0439\u0442\",\n            },\n            verb: \"\u0438\u043C\u0435\u0442\u044C\",\n        },\n        array: {\n            unit: {\n                one: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\",\n                few: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\",\n                many: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432\",\n            },\n            verb: \"\u0438\u043C\u0435\u0442\u044C\",\n        },\n        set: {\n            unit: {\n                one: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\",\n                few: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\",\n                many: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432\",\n            },\n            verb: \"\u0438\u043C\u0435\u0442\u044C\",\n        },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"\u0447\u0438\u0441\u043B\u043E\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"\u043C\u0430\u0441\u0441\u0438\u0432\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u0432\u0432\u043E\u0434\",\n        email: \"email \u0430\u0434\u0440\u0435\u0441\",\n        url: \"URL\",\n        emoji: \"\u044D\u043C\u043E\u0434\u0437\u0438\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO \u0434\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043C\u044F\",\n        date: \"ISO \u0434\u0430\u0442\u0430\",\n        time: \"ISO \u0432\u0440\u0435\u043C\u044F\",\n        duration: \"ISO \u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C\",\n        ipv4: \"IPv4 \u0430\u0434\u0440\u0435\u0441\",\n        ipv6: \"IPv6 \u0430\u0434\u0440\u0435\u0441\",\n        cidrv4: \"IPv4 \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\",\n        cidrv6: \"IPv6 \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\",\n        base64: \"\u0441\u0442\u0440\u043E\u043A\u0430 \u0432 \u0444\u043E\u0440\u043C\u0430\u0442\u0435 base64\",\n        base64url: \"\u0441\u0442\u0440\u043E\u043A\u0430 \u0432 \u0444\u043E\u0440\u043C\u0430\u0442\u0435 base64url\",\n        json_string: \"JSON \u0441\u0442\u0440\u043E\u043A\u0430\",\n        e164: \"\u043D\u043E\u043C\u0435\u0440 E.164\",\n        jwt: \"JWT\",\n        template_literal: \"\u0432\u0432\u043E\u0434\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u0432\u0432\u043E\u0434: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C ${issue.expected}, \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043E ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u0432\u0432\u043E\u0434: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u0432\u0430\u0440\u0438\u0430\u043D\u0442: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C \u043E\u0434\u043D\u043E \u0438\u0437 ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    const maxValue = Number(issue.maximum);\n                    const unit = getRussianPlural(maxValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\n                    return `\u0421\u043B\u0438\u0448\u043A\u043E\u043C \u0431\u043E\u043B\u044C\u0448\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C, \u0447\u0442\u043E ${issue.origin ?? \"\u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435\"} \u0431\u0443\u0434\u0435\u0442 \u0438\u043C\u0435\u0442\u044C ${adj}${issue.maximum.toString()} ${unit}`;\n                }\n                return `\u0421\u043B\u0438\u0448\u043A\u043E\u043C \u0431\u043E\u043B\u044C\u0448\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C, \u0447\u0442\u043E ${issue.origin ?? \"\u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435\"} \u0431\u0443\u0434\u0435\u0442 ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    const minValue = Number(issue.minimum);\n                    const unit = getRussianPlural(minValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\n                    return `\u0421\u043B\u0438\u0448\u043A\u043E\u043C \u043C\u0430\u043B\u0435\u043D\u044C\u043A\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C, \u0447\u0442\u043E ${issue.origin} \u0431\u0443\u0434\u0435\u0442 \u0438\u043C\u0435\u0442\u044C ${adj}${issue.minimum.toString()} ${unit}`;\n                }\n                return `\u0421\u043B\u0438\u0448\u043A\u043E\u043C \u043C\u0430\u043B\u0435\u043D\u044C\u043A\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C, \u0447\u0442\u043E ${issue.origin} \u0431\u0443\u0434\u0435\u0442 ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `\u041D\u0435\u0432\u0435\u0440\u043D\u0430\u044F \u0441\u0442\u0440\u043E\u043A\u0430: \u0434\u043E\u043B\u0436\u043D\u0430 \u043D\u0430\u0447\u0438\u043D\u0430\u0442\u044C\u0441\u044F \u0441 \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `\u041D\u0435\u0432\u0435\u0440\u043D\u0430\u044F \u0441\u0442\u0440\u043E\u043A\u0430: \u0434\u043E\u043B\u0436\u043D\u0430 \u0437\u0430\u043A\u0430\u043D\u0447\u0438\u0432\u0430\u0442\u044C\u0441\u044F \u043D\u0430 \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `\u041D\u0435\u0432\u0435\u0440\u043D\u0430\u044F \u0441\u0442\u0440\u043E\u043A\u0430: \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `\u041D\u0435\u0432\u0435\u0440\u043D\u0430\u044F \u0441\u0442\u0440\u043E\u043A\u0430: \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043E\u0432\u0430\u0442\u044C \u0448\u0430\u0431\u043B\u043E\u043D\u0443 ${_issue.pattern}`;\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u043E\u0435 \u0447\u0438\u0441\u043B\u043E: \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043A\u0440\u0430\u0442\u043D\u044B\u043C ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `\u041D\u0435\u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u043D\u043D${issue.keys.length > 1 ? \"\u044B\u0435\" : \"\u044B\u0439\"} \u043A\u043B\u044E\u0447${issue.keys.length > 1 ? \"\u0438\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u043A\u043B\u044E\u0447 \u0432 ${issue.origin}`;\n            case \"invalid_union\":\n                return \"\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435\";\n            case \"invalid_element\":\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0432 ${issue.origin}`;\n            default:\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"znakov\", verb: \"imeti\" },\n        file: { unit: \"bajtov\", verb: \"imeti\" },\n        array: { unit: \"elementov\", verb: \"imeti\" },\n        set: { unit: \"elementov\", verb: \"imeti\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"\u0161tevilo\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"tabela\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"vnos\",\n        email: \"e-po\u0161tni naslov\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO datum in \u010Das\",\n        date: \"ISO datum\",\n        time: \"ISO \u010Das\",\n        duration: \"ISO trajanje\",\n        ipv4: \"IPv4 naslov\",\n        ipv6: \"IPv6 naslov\",\n        cidrv4: \"obseg IPv4\",\n        cidrv6: \"obseg IPv6\",\n        base64: \"base64 kodiran niz\",\n        base64url: \"base64url kodiran niz\",\n        json_string: \"JSON niz\",\n        e164: \"E.164 \u0161tevilka\",\n        jwt: \"JWT\",\n        template_literal: \"vnos\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Neveljaven vnos: pri\u010Dakovano ${issue.expected}, prejeto ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Neveljaven vnos: pri\u010Dakovano ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Neveljavna mo\u017Enost: pri\u010Dakovano eno izmed ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Preveliko: pri\u010Dakovano, da bo ${issue.origin ?? \"vrednost\"} imelo ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementov\"}`;\n                return `Preveliko: pri\u010Dakovano, da bo ${issue.origin ?? \"vrednost\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Premajhno: pri\u010Dakovano, da bo ${issue.origin} imelo ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Premajhno: pri\u010Dakovano, da bo ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Neveljaven niz: mora se za\u010Deti z \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Neveljaven niz: mora se kon\u010Dati z \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Neveljaven niz: mora vsebovati \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Neveljaven niz: mora ustrezati vzorcu ${_issue.pattern}`;\n                return `Neveljaven ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Neveljavno \u0161tevilo: mora biti ve\u010Dkratnik ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Neprepoznan${issue.keys.length > 1 ? \"i klju\u010Di\" : \" klju\u010D\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Neveljaven klju\u010D v ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Neveljaven vnos\";\n            case \"invalid_element\":\n                return `Neveljavna vrednost v ${issue.origin}`;\n            default:\n                return \"Neveljaven vnos\";\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"tecken\", verb: \"att ha\" },\n        file: { unit: \"bytes\", verb: \"att ha\" },\n        array: { unit: \"objekt\", verb: \"att inneh\u00E5lla\" },\n        set: { unit: \"objekt\", verb: \"att inneh\u00E5lla\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"antal\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"lista\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"regulj\u00E4rt uttryck\",\n        email: \"e-postadress\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO-datum och tid\",\n        date: \"ISO-datum\",\n        time: \"ISO-tid\",\n        duration: \"ISO-varaktighet\",\n        ipv4: \"IPv4-intervall\",\n        ipv6: \"IPv6-intervall\",\n        cidrv4: \"IPv4-spektrum\",\n        cidrv6: \"IPv6-spektrum\",\n        base64: \"base64-kodad str\u00E4ng\",\n        base64url: \"base64url-kodad str\u00E4ng\",\n        json_string: \"JSON-str\u00E4ng\",\n        e164: \"E.164-nummer\",\n        jwt: \"JWT\",\n        template_literal: \"mall-literal\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ogiltig inmatning: f\u00F6rv\u00E4ntat ${issue.expected}, fick ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ogiltig inmatning: f\u00F6rv\u00E4ntat ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ogiltigt val: f\u00F6rv\u00E4ntade en av ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `F\u00F6r stor(t): f\u00F6rv\u00E4ntade ${issue.origin ?? \"v\u00E4rdet\"} att ha ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"element\"}`;\n                }\n                return `F\u00F6r stor(t): f\u00F6rv\u00E4ntat ${issue.origin ?? \"v\u00E4rdet\"} att ha ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `F\u00F6r lite(t): f\u00F6rv\u00E4ntade ${issue.origin ?? \"v\u00E4rdet\"} att ha ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `F\u00F6r lite(t): f\u00F6rv\u00E4ntade ${issue.origin ?? \"v\u00E4rdet\"} att ha ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Ogiltig str\u00E4ng: m\u00E5ste b\u00F6rja med \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Ogiltig str\u00E4ng: m\u00E5ste sluta med \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Ogiltig str\u00E4ng: m\u00E5ste inneh\u00E5lla \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Ogiltig str\u00E4ng: m\u00E5ste matcha m\u00F6nstret \"${_issue.pattern}\"`;\n                return `Ogiltig(t) ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ogiltigt tal: m\u00E5ste vara en multipel av ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Ok\u00E4nda nycklar\" : \"Ok\u00E4nd nyckel\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ogiltig nyckel i ${issue.origin ?? \"v\u00E4rdet\"}`;\n            case \"invalid_union\":\n                return \"Ogiltig input\";\n            case \"invalid_element\":\n                return `Ogiltigt v\u00E4rde i ${issue.origin ?? \"v\u00E4rdet\"}`;\n            default:\n                return `Ogiltig input`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u0B8E\u0BB4\u0BC1\u0BA4\u0BCD\u0BA4\u0BC1\u0B95\u0BCD\u0B95\u0BB3\u0BCD\", verb: \"\u0B95\u0BCA\u0BA3\u0BCD\u0B9F\u0BBF\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD\" },\n        file: { unit: \"\u0BAA\u0BC8\u0B9F\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BCD\", verb: \"\u0B95\u0BCA\u0BA3\u0BCD\u0B9F\u0BBF\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD\" },\n        array: { unit: \"\u0B89\u0BB1\u0BC1\u0BAA\u0BCD\u0BAA\u0BC1\u0B95\u0BB3\u0BCD\", verb: \"\u0B95\u0BCA\u0BA3\u0BCD\u0B9F\u0BBF\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD\" },\n        set: { unit: \"\u0B89\u0BB1\u0BC1\u0BAA\u0BCD\u0BAA\u0BC1\u0B95\u0BB3\u0BCD\", verb: \"\u0B95\u0BCA\u0BA3\u0BCD\u0B9F\u0BBF\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"\u0B8E\u0BA3\u0BCD \u0B85\u0BB2\u0BCD\u0BB2\u0BBE\u0BA4\u0BA4\u0BC1\" : \"\u0B8E\u0BA3\u0BCD\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"\u0B85\u0BA3\u0BBF\";\n                }\n                if (data === null) {\n                    return \"\u0BB5\u0BC6\u0BB1\u0BC1\u0BAE\u0BC8\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u0B89\u0BB3\u0BCD\u0BB3\u0BC0\u0B9F\u0BC1\",\n        email: \"\u0BAE\u0BBF\u0BA9\u0BCD\u0BA9\u0B9E\u0BCD\u0B9A\u0BB2\u0BCD \u0BAE\u0BC1\u0B95\u0BB5\u0BB0\u0BBF\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO \u0BA4\u0BC7\u0BA4\u0BBF \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD\",\n        date: \"ISO \u0BA4\u0BC7\u0BA4\u0BBF\",\n        time: \"ISO \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD\",\n        duration: \"ISO \u0B95\u0BBE\u0BB2 \u0B85\u0BB3\u0BB5\u0BC1\",\n        ipv4: \"IPv4 \u0BAE\u0BC1\u0B95\u0BB5\u0BB0\u0BBF\",\n        ipv6: \"IPv6 \u0BAE\u0BC1\u0B95\u0BB5\u0BB0\u0BBF\",\n        cidrv4: \"IPv4 \u0BB5\u0BB0\u0BAE\u0BCD\u0BAA\u0BC1\",\n        cidrv6: \"IPv6 \u0BB5\u0BB0\u0BAE\u0BCD\u0BAA\u0BC1\",\n        base64: \"base64-encoded \u0B9A\u0BB0\u0BAE\u0BCD\",\n        base64url: \"base64url-encoded \u0B9A\u0BB0\u0BAE\u0BCD\",\n        json_string: \"JSON \u0B9A\u0BB0\u0BAE\u0BCD\",\n        e164: \"E.164 \u0B8E\u0BA3\u0BCD\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B89\u0BB3\u0BCD\u0BB3\u0BC0\u0B9F\u0BC1: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${issue.expected}, \u0BAA\u0BC6\u0BB1\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B89\u0BB3\u0BCD\u0BB3\u0BC0\u0B9F\u0BC1: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0BB5\u0BBF\u0BB0\u0BC1\u0BAA\u0BCD\u0BAA\u0BAE\u0BCD: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${util.joinValues(issue.values, \"|\")} \u0B87\u0BB2\u0BCD \u0B92\u0BA9\u0BCD\u0BB1\u0BC1`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u0BAE\u0BBF\u0B95 \u0BAA\u0BC6\u0BB0\u0BBF\u0BAF\u0BA4\u0BC1: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${issue.origin ?? \"\u0BAE\u0BA4\u0BBF\u0BAA\u0BCD\u0BAA\u0BC1\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u0B89\u0BB1\u0BC1\u0BAA\u0BCD\u0BAA\u0BC1\u0B95\u0BB3\u0BCD\"} \u0B86\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\n                }\n                return `\u0BAE\u0BBF\u0B95 \u0BAA\u0BC6\u0BB0\u0BBF\u0BAF\u0BA4\u0BC1: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${issue.origin ?? \"\u0BAE\u0BA4\u0BBF\u0BAA\u0BCD\u0BAA\u0BC1\"} ${adj}${issue.maximum.toString()} \u0B86\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u0BAE\u0BBF\u0B95\u0B9A\u0BCD \u0B9A\u0BBF\u0BB1\u0BBF\u0BAF\u0BA4\u0BC1: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} \u0B86\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`; //\n                }\n                return `\u0BAE\u0BBF\u0B95\u0B9A\u0BCD \u0B9A\u0BBF\u0BB1\u0BBF\u0BAF\u0BA4\u0BC1: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${issue.origin} ${adj}${issue.minimum.toString()} \u0B86\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B9A\u0BB0\u0BAE\u0BCD: \"${_issue.prefix}\" \u0B87\u0BB2\u0BCD \u0BA4\u0BCA\u0B9F\u0B99\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\n                if (_issue.format === \"ends_with\")\n                    return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B9A\u0BB0\u0BAE\u0BCD: \"${_issue.suffix}\" \u0B87\u0BB2\u0BCD \u0BAE\u0BC1\u0B9F\u0BBF\u0BB5\u0B9F\u0BC8\u0BAF \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\n                if (_issue.format === \"includes\")\n                    return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B9A\u0BB0\u0BAE\u0BCD: \"${_issue.includes}\" \u0B90 \u0B89\u0BB3\u0BCD\u0BB3\u0B9F\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\n                if (_issue.format === \"regex\")\n                    return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B9A\u0BB0\u0BAE\u0BCD: ${_issue.pattern} \u0BAE\u0BC1\u0BB1\u0BC8\u0BAA\u0BBE\u0B9F\u0BCD\u0B9F\u0BC1\u0B9F\u0BA9\u0BCD \u0BAA\u0BCA\u0BB0\u0BC1\u0BA8\u0BCD\u0BA4 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\n                return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B8E\u0BA3\u0BCD: ${issue.divisor} \u0B87\u0BA9\u0BCD \u0BAA\u0BB2\u0BAE\u0BBE\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\n            case \"unrecognized_keys\":\n                return `\u0B85\u0B9F\u0BC8\u0BAF\u0BBE\u0BB3\u0BAE\u0BCD \u0BA4\u0BC6\u0BB0\u0BBF\u0BAF\u0BBE\u0BA4 \u0BB5\u0BBF\u0B9A\u0BC8${issue.keys.length > 1 ? \"\u0B95\u0BB3\u0BCD\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} \u0B87\u0BB2\u0BCD \u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0BB5\u0BBF\u0B9A\u0BC8`;\n            case \"invalid_union\":\n                return \"\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B89\u0BB3\u0BCD\u0BB3\u0BC0\u0B9F\u0BC1\";\n            case \"invalid_element\":\n                return `${issue.origin} \u0B87\u0BB2\u0BCD \u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0BAE\u0BA4\u0BBF\u0BAA\u0BCD\u0BAA\u0BC1`;\n            default:\n                return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B89\u0BB3\u0BCD\u0BB3\u0BC0\u0B9F\u0BC1`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\", verb: \"\u0E04\u0E27\u0E23\u0E21\u0E35\" },\n        file: { unit: \"\u0E44\u0E1A\u0E15\u0E4C\", verb: \"\u0E04\u0E27\u0E23\u0E21\u0E35\" },\n        array: { unit: \"\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\", verb: \"\u0E04\u0E27\u0E23\u0E21\u0E35\" },\n        set: { unit: \"\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\", verb: \"\u0E04\u0E27\u0E23\u0E21\u0E35\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02 (NaN)\" : \"\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"\u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E23\u0E22\u0E4C (Array)\";\n                }\n                if (data === null) {\n                    return \"\u0E44\u0E21\u0E48\u0E21\u0E35\u0E04\u0E48\u0E32 (null)\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E48\u0E1B\u0E49\u0E2D\u0E19\",\n        email: \"\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E2D\u0E35\u0E40\u0E21\u0E25\",\n        url: \"URL\",\n        emoji: \"\u0E2D\u0E34\u0E42\u0E21\u0E08\u0E34\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\u0E40\u0E27\u0E25\u0E32\u0E41\u0E1A\u0E1A ISO\",\n        date: \"\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\u0E41\u0E1A\u0E1A ISO\",\n        time: \"\u0E40\u0E27\u0E25\u0E32\u0E41\u0E1A\u0E1A ISO\",\n        duration: \"\u0E0A\u0E48\u0E27\u0E07\u0E40\u0E27\u0E25\u0E32\u0E41\u0E1A\u0E1A ISO\",\n        ipv4: \"\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48 IPv4\",\n        ipv6: \"\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48 IPv6\",\n        cidrv4: \"\u0E0A\u0E48\u0E27\u0E07 IP \u0E41\u0E1A\u0E1A IPv4\",\n        cidrv6: \"\u0E0A\u0E48\u0E27\u0E07 IP \u0E41\u0E1A\u0E1A IPv6\",\n        base64: \"\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E41\u0E1A\u0E1A Base64\",\n        base64url: \"\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E41\u0E1A\u0E1A Base64 \u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A URL\",\n        json_string: \"\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E41\u0E1A\u0E1A JSON\",\n        e164: \"\u0E40\u0E1A\u0E2D\u0E23\u0E4C\u0E42\u0E17\u0E23\u0E28\u0E31\u0E1E\u0E17\u0E4C\u0E23\u0E30\u0E2B\u0E27\u0E48\u0E32\u0E07\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28 (E.164)\",\n        jwt: \"\u0E42\u0E17\u0E40\u0E04\u0E19 JWT\",\n        template_literal: \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E48\u0E1B\u0E49\u0E2D\u0E19\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19 ${issue.expected} \u0E41\u0E15\u0E48\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u0E04\u0E48\u0E32\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19 ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E43\u0E19 ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"\u0E44\u0E21\u0E48\u0E40\u0E01\u0E34\u0E19\" : \"\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u0E40\u0E01\u0E34\u0E19\u0E01\u0E33\u0E2B\u0E19\u0E14: ${issue.origin ?? \"\u0E04\u0E48\u0E32\"} \u0E04\u0E27\u0E23\u0E21\u0E35${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\"}`;\n                return `\u0E40\u0E01\u0E34\u0E19\u0E01\u0E33\u0E2B\u0E19\u0E14: ${issue.origin ?? \"\u0E04\u0E48\u0E32\"} \u0E04\u0E27\u0E23\u0E21\u0E35${adj} ${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E19\u0E49\u0E2D\u0E22\" : \"\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32\u0E01\u0E33\u0E2B\u0E19\u0E14: ${issue.origin} \u0E04\u0E27\u0E23\u0E21\u0E35${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32\u0E01\u0E33\u0E2B\u0E19\u0E14: ${issue.origin} \u0E04\u0E27\u0E23\u0E21\u0E35${adj} ${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E15\u0E49\u0E2D\u0E07\u0E02\u0E36\u0E49\u0E19\u0E15\u0E49\u0E19\u0E14\u0E49\u0E27\u0E22 \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E15\u0E49\u0E2D\u0E07\u0E25\u0E07\u0E17\u0E49\u0E32\u0E22\u0E14\u0E49\u0E27\u0E22 \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E35 \"${_issue.includes}\" \u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21`;\n                if (_issue.format === \"regex\")\n                    return `\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E15\u0E49\u0E2D\u0E07\u0E15\u0E23\u0E07\u0E01\u0E31\u0E1A\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E17\u0E35\u0E48\u0E01\u0E33\u0E2B\u0E19\u0E14 ${_issue.pattern}`;\n                return `\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E15\u0E49\u0E2D\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E08\u0E33\u0E19\u0E27\u0E19\u0E17\u0E35\u0E48\u0E2B\u0E32\u0E23\u0E14\u0E49\u0E27\u0E22 ${issue.divisor} \u0E44\u0E14\u0E49\u0E25\u0E07\u0E15\u0E31\u0E27`;\n            case \"unrecognized_keys\":\n                return `\u0E1E\u0E1A\u0E04\u0E35\u0E22\u0E4C\u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E23\u0E39\u0E49\u0E08\u0E31\u0E01: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `\u0E04\u0E35\u0E22\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E43\u0E19 ${issue.origin}`;\n            case \"invalid_union\":\n                return \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E44\u0E21\u0E48\u0E15\u0E23\u0E07\u0E01\u0E31\u0E1A\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E22\u0E39\u0E40\u0E19\u0E35\u0E22\u0E19\u0E17\u0E35\u0E48\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E44\u0E27\u0E49\";\n            case \"invalid_element\":\n                return `\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E43\u0E19 ${issue.origin}`;\n            default:\n                return `\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nexport const parsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"number\": {\n            return Number.isNaN(data) ? \"NaN\" : \"number\";\n        }\n        case \"object\": {\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                return data.constructor.name;\n            }\n        }\n    }\n    return t;\n};\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"karakter\", verb: \"olmal\u0131\" },\n        file: { unit: \"bayt\", verb: \"olmal\u0131\" },\n        array: { unit: \"\u00F6\u011Fe\", verb: \"olmal\u0131\" },\n        set: { unit: \"\u00F6\u011Fe\", verb: \"olmal\u0131\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const Nouns = {\n        regex: \"girdi\",\n        email: \"e-posta adresi\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO tarih ve saat\",\n        date: \"ISO tarih\",\n        time: \"ISO saat\",\n        duration: \"ISO s\u00FCre\",\n        ipv4: \"IPv4 adresi\",\n        ipv6: \"IPv6 adresi\",\n        cidrv4: \"IPv4 aral\u0131\u011F\u0131\",\n        cidrv6: \"IPv6 aral\u0131\u011F\u0131\",\n        base64: \"base64 ile \u015Fifrelenmi\u015F metin\",\n        base64url: \"base64url ile \u015Fifrelenmi\u015F metin\",\n        json_string: \"JSON dizesi\",\n        e164: \"E.164 say\u0131s\u0131\",\n        jwt: \"JWT\",\n        template_literal: \"\u015Eablon dizesi\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ge\u00E7ersiz de\u011Fer: beklenen ${issue.expected}, al\u0131nan ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ge\u00E7ersiz de\u011Fer: beklenen ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ge\u00E7ersiz se\u00E7enek: a\u015Fa\u011F\u0131dakilerden biri olmal\u0131: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u00C7ok b\u00FCy\u00FCk: beklenen ${issue.origin ?? \"de\u011Fer\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u00F6\u011Fe\"}`;\n                return `\u00C7ok b\u00FCy\u00FCk: beklenen ${issue.origin ?? \"de\u011Fer\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u00C7ok k\u00FC\u00E7\u00FCk: beklenen ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                return `\u00C7ok k\u00FC\u00E7\u00FCk: beklenen ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Ge\u00E7ersiz metin: \"${_issue.prefix}\" ile ba\u015Flamal\u0131`;\n                if (_issue.format === \"ends_with\")\n                    return `Ge\u00E7ersiz metin: \"${_issue.suffix}\" ile bitmeli`;\n                if (_issue.format === \"includes\")\n                    return `Ge\u00E7ersiz metin: \"${_issue.includes}\" i\u00E7ermeli`;\n                if (_issue.format === \"regex\")\n                    return `Ge\u00E7ersiz metin: ${_issue.pattern} desenine uymal\u0131`;\n                return `Ge\u00E7ersiz ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ge\u00E7ersiz say\u0131: ${issue.divisor} ile tam b\u00F6l\u00FCnebilmeli`;\n            case \"unrecognized_keys\":\n                return `Tan\u0131nmayan anahtar${issue.keys.length > 1 ? \"lar\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} i\u00E7inde ge\u00E7ersiz anahtar`;\n            case \"invalid_union\":\n                return \"Ge\u00E7ersiz de\u011Fer\";\n            case \"invalid_element\":\n                return `${issue.origin} i\u00E7inde ge\u00E7ersiz de\u011Fer`;\n            default:\n                return `Ge\u00E7ersiz de\u011Fer`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import uk from \"./uk.js\";\n/** @deprecated Use `uk` instead. */\nexport default function () {\n    return uk();\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u0441\u0438\u043C\u0432\u043E\u043B\u0456\u0432\", verb: \"\u043C\u0430\u0442\u0438\u043C\u0435\" },\n        file: { unit: \"\u0431\u0430\u0439\u0442\u0456\u0432\", verb: \"\u043C\u0430\u0442\u0438\u043C\u0435\" },\n        array: { unit: \"\u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0456\u0432\", verb: \"\u043C\u0430\u0442\u0438\u043C\u0435\" },\n        set: { unit: \"\u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0456\u0432\", verb: \"\u043C\u0430\u0442\u0438\u043C\u0435\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"\u0447\u0438\u0441\u043B\u043E\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"\u043C\u0430\u0441\u0438\u0432\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456\",\n        email: \"\u0430\u0434\u0440\u0435\u0441\u0430 \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\u0457 \u043F\u043E\u0448\u0442\u0438\",\n        url: \"URL\",\n        emoji: \"\u0435\u043C\u043E\u0434\u0437\u0456\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"\u0434\u0430\u0442\u0430 \u0442\u0430 \u0447\u0430\u0441 ISO\",\n        date: \"\u0434\u0430\u0442\u0430 ISO\",\n        time: \"\u0447\u0430\u0441 ISO\",\n        duration: \"\u0442\u0440\u0438\u0432\u0430\u043B\u0456\u0441\u0442\u044C ISO\",\n        ipv4: \"\u0430\u0434\u0440\u0435\u0441\u0430 IPv4\",\n        ipv6: \"\u0430\u0434\u0440\u0435\u0441\u0430 IPv6\",\n        cidrv4: \"\u0434\u0456\u0430\u043F\u0430\u0437\u043E\u043D IPv4\",\n        cidrv6: \"\u0434\u0456\u0430\u043F\u0430\u0437\u043E\u043D IPv6\",\n        base64: \"\u0440\u044F\u0434\u043E\u043A \u0443 \u043A\u043E\u0434\u0443\u0432\u0430\u043D\u043D\u0456 base64\",\n        base64url: \"\u0440\u044F\u0434\u043E\u043A \u0443 \u043A\u043E\u0434\u0443\u0432\u0430\u043D\u043D\u0456 base64url\",\n        json_string: \"\u0440\u044F\u0434\u043E\u043A JSON\",\n        e164: \"\u043D\u043E\u043C\u0435\u0440 E.164\",\n        jwt: \"JWT\",\n        template_literal: \"\u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0456 \u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F ${issue.expected}, \u043E\u0442\u0440\u0438\u043C\u0430\u043D\u043E ${parsedType(issue.input)}`;\n            // return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0456 \u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F ${issue.expected}, \u043E\u0442\u0440\u0438\u043C\u0430\u043D\u043E ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0456 \u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0430 \u043E\u043F\u0446\u0456\u044F: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F \u043E\u0434\u043D\u0435 \u0437 ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u0417\u0430\u043D\u0430\u0434\u0442\u043E \u0432\u0435\u043B\u0438\u043A\u0435: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F, \u0449\u043E ${issue.origin ?? \"\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0456\u0432\"}`;\n                return `\u0417\u0430\u043D\u0430\u0434\u0442\u043E \u0432\u0435\u043B\u0438\u043A\u0435: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F, \u0449\u043E ${issue.origin ?? \"\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F\"} \u0431\u0443\u0434\u0435 ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u0417\u0430\u043D\u0430\u0434\u0442\u043E \u043C\u0430\u043B\u0435: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F, \u0449\u043E ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `\u0417\u0430\u043D\u0430\u0434\u0442\u043E \u043C\u0430\u043B\u0435: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F, \u0449\u043E ${issue.origin} \u0431\u0443\u0434\u0435 ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0438\u0439 \u0440\u044F\u0434\u043E\u043A: \u043F\u043E\u0432\u0438\u043D\u0435\u043D \u043F\u043E\u0447\u0438\u043D\u0430\u0442\u0438\u0441\u044F \u0437 \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0438\u0439 \u0440\u044F\u0434\u043E\u043A: \u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0437\u0430\u043A\u0456\u043D\u0447\u0443\u0432\u0430\u0442\u0438\u0441\u044F \u043D\u0430 \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0438\u0439 \u0440\u044F\u0434\u043E\u043A: \u043F\u043E\u0432\u0438\u043D\u0435\u043D \u043C\u0456\u0441\u0442\u0438\u0442\u0438 \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0438\u0439 \u0440\u044F\u0434\u043E\u043A: \u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u0430\u0442\u0438 \u0448\u0430\u0431\u043B\u043E\u043D\u0443 ${_issue.pattern}`;\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0438\u0439 ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0435 \u0447\u0438\u0441\u043B\u043E: \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u043A\u0440\u0430\u0442\u043D\u0438\u043C ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `\u041D\u0435\u0440\u043E\u0437\u043F\u0456\u0437\u043D\u0430\u043D\u0438\u0439 \u043A\u043B\u044E\u0447${issue.keys.length > 1 ? \"\u0456\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0438\u0439 \u043A\u043B\u044E\u0447 \u0443 ${issue.origin}`;\n            case \"invalid_union\":\n                return \"\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0456 \u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456\";\n            case \"invalid_element\":\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u0443 ${issue.origin}`;\n            default:\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0456 \u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u062D\u0631\u0648\u0641\", verb: \"\u06C1\u0648\u0646\u0627\" },\n        file: { unit: \"\u0628\u0627\u0626\u0679\u0633\", verb: \"\u06C1\u0648\u0646\u0627\" },\n        array: { unit: \"\u0622\u0626\u0679\u0645\u0632\", verb: \"\u06C1\u0648\u0646\u0627\" },\n        set: { unit: \"\u0622\u0626\u0679\u0645\u0632\", verb: \"\u06C1\u0648\u0646\u0627\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"\u0646\u0645\u0628\u0631\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"\u0622\u0631\u06D2\";\n                }\n                if (data === null) {\n                    return \"\u0646\u0644\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u0627\u0646 \u067E\u0679\",\n        email: \"\u0627\u06CC \u0645\u06CC\u0644 \u0627\u06CC\u0688\u0631\u06CC\u0633\",\n        url: \"\u06CC\u0648 \u0622\u0631 \u0627\u06CC\u0644\",\n        emoji: \"\u0627\u06CC\u0645\u0648\u062C\u06CC\",\n        uuid: \"\u06CC\u0648 \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC\",\n        uuidv4: \"\u06CC\u0648 \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC \u0648\u06CC 4\",\n        uuidv6: \"\u06CC\u0648 \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC \u0648\u06CC 6\",\n        nanoid: \"\u0646\u06CC\u0646\u0648 \u0622\u0626\u06CC \u0688\u06CC\",\n        guid: \"\u062C\u06CC \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC\",\n        cuid: \"\u0633\u06CC \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC\",\n        cuid2: \"\u0633\u06CC \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC 2\",\n        ulid: \"\u06CC\u0648 \u0627\u06CC\u0644 \u0622\u0626\u06CC \u0688\u06CC\",\n        xid: \"\u0627\u06CC\u06A9\u0633 \u0622\u0626\u06CC \u0688\u06CC\",\n        ksuid: \"\u06A9\u06D2 \u0627\u06CC\u0633 \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC\",\n        datetime: \"\u0622\u0626\u06CC \u0627\u06CC\u0633 \u0627\u0648 \u0688\u06CC\u0679 \u0679\u0627\u0626\u0645\",\n        date: \"\u0622\u0626\u06CC \u0627\u06CC\u0633 \u0627\u0648 \u062A\u0627\u0631\u06CC\u062E\",\n        time: \"\u0622\u0626\u06CC \u0627\u06CC\u0633 \u0627\u0648 \u0648\u0642\u062A\",\n        duration: \"\u0622\u0626\u06CC \u0627\u06CC\u0633 \u0627\u0648 \u0645\u062F\u062A\",\n        ipv4: \"\u0622\u0626\u06CC \u067E\u06CC \u0648\u06CC 4 \u0627\u06CC\u0688\u0631\u06CC\u0633\",\n        ipv6: \"\u0622\u0626\u06CC \u067E\u06CC \u0648\u06CC 6 \u0627\u06CC\u0688\u0631\u06CC\u0633\",\n        cidrv4: \"\u0622\u0626\u06CC \u067E\u06CC \u0648\u06CC 4 \u0631\u06CC\u0646\u062C\",\n        cidrv6: \"\u0622\u0626\u06CC \u067E\u06CC \u0648\u06CC 6 \u0631\u06CC\u0646\u062C\",\n        base64: \"\u0628\u06CC\u0633 64 \u0627\u0646 \u06A9\u0648\u0688\u0688 \u0633\u0679\u0631\u0646\u06AF\",\n        base64url: \"\u0628\u06CC\u0633 64 \u06CC\u0648 \u0622\u0631 \u0627\u06CC\u0644 \u0627\u0646 \u06A9\u0648\u0688\u0688 \u0633\u0679\u0631\u0646\u06AF\",\n        json_string: \"\u062C\u06D2 \u0627\u06CC\u0633 \u0627\u0648 \u0627\u06CC\u0646 \u0633\u0679\u0631\u0646\u06AF\",\n        e164: \"\u0627\u06CC 164 \u0646\u0645\u0628\u0631\",\n        jwt: \"\u062C\u06D2 \u0688\u0628\u0644\u06CC\u0648 \u0679\u06CC\",\n        template_literal: \"\u0627\u0646 \u067E\u0679\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u063A\u0644\u0637 \u0627\u0646 \u067E\u0679: ${issue.expected} \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u0627\u060C ${parsedType(issue.input)} \u0645\u0648\u0635\u0648\u0644 \u06C1\u0648\u0627`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u063A\u0644\u0637 \u0627\u0646 \u067E\u0679: ${util.stringifyPrimitive(issue.values[0])} \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u0627`;\n                return `\u063A\u0644\u0637 \u0622\u067E\u0634\u0646: ${util.joinValues(issue.values, \"|\")} \u0645\u06CC\u06BA \u0633\u06D2 \u0627\u06CC\u06A9 \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u0627`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u0628\u06C1\u062A \u0628\u0691\u0627: ${issue.origin ?? \"\u0648\u06CC\u0644\u06CC\u0648\"} \u06A9\u06D2 ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u0639\u0646\u0627\u0635\u0631\"} \u06C1\u0648\u0646\u06D2 \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u06D2`;\n                return `\u0628\u06C1\u062A \u0628\u0691\u0627: ${issue.origin ?? \"\u0648\u06CC\u0644\u06CC\u0648\"} \u06A9\u0627 ${adj}${issue.maximum.toString()} \u06C1\u0648\u0646\u0627 \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u0627`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u0628\u06C1\u062A \u0686\u06BE\u0648\u0679\u0627: ${issue.origin} \u06A9\u06D2 ${adj}${issue.minimum.toString()} ${sizing.unit} \u06C1\u0648\u0646\u06D2 \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u06D2`;\n                }\n                return `\u0628\u06C1\u062A \u0686\u06BE\u0648\u0679\u0627: ${issue.origin} \u06A9\u0627 ${adj}${issue.minimum.toString()} \u06C1\u0648\u0646\u0627 \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u0627`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `\u063A\u0644\u0637 \u0633\u0679\u0631\u0646\u06AF: \"${_issue.prefix}\" \u0633\u06D2 \u0634\u0631\u0648\u0639 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `\u063A\u0644\u0637 \u0633\u0679\u0631\u0646\u06AF: \"${_issue.suffix}\" \u067E\u0631 \u062E\u062A\u0645 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2`;\n                if (_issue.format === \"includes\")\n                    return `\u063A\u0644\u0637 \u0633\u0679\u0631\u0646\u06AF: \"${_issue.includes}\" \u0634\u0627\u0645\u0644 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2`;\n                if (_issue.format === \"regex\")\n                    return `\u063A\u0644\u0637 \u0633\u0679\u0631\u0646\u06AF: \u067E\u06CC\u0679\u0631\u0646 ${_issue.pattern} \u0633\u06D2 \u0645\u06CC\u0686 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2`;\n                return `\u063A\u0644\u0637 ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u063A\u0644\u0637 \u0646\u0645\u0628\u0631: ${issue.divisor} \u06A9\u0627 \u0645\u0636\u0627\u0639\u0641 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2`;\n            case \"unrecognized_keys\":\n                return `\u063A\u06CC\u0631 \u062A\u0633\u0644\u06CC\u0645 \u0634\u062F\u06C1 \u06A9\u06CC${issue.keys.length > 1 ? \"\u0632\" : \"\"}: ${util.joinValues(issue.keys, \"\u060C \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} \u0645\u06CC\u06BA \u063A\u0644\u0637 \u06A9\u06CC`;\n            case \"invalid_union\":\n                return \"\u063A\u0644\u0637 \u0627\u0646 \u067E\u0679\";\n            case \"invalid_element\":\n                return `${issue.origin} \u0645\u06CC\u06BA \u063A\u0644\u0637 \u0648\u06CC\u0644\u06CC\u0648`;\n            default:\n                return `\u063A\u0644\u0637 \u0627\u0646 \u067E\u0679`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"k\u00FD t\u1EF1\", verb: \"c\u00F3\" },\n        file: { unit: \"byte\", verb: \"c\u00F3\" },\n        array: { unit: \"ph\u1EA7n t\u1EED\", verb: \"c\u00F3\" },\n        set: { unit: \"ph\u1EA7n t\u1EED\", verb: \"c\u00F3\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"s\u1ED1\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"m\u1EA3ng\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u0111\u1EA7u v\u00E0o\",\n        email: \"\u0111\u1ECBa ch\u1EC9 email\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ng\u00E0y gi\u1EDD ISO\",\n        date: \"ng\u00E0y ISO\",\n        time: \"gi\u1EDD ISO\",\n        duration: \"kho\u1EA3ng th\u1EDDi gian ISO\",\n        ipv4: \"\u0111\u1ECBa ch\u1EC9 IPv4\",\n        ipv6: \"\u0111\u1ECBa ch\u1EC9 IPv6\",\n        cidrv4: \"d\u1EA3i IPv4\",\n        cidrv6: \"d\u1EA3i IPv6\",\n        base64: \"chu\u1ED7i m\u00E3 h\u00F3a base64\",\n        base64url: \"chu\u1ED7i m\u00E3 h\u00F3a base64url\",\n        json_string: \"chu\u1ED7i JSON\",\n        e164: \"s\u1ED1 E.164\",\n        jwt: \"JWT\",\n        template_literal: \"\u0111\u1EA7u v\u00E0o\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u0110\u1EA7u v\u00E0o kh\u00F4ng h\u1EE3p l\u1EC7: mong \u0111\u1EE3i ${issue.expected}, nh\u1EADn \u0111\u01B0\u1EE3c ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u0110\u1EA7u v\u00E0o kh\u00F4ng h\u1EE3p l\u1EC7: mong \u0111\u1EE3i ${util.stringifyPrimitive(issue.values[0])}`;\n                return `T\u00F9y ch\u1ECDn kh\u00F4ng h\u1EE3p l\u1EC7: mong \u0111\u1EE3i m\u1ED9t trong c\u00E1c gi\u00E1 tr\u1ECB ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Qu\u00E1 l\u1EDBn: mong \u0111\u1EE3i ${issue.origin ?? \"gi\u00E1 tr\u1ECB\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"ph\u1EA7n t\u1EED\"}`;\n                return `Qu\u00E1 l\u1EDBn: mong \u0111\u1EE3i ${issue.origin ?? \"gi\u00E1 tr\u1ECB\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Qu\u00E1 nh\u1ECF: mong \u0111\u1EE3i ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Qu\u00E1 nh\u1ECF: mong \u0111\u1EE3i ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Chu\u1ED7i kh\u00F4ng h\u1EE3p l\u1EC7: ph\u1EA3i b\u1EAFt \u0111\u1EA7u b\u1EB1ng \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Chu\u1ED7i kh\u00F4ng h\u1EE3p l\u1EC7: ph\u1EA3i k\u1EBFt th\u00FAc b\u1EB1ng \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Chu\u1ED7i kh\u00F4ng h\u1EE3p l\u1EC7: ph\u1EA3i bao g\u1ED3m \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Chu\u1ED7i kh\u00F4ng h\u1EE3p l\u1EC7: ph\u1EA3i kh\u1EDBp v\u1EDBi m\u1EABu ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} kh\u00F4ng h\u1EE3p l\u1EC7`;\n            }\n            case \"not_multiple_of\":\n                return `S\u1ED1 kh\u00F4ng h\u1EE3p l\u1EC7: ph\u1EA3i l\u00E0 b\u1ED9i s\u1ED1 c\u1EE7a ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Kh\u00F3a kh\u00F4ng \u0111\u01B0\u1EE3c nh\u1EADn d\u1EA1ng: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Kh\u00F3a kh\u00F4ng h\u1EE3p l\u1EC7 trong ${issue.origin}`;\n            case \"invalid_union\":\n                return \"\u0110\u1EA7u v\u00E0o kh\u00F4ng h\u1EE3p l\u1EC7\";\n            case \"invalid_element\":\n                return `Gi\u00E1 tr\u1ECB kh\u00F4ng h\u1EE3p l\u1EC7 trong ${issue.origin}`;\n            default:\n                return `\u0110\u1EA7u v\u00E0o kh\u00F4ng h\u1EE3p l\u1EC7`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u5B57\u7B26\", verb: \"\u5305\u542B\" },\n        file: { unit: \"\u5B57\u8282\", verb: \"\u5305\u542B\" },\n        array: { unit: \"\u9879\", verb: \"\u5305\u542B\" },\n        set: { unit: \"\u9879\", verb: \"\u5305\u542B\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"\u975E\u6570\u5B57(NaN)\" : \"\u6570\u5B57\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"\u6570\u7EC4\";\n                }\n                if (data === null) {\n                    return \"\u7A7A\u503C(null)\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u8F93\u5165\",\n        email: \"\u7535\u5B50\u90AE\u4EF6\",\n        url: \"URL\",\n        emoji: \"\u8868\u60C5\u7B26\u53F7\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO\u65E5\u671F\u65F6\u95F4\",\n        date: \"ISO\u65E5\u671F\",\n        time: \"ISO\u65F6\u95F4\",\n        duration: \"ISO\u65F6\u957F\",\n        ipv4: \"IPv4\u5730\u5740\",\n        ipv6: \"IPv6\u5730\u5740\",\n        cidrv4: \"IPv4\u7F51\u6BB5\",\n        cidrv6: \"IPv6\u7F51\u6BB5\",\n        base64: \"base64\u7F16\u7801\u5B57\u7B26\u4E32\",\n        base64url: \"base64url\u7F16\u7801\u5B57\u7B26\u4E32\",\n        json_string: \"JSON\u5B57\u7B26\u4E32\",\n        e164: \"E.164\u53F7\u7801\",\n        jwt: \"JWT\",\n        template_literal: \"\u8F93\u5165\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u65E0\u6548\u8F93\u5165\uFF1A\u671F\u671B ${issue.expected}\uFF0C\u5B9E\u9645\u63A5\u6536 ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u65E0\u6548\u8F93\u5165\uFF1A\u671F\u671B ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u65E0\u6548\u9009\u9879\uFF1A\u671F\u671B\u4EE5\u4E0B\u4E4B\u4E00 ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u6570\u503C\u8FC7\u5927\uFF1A\u671F\u671B ${issue.origin ?? \"\u503C\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u4E2A\u5143\u7D20\"}`;\n                return `\u6570\u503C\u8FC7\u5927\uFF1A\u671F\u671B ${issue.origin ?? \"\u503C\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u6570\u503C\u8FC7\u5C0F\uFF1A\u671F\u671B ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `\u6570\u503C\u8FC7\u5C0F\uFF1A\u671F\u671B ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `\u65E0\u6548\u5B57\u7B26\u4E32\uFF1A\u5FC5\u987B\u4EE5 \"${_issue.prefix}\" \u5F00\u5934`;\n                if (_issue.format === \"ends_with\")\n                    return `\u65E0\u6548\u5B57\u7B26\u4E32\uFF1A\u5FC5\u987B\u4EE5 \"${_issue.suffix}\" \u7ED3\u5C3E`;\n                if (_issue.format === \"includes\")\n                    return `\u65E0\u6548\u5B57\u7B26\u4E32\uFF1A\u5FC5\u987B\u5305\u542B \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `\u65E0\u6548\u5B57\u7B26\u4E32\uFF1A\u5FC5\u987B\u6EE1\u8DB3\u6B63\u5219\u8868\u8FBE\u5F0F ${_issue.pattern}`;\n                return `\u65E0\u6548${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u65E0\u6548\u6570\u5B57\uFF1A\u5FC5\u987B\u662F ${issue.divisor} \u7684\u500D\u6570`;\n            case \"unrecognized_keys\":\n                return `\u51FA\u73B0\u672A\u77E5\u7684\u952E(key): ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} \u4E2D\u7684\u952E(key)\u65E0\u6548`;\n            case \"invalid_union\":\n                return \"\u65E0\u6548\u8F93\u5165\";\n            case \"invalid_element\":\n                return `${issue.origin} \u4E2D\u5305\u542B\u65E0\u6548\u503C(value)`;\n            default:\n                return `\u65E0\u6548\u8F93\u5165`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u5B57\u5143\", verb: \"\u64C1\u6709\" },\n        file: { unit: \"\u4F4D\u5143\u7D44\", verb: \"\u64C1\u6709\" },\n        array: { unit: \"\u9805\u76EE\", verb: \"\u64C1\u6709\" },\n        set: { unit: \"\u9805\u76EE\", verb: \"\u64C1\u6709\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u8F38\u5165\",\n        email: \"\u90F5\u4EF6\u5730\u5740\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO \u65E5\u671F\u6642\u9593\",\n        date: \"ISO \u65E5\u671F\",\n        time: \"ISO \u6642\u9593\",\n        duration: \"ISO \u671F\u9593\",\n        ipv4: \"IPv4 \u4F4D\u5740\",\n        ipv6: \"IPv6 \u4F4D\u5740\",\n        cidrv4: \"IPv4 \u7BC4\u570D\",\n        cidrv6: \"IPv6 \u7BC4\u570D\",\n        base64: \"base64 \u7DE8\u78BC\u5B57\u4E32\",\n        base64url: \"base64url \u7DE8\u78BC\u5B57\u4E32\",\n        json_string: \"JSON \u5B57\u4E32\",\n        e164: \"E.164 \u6578\u503C\",\n        jwt: \"JWT\",\n        template_literal: \"\u8F38\u5165\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u7121\u6548\u7684\u8F38\u5165\u503C\uFF1A\u9810\u671F\u70BA ${issue.expected}\uFF0C\u4F46\u6536\u5230 ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u7121\u6548\u7684\u8F38\u5165\u503C\uFF1A\u9810\u671F\u70BA ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u7121\u6548\u7684\u9078\u9805\uFF1A\u9810\u671F\u70BA\u4EE5\u4E0B\u5176\u4E2D\u4E4B\u4E00 ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `\u6578\u503C\u904E\u5927\uFF1A\u9810\u671F ${issue.origin ?? \"\u503C\"} \u61C9\u70BA ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u500B\u5143\u7D20\"}`;\n                return `\u6578\u503C\u904E\u5927\uFF1A\u9810\u671F ${issue.origin ?? \"\u503C\"} \u61C9\u70BA ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `\u6578\u503C\u904E\u5C0F\uFF1A\u9810\u671F ${issue.origin} \u61C9\u70BA ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `\u6578\u503C\u904E\u5C0F\uFF1A\u9810\u671F ${issue.origin} \u61C9\u70BA ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `\u7121\u6548\u7684\u5B57\u4E32\uFF1A\u5FC5\u9808\u4EE5 \"${_issue.prefix}\" \u958B\u982D`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `\u7121\u6548\u7684\u5B57\u4E32\uFF1A\u5FC5\u9808\u4EE5 \"${_issue.suffix}\" \u7D50\u5C3E`;\n                if (_issue.format === \"includes\")\n                    return `\u7121\u6548\u7684\u5B57\u4E32\uFF1A\u5FC5\u9808\u5305\u542B \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `\u7121\u6548\u7684\u5B57\u4E32\uFF1A\u5FC5\u9808\u7B26\u5408\u683C\u5F0F ${_issue.pattern}`;\n                return `\u7121\u6548\u7684 ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `\u7121\u6548\u7684\u6578\u5B57\uFF1A\u5FC5\u9808\u70BA ${issue.divisor} \u7684\u500D\u6578`;\n            case \"unrecognized_keys\":\n                return `\u7121\u6CD5\u8B58\u5225\u7684\u9375\u503C${issue.keys.length > 1 ? \"\u5011\" : \"\"}\uFF1A${util.joinValues(issue.keys, \"\u3001\")}`;\n            case \"invalid_key\":\n                return `${issue.origin} \u4E2D\u6709\u7121\u6548\u7684\u9375\u503C`;\n            case \"invalid_union\":\n                return \"\u7121\u6548\u7684\u8F38\u5165\u503C\";\n            case \"invalid_element\":\n                return `${issue.origin} \u4E2D\u6709\u7121\u6548\u7684\u503C`;\n            default:\n                return `\u7121\u6548\u7684\u8F38\u5165\u503C`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"\u00E0mi\", verb: \"n\u00ED\" },\n        file: { unit: \"bytes\", verb: \"n\u00ED\" },\n        array: { unit: \"nkan\", verb: \"n\u00ED\" },\n        set: { unit: \"nkan\", verb: \"n\u00ED\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"n\u1ECD\u0301mb\u00E0\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"akop\u1ECD\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"\u1EB9\u0300r\u1ECD \u00ECb\u00E1w\u1ECDl\u00E9\",\n        email: \"\u00E0d\u00EDr\u1EB9\u0301s\u00EC \u00ECm\u1EB9\u0301l\u00EC\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"\u00E0k\u00F3k\u00F2 ISO\",\n        date: \"\u1ECDj\u1ECD\u0301 ISO\",\n        time: \"\u00E0k\u00F3k\u00F2 ISO\",\n        duration: \"\u00E0k\u00F3k\u00F2 t\u00F3 p\u00E9 ISO\",\n        ipv4: \"\u00E0d\u00EDr\u1EB9\u0301s\u00EC IPv4\",\n        ipv6: \"\u00E0d\u00EDr\u1EB9\u0301s\u00EC IPv6\",\n        cidrv4: \"\u00E0gb\u00E8gb\u00E8 IPv4\",\n        cidrv6: \"\u00E0gb\u00E8gb\u00E8 IPv6\",\n        base64: \"\u1ECD\u0300r\u1ECD\u0300 t\u00ED a k\u1ECD\u0301 n\u00ED base64\",\n        base64url: \"\u1ECD\u0300r\u1ECD\u0300 base64url\",\n        json_string: \"\u1ECD\u0300r\u1ECD\u0300 JSON\",\n        e164: \"n\u1ECD\u0301mb\u00E0 E.164\",\n        jwt: \"JWT\",\n        template_literal: \"\u1EB9\u0300r\u1ECD \u00ECb\u00E1w\u1ECDl\u00E9\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `\u00CCb\u00E1w\u1ECDl\u00E9 a\u1E63\u00EC\u1E63e: a n\u00ED l\u00E1ti fi ${issue.expected}, \u00E0m\u1ECD\u0300 a r\u00ED ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `\u00CCb\u00E1w\u1ECDl\u00E9 a\u1E63\u00EC\u1E63e: a n\u00ED l\u00E1ti fi ${util.stringifyPrimitive(issue.values[0])}`;\n                return `\u00C0\u1E63\u00E0y\u00E0n a\u1E63\u00EC\u1E63e: yan \u1ECD\u0300kan l\u00E1ra ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `T\u00F3 p\u1ECD\u0300 j\u00F9: a n\u00ED l\u00E1ti j\u1EB9\u0301 p\u00E9 ${issue.origin ?? \"iye\"} ${sizing.verb} ${adj}${issue.maximum} ${sizing.unit}`;\n                return `T\u00F3 p\u1ECD\u0300 j\u00F9: a n\u00ED l\u00E1ti j\u1EB9\u0301 ${adj}${issue.maximum}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `K\u00E9r\u00E9 ju: a n\u00ED l\u00E1ti j\u1EB9\u0301 p\u00E9 ${issue.origin} ${sizing.verb} ${adj}${issue.minimum} ${sizing.unit}`;\n                return `K\u00E9r\u00E9 ju: a n\u00ED l\u00E1ti j\u1EB9\u0301 ${adj}${issue.minimum}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `\u1ECC\u0300r\u1ECD\u0300 a\u1E63\u00EC\u1E63e: gb\u1ECD\u0301d\u1ECD\u0300 b\u1EB9\u0300r\u1EB9\u0300 p\u1EB9\u0300l\u00FA \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `\u1ECC\u0300r\u1ECD\u0300 a\u1E63\u00EC\u1E63e: gb\u1ECD\u0301d\u1ECD\u0300 par\u00ED p\u1EB9\u0300l\u00FA \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `\u1ECC\u0300r\u1ECD\u0300 a\u1E63\u00EC\u1E63e: gb\u1ECD\u0301d\u1ECD\u0300 n\u00ED \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `\u1ECC\u0300r\u1ECD\u0300 a\u1E63\u00EC\u1E63e: gb\u1ECD\u0301d\u1ECD\u0300 b\u00E1 \u00E0p\u1EB9\u1EB9r\u1EB9 mu ${_issue.pattern}`;\n                return `A\u1E63\u00EC\u1E63e: ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `N\u1ECD\u0301mb\u00E0 a\u1E63\u00EC\u1E63e: gb\u1ECD\u0301d\u1ECD\u0300 j\u1EB9\u0301 \u00E8y\u00E0 p\u00EDp\u00EDn ti ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `B\u1ECDt\u00ECn\u00EC \u00E0\u00ECm\u1ECD\u0300: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `B\u1ECDt\u00ECn\u00EC a\u1E63\u00EC\u1E63e n\u00EDn\u00FA ${issue.origin}`;\n            case \"invalid_union\":\n                return \"\u00CCb\u00E1w\u1ECDl\u00E9 a\u1E63\u00EC\u1E63e\";\n            case \"invalid_element\":\n                return `Iye a\u1E63\u00EC\u1E63e n\u00EDn\u00FA ${issue.origin}`;\n            default:\n                return \"\u00CCb\u00E1w\u1ECDl\u00E9 a\u1E63\u00EC\u1E63e\";\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "export const $output = Symbol(\"ZodOutput\");\nexport const $input = Symbol(\"ZodInput\");\nexport class $ZodRegistry {\n    constructor() {\n        this._map = new WeakMap();\n        this._idmap = new Map();\n    }\n    add(schema, ..._meta) {\n        const meta = _meta[0];\n        this._map.set(schema, meta);\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\n            if (this._idmap.has(meta.id)) {\n                throw new Error(`ID ${meta.id} already exists in the registry`);\n            }\n            this._idmap.set(meta.id, schema);\n        }\n        return this;\n    }\n    clear() {\n        this._map = new WeakMap();\n        this._idmap = new Map();\n        return this;\n    }\n    remove(schema) {\n        const meta = this._map.get(schema);\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\n            this._idmap.delete(meta.id);\n        }\n        this._map.delete(schema);\n        return this;\n    }\n    get(schema) {\n        // return this._map.get(schema) as any;\n        // inherit metadata\n        const p = schema._zod.parent;\n        if (p) {\n            const pm = { ...(this.get(p) ?? {}) };\n            delete pm.id; // do not inherit id\n            const f = { ...pm, ...this._map.get(schema) };\n            return Object.keys(f).length ? f : undefined;\n        }\n        return this._map.get(schema);\n    }\n    has(schema) {\n        return this._map.has(schema);\n    }\n}\n// registries\nexport function registry() {\n    return new $ZodRegistry();\n}\nexport const globalRegistry = /*@__PURE__*/ registry();\n", "import * as checks from \"./checks.js\";\nimport * as schemas from \"./schemas.js\";\nimport * as util from \"./util.js\";\nexport function _string(Class, params) {\n    return new Class({\n        type: \"string\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedString(Class, params) {\n    return new Class({\n        type: \"string\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _email(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"email\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _guid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"guid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v4\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v6\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv7(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v7\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _url(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"url\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _emoji(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"emoji\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _nanoid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"nanoid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cuid2(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cuid2\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ulid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ulid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _xid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"xid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ksuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ksuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ipv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ipv4\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ipv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ipv6\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cidrv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cidrv4\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cidrv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cidrv6\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _base64(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"base64\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _base64url(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"base64url\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _e164(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"e164\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _jwt(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"jwt\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport const TimePrecision = {\n    Any: null,\n    Minute: -1,\n    Second: 0,\n    Millisecond: 3,\n    Microsecond: 6,\n};\nexport function _isoDateTime(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"datetime\",\n        check: \"string_format\",\n        offset: false,\n        local: false,\n        precision: null,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoDate(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"date\",\n        check: \"string_format\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoTime(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"time\",\n        check: \"string_format\",\n        precision: null,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoDuration(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"duration\",\n        check: \"string_format\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _number(Class, params) {\n    return new Class({\n        type: \"number\",\n        checks: [],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedNumber(Class, params) {\n    return new Class({\n        type: \"number\",\n        coerce: true,\n        checks: [],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"safeint\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _float32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"float32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _float64(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"float64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"int32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uint32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"uint32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _boolean(Class, params) {\n    return new Class({\n        type: \"boolean\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedBoolean(Class, params) {\n    return new Class({\n        type: \"boolean\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _bigint(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedBigint(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int64(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        check: \"bigint_format\",\n        abort: false,\n        format: \"int64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uint64(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        check: \"bigint_format\",\n        abort: false,\n        format: \"uint64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _symbol(Class, params) {\n    return new Class({\n        type: \"symbol\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _undefined(Class, params) {\n    return new Class({\n        type: \"undefined\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _null(Class, params) {\n    return new Class({\n        type: \"null\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _any(Class) {\n    return new Class({\n        type: \"any\",\n    });\n}\nexport function _unknown(Class) {\n    return new Class({\n        type: \"unknown\",\n    });\n}\nexport function _never(Class, params) {\n    return new Class({\n        type: \"never\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _void(Class, params) {\n    return new Class({\n        type: \"void\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _date(Class, params) {\n    return new Class({\n        type: \"date\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedDate(Class, params) {\n    return new Class({\n        type: \"date\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _nan(Class, params) {\n    return new Class({\n        type: \"nan\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _lt(value, params) {\n    return new checks.$ZodCheckLessThan({\n        check: \"less_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: false,\n    });\n}\nexport function _lte(value, params) {\n    return new checks.$ZodCheckLessThan({\n        check: \"less_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: true,\n    });\n}\nexport { \n/** @deprecated Use `z.lte()` instead. */\n_lte as _max, };\nexport function _gt(value, params) {\n    return new checks.$ZodCheckGreaterThan({\n        check: \"greater_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: false,\n    });\n}\nexport function _gte(value, params) {\n    return new checks.$ZodCheckGreaterThan({\n        check: \"greater_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: true,\n    });\n}\nexport { \n/** @deprecated Use `z.gte()` instead. */\n_gte as _min, };\nexport function _positive(params) {\n    return _gt(0, params);\n}\n// negative\nexport function _negative(params) {\n    return _lt(0, params);\n}\n// nonpositive\nexport function _nonpositive(params) {\n    return _lte(0, params);\n}\n// nonnegative\nexport function _nonnegative(params) {\n    return _gte(0, params);\n}\nexport function _multipleOf(value, params) {\n    return new checks.$ZodCheckMultipleOf({\n        check: \"multiple_of\",\n        ...util.normalizeParams(params),\n        value,\n    });\n}\nexport function _maxSize(maximum, params) {\n    return new checks.$ZodCheckMaxSize({\n        check: \"max_size\",\n        ...util.normalizeParams(params),\n        maximum,\n    });\n}\nexport function _minSize(minimum, params) {\n    return new checks.$ZodCheckMinSize({\n        check: \"min_size\",\n        ...util.normalizeParams(params),\n        minimum,\n    });\n}\nexport function _size(size, params) {\n    return new checks.$ZodCheckSizeEquals({\n        check: \"size_equals\",\n        ...util.normalizeParams(params),\n        size,\n    });\n}\nexport function _maxLength(maximum, params) {\n    const ch = new checks.$ZodCheckMaxLength({\n        check: \"max_length\",\n        ...util.normalizeParams(params),\n        maximum,\n    });\n    return ch;\n}\nexport function _minLength(minimum, params) {\n    return new checks.$ZodCheckMinLength({\n        check: \"min_length\",\n        ...util.normalizeParams(params),\n        minimum,\n    });\n}\nexport function _length(length, params) {\n    return new checks.$ZodCheckLengthEquals({\n        check: \"length_equals\",\n        ...util.normalizeParams(params),\n        length,\n    });\n}\nexport function _regex(pattern, params) {\n    return new checks.$ZodCheckRegex({\n        check: \"string_format\",\n        format: \"regex\",\n        ...util.normalizeParams(params),\n        pattern,\n    });\n}\nexport function _lowercase(params) {\n    return new checks.$ZodCheckLowerCase({\n        check: \"string_format\",\n        format: \"lowercase\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uppercase(params) {\n    return new checks.$ZodCheckUpperCase({\n        check: \"string_format\",\n        format: \"uppercase\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _includes(includes, params) {\n    return new checks.$ZodCheckIncludes({\n        check: \"string_format\",\n        format: \"includes\",\n        ...util.normalizeParams(params),\n        includes,\n    });\n}\nexport function _startsWith(prefix, params) {\n    return new checks.$ZodCheckStartsWith({\n        check: \"string_format\",\n        format: \"starts_with\",\n        ...util.normalizeParams(params),\n        prefix,\n    });\n}\nexport function _endsWith(suffix, params) {\n    return new checks.$ZodCheckEndsWith({\n        check: \"string_format\",\n        format: \"ends_with\",\n        ...util.normalizeParams(params),\n        suffix,\n    });\n}\nexport function _property(property, schema, params) {\n    return new checks.$ZodCheckProperty({\n        check: \"property\",\n        property,\n        schema,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _mime(types, params) {\n    return new checks.$ZodCheckMimeType({\n        check: \"mime_type\",\n        mime: types,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _overwrite(tx) {\n    return new checks.$ZodCheckOverwrite({\n        check: \"overwrite\",\n        tx,\n    });\n}\n// normalize\nexport function _normalize(form) {\n    return _overwrite((input) => input.normalize(form));\n}\n// trim\nexport function _trim() {\n    return _overwrite((input) => input.trim());\n}\n// toLowerCase\nexport function _toLowerCase() {\n    return _overwrite((input) => input.toLowerCase());\n}\n// toUpperCase\nexport function _toUpperCase() {\n    return _overwrite((input) => input.toUpperCase());\n}\nexport function _array(Class, element, params) {\n    return new Class({\n        type: \"array\",\n        element,\n        // get element() {\n        //   return element;\n        // },\n        ...util.normalizeParams(params),\n    });\n}\nexport function _union(Class, options, params) {\n    return new Class({\n        type: \"union\",\n        options,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _discriminatedUnion(Class, discriminator, options, params) {\n    return new Class({\n        type: \"union\",\n        options,\n        discriminator,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _intersection(Class, left, right) {\n    return new Class({\n        type: \"intersection\",\n        left,\n        right,\n    });\n}\n// export function _tuple(\n//   Class: util.SchemaClass<schemas.$ZodTuple>,\n//   items: [],\n//   params?: string | $ZodTupleParams\n// ): schemas.$ZodTuple<[], null>;\nexport function _tuple(Class, items, _paramsOrRest, _params) {\n    const hasRest = _paramsOrRest instanceof schemas.$ZodType;\n    const params = hasRest ? _params : _paramsOrRest;\n    const rest = hasRest ? _paramsOrRest : null;\n    return new Class({\n        type: \"tuple\",\n        items,\n        rest,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _record(Class, keyType, valueType, params) {\n    return new Class({\n        type: \"record\",\n        keyType,\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _map(Class, keyType, valueType, params) {\n    return new Class({\n        type: \"map\",\n        keyType,\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _set(Class, valueType, params) {\n    return new Class({\n        type: \"set\",\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _enum(Class, values, params) {\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\n    // if (Array.isArray(values)) {\n    //   for (const value of values) {\n    //     entries[value] = value;\n    //   }\n    // } else {\n    //   Object.assign(entries, values);\n    // }\n    // const entries: util.EnumLike = {};\n    // for (const val of values) {\n    //   entries[val] = val;\n    // }\n    return new Class({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\n *\n * ```ts\n * enum Colors { red, green, blue }\n * z.enum(Colors);\n * ```\n */\nexport function _nativeEnum(Class, entries, params) {\n    return new Class({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _literal(Class, value, params) {\n    return new Class({\n        type: \"literal\",\n        values: Array.isArray(value) ? value : [value],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _file(Class, params) {\n    return new Class({\n        type: \"file\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _transform(Class, fn) {\n    return new Class({\n        type: \"transform\",\n        transform: fn,\n    });\n}\nexport function _optional(Class, innerType) {\n    return new Class({\n        type: \"optional\",\n        innerType,\n    });\n}\nexport function _nullable(Class, innerType) {\n    return new Class({\n        type: \"nullable\",\n        innerType,\n    });\n}\nexport function _default(Class, innerType, defaultValue) {\n    return new Class({\n        type: \"default\",\n        innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : util.shallowClone(defaultValue);\n        },\n    });\n}\nexport function _nonoptional(Class, innerType, params) {\n    return new Class({\n        type: \"nonoptional\",\n        innerType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _success(Class, innerType) {\n    return new Class({\n        type: \"success\",\n        innerType,\n    });\n}\nexport function _catch(Class, innerType, catchValue) {\n    return new Class({\n        type: \"catch\",\n        innerType,\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\n    });\n}\nexport function _pipe(Class, in_, out) {\n    return new Class({\n        type: \"pipe\",\n        in: in_,\n        out,\n    });\n}\nexport function _readonly(Class, innerType) {\n    return new Class({\n        type: \"readonly\",\n        innerType,\n    });\n}\nexport function _templateLiteral(Class, parts, params) {\n    return new Class({\n        type: \"template_literal\",\n        parts,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _lazy(Class, getter) {\n    return new Class({\n        type: \"lazy\",\n        getter,\n    });\n}\nexport function _promise(Class, innerType) {\n    return new Class({\n        type: \"promise\",\n        innerType,\n    });\n}\nexport function _custom(Class, fn, _params) {\n    const norm = util.normalizeParams(_params);\n    norm.abort ?? (norm.abort = true); // default to abort:false\n    const schema = new Class({\n        type: \"custom\",\n        check: \"custom\",\n        fn: fn,\n        ...norm,\n    });\n    return schema;\n}\n// same as _custom but defaults to abort:false\nexport function _refine(Class, fn, _params) {\n    const schema = new Class({\n        type: \"custom\",\n        check: \"custom\",\n        fn: fn,\n        ...util.normalizeParams(_params),\n    });\n    return schema;\n}\nexport function _superRefine(fn) {\n    const ch = _check((payload) => {\n        payload.addIssue = (issue) => {\n            if (typeof issue === \"string\") {\n                payload.issues.push(util.issue(issue, payload.value, ch._zod.def));\n            }\n            else {\n                // for Zod 3 backwards compatibility\n                const _issue = issue;\n                if (_issue.fatal)\n                    _issue.continue = false;\n                _issue.code ?? (_issue.code = \"custom\");\n                _issue.input ?? (_issue.input = payload.value);\n                _issue.inst ?? (_issue.inst = ch);\n                _issue.continue ?? (_issue.continue = !ch._zod.def.abort); // abort is always undefined, so this is always true...\n                payload.issues.push(util.issue(_issue));\n            }\n        };\n        return fn(payload.value, payload);\n    });\n    return ch;\n}\nexport function _check(fn, params) {\n    const ch = new checks.$ZodCheck({\n        check: \"custom\",\n        ...util.normalizeParams(params),\n    });\n    ch._zod.check = fn;\n    return ch;\n}\nexport function _stringbool(Classes, _params) {\n    const params = util.normalizeParams(_params);\n    let truthyArray = params.truthy ?? [\"true\", \"1\", \"yes\", \"on\", \"y\", \"enabled\"];\n    let falsyArray = params.falsy ?? [\"false\", \"0\", \"no\", \"off\", \"n\", \"disabled\"];\n    if (params.case !== \"sensitive\") {\n        truthyArray = truthyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\n        falsyArray = falsyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\n    }\n    const truthySet = new Set(truthyArray);\n    const falsySet = new Set(falsyArray);\n    const _Codec = Classes.Codec ?? schemas.$ZodCodec;\n    const _Boolean = Classes.Boolean ?? schemas.$ZodBoolean;\n    const _String = Classes.String ?? schemas.$ZodString;\n    const stringSchema = new _String({ type: \"string\", error: params.error });\n    const booleanSchema = new _Boolean({ type: \"boolean\", error: params.error });\n    const codec = new _Codec({\n        type: \"pipe\",\n        in: stringSchema,\n        out: booleanSchema,\n        transform: ((input, payload) => {\n            let data = input;\n            if (params.case !== \"sensitive\")\n                data = data.toLowerCase();\n            if (truthySet.has(data)) {\n                return true;\n            }\n            else if (falsySet.has(data)) {\n                return false;\n            }\n            else {\n                payload.issues.push({\n                    code: \"invalid_value\",\n                    expected: \"stringbool\",\n                    values: [...truthySet, ...falsySet],\n                    input: payload.value,\n                    inst: codec,\n                    continue: false,\n                });\n                return {};\n            }\n        }),\n        reverseTransform: ((input, _payload) => {\n            if (input === true) {\n                return truthyArray[0] || \"true\";\n            }\n            else {\n                return falsyArray[0] || \"false\";\n            }\n        }),\n        error: params.error,\n    });\n    return codec;\n}\nexport function _stringFormat(Class, format, fnOrRegex, _params = {}) {\n    const params = util.normalizeParams(_params);\n    const def = {\n        ...util.normalizeParams(_params),\n        check: \"string_format\",\n        type: \"string\",\n        format,\n        fn: typeof fnOrRegex === \"function\" ? fnOrRegex : (val) => fnOrRegex.test(val),\n        ...params,\n    };\n    if (fnOrRegex instanceof RegExp) {\n        def.pattern = fnOrRegex;\n    }\n    const inst = new Class(def);\n    return inst;\n}\n", "import { $ZodRegistry, globalRegistry } from \"./registries.js\";\nimport { getEnumValues } from \"./util.js\";\nexport class JSONSchemaGenerator {\n    constructor(params) {\n        this.counter = 0;\n        this.metadataRegistry = params?.metadata ?? globalRegistry;\n        this.target = params?.target ?? \"draft-2020-12\";\n        this.unrepresentable = params?.unrepresentable ?? \"throw\";\n        this.override = params?.override ?? (() => { });\n        this.io = params?.io ?? \"output\";\n        this.seen = new Map();\n    }\n    process(schema, _params = { path: [], schemaPath: [] }) {\n        var _a;\n        const def = schema._zod.def;\n        const formatMap = {\n            guid: \"uuid\",\n            url: \"uri\",\n            datetime: \"date-time\",\n            json_string: \"json-string\",\n            regex: \"\", // do not set\n        };\n        // check for schema in seens\n        const seen = this.seen.get(schema);\n        if (seen) {\n            seen.count++;\n            // check if cycle\n            const isCycle = _params.schemaPath.includes(schema);\n            if (isCycle) {\n                seen.cycle = _params.path;\n            }\n            return seen.schema;\n        }\n        // initialize\n        const result = { schema: {}, count: 1, cycle: undefined, path: _params.path };\n        this.seen.set(schema, result);\n        // custom method overrides default behavior\n        const overrideSchema = schema._zod.toJSONSchema?.();\n        if (overrideSchema) {\n            result.schema = overrideSchema;\n        }\n        else {\n            const params = {\n                ..._params,\n                schemaPath: [..._params.schemaPath, schema],\n                path: _params.path,\n            };\n            const parent = schema._zod.parent;\n            if (parent) {\n                // schema was cloned from another schema\n                result.ref = parent;\n                this.process(parent, params);\n                this.seen.get(parent).isParent = true;\n            }\n            else {\n                const _json = result.schema;\n                switch (def.type) {\n                    case \"string\": {\n                        const json = _json;\n                        json.type = \"string\";\n                        const { minimum, maximum, format, patterns, contentEncoding } = schema._zod\n                            .bag;\n                        if (typeof minimum === \"number\")\n                            json.minLength = minimum;\n                        if (typeof maximum === \"number\")\n                            json.maxLength = maximum;\n                        // custom pattern overrides format\n                        if (format) {\n                            json.format = formatMap[format] ?? format;\n                            if (json.format === \"\")\n                                delete json.format; // empty format is not valid\n                        }\n                        if (contentEncoding)\n                            json.contentEncoding = contentEncoding;\n                        if (patterns && patterns.size > 0) {\n                            const regexes = [...patterns];\n                            if (regexes.length === 1)\n                                json.pattern = regexes[0].source;\n                            else if (regexes.length > 1) {\n                                result.schema.allOf = [\n                                    ...regexes.map((regex) => ({\n                                        ...(this.target === \"draft-7\" || this.target === \"draft-4\" || this.target === \"openapi-3.0\"\n                                            ? { type: \"string\" }\n                                            : {}),\n                                        pattern: regex.source,\n                                    })),\n                                ];\n                            }\n                        }\n                        break;\n                    }\n                    case \"number\": {\n                        const json = _json;\n                        const { minimum, maximum, format, multipleOf, exclusiveMaximum, exclusiveMinimum } = schema._zod.bag;\n                        if (typeof format === \"string\" && format.includes(\"int\"))\n                            json.type = \"integer\";\n                        else\n                            json.type = \"number\";\n                        if (typeof exclusiveMinimum === \"number\") {\n                            if (this.target === \"draft-4\" || this.target === \"openapi-3.0\") {\n                                json.minimum = exclusiveMinimum;\n                                json.exclusiveMinimum = true;\n                            }\n                            else {\n                                json.exclusiveMinimum = exclusiveMinimum;\n                            }\n                        }\n                        if (typeof minimum === \"number\") {\n                            json.minimum = minimum;\n                            if (typeof exclusiveMinimum === \"number\" && this.target !== \"draft-4\") {\n                                if (exclusiveMinimum >= minimum)\n                                    delete json.minimum;\n                                else\n                                    delete json.exclusiveMinimum;\n                            }\n                        }\n                        if (typeof exclusiveMaximum === \"number\") {\n                            if (this.target === \"draft-4\" || this.target === \"openapi-3.0\") {\n                                json.maximum = exclusiveMaximum;\n                                json.exclusiveMaximum = true;\n                            }\n                            else {\n                                json.exclusiveMaximum = exclusiveMaximum;\n                            }\n                        }\n                        if (typeof maximum === \"number\") {\n                            json.maximum = maximum;\n                            if (typeof exclusiveMaximum === \"number\" && this.target !== \"draft-4\") {\n                                if (exclusiveMaximum <= maximum)\n                                    delete json.maximum;\n                                else\n                                    delete json.exclusiveMaximum;\n                            }\n                        }\n                        if (typeof multipleOf === \"number\")\n                            json.multipleOf = multipleOf;\n                        break;\n                    }\n                    case \"boolean\": {\n                        const json = _json;\n                        json.type = \"boolean\";\n                        break;\n                    }\n                    case \"bigint\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"BigInt cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"symbol\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Symbols cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"null\": {\n                        if (this.target === \"openapi-3.0\") {\n                            _json.type = \"string\";\n                            _json.nullable = true;\n                            _json.enum = [null];\n                        }\n                        else\n                            _json.type = \"null\";\n                        break;\n                    }\n                    case \"any\": {\n                        break;\n                    }\n                    case \"unknown\": {\n                        break;\n                    }\n                    case \"undefined\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Undefined cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"void\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Void cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"never\": {\n                        _json.not = {};\n                        break;\n                    }\n                    case \"date\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Date cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"array\": {\n                        const json = _json;\n                        const { minimum, maximum } = schema._zod.bag;\n                        if (typeof minimum === \"number\")\n                            json.minItems = minimum;\n                        if (typeof maximum === \"number\")\n                            json.maxItems = maximum;\n                        json.type = \"array\";\n                        json.items = this.process(def.element, { ...params, path: [...params.path, \"items\"] });\n                        break;\n                    }\n                    case \"object\": {\n                        const json = _json;\n                        json.type = \"object\";\n                        json.properties = {};\n                        const shape = def.shape; // params.shapeCache.get(schema)!;\n                        for (const key in shape) {\n                            json.properties[key] = this.process(shape[key], {\n                                ...params,\n                                path: [...params.path, \"properties\", key],\n                            });\n                        }\n                        // required keys\n                        const allKeys = new Set(Object.keys(shape));\n                        // const optionalKeys = new Set(def.optional);\n                        const requiredKeys = new Set([...allKeys].filter((key) => {\n                            const v = def.shape[key]._zod;\n                            if (this.io === \"input\") {\n                                return v.optin === undefined;\n                            }\n                            else {\n                                return v.optout === undefined;\n                            }\n                        }));\n                        if (requiredKeys.size > 0) {\n                            json.required = Array.from(requiredKeys);\n                        }\n                        // catchall\n                        if (def.catchall?._zod.def.type === \"never\") {\n                            // strict\n                            json.additionalProperties = false;\n                        }\n                        else if (!def.catchall) {\n                            // regular\n                            if (this.io === \"output\")\n                                json.additionalProperties = false;\n                        }\n                        else if (def.catchall) {\n                            json.additionalProperties = this.process(def.catchall, {\n                                ...params,\n                                path: [...params.path, \"additionalProperties\"],\n                            });\n                        }\n                        break;\n                    }\n                    case \"union\": {\n                        const json = _json;\n                        const options = def.options.map((x, i) => this.process(x, {\n                            ...params,\n                            path: [...params.path, \"anyOf\", i],\n                        }));\n                        json.anyOf = options;\n                        break;\n                    }\n                    case \"intersection\": {\n                        const json = _json;\n                        const a = this.process(def.left, {\n                            ...params,\n                            path: [...params.path, \"allOf\", 0],\n                        });\n                        const b = this.process(def.right, {\n                            ...params,\n                            path: [...params.path, \"allOf\", 1],\n                        });\n                        const isSimpleIntersection = (val) => \"allOf\" in val && Object.keys(val).length === 1;\n                        const allOf = [\n                            ...(isSimpleIntersection(a) ? a.allOf : [a]),\n                            ...(isSimpleIntersection(b) ? b.allOf : [b]),\n                        ];\n                        json.allOf = allOf;\n                        break;\n                    }\n                    case \"tuple\": {\n                        const json = _json;\n                        json.type = \"array\";\n                        const prefixPath = this.target === \"draft-2020-12\" ? \"prefixItems\" : \"items\";\n                        const restPath = this.target === \"draft-2020-12\" ? \"items\" : this.target === \"openapi-3.0\" ? \"items\" : \"additionalItems\";\n                        const prefixItems = def.items.map((x, i) => this.process(x, {\n                            ...params,\n                            path: [...params.path, prefixPath, i],\n                        }));\n                        const rest = def.rest\n                            ? this.process(def.rest, {\n                                ...params,\n                                path: [...params.path, restPath, ...(this.target === \"openapi-3.0\" ? [def.items.length] : [])],\n                            })\n                            : null;\n                        if (this.target === \"draft-2020-12\") {\n                            json.prefixItems = prefixItems;\n                            if (rest) {\n                                json.items = rest;\n                            }\n                        }\n                        else if (this.target === \"openapi-3.0\") {\n                            json.items = {\n                                anyOf: prefixItems,\n                            };\n                            if (rest) {\n                                json.items.anyOf.push(rest);\n                            }\n                            json.minItems = prefixItems.length;\n                            if (!rest) {\n                                json.maxItems = prefixItems.length;\n                            }\n                        }\n                        else {\n                            json.items = prefixItems;\n                            if (rest) {\n                                json.additionalItems = rest;\n                            }\n                        }\n                        // length\n                        const { minimum, maximum } = schema._zod.bag;\n                        if (typeof minimum === \"number\")\n                            json.minItems = minimum;\n                        if (typeof maximum === \"number\")\n                            json.maxItems = maximum;\n                        break;\n                    }\n                    case \"record\": {\n                        const json = _json;\n                        json.type = \"object\";\n                        if (this.target === \"draft-7\" || this.target === \"draft-2020-12\") {\n                            json.propertyNames = this.process(def.keyType, {\n                                ...params,\n                                path: [...params.path, \"propertyNames\"],\n                            });\n                        }\n                        json.additionalProperties = this.process(def.valueType, {\n                            ...params,\n                            path: [...params.path, \"additionalProperties\"],\n                        });\n                        break;\n                    }\n                    case \"map\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Map cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"set\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Set cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"enum\": {\n                        const json = _json;\n                        const values = getEnumValues(def.entries);\n                        // Number enums can have both string and number values\n                        if (values.every((v) => typeof v === \"number\"))\n                            json.type = \"number\";\n                        if (values.every((v) => typeof v === \"string\"))\n                            json.type = \"string\";\n                        json.enum = values;\n                        break;\n                    }\n                    case \"literal\": {\n                        const json = _json;\n                        const vals = [];\n                        for (const val of def.values) {\n                            if (val === undefined) {\n                                if (this.unrepresentable === \"throw\") {\n                                    throw new Error(\"Literal `undefined` cannot be represented in JSON Schema\");\n                                }\n                                else {\n                                    // do not add to vals\n                                }\n                            }\n                            else if (typeof val === \"bigint\") {\n                                if (this.unrepresentable === \"throw\") {\n                                    throw new Error(\"BigInt literals cannot be represented in JSON Schema\");\n                                }\n                                else {\n                                    vals.push(Number(val));\n                                }\n                            }\n                            else {\n                                vals.push(val);\n                            }\n                        }\n                        if (vals.length === 0) {\n                            // do nothing (an undefined literal was stripped)\n                        }\n                        else if (vals.length === 1) {\n                            const val = vals[0];\n                            json.type = val === null ? \"null\" : typeof val;\n                            if (this.target === \"draft-4\" || this.target === \"openapi-3.0\") {\n                                json.enum = [val];\n                            }\n                            else {\n                                json.const = val;\n                            }\n                        }\n                        else {\n                            if (vals.every((v) => typeof v === \"number\"))\n                                json.type = \"number\";\n                            if (vals.every((v) => typeof v === \"string\"))\n                                json.type = \"string\";\n                            if (vals.every((v) => typeof v === \"boolean\"))\n                                json.type = \"string\";\n                            if (vals.every((v) => v === null))\n                                json.type = \"null\";\n                            json.enum = vals;\n                        }\n                        break;\n                    }\n                    case \"file\": {\n                        const json = _json;\n                        const file = {\n                            type: \"string\",\n                            format: \"binary\",\n                            contentEncoding: \"binary\",\n                        };\n                        const { minimum, maximum, mime } = schema._zod.bag;\n                        if (minimum !== undefined)\n                            file.minLength = minimum;\n                        if (maximum !== undefined)\n                            file.maxLength = maximum;\n                        if (mime) {\n                            if (mime.length === 1) {\n                                file.contentMediaType = mime[0];\n                                Object.assign(json, file);\n                            }\n                            else {\n                                json.anyOf = mime.map((m) => {\n                                    const mFile = { ...file, contentMediaType: m };\n                                    return mFile;\n                                });\n                            }\n                        }\n                        else {\n                            Object.assign(json, file);\n                        }\n                        // if (this.unrepresentable === \"throw\") {\n                        //   throw new Error(\"File cannot be represented in JSON Schema\");\n                        // }\n                        break;\n                    }\n                    case \"transform\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Transforms cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"nullable\": {\n                        const inner = this.process(def.innerType, params);\n                        if (this.target === \"openapi-3.0\") {\n                            result.ref = def.innerType;\n                            _json.nullable = true;\n                        }\n                        else {\n                            _json.anyOf = [inner, { type: \"null\" }];\n                        }\n                        break;\n                    }\n                    case \"nonoptional\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        break;\n                    }\n                    case \"success\": {\n                        const json = _json;\n                        json.type = \"boolean\";\n                        break;\n                    }\n                    case \"default\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        _json.default = JSON.parse(JSON.stringify(def.defaultValue));\n                        break;\n                    }\n                    case \"prefault\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        if (this.io === \"input\")\n                            _json._prefault = JSON.parse(JSON.stringify(def.defaultValue));\n                        break;\n                    }\n                    case \"catch\": {\n                        // use conditionals\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        let catchValue;\n                        try {\n                            catchValue = def.catchValue(undefined);\n                        }\n                        catch {\n                            throw new Error(\"Dynamic catch values are not supported in JSON Schema\");\n                        }\n                        _json.default = catchValue;\n                        break;\n                    }\n                    case \"nan\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"NaN cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"template_literal\": {\n                        const json = _json;\n                        const pattern = schema._zod.pattern;\n                        if (!pattern)\n                            throw new Error(\"Pattern not found in template literal\");\n                        json.type = \"string\";\n                        json.pattern = pattern.source;\n                        break;\n                    }\n                    case \"pipe\": {\n                        const innerType = this.io === \"input\" ? (def.in._zod.def.type === \"transform\" ? def.out : def.in) : def.out;\n                        this.process(innerType, params);\n                        result.ref = innerType;\n                        break;\n                    }\n                    case \"readonly\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        _json.readOnly = true;\n                        break;\n                    }\n                    // passthrough types\n                    case \"promise\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        break;\n                    }\n                    case \"optional\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        break;\n                    }\n                    case \"lazy\": {\n                        const innerType = schema._zod.innerType;\n                        this.process(innerType, params);\n                        result.ref = innerType;\n                        break;\n                    }\n                    case \"custom\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Custom types cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"function\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Function types cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    default: {\n                        def;\n                    }\n                }\n            }\n        }\n        // metadata\n        const meta = this.metadataRegistry.get(schema);\n        if (meta)\n            Object.assign(result.schema, meta);\n        if (this.io === \"input\" && isTransforming(schema)) {\n            // examples/defaults only apply to output type of pipe\n            delete result.schema.examples;\n            delete result.schema.default;\n        }\n        // set prefault as default\n        if (this.io === \"input\" && result.schema._prefault)\n            (_a = result.schema).default ?? (_a.default = result.schema._prefault);\n        delete result.schema._prefault;\n        // pulling fresh from this.seen in case it was overwritten\n        const _result = this.seen.get(schema);\n        return _result.schema;\n    }\n    emit(schema, _params) {\n        const params = {\n            cycles: _params?.cycles ?? \"ref\",\n            reused: _params?.reused ?? \"inline\",\n            // unrepresentable: _params?.unrepresentable ?? \"throw\",\n            // uri: _params?.uri ?? ((id) => `${id}`),\n            external: _params?.external ?? undefined,\n        };\n        // iterate over seen map;\n        const root = this.seen.get(schema);\n        if (!root)\n            throw new Error(\"Unprocessed schema. This is a bug in Zod.\");\n        // initialize result with root schema fields\n        // Object.assign(result, seen.cached);\n        // returns a ref to the schema\n        // defId will be empty if the ref points to an external schema (or #)\n        const makeURI = (entry) => {\n            // comparing the seen objects because sometimes\n            // multiple schemas map to the same seen object.\n            // e.g. lazy\n            // external is configured\n            const defsSegment = this.target === \"draft-2020-12\" ? \"$defs\" : \"definitions\";\n            if (params.external) {\n                const externalId = params.external.registry.get(entry[0])?.id; // ?? \"__shared\";// `__schema${this.counter++}`;\n                // check if schema is in the external registry\n                const uriGenerator = params.external.uri ?? ((id) => id);\n                if (externalId) {\n                    return { ref: uriGenerator(externalId) };\n                }\n                // otherwise, add to __shared\n                const id = entry[1].defId ?? entry[1].schema.id ?? `schema${this.counter++}`;\n                entry[1].defId = id; // set defId so it will be reused if needed\n                return { defId: id, ref: `${uriGenerator(\"__shared\")}#/${defsSegment}/${id}` };\n            }\n            if (entry[1] === root) {\n                return { ref: \"#\" };\n            }\n            // self-contained schema\n            const uriPrefix = `#`;\n            const defUriPrefix = `${uriPrefix}/${defsSegment}/`;\n            const defId = entry[1].schema.id ?? `__schema${this.counter++}`;\n            return { defId, ref: defUriPrefix + defId };\n        };\n        // stored cached version in `def` property\n        // remove all properties, set $ref\n        const extractToDef = (entry) => {\n            // if the schema is already a reference, do not extract it\n            if (entry[1].schema.$ref) {\n                return;\n            }\n            const seen = entry[1];\n            const { ref, defId } = makeURI(entry);\n            seen.def = { ...seen.schema };\n            // defId won't be set if the schema is a reference to an external schema\n            if (defId)\n                seen.defId = defId;\n            // wipe away all properties except $ref\n            const schema = seen.schema;\n            for (const key in schema) {\n                delete schema[key];\n            }\n            schema.$ref = ref;\n        };\n        // throw on cycles\n        // break cycles\n        if (params.cycles === \"throw\") {\n            for (const entry of this.seen.entries()) {\n                const seen = entry[1];\n                if (seen.cycle) {\n                    throw new Error(\"Cycle detected: \" +\n                        `#/${seen.cycle?.join(\"/\")}/<root>` +\n                        '\\n\\nSet the `cycles` parameter to `\"ref\"` to resolve cyclical schemas with defs.');\n                }\n            }\n        }\n        // extract schemas into $defs\n        for (const entry of this.seen.entries()) {\n            const seen = entry[1];\n            // convert root schema to # $ref\n            if (schema === entry[0]) {\n                extractToDef(entry); // this has special handling for the root schema\n                continue;\n            }\n            // extract schemas that are in the external registry\n            if (params.external) {\n                const ext = params.external.registry.get(entry[0])?.id;\n                if (schema !== entry[0] && ext) {\n                    extractToDef(entry);\n                    continue;\n                }\n            }\n            // extract schemas with `id` meta\n            const id = this.metadataRegistry.get(entry[0])?.id;\n            if (id) {\n                extractToDef(entry);\n                continue;\n            }\n            // break cycles\n            if (seen.cycle) {\n                // any\n                extractToDef(entry);\n                continue;\n            }\n            // extract reused schemas\n            if (seen.count > 1) {\n                if (params.reused === \"ref\") {\n                    extractToDef(entry);\n                    // biome-ignore lint:\n                    continue;\n                }\n            }\n        }\n        // flatten _refs\n        const flattenRef = (zodSchema, params) => {\n            const seen = this.seen.get(zodSchema);\n            const schema = seen.def ?? seen.schema;\n            const _cached = { ...schema };\n            // already seen\n            if (seen.ref === null) {\n                return;\n            }\n            // flatten ref if defined\n            const ref = seen.ref;\n            seen.ref = null; // prevent recursion\n            if (ref) {\n                flattenRef(ref, params);\n                // merge referenced schema into current\n                const refSchema = this.seen.get(ref).schema;\n                if (refSchema.$ref &&\n                    (params.target === \"draft-7\" || params.target === \"draft-4\" || params.target === \"openapi-3.0\")) {\n                    schema.allOf = schema.allOf ?? [];\n                    schema.allOf.push(refSchema);\n                }\n                else {\n                    Object.assign(schema, refSchema);\n                    Object.assign(schema, _cached); // prevent overwriting any fields in the original schema\n                }\n            }\n            // execute overrides\n            if (!seen.isParent)\n                this.override({\n                    zodSchema: zodSchema,\n                    jsonSchema: schema,\n                    path: seen.path ?? [],\n                });\n        };\n        for (const entry of [...this.seen.entries()].reverse()) {\n            flattenRef(entry[0], { target: this.target });\n        }\n        const result = {};\n        if (this.target === \"draft-2020-12\") {\n            result.$schema = \"https://json-schema.org/draft/2020-12/schema\";\n        }\n        else if (this.target === \"draft-7\") {\n            result.$schema = \"http://json-schema.org/draft-07/schema#\";\n        }\n        else if (this.target === \"draft-4\") {\n            result.$schema = \"http://json-schema.org/draft-04/schema#\";\n        }\n        else if (this.target === \"openapi-3.0\") {\n            // OpenAPI 3.0 schema objects should not include a $schema property\n        }\n        else {\n            // @ts-ignore\n            console.warn(`Invalid target: ${this.target}`);\n        }\n        if (params.external?.uri) {\n            const id = params.external.registry.get(schema)?.id;\n            if (!id)\n                throw new Error(\"Schema is missing an `id` property\");\n            result.$id = params.external.uri(id);\n        }\n        Object.assign(result, root.def);\n        // build defs object\n        const defs = params.external?.defs ?? {};\n        for (const entry of this.seen.entries()) {\n            const seen = entry[1];\n            if (seen.def && seen.defId) {\n                defs[seen.defId] = seen.def;\n            }\n        }\n        // set definitions in result\n        if (params.external) {\n        }\n        else {\n            if (Object.keys(defs).length > 0) {\n                if (this.target === \"draft-2020-12\") {\n                    result.$defs = defs;\n                }\n                else {\n                    result.definitions = defs;\n                }\n            }\n        }\n        try {\n            // this \"finalizes\" this schema and ensures all cycles are removed\n            // each call to .emit() is functionally independent\n            // though the seen map is shared\n            return JSON.parse(JSON.stringify(result));\n        }\n        catch (_err) {\n            throw new Error(\"Error converting schema to JSON.\");\n        }\n    }\n}\nexport function toJSONSchema(input, _params) {\n    if (input instanceof $ZodRegistry) {\n        const gen = new JSONSchemaGenerator(_params);\n        const defs = {};\n        for (const entry of input._idmap.entries()) {\n            const [_, schema] = entry;\n            gen.process(schema);\n        }\n        const schemas = {};\n        const external = {\n            registry: input,\n            uri: _params?.uri,\n            defs,\n        };\n        for (const entry of input._idmap.entries()) {\n            const [key, schema] = entry;\n            schemas[key] = gen.emit(schema, {\n                ..._params,\n                external,\n            });\n        }\n        if (Object.keys(defs).length > 0) {\n            const defsSegment = gen.target === \"draft-2020-12\" ? \"$defs\" : \"definitions\";\n            schemas.__shared = {\n                [defsSegment]: defs,\n            };\n        }\n        return { schemas };\n    }\n    const gen = new JSONSchemaGenerator(_params);\n    gen.process(input);\n    return gen.emit(input, _params);\n}\nfunction isTransforming(_schema, _ctx) {\n    const ctx = _ctx ?? { seen: new Set() };\n    if (ctx.seen.has(_schema))\n        return false;\n    ctx.seen.add(_schema);\n    const schema = _schema;\n    const def = schema._zod.def;\n    switch (def.type) {\n        case \"string\":\n        case \"number\":\n        case \"bigint\":\n        case \"boolean\":\n        case \"date\":\n        case \"symbol\":\n        case \"undefined\":\n        case \"null\":\n        case \"any\":\n        case \"unknown\":\n        case \"never\":\n        case \"void\":\n        case \"literal\":\n        case \"enum\":\n        case \"nan\":\n        case \"file\":\n        case \"template_literal\":\n            return false;\n        case \"array\": {\n            return isTransforming(def.element, ctx);\n        }\n        case \"object\": {\n            for (const key in def.shape) {\n                if (isTransforming(def.shape[key], ctx))\n                    return true;\n            }\n            return false;\n        }\n        case \"union\": {\n            for (const option of def.options) {\n                if (isTransforming(option, ctx))\n                    return true;\n            }\n            return false;\n        }\n        case \"intersection\": {\n            return isTransforming(def.left, ctx) || isTransforming(def.right, ctx);\n        }\n        case \"tuple\": {\n            for (const item of def.items) {\n                if (isTransforming(item, ctx))\n                    return true;\n            }\n            if (def.rest && isTransforming(def.rest, ctx))\n                return true;\n            return false;\n        }\n        case \"record\": {\n            return isTransforming(def.keyType, ctx) || isTransforming(def.valueType, ctx);\n        }\n        case \"map\": {\n            return isTransforming(def.keyType, ctx) || isTransforming(def.valueType, ctx);\n        }\n        case \"set\": {\n            return isTransforming(def.valueType, ctx);\n        }\n        // inner types\n        case \"promise\":\n        case \"optional\":\n        case \"nonoptional\":\n        case \"nullable\":\n        case \"readonly\":\n            return isTransforming(def.innerType, ctx);\n        case \"lazy\":\n            return isTransforming(def.getter(), ctx);\n        case \"default\": {\n            return isTransforming(def.innerType, ctx);\n        }\n        case \"prefault\": {\n            return isTransforming(def.innerType, ctx);\n        }\n        case \"custom\": {\n            return false;\n        }\n        case \"transform\": {\n            return true;\n        }\n        case \"pipe\": {\n            return isTransforming(def.in, ctx) || isTransforming(def.out, ctx);\n        }\n        case \"success\": {\n            return false;\n        }\n        case \"catch\": {\n            return false;\n        }\n        case \"function\": {\n            return false;\n        }\n        default:\n            def;\n    }\n    throw new Error(`Unknown schema type: ${def.type}`);\n}\n", "export {};\n", "import * as core from \"../core/index.js\";\nimport { util } from \"../core/index.js\";\nimport * as checks from \"./checks.js\";\nimport * as iso from \"./iso.js\";\nimport * as parse from \"./parse.js\";\nexport const ZodType = /*@__PURE__*/ core.$constructor(\"ZodType\", (inst, def) => {\n    core.$ZodType.init(inst, def);\n    inst.def = def;\n    inst.type = def.type;\n    Object.defineProperty(inst, \"_def\", { value: def });\n    // base methods\n    inst.check = (...checks) => {\n        return inst.clone(util.mergeDefs(def, {\n            checks: [\n                ...(def.checks ?? []),\n                ...checks.map((ch) => typeof ch === \"function\" ? { _zod: { check: ch, def: { check: \"custom\" }, onattach: [] } } : ch),\n            ],\n        }));\n    };\n    inst.clone = (def, params) => core.clone(inst, def, params);\n    inst.brand = () => inst;\n    inst.register = ((reg, meta) => {\n        reg.add(inst, meta);\n        return inst;\n    });\n    // parsing\n    inst.parse = (data, params) => parse.parse(inst, data, params, { callee: inst.parse });\n    inst.safeParse = (data, params) => parse.safeParse(inst, data, params);\n    inst.parseAsync = async (data, params) => parse.parseAsync(inst, data, params, { callee: inst.parseAsync });\n    inst.safeParseAsync = async (data, params) => parse.safeParseAsync(inst, data, params);\n    inst.spa = inst.safeParseAsync;\n    // encoding/decoding\n    inst.encode = (data, params) => parse.encode(inst, data, params);\n    inst.decode = (data, params) => parse.decode(inst, data, params);\n    inst.encodeAsync = async (data, params) => parse.encodeAsync(inst, data, params);\n    inst.decodeAsync = async (data, params) => parse.decodeAsync(inst, data, params);\n    inst.safeEncode = (data, params) => parse.safeEncode(inst, data, params);\n    inst.safeDecode = (data, params) => parse.safeDecode(inst, data, params);\n    inst.safeEncodeAsync = async (data, params) => parse.safeEncodeAsync(inst, data, params);\n    inst.safeDecodeAsync = async (data, params) => parse.safeDecodeAsync(inst, data, params);\n    // refinements\n    inst.refine = (check, params) => inst.check(refine(check, params));\n    inst.superRefine = (refinement) => inst.check(superRefine(refinement));\n    inst.overwrite = (fn) => inst.check(checks.overwrite(fn));\n    // wrappers\n    inst.optional = () => optional(inst);\n    inst.nullable = () => nullable(inst);\n    inst.nullish = () => optional(nullable(inst));\n    inst.nonoptional = (params) => nonoptional(inst, params);\n    inst.array = () => array(inst);\n    inst.or = (arg) => union([inst, arg]);\n    inst.and = (arg) => intersection(inst, arg);\n    inst.transform = (tx) => pipe(inst, transform(tx));\n    inst.default = (def) => _default(inst, def);\n    inst.prefault = (def) => prefault(inst, def);\n    // inst.coalesce = (def, params) => coalesce(inst, def, params);\n    inst.catch = (params) => _catch(inst, params);\n    inst.pipe = (target) => pipe(inst, target);\n    inst.readonly = () => readonly(inst);\n    // meta\n    inst.describe = (description) => {\n        const cl = inst.clone();\n        core.globalRegistry.add(cl, { description });\n        return cl;\n    };\n    Object.defineProperty(inst, \"description\", {\n        get() {\n            return core.globalRegistry.get(inst)?.description;\n        },\n        configurable: true,\n    });\n    inst.meta = (...args) => {\n        if (args.length === 0) {\n            return core.globalRegistry.get(inst);\n        }\n        const cl = inst.clone();\n        core.globalRegistry.add(cl, args[0]);\n        return cl;\n    };\n    // helpers\n    inst.isOptional = () => inst.safeParse(undefined).success;\n    inst.isNullable = () => inst.safeParse(null).success;\n    return inst;\n});\n/** @internal */\nexport const _ZodString = /*@__PURE__*/ core.$constructor(\"_ZodString\", (inst, def) => {\n    core.$ZodString.init(inst, def);\n    ZodType.init(inst, def);\n    const bag = inst._zod.bag;\n    inst.format = bag.format ?? null;\n    inst.minLength = bag.minimum ?? null;\n    inst.maxLength = bag.maximum ?? null;\n    // validations\n    inst.regex = (...args) => inst.check(checks.regex(...args));\n    inst.includes = (...args) => inst.check(checks.includes(...args));\n    inst.startsWith = (...args) => inst.check(checks.startsWith(...args));\n    inst.endsWith = (...args) => inst.check(checks.endsWith(...args));\n    inst.min = (...args) => inst.check(checks.minLength(...args));\n    inst.max = (...args) => inst.check(checks.maxLength(...args));\n    inst.length = (...args) => inst.check(checks.length(...args));\n    inst.nonempty = (...args) => inst.check(checks.minLength(1, ...args));\n    inst.lowercase = (params) => inst.check(checks.lowercase(params));\n    inst.uppercase = (params) => inst.check(checks.uppercase(params));\n    // transforms\n    inst.trim = () => inst.check(checks.trim());\n    inst.normalize = (...args) => inst.check(checks.normalize(...args));\n    inst.toLowerCase = () => inst.check(checks.toLowerCase());\n    inst.toUpperCase = () => inst.check(checks.toUpperCase());\n});\nexport const ZodString = /*@__PURE__*/ core.$constructor(\"ZodString\", (inst, def) => {\n    core.$ZodString.init(inst, def);\n    _ZodString.init(inst, def);\n    inst.email = (params) => inst.check(core._email(ZodEmail, params));\n    inst.url = (params) => inst.check(core._url(ZodURL, params));\n    inst.jwt = (params) => inst.check(core._jwt(ZodJWT, params));\n    inst.emoji = (params) => inst.check(core._emoji(ZodEmoji, params));\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\n    inst.uuid = (params) => inst.check(core._uuid(ZodUUID, params));\n    inst.uuidv4 = (params) => inst.check(core._uuidv4(ZodUUID, params));\n    inst.uuidv6 = (params) => inst.check(core._uuidv6(ZodUUID, params));\n    inst.uuidv7 = (params) => inst.check(core._uuidv7(ZodUUID, params));\n    inst.nanoid = (params) => inst.check(core._nanoid(ZodNanoID, params));\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\n    inst.cuid = (params) => inst.check(core._cuid(ZodCUID, params));\n    inst.cuid2 = (params) => inst.check(core._cuid2(ZodCUID2, params));\n    inst.ulid = (params) => inst.check(core._ulid(ZodULID, params));\n    inst.base64 = (params) => inst.check(core._base64(ZodBase64, params));\n    inst.base64url = (params) => inst.check(core._base64url(ZodBase64URL, params));\n    inst.xid = (params) => inst.check(core._xid(ZodXID, params));\n    inst.ksuid = (params) => inst.check(core._ksuid(ZodKSUID, params));\n    inst.ipv4 = (params) => inst.check(core._ipv4(ZodIPv4, params));\n    inst.ipv6 = (params) => inst.check(core._ipv6(ZodIPv6, params));\n    inst.cidrv4 = (params) => inst.check(core._cidrv4(ZodCIDRv4, params));\n    inst.cidrv6 = (params) => inst.check(core._cidrv6(ZodCIDRv6, params));\n    inst.e164 = (params) => inst.check(core._e164(ZodE164, params));\n    // iso\n    inst.datetime = (params) => inst.check(iso.datetime(params));\n    inst.date = (params) => inst.check(iso.date(params));\n    inst.time = (params) => inst.check(iso.time(params));\n    inst.duration = (params) => inst.check(iso.duration(params));\n});\nexport function string(params) {\n    return core._string(ZodString, params);\n}\nexport const ZodStringFormat = /*@__PURE__*/ core.$constructor(\"ZodStringFormat\", (inst, def) => {\n    core.$ZodStringFormat.init(inst, def);\n    _ZodString.init(inst, def);\n});\nexport const ZodEmail = /*@__PURE__*/ core.$constructor(\"ZodEmail\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodEmail.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function email(params) {\n    return core._email(ZodEmail, params);\n}\nexport const ZodGUID = /*@__PURE__*/ core.$constructor(\"ZodGUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodGUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function guid(params) {\n    return core._guid(ZodGUID, params);\n}\nexport const ZodUUID = /*@__PURE__*/ core.$constructor(\"ZodUUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodUUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function uuid(params) {\n    return core._uuid(ZodUUID, params);\n}\nexport function uuidv4(params) {\n    return core._uuidv4(ZodUUID, params);\n}\n// ZodUUIDv6\nexport function uuidv6(params) {\n    return core._uuidv6(ZodUUID, params);\n}\n// ZodUUIDv7\nexport function uuidv7(params) {\n    return core._uuidv7(ZodUUID, params);\n}\nexport const ZodURL = /*@__PURE__*/ core.$constructor(\"ZodURL\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodURL.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function url(params) {\n    return core._url(ZodURL, params);\n}\nexport function httpUrl(params) {\n    return core._url(ZodURL, {\n        protocol: /^https?$/,\n        hostname: core.regexes.domain,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodEmoji = /*@__PURE__*/ core.$constructor(\"ZodEmoji\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodEmoji.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function emoji(params) {\n    return core._emoji(ZodEmoji, params);\n}\nexport const ZodNanoID = /*@__PURE__*/ core.$constructor(\"ZodNanoID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodNanoID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function nanoid(params) {\n    return core._nanoid(ZodNanoID, params);\n}\nexport const ZodCUID = /*@__PURE__*/ core.$constructor(\"ZodCUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cuid(params) {\n    return core._cuid(ZodCUID, params);\n}\nexport const ZodCUID2 = /*@__PURE__*/ core.$constructor(\"ZodCUID2\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCUID2.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cuid2(params) {\n    return core._cuid2(ZodCUID2, params);\n}\nexport const ZodULID = /*@__PURE__*/ core.$constructor(\"ZodULID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodULID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ulid(params) {\n    return core._ulid(ZodULID, params);\n}\nexport const ZodXID = /*@__PURE__*/ core.$constructor(\"ZodXID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodXID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function xid(params) {\n    return core._xid(ZodXID, params);\n}\nexport const ZodKSUID = /*@__PURE__*/ core.$constructor(\"ZodKSUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodKSUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ksuid(params) {\n    return core._ksuid(ZodKSUID, params);\n}\nexport const ZodIPv4 = /*@__PURE__*/ core.$constructor(\"ZodIPv4\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodIPv4.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ipv4(params) {\n    return core._ipv4(ZodIPv4, params);\n}\nexport const ZodIPv6 = /*@__PURE__*/ core.$constructor(\"ZodIPv6\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodIPv6.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ipv6(params) {\n    return core._ipv6(ZodIPv6, params);\n}\nexport const ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv4\", (inst, def) => {\n    core.$ZodCIDRv4.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cidrv4(params) {\n    return core._cidrv4(ZodCIDRv4, params);\n}\nexport const ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv6\", (inst, def) => {\n    core.$ZodCIDRv6.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cidrv6(params) {\n    return core._cidrv6(ZodCIDRv6, params);\n}\nexport const ZodBase64 = /*@__PURE__*/ core.$constructor(\"ZodBase64\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodBase64.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function base64(params) {\n    return core._base64(ZodBase64, params);\n}\nexport const ZodBase64URL = /*@__PURE__*/ core.$constructor(\"ZodBase64URL\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodBase64URL.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function base64url(params) {\n    return core._base64url(ZodBase64URL, params);\n}\nexport const ZodE164 = /*@__PURE__*/ core.$constructor(\"ZodE164\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodE164.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function e164(params) {\n    return core._e164(ZodE164, params);\n}\nexport const ZodJWT = /*@__PURE__*/ core.$constructor(\"ZodJWT\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodJWT.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function jwt(params) {\n    return core._jwt(ZodJWT, params);\n}\nexport const ZodCustomStringFormat = /*@__PURE__*/ core.$constructor(\"ZodCustomStringFormat\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCustomStringFormat.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function stringFormat(format, fnOrRegex, _params = {}) {\n    return core._stringFormat(ZodCustomStringFormat, format, fnOrRegex, _params);\n}\nexport function hostname(_params) {\n    return core._stringFormat(ZodCustomStringFormat, \"hostname\", core.regexes.hostname, _params);\n}\nexport function hex(_params) {\n    return core._stringFormat(ZodCustomStringFormat, \"hex\", core.regexes.hex, _params);\n}\nexport function hash(alg, params) {\n    const enc = params?.enc ?? \"hex\";\n    const format = `${alg}_${enc}`;\n    const regex = core.regexes[format];\n    if (!regex)\n        throw new Error(`Unrecognized hash format: ${format}`);\n    return core._stringFormat(ZodCustomStringFormat, format, regex, params);\n}\nexport const ZodNumber = /*@__PURE__*/ core.$constructor(\"ZodNumber\", (inst, def) => {\n    core.$ZodNumber.init(inst, def);\n    ZodType.init(inst, def);\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    inst.int = (params) => inst.check(int(params));\n    inst.safe = (params) => inst.check(int(params));\n    inst.positive = (params) => inst.check(checks.gt(0, params));\n    inst.nonnegative = (params) => inst.check(checks.gte(0, params));\n    inst.negative = (params) => inst.check(checks.lt(0, params));\n    inst.nonpositive = (params) => inst.check(checks.lte(0, params));\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\n    inst.step = (value, params) => inst.check(checks.multipleOf(value, params));\n    // inst.finite = (params) => inst.check(core.finite(params));\n    inst.finite = () => inst;\n    const bag = inst._zod.bag;\n    inst.minValue =\n        Math.max(bag.minimum ?? Number.NEGATIVE_INFINITY, bag.exclusiveMinimum ?? Number.NEGATIVE_INFINITY) ?? null;\n    inst.maxValue =\n        Math.min(bag.maximum ?? Number.POSITIVE_INFINITY, bag.exclusiveMaximum ?? Number.POSITIVE_INFINITY) ?? null;\n    inst.isInt = (bag.format ?? \"\").includes(\"int\") || Number.isSafeInteger(bag.multipleOf ?? 0.5);\n    inst.isFinite = true;\n    inst.format = bag.format ?? null;\n});\nexport function number(params) {\n    return core._number(ZodNumber, params);\n}\nexport const ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"ZodNumberFormat\", (inst, def) => {\n    core.$ZodNumberFormat.init(inst, def);\n    ZodNumber.init(inst, def);\n});\nexport function int(params) {\n    return core._int(ZodNumberFormat, params);\n}\nexport function float32(params) {\n    return core._float32(ZodNumberFormat, params);\n}\nexport function float64(params) {\n    return core._float64(ZodNumberFormat, params);\n}\nexport function int32(params) {\n    return core._int32(ZodNumberFormat, params);\n}\nexport function uint32(params) {\n    return core._uint32(ZodNumberFormat, params);\n}\nexport const ZodBoolean = /*@__PURE__*/ core.$constructor(\"ZodBoolean\", (inst, def) => {\n    core.$ZodBoolean.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function boolean(params) {\n    return core._boolean(ZodBoolean, params);\n}\nexport const ZodBigInt = /*@__PURE__*/ core.$constructor(\"ZodBigInt\", (inst, def) => {\n    core.$ZodBigInt.init(inst, def);\n    ZodType.init(inst, def);\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    inst.positive = (params) => inst.check(checks.gt(BigInt(0), params));\n    inst.negative = (params) => inst.check(checks.lt(BigInt(0), params));\n    inst.nonpositive = (params) => inst.check(checks.lte(BigInt(0), params));\n    inst.nonnegative = (params) => inst.check(checks.gte(BigInt(0), params));\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\n    const bag = inst._zod.bag;\n    inst.minValue = bag.minimum ?? null;\n    inst.maxValue = bag.maximum ?? null;\n    inst.format = bag.format ?? null;\n});\nexport function bigint(params) {\n    return core._bigint(ZodBigInt, params);\n}\nexport const ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"ZodBigIntFormat\", (inst, def) => {\n    core.$ZodBigIntFormat.init(inst, def);\n    ZodBigInt.init(inst, def);\n});\n// int64\nexport function int64(params) {\n    return core._int64(ZodBigIntFormat, params);\n}\n// uint64\nexport function uint64(params) {\n    return core._uint64(ZodBigIntFormat, params);\n}\nexport const ZodSymbol = /*@__PURE__*/ core.$constructor(\"ZodSymbol\", (inst, def) => {\n    core.$ZodSymbol.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function symbol(params) {\n    return core._symbol(ZodSymbol, params);\n}\nexport const ZodUndefined = /*@__PURE__*/ core.$constructor(\"ZodUndefined\", (inst, def) => {\n    core.$ZodUndefined.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _undefined(params) {\n    return core._undefined(ZodUndefined, params);\n}\nexport { _undefined as undefined };\nexport const ZodNull = /*@__PURE__*/ core.$constructor(\"ZodNull\", (inst, def) => {\n    core.$ZodNull.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _null(params) {\n    return core._null(ZodNull, params);\n}\nexport { _null as null };\nexport const ZodAny = /*@__PURE__*/ core.$constructor(\"ZodAny\", (inst, def) => {\n    core.$ZodAny.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function any() {\n    return core._any(ZodAny);\n}\nexport const ZodUnknown = /*@__PURE__*/ core.$constructor(\"ZodUnknown\", (inst, def) => {\n    core.$ZodUnknown.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function unknown() {\n    return core._unknown(ZodUnknown);\n}\nexport const ZodNever = /*@__PURE__*/ core.$constructor(\"ZodNever\", (inst, def) => {\n    core.$ZodNever.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function never(params) {\n    return core._never(ZodNever, params);\n}\nexport const ZodVoid = /*@__PURE__*/ core.$constructor(\"ZodVoid\", (inst, def) => {\n    core.$ZodVoid.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _void(params) {\n    return core._void(ZodVoid, params);\n}\nexport { _void as void };\nexport const ZodDate = /*@__PURE__*/ core.$constructor(\"ZodDate\", (inst, def) => {\n    core.$ZodDate.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    const c = inst._zod.bag;\n    inst.minDate = c.minimum ? new Date(c.minimum) : null;\n    inst.maxDate = c.maximum ? new Date(c.maximum) : null;\n});\nexport function date(params) {\n    return core._date(ZodDate, params);\n}\nexport const ZodArray = /*@__PURE__*/ core.$constructor(\"ZodArray\", (inst, def) => {\n    core.$ZodArray.init(inst, def);\n    ZodType.init(inst, def);\n    inst.element = def.element;\n    inst.min = (minLength, params) => inst.check(checks.minLength(minLength, params));\n    inst.nonempty = (params) => inst.check(checks.minLength(1, params));\n    inst.max = (maxLength, params) => inst.check(checks.maxLength(maxLength, params));\n    inst.length = (len, params) => inst.check(checks.length(len, params));\n    inst.unwrap = () => inst.element;\n});\nexport function array(element, params) {\n    return core._array(ZodArray, element, params);\n}\n// .keyof\nexport function keyof(schema) {\n    const shape = schema._zod.def.shape;\n    return _enum(Object.keys(shape));\n}\nexport const ZodObject = /*@__PURE__*/ core.$constructor(\"ZodObject\", (inst, def) => {\n    core.$ZodObjectJIT.init(inst, def);\n    ZodType.init(inst, def);\n    util.defineLazy(inst, \"shape\", () => {\n        return def.shape;\n    });\n    inst.keyof = () => _enum(Object.keys(inst._zod.def.shape));\n    inst.catchall = (catchall) => inst.clone({ ...inst._zod.def, catchall: catchall });\n    inst.passthrough = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\n    inst.loose = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\n    inst.strict = () => inst.clone({ ...inst._zod.def, catchall: never() });\n    inst.strip = () => inst.clone({ ...inst._zod.def, catchall: undefined });\n    inst.extend = (incoming) => {\n        return util.extend(inst, incoming);\n    };\n    inst.safeExtend = (incoming) => {\n        return util.safeExtend(inst, incoming);\n    };\n    inst.merge = (other) => util.merge(inst, other);\n    inst.pick = (mask) => util.pick(inst, mask);\n    inst.omit = (mask) => util.omit(inst, mask);\n    inst.partial = (...args) => util.partial(ZodOptional, inst, args[0]);\n    inst.required = (...args) => util.required(ZodNonOptional, inst, args[0]);\n});\nexport function object(shape, params) {\n    const def = {\n        type: \"object\",\n        shape: shape ?? {},\n        ...util.normalizeParams(params),\n    };\n    return new ZodObject(def);\n}\n// strictObject\nexport function strictObject(shape, params) {\n    return new ZodObject({\n        type: \"object\",\n        shape,\n        catchall: never(),\n        ...util.normalizeParams(params),\n    });\n}\n// looseObject\nexport function looseObject(shape, params) {\n    return new ZodObject({\n        type: \"object\",\n        shape,\n        catchall: unknown(),\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodUnion = /*@__PURE__*/ core.$constructor(\"ZodUnion\", (inst, def) => {\n    core.$ZodUnion.init(inst, def);\n    ZodType.init(inst, def);\n    inst.options = def.options;\n});\nexport function union(options, params) {\n    return new ZodUnion({\n        type: \"union\",\n        options: options,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodDiscriminatedUnion = /*@__PURE__*/ core.$constructor(\"ZodDiscriminatedUnion\", (inst, def) => {\n    ZodUnion.init(inst, def);\n    core.$ZodDiscriminatedUnion.init(inst, def);\n});\nexport function discriminatedUnion(discriminator, options, params) {\n    // const [options, params] = args;\n    return new ZodDiscriminatedUnion({\n        type: \"union\",\n        options,\n        discriminator,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodIntersection = /*@__PURE__*/ core.$constructor(\"ZodIntersection\", (inst, def) => {\n    core.$ZodIntersection.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function intersection(left, right) {\n    return new ZodIntersection({\n        type: \"intersection\",\n        left: left,\n        right: right,\n    });\n}\nexport const ZodTuple = /*@__PURE__*/ core.$constructor(\"ZodTuple\", (inst, def) => {\n    core.$ZodTuple.init(inst, def);\n    ZodType.init(inst, def);\n    inst.rest = (rest) => inst.clone({\n        ...inst._zod.def,\n        rest: rest,\n    });\n});\nexport function tuple(items, _paramsOrRest, _params) {\n    const hasRest = _paramsOrRest instanceof core.$ZodType;\n    const params = hasRest ? _params : _paramsOrRest;\n    const rest = hasRest ? _paramsOrRest : null;\n    return new ZodTuple({\n        type: \"tuple\",\n        items: items,\n        rest,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodRecord = /*@__PURE__*/ core.$constructor(\"ZodRecord\", (inst, def) => {\n    core.$ZodRecord.init(inst, def);\n    ZodType.init(inst, def);\n    inst.keyType = def.keyType;\n    inst.valueType = def.valueType;\n});\nexport function record(keyType, valueType, params) {\n    return new ZodRecord({\n        type: \"record\",\n        keyType,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\n// type alksjf = core.output<core.$ZodRecordKey>;\nexport function partialRecord(keyType, valueType, params) {\n    const k = core.clone(keyType);\n    k._zod.values = undefined;\n    return new ZodRecord({\n        type: \"record\",\n        keyType: k,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodMap = /*@__PURE__*/ core.$constructor(\"ZodMap\", (inst, def) => {\n    core.$ZodMap.init(inst, def);\n    ZodType.init(inst, def);\n    inst.keyType = def.keyType;\n    inst.valueType = def.valueType;\n});\nexport function map(keyType, valueType, params) {\n    return new ZodMap({\n        type: \"map\",\n        keyType: keyType,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodSet = /*@__PURE__*/ core.$constructor(\"ZodSet\", (inst, def) => {\n    core.$ZodSet.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (...args) => inst.check(core._minSize(...args));\n    inst.nonempty = (params) => inst.check(core._minSize(1, params));\n    inst.max = (...args) => inst.check(core._maxSize(...args));\n    inst.size = (...args) => inst.check(core._size(...args));\n});\nexport function set(valueType, params) {\n    return new ZodSet({\n        type: \"set\",\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodEnum = /*@__PURE__*/ core.$constructor(\"ZodEnum\", (inst, def) => {\n    core.$ZodEnum.init(inst, def);\n    ZodType.init(inst, def);\n    inst.enum = def.entries;\n    inst.options = Object.values(def.entries);\n    const keys = new Set(Object.keys(def.entries));\n    inst.extract = (values, params) => {\n        const newEntries = {};\n        for (const value of values) {\n            if (keys.has(value)) {\n                newEntries[value] = def.entries[value];\n            }\n            else\n                throw new Error(`Key ${value} not found in enum`);\n        }\n        return new ZodEnum({\n            ...def,\n            checks: [],\n            ...util.normalizeParams(params),\n            entries: newEntries,\n        });\n    };\n    inst.exclude = (values, params) => {\n        const newEntries = { ...def.entries };\n        for (const value of values) {\n            if (keys.has(value)) {\n                delete newEntries[value];\n            }\n            else\n                throw new Error(`Key ${value} not found in enum`);\n        }\n        return new ZodEnum({\n            ...def,\n            checks: [],\n            ...util.normalizeParams(params),\n            entries: newEntries,\n        });\n    };\n});\nfunction _enum(values, params) {\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\n    return new ZodEnum({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport { _enum as enum };\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\n *\n * ```ts\n * enum Colors { red, green, blue }\n * z.enum(Colors);\n * ```\n */\nexport function nativeEnum(entries, params) {\n    return new ZodEnum({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodLiteral = /*@__PURE__*/ core.$constructor(\"ZodLiteral\", (inst, def) => {\n    core.$ZodLiteral.init(inst, def);\n    ZodType.init(inst, def);\n    inst.values = new Set(def.values);\n    Object.defineProperty(inst, \"value\", {\n        get() {\n            if (def.values.length > 1) {\n                throw new Error(\"This schema contains multiple valid literal values. Use `.values` instead.\");\n            }\n            return def.values[0];\n        },\n    });\n});\nexport function literal(value, params) {\n    return new ZodLiteral({\n        type: \"literal\",\n        values: Array.isArray(value) ? value : [value],\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodFile = /*@__PURE__*/ core.$constructor(\"ZodFile\", (inst, def) => {\n    core.$ZodFile.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (size, params) => inst.check(core._minSize(size, params));\n    inst.max = (size, params) => inst.check(core._maxSize(size, params));\n    inst.mime = (types, params) => inst.check(core._mime(Array.isArray(types) ? types : [types], params));\n});\nexport function file(params) {\n    return core._file(ZodFile, params);\n}\nexport const ZodTransform = /*@__PURE__*/ core.$constructor(\"ZodTransform\", (inst, def) => {\n    core.$ZodTransform.init(inst, def);\n    ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (_ctx.direction === \"backward\") {\n            throw new core.$ZodEncodeError(inst.constructor.name);\n        }\n        payload.addIssue = (issue) => {\n            if (typeof issue === \"string\") {\n                payload.issues.push(util.issue(issue, payload.value, def));\n            }\n            else {\n                // for Zod 3 backwards compatibility\n                const _issue = issue;\n                if (_issue.fatal)\n                    _issue.continue = false;\n                _issue.code ?? (_issue.code = \"custom\");\n                _issue.input ?? (_issue.input = payload.value);\n                _issue.inst ?? (_issue.inst = inst);\n                // _issue.continue ??= true;\n                payload.issues.push(util.issue(_issue));\n            }\n        };\n        const output = def.transform(payload.value, payload);\n        if (output instanceof Promise) {\n            return output.then((output) => {\n                payload.value = output;\n                return payload;\n            });\n        }\n        payload.value = output;\n        return payload;\n    };\n});\nexport function transform(fn) {\n    return new ZodTransform({\n        type: \"transform\",\n        transform: fn,\n    });\n}\nexport const ZodOptional = /*@__PURE__*/ core.$constructor(\"ZodOptional\", (inst, def) => {\n    core.$ZodOptional.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function optional(innerType) {\n    return new ZodOptional({\n        type: \"optional\",\n        innerType: innerType,\n    });\n}\nexport const ZodNullable = /*@__PURE__*/ core.$constructor(\"ZodNullable\", (inst, def) => {\n    core.$ZodNullable.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function nullable(innerType) {\n    return new ZodNullable({\n        type: \"nullable\",\n        innerType: innerType,\n    });\n}\n// nullish\nexport function nullish(innerType) {\n    return optional(nullable(innerType));\n}\nexport const ZodDefault = /*@__PURE__*/ core.$constructor(\"ZodDefault\", (inst, def) => {\n    core.$ZodDefault.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n    inst.removeDefault = inst.unwrap;\n});\nexport function _default(innerType, defaultValue) {\n    return new ZodDefault({\n        type: \"default\",\n        innerType: innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : util.shallowClone(defaultValue);\n        },\n    });\n}\nexport const ZodPrefault = /*@__PURE__*/ core.$constructor(\"ZodPrefault\", (inst, def) => {\n    core.$ZodPrefault.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function prefault(innerType, defaultValue) {\n    return new ZodPrefault({\n        type: \"prefault\",\n        innerType: innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : util.shallowClone(defaultValue);\n        },\n    });\n}\nexport const ZodNonOptional = /*@__PURE__*/ core.$constructor(\"ZodNonOptional\", (inst, def) => {\n    core.$ZodNonOptional.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function nonoptional(innerType, params) {\n    return new ZodNonOptional({\n        type: \"nonoptional\",\n        innerType: innerType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodSuccess = /*@__PURE__*/ core.$constructor(\"ZodSuccess\", (inst, def) => {\n    core.$ZodSuccess.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function success(innerType) {\n    return new ZodSuccess({\n        type: \"success\",\n        innerType: innerType,\n    });\n}\nexport const ZodCatch = /*@__PURE__*/ core.$constructor(\"ZodCatch\", (inst, def) => {\n    core.$ZodCatch.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n    inst.removeCatch = inst.unwrap;\n});\nfunction _catch(innerType, catchValue) {\n    return new ZodCatch({\n        type: \"catch\",\n        innerType: innerType,\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\n    });\n}\nexport { _catch as catch };\nexport const ZodNaN = /*@__PURE__*/ core.$constructor(\"ZodNaN\", (inst, def) => {\n    core.$ZodNaN.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function nan(params) {\n    return core._nan(ZodNaN, params);\n}\nexport const ZodPipe = /*@__PURE__*/ core.$constructor(\"ZodPipe\", (inst, def) => {\n    core.$ZodPipe.init(inst, def);\n    ZodType.init(inst, def);\n    inst.in = def.in;\n    inst.out = def.out;\n});\nexport function pipe(in_, out) {\n    return new ZodPipe({\n        type: \"pipe\",\n        in: in_,\n        out: out,\n        // ...util.normalizeParams(params),\n    });\n}\nexport const ZodCodec = /*@__PURE__*/ core.$constructor(\"ZodCodec\", (inst, def) => {\n    ZodPipe.init(inst, def);\n    core.$ZodCodec.init(inst, def);\n});\nexport function codec(in_, out, params) {\n    return new ZodCodec({\n        type: \"pipe\",\n        in: in_,\n        out: out,\n        transform: params.decode,\n        reverseTransform: params.encode,\n    });\n}\nexport const ZodReadonly = /*@__PURE__*/ core.$constructor(\"ZodReadonly\", (inst, def) => {\n    core.$ZodReadonly.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function readonly(innerType) {\n    return new ZodReadonly({\n        type: \"readonly\",\n        innerType: innerType,\n    });\n}\nexport const ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"ZodTemplateLiteral\", (inst, def) => {\n    core.$ZodTemplateLiteral.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function templateLiteral(parts, params) {\n    return new ZodTemplateLiteral({\n        type: \"template_literal\",\n        parts,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodLazy = /*@__PURE__*/ core.$constructor(\"ZodLazy\", (inst, def) => {\n    core.$ZodLazy.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.getter();\n});\nexport function lazy(getter) {\n    return new ZodLazy({\n        type: \"lazy\",\n        getter: getter,\n    });\n}\nexport const ZodPromise = /*@__PURE__*/ core.$constructor(\"ZodPromise\", (inst, def) => {\n    core.$ZodPromise.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function promise(innerType) {\n    return new ZodPromise({\n        type: \"promise\",\n        innerType: innerType,\n    });\n}\nexport const ZodFunction = /*@__PURE__*/ core.$constructor(\"ZodFunction\", (inst, def) => {\n    core.$ZodFunction.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function _function(params) {\n    return new ZodFunction({\n        type: \"function\",\n        input: Array.isArray(params?.input) ? tuple(params?.input) : (params?.input ?? array(unknown())),\n        output: params?.output ?? unknown(),\n    });\n}\nexport { _function as function };\nexport const ZodCustom = /*@__PURE__*/ core.$constructor(\"ZodCustom\", (inst, def) => {\n    core.$ZodCustom.init(inst, def);\n    ZodType.init(inst, def);\n});\n// custom checks\nexport function check(fn) {\n    const ch = new core.$ZodCheck({\n        check: \"custom\",\n        // ...util.normalizeParams(params),\n    });\n    ch._zod.check = fn;\n    return ch;\n}\nexport function custom(fn, _params) {\n    return core._custom(ZodCustom, fn ?? (() => true), _params);\n}\nexport function refine(fn, _params = {}) {\n    return core._refine(ZodCustom, fn, _params);\n}\n// superRefine\nexport function superRefine(fn) {\n    return core._superRefine(fn);\n}\nfunction _instanceof(cls, params = {\n    error: `Input not instance of ${cls.name}`,\n}) {\n    const inst = new ZodCustom({\n        type: \"custom\",\n        check: \"custom\",\n        fn: (data) => data instanceof cls,\n        abort: true,\n        ...util.normalizeParams(params),\n    });\n    inst._zod.bag.Class = cls;\n    return inst;\n}\nexport { _instanceof as instanceof };\n// stringbool\nexport const stringbool = (...args) => core._stringbool({\n    Codec: ZodCodec,\n    Boolean: ZodBoolean,\n    String: ZodString,\n}, ...args);\nexport function json(params) {\n    const jsonSchema = lazy(() => {\n        return union([string(params), number(), boolean(), _null(), array(jsonSchema), record(string(), jsonSchema)]);\n    });\n    return jsonSchema;\n}\n// preprocess\n// /** @deprecated Use `z.pipe()` and `z.transform()` instead. */\nexport function preprocess(fn, schema) {\n    return pipe(transform(fn), schema);\n}\n", "export { _lt as lt, _lte as lte, _gt as gt, _gte as gte, _positive as positive, _negative as negative, _nonpositive as nonpositive, _nonnegative as nonnegative, _multipleOf as multipleOf, _maxSize as maxSize, _minSize as minSize, _size as size, _maxLength as maxLength, _minLength as minLength, _length as length, _regex as regex, _lowercase as lowercase, _uppercase as uppercase, _includes as includes, _startsWith as startsWith, _endsWith as endsWith, _property as property, _mime as mime, _overwrite as overwrite, _normalize as normalize, _trim as trim, _toLowerCase as toLowerCase, _toUpperCase as toUpperCase, } from \"../core/index.js\";\n", "import * as core from \"../core/index.js\";\nimport * as schemas from \"./schemas.js\";\nexport const ZodISODateTime = /*@__PURE__*/ core.$constructor(\"ZodISODateTime\", (inst, def) => {\n    core.$ZodISODateTime.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function datetime(params) {\n    return core._isoDateTime(ZodISODateTime, params);\n}\nexport const ZodISODate = /*@__PURE__*/ core.$constructor(\"ZodISODate\", (inst, def) => {\n    core.$ZodISODate.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function date(params) {\n    return core._isoDate(ZodISODate, params);\n}\nexport const ZodISOTime = /*@__PURE__*/ core.$constructor(\"ZodISOTime\", (inst, def) => {\n    core.$ZodISOTime.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function time(params) {\n    return core._isoTime(ZodISOTime, params);\n}\nexport const ZodISODuration = /*@__PURE__*/ core.$constructor(\"ZodISODuration\", (inst, def) => {\n    core.$ZodISODuration.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function duration(params) {\n    return core._isoDuration(ZodISODuration, params);\n}\n", "import * as core from \"../core/index.js\";\nimport { ZodRealError } from \"./errors.js\";\nexport const parse = /* @__PURE__ */ core._parse(ZodRealError);\nexport const parseAsync = /* @__PURE__ */ core._parseAsync(ZodRealError);\nexport const safeParse = /* @__PURE__ */ core._safeParse(ZodRealError);\nexport const safeParseAsync = /* @__PURE__ */ core._safeParseAsync(ZodRealError);\n// Codec functions\nexport const encode = /* @__PURE__ */ core._encode(ZodRealError);\nexport const decode = /* @__PURE__ */ core._decode(ZodRealError);\nexport const encodeAsync = /* @__PURE__ */ core._encodeAsync(ZodRealError);\nexport const decodeAsync = /* @__PURE__ */ core._decodeAsync(ZodRealError);\nexport const safeEncode = /* @__PURE__ */ core._safeEncode(ZodRealError);\nexport const safeDecode = /* @__PURE__ */ core._safeDecode(ZodRealError);\nexport const safeEncodeAsync = /* @__PURE__ */ core._safeEncodeAsync(ZodRealError);\nexport const safeDecodeAsync = /* @__PURE__ */ core._safeDecodeAsync(ZodRealError);\n", "import * as core from \"../core/index.js\";\nimport { $ZodError } from \"../core/index.js\";\nimport * as util from \"../core/util.js\";\nconst initializer = (inst, issues) => {\n    $ZodError.init(inst, issues);\n    inst.name = \"ZodError\";\n    Object.defineProperties(inst, {\n        format: {\n            value: (mapper) => core.formatError(inst, mapper),\n            // enumerable: false,\n        },\n        flatten: {\n            value: (mapper) => core.flattenError(inst, mapper),\n            // enumerable: false,\n        },\n        addIssue: {\n            value: (issue) => {\n                inst.issues.push(issue);\n                inst.message = JSON.stringify(inst.issues, util.jsonStringifyReplacer, 2);\n            },\n            // enumerable: false,\n        },\n        addIssues: {\n            value: (issues) => {\n                inst.issues.push(...issues);\n                inst.message = JSON.stringify(inst.issues, util.jsonStringifyReplacer, 2);\n            },\n            // enumerable: false,\n        },\n        isEmpty: {\n            get() {\n                return inst.issues.length === 0;\n            },\n            // enumerable: false,\n        },\n    });\n    // Object.defineProperty(inst, \"isEmpty\", {\n    //   get() {\n    //     return inst.issues.length === 0;\n    //   },\n    // });\n};\nexport const ZodError = core.$constructor(\"ZodError\", initializer);\nexport const ZodRealError = core.$constructor(\"ZodError\", initializer, {\n    Parent: Error,\n});\n// /** @deprecated Use `z.core.$ZodErrorMapCtx` instead. */\n// export type ErrorMapCtx = core.$ZodErrorMapCtx;\n", "// Zod 3 compat layer\nimport * as core from \"../core/index.js\";\n/** @deprecated Use the raw string literal codes instead, e.g. \"invalid_type\". */\nexport const ZodIssueCode = {\n    invalid_type: \"invalid_type\",\n    too_big: \"too_big\",\n    too_small: \"too_small\",\n    invalid_format: \"invalid_format\",\n    not_multiple_of: \"not_multiple_of\",\n    unrecognized_keys: \"unrecognized_keys\",\n    invalid_union: \"invalid_union\",\n    invalid_key: \"invalid_key\",\n    invalid_element: \"invalid_element\",\n    invalid_value: \"invalid_value\",\n    custom: \"custom\",\n};\nexport { $brand, config } from \"../core/index.js\";\n/** @deprecated Use `z.config(params)` instead. */\nexport function setErrorMap(map) {\n    core.config({\n        customError: map,\n    });\n}\n/** @deprecated Use `z.config()` instead. */\nexport function getErrorMap() {\n    return core.config().customError;\n}\n/** @deprecated Do not use. Stub definition, only included for zod-to-json-schema compatibility. */\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n", "import * as core from \"../core/index.js\";\nimport * as schemas from \"./schemas.js\";\nexport function string(params) {\n    return core._coercedString(schemas.ZodString, params);\n}\nexport function number(params) {\n    return core._coercedNumber(schemas.ZodNumber, params);\n}\nexport function boolean(params) {\n    return core._coercedBoolean(schemas.ZodBoolean, params);\n}\nexport function bigint(params) {\n    return core._coercedBigint(schemas.ZodBigInt, params);\n}\nexport function date(params) {\n    return core._coercedDate(schemas.ZodDate, params);\n}\n", "// Authentication middleware and utilities\n\nimport { Context } from 'hono';\nimport { verify } from 'hono/jwt';\nimport type { AppBindings as Env } from '../index';\nimport type { Variables } from '../types';\nimport { log } from './logger';\n\nexport interface AuthUser {\n  id: string;\n  email?: string;\n  role?: string;\n  permissions?: string[];\n}\n\n// Verify JWT token with signature verification (HS512 algorithm)\nexport async function verifyToken(token: string, secret: string): Promise<AuthUser | null> {\n  try {\n    // HS512 \uC54C\uACE0\uB9AC\uC998\uC73C\uB85C JWT \uAC80\uC99D\n    const payload: any = await verify(token, secret, 'HS512');\n    // Verify expiration (verify already checks exp, but keep explicit guard)\n    if (payload.exp && payload.exp < Date.now() / 1000) {\n      return null;\n    }\n    return {\n      id: payload.userId || payload.sub,\n      email: payload.email,\n      role: payload.role || 'user',\n      permissions: payload.permissions || []\n    };\n  } catch (error) {\n    log.error('Token verification error', error as Error, { component: 'AUTH_SERVICE' });\n    return null;\n  }\n}\n\n// Auth middleware for Hono\nexport async function authMiddleware(\n  c: Context<{ Bindings: Env; Variables: Variables }>,\n  next: () => Promise<void>\n) {\n  const authHeader = c.req.header('Authorization');\n\n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\n    return c.json({ error: 'Unauthorized' }, 401);\n  }\n\n  const token = authHeader.slice(7);\n  const secret = c.env.JWT_SECRET || 'development-secret-change-in-production';\n  const user = await verifyToken(token, secret);\n\n  if (!user) {\n    return c.json({ error: 'Invalid or expired token' }, 401);\n  }\n\n  // Store user in context\n  c.set('user', user);\n\n  await next();\n}\n\n// Optional auth middleware (doesn't fail if no token)\nexport async function optionalAuthMiddleware(\n  c: Context<{ Bindings: Env; Variables: Variables }>,\n  next: () => Promise<void>\n) {\n  const authHeader = c.req.header('Authorization');\n\n  if (authHeader && authHeader.startsWith('Bearer ')) {\n    const token = authHeader.slice(7);\n    const secret = c.env.JWT_SECRET || 'development-secret-change-in-production';\n    const user = await verifyToken(token, secret);\n    if (user) {\n      c.set('user', user);\n    }\n  }\n\n  await next();\n}\n\n// Get user from context\nexport function getUser(c: Context): AuthUser | null {\n  return c.get('user') || null;\n}\n\n// Check if user has required role\nexport function hasRole(c: Context, role: string): boolean {\n  const user = getUser(c);\n  return user?.role === role || user?.role === 'admin';\n}\n\n// Rate limiting helper\nexport async function checkRateLimit(\n  env: Env,\n  userId: string,\n  action: string,\n  limit: number = 10,\n  window: number = 60\n): Promise<boolean> {\n  const key = `rate:${userId}:${action}`;\n  const now = Date.now();\n  const windowStart = now - (window * 1000);\n\n  // Get current count from KV\n  const data = await env.CACHE.get(key);\n  let attempts: number[] = [];\n\n  if (data) {\n    attempts = JSON.parse(data).filter((t: number) => t > windowStart);\n  }\n\n  if (attempts.length >= limit) {\n    return false; // Rate limit exceeded\n  }\n\n  // Add current attempt\n  attempts.push(now);\n  await env.CACHE.put(\n    key,\n    JSON.stringify(attempts),\n    { expirationTtl: window }\n  );\n\n  return true;\n}\n\n// API key validation for service-to-service calls\nexport async function validateApiKey(\n  c: Context<{ Bindings: Env; Variables: Variables }>,\n  next: () => Promise<void>\n) {\n  const apiKey = c.req.header('X-API-Key');\n\n  if (!apiKey) {\n    return c.json({ error: 'API key required' }, 401);\n  }\n\n  // Check against environment variable\n  const validKey = c.env.INTERNAL_API_KEY || 'default-key';\n\n  if (apiKey !== validKey) {\n    return c.json({ error: 'Invalid API key' }, 401);\n  }\n\n  await next();\n}\n\n// Alias for authMiddleware (for compatibility)\nexport const validateAuth = authMiddleware;", "import { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport type { AppBindings as Env } from '../index';\nimport { getCacheStats, invalidateCache, warmCache } from '../middleware/cache';\nimport { auth } from '../middleware/auth';\nimport { CacheService, SessionCache, UserCache, APICache } from '../services/cache';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// CORS \uC124\uC815\napp.use('/*', cors());\n\n// \uAD00\uB9AC\uC790 \uAD8C\uD55C \uD655\uC778 (\uC2E4\uC81C\uB85C\uB294 \uB354 \uAC15\uB825\uD55C \uC778\uC99D \uD544\uC694)\napp.use('/*', async (c, next) => {\n  const apiKey = c.req.header('x-api-key');\n  if (apiKey !== c.env.INTERNAL_SECRET) {\n    return c.json({ error: 'Unauthorized' }, 401);\n  }\n  await next();\n});\n\n// \uCE90\uC2DC \uD1B5\uACC4 \uC870\uD68C\napp.get('/stats', async (c) => {\n  try {\n    const stats = await getCacheStats(c.env.CACHE);\n    \n    return c.json({\n      success: true,\n      stats,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\n// \uCE90\uC2DC \uBB34\uD6A8\uD654\napp.post('/invalidate', async (c) => {\n  try {\n    const body = await c.req.json<{\n      patterns?: string[];\n      type?: 'api' | 'session' | 'user' | 'all';\n      userId?: string;\n      tag?: string;\n    }>();\n\n    if (body.type === 'all') {\n      // \uBAA8\uB4E0 \uCE90\uC2DC \uC0AD\uC81C\n      const cacheService = new CacheService(c.env.CACHE);\n      await cacheService.deleteByPrefix('');\n      \n      return c.json({\n        success: true,\n        message: 'All cache cleared'\n      });\n    }\n\n    if (body.type === 'api') {\n      const apiCache = new APICache(c.env.CACHE);\n      await apiCache.invalidateAll();\n      \n      return c.json({\n        success: true,\n        message: 'API cache cleared'\n      });\n    }\n\n    if (body.type === 'session') {\n      const sessionCache = new SessionCache(c.env.CACHE);\n      await sessionCache.deleteAllSessions();\n      \n      return c.json({\n        success: true,\n        message: 'Session cache cleared'\n      });\n    }\n\n    if (body.type === 'user' && body.userId) {\n      const userCache = new UserCache(c.env.CACHE);\n      await userCache.invalidateUser(body.userId);\n      \n      const sessionCache = new SessionCache(c.env.CACHE);\n      await sessionCache.deleteUserSessions(body.userId);\n      \n      return c.json({\n        success: true,\n        message: `Cache cleared for user ${body.userId}`\n      });\n    }\n\n    if (body.patterns) {\n      await invalidateCache(c.env.CACHE, body.patterns);\n      \n      return c.json({\n        success: true,\n        message: `Cache invalidated for patterns: ${body.patterns.join(', ')}`\n      });\n    }\n\n    if (body.tag) {\n      const cacheService = new CacheService(c.env.CACHE);\n      await cacheService.deleteByTag(body.tag);\n      \n      return c.json({\n        success: true,\n        message: `Cache cleared for tag: ${body.tag}`\n      });\n    }\n\n    return c.json({ error: 'No invalidation criteria provided' }, 400);\n\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\n// \uCE90\uC2DC \uC6CC\uBC0D\napp.post('/warm', async (c) => {\n  try {\n    const body = await c.req.json<{\n      endpoints: Array<{ url: string; ttl?: number }>;\n    }>();\n\n    if (!body.endpoints || body.endpoints.length === 0) {\n      return c.json({ error: 'No endpoints provided' }, 400);\n    }\n\n    // \uBC31\uADF8\uB77C\uC6B4\uB4DC\uC5D0\uC11C \uCE90\uC2DC \uC6CC\uBC0D \uC2E4\uD589\n    c.executionCtx.waitUntil(\n      warmCache(c.env, body.endpoints)\n    );\n\n    return c.json({\n      success: true,\n      message: `Warming cache for ${body.endpoints.length} endpoints`,\n      endpoints: body.endpoints\n    });\n\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\n// \uD2B9\uC815 \uD0A4 \uC870\uD68C\napp.get('/get/:key', async (c) => {\n  try {\n    const key = c.req.param('key');\n    const cacheService = new CacheService(c.env.CACHE);\n    \n    const value = await cacheService.get(key);\n    \n    if (!value) {\n      return c.json({ error: 'Key not found' }, 404);\n    }\n\n    return c.json({\n      success: true,\n      key,\n      value,\n      exists: true\n    });\n\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\n// \uD2B9\uC815 \uD0A4 \uC124\uC815\napp.post('/set', async (c) => {\n  try {\n    const body = await c.req.json<{\n      key: string;\n      value: any;\n      ttl?: number;\n      tags?: string[];\n    }>();\n\n    if (!body.key || body.value === undefined) {\n      return c.json({ error: 'Key and value are required' }, 400);\n    }\n\n    const cacheService = new CacheService(c.env.CACHE);\n    await cacheService.set(body.key, body.value, {\n      ttl: body.ttl,\n      tags: body.tags\n    });\n\n    return c.json({\n      success: true,\n      key: body.key,\n      ttl: body.ttl || 3600\n    });\n\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\n// \uCE90\uC2DC \uD0A4 \uBAA9\uB85D \uC870\uD68C\napp.get('/keys', async (c) => {\n  try {\n    const prefix = c.req.query('prefix') || '';\n    const limit = parseInt(c.req.query('limit') || '100');\n    \n    const list = await c.env.CACHE.list({\n      prefix,\n      limit: Math.min(limit, 1000)\n    });\n\n    return c.json({\n      success: true,\n      keys: list.keys.map((key: any) => ({\n        name: key.name,\n        expiration: key.expiration,\n        metadata: key.metadata\n      })),\n      cursor: (list as any).cursor,\n      complete: list.list_complete\n    });\n\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\n// \uC138\uC158 \uAC31\uC2E0\napp.post('/session/refresh', async (c) => {\n  try {\n    const body = await c.req.json<{\n      sessionId: string;\n      ttl?: number;\n    }>();\n\n    if (!body.sessionId) {\n      return c.json({ error: 'Session ID is required' }, 400);\n    }\n\n    const sessionCache = new SessionCache(c.env.CACHE);\n    const refreshed = await sessionCache.refreshSession(\n      body.sessionId,\n      body.ttl || 3600\n    );\n\n    if (!refreshed) {\n      return c.json({ error: 'Session not found' }, 404);\n    }\n\n    return c.json({\n      success: true,\n      sessionId: body.sessionId,\n      refreshed: true,\n      ttl: body.ttl || 3600\n    });\n\n  } catch (error: any) {\n    return c.json({ error: error.message }, 500);\n  }\n});\n\nexport default app;", "import { Context, Next } from 'hono';\nimport type { AppBindings as Env } from '../index';\nimport { Variables } from '../types';\nimport { APICache } from '../services/cache';\n\ninterface CacheConfig {\n  ttl?: number;\n  keyGenerator?: (c: Context) => string;\n  shouldCache?: (c: Context) => boolean;\n  tags?: string[];\n}\n\n// \uAE30\uBCF8 \uCE90\uC2DC \uC124\uC815\nconst DEFAULT_CONFIG: CacheConfig = {\n  ttl: 300, // 5\uBD84\n  shouldCache: (c) => c.req.method === 'GET' && c.res?.status === 200\n};\n\n// \uCE90\uC2DC \uBBF8\uB4E4\uC6E8\uC5B4 \uD329\uD1A0\uB9AC\nexport function cache(config: CacheConfig = {}) {\n  const finalConfig = { ...DEFAULT_CONFIG, ...config };\n\n  return async (c: Context<{ Bindings: Env; Variables: Variables }>, next: Next) => {\n    // POST, PUT, DELETE \uB4F1\uC740 \uCE90\uC2F1\uD558\uC9C0 \uC54A\uC74C\n    if (c.req.method !== 'GET') {\n      return next();\n    }\n\n    // \uCE90\uC2DC \uBB34\uC2DC \uD5E4\uB354 \uD655\uC778\n    const cacheControl = c.req.header('cache-control');\n    if (cacheControl === 'no-cache' || cacheControl === 'no-store') {\n      return next();\n    }\n\n    // \uCE90\uC2DC \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654\n    const apiCache = new APICache(c.env.CACHE);\n\n    // \uCE90\uC2DC \uD0A4 \uC0DD\uC131\n    const url = new URL(c.req.url);\n    const cacheKey = finalConfig.keyGenerator \n      ? finalConfig.keyGenerator(c)\n      : `${url.pathname}${url.search}`;\n\n    // \uCE90\uC2DC \uC870\uD68C\n    try {\n      const cached = await apiCache.getCachedResponse('GET', cacheKey);\n      if (cached) {\n        // \uCE90\uC2DC \uD788\uD2B8\n        c.header('X-Cache', 'HIT');\n        c.header('X-Cache-Key', cacheKey);\n        c.header('Cache-Control', `public, max-age=${finalConfig.ttl}`);\n        \n        return c.json(cached);\n      }\n    } catch (error) {\n      console.error('Cache retrieval error:', error);\n      // \uCE90\uC2DC \uC624\uB958 \uC2DC \uC694\uCCAD \uACC4\uC18D \uC9C4\uD589\n    }\n\n    // \uC6D0\uBCF8 \uC751\uB2F5 \uCC98\uB9AC\n    await next();\n\n    // \uC751\uB2F5 \uCE90\uC2F1\n    if (finalConfig.shouldCache && finalConfig.shouldCache(c)) {\n      try {\n        // \uC751\uB2F5 \uBCF8\uBB38 \uC77D\uAE30\n        const responseClone = c.res.clone();\n        const responseBody = await responseClone.json();\n\n        // \uCE90\uC2DC \uC800\uC7A5\n        await apiCache.cacheResponse(\n          'GET',\n          cacheKey,\n          responseBody,\n          null,\n          finalConfig.ttl\n        );\n\n        // \uCE90\uC2DC \uBBF8\uC2A4 \uD5E4\uB354 \uCD94\uAC00\n        c.header('X-Cache', 'MISS');\n        c.header('X-Cache-Key', cacheKey);\n        c.header('Cache-Control', `public, max-age=${finalConfig.ttl}`);\n      } catch (error) {\n        console.error('Cache storage error:', error);\n        // \uCE90\uC2DC \uC800\uC7A5 \uC2E4\uD328 \uC2DC\uC5D0\uB3C4 \uC751\uB2F5\uC740 \uC815\uC0C1 \uBC18\uD658\n      }\n    }\n  };\n}\n\n// \uC0AC\uC6A9\uC790\uBCC4 \uCE90\uC2DC \uBBF8\uB4E4\uC6E8\uC5B4\nexport function userCache(config: CacheConfig = {}) {\n  return cache({\n    ...config,\n    keyGenerator: (c) => {\n      const userId = c.req.header('x-user-id') || 'anonymous';\n      const url = new URL(c.req.url);\n      return `user:${userId}:${url.pathname}${url.search}`;\n    }\n  });\n}\n\n// \uC138\uC158\uBCC4 \uCE90\uC2DC \uBBF8\uB4E4\uC6E8\uC5B4\nexport function sessionCache(config: CacheConfig = {}) {\n  return cache({\n    ...config,\n    keyGenerator: (c) => {\n      const cookies = (c.req as any).cookie ? (c.req as any).cookie() : undefined;\n      const sessionCookie = typeof cookies === 'object' ? cookies['session_id'] : undefined;\n      const sessionId = c.req.header('x-session-id') || sessionCookie || 'no-session';\n      const url = new URL(c.req.url);\n      return `session:${sessionId}:${url.pathname}${url.search}`;\n    }\n  });\n}\n\n// \uCE90\uC2DC \uBB34\uD6A8\uD654 \uD5EC\uD37C\nexport async function invalidateCache(\n  kv: KVNamespace,\n  patterns: string[]\n): Promise<void> {\n  const apiCache = new APICache(kv);\n  \n  await Promise.all(\n    patterns.map(pattern => {\n      if (pattern === '*') {\n        return apiCache.invalidateAll();\n      }\n      return apiCache.invalidateMethod(pattern);\n    })\n  );\n}\n\n// \uCE90\uC2DC \uC6CC\uBA38 - \uBBF8\uB9AC \uCE90\uC2DC\uB97C \uCC44\uC6CC\uB123\uB294 \uD568\uC218\nexport async function warmCache(\n  env: Env,\n  endpoints: Array<{ url: string; ttl?: number }>\n): Promise<void> {\n  const apiCache = new APICache(env.CACHE);\n  \n  await Promise.all(\n    endpoints.map(async ({ url, ttl = 3600 }) => {\n      try {\n        // \uC2E4\uC81C \uC5D4\uB4DC\uD3EC\uC778\uD2B8 \uD638\uCD9C\n        const response = await fetch(url);\n        if (response.ok) {\n          const data = await response.json();\n          const urlObj = new URL(url);\n          const cacheKey = `${urlObj.pathname}${urlObj.search}`;\n          \n          await apiCache.cacheResponse('GET', cacheKey, data, null, ttl);\n        }\n      } catch (error) {\n        console.error(`Failed to warm cache for ${url}:`, error);\n      }\n    })\n  );\n}\n\n// \uCE90\uC2DC \uC0C1\uD0DC \uD655\uC778 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uB97C \uC704\uD55C \uD5EC\uD37C\nexport async function getCacheStats(kv: KVNamespace): Promise<{\n  totalKeys: number;\n  estimatedSize: number;\n  cacheTypes: Record<string, number>;\n}> {\n  const list = await kv.list({ limit: 1000 });\n  \n  const cacheTypes: Record<string, number> = {};\n  \n  for (const key of list.keys) {\n    const [prefix] = key.name.split(':');\n    cacheTypes[prefix] = (cacheTypes[prefix] || 0) + 1;\n  }\n  \n  return {\n    totalKeys: list.keys.length,\n    estimatedSize: list.keys.reduce((sum, key: any) => sum + (key.metadata?.size || 0), 0),\n    cacheTypes\n  };\n}", "// Workers KV \uCE90\uC2F1 \uC11C\uBE44\uC2A4\n\nexport interface CacheOptions {\n  ttl?: number; // Time to live in seconds\n  tags?: string[]; // Cache tags for bulk invalidation\n  priority?: 'low' | 'normal' | 'high';\n}\n\nexport interface CacheEntry<T = any> {\n  data: T;\n  createdAt: number;\n  expiresAt: number;\n  tags?: string[];\n  version?: string;\n}\n\nexport class CacheService {\n  private kv: KVNamespace;\n  private prefix: string;\n  private defaultTTL: number;\n\n  constructor(kv: KVNamespace, prefix = 'cache', defaultTTL = 3600) {\n    this.kv = kv;\n    this.prefix = prefix;\n    this.defaultTTL = defaultTTL;\n  }\n\n  // \uCE90\uC2DC \uD0A4 \uC0DD\uC131\n  private makeKey(...parts: string[]): string {\n    return [this.prefix, ...parts].join(':');\n  }\n\n  // \uCE90\uC2DC \uC800\uC7A5\n  async set<T>(\n    key: string, \n    data: T, \n    options: CacheOptions = {}\n  ): Promise<void> {\n    const ttl = options.ttl || this.defaultTTL;\n    const now = Date.now();\n    \n    const entry: CacheEntry<T> = {\n      data,\n      createdAt: now,\n      expiresAt: now + (ttl * 1000),\n      tags: options.tags,\n      version: '1.0'\n    };\n\n    await this.kv.put(\n      this.makeKey(key),\n      JSON.stringify(entry),\n      {\n        expirationTtl: ttl,\n        metadata: {\n          tags: options.tags,\n          priority: options.priority || 'normal'\n        }\n      }\n    );\n\n    // \uD0DC\uADF8 \uC778\uB371\uC2A4 \uC5C5\uB370\uC774\uD2B8\n    if (options.tags && options.tags.length > 0) {\n      await this.updateTagIndex(key, options.tags);\n    }\n  }\n\n  // \uCE90\uC2DC \uC870\uD68C\n  async get<T>(key: string): Promise<T | null> {\n    const fullKey = this.makeKey(key);\n    const cached = await this.kv.get(fullKey, { type: 'json' }) as CacheEntry<T> | null;\n\n    if (!cached) {\n      return null;\n    }\n\n    // \uB9CC\uB8CC \uD655\uC778\n    if (cached.expiresAt < Date.now()) {\n      await this.kv.delete(fullKey);\n      return null;\n    }\n\n    return cached.data;\n  }\n\n  // \uCE90\uC2DC \uC874\uC7AC \uD655\uC778\n  async has(key: string): Promise<boolean> {\n    const result = await this.get(key);\n    return result !== null;\n  }\n\n  // \uCE90\uC2DC \uC0AD\uC81C\n  async delete(key: string): Promise<void> {\n    const fullKey = this.makeKey(key);\n    await this.kv.delete(fullKey);\n  }\n\n  // \uD0DC\uADF8\uB85C \uCE90\uC2DC \uC0AD\uC81C\n  async deleteByTag(tag: string): Promise<void> {\n    const tagKey = this.makeKey('tags', tag);\n    const keys = await this.kv.get<string[]>(tagKey, { type: 'json' });\n\n    if (keys && keys.length > 0) {\n      await Promise.all(keys.map(key => this.kv.delete(this.makeKey(key))));\n      await this.kv.delete(tagKey);\n    }\n  }\n\n  // \uD328\uD134\uC73C\uB85C \uCE90\uC2DC \uC0AD\uC81C\n  async deleteByPrefix(prefix: string): Promise<void> {\n    const fullPrefix = this.makeKey(prefix);\n    const list = await this.kv.list({ prefix: fullPrefix });\n\n    await Promise.all(\n      list.keys.map(key => this.kv.delete(key.name))\n    );\n  }\n\n  // \uD0DC\uADF8 \uC778\uB371\uC2A4 \uC5C5\uB370\uC774\uD2B8\n  private async updateTagIndex(key: string, tags: string[]): Promise<void> {\n    await Promise.all(\n      tags.map(async tag => {\n        const tagKey = this.makeKey('tags', tag);\n        const existing = await this.kv.get<string[]>(tagKey, { type: 'json' }) || [];\n        \n        if (!existing.includes(key)) {\n          existing.push(key);\n          await this.kv.put(tagKey, JSON.stringify(existing), {\n            expirationTtl: 86400 * 7 // 7\uC77C\n          });\n        }\n      })\n    );\n  }\n\n  // \uCE90\uC2DC \uD1B5\uACC4\n  async getStats(): Promise<{\n    totalKeys: number;\n    estimatedSize: number;\n    oldestKey?: string;\n  }> {\n    const list = await this.kv.list({ prefix: this.prefix });\n    \n    return {\n      totalKeys: list.keys.length,\n      estimatedSize: list.keys.reduce((sum, key) => sum + ((key.metadata as any)?.size || 0), 0),\n      oldestKey: list.keys[0]?.name\n    };\n  }\n}\n\n// \uC138\uC158 \uCE90\uC2F1 \uC804\uC6A9 \uC11C\uBE44\uC2A4\nexport class SessionCache {\n  private cache: CacheService;\n\n  constructor(kv: KVNamespace) {\n    this.cache = new CacheService(kv, 'session', 3600); // 1\uC2DC\uAC04 \uAE30\uBCF8 TTL\n  }\n\n  // \uC138\uC158 \uC800\uC7A5\n  async setSession(sessionId: string, data: any, ttl = 3600): Promise<void> {\n    await this.cache.set(sessionId, data, {\n      ttl,\n      tags: ['session', `user:${data.userId}`]\n    });\n  }\n\n  // \uC138\uC158 \uC870\uD68C\n  async getSession(sessionId: string): Promise<any> {\n    return this.cache.get(sessionId);\n  }\n\n  // \uC138\uC158 \uAC31\uC2E0\n  async refreshSession(sessionId: string, ttl = 3600): Promise<boolean> {\n    const session = await this.getSession(sessionId);\n    if (!session) return false;\n\n    await this.setSession(sessionId, session, ttl);\n    return true;\n  }\n\n  // \uC0AC\uC6A9\uC790\uBCC4 \uC138\uC158 \uC0AD\uC81C\n  async deleteUserSessions(userId: string): Promise<void> {\n    await this.cache.deleteByTag(`user:${userId}`);\n  }\n\n  // \uBAA8\uB4E0 \uC138\uC158 \uC0AD\uC81C\n  async deleteAllSessions(): Promise<void> {\n    await this.cache.deleteByTag('session');\n  }\n}\n\n// API \uC751\uB2F5 \uCE90\uC2F1 \uC11C\uBE44\uC2A4\nexport class APICache {\n  private cache: CacheService;\n\n  constructor(kv: KVNamespace) {\n    this.cache = new CacheService(kv, 'api', 300); // 5\uBD84 \uAE30\uBCF8 TTL\n  }\n\n  // API \uC751\uB2F5 \uCE90\uC2DC \uD0A4 \uC0DD\uC131\n  private makeAPIKey(method: string, url: string, params?: any): string {\n    const paramString = params ? JSON.stringify(params) : '';\n    return `${method}:${url}:${paramString}`;\n  }\n\n  // API \uC751\uB2F5 \uCE90\uC2F1\n  async cacheResponse(\n    method: string,\n    url: string,\n    response: any,\n    params?: any,\n    ttl = 300\n  ): Promise<void> {\n    const key = this.makeAPIKey(method, url, params);\n    await this.cache.set(key, response, { ttl, tags: ['api', method] });\n  }\n\n  // \uCE90\uC2DC\uB41C \uC751\uB2F5 \uC870\uD68C\n  async getCachedResponse(\n    method: string,\n    url: string,\n    params?: any\n  ): Promise<any> {\n    const key = this.makeAPIKey(method, url, params);\n    return this.cache.get(key);\n  }\n\n  // \uD2B9\uC815 \uBA54\uC11C\uB4DC\uC758 \uBAA8\uB4E0 \uCE90\uC2DC \uC0AD\uC81C\n  async invalidateMethod(method: string): Promise<void> {\n    await this.cache.deleteByTag(method);\n  }\n\n  // \uBAA8\uB4E0 API \uCE90\uC2DC \uC0AD\uC81C\n  async invalidateAll(): Promise<void> {\n    await this.cache.deleteByTag('api');\n  }\n}\n\n// \uC0AC\uC6A9\uC790 \uD504\uB85C\uD544 \uCE90\uC2F1 \uC11C\uBE44\uC2A4\nexport class UserCache {\n  private cache: CacheService;\n\n  constructor(kv: KVNamespace) {\n    this.cache = new CacheService(kv, 'user', 86400); // 24\uC2DC\uAC04 \uAE30\uBCF8 TTL\n  }\n\n  // \uC0AC\uC6A9\uC790 \uD504\uB85C\uD544 \uCE90\uC2F1\n  async setUser(userId: string, profile: any): Promise<void> {\n    await this.cache.set(`profile:${userId}`, profile, {\n      ttl: 86400,\n      tags: ['user-profile']\n    });\n  }\n\n  // \uC0AC\uC6A9\uC790 \uD504\uB85C\uD544 \uC870\uD68C\n  async getUser(userId: string): Promise<any> {\n    return this.cache.get(`profile:${userId}`);\n  }\n\n  // \uC0AC\uC6A9\uC790 \uC124\uC815 \uCE90\uC2F1\n  async setUserSettings(userId: string, settings: any): Promise<void> {\n    await this.cache.set(`settings:${userId}`, settings, {\n      ttl: 86400 * 7, // 7\uC77C\n      tags: ['user-settings']\n    });\n  }\n\n  // \uC0AC\uC6A9\uC790 \uC124\uC815 \uC870\uD68C\n  async getUserSettings(userId: string): Promise<any> {\n    return this.cache.get(`settings:${userId}`);\n  }\n\n  // \uC0AC\uC6A9\uC790 \uAD00\uB828 \uBAA8\uB4E0 \uCE90\uC2DC \uC0AD\uC81C\n  async invalidateUser(userId: string): Promise<void> {\n    await Promise.all([\n      this.cache.delete(`profile:${userId}`),\n      this.cache.delete(`settings:${userId}`)\n    ]);\n  }\n}\n\n// \uCE90\uC2DC \uBBF8\uB4E4\uC6E8\uC5B4\nexport function cacheMiddleware(kv: KVNamespace, ttl = 300) {\n  const apiCache = new APICache(kv);\n\n  return async (c: any, next: any) => {\n    // GET \uC694\uCCAD\uB9CC \uCE90\uC2F1\n    if (c.req.method !== 'GET') {\n      return next();\n    }\n\n    // \uCE90\uC2DC \uC6B0\uD68C \uD5E4\uB354 \uD655\uC778\n    if (c.req.header('cache-control') === 'no-cache') {\n      return next();\n    }\n\n    const url = new URL(c.req.url);\n    const cacheKey = `${url.pathname}${url.search}`;\n\n    // \uCE90\uC2DC \uC870\uD68C\n    const cached = await apiCache.getCachedResponse('GET', cacheKey);\n    if (cached) {\n      return c.json(cached, {\n        headers: {\n          'X-Cache': 'HIT',\n          'Cache-Control': `public, max-age=${ttl}`\n        }\n      });\n    }\n\n    // \uB2E4\uC74C \uD578\uB4E4\uB7EC \uC2E4\uD589\n    await next();\n\n    // \uC131\uACF5 \uC751\uB2F5\uB9CC \uCE90\uC2F1\n    if (c.res.status === 200) {\n      const response = await c.res.json();\n      await apiCache.cacheResponse('GET', cacheKey, response, null, ttl);\n      \n      // \uCE90\uC2DC \uBBF8\uC2A4 \uD5E4\uB354 \uCD94\uAC00\n      c.res.headers.set('X-Cache', 'MISS');\n      c.res.headers.set('Cache-Control', `public, max-age=${ttl}`);\n    }\n  };\n}", "import { Hono } from 'hono';\nimport { log } from '../utils/logger';\nimport { cors } from 'hono/cors';\nimport { Env } from '../index';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// CORS \uC124\uC815\napp.use('/*', cors());\n\n// \uC9C0\uC6D0\uB418\uB294 \uC5B8\uC5B4 \uCF54\uB4DC \uB9E4\uD551\nconst LANGUAGE_CODES: Record<string, string> = {\n  'ko': 'Korean',\n  'en': 'English',\n  'ja': 'Japanese',\n  'zh': 'Chinese',\n  'es': 'Spanish',\n  'fr': 'French',\n  'de': 'German',\n  'ru': 'Russian',\n  'ar': 'Arabic',\n  'hi': 'Hindi',\n  'pt': 'Portuguese',\n  'it': 'Italian',\n  'nl': 'Dutch',\n  'sv': 'Swedish',\n  'pl': 'Polish',\n  'tr': 'Turkish',\n  'vi': 'Vietnamese',\n  'th': 'Thai',\n  'id': 'Indonesian',\n  'ms': 'Malay'\n};\n\n// \uC5B8\uC5B4 \uAC10\uC9C0\nasync function detectLanguage(text: string, ai: Ai): Promise<string> {\n  try {\n    const prompt = `Detect the language of the following text and respond with ONLY the ISO 639-1 language code (e.g., 'en' for English, 'ko' for Korean, 'ja' for Japanese, etc.).\n\nText: \"${text}\"\n\nLanguage code:`;\n\n    const response = await ai.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n      messages: [\n        { role: 'system', content: 'You are a language detection expert. Respond only with the ISO 639-1 language code.' },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.1,\n      max_tokens: 10\n    });\n\n    const detectedCode = (response as any).response.trim().toLowerCase();\n    return LANGUAGE_CODES[detectedCode] ? detectedCode : 'en';\n\n  } catch (error) {\n    log.error('Language detection error', error as Error, { component: 'TRANSLATE_SERVICE' });\n    return 'en'; // \uAE30\uBCF8\uAC12\n  }\n}\n\n// \uBC88\uC5ED \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/translate', async (c) => {\n  try {\n    const body = await c.req.json<{\n      text: string;\n      source?: string;\n      target: string;\n      preserveFormatting?: boolean;\n    }>();\n\n    if (!body.text || !body.target) {\n      return c.json({ error: 'Text and target language are required' }, 400);\n    }\n\n    // \uC18C\uC2A4 \uC5B8\uC5B4 \uC790\uB3D9 \uAC10\uC9C0\n    const sourceLanguage = body.source || await detectLanguage(body.text, c.env.AI);\n    const targetLanguage = body.target;\n\n    // \uAC19\uC740 \uC5B8\uC5B4\uBA74 \uC6D0\uBB38 \uBC18\uD658\n    if (sourceLanguage === targetLanguage) {\n      return c.json({\n        success: true,\n        originalText: body.text,\n        translatedText: body.text,\n        sourceLanguage,\n        targetLanguage,\n        isIdentical: true\n      });\n    }\n\n    // \uBC88\uC5ED \uD504\uB86C\uD504\uD2B8 \uC0DD\uC131\n    const prompt = `Translate the following text from ${LANGUAGE_CODES[sourceLanguage] || sourceLanguage} to ${LANGUAGE_CODES[targetLanguage] || targetLanguage}.\n${body.preserveFormatting ? 'Preserve the original formatting including line breaks and punctuation.' : ''}\n\nOriginal text:\n\"${body.text}\"\n\nTranslation:`;\n\n    // AI \uBC88\uC5ED \uC2E4\uD589\n    const response = await c.env.AI.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n      messages: [\n        { \n          role: 'system', \n          content: 'You are a professional translator. Provide accurate, natural translations while maintaining the original meaning and tone. Respond only with the translation, no explanations.' \n        },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.3,\n      max_tokens: Math.min(body.text.length * 3, 2000) // \uBC88\uC5ED\uC740 \uBCF4\uD1B5 \uC6D0\uBB38\uBCF4\uB2E4 \uAE38\uC5B4\uC9C8 \uC218 \uC788\uC74C\n    });\n\n    const translatedText = (response as any).response.trim()\n      .replace(/^[\"']/, '') // \uC55E \uB530\uC634\uD45C \uC81C\uAC70\n      .replace(/[\"']$/, ''); // \uB4A4 \uB530\uC634\uD45C \uC81C\uAC70\n\n    return c.json({\n      success: true,\n      originalText: body.text,\n      translatedText,\n      sourceLanguage,\n      targetLanguage,\n      model: '@cf/meta/llama-3.3-70b-instruct-fp8-fast'\n    });\n\n  } catch (error: any) {\n    log.error('Translation error', error as Error, { component: 'TRANSLATE_SERVICE' });\n    return c.json({ error: error.message || 'Translation failed' }, 500);\n  }\n});\n\n// \uC77C\uAD04 \uBC88\uC5ED \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/translate/batch', async (c) => {\n  try {\n    const body = await c.req.json<{\n      texts: string[];\n      source?: string;\n      target: string;\n    }>();\n\n    if (!body.texts || body.texts.length === 0 || !body.target) {\n      return c.json({ error: 'Texts array and target language are required' }, 400);\n    }\n\n    // \uCD5C\uB300 10\uAC1C\uAE4C\uC9C0\uB9CC \uD5C8\uC6A9\n    const textsToTranslate = body.texts.slice(0, 10);\n\n    // \uBCD1\uB82C \uBC88\uC5ED \uCC98\uB9AC\n    const translations = await Promise.all(\n      textsToTranslate.map(async (text) => {\n        try {\n          const sourceLanguage = body.source || await detectLanguage(text, c.env.AI);\n          \n          if (sourceLanguage === body.target) {\n            return {\n              originalText: text,\n              translatedText: text,\n              sourceLanguage,\n              targetLanguage: body.target,\n              isIdentical: true\n            };\n          }\n\n          const prompt = `Translate from ${LANGUAGE_CODES[sourceLanguage] || sourceLanguage} to ${LANGUAGE_CODES[body.target] || body.target}: \"${text}\"`;\n\n          const response = await c.env.AI.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n            messages: [\n              { role: 'system', content: 'You are a translator. Provide only the translation, no explanations.' },\n              { role: 'user', content: prompt }\n            ],\n            temperature: 0.3,\n            max_tokens: Math.min(text.length * 3, 1000)\n          });\n\n          return {\n            originalText: text,\n            translatedText: (response as any).response.trim().replace(/^[\"']|[\"']$/g, ''),\n            sourceLanguage,\n            targetLanguage: body.target\n          };\n\n        } catch (error) {\n          return {\n            originalText: text,\n            translatedText: '',\n            error: 'Translation failed',\n            sourceLanguage: body.source || 'unknown',\n            targetLanguage: body.target\n          };\n        }\n      })\n    );\n\n    return c.json({\n      success: true,\n      translations,\n      total: translations.length\n    });\n\n  } catch (error: any) {\n    log.error('Batch translation error', error as Error, { component: 'TRANSLATE_SERVICE' });\n    return c.json({ error: error.message || 'Batch translation failed' }, 500);\n  }\n});\n\n// \uC2E4\uC2DC\uAC04 \uC790\uB9C9 \uBC88\uC5ED \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/translate/subtitle', async (c) => {\n  try {\n    const body = await c.req.json<{\n      subtitle: {\n        text: string;\n        language?: string;\n        timestamp?: string;\n      };\n      targetLanguage: string;\n      context?: string[]; // \uC774\uC804 \uC790\uB9C9\uB4E4 (\uBB38\uB9E5 \uC774\uD574\uC6A9)\n    }>();\n\n    if (!body.subtitle?.text || !body.targetLanguage) {\n      return c.json({ error: 'Subtitle text and target language are required' }, 400);\n    }\n\n    const sourceLanguage = body.subtitle.language || await detectLanguage(body.subtitle.text, c.env.AI);\n\n    if (sourceLanguage === body.targetLanguage) {\n      return c.json({\n        success: true,\n        originalSubtitle: body.subtitle,\n        translatedSubtitle: {\n          ...body.subtitle,\n          translatedText: body.subtitle.text,\n          targetLanguage: body.targetLanguage\n        }\n      });\n    }\n\n    // \uBB38\uB9E5\uC744 \uD3EC\uD568\uD55C \uBC88\uC5ED\n    let contextPrompt = '';\n    if (body.context && body.context.length > 0) {\n      contextPrompt = `Previous conversation context:\\n${body.context.slice(-3).join('\\n')}\\n\\n`;\n    }\n\n    const prompt = `${contextPrompt}Translate this subtitle from ${LANGUAGE_CODES[sourceLanguage] || sourceLanguage} to ${LANGUAGE_CODES[body.targetLanguage] || body.targetLanguage}. Keep it concise for subtitles:\n\n\"${body.subtitle.text}\"`;\n\n    const response = await c.env.AI.run('@cf/meta/llama-3.3-70b-instruct-fp8-fast', {\n      messages: [\n        { \n          role: 'system', \n          content: 'You are a subtitle translator. Provide concise, natural translations suitable for real-time display. Consider the conversation context if provided.' \n        },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.3,\n      max_tokens: 200\n    });\n\n    const translatedText = (response as any).response.trim().replace(/^[\"']|[\"']$/g, '');\n\n    return c.json({\n      success: true,\n      originalSubtitle: body.subtitle,\n      translatedSubtitle: {\n        ...body.subtitle,\n        translatedText,\n        targetLanguage: body.targetLanguage,\n        sourceLanguage\n      }\n    });\n\n  } catch (error: any) {\n    log.error('Subtitle translation error', error as Error, { component: 'TRANSLATE_SERVICE' });\n    return c.json({ error: error.message || 'Subtitle translation failed' }, 500);\n  }\n});\n\n// \uC9C0\uC6D0 \uC5B8\uC5B4 \uBAA9\uB85D\napp.get('/languages', (c) => {\n  const languages = Object.entries(LANGUAGE_CODES).map(([code, name]) => ({\n    code,\n    name,\n    nativeName: getNativeName(code)\n  }));\n\n  return c.json({\n    success: true,\n    languages,\n    total: languages.length\n  });\n});\n\n// \uC5B8\uC5B4\uC758 \uC6D0\uC5B4 \uC774\uB984 \uBC18\uD658\nfunction getNativeName(code: string): string {\n  const nativeNames: Record<string, string> = {\n    'ko': '\uD55C\uAD6D\uC5B4',\n    'en': 'English',\n    'ja': '\u65E5\u672C\u8A9E',\n    'zh': '\u4E2D\u6587',\n    'es': 'Espa\u00F1ol',\n    'fr': 'Fran\u00E7ais',\n    'de': 'Deutsch',\n    'ru': '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n    'ar': '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n    'hi': '\u0939\u093F\u0928\u094D\u0926\u0940',\n    'pt': 'Portugu\u00EAs',\n    'it': 'Italiano',\n    'nl': 'Nederlands',\n    'sv': 'Svenska',\n    'pl': 'Polski',\n    'tr': 'T\u00FCrk\u00E7e',\n    'vi': 'Ti\u1EBFng Vi\u1EC7t',\n    'th': '\u0E44\u0E17\u0E22',\n    'id': 'Bahasa Indonesia',\n    'ms': 'Bahasa Melayu'\n  };\n\n  return nativeNames[code] || LANGUAGE_CODES[code] || code;\n}\n\nexport default app;", "import { Hono } from 'hono';\nimport { z } from 'zod';\nimport type { AppBindings as Env } from '../index';\nimport { authMiddleware } from '../utils/auth';\nimport { getAggregatedMetrics } from '../middleware/analytics';\nimport { successResponse, errorResponse } from '../utils/response';\nimport { analyzeLearningPattern } from '../services/learningAnalytics';\nimport { AppError } from '../utils/errors';\n\n// Hono \uD0C0\uC785 \uC815\uC758\ntype Variables = {\n    userId?: string;\n    requestId?: string;\n};\n\nconst app = new Hono<{ Bindings: Env; Variables: Variables }>();\n\n// \uC720\uD2F8\uB9AC\uD2F0 \uD5EC\uD37C\nfunction requireUserId(userId: string | undefined): string {\n  if (!userId) {\n    throw new AppError('\uC778\uC99D \uC815\uBCF4\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 401, 'UNAUTHORIZED');\n  }\n  return userId;\n}\n\n// \uBA54\uD2B8\uB9AD \uC870\uD68C \uC2A4\uD0A4\uB9C8\nconst metricsQuerySchema = z.object({\n    start: z.string().datetime().optional(),\n    end: z.string().datetime().optional(),\n    groupBy: z.enum(['path', 'status', 'country']).optional(),\n    interval: z.enum(['1m', '5m', '1h', '1d']).optional()\n});\n\n// \uBA54\uD2B8\uB9AD \uC870\uD68C\napp.get('/metrics', authMiddleware as any, async (c) => {\n    try {\n        const query = metricsQuerySchema.parse(c.req.query());\n\n        // \uC2DC\uAC04 \uBC94\uC704 \uC124\uC815 (\uAE30\uBCF8: \uCD5C\uADFC 24\uC2DC\uAC04)\n        const end = query.end ? new Date(query.end) : new Date();\n        const start = query.start ? new Date(query.start) : new Date(end.getTime() - 24 * 60 * 60 * 1000);\n\n        // \uBA54\uD2B8\uB9AD \uC870\uD68C\n        const metrics = await getAggregatedMetrics(\n            c.env,\n            { start, end },\n            query.groupBy\n        );\n\n        if (!metrics) {\n            return successResponse(c, {\n                timeRange: { start, end },\n                groupBy: query.groupBy ?? null,\n                fallback: true,\n                metrics: {\n                    count: 0,\n                    avgDuration: 0,\n                    avgCpuTime: 0,\n                    p95Duration: 0,\n                    p95CpuTime: 0,\n                    buckets: []\n                }\n            }, {\n                note: 'analytics_fallback'\n            });\n        }\n\n        return successResponse(c, {\n            timeRange: { start, end },\n            groupBy: query.groupBy,\n            metrics\n        });\n    } catch (error) {\n        console.error('Metrics query error:', error);\n        return successResponse(c, {\n            timeRange: {\n                start: new Date(Date.now() - 24 * 60 * 60 * 1000),\n                end: new Date()\n            },\n            groupBy: null,\n            fallback: true,\n            metrics: {\n                count: 0,\n                avgDuration: 0,\n                avgCpuTime: 0,\n                p95Duration: 0,\n                p95CpuTime: 0,\n                buckets: []\n            }\n        }, {\n            note: 'analytics_error_fallback'\n        });\n    }\n});\n\n// \uB300\uC2DC\uBCF4\uB4DC \uB370\uC774\uD130\napp.get('/dashboard', authMiddleware as any, async (c) => {\n    try {\n        const now = new Date();\n        const ranges = {\n            last24h: { start: new Date(now.getTime() - 24 * 60 * 60 * 1000), end: now },\n            last7d: { start: new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000), end: now },\n            last30d: { start: new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000), end: now }\n        };\n\n        // \uBCD1\uB82C\uB85C \uC5EC\uB7EC \uBA54\uD2B8\uB9AD \uC870\uD68C\n        const [\n            overview24h,\n            overview7d,\n            overview30d,\n            topPaths,\n            errorsByStatus,\n            geoDistribution\n        ] = await Promise.all([\n            getAggregatedMetrics(c.env, ranges.last24h),\n            getAggregatedMetrics(c.env, ranges.last7d),\n            getAggregatedMetrics(c.env, ranges.last30d),\n            getAggregatedMetrics(c.env, ranges.last24h, 'path'),\n            getAggregatedMetrics(c.env, ranges.last24h, 'status'),\n            getAggregatedMetrics(c.env, ranges.last24h, 'country')\n        ]);\n\n        return successResponse(c, {\n            overview: {\n                last24h: overview24h,\n                last7d: overview7d,\n                last30d: overview30d\n            },\n            topPaths,\n            errorsByStatus,\n            geoDistribution,\n            timestamp: now.toISOString()\n        });\n    } catch (error) {\n        console.error('Dashboard data error:', error);\n        return c.json({ success: false, error: { message: 'Failed to load dashboard data' } }, { status: 500 });\n    }\n});\n\n// \uC2E4\uC2DC\uAC04 \uBA54\uD2B8\uB9AD WebSocket\napp.get('/stream', async (c) => {\n    const upgradeHeader = c.req.header('upgrade');\n    if (!upgradeHeader || upgradeHeader !== 'websocket') {\n        return c.json({ error: 'Expected WebSocket' }, 426);\n    }\n\n    const webSocketPair = new (globalThis as any).WebSocketPair();\n    const [client, server] = Object.values(webSocketPair) as [WebSocket, WebSocket];\n\n    server.accept();\n\n    // \uC778\uC99D \uD655\uC778\n    const authHeader = c.req.header('authorization');\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n        server.send(JSON.stringify({ type: 'error', message: 'Unauthorized' }));\n        server.close(1008, 'Unauthorized');\n        return new Response(null, { status: 101, webSocket: client });\n    }\n\n    // \uC2E4\uC2DC\uAC04 \uBA54\uD2B8\uB9AD \uC2A4\uD2B8\uB9AC\uBC0D \uC2DC\uC791\n    const { streamMetrics } = await import('../middleware/analytics');\n    streamMetrics(server as WebSocket, c.env);\n\n    return new Response(null, {\n        status: 101,\n        webSocket: client,\n    });\n});\n\n// \uC5D0\uB7EC \uD1B5\uACC4\napp.get('/errors', authMiddleware as any, async (c) => {\n    try {\n        const query = metricsQuerySchema.parse(c.req.query());\n\n        const end = query.end ? new Date(query.end) : new Date();\n        const start = query.start ? new Date(query.start) : new Date(end.getTime() - 24 * 60 * 60 * 1000);\n\n        // Analytics Engine\uC5D0\uC11C \uC5D0\uB7EC\uB9CC \uD544\uD130\uB9C1\n        const result = await (c.env.ANALYTICS as any)?.query({\n            timeRange: [start, end],\n            filter: {\n                blob1: 'error'\n            },\n            aggregations: {\n                count: { count: {} },\n                topErrors: {\n                    topK: {\n                        field: 'blob4', // error message\n                        k: 10\n                    }\n                },\n                errorsByType: {\n                    topK: {\n                        field: 'blob5', // error type\n                        k: 10\n                    }\n                }\n            }\n        });\n\n        return successResponse(c, {\n            timeRange: { start, end },\n            errors: result || null\n        });\n    } catch (error) {\n        console.error('Error stats error:', error);\n        return errorResponse(c, 'Failed to query error statistics');\n    }\n});\n\n// AI \uC0AC\uC6A9\uB7C9 \uD1B5\uACC4\napp.get('/ai-usage', authMiddleware as any, async (c) => {\n    try {\n        const query = metricsQuerySchema.parse(c.req.query());\n\n        const end = query.end ? new Date(query.end) : new Date();\n        const start = query.start ? new Date(query.start) : new Date(end.getTime() - 24 * 60 * 60 * 1000);\n\n        // AI \uBA54\uD2B8\uB9AD \uC870\uD68C\n        const result = await (c.env.ANALYTICS as any)?.query({\n            timeRange: [start, end],\n            filter: {\n                blob5: { $ne: '' } // AI model\uC774 \uC788\uB294 \uC694\uCCAD\uB9CC\n            },\n            aggregations: {\n                totalTokens: { sum: { field: 'double3' } },\n                avgTokensPerRequest: { avg: { field: 'double3' } },\n                totalAiDuration: { sum: { field: 'double4' } },\n                avgAiDuration: { avg: { field: 'double4' } },\n                modelUsage: {\n                    topK: {\n                        field: 'blob5', // AI model\n                        k: 10\n                    }\n                }\n            }\n        });\n\n        return successResponse(c, {\n            timeRange: { start, end },\n            aiUsage: result || null\n        });\n    } catch (error) {\n        console.error('AI usage stats error:', error);\n        return errorResponse(c, 'Failed to query AI usage statistics');\n    }\n});\n\n// \uC131\uB2A5 \uBCF4\uACE0\uC11C\napp.get('/performance', authMiddleware as any, async (c) => {\n    try {\n        const query = metricsQuerySchema.parse(c.req.query());\n\n        const end = query.end ? new Date(query.end) : new Date();\n        const start = query.start ? new Date(query.start) : new Date(end.getTime() - 24 * 60 * 60 * 1000);\n\n        // \uC131\uB2A5 \uBA54\uD2B8\uB9AD \uC870\uD68C\n        const result = await (c.env.ANALYTICS as any)?.query({\n            timeRange: [start, end],\n            filter: {\n                blob1: 'api_request'\n            },\n            aggregations: {\n                p50Duration: { quantile: { field: 'double1', quantile: 0.5 } },\n                p75Duration: { quantile: { field: 'double1', quantile: 0.75 } },\n                p90Duration: { quantile: { field: 'double1', quantile: 0.9 } },\n                p95Duration: { quantile: { field: 'double1', quantile: 0.95 } },\n                p99Duration: { quantile: { field: 'double1', quantile: 0.99 } },\n                p50CpuTime: { quantile: { field: 'double2', quantile: 0.5 } },\n                p75CpuTime: { quantile: { field: 'double2', quantile: 0.75 } },\n                p90CpuTime: { quantile: { field: 'double2', quantile: 0.9 } },\n                p95CpuTime: { quantile: { field: 'double2', quantile: 0.95 } },\n                p99CpuTime: { quantile: { field: 'double2', quantile: 0.99 } }\n            },\n            groupBy: query.groupBy ? [`blob${getFieldIndex(query.groupBy)}`] : undefined\n        });\n\n        return successResponse(c, {\n            timeRange: { start, end },\n            groupBy: query.groupBy,\n            performance: result || null\n        });\n    } catch (error) {\n        console.error('Performance stats error:', error);\n        return errorResponse(c, 'Failed to query performance statistics');\n    }\n});\n\n// \uD544\uB4DC \uC778\uB371\uC2A4 \uB9E4\uD551 (analytics \uBBF8\uB4E4\uC6E8\uC5B4\uC640 \uB3D9\uC77C)\nfunction getFieldIndex(field: string): number {\n    const fieldMap: Record<string, number> = {\n        'path': 3,\n        'status': 1,\n        'country': 2\n    };\n    return fieldMap[field] || 1;\n}\n\n// \uC774\uBCA4\uD2B8 \uC218\uC9D1 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.post('/events', async (c) => {\n    try {\n        const { events } = await c.req.json();\n\n        if (!Array.isArray(events)) {\n            return errorResponse(c, 'Events must be an array', 'INVALID_INPUT', null, 400);\n        }\n\n        // Analytics Engine\uC5D0 \uC774\uBCA4\uD2B8 \uC804\uC1A1\n        for (const event of events) {\n            await c.env.ANALYTICS?.writeDataPoint({\n                blobs: [\n                    'client_event',\n                    event.event,\n                    event.userId,\n                    event.sessionId,\n                    event.properties?.page || ''\n                ],\n                doubles: [\n                    event.timestamp,\n                    event.properties?.pageLoadTime || 0,\n                    event.properties?.duration || 0,\n                    0\n                ],\n                indexes: [\n                    event.properties?.sessionType || '',\n                    event.properties?.feature || '',\n                    event.properties?.variant || ''\n                ]\n            });\n        }\n\n        return successResponse(c, {\n            message: 'Events recorded',\n            count: events.length\n        });\n    } catch (error) {\n        console.error('Events recording error:', error);\n        return errorResponse(c, 'Failed to record events');\n    }\n});\n\n// \uD559\uC2B5 \uD328\uD134 \uBD84\uC11D \uC5D4\uB4DC\uD3EC\uC778\uD2B8\napp.get('/learning-pattern', authMiddleware as any, async (c) => {\n    try {\n        const userId = requireUserId(c.get('userId'));\n\n        const monthsBack = parseInt(c.req.query('monthsBack') || '3');\n\n        if (monthsBack < 1 || monthsBack > 12) {\n            throw new AppError('monthsBack must be between 1 and 12', 400, 'INVALID_MONTHS_BACK');\n        }\n\n        const pattern = await analyzeLearningPattern(c.env, userId, monthsBack);\n        return successResponse(c, pattern);\n    } catch (error) {\n        if (error instanceof AppError) {\n            return errorResponse(c, error.message, error.errorCode, null, error.statusCode);\n        }\n        console.error('Learning pattern analysis error:', error);\n        return errorResponse(c, 'Learning pattern analysis failed');\n    }\n});\n\n// \uD559\uC2B5 \uC9C4\uD589 \uC0C1\uD669 \uC694\uC57D\napp.get('/progress-summary', authMiddleware as any, async (c) => {\n    try {\n        const userId = c.get('userId');\n        if (!userId) {\n            console.warn('User ID not found in context for progress-summary');\n            return successResponse(c, {\n                currentLevel: 'A1',\n                sessionsThisWeek: 0,\n                consistency: 0,\n                nextMilestone: '\uD559\uC2B5\uC744 \uC2DC\uC791\uD558\uC138\uC694',\n                topStrength: null,\n                topWeakness: null,\n                fallback: true\n            });\n        }\n\n        // AI \uBC14\uC778\uB529\uC774 \uC5C6\uB294 \uACBD\uC6B0 \uAE30\uBCF8\uAC12 \uBC18\uD658\n        if (!c.env.AI) {\n            console.warn('AI binding not available, returning default progress summary');\n            return successResponse(c, {\n                currentLevel: 'B1',\n                sessionsThisWeek: 0,\n                consistency: 0,\n                nextMilestone: '\uC774\uBC88 \uC8FC \uCCAB \uC138\uC158\uC744 \uC2DC\uC791\uD574\uBCF4\uC138\uC694',\n                topStrength: null,\n                topWeakness: null,\n                fallback: true\n            });\n        }\n\n        // DB \uBC14\uC778\uB529\uC774 \uC5C6\uB294 \uACBD\uC6B0\uC5D0\uB3C4 \uAE30\uBCF8\uAC12 \uBC18\uD658\n        if (!c.env.DB) {\n            console.warn('DB binding not available, returning default progress summary');\n            return successResponse(c, {\n                currentLevel: 'B1',\n                sessionsThisWeek: 0,\n                consistency: 0,\n                nextMilestone: '\uD559\uC2B5 \uB370\uC774\uD130\uB97C \uC218\uC9D1 \uC911\uC785\uB2C8\uB2E4',\n                topStrength: null,\n                topWeakness: null,\n                fallback: true\n            });\n        }\n\n        // \uD0C0\uC784\uC544\uC6C3 \uC124\uC815\uC73C\uB85C AI \uBD84\uC11D\uC774 \uB108\uBB34 \uC624\uB798 \uAC78\uB9AC\uBA74 \uAE30\uBCF8\uAC12 \uBC18\uD658\n        const timeoutPromise = new Promise<null>((resolve) => {\n            setTimeout(() => resolve(null), 3000); // 3\uCD08 \uD0C0\uC784\uC544\uC6C3\n        });\n\n        const analysisPromise = analyzeLearningPattern(c.env, userId, 1);\n\n        const pattern = await Promise.race([analysisPromise, timeoutPromise]);\n\n        if (!pattern) {\n            console.warn('Learning pattern analysis timed out');\n            return successResponse(c, {\n                currentLevel: 'B1',\n                sessionsThisWeek: 0,\n                consistency: 0,\n                nextMilestone: '\uD559\uC2B5 \uBD84\uC11D \uC911\uC785\uB2C8\uB2E4',\n                topStrength: null,\n                topWeakness: null,\n                fallback: true\n            });\n        }\n\n        return successResponse(c, {\n            currentLevel: pattern.progress?.currentLevel || 'B1',\n            sessionsThisWeek: Math.round(pattern.studyHabits?.sessionsPerWeek || 0),\n            consistency: pattern.studyHabits?.consistency || 0,\n            nextMilestone: pattern.insights?.milestones?.[0]?.title || '\uACC4\uC18D \uD559\uC2B5\uD558\uC138\uC694',\n            topStrength: pattern.strengths?.[0]?.area || null,\n            topWeakness: pattern.weaknesses?.[0]?.area || null,\n            fallback: false\n        });\n    } catch (error) {\n        console.error('Progress summary error:', error);\n\n        // \uBAA8\uB4E0 \uC5D0\uB7EC \uBC1C\uC0DD \uC2DC \uC548\uC804\uD55C \uAE30\uBCF8\uAC12 \uBC18\uD658 (500 \uC5D0\uB7EC \uB300\uC2E0 graceful degradation)\n        return successResponse(c, {\n            currentLevel: 'B1',\n            sessionsThisWeek: 0,\n            consistency: 0,\n            nextMilestone: '\uD559\uC2B5 \uB370\uC774\uD130 \uB85C\uB529 \uC911\uC785\uB2C8\uB2E4',\n            topStrength: null,\n            topWeakness: null,\n            fallback: true\n        });\n    }\n});\n\n// \uB9DE\uCDA4\uD615 \uD559\uC2B5 \uCD94\uCC9C\uC0AC\uD56D\napp.get('/recommendations', authMiddleware as any, async (c) => {\n    try {\n        const userId = requireUserId(c.get('userId'));\n\n        const pattern = await analyzeLearningPattern(c.env, userId, 3);\n\n        return successResponse(c, {\n            recommendations: pattern.insights.recommendations,\n            personalizedPath: pattern.personalizedPath,\n            weaknessesWithSolutions: pattern.weaknesses.map(w => ({\n                area: w.area,\n                score: w.score,\n                recommendations: w.recommendations\n            }))\n        });\n    } catch (error) {\n        if (error instanceof AppError) {\n            return errorResponse(c, error.message, error.errorCode, null, error.statusCode);\n        }\n        console.error('Recommendations error:', error);\n        return errorResponse(c, 'Recommendations generation failed');\n    }\n});\n\nexport { app as analyticsRoutes };\nexport default app;\n", "// \uD559\uC2B5 \uD328\uD134 \uBD84\uC11D AI \uC2DC\uC2A4\uD15C\n// \uC138\uC158 \uB370\uC774\uD130 \uAE30\uBC18 \uD559\uC2B5 \uD589\uB3D9 \uBD84\uC11D \uBC0F \uB9DE\uCDA4\uD615 \uCD94\uCC9C\n\nimport { generateChatCompletion, sanitizeJsonResponse, type ChatMessage } from './ai';\nimport { log } from '../utils/logger';\nimport type { Env } from '../index';\nimport { query } from '../utils/db';\n\n// \uD559\uC2B5 \uD328\uD134 \uBD84\uC11D \uACB0\uACFC\nexport interface LearningPattern {\n  userId: string;\n  analysisDate: string;\n\n  // \uD559\uC2B5 \uD589\uB3D9 \uD328\uD134\n  studyHabits: {\n    preferredTimeSlots: string[];        // ['morning', 'evening']\n    averageSessionDuration: number;      // \uBD84 \uB2E8\uC704\n    sessionsPerWeek: number;\n    consistency: number;                 // 0-100, \uD559\uC2B5 \uC77C\uAD00\uC131\n    mostProductiveTime: string;          // 'morning', 'afternoon', 'evening'\n  };\n\n  // \uC9C4\uD589 \uC0C1\uD669\n  progress: {\n    currentLevel: string;                // CEFR level\n    startingLevel: string;\n    monthsLearning: number;\n    improvementRate: number;             // 0-100, \uC6D4\uBCC4 \uD5A5\uC0C1\uB3C4\n    projection: {\n      nextLevel: string;\n      estimatedMonths: number;\n      confidence: number;                // 0-100\n    };\n  };\n\n  // \uAC15\uC810 \uBC0F \uC57D\uC810\n  strengths: {\n    area: string;                        // 'pronunciation', 'grammar', 'vocabulary', etc.\n    score: number;                       // 0-100\n    trend: 'improving' | 'stable' | 'declining';\n    details: string;\n  }[];\n\n  weaknesses: {\n    area: string;\n    score: number;\n    trend: 'improving' | 'stable' | 'declining';\n    details: string;\n    recommendations: string[];\n  }[];\n\n  // \uD559\uC2B5 \uC2A4\uD0C0\uC77C\n  learningStyle: {\n    primary: string[];                   // ['visual', 'auditory', 'kinesthetic']\n    engagement: {\n      videoSessions: number;\n      audioSessions: number;\n      textSessions: number;\n    };\n    preferredActivities: string[];       // ['conversation', 'reading', 'listening']\n  };\n\n  // \uCC38\uC5EC\uB3C4 \uBC0F \uB3D9\uAE30\n  engagement: {\n    overallScore: number;                // 0-100\n    activeParticipation: number;         // 0-100\n    initiativeLevel: number;             // 0-100\n    motivationFactors: string[];\n    riskFactors: string[];               // \uC774\uD0C8 \uC704\uD5D8 \uC694\uC18C\n  };\n\n  // AI \uC0DD\uC131 \uC778\uC0AC\uC774\uD2B8\n  insights: {\n    keyFindings: string[];\n    recommendations: string[];\n    milestones: Array<{\n      title: string;\n      description: string;\n      targetDate: string;\n      priority: 'high' | 'medium' | 'low';\n    }>;\n  };\n\n  // \uB9DE\uCDA4\uD615 \uD559\uC2B5 \uACBD\uB85C\n  personalizedPath: {\n    shortTerm: Array<{\n      goal: string;\n      activities: string[];\n      estimatedWeeks: number;\n    }>;\n    mediumTerm: Array<{\n      goal: string;\n      activities: string[];\n      estimatedMonths: number;\n    }>;\n    longTerm: Array<{\n      goal: string;\n      activities: string[];\n      estimatedMonths: number;\n    }>;\n  };\n}\n\n// \uC138\uC158 \uB370\uC774\uD130 \uC694\uC57D\ninterface SessionSummary {\n  sessionId: string;\n  date: string;\n  duration: number;              // \uBD84\n  type: string;                  // 'video', 'audio', 'text'\n  partnerId?: string;\n  scores?: {\n    pronunciation?: number;\n    fluency?: number;\n    grammar?: number;\n    vocabulary?: number;\n    coherence?: number;\n  };\n  feedback?: string;\n  topics?: string[];\n}\n\n/**\n * \uC0AC\uC6A9\uC790\uC758 \uD559\uC2B5 \uC138\uC158 \uB370\uC774\uD130 \uC218\uC9D1\n */\nasync function collectUserSessionData(\n  env: Env,\n  userId: string,\n  monthsBack: number = 3\n): Promise<SessionSummary[]> {\n  const startDate = new Date();\n  startDate.setMonth(startDate.getMonth() - monthsBack);\n\n  // \uC2E4\uC81C \uC138\uC158 \uB370\uC774\uD130 \uC870\uD68C - host \uB610\uB294 guest\uB85C \uCC38\uC5EC\uD55C \uC138\uC158 \uBAA8\uB450 \uC870\uD68C\n  const sessions = await query<{\n    session_id: number;\n    created_at: string;\n    duration_minutes: number | null;\n    session_type: string | null;\n    partner_id: string | null;\n  }>(\n    env.DB,\n    `SELECT\n      s.session_id,\n      s.created_at,\n      s.duration_minutes,\n      s.session_type,\n      CASE\n        WHEN s.host_user_id = ? THEN s.guest_user_id\n        ELSE s.host_user_id\n      END as partner_id\n    FROM sessions s\n    WHERE (s.host_user_id = ? OR s.guest_user_id = ?)\n      AND s.created_at >= ?\n      AND s.status = 'completed'\n    ORDER BY s.created_at DESC\n    LIMIT 100`,\n    [userId, userId, userId, startDate.toISOString()]\n  );\n\n  return sessions.map(s => ({\n    sessionId: String(s.session_id),\n    date: s.created_at,\n    duration: s.duration_minutes || 30,\n    type: s.session_type || 'video',\n    partnerId: s.partner_id || undefined\n  }));\n}\n\n/**\n * \uD559\uC2B5 \uC2B5\uAD00 \uBD84\uC11D\n */\nasync function analyzeStudyHabits(\n  ai: Ai,\n  sessions: SessionSummary[]\n): Promise<LearningPattern['studyHabits']> {\n  if (sessions.length === 0) {\n    return {\n      preferredTimeSlots: [],\n      averageSessionDuration: 0,\n      sessionsPerWeek: 0,\n      consistency: 0,\n      mostProductiveTime: 'morning'\n    };\n  }\n\n  // \uAE30\uBCF8 \uD1B5\uACC4 \uACC4\uC0B0\n  const totalDuration = sessions.reduce((sum, s) => sum + s.duration, 0);\n  const averageSessionDuration = Math.round(totalDuration / sessions.length);\n\n  // \uC8FC\uBCC4 \uC138\uC158 \uC218 \uACC4\uC0B0\n  const weeks = Math.ceil((Date.now() - new Date(sessions[sessions.length - 1].date).getTime()) / (7 * 24 * 60 * 60 * 1000));\n  const sessionsPerWeek = Math.round(sessions.length / Math.max(weeks, 1) * 10) / 10;\n\n  // AI\uB85C \uD328\uD134 \uBD84\uC11D\n  const messages: ChatMessage[] = [\n    {\n      role: 'system',\n      content: `You are a learning analytics expert. Analyze study session patterns and provide insights.\n\nRespond in JSON format:\n{\n  \"preferredTimeSlots\": [\"morning\", \"evening\"],\n  \"consistency\": 75,\n  \"mostProductiveTime\": \"morning\"\n}`\n    },\n    {\n      role: 'user',\n      content: `Analyze these study session patterns:\n\nSessions: ${sessions.length} sessions over ${weeks} weeks\nAverage duration: ${averageSessionDuration} minutes\nSessions per week: ${sessionsPerWeek}\n\nSession dates: ${sessions.slice(0, 20).map(s => s.date).join(', ')}\n\nDetermine:\n- Preferred time slots (morning/afternoon/evening)\n- Study consistency (0-100)\n- Most productive time of day`\n    }\n  ];\n\n  try {\n    const response = await generateChatCompletion(ai, messages, {\n      model: '@cf/meta/llama-3.3-70b-instruct-fp8-fast',\n      temperature: 0.3,\n      max_tokens: 500\n    });\n\n    const sanitized = sanitizeJsonResponse(response);\n    const parsed = JSON.parse(sanitized);\n\n    return {\n      preferredTimeSlots: Array.isArray(parsed.preferredTimeSlots) ? parsed.preferredTimeSlots : [],\n      averageSessionDuration,\n      sessionsPerWeek,\n      consistency: typeof parsed.consistency === 'number' ? parsed.consistency : 50,\n      mostProductiveTime: parsed.mostProductiveTime || 'morning'\n    };\n  } catch (error) {\n    log.error('Failed to analyze study habits:', error);\n    return {\n      preferredTimeSlots: ['morning'],\n      averageSessionDuration,\n      sessionsPerWeek,\n      consistency: 50,\n      mostProductiveTime: 'morning'\n    };\n  }\n}\n\n/**\n * \uC9C4\uD589 \uC0C1\uD669 \uBC0F \uD5A5\uC0C1\uB3C4 \uBD84\uC11D\n */\nasync function analyzeProgress(\n  ai: Ai,\n  userId: string,\n  sessions: SessionSummary[],\n  env: Env\n): Promise<LearningPattern['progress']> {\n  // \uD604\uC7AC \uB808\uBCA8 \uC870\uD68C (\uB808\uBCA8 \uD14C\uC2A4\uD2B8 \uACB0\uACFC\uC5D0\uC11C)\n  const levelTests = await query<{\n    overall_level: string | null;\n    created_at: string;\n  }>(\n    env.DB,\n    `SELECT overall_level, created_at\n    FROM level_test_results\n    WHERE user_id = ?\n    ORDER BY created_at DESC\n    LIMIT 10`,\n    [userId]\n  );\n\n  const currentLevel = levelTests[0]?.overall_level || 'A1';\n  const startingLevel = levelTests[levelTests.length - 1]?.overall_level || currentLevel;\n\n  // \uD559\uC2B5 \uAE30\uAC04 \uACC4\uC0B0\n  const firstSession = sessions[sessions.length - 1];\n  const monthsLearning = firstSession\n    ? Math.ceil((Date.now() - new Date(firstSession.date).getTime()) / (30 * 24 * 60 * 60 * 1000))\n    : 1;\n\n  // AI\uB85C \uD5A5\uC0C1\uB3C4 \uBC0F \uC608\uCE21 \uBD84\uC11D\n  const messages: ChatMessage[] = [\n    {\n      role: 'system',\n      content: `You are a language learning progress analyst. Analyze improvement and predict future progress.\n\nRespond in JSON format:\n{\n  \"improvementRate\": 75,\n  \"projection\": {\n    \"nextLevel\": \"B1\",\n    \"estimatedMonths\": 4,\n    \"confidence\": 80\n  }\n}`\n    },\n    {\n      role: 'user',\n      content: `Analyze learning progress:\n\nCurrent Level: ${currentLevel}\nStarting Level: ${startingLevel}\nMonths Learning: ${monthsLearning}\nTotal Sessions: ${sessions.length}\nSessions per Week: ${(sessions.length / (monthsLearning * 4.33)).toFixed(1)}\n\nLevel progression: ${levelTests.map(t => `${t.overall_level} (${t.created_at})`).join(', ')}\n\nCalculate:\n- Improvement rate (0-100)\n- Next level prediction\n- Estimated months to next level\n- Confidence in prediction (0-100)`\n    }\n  ];\n\n  try {\n    const response = await generateChatCompletion(ai, messages, {\n      model: '@cf/meta/llama-3.3-70b-instruct-fp8-fast',\n      temperature: 0.3,\n      max_tokens: 500\n    });\n\n    const sanitized = sanitizeJsonResponse(response);\n    const parsed = JSON.parse(sanitized);\n\n    return {\n      currentLevel,\n      startingLevel,\n      monthsLearning,\n      improvementRate: typeof parsed.improvementRate === 'number' ? parsed.improvementRate : 50,\n      projection: {\n        nextLevel: parsed.projection?.nextLevel || 'B1',\n        estimatedMonths: parsed.projection?.estimatedMonths || 6,\n        confidence: parsed.projection?.confidence || 50\n      }\n    };\n  } catch (error) {\n    log.error('Failed to analyze progress:', error);\n    return {\n      currentLevel,\n      startingLevel,\n      monthsLearning,\n      improvementRate: 50,\n      projection: {\n        nextLevel: 'B1',\n        estimatedMonths: 6,\n        confidence: 50\n      }\n    };\n  }\n}\n\n/**\n * \uAC15\uC810 \uBC0F \uC57D\uC810 \uBD84\uC11D\n */\nasync function analyzeStrengthsWeaknesses(\n  ai: Ai,\n  sessions: SessionSummary[]\n): Promise<{ strengths: LearningPattern['strengths']; weaknesses: LearningPattern['weaknesses'] }> {\n  // \uC138\uC158\uC5D0\uC11C \uC810\uC218 \uB370\uC774\uD130 \uCD94\uCD9C\n  const sessionsWithScores = sessions.filter(s => s.scores);\n\n  if (sessionsWithScores.length === 0) {\n    return { strengths: [], weaknesses: [] };\n  }\n\n  // \uC601\uC5ED\uBCC4 \uD3C9\uADE0 \uC810\uC218 \uACC4\uC0B0\n  const areas = ['pronunciation', 'fluency', 'grammar', 'vocabulary', 'coherence'] as const;\n  const averages: Record<string, number> = {};\n\n  areas.forEach(area => {\n    const scores = sessionsWithScores\n      .map(s => s.scores?.[area])\n      .filter((score): score is number => score !== undefined);\n\n    if (scores.length > 0) {\n      averages[area] = Math.round(scores.reduce((sum, s) => sum + s, 0) / scores.length);\n    }\n  });\n\n  const messages: ChatMessage[] = [\n    {\n      role: 'system',\n      content: `You are a language learning analyst. Identify strengths and weaknesses from performance data.\n\nRespond in JSON format:\n{\n  \"strengths\": [\n    {\n      \"area\": \"pronunciation\",\n      \"score\": 85,\n      \"trend\": \"improving\",\n      \"details\": \"Consistently strong in consonant sounds\"\n    }\n  ],\n  \"weaknesses\": [\n    {\n      \"area\": \"grammar\",\n      \"score\": 55,\n      \"trend\": \"stable\",\n      \"details\": \"Struggles with verb tenses\",\n      \"recommendations\": [\"Focus on past tense practice\", \"Use grammar exercises\"]\n    }\n  ]\n}`\n    },\n    {\n      role: 'user',\n      content: `Analyze performance across areas:\n\n${Object.entries(averages).map(([area, score]) => `${area}: ${score}/100`).join('\\n')}\n\nTotal sessions analyzed: ${sessionsWithScores.length}\n\nIdentify:\n- Top 3 strengths (score >= 70)\n- Top 3 weaknesses (score < 70)\n- Trends for each area\n- Specific recommendations for weaknesses`\n    }\n  ];\n\n  try {\n    const response = await generateChatCompletion(ai, messages, {\n      model: '@cf/meta/llama-3.3-70b-instruct-fp8-fast',\n      temperature: 0.3,\n      max_tokens: 1200\n    });\n\n    const sanitized = sanitizeJsonResponse(response);\n    const parsed = JSON.parse(sanitized);\n\n    return {\n      strengths: Array.isArray(parsed.strengths) ? parsed.strengths : [],\n      weaknesses: Array.isArray(parsed.weaknesses) ? parsed.weaknesses : []\n    };\n  } catch (error) {\n    log.error('Failed to analyze strengths/weaknesses:', error);\n    return { strengths: [], weaknesses: [] };\n  }\n}\n\n/**\n * AI \uC778\uC0AC\uC774\uD2B8 \uBC0F \uB9DE\uCDA4\uD615 \uD559\uC2B5 \uACBD\uB85C \uC0DD\uC131\n */\nasync function generateInsightsAndPath(\n  ai: Ai,\n  pattern: Partial<LearningPattern>\n): Promise<{ insights: LearningPattern['insights']; personalizedPath: LearningPattern['personalizedPath'] }> {\n  const messages: ChatMessage[] = [\n    {\n      role: 'system',\n      content: `You are a personalized learning coach. Generate actionable insights and a customized learning path.\n\nRespond in JSON format:\n{\n  \"insights\": {\n    \"keyFindings\": [\"Finding 1\", \"Finding 2\"],\n    \"recommendations\": [\"Recommendation 1\", \"Recommendation 2\"],\n    \"milestones\": [\n      {\n        \"title\": \"Milestone 1\",\n        \"description\": \"Description\",\n        \"targetDate\": \"2025-12-01\",\n        \"priority\": \"high\"\n      }\n    ]\n  },\n  \"personalizedPath\": {\n    \"shortTerm\": [\n      {\n        \"goal\": \"Improve grammar accuracy\",\n        \"activities\": [\"Daily grammar exercises\", \"Practice with partner\"],\n        \"estimatedWeeks\": 4\n      }\n    ],\n    \"mediumTerm\": [],\n    \"longTerm\": []\n  }\n}`\n    },\n    {\n      role: 'user',\n      content: `Generate personalized learning insights and path:\n\nCurrent Level: ${pattern.progress?.currentLevel}\nStudy Frequency: ${pattern.studyHabits?.sessionsPerWeek} sessions/week\nConsistency: ${pattern.studyHabits?.consistency}/100\n\nStrengths: ${pattern.strengths?.map(s => s.area).join(', ') || 'None identified'}\nWeaknesses: ${pattern.weaknesses?.map(w => w.area).join(', ') || 'None identified'}\n\nNext Level Goal: ${pattern.progress?.projection?.nextLevel} in ${pattern.progress?.projection?.estimatedMonths} months\n\nCreate:\n- 3-5 key findings\n- 3-5 actionable recommendations\n- 2-3 milestones with dates\n- Short-term (1-2 months), medium-term (3-6 months), long-term (6-12 months) learning goals`\n    }\n  ];\n\n  try {\n    const response = await generateChatCompletion(ai, messages, {\n      model: '@cf/meta/llama-3.3-70b-instruct-fp8-fast',\n      temperature: 0.7,\n      max_tokens: 2000\n    });\n\n    const sanitized = sanitizeJsonResponse(response);\n    const parsed = JSON.parse(sanitized);\n\n    return {\n      insights: {\n        keyFindings: Array.isArray(parsed.insights?.keyFindings) ? parsed.insights.keyFindings : [],\n        recommendations: Array.isArray(parsed.insights?.recommendations) ? parsed.insights.recommendations : [],\n        milestones: Array.isArray(parsed.insights?.milestones) ? parsed.insights.milestones : []\n      },\n      personalizedPath: {\n        shortTerm: Array.isArray(parsed.personalizedPath?.shortTerm) ? parsed.personalizedPath.shortTerm : [],\n        mediumTerm: Array.isArray(parsed.personalizedPath?.mediumTerm) ? parsed.personalizedPath.mediumTerm : [],\n        longTerm: Array.isArray(parsed.personalizedPath?.longTerm) ? parsed.personalizedPath.longTerm : []\n      }\n    };\n  } catch (error) {\n    log.error('Failed to generate insights and path:', error);\n    return {\n      insights: { keyFindings: [], recommendations: [], milestones: [] },\n      personalizedPath: { shortTerm: [], mediumTerm: [], longTerm: [] }\n    };\n  }\n}\n\n/**\n * \uC885\uD569 \uD559\uC2B5 \uD328\uD134 \uBD84\uC11D \uC218\uD589\n */\nexport async function analyzeLearningPattern(\n  env: Env,\n  userId: string,\n  monthsBack: number = 3\n): Promise<LearningPattern> {\n  // \uC138\uC158 \uB370\uC774\uD130 \uC218\uC9D1\n  const sessions = await collectUserSessionData(env, userId, monthsBack);\n\n  // \uBCD1\uB82C \uBD84\uC11D \uC218\uD589\n  const [studyHabits, progress, { strengths, weaknesses }] = await Promise.all([\n    analyzeStudyHabits(env.AI, sessions),\n    analyzeProgress(env.AI, userId, sessions, env),\n    analyzeStrengthsWeaknesses(env.AI, sessions)\n  ]);\n\n  // \uD559\uC2B5 \uC2A4\uD0C0\uC77C \uBD84\uC11D (\uAC04\uB2E8\uD55C \uBC84\uC804)\n  const videoSessions = sessions.filter(s => s.type === 'video').length;\n  const audioSessions = sessions.filter(s => s.type === 'audio').length;\n  const textSessions = sessions.filter(s => s.type === 'text').length;\n\n  const learningStyle: LearningPattern['learningStyle'] = {\n    primary: videoSessions > audioSessions && videoSessions > textSessions ? ['visual'] :\n             audioSessions > textSessions ? ['auditory'] : ['reading'],\n    engagement: { videoSessions, audioSessions, textSessions },\n    preferredActivities: ['conversation']  // \uAE30\uBCF8\uAC12\n  };\n\n  // \uCC38\uC5EC\uB3C4 \uBD84\uC11D (\uAC04\uB2E8\uD55C \uBC84\uC804)\n  const engagement: LearningPattern['engagement'] = {\n    overallScore: Math.min(studyHabits.consistency, 100),\n    activeParticipation: Math.min(studyHabits.sessionsPerWeek * 10, 100),\n    initiativeLevel: 70,  // \uAE30\uBCF8\uAC12\n    motivationFactors: ['language exchange', 'career'],\n    riskFactors: studyHabits.consistency < 50 ? ['low consistency'] : []\n  };\n\n  // \uBD80\uBD84 \uD328\uD134\uC73C\uB85C \uC778\uC0AC\uC774\uD2B8 \uBC0F \uACBD\uB85C \uC0DD\uC131\n  const partialPattern: Partial<LearningPattern> = {\n    studyHabits,\n    progress,\n    strengths,\n    weaknesses\n  };\n\n  const { insights, personalizedPath } = await generateInsightsAndPath(env.AI, partialPattern);\n\n  return {\n    userId,\n    analysisDate: new Date().toISOString(),\n    studyHabits,\n    progress,\n    strengths,\n    weaknesses,\n    learningStyle,\n    engagement,\n    insights,\n    personalizedPath\n  };\n}\n", "import { Hono } from 'hono';\nimport type { AppBindings as Env } from '../index';\nimport { Variables } from '../types';\nimport { evaluateLanguageLevel, generateLevelFeedback, generateChatCompletion, sanitizeJsonResponse } from '../services/ai';\nimport { successResponse, createdResponse } from '../utils/response';\nimport { validationError } from '../middleware/error-handler';\nimport { internalAuth } from '../middleware/auth';\nimport { log } from '../utils/logger';\nimport { selectWhisperModel, validateAudioSize, WHISPER_FILE_LIMITS } from '../constants/whisper';\nimport { getActiveRooms, upsertActiveRoom } from '../utils/activeRooms';\n\nexport const internalRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\n// \uBAA8\uB4E0 \uB0B4\uBD80 API\uB294 Internal Secret \uC778\uC99D \uD544\uC694\ninternalRoutes.use('*', internalAuth());\n\n// \uB808\uAC70\uC2DC \uBC31\uC5D4\uB4DC \uD638\uD658 \uC74C\uC131 \uC804\uC0AC \uC5D4\uB4DC\uD3EC\uC778\uD2B8\ninternalRoutes.post('/transcribe', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { audio_url, audio_base64, language, user_context } = body;\n\n    let audioBuffer: ArrayBuffer;\n\n    if (audio_url) {\n      // URL\uC5D0\uC11C \uC624\uB514\uC624 \uB2E4\uC6B4\uB85C\uB4DC\n      const response = await fetch(audio_url);\n      if (!response.ok) {\n        return c.json({ error: 'Failed to fetch audio from URL' }, 400);\n      }\n      audioBuffer = await response.arrayBuffer();\n    } else if (audio_base64) {\n      // Base64 \uB514\uCF54\uB529\n      const binaryString = atob(audio_base64);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      audioBuffer = bytes.buffer;\n    } else {\n      return c.json({ error: 'Either audio_url or audio_base64 must be provided' }, 400);\n    }\n\n    // \uC624\uB514\uC624 \uD06C\uAE30 \uAC80\uC99D\n    const sizeValidation = validateAudioSize(audioBuffer.byteLength);\n    if (!sizeValidation.isValid) {\n      return c.json({\n        error: 'Audio file too large',\n        message: sizeValidation.message,\n        details: {\n          currentSize: audioBuffer.byteLength,\n          maxSize: WHISPER_FILE_LIMITS.MAX_SIZE,\n          recommendedSize: WHISPER_FILE_LIMITS.RECOMMENDED_SIZE\n        }\n      }, 400);\n    }\n\n    // \uD06C\uAE30 \uACBD\uACE0 \uB85C\uAE45\n    if (!sizeValidation.isOptimal) {\n      const warningMessage = sizeValidation.message || 'Audio file size exceeds recommended threshold';\n      log.warn(warningMessage, undefined, {\n        component: 'INTERNAL_API',\n        audioSize: audioBuffer.byteLength\n      });\n    }\n\n    // Whisper API \uD638\uCD9C\n    let result;\n    try {\n      // 2025\uB144 Cloudflare Whisper API \uD615\uC2DD:\n      // ArrayBuffer -> Uint8Array -> spread into array\n      const audioArray = [...new Uint8Array(audioBuffer)];\n\n      // \uC5B8\uC5B4\uBCC4 \uBAA8\uB378 \uC120\uD0DD\n      const modelSelection = selectWhisperModel(language);\n\n      log.info('Processing audio for transcription', undefined, {\n        component: 'INTERNAL_API',\n        audioSize: audioBuffer.byteLength,\n        arrayLength: audioArray.length,\n        language: language || 'auto',\n        model: modelSelection.model,\n        languageName: modelSelection.languageName\n      });\n\n      type WhisperResponseShape = {\n        text?: string;\n        language?: string;\n        vtt?: unknown;\n        words?: any[];\n      };\n\n      const whisperResponse = await c.env.AI.run(modelSelection.model as any, {\n        audio: audioArray\n      }) as WhisperResponseShape;\n\n      result = {\n        text: whisperResponse?.text || '',\n        language: whisperResponse?.language || language || 'unknown',\n        vtt: whisperResponse?.vtt,\n        words: whisperResponse?.words\n      };\n\n      log.info('Transcription successful', undefined, {\n        component: 'INTERNAL_API',\n        textLength: result.text.length,\n        detectedLanguage: result.language\n      });\n\n    } catch (whisperError) {\n      log.error('Whisper processing error', whisperError instanceof Error ? whisperError : new Error(String(whisperError)), undefined, {\n        component: 'INTERNAL_API',\n        audioSize: audioBuffer.byteLength,\n        error: whisperError instanceof Error ? whisperError.message : 'Unknown error'\n      });\n\n      // \uC5D0\uB7EC \uBC1C\uC0DD \uC2DC \uC0C1\uC138 \uC815\uBCF4 \uBC18\uD658\n      return c.json({\n        error: 'Transcription failed',\n        message: whisperError instanceof Error ? whisperError.message : 'Unknown error',\n        details: {\n          audioSize: audioBuffer.byteLength,\n          maxAllowedSize: WHISPER_FILE_LIMITS.MAX_SIZE\n        }\n      }, 500);\n    }\n\n    return successResponse(c, {\n      transcript: result.text || '',\n      language: result.language,\n      confidence: 1.0, // Whisper doesn't provide confidence scores\n      word_count: result.text ? result.text.split(/\\s+/).filter(word => word.length > 0).length : 0,\n      processing_time: 0, // Would need to measure actual processing time\n      vtt: result.vtt,\n      words: result.words,\n      user_context: user_context || null\n    });\n\n  } catch (error) {\n    log.error('Internal transcription error', error as Error, undefined, { component: 'INTERNAL_API' });\n    return c.json({\n      error: 'Transcription failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n});\n\n// \uB808\uAC70\uC2DC \uBC31\uC5D4\uB4DC \uD638\uD658 \uB808\uBCA8 \uD14C\uC2A4\uD2B8 \uD3C9\uAC00 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\ninternalRoutes.post('/level-test', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { transcript, language, questions, user_context } = body;\n\n    if (!transcript) {\n      return c.json({ error: 'Transcript is required' }, 400);\n    }\n\n    // AI\uB97C \uC0AC\uC6A9\uD574 \uB808\uBCA8 \uD3C9\uAC00\n    const evaluation = await evaluateLanguageLevel(\n      c.env.AI,\n      transcript,\n      questions || \"Please introduce yourself and talk about your interests.\"\n    );\n\n    return successResponse(c, {\n      evaluation: evaluation,\n      analyzed_text: transcript,\n      language: language || 'en',\n      user_context: user_context || null,\n      processed_at: new Date().toISOString()\n    });\n\n  } catch (error) {\n    log.error('Internal level test error', error as Error, { component: 'INTERNAL_API' });\n    return c.json({\n      error: 'Level test evaluation failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n});\n\n// WebRTC \uB8F8 \uBA54\uD0C0\uB370\uC774\uD130 \uB3D9\uAE30\uD654\ninternalRoutes.patch('/webrtc/rooms/:roomId/metadata', async (c) => {\n  const roomId = c.req.param('roomId');\n\n  if (!roomId) {\n    return c.json({ error: 'roomId is required' }, 400);\n  }\n\n  try {\n    const metadata = await c.req.json() as Record<string, unknown>;\n\n    if (!metadata || typeof metadata !== 'object') {\n      return c.json({ error: 'metadata object is required' }, 400);\n    }\n\n    const id = c.env.ROOM.idFromName(roomId);\n    const room = c.env.ROOM.get(id);\n\n    const response = await room.fetch(new Request('http://room/metadata', {\n      method: 'PATCH',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(metadata)\n    }));\n\n    if (!response.ok) {\n      const errorBody = (await response.json().catch(() => ({}))) as { message?: string };\n      return c.json({\n        error: 'Failed to update metadata',\n        details: errorBody?.message || null\n      }, response.status as any);\n    }\n\n    // Update cached summary\n    const cacheKey = `room:${roomId}`;\n    const cached = await c.env.CACHE.get(cacheKey);\n    if (cached) {\n      try {\n        const cachedData = JSON.parse(cached);\n        const updated = {\n          ...cachedData,\n          metadata: {\n            ...(cachedData.metadata || {}),\n            ...metadata\n          }\n        };\n        await c.env.CACHE.put(cacheKey, JSON.stringify(updated), { expirationTtl: 3600 });\n      } catch (cacheError) {\n        log.warn('Failed to update cached room metadata', undefined, {\n          component: 'INTERNAL_API',\n          roomId,\n          error: cacheError instanceof Error ? cacheError.message : String(cacheError)\n        });\n      }\n    }\n\n    // Ensure active room cache is refreshed\n    const activeRooms = await getActiveRooms(c.env.CACHE);\n    const index = activeRooms.findIndex(room => room.roomId === roomId);\n    if (index >= 0) {\n      const updatedRoom = {\n        ...activeRooms[index],\n        metadata: {\n          ...(activeRooms[index].metadata || {}),\n          ...metadata\n        },\n        updatedAt: new Date().toISOString()\n      };\n      await upsertActiveRoom(c.env.CACHE, updatedRoom);\n    }\n\n    const result = await response.json().catch(() => ({ success: true }));\n    return successResponse(c, result);\n  } catch (error) {\n    log.error('WebRTC metadata sync error', error as Error, undefined, { component: 'INTERNAL_API', roomId });\n    return c.json({\n      error: 'Failed to sync metadata',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n});\n\n// \uB808\uAC70\uC2DC \uBC31\uC5D4\uB4DC \uD638\uD658 \uB300\uD654 \uD53C\uB4DC\uBC31 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\ninternalRoutes.post('/conversation-feedback', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { transcript, context, user_level, user_context } = body;\n\n    if (!transcript) {\n      return c.json({ error: 'Transcript is required' }, 400);\n    }\n\n    // \uB2E8\uC77C \uBC1C\uD654\uB97C \uB300\uD654 \uD615\uC2DD\uC73C\uB85C \uBCC0\uD658\n    const conversation = [\n      {\n        speaker: 'user',\n        text: transcript\n      }\n    ];\n\n    // LLM\uC73C\uB85C \uD53C\uB4DC\uBC31 \uC0DD\uC131\n    const prompt = `Analyze this English conversation and provide detailed feedback:\n\nContext: ${context || 'General conversation'}\nUser Level: ${user_level || 'Unknown'}\n\nConversation:\nUser: ${transcript}\n\nProvide comprehensive feedback in JSON format:\n{\n  \"overallAssessment\": \"general assessment of the conversation\",\n  \"strengths\": [\"strength 1\", \"strength 2\"],\n  \"weaknesses\": [\"weakness 1\", \"weakness 2\"],\n  \"corrections\": [\n    {\n      \"original\": \"incorrect phrase\",\n      \"correction\": \"corrected phrase\",\n      \"explanation\": \"why this correction is needed\"\n    }\n  ],\n  \"suggestions\": [\"suggestion 1\", \"suggestion 2\"],\n  \"encouragement\": \"positive feedback message\",\n  \"fluencyScore\": 75\n}`;\n\n    const aiResponse = await generateChatCompletion(c.env.AI, [\n      {\n        role: 'system',\n        content: 'You are an experienced English conversation coach. Always respond with valid JSON.'\n      },\n      { role: 'user', content: prompt }\n    ], {\n      temperature: 0.4,\n      max_tokens: 1500,\n      response_format: { type: 'json_object' }\n    });\n\n    let feedback;\n    try {\n      const sanitized = sanitizeJsonResponse(aiResponse.text);\n      feedback = JSON.parse(sanitized);\n    } catch (parseError) {\n      log.warn('Conversation feedback parse error', undefined, {\n        component: 'INTERNAL_API',\n        rawPreview: aiResponse.text?.slice(0, 500),\n        sanitizedPreview: sanitizeJsonResponse(aiResponse.text)?.slice(0, 500),\n        errorMessage: parseError instanceof Error ? parseError.message : String(parseError),\n        model: aiResponse.model\n      });\n      // JSON \uD30C\uC2F1 \uC2E4\uD328 \uC2DC \uAE30\uBCF8 \uAD6C\uC870 \uBC18\uD658\n      feedback = {\n        overallAssessment: \"The conversation shows your effort to communicate in English.\",\n        strengths: [\"Shows willingness to practice English\"],\n        weaknesses: [\"Could benefit from more practice\"],\n        corrections: [],\n        suggestions: [\"Continue practicing regularly\", \"Focus on clear pronunciation\"],\n        encouragement: \"Keep practicing! You're making progress.\",\n        fluencyScore: 70\n      };\n    }\n\n    return successResponse(c, {\n      feedback: feedback,\n      analyzed_text: transcript,\n      context: context || 'general',\n      user_level: user_level || 'unknown',\n      user_context: user_context || null,\n      processed_at: new Date().toISOString()\n    });\n\n  } catch (error) {\n    log.error('Internal conversation feedback error', error as Error, undefined, { component: 'INTERNAL_API' });\n    return c.json({\n      error: 'Conversation feedback generation failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n});\n\n// \uB808\uAC70\uC2DC \uBC31\uC5D4\uB4DC \uD638\uD658 \uD559\uC2B5 \uCD94\uCC9C \uC5D4\uB4DC\uD3EC\uC778\uD2B8 (AI \uC5C6\uC774 \uC815\uC801)\ninternalRoutes.post('/learning-recommendations', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { user_level, weaknesses, strengths, user_context } = body;\n\n    // \uB808\uBCA8\uBCC4 \uCD94\uCC9C \uCF58\uD150\uCE20 \uC0DD\uC131\n    const recommendations = generateStaticRecommendations(user_level, weaknesses);\n\n    return successResponse(c, {\n      recommendations: recommendations,\n      user_level: user_level || 'B1',\n      based_on_weaknesses: weaknesses || [],\n      based_on_strengths: strengths || [],\n      user_context: user_context || null,\n      generated_at: new Date().toISOString()\n    });\n\n  } catch (error) {\n    log.error('Internal learning recommendations error', error as Error, undefined, { component: 'INTERNAL_API' });\n    return c.json({\n      error: 'Learning recommendations generation failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n});\n\n// \uC815\uC801 \uD559\uC2B5 \uCD94\uCC9C \uC0DD\uC131 \uD568\uC218\nfunction generateStaticRecommendations(userLevel: string, weaknesses: string[]) {\n  const levelContent: Record<string, any> = {\n    'A1': {\n      contents: [\n        'Basic vocabulary flashcards (colors, numbers, family)',\n        'Simple conversation dialogues',\n        'English learning apps for beginners',\n        'Children\\'s English books'\n      ],\n      exercises: [\n        'Daily greeting practice',\n        'Basic sentence construction',\n        'Pronunciation drills for common words',\n        'Simple Q&A practice'\n      ],\n      timePerDay: '15-20 minutes'\n    },\n    'A2': {\n      contents: [\n        'Elementary reading passages',\n        'Basic grammar workbooks',\n        'English learning videos for beginners',\n        'Simple news articles'\n      ],\n      exercises: [\n        'Present and past tense practice',\n        'Describing daily activities',\n        'Basic conversation scenarios',\n        'Listening to slow English podcasts'\n      ],\n      timePerDay: '20-30 minutes'\n    },\n    'B1': {\n      contents: [\n        'Intermediate reading materials',\n        'English podcasts for learners',\n        'Grammar reference books',\n        'English news articles'\n      ],\n      exercises: [\n        'Conversation role-play scenarios',\n        'Grammar pattern drills',\n        'Writing short paragraphs',\n        'Listening comprehension practice'\n      ],\n      timePerDay: '30-45 minutes'\n    },\n    'B2': {\n      contents: [\n        'Advanced reading materials',\n        'TED talks and presentations',\n        'English novels and literature',\n        'Professional English materials'\n      ],\n      exercises: [\n        'Debate and discussion practice',\n        'Academic writing exercises',\n        'Business English conversations',\n        'Complex listening materials'\n      ],\n      timePerDay: '45-60 minutes'\n    },\n    'C1': {\n      contents: [\n        'Advanced literature excerpts',\n        'Native speaker podcasts',\n        'Academic papers and articles',\n        'Professional development materials'\n      ],\n      exercises: [\n        'Advanced debate topics',\n        'Professional presentation practice',\n        'Academic writing and research',\n        'Nuanced language practice'\n      ],\n      timePerDay: '60+ minutes'\n    },\n    'C2': {\n      contents: [\n        'Native-level literature',\n        'Specialized academic content',\n        'Professional publications',\n        'Cultural and historical materials'\n      ],\n      exercises: [\n        'Advanced writing and editing',\n        'Teaching and mentoring others',\n        'Professional presentations',\n        'Creative language use'\n      ],\n      timePerDay: '60+ minutes'\n    }\n  };\n\n  const level = userLevel.toUpperCase();\n  const baseRecommendations = levelContent[level] || levelContent['B1'];\n\n  // \uC57D\uC810\uC5D0 \uB530\uB978 \uCD94\uAC00 \uCD94\uCC9C\n  const weaknessRecommendations: Record<string, string[]> = {\n    'grammar': [\n      'Focus on grammar exercises and rules',\n      'Use grammar checking tools',\n      'Practice sentence construction'\n    ],\n    'vocabulary': [\n      'Expand vocabulary with themed word lists',\n      'Use spaced repetition flashcards',\n      'Read extensively in your interest areas'\n    ],\n    'pronunciation': [\n      'Practice with pronunciation apps',\n      'Record yourself speaking',\n      'Listen to native speakers carefully'\n    ],\n    'fluency': [\n      'Practice speaking regularly',\n      'Join conversation groups',\n      'Think in English daily'\n    ]\n  };\n\n  let additionalSuggestions: string[] = [];\n  weaknesses.forEach(weakness => {\n    const suggestions = weaknessRecommendations[weakness.toLowerCase()];\n    if (suggestions) {\n      additionalSuggestions = additionalSuggestions.concat(suggestions);\n    }\n  });\n\n  return {\n    recommendedContents: baseRecommendations.contents,\n    practiceExercises: baseRecommendations.exercises,\n    estimatedTimePerDay: baseRecommendations.timePerDay,\n    focusAreas: weaknesses,\n    additionalSuggestions: additionalSuggestions,\n    nextLevelGoals: getNextLevelGoals(level)\n  };\n}\n\nfunction getNextLevelGoals(currentLevel: string): string[] {\n  const goals: Record<string, string[]> = {\n    'A1': ['Master basic grammar patterns', 'Build core vocabulary (500-1000 words)', 'Have simple conversations'],\n    'A2': ['Use past and future tenses confidently', 'Describe experiences and events', 'Understand simple texts'],\n    'B1': ['Express opinions and preferences', 'Handle routine tasks requiring English', 'Understand main ideas of complex texts'],\n    'B2': ['Discuss abstract topics', 'Write clear, detailed text', 'Interact fluently with native speakers'],\n    'C1': ['Use language flexibly for social and professional purposes', 'Write well-structured, detailed text', 'Understand virtually everything'],\n    'C2': ['Express yourself spontaneously and precisely', 'Understand everything with ease', 'Summarize and argue effectively']\n  };\n\n  return goals[currentLevel] || goals['B1'];\n}\n\nexport default internalRoutes;\n", "/**\n * Whisper \uBAA8\uB378 \uAD00\uB828 \uC0C1\uC218 \uC815\uC758\n */\n\n// Whisper \uBAA8\uB378 \uC774\uB984\nexport const WHISPER_MODELS = {\n  ENGLISH_ONLY: '@cf/openai/whisper-tiny-en',  // \uC601\uC5B4 \uC804\uC6A9 (\uBE60\uB984)\n  MULTILINGUAL: '@cf/openai/whisper'           // \uB2E4\uAD6D\uC5B4 \uC9C0\uC6D0\n} as const;\n\n// \uC601\uC5B4 \uC804\uC6A9 \uBAA8\uB378\uC744 \uC0AC\uC6A9\uD560 \uC5B8\uC5B4 \uCF54\uB4DC\nexport const ENGLISH_LANGUAGE_CODES = [\n  'en',      // \uAE30\uBCF8 \uC601\uC5B4\n  'en-US',   // \uBBF8\uAD6D \uC601\uC5B4\n  'en-GB',   // \uC601\uAD6D \uC601\uC5B4\n  'en-AU',   // \uD638\uC8FC \uC601\uC5B4\n  'en-CA',   // \uCE90\uB098\uB2E4 \uC601\uC5B4\n  'en-NZ',   // \uB274\uC9C8\uB79C\uB4DC \uC601\uC5B4\n  'en-IE',   // \uC544\uC77C\uB79C\uB4DC \uC601\uC5B4\n  'en-ZA'    // \uB0A8\uC544\uACF5 \uC601\uC5B4\n] as const;\n\n// \uC8FC\uC694 \uC9C0\uC6D0 \uC5B8\uC5B4 (\uB514\uBC84\uAE45 \uBC0F \uB85C\uAE45\uC6A9)\nexport const MAJOR_SUPPORTED_LANGUAGES = {\n  // \uC544\uC2DC\uC544 \uC5B8\uC5B4\n  ko: '\uD55C\uAD6D\uC5B4',\n  ja: '\uC77C\uBCF8\uC5B4',\n  zh: '\uC911\uAD6D\uC5B4',\n  vi: '\uBCA0\uD2B8\uB0A8\uC5B4',\n  th: '\uD0DC\uAD6D\uC5B4',\n  id: '\uC778\uB3C4\uB124\uC2DC\uC544\uC5B4',\n\n  // \uC720\uB7FD \uC5B8\uC5B4\n  es: '\uC2A4\uD398\uC778\uC5B4',\n  fr: '\uD504\uB791\uC2A4\uC5B4',\n  de: '\uB3C5\uC77C\uC5B4',\n  it: '\uC774\uD0C8\uB9AC\uC544\uC5B4',\n  pt: '\uD3EC\uB974\uD22C\uAC08\uC5B4',\n  ru: '\uB7EC\uC2DC\uC544\uC5B4',\n  nl: '\uB124\uB35C\uB780\uB4DC\uC5B4',\n  pl: '\uD3F4\uB780\uB4DC\uC5B4',\n  sv: '\uC2A4\uC6E8\uB374\uC5B4',\n\n  // \uC911\uB3D9/\uC544\uD504\uB9AC\uCE74/\uB0A8\uC544\uC2DC\uC544\n  ar: '\uC544\uB78D\uC5B4',\n  tr: '\uD130\uD0A4\uC5B4',\n  hi: '\uD78C\uB514\uC5B4',\n  he: '\uD788\uBE0C\uB9AC\uC5B4',\n  fa: '\uD398\uB974\uC2DC\uC544\uC5B4'\n} as const;\n\n// \uD30C\uC77C \uD06C\uAE30 \uC81C\uD55C\nexport const WHISPER_FILE_LIMITS = {\n  MAX_SIZE: 25 * 1024 * 1024,        // 25MB (\uC808\uB300 \uCD5C\uB300)\n  RECOMMENDED_SIZE: 4 * 1024 * 1024,  // 4MB (\uAD8C\uC7A5)\n  OPTIMAL_DURATION: 30                // 30\uCD08 (\uCD5C\uC801)\n} as const;\n\n/**\n * \uC5B8\uC5B4 \uCF54\uB4DC\uC5D0 \uB530\uB978 \uC801\uC808\uD55C Whisper \uBAA8\uB378 \uC120\uD0DD\n */\nexport function selectWhisperModel(language?: string): {\n  model: string;\n  isEnglishOnly: boolean;\n  languageName?: string;\n} {\n  const lang = language || 'auto';\n\n  // \uC601\uC5B4 \uCCB4\uD06C\n  if (ENGLISH_LANGUAGE_CODES.includes(lang as any)) {\n    return {\n      model: WHISPER_MODELS.ENGLISH_ONLY,\n      isEnglishOnly: true,\n      languageName: 'English'\n    };\n  }\n\n  // \uB2E4\uAD6D\uC5B4 \uBAA8\uB378 \uC0AC\uC6A9\n  const languageName = MAJOR_SUPPORTED_LANGUAGES[lang as keyof typeof MAJOR_SUPPORTED_LANGUAGES];\n\n  return {\n    model: WHISPER_MODELS.MULTILINGUAL,\n    isEnglishOnly: false,\n    languageName: languageName || `Language: ${lang}`\n  };\n}\n\n/**\n * \uC624\uB514\uC624 \uD30C\uC77C \uD06C\uAE30 \uAC80\uC99D\n */\nexport function validateAudioSize(sizeInBytes: number): {\n  isValid: boolean;\n  isOptimal: boolean;\n  message?: string;\n} {\n  if (sizeInBytes > WHISPER_FILE_LIMITS.MAX_SIZE) {\n    return {\n      isValid: false,\n      isOptimal: false,\n      message: `File too large: ${(sizeInBytes / 1024 / 1024).toFixed(2)}MB (max: 25MB)`\n    };\n  }\n\n  if (sizeInBytes > WHISPER_FILE_LIMITS.RECOMMENDED_SIZE) {\n    return {\n      isValid: true,\n      isOptimal: false,\n      message: `File is large: ${(sizeInBytes / 1024 / 1024).toFixed(2)}MB (recommended: <4MB)`\n    };\n  }\n\n  return {\n    isValid: true,\n    isOptimal: true\n  };\n}", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport { auth } from '../middleware/auth';\nimport { getUserProfile } from '../services/user';\nimport {\n  generateLoginUrl,\n  handleOAuthCallback,\n  refreshTokens,\n  logoutUser\n} from '../services/auth';\nimport { endpointRateLimit } from '../middleware/rateLimit';\n\nconst authRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\n// Auth \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uC5D0 Rate Limiting \uC801\uC6A9\nauthRoutes.use('*', endpointRateLimit('auth'));\n\nconst wrapAuthError = (error: unknown): AppError => {\n  if (error instanceof AppError) {\n    return error;\n  }\n  const message = error instanceof Error ? error.message : 'Authentication failure';\n  return new AppError(message, 500, 'AUTH_OPERATION_FAILED');\n};\n\n// OAuth \uB85C\uADF8\uC778 URL \uC0DD\uC131 - /auth/login/:provider\uC640 /login/:provider \uBAA8\uB450 \uC9C0\uC6D0\nauthRoutes.get('/login/:provider', async (c) => {\n  const provider = c.req.param('provider');\n  const target = c.req.query('target') || c.req.query('redirect_uri') || undefined;\n\n  try {\n    const result = await generateLoginUrl(c.env, provider, target);\n    // \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C \uC9C1\uC811 \uC811\uADFC\uD55C \uACBD\uC6B0 OAuth URL\uB85C \uB9AC\uB2E4\uC774\uB809\uD2B8\n    const acceptHeader = c.req.header('Accept') || '';\n    if (!acceptHeader.includes('application/json') && result.url) {\n      return c.redirect(result.url);\n    }\n    return successResponse(c, result);\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\n// \uC9C1\uC811 OAuth \uACBD\uB85C \uC9C0\uC6D0 (/naver, /google \uB4F1) - \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C \uC9C1\uC811 \uC811\uADFC\uC2DC \uB9AC\uB2E4\uC774\uB809\uD2B8\nauthRoutes.get('/naver', async (c) => {\n  const target = c.req.query('target') || undefined;\n  try {\n    const result = await generateLoginUrl(c.env, 'naver', target);\n    // \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C \uC9C1\uC811 \uC811\uADFC\uD55C \uACBD\uC6B0 OAuth URL\uB85C \uB9AC\uB2E4\uC774\uB809\uD2B8\n    if (result.url) {\n      return c.redirect(result.url);\n    }\n    return successResponse(c, result);\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\nauthRoutes.get('/google', async (c) => {\n  const target = c.req.query('target') || undefined;\n  try {\n    const result = await generateLoginUrl(c.env, 'google', target);\n    // \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C \uC9C1\uC811 \uC811\uADFC\uD55C \uACBD\uC6B0 OAuth URL\uB85C \uB9AC\uB2E4\uC774\uB809\uD2B8\n    if (result.url) {\n      return c.redirect(result.url);\n    }\n    return successResponse(c, result);\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\n// OAuth \uCF5C\uBC31 \uCC98\uB9AC - /auth/callback/:provider\nauthRoutes.get('/callback/:provider', async (c) => {\n  const provider = c.req.param('provider');\n  const code = c.req.query('code');\n  const state = c.req.query('state') || undefined;\n\n  if (!code) {\n    throw new AppError('Missing OAuth code', 400, 'INVALID_OAUTH_CALLBACK');\n  }\n\n  try {\n    const result = await handleOAuthCallback(\n      c.env,\n      provider,\n      { code, state },\n      {\n        userAgent: c.req.header('User-Agent') || undefined,\n        ipAddress:\n          c.req.header('CF-Connecting-IP') ||\n          c.req.header('X-Forwarded-For') ||\n          c.req.header('X-Real-IP') ||\n          undefined\n      }\n    );\n    const acceptsJson = (c.req.header('Accept') || '').includes('application/json');\n    if (!acceptsJson) {\n      const redirectTarget = result.callbackUrl || result.redirectUri;\n      if (!redirectTarget) {\n        return successResponse(c, result);\n      }\n      const redirectUrl = new URL(redirectTarget);\n      redirectUrl.searchParams.set('accessToken', result.accessToken);\n      redirectUrl.searchParams.set('refreshToken', result.refreshToken);\n      redirectUrl.searchParams.set('provider', provider);\n      if (state) {\n        redirectUrl.searchParams.set('state', state);\n      }\n      if (result.redirectUri && result.redirectUri !== redirectTarget) {\n        redirectUrl.searchParams.set('redirect', result.redirectUri);\n      }\n      return c.redirect(redirectUrl.toString());\n    }\n    return successResponse(c, result);\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\nauthRoutes.post('/refresh', async (c) => {\n  const authorization = c.req.header('Authorization');\n  if (!authorization) {\n    throw new AppError('Authorization header required', 400, 'MISSING_AUTH_HEADER');\n  }\n\n  const match = authorization.match(/^Bearer\\s+(.+)$/i);\n  if (!match) {\n    throw new AppError('Invalid Authorization format', 400, 'INVALID_AUTH_HEADER');\n  }\n\n  const refreshToken = match[1];\n\n  try {\n    const result = await refreshTokens(\n      c.env,\n      refreshToken,\n      {\n        userAgent: c.req.header('User-Agent') || undefined,\n        ipAddress:\n          c.req.header('CF-Connecting-IP') ||\n          c.req.header('X-Forwarded-For') ||\n          c.req.header('X-Real-IP') ||\n          undefined\n      }\n    );\n    return successResponse(c, result);\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\nauthRoutes.post('/logout', async (c) => {\n  const authorization = c.req.header('Authorization');\n  if (!authorization) {\n    throw new AppError('Authorization header required', 400, 'MISSING_AUTH_HEADER');\n  }\n\n  const match = authorization.match(/^Bearer\\s+(.+)$/i);\n  if (!match) {\n    throw new AppError('Invalid Authorization format', 400, 'INVALID_AUTH_HEADER');\n  }\n\n  const accessToken = match[1];\n  const refreshToken = c.req.header('X-Refresh-Token') || undefined;\n\n  try {\n    await logoutUser(c.env, accessToken, refreshToken);\n    return successResponse(c, { success: true });\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\nauthRoutes.get('/me', auth(), async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n\n    return successResponse(c, {\n      id: profile.id,\n      email: profile.email,\n      name: profile.name ?? profile.englishName,\n      englishName: profile.englishName,\n      onboardingCompleted: profile.onboardingCompleted,\n    });\n  } catch (error) {\n    throw wrapAuthError(error);\n  }\n});\n\nauthRoutes.get('/verify', auth(), async (c) => {\n  const user = c.get('user');\n  return successResponse(c, {\n    valid: true,\n    user: user ?? null\n  });\n});\n\nexport default authRoutes;\n", "import type { Env } from '../index';\nimport type { UserProfile, UserSettings } from '../types';\nimport { query, queryFirst, execute, transaction } from '../utils/db';\nimport { saveToR2, deleteFromR2 } from './storage';\nimport { sanitizeFileName } from '../utils/security';\nimport { AppError } from '../utils/errors';\n\ntype LocationSummary = { id: number; country: string; city?: string; timeZone?: string };\n\ninterface UserProfileUpdatePayload {\n  name?: string;\n  englishName?: string;\n  selfBio?: string;\n  gender?: string;\n  birthday?: string;\n  birthyear?: string;\n  locationId?: number | null;\n  nativeLanguageId?: number | null;\n  communicationMethod?: string;\n  dailyMinute?: string;\n  partnerGender?: string;\n  learningExpectation?: string;\n  onboardingCompleted?: boolean;\n  profileImage?: string | null;\n}\n\ninterface DbUserFullRow {\n  user_id: string;\n  email: string | null;\n  name: string | null;\n  english_name: string | null;\n  birthday: string | null;\n  birthyear: string | null;\n  gender: string | null;\n  profile_image: string | null;\n  self_bio: string | null;\n  location_id: number | null;\n  native_lang_id: number | null;\n  communication_method: string | null;\n  daily_minute: string | null;\n  partner_gender: string | null;\n  learning_expectation: string | null;\n  is_onboarding_completed: number;\n  created_at: string;\n  updated_at: string;\n  location_country: string | null;\n  location_city: string | null;\n  location_time_zone: string | null;\n  native_language_name: string | null;\n  native_language_code: string | null;\n}\n\nfunction mapRowToProfile(row: DbUserFullRow): UserProfile {\n  return {\n    id: row.user_id,\n    email: row.email ?? undefined,\n    name: row.name ?? undefined,\n    englishName: row.english_name ?? undefined,\n    birthday: row.birthday ?? undefined,\n    birthyear: row.birthyear ?? undefined,\n    gender: row.gender ?? undefined,\n    profileImage: row.profile_image ?? undefined,\n    selfBio: row.self_bio ?? undefined,\n    location: row.location_id\n      ? {\n          id: row.location_id,\n          country: row.location_country ?? '',\n          city: row.location_city ?? undefined,\n          timeZone: row.location_time_zone ?? undefined\n        }\n      : undefined,\n    nativeLanguage: row.native_lang_id\n      ? {\n          id: row.native_lang_id,\n          name: row.native_language_name ?? '',\n          code: row.native_language_code ?? ''\n        }\n      : undefined,\n    onboardingCompleted: row.is_onboarding_completed === 1,\n    communicationMethod: row.communication_method ?? undefined,\n    dailyMinute: row.daily_minute ?? undefined,\n    partnerGender: row.partner_gender ?? undefined,\n    learningExpectation: row.learning_expectation ?? undefined,\n    createdAt: row.created_at,\n    updatedAt: row.updated_at\n  };\n}\n\nexport async function getUserProfile(env: Env, userId: string): Promise<UserProfile | null> {\n  const row = await queryFirst<DbUserFullRow>(\n    env.DB,\n    `SELECT \n        u.user_id,\n        u.email,\n        u.name,\n        u.english_name,\n        u.birthday,\n        u.birthyear,\n        u.gender,\n        u.profile_image,\n        u.self_bio,\n        u.location_id,\n        u.native_lang_id,\n        u.communication_method,\n        u.daily_minute,\n        u.partner_gender,\n        u.learning_expectation,\n        u.is_onboarding_completed,\n        u.created_at,\n        u.updated_at,\n        l.country AS location_country,\n        l.city AS location_city,\n        l.time_zone AS location_time_zone,\n        lang.language_name AS native_language_name,\n        lang.language_code AS native_language_code\n      FROM users u\n      LEFT JOIN locations l ON u.location_id = l.location_id\n      LEFT JOIN languages lang ON u.native_lang_id = lang.language_id\n      WHERE u.user_id = ?\n      LIMIT 1`,\n    [userId]\n  );\n\n  if (!row) {\n    return null;\n  }\n\n  return mapRowToProfile(row);\n}\n\nexport async function updateUserProfile(\n  env: Env,\n  userId: string,\n  payload: UserProfileUpdatePayload\n): Promise<UserProfile> {\n  const setters: string[] = [];\n  const params: (string | number | null)[] = [];\n\n  const map: Record<keyof UserProfileUpdatePayload, string> = {\n    name: 'name',\n    englishName: 'english_name',\n    selfBio: 'self_bio',\n    gender: 'gender',\n    birthday: 'birthday',\n    birthyear: 'birthyear',\n    locationId: 'location_id',\n    nativeLanguageId: 'native_lang_id',\n    communicationMethod: 'communication_method',\n    dailyMinute: 'daily_minute',\n    partnerGender: 'partner_gender',\n    learningExpectation: 'learning_expectation',\n    onboardingCompleted: 'is_onboarding_completed',\n    profileImage: 'profile_image'\n  };\n\n  for (const [key, value] of Object.entries(payload) as [keyof UserProfileUpdatePayload, any][]) {\n    if (value === undefined) continue;\n\n    if (key === 'onboardingCompleted') {\n      setters.push(`${map[key]} = ?`);\n      params.push(value ? 1 : 0);\n    } else {\n      setters.push(`${map[key]} = ?`);\n      params.push(value === null ? null : value);\n    }\n  }\n\n  if (setters.length > 0) {\n    setters.push('updated_at = ?');\n    params.push(new Date().toISOString());\n    params.push(userId);\n    await execute(env.DB, `UPDATE users SET ${setters.join(', ')} WHERE user_id = ?`, params);\n  }\n\n  const profile = await getUserProfile(env, userId);\n  if (!profile) {\n    throw new Error('User not found after update');\n  }\n  return profile;\n}\n\nexport async function getUserSettings(env: Env, userId: string): Promise<UserSettings> {\n  const rows = await query<{ setting_key: string; setting_value: string | null }>(\n    env.DB,\n    'SELECT setting_key, setting_value FROM user_settings WHERE user_id = ? ORDER BY setting_key',\n    [userId]\n  );\n\n  const result: UserSettings = {};\n  const notificationPreferences: Record<string, boolean> = {};\n\n  for (const row of rows) {\n    const [section, key] = row.setting_key.split('.');\n    if (!key) continue;\n\n    const rawValue = row.setting_value;\n    const normalized = rawValue === 'true' ? true : rawValue === 'false' ? false : rawValue ?? undefined;\n\n    switch (section) {\n      case 'notifications':\n        if (typeof normalized === 'boolean') {\n          notificationPreferences[key] = normalized;\n        }\n        break;\n      case 'preferences':\n        if (key === 'language' && typeof normalized === 'string') {\n          result.language = normalized;\n        } else if (key === 'timezone' && typeof normalized === 'string') {\n          result.timeZone = normalized;\n        } else if (key === 'marketingOptIn' && typeof normalized === 'boolean') {\n          result.marketingOptIn = normalized;\n        }\n        break;\n      case 'privacy':\n        // \uBCF4\uB958: privacy \uC124\uC815\uC740 \uD0C0\uC785 \uC815\uC758\uC5D0 \uD3EC\uD568\uB418\uC9C0 \uC54A\uC74C. \uD544\uC694 \uC2DC \uD655\uC7A5\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (Object.keys(notificationPreferences).length > 0) {\n    result.notificationPreferences = notificationPreferences;\n  }\n\n  return result;\n}\n\nexport async function updateUserSettings(\n  env: Env,\n  userId: string,\n  settings: Partial<UserSettings>\n): Promise<UserSettings> {\n  const now = new Date().toISOString();\n  const entries: Array<[string, string]> = [];\n\n  if (settings.language) {\n    entries.push(['preferences.language', settings.language]);\n  }\n  if (settings.timeZone) {\n    entries.push(['preferences.timezone', settings.timeZone]);\n  }\n  if (settings.marketingOptIn !== undefined) {\n    entries.push(['preferences.marketingOptIn', String(settings.marketingOptIn)]);\n  }\n  if (settings.notificationPreferences) {\n    for (const [key, value] of Object.entries(settings.notificationPreferences)) {\n      entries.push([`notifications.${key}`, String(value)]);\n    }\n  }\n\n  await transaction(\n    env.DB,\n    entries.map(([key, value]) => ({\n      sql: 'INSERT OR REPLACE INTO user_settings (user_id, setting_key, setting_value, updated_at) VALUES (?, ?, ?, ?)',\n      params: [userId, key, value, now]\n    }))\n  );\n\n  return getUserSettings(env, userId);\n}\n\nexport async function saveProfileImage(\n  env: Env,\n  userId: string,\n  fileName: string,\n  contentType: string,\n  body: ArrayBuffer\n): Promise<string> {\n  const safeName = sanitizeFileName(fileName) || 'profile-image';\n  const key = `users/${userId}/profile/${Date.now()}-${safeName}`;\n\n  await saveToR2(env.STORAGE, key, body, contentType, {\n    userId,\n    type: 'profile-image'\n  });\n\n  await updateUserProfile(env, userId, { profileImage: key });\n\n  return `/api/v1/upload/file/${key}`;\n}\n\nexport async function deleteProfileImage(env: Env, userId: string): Promise<void> {\n  const row = await queryFirst<{ profile_image: string | null }>(\n    env.DB,\n    'SELECT profile_image FROM users WHERE user_id = ? LIMIT 1',\n    [userId]\n  );\n\n  if (!row) {\n    throw new AppError('\uC0AC\uC6A9\uC790\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'USER_NOT_FOUND');\n  }\n\n  const currentKey = row.profile_image ?? undefined;\n\n  if (currentKey) {\n    try {\n      await deleteFromR2(env.STORAGE, currentKey);\n    } catch (error) {\n      console.warn('[user] Failed to delete profile image from R2', error);\n    }\n  }\n\n  await updateUserProfile(env, userId, { profileImage: null });\n}\n\nexport async function listLocations(env: Env): Promise<LocationSummary[]> {\n  const rows = await query<{\n    location_id: number;\n    country: string;\n    city: string | null;\n    time_zone: string | null;\n  }>(\n    env.DB,\n    'SELECT location_id, country, city, time_zone FROM locations ORDER BY country, city'\n  );\n\n  return rows.map((row) => ({\n    id: row.location_id,\n    country: row.country,\n    city: row.city ?? undefined,\n    timeZone: row.time_zone ?? undefined\n  }));\n}\n", "/**\n * Rate Limiting Middleware for Cloudflare Workers\n * KV \uAE30\uBC18 \uC694\uCCAD \uC81C\uD55C \uBBF8\uB4E4\uC6E8\uC5B4\n */\n\nimport { Context } from 'hono';\nimport { AppBindings } from '../index';\n\ninterface RateLimitOptions {\n  windowMs: number;      // \uC2DC\uAC04 \uC708\uB3C4\uC6B0 (\uBC00\uB9AC\uCD08)\n  maxRequests: number;   // \uCD5C\uB300 \uC694\uCCAD \uC218\n  keyPrefix?: string;    // KV \uD0A4 \uC811\uB450\uC0AC\n  skipSuccessfulRequests?: boolean;  // \uC131\uACF5 \uC694\uCCAD\uB9CC \uCE74\uC6B4\uD2B8\n  skipFailedRequests?: boolean;      // \uC2E4\uD328 \uC694\uCCAD \uC81C\uC678\n}\n\ninterface RateLimitInfo {\n  count: number;\n  resetTime: number;\n}\n\n/**\n * Rate Limiter \uD074\uB798\uC2A4\n */\nexport class RateLimiter {\n  private options: Required<RateLimitOptions>;\n\n  constructor(options: RateLimitOptions) {\n    this.options = {\n      keyPrefix: 'ratelimit',\n      skipSuccessfulRequests: false,\n      skipFailedRequests: false,\n      ...options\n    };\n  }\n\n  /**\n   * KV \uD0A4 \uC0DD\uC131\n   */\n  private getKey(identifier: string, endpoint: string): string {\n    const { keyPrefix } = this.options;\n    return `${keyPrefix}:${identifier}:${endpoint}`;\n  }\n\n  /**\n   * \uD604\uC7AC \uC708\uB3C4\uC6B0 \uC2DC\uC791 \uC2DC\uAC04 \uACC4\uC0B0\n   */\n  private getWindowStart(): number {\n    const now = Date.now();\n    return now - (now % this.options.windowMs);\n  }\n\n  /**\n   * Rate limit \uCCB4\uD06C \uBC0F \uC5C5\uB370\uC774\uD2B8\n   */\n  async check(\n    kv: KVNamespace,\n    identifier: string,\n    endpoint: string\n  ): Promise<{ allowed: boolean; info: RateLimitInfo }> {\n    const key = this.getKey(identifier, endpoint);\n    const windowStart = this.getWindowStart();\n    const resetTime = windowStart + this.options.windowMs;\n\n    // KV\uC5D0\uC11C \uD604\uC7AC \uCE74\uC6B4\uD2B8 \uC870\uD68C\n    const stored = await kv.get(key, 'json') as RateLimitInfo | null;\n\n    let count = 0;\n\n    if (stored && stored.resetTime === resetTime) {\n      // \uAC19\uC740 \uC708\uB3C4\uC6B0 \uB0B4\uC758 \uC694\uCCAD\n      count = stored.count;\n    }\n\n    // \uC694\uCCAD \uC218 \uC99D\uAC00\n    count++;\n\n    // \uC81C\uD55C \uCCB4\uD06C\n    const allowed = count <= this.options.maxRequests;\n\n    // KV \uC5C5\uB370\uC774\uD2B8\n    const newInfo: RateLimitInfo = { count, resetTime };\n    const ttl = Math.ceil(this.options.windowMs / 1000);\n    await kv.put(key, JSON.stringify(newInfo), { expirationTtl: ttl });\n\n    return { allowed, info: newInfo };\n  }\n\n  /**\n   * Rate limit \uC815\uBCF4 \uC870\uD68C (\uCE74\uC6B4\uD2B8 \uC99D\uAC00 \uC5C6\uC774)\n   */\n  async getInfo(\n    kv: KVNamespace,\n    identifier: string,\n    endpoint: string\n  ): Promise<RateLimitInfo | null> {\n    const key = this.getKey(identifier, endpoint);\n    return await kv.get(key, 'json') as RateLimitInfo | null;\n  }\n\n  /**\n   * Rate limit \uB9AC\uC14B\n   */\n  async reset(\n    kv: KVNamespace,\n    identifier: string,\n    endpoint: string\n  ): Promise<void> {\n    const key = this.getKey(identifier, endpoint);\n    await kv.delete(key);\n  }\n}\n\n/**\n * Rate Limit \uBBF8\uB4E4\uC6E8\uC5B4 \uC0DD\uC131\n */\nexport function rateLimitMiddleware(options: RateLimitOptions) {\n  const limiter = new RateLimiter(options);\n\n  return async (c: Context<{ Bindings: AppBindings }>, next: () => Promise<void>) => {\n    const kv = c.env.CACHE;\n\n    if (!kv) {\n      console.warn('KV namespace not available, skipping rate limit');\n      return next();\n    }\n\n    // \uC2DD\uBCC4\uC790 \uACB0\uC815 (\uC0AC\uC6A9\uC790 ID \uB610\uB294 IP)\n    const userId = c.get('userId');\n    const ip = c.req.header('CF-Connecting-IP') ||\n               c.req.header('X-Forwarded-For') ||\n               c.req.header('X-Real-IP') ||\n               'unknown';\n\n    const identifier = userId || ip;\n    const endpoint = c.req.path;\n\n    // Rate limit \uCCB4\uD06C\n    const { allowed, info } = await limiter.check(kv, identifier, endpoint);\n\n    // \uD5E4\uB354 \uCD94\uAC00\n    c.header('X-RateLimit-Limit', options.maxRequests.toString());\n    c.header('X-RateLimit-Remaining', Math.max(0, options.maxRequests - info.count).toString());\n    c.header('X-RateLimit-Reset', info.resetTime.toString());\n\n    if (!allowed) {\n      const retryAfter = Math.ceil((info.resetTime - Date.now()) / 1000);\n      c.header('Retry-After', retryAfter.toString());\n\n      return c.json({\n        success: false,\n        error: {\n          message: '\uC694\uCCAD\uC774 \uB108\uBB34 \uB9CE\uC2B5\uB2C8\uB2E4. \uC7A0\uC2DC \uD6C4 \uB2E4\uC2DC \uC2DC\uB3C4\uD574\uC8FC\uC138\uC694.',\n          code: 'TOO_MANY_REQUESTS',\n          retryAfter\n        }\n      }, 429);\n    }\n\n    await next();\n  };\n}\n\n/**\n * \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uBCC4 Rate Limit \uC124\uC815\n */\nexport const RateLimitPresets = {\n  // \uC77C\uBC18 API (\uBD84\uB2F9 60\uD68C)\n  standard: {\n    windowMs: 60 * 1000,\n    maxRequests: 60\n  },\n\n  // \uC778\uC99D API (\uBD84\uB2F9 5\uD68C)\n  auth: {\n    windowMs: 60 * 1000,\n    maxRequests: 5\n  },\n\n  // \uC5C5\uB85C\uB4DC API (\uBD84\uB2F9 10\uD68C)\n  upload: {\n    windowMs: 60 * 1000,\n    maxRequests: 10\n  },\n\n  // AI API (\uBD84\uB2F9 20\uD68C)\n  ai: {\n    windowMs: 60 * 1000,\n    maxRequests: 20\n  },\n\n  // WebRTC API (\uBD84\uB2F9 30\uD68C)\n  webrtc: {\n    windowMs: 60 * 1000,\n    maxRequests: 30\n  },\n\n  // \uCC44\uD305 API (\uCD08\uB2F9 10\uD68C)\n  chat: {\n    windowMs: 1000,\n    maxRequests: 10\n  },\n\n  // \uAC80\uC0C9 API (\uBD84\uB2F9 30\uD68C)\n  search: {\n    windowMs: 60 * 1000,\n    maxRequests: 30\n  }\n};\n\n/**\n * IP \uAE30\uBC18 Rate Limit (\uAE00\uB85C\uBC8C)\n */\nexport function globalRateLimit() {\n  return rateLimitMiddleware({\n    windowMs: 60 * 1000,      // 1\uBD84\n    maxRequests: 100,          // 100\uD68C\n    keyPrefix: 'global'\n  });\n}\n\n/**\n * \uC0AC\uC6A9\uC790\uBCC4 Rate Limit\n */\nexport function userRateLimit(maxRequests: number = 60) {\n  return rateLimitMiddleware({\n    windowMs: 60 * 1000,\n    maxRequests,\n    keyPrefix: 'user'\n  });\n}\n\n/**\n * \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uBCC4 Rate Limit\n */\nexport function endpointRateLimit(preset: keyof typeof RateLimitPresets) {\n  const options = RateLimitPresets[preset];\n  return rateLimitMiddleware({\n    ...options,\n    keyPrefix: `endpoint:${preset}`\n  });\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport {\n  getUserProfile,\n  updateUserProfile,\n  getUserSettings,\n  updateUserSettings,\n  saveProfileImage,\n  deleteProfileImage,\n  listLocations\n} from '../services/user';\nimport {\n  loadOnboardingSummary,\n  listLanguageOptions,\n  listMotivationOptions,\n  listTopicOptions,\n  upsertOnboardingLanguages,\n  upsertOnboardingMotivations,\n  upsertOnboardingPartner,\n  upsertOnboardingSchedules,\n  completeOnboarding\n} from '../services/onboarding';\n\ntype ProfileUpdateBody = Record<string, unknown>;\n\nfunction toUpdatePayload(body: ProfileUpdateBody) {\n  const payload: any = {};\n\n  if (typeof body.name === 'string') payload.name = body.name.trim();\n  if (typeof body.englishName === 'string') payload.englishName = body.englishName.trim();\n  if (typeof body.selfBio === 'string') payload.selfBio = body.selfBio.trim();\n  if (typeof body.gender === 'string') payload.gender = body.gender;\n  if (typeof body.birthday === 'string') payload.birthday = body.birthday;\n  if (typeof body.birthyear === 'string') payload.birthyear = body.birthyear;\n  if (typeof body.communicationMethod === 'string') payload.communicationMethod = body.communicationMethod;\n  if (typeof body.dailyMinute === 'string') payload.dailyMinute = body.dailyMinute;\n  if (typeof body.partnerGender === 'string') payload.partnerGender = body.partnerGender;\n  if (typeof body.learningExpectation === 'string') payload.learningExpectation = body.learningExpectation;\n  if (typeof body.onboardingCompleted === 'boolean') payload.onboardingCompleted = body.onboardingCompleted;\n\n  const locationId = typeof body.locationId === 'number'\n    ? body.locationId\n    : typeof body.location === 'object' && body.location !== null && typeof (body.location as any).id === 'number'\n      ? (body.location as any).id\n      : undefined;\n  if (locationId !== undefined) payload.locationId = locationId;\n\n  const nativeLanguageId = typeof body.nativeLanguageId === 'number'\n    ? body.nativeLanguageId\n    : typeof body.nativeLanguage === 'object' && body.nativeLanguage !== null && typeof (body.nativeLanguage as any).id === 'number'\n      ? (body.nativeLanguage as any).id\n      : undefined;\n  if (nativeLanguageId !== undefined) payload.nativeLanguageId = nativeLanguageId;\n\n  return payload;\n}\n\nasync function processProfileImageUpload(c: any, userId: string): Promise<string> {\n  const contentType = c.req.header('Content-Type');\n  if (!contentType?.startsWith('multipart/form-data')) {\n    throw new AppError('multipart/form-data required', 400, 'INVALID_CONTENT_TYPE');\n  }\n\n  const formData = await c.req.formData();\n  const fileEntry = formData.get('file') ?? formData.get('image');\n  if (!fileEntry || typeof fileEntry === 'string') {\n    throw new AppError('image field required', 400, 'INVALID_FORM_DATA');\n  }\n\n  const uploadFile = fileEntry as unknown as {\n    name: string;\n    type: string;\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  };\n\n  const arrayBuffer = await uploadFile.arrayBuffer();\n  return saveProfileImage(\n    c.env,\n    userId,\n    uploadFile.name,\n    uploadFile.type || 'application/octet-stream',\n    arrayBuffer\n  );\n}\n\nconst usersRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\nconst requireAuth = authMiddleware();\n\nconst wrapError = (error: unknown, feature: string): AppError => {\n  if (error instanceof AppError) {\n    return error;\n  }\n  const message = error instanceof Error ? error.message : `${feature} failed`;\n  return new AppError(message, 500, 'USER_OPERATION_FAILED');\n};\n\nasync function buildLanguageInfo(env: Env, userId: string) {\n  const [profile, summary, languageOptions] = await Promise.all([\n    getUserProfile(env, userId),\n    loadOnboardingSummary(env, userId),\n    listLanguageOptions(env)\n  ]);\n\n  const languageMap = new Map<number, { language_id: number; language_name: string; language_code: string }>(\n    languageOptions.map((item) => [item.language_id, item])\n  );\n\n  const nativeLanguageId = profile?.nativeLanguage?.id\n    ?? (summary.languages.length > 0 ? summary.languages[0].languageId : undefined);\n\n  const nativeLanguage = nativeLanguageId\n    ? {\n        languageId: nativeLanguageId,\n        languageName: languageMap.get(nativeLanguageId)?.language_name ?? null,\n        languageCode: languageMap.get(nativeLanguageId)?.language_code ?? null\n      }\n    : null;\n\n  const targetLanguages = summary.languages\n    .filter((item) => item.languageId !== nativeLanguageId)\n    .map((item) => ({\n      languageId: item.languageId,\n      languageName: languageMap.get(item.languageId)?.language_name ?? null,\n      currentLevelId: item.currentLevelId ?? undefined,\n      targetLevelId: item.targetLevelId ?? undefined\n    }));\n\n  return {\n    nativeLanguage,\n    targetLanguages\n  };\n}\n\nasync function buildMotivationInfo(env: Env, userId: string) {\n  const [summary, motivationOptions, topicOptions] = await Promise.all([\n    loadOnboardingSummary(env, userId),\n    listMotivationOptions(env),\n    listTopicOptions(env)\n  ]);\n\n  const motivationMap = new Map(motivationOptions.map((item) => [item.motivation_id, item.motivation_name]));\n  const topicMap = new Map(topicOptions.map((item) => [item.topic_id, item.topic_name]));\n\n  return {\n    motivations: summary.motivations.map((item) => ({\n      motivationId: item.motivationId,\n      priority: item.priority,\n      name: motivationMap.get(item.motivationId) ?? null\n    })),\n    topics: summary.topics.map((id: number) => ({\n      topicId: id,\n      name: topicMap.get(id) ?? null\n    }))\n  };\n}\n\nasync function buildPartnerInfo(env: Env, userId: string) {\n  const summary = await loadOnboardingSummary(env, userId);\n  return {\n    partners: summary.partnerPreferences,\n    groupSizes: summary.groupSizes\n  };\n}\n\nasync function buildScheduleInfo(env: Env, userId: string) {\n  const summary = await loadOnboardingSummary(env, userId);\n  return {\n    schedules: summary.schedules\n  };\n}\n\nusersRoutes.use('*', requireAuth);\n\nusersRoutes.get('/me/profile', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, profile);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/users/me/profile');\n  }\n});\n\nusersRoutes.get('/profile', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, profile);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/profile');\n  }\n});\n\nusersRoutes.put('/me/profile', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const body = await c.req.json();\n  const payload = toUpdatePayload(body);\n\n  try {\n    const profile = await updateUserProfile(c.env, userId, payload);\n    return successResponse(c, profile);\n  } catch (error) {\n    throw wrapError(error, 'PUT /api/v1/users/me/profile');\n  }\n});\n\nusersRoutes.patch('/profile', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json();\n  const payload = toUpdatePayload(body);\n  try {\n    const profile = await updateUserProfile(c.env, userId, payload);\n    return successResponse(c, profile);\n  } catch (error) {\n    throw wrapError(error, 'PATCH /api/v1/user/profile');\n  }\n});\n\nusersRoutes.get('/complete-profile', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    return successResponse(c, profile);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/complete-profile');\n  }\n});\n\nusersRoutes.put('/complete-profile', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json();\n  const payload = toUpdatePayload(body);\n  try {\n    const profile = await updateUserProfile(c.env, userId, payload);\n    return successResponse(c, profile);\n  } catch (error) {\n    throw wrapError(error, 'PUT /api/v1/user/complete-profile');\n  }\n});\n\nusersRoutes.get('/me/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const settings = await getUserSettings(c.env, userId);\n    return successResponse(c, settings);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/users/me/settings');\n  }\n});\n\nusersRoutes.get('/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const settings = await getUserSettings(c.env, userId);\n    return successResponse(c, settings);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/settings');\n  }\n});\n\nusersRoutes.put('/me/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const body = await c.req.json();\n\n  try {\n    const settings = await updateUserSettings(c.env, userId, body);\n    return successResponse(c, settings);\n  } catch (error) {\n    throw wrapError(error, 'PUT /api/v1/users/me/settings');\n  }\n});\n\nusersRoutes.put('/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const body = await c.req.json();\n\n  try {\n    const settings = await updateUserSettings(c.env, userId, body);\n    return successResponse(c, settings);\n  } catch (error) {\n    throw wrapError(error, 'PUT /api/v1/user/settings');\n  }\n});\n\nusersRoutes.post('/me/profile-image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const location = await processProfileImageUpload(c, userId);\n    return successResponse(c, { url: location });\n  } catch (error) {\n    throw wrapError(error, 'POST /api/v1/users/me/profile-image');\n  }\n});\n\nusersRoutes.get('/language-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const info = await buildLanguageInfo(c.env, userId);\n    return successResponse(c, info);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/language-info');\n  }\n});\n\nusersRoutes.patch('/language-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json();\n  const languages = Array.isArray((body as any)?.languages) ? (body as any).languages : [];\n  const languagePayload: Array<{ languageId: number; currentLevelId?: number; targetLevelId?: number }> = [];\n  for (const raw of languages as any[]) {\n    const languageId = Number(raw.languageId ?? raw.language_id);\n    if (!Number.isFinite(languageId)) {\n      continue;\n    }\n    languagePayload.push({\n      languageId,\n      currentLevelId: raw.currentLevelId ?? raw.current_level_id ?? undefined,\n      targetLevelId: raw.targetLevelId ?? raw.target_level_id ?? undefined\n    });\n  }\n  await upsertOnboardingLanguages(c.env, userId, languagePayload);\n  if (Number.isFinite(body?.nativeLanguageId)) {\n    await updateUserProfile(c.env, userId, { nativeLanguageId: Number(body.nativeLanguageId) });\n  }\n  const info = await buildLanguageInfo(c.env, userId);\n  return successResponse(c, info);\n});\n\nusersRoutes.get('/motivation-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const info = await buildMotivationInfo(c.env, userId);\n    return successResponse(c, info);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/motivation-info');\n  }\n});\n\nusersRoutes.patch('/motivation-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json();\n  const motivationIds = Array.isArray((body as any)?.motivationIds)\n    ? (body as any).motivationIds\n    : [];\n  const motivationPayload: Array<{ motivationId: number; priority?: number }> = [];\n  (motivationIds as any[]).forEach((raw, index) => {\n    const motivationId = Number(raw);\n    if (!Number.isFinite(motivationId)) {\n      return;\n    }\n    motivationPayload.push({\n      motivationId,\n      priority: index + 1\n    });\n  });\n  await upsertOnboardingMotivations(c.env, userId, motivationPayload);\n  const info = await buildMotivationInfo(c.env, userId);\n  return successResponse(c, info);\n});\n\nusersRoutes.get('/partner-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const info = await buildPartnerInfo(c.env, userId);\n    return successResponse(c, info);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/partner-info');\n  }\n});\n\nusersRoutes.patch('/partner-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json();\n  const preferences = Array.isArray((body as any)?.partnerPreferences)\n    ? (body as any).partnerPreferences\n    : [];\n  const partnerPayload: Array<{ partnerPersonalityId: number; partnerGender?: string }> = [];\n  (preferences as any[]).forEach((raw) => {\n    const partnerPersonalityId = Number(raw.partnerPersonalityId ?? raw.partner_personality_id ?? raw);\n    if (!Number.isFinite(partnerPersonalityId)) {\n      return;\n    }\n    partnerPayload.push({\n      partnerPersonalityId,\n      partnerGender: raw.partnerGender ?? raw.partner_gender ?? undefined\n    });\n  });\n  await upsertOnboardingPartner(c.env, userId, partnerPayload);\n  const info = await buildPartnerInfo(c.env, userId);\n  return successResponse(c, info);\n});\n\nusersRoutes.get('/schedule-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const info = await buildScheduleInfo(c.env, userId);\n    return successResponse(c, info);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/schedule-info');\n  }\n});\n\nusersRoutes.patch('/schedule-info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json();\n  const schedules = Array.isArray((body as any)?.schedules)\n    ? (body as any).schedules\n    : [];\n  const normalized: Array<{ scheduleId: number; dayOfWeek: string; classTime?: string }> = [];\n  (schedules as any[]).forEach((raw) => {\n    const scheduleId = Number(raw.scheduleId ?? raw.schedule_id);\n    if (!Number.isFinite(scheduleId)) {\n      return;\n    }\n    normalized.push({\n      scheduleId,\n      dayOfWeek: raw.dayOfWeek ?? raw.day_of_week ?? 'UNKNOWN',\n      classTime: raw.classTime ?? raw.class_time ?? undefined\n    });\n  });\n  await upsertOnboardingSchedules(c.env, userId, normalized);\n  const info = await buildScheduleInfo(c.env, userId);\n  return successResponse(c, info);\n});\n\nusersRoutes.get('/me/profile-image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, { profileImage: profile.profileImage });\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/users/me/profile-image');\n  }\n});\n\nusersRoutes.post('/profile-image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const location = await processProfileImageUpload(c, userId);\n    return successResponse(c, { url: location });\n  } catch (error) {\n    throw wrapError(error, 'POST /api/v1/user/profile-image');\n  }\n});\n\nusersRoutes.post('/profile/image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const location = await processProfileImageUpload(c, userId);\n    return successResponse(c, { url: location });\n  } catch (error) {\n    throw wrapError(error, 'POST /api/v1/users/profile/image');\n  }\n});\n\nusersRoutes.delete('/profile-image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    await deleteProfileImage(c.env, userId);\n    return successResponse(c, { success: true });\n  } catch (error) {\n    throw wrapError(error, 'DELETE /api/v1/user/profile-image');\n  }\n});\n\nusersRoutes.delete('/profile/image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    await deleteProfileImage(c.env, userId);\n    return successResponse(c, { success: true });\n  } catch (error) {\n    throw wrapError(error, 'DELETE /api/v1/users/profile/image');\n  }\n});\n\nusersRoutes.get('/profile-image', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, { profileImage: profile.profileImage });\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/profile-image');\n  }\n});\n\nusersRoutes.get('/me/name', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, { name: profile.name });\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/users/me/name');\n  }\n});\n\nusersRoutes.get('/info', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, {\n      id: profile.id,\n      email: profile.email,\n      englishName: profile.englishName,\n      name: profile.name,\n      onboardingCompleted: profile.onboardingCompleted\n    });\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/info');\n  }\n});\n\nusersRoutes.get('/name', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, { name: profile.name ?? profile.englishName });\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/user/name');\n  }\n});\n\nusersRoutes.get('/me/onboarding-status', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  try {\n    const profile = await getUserProfile(c.env, userId);\n    if (!profile) {\n      throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n    }\n    return successResponse(c, { completed: profile.onboardingCompleted });\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/users/me/onboarding-status');\n  }\n});\n\nusersRoutes.get('/onboarding-status', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const profile = await getUserProfile(c.env, userId);\n  if (!profile) {\n    throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n  }\n  return successResponse(c, { completed: profile.onboardingCompleted });\n});\n\nusersRoutes.post('/complete-onboarding', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n  const body = await c.req.json().catch(() => ({}));\n  await completeOnboarding(c.env, userId, body ?? {});\n  return successResponse(c, { completed: true });\n});\n\nusersRoutes.post('/me/english-name', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.englishName !== 'string' || !body.englishName.trim()) {\n    throw new AppError('englishName is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { englishName: body.englishName.trim() });\n  return successResponse(c, { englishName: body.englishName.trim() });\n});\n\nusersRoutes.post('/english-name', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.englishName !== 'string' || !body.englishName.trim()) {\n    throw new AppError('englishName is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { englishName: body.englishName.trim() });\n  return successResponse(c, { englishName: body.englishName.trim() });\n});\n\nusersRoutes.post('/me/birthyear', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.birthyear !== 'string' || !body.birthyear.trim()) {\n    throw new AppError('birthyear is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { birthyear: body.birthyear.trim() });\n  return successResponse(c, { birthyear: body.birthyear.trim() });\n});\n\nusersRoutes.post('/birthyear', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.birthYear !== 'string' && typeof body.birthyear !== 'string') {\n    throw new AppError('birthyear is required', 400, 'INVALID_PAYLOAD');\n  }\n  const value = (body.birthYear ?? body.birthyear).toString().trim();\n  if (!value) {\n    throw new AppError('birthyear is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { birthyear: value });\n  return successResponse(c, { birthyear: value });\n});\n\nusersRoutes.post('/me/birthday', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.birthday !== 'string' || !body.birthday.trim()) {\n    throw new AppError('birthday is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { birthday: body.birthday.trim() });\n  return successResponse(c, { birthday: body.birthday.trim() });\n});\n\nusersRoutes.post('/birthday', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const value = typeof body.birthday === 'string' ? body.birthday.trim() : '';\n  if (!value) {\n    throw new AppError('birthday is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { birthday: value });\n  return successResponse(c, { birthday: value });\n});\n\nusersRoutes.post('/me/gender', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.gender !== 'string' || !body.gender.trim()) {\n    throw new AppError('gender is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { gender: body.gender.trim() });\n  return successResponse(c, { gender: body.gender.trim() });\n});\n\nusersRoutes.post('/gender', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const gender = (body.gender ?? body.genderType)?.toString().trim();\n  if (!gender) {\n    throw new AppError('gender is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { gender });\n  return successResponse(c, { gender });\n});\n\nusersRoutes.post('/me/self-bio', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.selfBio !== 'string') {\n    throw new AppError('selfBio is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { selfBio: body.selfBio });\n  return successResponse(c, { selfBio: body.selfBio });\n});\n\nusersRoutes.post('/self-bio', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const selfBio = typeof body.selfBio === 'string' ? body.selfBio : '';\n  await updateUserProfile(c.env, userId, { selfBio });\n  return successResponse(c, { selfBio });\n});\n\nusersRoutes.post('/me/location', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const locationId = typeof body.locationId === 'number' ? body.locationId : undefined;\n  if (locationId === undefined) {\n    throw new AppError('locationId is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { locationId });\n  return successResponse(c, { locationId });\n});\n\nusersRoutes.post('/location', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const locationId = Number(body.locationId ?? body.location_id);\n  if (!Number.isFinite(locationId)) {\n    throw new AppError('locationId is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { locationId });\n  return successResponse(c, { locationId });\n});\n\nusersRoutes.get('/stats', async (c) => {\n  return successResponse(c, {\n    sessionsThisWeek: 0,\n    totalSessions: 0,\n    totalMinutes: 0\n  });\n});\n\nusersRoutes.delete('/account', async (c) => {\n  return successResponse(c, {\n    success: false,\n    message: 'Account deletion is not supported on the Workers API yet.'\n  });\n});\n\nusersRoutes.get('/gender-type', async (c) => {\n  return successResponse(c, [\n    { id: 'MALE', name: '\uB0A8\uC131' },\n    { id: 'FEMALE', name: '\uC5EC\uC131' },\n    { id: 'OTHER', name: '\uAE30\uD0C0' }\n  ]);\n});\n\nusersRoutes.get('/locations', async (c) => {\n  try {\n    const locations = await listLocations(c.env);\n    return successResponse(c, locations);\n  } catch (error) {\n    throw wrapError(error, 'GET /api/v1/users/locations');\n  }\n});\n\nexport default usersRoutes;\n", "import type { Env } from '../index';\nimport type { OnboardingSummary } from '../types';\nimport { query, transaction } from '../utils/db';\nimport { getUserProfile, updateUserProfile } from './user';\n\nexport async function listLanguageOptions(env: Env) {\n  return query<{\n    language_id: number;\n    language_name: string;\n    language_code: string;\n  }>(\n    env.DB,\n    'SELECT language_id, language_name, language_code FROM languages WHERE is_active IS NULL OR is_active = 1 ORDER BY language_name'\n  );\n}\n\nexport async function listLanguageLevelTypes(env: Env, category: string) {\n  const normalizedCategory = (category ?? '').trim().toUpperCase();\n\n  return query<{\n    lang_level_id: number;\n    lang_level_name: string;\n    description: string | null;\n    category: string | null;\n    level_order: number | null;\n  }>(\n    env.DB,\n    `SELECT\n        lang_level_id,\n        lang_level_name,\n        description,\n        category,\n        level_order\n      FROM lang_level_type\n      WHERE (\n        category IS NOT NULL AND UPPER(category) = ?\n      ) OR (\n        category IS NULL AND (\n          (? = 'LANGUAGE' AND lang_level_id BETWEEN 100 AND 199) OR\n          (? = 'PARTNER' AND lang_level_id BETWEEN 200 AND 299)\n        )\n      )\n      ORDER BY\n        CASE WHEN level_order IS NULL THEN 1 ELSE 0 END,\n        level_order,\n        lang_level_id`,\n    [normalizedCategory, normalizedCategory, normalizedCategory]\n  );\n}\n\nexport async function listTopicOptions(env: Env) {\n  return query<{\n    topic_id: number;\n    topic_name: string;\n    description: string | null;\n  }>(env.DB, 'SELECT topic_id, topic_name, description FROM topic WHERE is_active IS NULL OR is_active = 1 ORDER BY topic_name');\n}\n\nexport async function listPartnerOptions(env: Env) {\n  return query<{\n    partner_personality_id: number;\n    partner_personality: string;\n    description: string | null;\n  }>(\n    env.DB,\n    'SELECT partner_personality_id, partner_personality, description FROM partner_personality ORDER BY partner_personality'\n  );\n}\n\nexport async function listScheduleOptions(env: Env) {\n  return query<{\n    schedule_id: number;\n    day_of_week: string;\n    schedule_name: string | null;\n    time_slot: string | null;\n  }>(env.DB, 'SELECT schedule_id, day_of_week, schedule_name, time_slot FROM schedule ORDER BY schedule_id');\n}\n\nexport async function listGroupSizeOptions(env: Env) {\n  return query<{\n    group_size_id: number;\n    group_size: string;\n  }>(\n    env.DB,\n    'SELECT group_size_id, group_size FROM group_size ORDER BY group_size_id'\n  );\n}\n\ntype CommunicationMethodOption = {\n  id: number;\n  code: string;\n  displayName: string;\n  description: string | null;\n  sortOrder: number;\n};\n\nconst DEFAULT_COMMUNICATION_METHODS: CommunicationMethodOption[] = [\n  {\n    id: 1,\n    code: 'TEXT',\n    displayName: '\uD14D\uC2A4\uD2B8 \uC911\uC2EC',\n    description: '\uCC44\uD305\uC744 \uC704\uC8FC\uB85C \uD559\uC2B5\uD569\uB2C8\uB2E4.',\n    sortOrder: 1\n  },\n  {\n    id: 2,\n    code: 'VOICE',\n    displayName: '\uC74C\uC131 \uC911\uC2EC',\n    description: '\uC74C\uC131 \uD1B5\uD654\uB97C \uC911\uC2EC\uC73C\uB85C \uC5F0\uC2B5\uD569\uB2C8\uB2E4.',\n    sortOrder: 2\n  },\n  {\n    id: 3,\n    code: 'VIDEO',\n    displayName: '\uC601\uC0C1 \uD1B5\uD654',\n    description: '\uC601\uC0C1 \uD1B5\uD654\uB85C \uC2E4\uC2DC\uAC04 \uB300\uD654\uB97C \uC9C4\uD589\uD569\uB2C8\uB2E4.',\n    sortOrder: 3\n  },\n  {\n    id: 4,\n    code: 'HYBRID',\n    displayName: '\uC0C1\uD669\uC5D0 \uB9DE\uAC8C',\n    description: '\uC0C1\uD669\uC5D0 \uB530\uB77C \uD14D\uC2A4\uD2B8\uC640 \uC74C\uC131\uC744 \uD63C\uD569\uD569\uB2C8\uB2E4.',\n    sortOrder: 4\n  }\n];\n\nfunction normalizeCommunicationMethods(\n  rows: Array<{\n    communication_method_id: number | null;\n    method_code: string | null;\n    display_name: string | null;\n    description: string | null;\n    sort_order: number | null;\n  }>\n): CommunicationMethodOption[] {\n  if (!rows.length) {\n    return DEFAULT_COMMUNICATION_METHODS.map((item) => ({ ...item }));\n  }\n\n  return rows\n    .map((row, index) => {\n      const code = (row.method_code ?? '').trim().toUpperCase();\n      if (!code) {\n        return null;\n      }\n\n      return {\n        id: row.communication_method_id ?? index + 1,\n        code,\n        displayName: row.display_name?.trim() || code,\n        description: row.description ?? null,\n        sortOrder: row.sort_order ?? index + 1\n      } satisfies CommunicationMethodOption;\n    })\n    .filter((item): item is CommunicationMethodOption => item !== null)\n    .sort((a, b) => {\n      if (a.sortOrder === b.sortOrder) {\n        return a.id - b.id;\n      }\n      return a.sortOrder - b.sortOrder;\n    });\n}\n\nexport async function listCommunicationMethodOptions(env: Env): Promise<CommunicationMethodOption[]> {\n  try {\n    const rows = await query<{\n      communication_method_id: number;\n      method_code: string;\n      display_name: string | null;\n      description: string | null;\n      sort_order: number | null;\n      is_active: number | null;\n    }>(\n      env.DB,\n      `SELECT communication_method_id, method_code, display_name, description, sort_order, is_active\n       FROM communication_method\n       WHERE is_active IS NULL OR is_active = 1\n       ORDER BY\n         CASE WHEN sort_order IS NULL THEN 1 ELSE 0 END,\n         sort_order,\n         communication_method_id`\n    );\n\n    return normalizeCommunicationMethods(rows);\n  } catch (error) {\n    console.warn('[onboarding] communication_method table unavailable, falling back to defaults', error);\n    return DEFAULT_COMMUNICATION_METHODS.map((item) => ({ ...item }));\n  }\n}\n\ntype DailyMinuteOption = {\n  code: string;\n  displayName: string;\n  minutes: number;\n  description: string | null;\n  sortOrder: number;\n};\n\nconst DEFAULT_DAILY_MINUTE_OPTIONS: DailyMinuteOption[] = [\n  {\n    code: 'MINUTES_10',\n    displayName: '10\uBD84',\n    minutes: 10,\n    description: '\uD558\uB8E8 10\uBD84 \uD559\uC2B5',\n    sortOrder: 1\n  },\n  {\n    code: 'MINUTES_15',\n    displayName: '15\uBD84',\n    minutes: 15,\n    description: '\uD558\uB8E8 15\uBD84 \uD559\uC2B5',\n    sortOrder: 2\n  },\n  {\n    code: 'MINUTES_20',\n    displayName: '20\uBD84',\n    minutes: 20,\n    description: '\uD558\uB8E8 20\uBD84 \uD559\uC2B5',\n    sortOrder: 3\n  },\n  {\n    code: 'MINUTES_25',\n    displayName: '25\uBD84',\n    minutes: 25,\n    description: '\uD558\uB8E8 25\uBD84 \uD559\uC2B5',\n    sortOrder: 4\n  },\n  {\n    code: 'MINUTES_30',\n    displayName: '30\uBD84',\n    minutes: 30,\n    description: '\uD558\uB8E8 30\uBD84 \uD559\uC2B5',\n    sortOrder: 5\n  }\n];\n\nasync function fetchDailyMinuteRows(env: Env) {\n  try {\n    const table = await query<{ name: string }>(\n      env.DB,\n      \"SELECT name FROM sqlite_master WHERE type = 'table' AND name IN (?, ?)\",\n      ['daily_minute_option', 'daily_minute']\n    );\n\n    if (!table.length) {\n      return [];\n    }\n\n    const tableName = table[0]?.name ?? 'daily_minute_option';\n\n    try {\n      return await query<{\n        code: string | null;\n        display_name: string | null;\n        minutes: number | null;\n        description: string | null;\n        sort_order: number | null;\n      }>(\n        env.DB,\n        `SELECT\n           COALESCE(method_code, code) AS code,\n           COALESCE(display_name, name) AS display_name,\n           minutes,\n           description,\n           sort_order\n         FROM ${tableName}\n         WHERE is_active IS NULL OR is_active = 1\n         ORDER BY\n           CASE WHEN sort_order IS NULL THEN 1 ELSE 0 END,\n           sort_order,\n           COALESCE(method_code, code, display_name)`\n      );\n    } catch (error) {\n      console.warn('[onboarding] daily_minute columns unavailable, falling back to defaults', error);\n      return [];\n    }\n  } catch (error) {\n    console.warn('[onboarding] daily_minute table unavailable, falling back to defaults', error);\n    return [];\n  }\n}\n\nexport async function listDailyMinuteOptions(env: Env): Promise<DailyMinuteOption[]> {\n  const rows = await fetchDailyMinuteRows(env);\n\n  if (!rows.length) {\n    return DEFAULT_DAILY_MINUTE_OPTIONS.map((item) => ({ ...item }));\n  }\n\n  return rows\n    .map((row, index) => {\n      const code = (row.code ?? '').trim().toUpperCase();\n      if (!code) {\n        return null;\n      }\n\n      return {\n        code,\n        displayName: row.display_name?.trim() || code,\n        minutes: Number.isFinite(row.minutes) ? Number(row.minutes) : DEFAULT_DAILY_MINUTE_OPTIONS[index % DEFAULT_DAILY_MINUTE_OPTIONS.length].minutes,\n        description: row.description ?? null,\n        sortOrder: row.sort_order ?? index + 1\n      } as DailyMinuteOption;\n    })\n    .filter((item): item is DailyMinuteOption => item !== null)\n    .sort((a, b) => {\n      if (a.sortOrder === b.sortOrder) {\n        return a.minutes - b.minutes;\n      }\n      return a.sortOrder - b.sortOrder;\n    });\n}\n\nexport async function listMotivationOptions(env: Env) {\n  return query<{\n    motivation_id: number;\n    motivation_name: string;\n    description: string | null;\n  }>(\n    env.DB,\n    'SELECT motivation_id, motivation_name, description FROM motivation WHERE is_active IS NULL OR is_active = 1 ORDER BY motivation_name'\n  );\n}\n\nexport async function listLearningStyleOptions(env: Env) {\n  return query<{\n    learning_style_id: number;\n    learning_style_name: string;\n    description: string | null;\n  }>(\n    env.DB,\n    'SELECT learning_style_id, learning_style_name, description FROM learning_style WHERE is_active IS NULL OR is_active = 1 ORDER BY learning_style_id'\n  );\n}\n\nexport async function listLearningExpectationOptions(env: Env) {\n  return query<{\n    learning_expectation_id: number;\n    learning_expectation_name: string;\n    description: string | null;\n  }>(\n    env.DB,\n    'SELECT learning_expectation_id, learning_expectation_name, description FROM learning_expectation WHERE is_active IS NULL OR is_active = 1 ORDER BY learning_expectation_id'\n  );\n}\n\nexport async function upsertOnboardingLanguages(\n  env: Env,\n  userId: string,\n  payload: Array<{ languageId: number; currentLevelId?: number; targetLevelId?: number }>\n) {\n  await transaction(\n    env.DB,\n    [\n      { sql: 'DELETE FROM onboarding_lang_level WHERE user_id = ?', params: [userId] },\n      ...payload.map((item) => ({\n        sql: `INSERT INTO onboarding_lang_level (user_id, language_id, current_level_id, target_level_id, created_at, updated_at)\n              VALUES (?, ?, ?, ?, ?, ?)` ,\n        params: [\n          userId,\n          item.languageId,\n          item.currentLevelId ?? null,\n          item.targetLevelId ?? null,\n          new Date().toISOString(),\n          new Date().toISOString()\n        ]\n      }))\n    ]\n  );\n}\n\nexport async function upsertOnboardingTopics(\n  env: Env,\n  userId: string,\n  topicIds: number[]\n) {\n  await transaction(\n    env.DB,\n    [\n      { sql: 'DELETE FROM onboarding_topic WHERE user_id = ?', params: [userId] },\n      ...topicIds.map((topicId) => ({\n        sql: 'INSERT INTO onboarding_topic (user_id, topic_id, created_at) VALUES (?, ?, ?)',\n        params: [userId, topicId, new Date().toISOString()]\n      }))\n    ]\n  );\n}\n\nexport async function upsertOnboardingPartner(\n  env: Env,\n  userId: string,\n  preferences: Array<{ partnerPersonalityId: number; partnerGender?: string }>\n) {\n  await transaction(\n    env.DB,\n    [\n      { sql: 'DELETE FROM onboarding_partner WHERE user_id = ?', params: [userId] },\n      ...preferences.map((pref) => ({\n        sql: 'INSERT INTO onboarding_partner (user_id, partner_personality_id, partner_gender, created_at) VALUES (?, ?, ?, ?)',\n        params: [userId, pref.partnerPersonalityId, pref.partnerGender ?? null, new Date().toISOString()]\n      }))\n    ]\n  );\n}\n\nexport async function upsertOnboardingSchedules(\n  env: Env,\n  userId: string,\n  schedules: Array<{ scheduleId: number; dayOfWeek: string; classTime?: string }>\n) {\n  await transaction(\n    env.DB,\n    [\n      { sql: 'DELETE FROM onboarding_schedule WHERE user_id = ?', params: [userId] },\n      ...schedules.map((item) => ({\n        sql: `INSERT INTO onboarding_schedule (user_id, schedule_id, day_of_week, class_time, is_available, created_at)\n              VALUES (?, ?, ?, ?, 1, ?)` ,\n        params: [userId, item.scheduleId, item.dayOfWeek, item.classTime ?? null, new Date().toISOString()]\n      }))\n    ]\n  );\n}\n\nexport async function upsertOnboardingGroupSizes(\n  env: Env,\n  userId: string,\n  groupSizeIds: number[]\n) {\n  const normalized = Array.from(new Set(groupSizeIds.map((value) => Number(value)))).filter((value): value is number => Number.isFinite(value));\n\n  const timestamp = new Date().toISOString();\n  const operations = [\n    { sql: 'DELETE FROM onboarding_group_size WHERE user_id = ?', params: [userId] },\n    ...normalized.map((groupSizeId) => ({\n      sql: 'INSERT INTO onboarding_group_size (user_id, group_size_id, created_at) VALUES (?, ?, ?)',\n      params: [userId, groupSizeId, timestamp]\n    }))\n  ];\n\n  await transaction(env.DB, operations);\n}\n\nexport async function upsertOnboardingMotivations(\n  env: Env,\n  userId: string,\n  motivations: Array<{ motivationId: number; priority?: number }>\n) {\n  await transaction(\n    env.DB,\n    [\n      { sql: 'DELETE FROM onboarding_motivation WHERE user_id = ?', params: [userId] },\n      ...motivations.map((item) => ({\n        sql: 'INSERT INTO onboarding_motivation (user_id, motivation_id, priority, created_at) VALUES (?, ?, ?, ?)',\n        params: [userId, item.motivationId, item.priority ?? null, new Date().toISOString()]\n      }))\n    ]\n  );\n}\n\nexport async function upsertOnboardingLearningStyles(\n  env: Env,\n  userId: string,\n  learningStyleIds: number[]\n) {\n  const normalized = Array.from(new Set(learningStyleIds.map((value) => Number(value)))).filter((value): value is number => Number.isFinite(value));\n  const timestamp = new Date().toISOString();\n\n  const operations = [\n    { sql: 'DELETE FROM onboarding_learning_style WHERE user_id = ?', params: [userId] },\n    ...normalized.map((learningStyleId) => ({\n      sql: 'INSERT INTO onboarding_learning_style (user_id, learning_style_id, created_at) VALUES (?, ?, ?)',\n      params: [userId, learningStyleId, timestamp]\n    }))\n  ];\n\n  await transaction(env.DB, operations);\n}\n\nexport async function upsertOnboardingLearningExpectations(\n  env: Env,\n  userId: string,\n  learningExpectationIds: number[]\n) {\n  const normalized = Array.from(new Set(learningExpectationIds.map((value) => Number(value)))).filter((value): value is number => Number.isFinite(value));\n  const timestamp = new Date().toISOString();\n\n  const operations = [\n    { sql: 'DELETE FROM onboarding_learning_expectation WHERE user_id = ?', params: [userId] },\n    ...normalized.map((learningExpectationId, index) => ({\n      sql: 'INSERT INTO onboarding_learning_expectation (user_id, learning_expectation_id, priority, created_at) VALUES (?, ?, ?, ?)',\n      params: [userId, learningExpectationId, index + 1, timestamp]\n    }))\n  ];\n\n  await transaction(env.DB, operations);\n}\n\nexport async function loadOnboardingSummary(env: Env, userId: string): Promise<OnboardingSummary> {\n  const [\n    languagesResult,\n    topicsResult,\n    motivationsResult,\n    learningStylesResult,\n    groupSizesResult,\n    partnersResult,\n    schedulesResult\n  ] = await env.DB.batch([\n    env.DB.prepare(\n      'SELECT language_id, current_level_id, target_level_id FROM onboarding_lang_level WHERE user_id = ?'\n    ).bind(userId),\n    env.DB.prepare('SELECT topic_id FROM onboarding_topic WHERE user_id = ?').bind(userId),\n    env.DB.prepare('SELECT motivation_id, priority FROM onboarding_motivation WHERE user_id = ?').bind(userId),\n    env.DB.prepare('SELECT learning_style_id FROM onboarding_learning_style WHERE user_id = ?').bind(userId),\n    env.DB.prepare('SELECT group_size_id FROM onboarding_group_size WHERE user_id = ?').bind(userId),\n    env.DB.prepare(\n      'SELECT partner_personality_id, partner_gender FROM onboarding_partner WHERE user_id = ?'\n    ).bind(userId),\n    env.DB.prepare(\n      'SELECT schedule_id, day_of_week, class_time FROM onboarding_schedule WHERE user_id = ?'\n    ).bind(userId)\n  ]);\n\n  const languages = (languagesResult.results ?? []) as Array<{\n    language_id: number;\n    current_level_id: number | null;\n    target_level_id: number | null;\n  }>;\n  const topics = (topicsResult.results ?? []) as Array<{ topic_id: number }>;\n  const motivations = (motivationsResult.results ?? []) as Array<{\n    motivation_id: number;\n    priority: number | null;\n  }>;\n  const learningStyles = (learningStylesResult.results ?? []) as Array<{\n    learning_style_id: number;\n  }>;\n  const groupSizes = (groupSizesResult.results ?? []) as Array<{ group_size_id: number }>;\n  const partners = (partnersResult.results ?? []) as Array<{\n    partner_personality_id: number;\n    partner_gender: string | null;\n  }>;\n  const scheduleRows = (schedulesResult.results ?? []) as Array<{\n    schedule_id: number;\n    day_of_week: string;\n    class_time: string | null;\n  }>;\n\n  const profile = await getUserProfile(env, userId);\n\n  return {\n    languages: languages.map((item) => ({\n      languageId: item.language_id,\n      currentLevelId: item.current_level_id ?? undefined,\n      targetLevelId: item.target_level_id ?? undefined\n    })),\n    topics: topics.map((item) => item.topic_id),\n    motivations: motivations.map((item) => ({\n      motivationId: item.motivation_id,\n      priority: item.priority ?? undefined\n    })),\n    learningStyles: learningStyles.map((item) => item.learning_style_id),\n    groupSizes: groupSizes.map((item) => item.group_size_id),\n    partnerPreferences: partners.map((item) => ({\n      partnerPersonalityId: item.partner_personality_id,\n      partnerGender: item.partner_gender ?? undefined\n    })),\n    schedules: scheduleRows.map((item) => ({\n      scheduleId: item.schedule_id,\n      dayOfWeek: item.day_of_week,\n      classTime: item.class_time ?? undefined\n    })),\n    communicationMethod: profile?.communicationMethod ?? undefined\n  };\n}\n\nexport async function completeOnboarding(\n  env: Env,\n  userId: string,\n  payload: {\n    nativeLanguageId?: number | null;\n    targetLanguages?: Array<{ languageId: number; currentLevelId?: number; targetLevelId?: number }>;\n    motivationIds?: number[];\n    topicIds?: number[];\n    learningStyleIds?: number[];\n    learningExpectationIds?: number[];\n    partnerPersonalityIds?: Array<{ partnerPersonalityId: number; partnerGender?: string } | number>;\n    groupSizeIds?: number[];\n    scheduleIds?: Array<{ scheduleId: number; dayOfWeek: string; classTime?: string } | number>;\n    communicationMethod?: string | null;\n  } = {}\n) {\n  if (payload.targetLanguages) {\n    await upsertOnboardingLanguages(env, userId, payload.targetLanguages);\n  }\n\n  if (payload.topicIds) {\n    await upsertOnboardingTopics(env, userId, payload.topicIds);\n  }\n\n  if (payload.motivationIds) {\n    await upsertOnboardingMotivations(\n      env,\n      userId,\n      payload.motivationIds.map((id, index) => ({ motivationId: id, priority: index + 1 }))\n    );\n  }\n\n  if (payload.partnerPersonalityIds) {\n    const preferences = payload.partnerPersonalityIds.map((item) =>\n      typeof item === 'number' ? { partnerPersonalityId: item } : item\n    );\n    await upsertOnboardingPartner(env, userId, preferences);\n  }\n\n  if (payload.groupSizeIds) {\n    await upsertOnboardingGroupSizes(env, userId, payload.groupSizeIds);\n  }\n\n  if (payload.scheduleIds) {\n    const schedules = payload.scheduleIds.map((item) =>\n      typeof item === 'number'\n        ? { scheduleId: item, dayOfWeek: 'UNKNOWN', classTime: null }\n        : item\n    );\n    await upsertOnboardingSchedules(env, userId, schedules as Array<{ scheduleId: number; dayOfWeek: string; classTime?: string }>);\n  }\n\n  if (payload.learningStyleIds) {\n    await upsertOnboardingLearningStyles(env, userId, payload.learningStyleIds);\n  }\n\n  if (payload.learningExpectationIds) {\n    await upsertOnboardingLearningExpectations(env, userId, payload.learningExpectationIds);\n  }\n\n  const profileUpdates: Parameters<typeof updateUserProfile>[2] = {\n    nativeLanguageId: payload.nativeLanguageId ?? null,\n    onboardingCompleted: true\n  };\n\n  if (typeof payload.communicationMethod === 'string' && payload.communicationMethod.trim()) {\n    profileUpdates.communicationMethod = payload.communicationMethod.trim().toUpperCase();\n  }\n\n  await updateUserProfile(env, userId, profileUpdates);\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport {\n  listLanguageOptions,\n  listLanguageLevelTypes,\n  listLearningExpectationOptions,\n  listLearningStyleOptions,\n  listTopicOptions,\n  listPartnerOptions,\n  listScheduleOptions,\n  listGroupSizeOptions,\n  listCommunicationMethodOptions,\n  listDailyMinuteOptions,\n  listMotivationOptions,\n  upsertOnboardingLanguages,\n  upsertOnboardingLearningExpectations,\n  upsertOnboardingLearningStyles,\n  upsertOnboardingTopics,\n  upsertOnboardingPartner,\n  upsertOnboardingSchedules,\n  upsertOnboardingGroupSizes,\n  upsertOnboardingMotivations,\n  loadOnboardingSummary,\n  completeOnboarding\n} from '../services/onboarding';\nimport {\n  clearOnboardingState,\n  getOnboardingProgress,\n  getOnboardingSessionDraft,\n  getOnboardingStep,\n  resetOnboardingProgress,\n  saveOnboardingSessionDraft,\n  saveOnboardingStep\n} from '../services/onboardingState';\nimport { getUserProfile, updateUserProfile } from '../services/user';\n\nconst onboardingRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\nconst requireAuth = authMiddleware();\nconst TOTAL_ONBOARDING_STEPS = 8;\n\nconst wrapError = (error: unknown, fallback: string): AppError => {\n  if (error instanceof AppError) {\n    return error;\n  }\n  const message = error instanceof Error ? error.message : fallback;\n  return new AppError(message, 500, 'ONBOARDING_ERROR');\n};\n\nfunction normalizeStepPayload(raw: Record<string, unknown>): Record<string, unknown> {\n  if (raw && typeof (raw as any).stepData === 'object' && (raw as any).stepData !== null) {\n    return (raw as any).stepData as Record<string, unknown>;\n  }\n  return raw;\n}\n\nasync function getStepPayload(env: Env, userId: string, step: number) {\n  const record = await getOnboardingStep(env, userId, step);\n  return record?.payload ?? null;\n}\n\nasync function buildOnboardingData(env: Env, userId: string) {\n  const [\n    profile,\n    step1,\n    step2,\n    step3,\n    step4,\n    progress,\n    languages,\n    motivations,\n    topics,\n    learningStyles,\n    learningExpectations\n  ] = await Promise.all([\n    getUserProfile(env, userId),\n    getStepPayload(env, userId, 1),\n    getStepPayload(env, userId, 2),\n    getStepPayload(env, userId, 3),\n    getStepPayload(env, userId, 4),\n    getOnboardingProgress(env, userId, TOTAL_ONBOARDING_STEPS),\n    listLanguageOptions(env),\n    listMotivationOptions(env),\n    listTopicOptions(env),\n    listLearningStyleOptions(env),\n    listLearningExpectationOptions(env)\n  ]);\n\n  const step1Payload = (step1 as Record<string, unknown>) ?? {};\n  const step2Payload = (step2 as Record<string, unknown>) ?? {};\n  const step3Payload = (step3 as Record<string, unknown>) ?? {};\n  const step4Payload = (step4 as Record<string, unknown>) ?? {};\n\n  const userOnboardingData: Record<string, unknown> = {\n    englishName: (step1Payload?.englishName as string | undefined) ?? profile?.englishName ?? profile?.name,\n    profileImageUrl: (step1Payload?.profileImage as string | undefined) ?? profile?.profileImage,\n    residence: step1Payload?.residence ?? profile?.location?.country ?? null,\n    intro: step1Payload?.intro ?? profile?.selfBio ?? '',\n    nativeLanguageId:\n      (step2Payload?.nativeLanguageId as number | undefined) ??\n      (step2Payload?.languageId as number | undefined) ??\n      profile?.nativeLanguage?.id ?? null,\n    targetLanguages: step2Payload?.targetLanguages ?? [],\n    motivationIds: step3Payload?.motivationIds ?? step3Payload?.motivations ?? [],\n    topicIds: step4Payload?.topicIds ?? step3Payload?.topicIds ?? [],\n    learningStyleIds: step4Payload?.learningStyleIds ?? [],\n    learningExpectationIds: step4Payload?.learningExpectationIds ?? [],\n    completed: progress.completed\n  };\n\n  return {\n    userOnboardingData,\n    availableOptions: {\n      languages,\n      motivations,\n      topics,\n      learningStyles: learningStyles.map((item) => ({\n        id: item.learning_style_id,\n        name: item.learning_style_name,\n        description: item.description ?? undefined\n      })),\n      learningExpectations: learningExpectations.map((item) => ({\n        id: item.learning_expectation_id,\n        name: item.learning_expectation_name,\n        description: item.description ?? undefined\n      }))\n    }\n  };\n}\n\nonboardingRoutes.get('/languages', async (c) => {\n  try {\n    const data = await listLanguageOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load language options');\n  }\n});\n\nonboardingRoutes.get('/language/languages', async (c) => {\n  try {\n    const data = await listLanguageOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load language options');\n  }\n});\n\nonboardingRoutes.get('/language/level-types-language', async (c) => {\n  try {\n    const rows = await listLanguageLevelTypes(c.env, 'LANGUAGE');\n    const data = rows.map((row) => ({\n      id: row.lang_level_id,\n      name: row.lang_level_name,\n      description: row.description ?? undefined,\n      category: row.category ?? undefined,\n      order: row.level_order ?? undefined\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load language level types');\n  }\n});\n\nonboardingRoutes.get('/language/level-types-partner', async (c) => {\n  try {\n    const rows = await listLanguageLevelTypes(c.env, 'PARTNER');\n    const data = rows.map((row) => ({\n      id: row.lang_level_id,\n      name: row.lang_level_name,\n      description: row.description ?? undefined,\n      category: row.category ?? undefined,\n      order: row.level_order ?? undefined\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load partner level types');\n  }\n});\n\nonboardingRoutes.get('/interests', async (c) => {\n  try {\n    const data = await listTopicOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load interests');\n  }\n});\n\nonboardingRoutes.get('/interest/motivations', async (c) => {\n  try {\n    const data = await listMotivationOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load motivation options');\n  }\n});\n\nonboardingRoutes.get('/interest/topics', async (c) => {\n  try {\n    const data = await listTopicOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load interests');\n  }\n});\n\nonboardingRoutes.get('/interest/learning-styles', async (c) => {\n  try {\n    const rows = await listLearningStyleOptions(c.env);\n    const data = rows.map((item) => ({\n      learningStyleId: item.learning_style_id,\n      learningStyleName: item.learning_style_name,\n      description: item.description ?? undefined\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load learning style options');\n  }\n});\n\nonboardingRoutes.get('/interest/learning-expectations', async (c) => {\n  try {\n    const rows = await listLearningExpectationOptions(c.env);\n    const data = rows.map((item) => ({\n      learningExpectationId: item.learning_expectation_id,\n      learningExpectationName: item.learning_expectation_name,\n      description: item.description ?? undefined\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load learning expectation options');\n  }\n});\n\nonboardingRoutes.get('/partner-preferences', async (c) => {\n  try {\n    const data = await listPartnerOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load partner preferences');\n  }\n});\n\nonboardingRoutes.get('/partner/personalities', async (c) => {\n  try {\n    const rows = await listPartnerOptions(c.env);\n    const data = rows.map((item) => ({\n      partnerPersonalityId: item.partner_personality_id,\n      partnerPersonality: item.partner_personality,\n      description: item.description ?? undefined,\n      id: item.partner_personality_id,\n      name: item.partner_personality\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load partner personalities');\n  }\n});\n\nonboardingRoutes.get('/partner/gender-type', async (c) => {\n  // NOTE: \uB808\uAC70\uC2DC \uBC31\uC5D4\uB4DC\uC640 \uC751\uB2F5 \uC2A4\uD0A4\uB9C8\uB97C \uB9DE\uCD94\uAE30 \uC704\uD574 name/description \uD544\uB4DC\uB9CC \uBC18\uD658\n  const genderTypes = [\n    { name: 'MALE', description: '\uB0A8\uC131' },\n    { name: 'FEMALE', description: '\uC5EC\uC131' },\n    { name: 'ANY', description: '\uC0C1\uAD00\uC5C6\uC74C' }\n  ];\n\n  return successResponse(c, genderTypes);\n});\n\nonboardingRoutes.get('/schedule/communication-methods', async (c) => {\n  try {\n    const methods = await listCommunicationMethodOptions(c.env);\n    const data = methods.map((item) => ({\n      communicationMethodId: item.id,\n      code: item.code,\n      name: item.code,\n      label: item.displayName,\n      displayName: item.displayName,\n      description: item.description ?? undefined,\n      sortOrder: item.sortOrder\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load communication methods');\n  }\n});\n\nonboardingRoutes.get('/schedule/daily-methods', async (c) => {\n  try {\n    const options = await listDailyMinuteOptions(c.env);\n    const data = options.map((item, index) => ({\n      id: index + 1,\n      name: item.code,\n      code: item.code,\n      minutes: item.minutes,\n      label: item.displayName,\n      displayName: item.displayName,\n      description: item.description ?? item.displayName,\n      sortOrder: item.sortOrder\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load daily minute options');\n  }\n});\n\nonboardingRoutes.get('/schedule-options', async (c) => {\n  try {\n    const data = await listScheduleOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load schedule options');\n  }\n});\n\nonboardingRoutes.get('/motivation-options', async (c) => {\n  try {\n    const data = await listMotivationOptions(c.env);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load motivation options');\n  }\n});\n\nonboardingRoutes.use('/*', requireAuth);\nonboardingRoutes.use('/steps/*', requireAuth);\nonboardingRoutes.use('/steps', requireAuth);\n\nonboardingRoutes.get('/schedule/group-sizes', async (c) => {\n  try {\n    const rows = await listGroupSizeOptions(c.env);\n    const data = rows.map((item) => ({\n      groupSizeId: item.group_size_id,\n      groupSize: item.group_size,\n      id: item.group_size_id,\n      name: item.group_size,\n      label: item.group_size\n    }));\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load group size options');\n  }\n});\n\nonboardingRoutes.post('/partner/gender', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const body = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const raw =\n    typeof body.partnerGenderType === 'string'\n      ? body.partnerGenderType\n      : typeof body.partnerGender === 'string'\n        ? body.partnerGender\n        : typeof body.genderType === 'string'\n          ? body.genderType\n          : undefined;\n\n  if (!raw) {\n    throw new AppError('partner gender is required', 400, 'INVALID_PAYLOAD');\n  }\n\n  const normalized = String(raw).trim().toUpperCase();\n  const allowed = new Set(['MALE', 'FEMALE', 'ANY', 'OTHER']);\n  if (!allowed.has(normalized)) {\n    throw new AppError('invalid partner gender type', 400, 'INVALID_PAYLOAD');\n  }\n\n  try {\n    await updateUserProfile(c.env, userId, { partnerGender: normalized });\n    const summary = await loadOnboardingSummary(c.env, userId);\n    return successResponse(c, {\n      partnerGender: normalized,\n      partnerPreferences: summary.partnerPreferences\n    });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save partner gender');\n  }\n});\n\nonboardingRoutes.post('/schedule/communication-method', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const body = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const raw =\n    typeof (body as any).communicationMethodType === 'string'\n      ? (body as any).communicationMethodType\n      : typeof (body as any).communicationMethod === 'string'\n        ? (body as any).communicationMethod\n        : typeof (body as any).methodCode === 'string'\n          ? (body as any).methodCode\n          : typeof (body as any).code === 'string'\n            ? (body as any).code\n            : typeof (body as any).value === 'string'\n              ? (body as any).value\n              : Array.isArray(body) && body.length > 0 && typeof body[0] === 'string'\n                ? body[0]\n                : undefined;\n\n  if (!raw) {\n    throw new AppError('communication method is required', 400, 'INVALID_PAYLOAD');\n  }\n\n  const normalized = String(raw).trim().toUpperCase();\n  if (!normalized) {\n    throw new AppError('communication method is required', 400, 'INVALID_PAYLOAD');\n  }\n\n  const methods = await listCommunicationMethodOptions(c.env);\n  const selected = methods.find((item) => item.code.toUpperCase() === normalized);\n  if (!selected) {\n    throw new AppError('invalid communication method', 400, 'INVALID_COMMUNICATION_METHOD');\n  }\n\n  try {\n    await updateUserProfile(c.env, userId, { communicationMethod: normalized });\n    await saveOnboardingStep(c.env, userId, 5, { communicationMethod: normalized }, TOTAL_ONBOARDING_STEPS);\n    const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n    return successResponse(c, {\n      communicationMethod: normalized,\n      label: selected.displayName,\n      progress\n    });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save communication method');\n  }\n});\n\nonboardingRoutes.post('/schedule/daily-minute', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const payload = (await c.req.json().catch(() => ({}))) as any;\n\n  const candidates: unknown[] = [];\n  const pushCandidate = (value: unknown) => {\n    if (value === undefined || value === null) {\n      return;\n    }\n    if (Array.isArray(value)) {\n      value.forEach((nested) => pushCandidate(nested));\n      return;\n    }\n    candidates.push(value);\n  };\n\n  const lookupKeys = [\n    'dailyMinutesType',\n    'dailyMinuteType',\n    'dailyMinute',\n    'dailyMinutes',\n    'code',\n    'value',\n    'selection'\n  ] as const;\n\n  for (const key of lookupKeys) {\n    pushCandidate(payload?.[key]);\n  }\n\n  // Fallback: if the payload itself is an array (legacy clients)\n  pushCandidate(payload);\n\n  const stringCandidate = candidates.find(\n    (item): item is string => typeof item === 'string' && item.trim().length > 0\n  );\n\n  const numericCandidate = candidates.find((item): item is number => typeof item === 'number' && Number.isFinite(item))\n    ?? (() => {\n      if (!stringCandidate) {\n        return undefined;\n      }\n      const maybeNumber = Number(stringCandidate.trim());\n      return Number.isFinite(maybeNumber) ? maybeNumber : undefined;\n    })();\n\n  if (!stringCandidate && numericCandidate === undefined) {\n    throw new AppError('daily minute selection is required', 400, 'INVALID_PAYLOAD');\n  }\n\n  const options = await listDailyMinuteOptions(c.env);\n\n  let selectedOption = undefined;\n  if (stringCandidate) {\n    const normalizedCode = stringCandidate.trim().toUpperCase();\n    selectedOption = options.find((item) => item.code.toUpperCase() === normalizedCode);\n  }\n\n  if (!selectedOption && numericCandidate !== undefined) {\n    const normalizedMinutes = Math.round(numericCandidate);\n    selectedOption = options.find((item) => item.minutes === normalizedMinutes);\n  }\n\n  if (!selectedOption) {\n    throw new AppError('invalid daily minute option', 400, 'INVALID_DAILY_MINUTE_OPTION');\n  }\n\n  const normalizedCode = selectedOption.code.toUpperCase();\n\n  try {\n    await updateUserProfile(c.env, userId, { dailyMinute: normalizedCode });\n    await saveOnboardingStep(c.env, userId, 7, { dailyMinute: normalizedCode }, TOTAL_ONBOARDING_STEPS);\n    const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n\n    return successResponse(c, {\n      dailyMinute: normalizedCode,\n      minutes: selectedOption.minutes,\n      label: selectedOption.displayName,\n      description: selectedOption.description ?? undefined,\n      progress\n    });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save daily minute preference');\n  }\n});\n\nonboardingRoutes.post('/schedule/group-size', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  const body = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const candidates = Array.isArray(body)\n    ? body\n    : (body as any).groupSizeIds ?? (body as any).group_size_ids ?? (body as any).ids ?? [];\n\n  const normalized = Array.from(new Set((Array.isArray(candidates) ? candidates : []).map((value) => Number(value)))).filter((value): value is number => Number.isFinite(value));\n\n  if (!normalized.length) {\n    throw new AppError('groupSizeIds array required', 400, 'INVALID_PAYLOAD');\n  }\n\n  try {\n    await upsertOnboardingGroupSizes(c.env, userId, normalized);\n    await saveOnboardingStep(c.env, userId, 6, { groupSizeIds: normalized }, TOTAL_ONBOARDING_STEPS);\n    const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n    const summary = await loadOnboardingSummary(c.env, userId);\n\n    return successResponse(c, {\n      groupSizeIds: normalized,\n      groupSizes: summary.groupSizes,\n      progress\n    });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save group sizes');\n  }\n});\n\nconst STATIC_STEP_NUMBERS = [1, 2, 3, 4];\n\nfor (const staticStep of STATIC_STEP_NUMBERS) {\n  onboardingRoutes.post(`/steps/${staticStep}/save`, async (c) => {\n    const userId = c.get('userId');\n    if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n    const payload = normalizeStepPayload(await c.req.json().catch(() => ({})) as Record<string, unknown>);\n    await saveOnboardingStep(c.env, userId, staticStep, payload, TOTAL_ONBOARDING_STEPS);\n    const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n    return successResponse(c, { saved: true, progress });\n  });\n}\n\nonboardingRoutes.post('/steps/:step/save', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const step = Number(c.req.param('step'));\n  if (!Number.isInteger(step) || step < 1 || step > TOTAL_ONBOARDING_STEPS) {\n    throw new AppError('Invalid onboarding step', 400, 'INVALID_PATH_PARAM');\n  }\n  const body = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const payload = normalizeStepPayload(body);\n  await saveOnboardingStep(c.env, userId, step, payload, TOTAL_ONBOARDING_STEPS);\n  const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n  return successResponse(c, { saved: true, progress });\n});\n\nonboardingRoutes.post('/steps/:step/skip', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const step = Number(c.req.param('step'));\n  if (!Number.isInteger(step) || step < 1 || step > TOTAL_ONBOARDING_STEPS) {\n    throw new AppError('Invalid onboarding step', 400, 'INVALID_PATH_PARAM');\n  }\n  await saveOnboardingStep(c.env, userId, step, { skipped: true }, TOTAL_ONBOARDING_STEPS);\n  const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n  return successResponse(c, { skipped: true, progress });\n});\n\nonboardingRoutes.post('/state/:step', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const step = Number(c.req.param('step'));\n  if (!Number.isInteger(step) || step < 1 || step > TOTAL_ONBOARDING_STEPS) {\n    throw new AppError('Invalid onboarding step', 400, 'INVALID_PATH_PARAM');\n  }\n  const body = (await c.req.json().catch(() => ({}))) as Record<string, unknown>;\n  try {\n    await saveOnboardingStep(c.env, userId, step, body, TOTAL_ONBOARDING_STEPS);\n    const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n    return successResponse(c, { saved: true, progress });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save onboarding step');\n  }\n});\n\nonboardingRoutes.get('/state/:step', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const step = Number(c.req.param('step'));\n  if (!Number.isInteger(step) || step < 1 || step > TOTAL_ONBOARDING_STEPS) {\n    throw new AppError('Invalid onboarding step', 400, 'INVALID_PATH_PARAM');\n  }\n  try {\n    const state = await getOnboardingStep(c.env, userId, step);\n    return successResponse(c, state ?? {});\n  } catch (error) {\n    throw wrapError(error, 'Failed to load onboarding step');\n  }\n});\n\nonboardingRoutes.get('/steps/current', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n  return successResponse(c, {\n    currentStep: progress.currentStep,\n    progress\n  });\n});\n\nonboardingRoutes.get('/progress', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n  return successResponse(c, progress);\n});\n\nonboardingRoutes.get('/data', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  try {\n    const data = await buildOnboardingData(c.env, userId);\n    return successResponse(c, data);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load onboarding data');\n  }\n});\n\nonboardingRoutes.get('/state/progress', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  try {\n    const progress = await getOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n    return successResponse(c, progress);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load onboarding progress');\n  }\n});\n\nonboardingRoutes.post('/state/session', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = (await c.req.json().catch(() => ({}))) as Record<string, unknown>;\n  try {\n    await saveOnboardingSessionDraft(c.env, userId, body);\n    return successResponse(c, { saved: true });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save onboarding session');\n  }\n});\n\nonboardingRoutes.get('/state/session', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  try {\n    const draft = await getOnboardingSessionDraft(c.env, userId);\n    return successResponse(c, draft ?? {});\n  } catch (error) {\n    throw wrapError(error, 'Failed to load onboarding session');\n  }\n});\n\nonboardingRoutes.post('/state/reset', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  try {\n    await clearOnboardingState(c.env, userId);\n    await resetOnboardingProgress(c.env, userId, TOTAL_ONBOARDING_STEPS);\n    return successResponse(c, { reset: true });\n  } catch (error) {\n    throw wrapError(error, 'Failed to reset onboarding state');\n  }\n});\n\nonboardingRoutes.post('/languages', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n\n  const body = await c.req.json();\n  if (!Array.isArray(body)) {\n    throw new AppError('Expected array payload', 400, 'INVALID_PAYLOAD');\n  }\n\n  const payload = body\n    .map((item) => ({\n      languageId: Number(item.languageId ?? item.language_id),\n      currentLevelId: item.currentLevelId ?? item.current_level_id ?? undefined,\n      targetLevelId: item.targetLevelId ?? item.target_level_id ?? undefined\n    }))\n    .filter((item) => Number.isFinite(item.languageId));\n\n  try {\n    await upsertOnboardingLanguages(c.env, userId, payload);\n    return successResponse(c, { count: payload.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save language selections');\n  }\n});\n\nonboardingRoutes.post('/language/native-language', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const languageId = Number(body.languageId ?? body.nativeLanguageId);\n  if (!Number.isFinite(languageId)) {\n    throw new AppError('languageId is required', 400, 'INVALID_PAYLOAD');\n  }\n  await updateUserProfile(c.env, userId, { nativeLanguageId: languageId });\n  return successResponse(c, { languageId });\n});\n\nonboardingRoutes.post('/language/language-level', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const languages = Array.isArray(body?.languages) ? (body.languages as any[]) : [];\n  const payload: Array<{ languageId: number; currentLevelId?: number; targetLevelId?: number }> = [];\n  for (const raw of languages) {\n    const languageId = Number(raw.languageId ?? raw.language_id);\n    if (!Number.isFinite(languageId)) {\n      continue;\n    }\n    payload.push({\n      languageId,\n      currentLevelId: raw.currentLevelId ?? raw.current_level_id ?? undefined,\n      targetLevelId: raw.targetLevelId ?? raw.target_level_id ?? undefined\n    });\n  }\n  await upsertOnboardingLanguages(c.env, userId, payload);\n  return successResponse(c, { count: payload.length });\n});\n\nonboardingRoutes.post('/interests', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const topicIds = Array.isArray(body) ? body : body?.topicIds;\n  if (!Array.isArray(topicIds)) {\n    throw new AppError('topicIds array required', 400, 'INVALID_PAYLOAD');\n  }\n  const casted = topicIds.map(Number).filter((id) => Number.isFinite(id));\n  try {\n    await upsertOnboardingTopics(c.env, userId, casted);\n    return successResponse(c, { count: casted.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save interests');\n  }\n});\n\nonboardingRoutes.post('/interest/motivation', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const motivationIds = Array.isArray((body as any)?.motivationIds)\n    ? (body as any).motivationIds\n    : Array.isArray(body)\n      ? body\n      : [];\n  const normalized: Array<{ motivationId: number; priority: number }> = [];\n  motivationIds.forEach((value: unknown, index: number) => {\n    const motivationId = Number(value);\n    if (!Number.isFinite(motivationId)) {\n      return;\n    }\n    normalized.push({\n      motivationId,\n      priority: index + 1\n    });\n  });\n  await upsertOnboardingMotivations(c.env, userId, normalized);\n  return successResponse(c, { count: normalized.length });\n});\n\nonboardingRoutes.post('/interest/topic', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const topicIds: unknown[] = Array.isArray((body as any)?.topicIds)\n    ? (body as any).topicIds\n    : Array.isArray(body)\n      ? (body as unknown[])\n      : [];\n  const normalized = topicIds\n    .map((value: unknown) => Number(value))\n    .filter((id: number): id is number => Number.isFinite(id));\n  await upsertOnboardingTopics(c.env, userId, normalized);\n  return successResponse(c, { count: normalized.length });\n});\n\nonboardingRoutes.post('/interest/learning-style', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({})) as any;\n  const raw: unknown[] = Array.isArray(body?.learningStyleIds)\n    ? body.learningStyleIds\n    : Array.isArray(body)\n      ? (body as unknown[])\n      : [];\n  const normalized = raw\n    .map((value: unknown): number => Number(value))\n    .filter((value: number): value is number => Number.isFinite(value));\n\n  try {\n    await upsertOnboardingLearningStyles(c.env, userId, normalized);\n    return successResponse(c, { count: normalized.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save learning styles');\n  }\n});\n\nonboardingRoutes.post('/interest/learning-expectation', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({})) as any;\n  const raw: unknown[] = Array.isArray(body?.learningExpectationIds)\n    ? body.learningExpectationIds\n    : Array.isArray(body)\n      ? (body as unknown[])\n      : [];\n  const normalized = raw\n    .map((value: unknown): number => Number(value))\n    .filter((value: number): value is number => Number.isFinite(value));\n\n  try {\n    await upsertOnboardingLearningExpectations(c.env, userId, normalized);\n    return successResponse(c, { count: normalized.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save learning expectations');\n  }\n});\n\nonboardingRoutes.post('/partner-preferences', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const preferences = Array.isArray(body) ? body : body?.partnerPreferences;\n  if (!Array.isArray(preferences)) {\n    throw new AppError('partner preferences array required', 400, 'INVALID_PAYLOAD');\n  }\n  const normalized = preferences\n    .map((item: any) =>\n      typeof item === 'number'\n        ? { partnerPersonalityId: item }\n        : {\n            partnerPersonalityId: Number(item.partnerPersonalityId ?? item.partner_personality_id),\n            partnerGender: item.partnerGender ?? item.partner_gender\n          }\n    )\n    .filter((item): item is { partnerPersonalityId: number; partnerGender?: string } => Number.isFinite(item.partnerPersonalityId));\n  try {\n    await upsertOnboardingPartner(c.env, userId, normalized);\n    return successResponse(c, { count: normalized.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save partner preferences');\n  }\n});\n\nonboardingRoutes.post('/partner/personality', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const raw = Array.isArray((body as any).personalPartnerIds)\n    ? (body as any).personalPartnerIds\n    : Array.isArray((body as any).partnerPersonalityIds)\n      ? (body as any).partnerPersonalityIds\n      : Array.isArray(body)\n        ? body\n        : [];\n  if (!Array.isArray(raw) || raw.length === 0) {\n    await upsertOnboardingPartner(c.env, userId, []);\n    return successResponse(c, { count: 0 });\n  }\n  const normalized = raw\n    .map((item: any) =>\n      typeof item === 'number'\n        ? { partnerPersonalityId: item }\n        : {\n            partnerPersonalityId: Number(item.partnerPersonalityId ?? item.partner_personality_id ?? item.id),\n            partnerGender: item.partnerGender ?? item.partner_gender ?? undefined\n          }\n    )\n    .filter((item) => Number.isFinite(item.partnerPersonalityId)) as Array<{ partnerPersonalityId: number; partnerGender?: string }>;\n\n  try {\n    await upsertOnboardingPartner(c.env, userId, normalized);\n    return successResponse(c, { count: normalized.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save partner personalities');\n  }\n});\n\nonboardingRoutes.post('/schedules', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const schedules = Array.isArray(body) ? body : body?.schedules;\n  if (!Array.isArray(schedules)) {\n    throw new AppError('schedules array required', 400, 'INVALID_PAYLOAD');\n  }\n  const normalized: Array<{ scheduleId: number; dayOfWeek: string; classTime?: string }> = [];\n  for (const raw of schedules as any[]) {\n    const scheduleId = Number(raw.scheduleId ?? raw.schedule_id);\n    if (!Number.isFinite(scheduleId)) {\n      continue;\n    }\n    normalized.push({\n      scheduleId,\n      dayOfWeek: raw.dayOfWeek ?? raw.day_of_week ?? 'UNKNOWN',\n      classTime: raw.classTime ?? raw.class_time ?? undefined\n    });\n  }\n  try {\n    await upsertOnboardingSchedules(c.env, userId, normalized);\n    return successResponse(c, { count: normalized.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save schedules');\n  }\n});\n\nonboardingRoutes.post('/schedule', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const schedules = Array.isArray((body as any)?.schedules) ? (body as any).schedules : [];\n  const normalized: Array<{ scheduleId: number; dayOfWeek: string; classTime?: string }> = [];\n  for (const raw of schedules as any[]) {\n    const scheduleId = Number(raw.scheduleId ?? raw.schedule_id);\n    if (!Number.isFinite(scheduleId)) {\n      continue;\n    }\n    normalized.push({\n      scheduleId,\n      dayOfWeek: raw.dayOfWeek ?? raw.day_of_week ?? 'UNKNOWN',\n      classTime: raw.classTime ?? raw.class_time ?? undefined\n    });\n  }\n  await upsertOnboardingSchedules(c.env, userId, normalized);\n  return successResponse(c, { count: normalized.length });\n});\n\nonboardingRoutes.post('/motivations', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const motivations = Array.isArray(body) ? body : body?.motivationIds;\n  if (!Array.isArray(motivations)) {\n    throw new AppError('motivationIds array required', 400, 'INVALID_PAYLOAD');\n  }\n  const normalized: Array<{ motivationId: number; priority?: number }> = [];\n  (motivations as any[]).forEach((raw, index) => {\n    const motivationId = typeof raw === 'number'\n      ? raw\n      : Number(raw.motivationId ?? raw.motivation_id);\n    if (!Number.isFinite(motivationId)) {\n      return;\n    }\n    normalized.push({\n      motivationId,\n      priority: raw?.priority ?? index + 1\n    });\n  });\n  try {\n    await upsertOnboardingMotivations(c.env, userId, normalized);\n    return successResponse(c, { count: normalized.length });\n  } catch (error) {\n    throw wrapError(error, 'Failed to save motivations');\n  }\n});\nonboardingRoutes.get('/summary', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  try {\n    const summary = await loadOnboardingSummary(c.env, userId);\n    return successResponse(c, summary);\n  } catch (error) {\n    throw wrapError(error, 'Failed to load onboarding summary');\n  }\n});\n\nonboardingRoutes.post('/complete', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  try {\n    await completeOnboarding(c.env, userId, body ?? {});\n    await clearOnboardingState(c.env, userId);\n    return successResponse(c, { completed: true });\n  } catch (error) {\n    throw wrapError(error, 'Failed to complete onboarding');\n  }\n});\n\nexport default onboardingRoutes;\n", "import type { Env } from '../index';\n\nconst PREFIX = 'onboarding';\nconst STEP_PREFIX = `${PREFIX}:step`;\nconst PROGRESS_PREFIX = `${PREFIX}:progress`;\nconst SESSION_PREFIX = `${PREFIX}:session`;\nconst DEFAULT_STEP_TTL = 60 * 60 * 24 * 7; // 7\uC77C\nconst SESSION_TTL = 60 * 60 * 2; // 2\uC2DC\uAC04\n\ninterface StepData {\n  stepNumber: number;\n  savedAt: string;\n  isCompleted: boolean;\n  payload: Record<string, unknown>;\n}\n\ninterface ProgressData {\n  completedSteps: Record<string, boolean>;\n  currentStep: number;\n  progressPercentage: number;\n  totalSteps: number;\n  lastUpdatedAt: string;\n  completed: boolean;\n  estimatedMinutesRemaining?: number;\n}\n\ninterface SessionDraft {\n  lastAutoSavedAt: string;\n  payload: Record<string, unknown>;\n}\n\nfunction buildStepKey(userId: string, stepNumber: number): string {\n  return `${STEP_PREFIX}:${userId}:${stepNumber}`;\n}\n\nfunction buildProgressKey(userId: string): string {\n  return `${PROGRESS_PREFIX}:${userId}`;\n}\n\nfunction buildSessionKey(userId: string): string {\n  return `${SESSION_PREFIX}:${userId}`;\n}\n\nexport async function saveOnboardingStep(\n  env: Env,\n  userId: string,\n  stepNumber: number,\n  payload: Record<string, unknown>,\n  totalSteps: number,\n  estimatedMinutesRemaining?: number\n): Promise<void> {\n  const stepKey = buildStepKey(userId, stepNumber);\n  const nowIso = new Date().toISOString();\n\n  const stepData: StepData = {\n    stepNumber,\n    savedAt: nowIso,\n    isCompleted: true,\n    payload\n  };\n\n  await env.CACHE.put(stepKey, JSON.stringify(stepData), { expirationTtl: DEFAULT_STEP_TTL });\n\n  await updateOnboardingProgress(env, userId, stepNumber, totalSteps, estimatedMinutesRemaining);\n}\n\nexport async function getOnboardingStep(\n  env: Env,\n  userId: string,\n  stepNumber: number\n): Promise<StepData | null> {\n  const raw = await env.CACHE.get(buildStepKey(userId, stepNumber), { type: 'json' }) as StepData | null;\n  return raw ?? null;\n}\n\nexport async function saveOnboardingSessionDraft(\n  env: Env,\n  userId: string,\n  payload: Record<string, unknown>\n): Promise<void> {\n  const draft: SessionDraft = {\n    lastAutoSavedAt: new Date().toISOString(),\n    payload\n  };\n\n  await env.CACHE.put(buildSessionKey(userId), JSON.stringify(draft), { expirationTtl: SESSION_TTL });\n}\n\nexport async function getOnboardingSessionDraft(\n  env: Env,\n  userId: string\n): Promise<SessionDraft | null> {\n  const raw = await env.CACHE.get(buildSessionKey(userId), { type: 'json' }) as SessionDraft | null;\n  return raw ?? null;\n}\n\nexport async function clearOnboardingState(env: Env, userId: string): Promise<void> {\n  const progressKey = buildProgressKey(userId);\n  const list = await env.CACHE.list({ prefix: `${STEP_PREFIX}:${userId}` });\n\n  await Promise.all([\n    env.CACHE.delete(progressKey),\n    env.CACHE.delete(buildSessionKey(userId)),\n    ...list.keys.map((key) => env.CACHE.delete(key.name))\n  ]);\n}\n\nexport async function getOnboardingProgress(\n  env: Env,\n  userId: string,\n  totalSteps: number\n): Promise<ProgressData> {\n  const progressKey = buildProgressKey(userId);\n  const raw = await env.CACHE.get(progressKey, { type: 'json' }) as ProgressData | null;\n\n  if (raw) {\n    return raw;\n  }\n\n  return {\n    completedSteps: {},\n    currentStep: 1,\n    progressPercentage: 0,\n    totalSteps,\n    lastUpdatedAt: new Date().toISOString(),\n    completed: false\n  };\n}\n\nasync function updateOnboardingProgress(\n  env: Env,\n  userId: string,\n  completedStep: number,\n  totalSteps: number,\n  estimatedMinutesRemaining?: number\n): Promise<void> {\n  const progressKey = buildProgressKey(userId);\n  const current = await getOnboardingProgress(env, userId, totalSteps);\n\n  const completedSteps = { ...current.completedSteps, [`step${completedStep}`]: true };\n  const completedCount = Object.values(completedSteps).filter(Boolean).length;\n  const progressPercentage = Math.min((completedCount / totalSteps) * 100, 100);\n\n  const progress: ProgressData = {\n    completedSteps,\n    currentStep: Math.min(completedStep + 1, totalSteps),\n    progressPercentage,\n    totalSteps,\n    lastUpdatedAt: new Date().toISOString(),\n    completed: completedCount >= totalSteps,\n    estimatedMinutesRemaining\n  };\n\n  await env.CACHE.put(progressKey, JSON.stringify(progress), {\n    expirationTtl: DEFAULT_STEP_TTL\n  });\n}\nexport async function resetOnboardingProgress(env: Env, userId: string, totalSteps: number): Promise<void> {\n  const progress: ProgressData = {\n    completedSteps: {},\n    currentStep: 1,\n    progressPercentage: 0,\n    totalSteps,\n    lastUpdatedAt: new Date().toISOString(),\n    completed: false\n  };\n  await env.CACHE.put(buildProgressKey(userId), JSON.stringify(progress), {\n    expirationTtl: DEFAULT_STEP_TTL\n  });\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse, paginatedResponse } from '../utils/response';\nimport {\n  createSession,\n  listSessions,\n  getSessionById,\n  listUserSessions,\n  listPublicSessions,\n  listSessionsByLanguage,\n  listSessionsByType,\n  listAvailableSessions,\n  bookSession,\n  joinSession,\n  cancelBooking,\n  listUserBookings,\n  getUserCalendar,\n  startSession,\n  endSession,\n  rescheduleSession,\n  submitSessionFeedback,\n  listSessionHistory,\n  getSessionStats,\n  listUpcomingSessions,\n  getSessionParticipants,\n  generateSessionInvite,\n  acceptSessionInvite,\n  getSessionNotifications,\n  updateSessionNotifications,\n  requestSessionRecording,\n  stopSessionRecording,\n  getSessionRecording,\n  getSessionSummary,\n  getSessionTranscript,\n  cancelSession\n} from '../services/session';\nimport type { SessionCreatePayload, SessionNotificationSettings } from '../types';\n\nconst sessionsRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\nfunction getPaginationParams(c: any) {\n  const page = Math.max(Number(c.req.query('page') ?? '1'), 1);\n  const size = Math.max(Math.min(Number(c.req.query('size') ?? '20'), 50), 1);\n  return { page, size };\n}\n\nfunction parseSessionId(c: any): number {\n  const sessionId = Number(c.req.param('sessionId'));\n  if (!Number.isFinite(sessionId)) throw new AppError('Invalid sessionId', 400, 'INVALID_PATH_PARAM');\n  return sessionId;\n}\n\nfunction normalizeCreatePayload(body: any): SessionCreatePayload {\n  if (!body || typeof body !== 'object') {\n    throw new AppError('Invalid payload', 400, 'INVALID_PAYLOAD');\n  }\n  const scheduledAt = typeof body.scheduledAt === 'string' ? body.scheduledAt : null;\n  if (!scheduledAt) {\n    throw new AppError('scheduledAt is required', 400, 'INVALID_PAYLOAD');\n  }\n  const sessionTypeRaw = typeof body.sessionType === 'string' ? body.sessionType : typeof body.type === 'string' ? body.type : null;\n  const sessionType = sessionTypeRaw ? String(sessionTypeRaw).toUpperCase() : 'VIDEO';\n  const durationMinutes = typeof body.durationMinutes === 'number'\n    ? body.durationMinutes\n    : typeof body.duration === 'number'\n      ? body.duration\n      : 30;\n\n  const payload: SessionCreatePayload = {\n    title: typeof body.title === 'string' ? body.title : typeof body.topic === 'string' ? body.topic : 'Study Session',\n    description: typeof body.description === 'string' ? body.description : typeof body.topic === 'string' ? body.topic : undefined,\n    sessionType,\n    languageCode: typeof body.languageCode === 'string' ? body.languageCode : typeof body.language === 'string' ? body.language : undefined,\n    skillFocus: typeof body.skillFocus === 'string' ? body.skillFocus : typeof body.targetLanguage === 'string' ? body.targetLanguage : undefined,\n    levelRequirement: typeof body.levelRequirement === 'string' ? body.levelRequirement : undefined,\n    scheduledAt,\n    durationMinutes,\n    maxParticipants: typeof body.maxParticipants === 'number' ? body.maxParticipants : undefined,\n    isRecurring: Boolean(body.isRecurring),\n    recurrencePattern: typeof body.recurrencePattern === 'string' ? body.recurrencePattern : undefined,\n    recurrenceEndDate: typeof body.recurrenceEndDate === 'string' ? body.recurrenceEndDate : undefined,\n    isPublic: typeof body.isPublic === 'boolean' ? body.isPublic : undefined,\n    tags: typeof body.tags === 'string' ? body.tags : undefined,\n    preparationNotes: typeof body.preparationNotes === 'string' ? body.preparationNotes : undefined,\n    meetingUrl: typeof body.meetingUrl === 'string' ? body.meetingUrl : undefined,\n    partnerId: typeof body.partnerId === 'string' ? body.partnerId : undefined,\n    topic: typeof body.topic === 'string' ? body.topic : undefined,\n    language: typeof body.language === 'string' ? body.language : undefined,\n    targetLanguage: typeof body.targetLanguage === 'string' ? body.targetLanguage : undefined,\n    webRtcRoomId: typeof body.webRtcRoomId === 'string' ? body.webRtcRoomId : undefined,\n    webRtcRoomType: typeof body.webRtcRoomType === 'string' ? body.webRtcRoomType : undefined,\n    duration: typeof body.duration === 'number' ? body.duration : undefined,\n    metadata: typeof body.metadata === 'object' && body.metadata !== null ? body.metadata : undefined\n  };\n\n  return payload;\n}\n\nsessionsRoutes.use('*', requireAuth);\n\nsessionsRoutes.get('/', async (c) => {\n  const { page, size } = getPaginationParams(c);\n  const status = c.req.query('status') ?? undefined;\n  const result = await listSessions(c.env, page, size, status);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.post('/', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const payload = normalizeCreatePayload(body);\n  const session = await createSession(c.env, userId, payload);\n  return successResponse(c, session);\n});\n\nsessionsRoutes.post('/:sessionId/join', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  const bookingMessage = typeof body?.bookingMessage === 'string' ? body.bookingMessage : undefined;\n  const session = await joinSession(c.env, userId, sessionId, bookingMessage);\n  return successResponse(c, session);\n});\n\nsessionsRoutes.post('/book', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.sessionId !== 'number') {\n    throw new AppError('sessionId is required', 400, 'INVALID_PAYLOAD');\n  }\n  const booking = await bookSession(c.env, userId, {\n    sessionId: body.sessionId,\n    bookingMessage: typeof body.bookingMessage === 'string' ? body.bookingMessage : undefined\n  });\n  return successResponse(c, booking);\n});\n\nsessionsRoutes.delete('/bookings/:bookingId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const bookingId = Number(c.req.param('bookingId'));\n  if (!Number.isFinite(bookingId)) throw new AppError('Invalid bookingId', 400, 'INVALID_PATH_PARAM');\n  const reason = c.req.query('reason') ?? undefined;\n  await cancelBooking(c.env, userId, bookingId, reason);\n  return successResponse(c, { success: true });\n});\n\nsessionsRoutes.get('/my-sessions', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listUserSessions(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/public', async (c) => {\n  const { page, size } = getPaginationParams(c);\n  const result = await listPublicSessions(c.env, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/language/:languageCode', async (c) => {\n  const { page, size } = getPaginationParams(c);\n  const languageCode = c.req.param('languageCode');\n  const result = await listSessionsByLanguage(c.env, languageCode, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/type/:sessionType', async (c) => {\n  const { page, size } = getPaginationParams(c);\n  const sessionType = c.req.param('sessionType');\n  const result = await listSessionsByType(c.env, sessionType, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/available', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listAvailableSessions(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/my-bookings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listUserBookings(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/history', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const partnerId = c.req.query('partnerId') ?? undefined;\n  const result = await listSessionHistory(c.env, userId, page, size, typeof partnerId === 'string' ? partnerId : undefined);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nsessionsRoutes.get('/stats', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const periodParam = (c.req.query('period') ?? 'month').toString().toLowerCase();\n  const period = periodParam === 'week' || periodParam === 'year' ? periodParam : 'month';\n  const stats = await getSessionStats(c.env, userId, period as 'week' | 'month' | 'year');\n  return successResponse(c, stats);\n});\n\nsessionsRoutes.get('/upcoming', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const limitRaw = Number(c.req.query('limit') ?? '5');\n  const limit = Math.max(1, Math.min(Number.isFinite(limitRaw) ? limitRaw : 5, 20));\n  const sessions = await listUpcomingSessions(c.env, userId, limit);\n  return successResponse(c, sessions);\n});\n\nsessionsRoutes.get('/calendar', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const start = c.req.query('startDate') ?? new Date().toISOString();\n  const end = c.req.query('endDate') ?? addDaysIso(7);\n  const calendar = await getUserCalendar(c.env, userId, start, end);\n  return successResponse(c, calendar);\n});\n\nsessionsRoutes.get('/:sessionId/notifications', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const settings = await getSessionNotifications(c.env, sessionId, userId);\n  return successResponse(c, settings);\n});\n\nsessionsRoutes.patch('/:sessionId/notifications', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  const settings = await updateSessionNotifications(c.env, sessionId, userId, body as Partial<SessionNotificationSettings>);\n  return successResponse(c, settings);\n});\n\nsessionsRoutes.post('/:sessionId/feedback', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({ }));\n  const summary = await submitSessionFeedback(c.env, userId, sessionId, body ?? {});\n  return successResponse(c, summary);\n});\n\nsessionsRoutes.patch('/:sessionId/reschedule', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  const session = await rescheduleSession(c.env, userId, sessionId, {\n    scheduledAt: typeof body?.scheduledAt === 'string' ? body.scheduledAt : undefined,\n    duration: typeof body?.duration === 'number' ? body.duration : undefined,\n    reason: typeof body?.reason === 'string' ? body.reason : undefined\n  });\n  return successResponse(c, session);\n});\n\nsessionsRoutes.post('/:sessionId/invite', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  const expiresInHours = Number(body?.expiresInHours ?? 24);\n  const invite = await generateSessionInvite(c.env, userId, sessionId, Number.isFinite(expiresInHours) ? expiresInHours : 24);\n  return successResponse(c, invite);\n});\n\nsessionsRoutes.post('/invite/accept', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const token = typeof body?.token === 'string' ? body.token : '';\n  if (!token) throw new AppError('Invite token is required', 400, 'INVALID_PAYLOAD');\n  const session = await acceptSessionInvite(c.env, userId, token);\n  return successResponse(c, session);\n});\n\nsessionsRoutes.post('/:sessionId/recording', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  const status = await requestSessionRecording(c.env, userId, sessionId, body ?? {});\n  return successResponse(c, status);\n});\n\nsessionsRoutes.post('/:sessionId/recording/stop', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const status = await stopSessionRecording(c.env, userId, sessionId);\n  return successResponse(c, status);\n});\n\nsessionsRoutes.get('/:sessionId/recording', async (c) => {\n  const sessionId = parseSessionId(c);\n  const status = await getSessionRecording(c.env, sessionId);\n  return successResponse(c, status);\n});\n\nsessionsRoutes.get('/:sessionId/participants', async (c) => {\n  const sessionId = parseSessionId(c);\n  const participants = await getSessionParticipants(c.env, sessionId);\n  return successResponse(c, participants);\n});\n\nsessionsRoutes.get('/:sessionId/summary', async (c) => {\n  const sessionId = parseSessionId(c);\n  const summary = await getSessionSummary(c.env, sessionId);\n  return successResponse(c, summary);\n});\n\nsessionsRoutes.get('/:sessionId/transcript', async (c) => {\n  const sessionId = parseSessionId(c);\n  const language = c.req.query('language') ?? 'default';\n  const transcript = await getSessionTranscript(c.env, sessionId, typeof language === 'string' ? language : 'default');\n  return successResponse(c, transcript);\n});\n\nsessionsRoutes.get('/:sessionId', async (c) => {\n  const userId = c.get('userId');\n  const sessionId = parseSessionId(c);\n  const session = await getSessionById(c.env, sessionId, userId);\n  return successResponse(c, session);\n});\n\nsessionsRoutes.post('/:sessionId/start', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  await startSession(c.env, userId, sessionId);\n  return successResponse(c, { success: true });\n});\n\nsessionsRoutes.post('/:sessionId/end', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  await endSession(c.env, userId, sessionId, {\n    duration: typeof body?.duration === 'number' ? body.duration : undefined,\n    notes: typeof body?.notes === 'string' ? body.notes : undefined,\n    rating: typeof body?.rating === 'number' ? body.rating : undefined\n  });\n  return successResponse(c, { success: true });\n});\n\nsessionsRoutes.post('/:sessionId/cancel', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const body = await c.req.json().catch(() => ({}));\n  const reason = typeof body?.reason === 'string' ? body.reason : undefined;\n  await cancelSession(c.env, userId, sessionId, reason);\n  return successResponse(c, { success: true });\n});\n\nsessionsRoutes.delete('/:sessionId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const sessionId = parseSessionId(c);\n  const reason = c.req.query('reason') ?? undefined;\n  await cancelSession(c.env, userId, sessionId, typeof reason === 'string' ? reason : undefined);\n  return successResponse(c, { success: true });\n});\n\nfunction addDaysIso(days: number): string {\n  const d = new Date();\n  d.setUTCDate(d.getUTCDate() + days);\n  return d.toISOString();\n}\n\nexport default sessionsRoutes;\n", "import type { Env } from '../index';\nimport type {\n  SessionCreatePayload,\n  SessionResponseType,\n  SessionBookingResponseType,\n  SessionCalendarResponse,\n  SessionParticipantInfo,\n  SessionNotificationSettings,\n  SessionStatsResponseType,\n  SessionSummaryResponse,\n  SessionTranscriptResponse,\n  SessionRecordingStatus,\n  SessionInviteResponse\n} from '../types';\nimport { query, queryFirst, execute } from '../utils/db';\n\nconst SESSION_STATUS = {\n  SCHEDULED: 'SCHEDULED',\n  IN_PROGRESS: 'IN_PROGRESS',\n  COMPLETED: 'COMPLETED',\n  CANCELLED: 'CANCELLED'\n} as const;\n\nconst BOOKING_STATUS = {\n  CONFIRMED: 'CONFIRMED',\n  CANCELLED: 'CANCELLED',\n  NO_SHOW: 'NO_SHOW'\n} as const;\n\nconst DEFAULT_INVITE_EXPIRATION_HOURS = 24;\n\nconst NOTIFICATION_DEFAULTS: SessionNotificationSettings = {\n  reminderBefore: 30,\n  enableEmailReminder: true,\n  enablePushReminder: true,\n  enableSmsReminder: false,\n  updatedAt: new Date(0).toISOString()\n};\n\ninterface SessionNotificationRow {\n  session_id: number;\n  user_id: string;\n  reminder_before: number;\n  enable_email: number;\n  enable_push: number;\n  enable_sms: number;\n  updated_at: string;\n}\n\ninterface SessionRecordingRow {\n  session_id: number;\n  status: string;\n  record_audio: number;\n  record_video: number;\n  record_transcript: number;\n  download_url: string | null;\n  message: string | null;\n  updated_at: string;\n}\n\ninterface SessionInviteRow {\n  invite_token: string;\n  session_id: number;\n  inviter_user_id: string;\n  expires_at: string;\n  created_at: string;\n  used_at: string | null;\n  used_by: string | null;\n}\n\ninterface SessionSummaryRow {\n  session_id: number;\n  notes: string | null;\n  duration_minutes: number | null;\n  rating: number | null;\n  highlights: string | null;\n  action_items: string | null;\n  feedback: string | null;\n  updated_at: string;\n}\n\ninterface SessionTranscriptRow {\n  session_id: number;\n  language: string;\n  segments: string | null;\n  generated_at: string;\n  updated_at: string;\n}\n\nfunction intToBool(value: number | null | undefined): boolean {\n  return value === 1;\n}\n\nfunction boolToInt(value: boolean): number {\n  return value ? 1 : 0;\n}\n\nasync function fetchNotificationRow(env: Env, sessionId: number, userId: string): Promise<SessionNotificationRow | null> {\n  return queryFirst<SessionNotificationRow>(\n    env.DB,\n    `SELECT * FROM session_notifications WHERE session_id = ? AND user_id = ? LIMIT 1`,\n    [sessionId, userId]\n  );\n}\n\nasync function upsertNotificationRow(\n  env: Env,\n  sessionId: number,\n  userId: string,\n  settings: SessionNotificationSettings\n) {\n  await execute(\n    env.DB,\n    `INSERT INTO session_notifications (\n        session_id,\n        user_id,\n        reminder_before,\n        enable_email,\n        enable_push,\n        enable_sms,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?)\n      ON CONFLICT(session_id, user_id) DO UPDATE SET\n        reminder_before = excluded.reminder_before,\n        enable_email = excluded.enable_email,\n        enable_push = excluded.enable_push,\n        enable_sms = excluded.enable_sms,\n        updated_at = excluded.updated_at`,\n    [\n      sessionId,\n      userId,\n      settings.reminderBefore,\n      boolToInt(settings.enableEmailReminder),\n      boolToInt(settings.enablePushReminder),\n      boolToInt(settings.enableSmsReminder),\n      settings.updatedAt\n    ]\n  );\n}\n\nasync function fetchRecordingRow(env: Env, sessionId: number): Promise<SessionRecordingRow | null> {\n  return queryFirst<SessionRecordingRow>(\n    env.DB,\n    'SELECT * FROM session_recordings WHERE session_id = ? LIMIT 1',\n    [sessionId]\n  );\n}\n\nasync function upsertRecordingRow(env: Env, sessionId: number, status: SessionRecordingStatus) {\n  await execute(\n    env.DB,\n    `INSERT INTO session_recordings (\n        session_id,\n        status,\n        record_audio,\n        record_video,\n        record_transcript,\n        download_url,\n        message,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n      ON CONFLICT(session_id) DO UPDATE SET\n        status = excluded.status,\n        record_audio = excluded.record_audio,\n        record_video = excluded.record_video,\n        record_transcript = excluded.record_transcript,\n        download_url = excluded.download_url,\n        message = excluded.message,\n        updated_at = excluded.updated_at`,\n    [\n      sessionId,\n      status.status,\n      boolToInt(status.recordAudio),\n      boolToInt(status.recordVideo),\n      boolToInt(status.recordTranscript),\n      status.downloadUrl ?? null,\n      status.message ?? null,\n      status.updatedAt\n    ]\n  );\n}\n\nasync function fetchInviteRow(env: Env, token: string): Promise<SessionInviteRow | null> {\n  return queryFirst<SessionInviteRow>(\n    env.DB,\n    'SELECT * FROM session_invites WHERE invite_token = ? LIMIT 1',\n    [token]\n  );\n}\n\nasync function insertInviteRow(\n  env: Env,\n  record: SessionInviteRow\n) {\n  await execute(\n    env.DB,\n    `INSERT INTO session_invites (\n        invite_token,\n        session_id,\n        inviter_user_id,\n        expires_at,\n        created_at,\n        used_at,\n        used_by\n      ) VALUES (?, ?, ?, ?, ?, ?, ?)\n      ON CONFLICT(invite_token) DO UPDATE SET\n        session_id = excluded.session_id,\n        inviter_user_id = excluded.inviter_user_id,\n        expires_at = excluded.expires_at,\n        created_at = excluded.created_at,\n        used_at = excluded.used_at,\n        used_by = excluded.used_by`,\n    [\n      record.invite_token,\n      record.session_id,\n      record.inviter_user_id,\n      record.expires_at,\n      record.created_at,\n      record.used_at,\n      record.used_by\n    ]\n  );\n}\n\nasync function markInviteUsed(\n  env: Env,\n  token: string,\n  usedBy: string,\n  usedAt: string\n) {\n  await execute(\n    env.DB,\n    'UPDATE session_invites SET used_at = ?, used_by = ? WHERE invite_token = ?',\n    [usedAt, usedBy, token]\n  );\n}\n\nasync function fetchSummaryRow(env: Env, sessionId: number): Promise<SessionSummaryRow | null> {\n  return queryFirst<SessionSummaryRow>(\n    env.DB,\n    'SELECT * FROM session_summaries WHERE session_id = ? LIMIT 1',\n    [sessionId]\n  );\n}\n\nasync function upsertSummaryRow(env: Env, row: SessionSummaryRow) {\n  await execute(\n    env.DB,\n    `INSERT INTO session_summaries (\n        session_id,\n        notes,\n        duration_minutes,\n        rating,\n        highlights,\n        action_items,\n        feedback,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n      ON CONFLICT(session_id) DO UPDATE SET\n        notes = excluded.notes,\n        duration_minutes = excluded.duration_minutes,\n        rating = excluded.rating,\n        highlights = excluded.highlights,\n        action_items = excluded.action_items,\n        feedback = excluded.feedback,\n        updated_at = excluded.updated_at`,\n    [\n      row.session_id,\n      row.notes,\n      row.duration_minutes,\n      row.rating,\n      row.highlights,\n      row.action_items,\n      row.feedback,\n      row.updated_at\n    ]\n  );\n}\n\nasync function fetchTranscriptRow(\n  env: Env,\n  sessionId: number,\n  language: string\n): Promise<SessionTranscriptRow | null> {\n  return queryFirst<SessionTranscriptRow>(\n    env.DB,\n    'SELECT * FROM session_transcripts WHERE session_id = ? AND language = ? LIMIT 1',\n    [sessionId, language]\n  );\n}\n\nasync function upsertTranscriptRow(\n  env: Env,\n  row: SessionTranscriptRow\n) {\n  await execute(\n    env.DB,\n    `INSERT INTO session_transcripts (\n        session_id,\n        language,\n        segments,\n        generated_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?)\n      ON CONFLICT(session_id, language) DO UPDATE SET\n        segments = excluded.segments,\n        generated_at = excluded.generated_at,\n        updated_at = excluded.updated_at`,\n    [\n      row.session_id,\n      row.language,\n      row.segments,\n      row.generated_at,\n      row.updated_at\n    ]\n  );\n}\n\nfunction deserializeSummaryRow(row: SessionSummaryRow): SessionSummaryResponse {\n  const highlights = row.highlights ? safeParseStringArray(row.highlights) : [];\n  const actionItems = row.action_items ? safeParseStringArray(row.action_items) : [];\n  const feedback = row.feedback ? safeParseObject(row.feedback) : undefined;\n  return {\n    sessionId: row.session_id,\n    notes: row.notes ?? undefined,\n    durationMinutes: row.duration_minutes ?? undefined,\n    rating: row.rating ?? undefined,\n    highlights,\n    actionItems,\n    feedback,\n    updatedAt: row.updated_at\n  };\n}\n\nfunction serializeSummaryResponse(summary: SessionSummaryResponse): SessionSummaryRow {\n  return {\n    session_id: summary.sessionId,\n    notes: summary.notes ?? null,\n    duration_minutes: summary.durationMinutes ?? null,\n    rating: summary.rating ?? null,\n    highlights: JSON.stringify(summary.highlights ?? []),\n    action_items: JSON.stringify(summary.actionItems ?? []),\n    feedback: summary.feedback ? JSON.stringify(summary.feedback) : null,\n    updated_at: summary.updatedAt\n  };\n}\n\nfunction deserializeTranscriptRow(row: SessionTranscriptRow): SessionTranscriptResponse {\n  const segments = row.segments ? safeParseSegments(row.segments) : [];\n  return {\n    sessionId: row.session_id,\n    language: row.language,\n    segments,\n    generatedAt: row.generated_at\n  };\n}\n\nfunction safeParseStringArray(payload: string): string[] {\n  try {\n    const parsed = JSON.parse(payload);\n    return Array.isArray(parsed) ? parsed.map(String) : [];\n  } catch {\n    return [];\n  }\n}\n\nfunction safeParseObject(payload: string): Record<string, any> | undefined {\n  try {\n    const parsed = JSON.parse(payload);\n    return typeof parsed === 'object' && parsed !== null ? parsed : undefined;\n  } catch {\n    return undefined;\n  }\n}\n\nfunction safeParseSegments(payload: string): SessionTranscriptResponse['segments'] {\n  try {\n    const parsed = JSON.parse(payload);\n    if (Array.isArray(parsed)) {\n      return parsed.map((segment) => {\n        if (segment && typeof segment === 'object') {\n          return {\n            speaker: String(segment.speaker ?? ''),\n            content: String(segment.content ?? ''),\n            startTime: segment.startTime ?? undefined,\n            endTime: segment.endTime ?? undefined\n          };\n        }\n        return {\n          speaker: '',\n          content: String(segment ?? '')\n        };\n      });\n    }\n    return [];\n  } catch {\n    return [];\n  }\n}\n\ninterface SessionRow {\n  session_id: number;\n  host_user_id: string;\n  guest_user_id: string | null;\n  title: string;\n  description: string | null;\n  session_type: string;\n  language_code: string | null;\n  skill_focus: string | null;\n  level_requirement: string | null;\n  scheduled_at: string;\n  duration_minutes: number;\n  max_participants: number | null;\n  current_participants: number | null;\n  status: string;\n  meeting_url: string | null;\n  meeting_password: string | null;\n  is_recurring: number | null;\n  recurrence_pattern: string | null;\n  recurrence_end_date: string | null;\n  is_public: number | null;\n  tags: string | null;\n  preparation_notes: string | null;\n  started_at: string | null;\n  ended_at: string | null;\n  cancelled_at: string | null;\n  cancellation_reason: string | null;\n  created_at: string;\n  updated_at: string;\n  host_name: string | null;\n  host_profile_image: string | null;\n  guest_name: string | null;\n  guest_profile_image: string | null;\n}\n\ninterface BookingRow {\n  booking_id: number;\n  session_id: number;\n  user_id: string;\n  status: string;\n  booking_message: string | null;\n  cancelled_at: string | null;\n  cancellation_reason: string | null;\n  attended: number;\n  feedback_rating: number | null;\n  feedback_comment: string | null;\n  reminder_sent: number;\n  created_at: string;\n  session_title: string;\n  session_scheduled_at: string;\n  session_duration_minutes: number;\n  session_language_code: string | null;\n  host_user_id: string;\n  host_user_name: string | null;\n  host_user_profile_image: string | null;\n}\n\ninterface BookingWithSessionRow {\n  booking_id: number;\n  session_id: number;\n  user_id: string;\n  status: string;\n  current_participants: number | null;\n  guest_user_id: string | null;\n}\n\ninterface CalendarRow {\n  session_id: number;\n  title: string;\n  description: string | null;\n  scheduled_at: string;\n  duration_minutes: number;\n  status: string;\n  host_user_id: string;\n}\n\nfunction nowIso(): string {\n  return new Date().toISOString();\n}\n\nfunction mapSessionRow(row: any, currentUserId?: string): SessionResponseType {\n  const scheduledAt = row.scheduled_at as string;\n  const duration = Number(row.duration_minutes ?? 0);\n  const startDate = scheduledAt ? new Date(scheduledAt) : null;\n  const startedAt = row.started_at ?? undefined;\n  const endedAt = row.ended_at ?? undefined;\n\n  let canJoin: boolean | undefined;\n  let isHost: boolean | undefined;\n  let isParticipant: boolean | undefined;\n  if (currentUserId) {\n    isHost = row.host_user_id === currentUserId;\n    isParticipant = row.guest_user_id === currentUserId;\n    canJoin =\n      row.status === SESSION_STATUS.SCHEDULED &&\n      !isHost &&\n      Number(row.current_participants ?? 0) < Number(row.max_participants ?? 1);\n  }\n\n  return {\n    sessionId: row.session_id,\n    hostUserId: row.host_user_id,\n    hostUserName: row.host_name ?? undefined,\n    hostUserProfileImage: row.host_profile_image ?? undefined,\n    guestUserId: row.guest_user_id ?? undefined,\n    guestUserName: row.guest_name ?? undefined,\n    guestUserProfileImage: row.guest_profile_image ?? undefined,\n    title: row.title,\n    description: row.description ?? undefined,\n    sessionType: row.session_type,\n    languageCode: row.language_code ?? undefined,\n    skillFocus: row.skill_focus ?? undefined,\n    levelRequirement: row.level_requirement ?? undefined,\n    scheduledAt: scheduledAt,\n    durationMinutes: duration,\n    maxParticipants: row.max_participants !== null ? Number(row.max_participants) : undefined,\n    currentParticipants: Number(row.current_participants ?? 0),\n    status: row.status,\n    meetingUrl: row.meeting_url ?? undefined,\n    isRecurring: Boolean(row.is_recurring),\n    recurrencePattern: row.recurrence_pattern ?? undefined,\n    recurrenceEndDate: row.recurrence_end_date ?? undefined,\n    isPublic: Boolean(row.is_public ?? 1),\n    tags: row.tags ?? undefined,\n    preparationNotes: row.preparation_notes ?? undefined,\n    startedAt: startedAt,\n    endedAt: endedAt,\n    canJoin,\n    isHost,\n    isParticipant\n  };\n}\n\nfunction mapBookingRow(row: any): SessionBookingResponseType {\n  return {\n    bookingId: row.booking_id,\n    sessionId: row.session_id,\n    sessionTitle: row.session_title,\n    sessionScheduledAt: row.session_scheduled_at,\n    sessionDurationMinutes: Number(row.session_duration_minutes ?? 0),\n    sessionLanguageCode: row.session_language_code ?? undefined,\n    hostUserId: row.host_user_id,\n    hostUserName: row.host_user_name ?? undefined,\n    hostUserProfileImage: row.host_user_profile_image ?? undefined,\n    status: row.status,\n    bookingMessage: row.booking_message ?? undefined,\n    bookedAt: row.created_at,\n    cancelledAt: row.cancelled_at ?? undefined,\n    cancellationReason: row.cancellation_reason ?? undefined,\n    attended: Boolean(row.attended),\n    feedbackRating: row.feedback_rating !== null ? Number(row.feedback_rating) : undefined,\n    feedbackComment: row.feedback_comment ?? undefined,\n    reminderSent: Boolean(row.reminder_sent),\n    canCancel: calculateCanCancel(row.session_scheduled_at)\n  };\n}\n\nfunction calculateCanCancel(scheduledAt: string | null): boolean {\n  if (!scheduledAt) return false;\n  const sessionTime = new Date(scheduledAt);\n  const threshold = new Date();\n  threshold.setUTCHours(threshold.getUTCHours() + 1);\n  return sessionTime > threshold;\n}\n\nasync function getSessionRow(env: Env, sessionId: number) {\n  return queryFirst<SessionRow>(\n    env.DB,\n    `SELECT s.*, \n            host.name AS host_name,\n            host.profile_image AS host_profile_image,\n            guest.name AS guest_name,\n            guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.session_id = ?\n      LIMIT 1`,\n    [sessionId]\n  );\n}\n\nasync function ensureSessionExists(env: Env, sessionId: number): Promise<SessionRow> {\n  const row = await getSessionRow(env, sessionId);\n  if (!row) throw new Error('\uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  return row;\n}\n\nexport async function createSession(\n  env: Env,\n  hostUserId: string,\n  payload: SessionCreatePayload\n): Promise<SessionResponseType> {\n  const now = nowIso();\n\n  const title = payload.title ?? payload.topic ?? 'Study Session';\n  const sessionType = payload.sessionType ?? payload.sessionType ?? 'VIDEO';\n  const scheduledAt = payload.scheduledAt;\n  const durationMinutes = payload.durationMinutes ?? payload.duration ?? 30;\n  const maxParticipants = payload.maxParticipants ?? (payload.partnerId ? 2 : 1);\n  const isPublic = payload.isPublic ?? !payload.partnerId;\n  const languageCode = payload.languageCode ?? payload.language ?? null;\n  const skillFocus = payload.skillFocus ?? payload.targetLanguage ?? null;\n  const description = payload.description ?? payload.topic ?? null;\n  const guestUserId = payload.partnerId ?? null;\n  const metadata = {\n    webRtcRoomId: payload.webRtcRoomId ?? null,\n    webRtcRoomType: payload.webRtcRoomType ?? null,\n    targetLanguage: payload.targetLanguage ?? null,\n    topic: payload.topic ?? null,\n    language: payload.language ?? null\n  };\n  const preparationNotes = payload.preparationNotes ?? JSON.stringify(metadata);\n  const meetingUrl = payload.meetingUrl ?? (payload.webRtcRoomId ? `webrtc:${payload.webRtcRoomId}` : null);\n\n  await execute(\n    env.DB,\n    `INSERT INTO sessions (\n        host_user_id,\n        guest_user_id,\n        title,\n        description,\n        session_type,\n        language_code,\n        skill_focus,\n        level_requirement,\n        scheduled_at,\n        duration_minutes,\n        max_participants,\n        current_participants,\n        status,\n        meeting_url,\n        meeting_password,\n        is_recurring,\n        recurrence_pattern,\n        recurrence_end_date,\n        is_public,\n        tags,\n        preparation_notes,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 0, ?, ?, NULL, ?, ?, ?, ?, ?, ?, ?, ?)\n    `,\n    [\n      hostUserId,\n      guestUserId,\n      title,\n      description,\n      sessionType,\n      languageCode,\n      skillFocus,\n      payload.levelRequirement ?? null,\n      scheduledAt,\n      durationMinutes,\n      maxParticipants,\n      SESSION_STATUS.SCHEDULED,\n      meetingUrl,\n      payload.isRecurring ? 1 : 0,\n      payload.recurrencePattern ?? null,\n      payload.recurrenceEndDate ?? null,\n      isPublic ? 1 : 0,\n      payload.tags ?? null,\n      preparationNotes,\n      now,\n      now\n    ]\n  );\n\n  const idRow = await queryFirst<{ id: number }>(\n    env.DB,\n    'SELECT last_insert_rowid() as id'\n  );\n  const sessionId = Number(idRow?.id ?? 0);\n  if (!sessionId) {\n    throw new Error('\uC138\uC158 ID\uB97C \uD655\uC778\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const row = await getSessionRow(env, sessionId);\n  if (!row) {\n    throw new Error('\uC138\uC158 \uC0DD\uC131 \uD6C4 \uB370\uC774\uD130\uB97C \uB85C\uB4DC\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  return mapSessionRow(row, hostUserId);\n}\n\nexport async function listSessions(\n  env: Env,\n  page: number,\n  size: number,\n  statusFilter?: string\n) {\n  const offset = (page - 1) * size;\n  const filters: string[] = [];\n  const params: any[] = [];\n  const status = statusFilter?.toLowerCase();\n  const now = nowIso();\n\n  if (status === 'upcoming') {\n    filters.push('status = ?');\n    params.push(SESSION_STATUS.SCHEDULED);\n    filters.push('scheduled_at >= ?');\n    params.push(now);\n  } else if (status === 'completed' || status === 'done') {\n    filters.push('status = ?');\n    params.push(SESSION_STATUS.COMPLETED);\n  } else if (status === 'cancelled') {\n    filters.push('status = ?');\n    params.push(SESSION_STATUS.CANCELLED);\n  } else if (status === 'in-progress') {\n    filters.push('status = ?');\n    params.push(SESSION_STATUS.IN_PROGRESS);\n  }\n\n  const whereClause = filters.length ? `WHERE ${filters.join(' AND ')}` : '';\n\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions ${whereClause}`,\n    params\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      ${whereClause}\n      ORDER BY s.scheduled_at DESC\n      LIMIT ? OFFSET ?`,\n    params.concat([size, offset])\n  );\n\n  const data = rows.map((row) => mapSessionRow(row));\n  return {\n    data,\n    page,\n    size,\n    total: totalRow?.count ?? 0\n  };\n}\n\nexport async function getSessionById(env: Env, sessionId: number, currentUserId?: string) {\n  const row = await getSessionRow(env, sessionId);\n  if (!row) throw new Error('\uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  return mapSessionRow(row, currentUserId);\n}\n\nexport async function listUserSessions(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number\n) {\n  const offset = (page - 1) * size;\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions\n      WHERE host_user_id = ? OR guest_user_id = ?`,\n    [userId, userId]\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.host_user_id = ? OR s.guest_user_id = ?\n      ORDER BY s.scheduled_at DESC\n      LIMIT ? OFFSET ?`,\n    [userId, userId, size, offset]\n  );\n\n  const data = rows.map((row) => mapSessionRow(row, userId));\n  return {\n    data,\n    page,\n    size,\n    total: totalRow?.count ?? 0\n  };\n}\n\nexport async function listPublicSessions(env: Env, page: number, size: number) {\n  const offset = (page - 1) * size;\n  const now = nowIso();\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions\n      WHERE is_public = 1 AND status = ? AND scheduled_at >= ?`,\n    [SESSION_STATUS.SCHEDULED, now]\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.is_public = 1 AND s.status = ? AND s.scheduled_at >= ?\n      ORDER BY s.scheduled_at ASC\n      LIMIT ? OFFSET ?`,\n    [SESSION_STATUS.SCHEDULED, now, size, offset]\n  );\n\n  const data = rows.map((row) => mapSessionRow(row));\n  return { data, page, size, total: totalRow?.count ?? 0 };\n}\n\nexport async function listSessionsByLanguage(\n  env: Env,\n  languageCode: string,\n  page: number,\n  size: number\n) {\n  const offset = (page - 1) * size;\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions\n      WHERE status = ? AND language_code = ?`,\n    [SESSION_STATUS.SCHEDULED, languageCode]\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.status = ? AND s.language_code = ?\n      ORDER BY s.scheduled_at ASC\n      LIMIT ? OFFSET ?`,\n    [SESSION_STATUS.SCHEDULED, languageCode, size, offset]\n  );\n\n  const data = rows.map((row) => mapSessionRow(row));\n  return { data, page, size, total: totalRow?.count ?? 0 };\n}\n\nexport async function listSessionsByType(\n  env: Env,\n  sessionType: string,\n  page: number,\n  size: number\n) {\n  const offset = (page - 1) * size;\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions\n      WHERE status = ? AND session_type = ?`,\n    [SESSION_STATUS.SCHEDULED, sessionType]\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.status = ? AND s.session_type = ?\n      ORDER BY s.scheduled_at ASC\n      LIMIT ? OFFSET ?`,\n    [SESSION_STATUS.SCHEDULED, sessionType, size, offset]\n  );\n\n  const data = rows.map((row) => mapSessionRow(row));\n  return { data, page, size, total: totalRow?.count ?? 0 };\n}\n\nexport async function listAvailableSessions(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number\n) {\n  const offset = (page - 1) * size;\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions s\n      WHERE s.status = ?\n        AND s.is_public = 1\n        AND s.host_user_id != ?\n        AND (s.max_participants IS NULL OR s.current_participants < s.max_participants)`,\n    [SESSION_STATUS.SCHEDULED, userId]\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.status = ?\n        AND s.is_public = 1\n        AND s.host_user_id != ?\n        AND (s.max_participants IS NULL OR s.current_participants < s.max_participants)\n      ORDER BY s.scheduled_at ASC\n      LIMIT ? OFFSET ?`,\n    [SESSION_STATUS.SCHEDULED, userId, size, offset]\n  );\n\n  const data = rows.map((row) => mapSessionRow(row, userId));\n  return { data, page, size, total: totalRow?.count ?? 0 };\n}\n\nexport async function bookSession(\n  env: Env,\n  userId: string,\n  payload: { sessionId: number; bookingMessage?: string }\n): Promise<SessionBookingResponseType> {\n  const session = await ensureSessionExists(env, payload.sessionId);\n\n  if (session.host_user_id === userId) {\n    throw new Error('\uD638\uC2A4\uD2B8\uB294 \uC790\uC2E0\uC758 \uC138\uC158\uC744 \uC608\uC57D\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n\n  if (session.status !== SESSION_STATUS.SCHEDULED) {\n    throw new Error('\uC608\uC57D\uD560 \uC218 \uC5C6\uB294 \uC138\uC158\uC785\uB2C8\uB2E4.');\n  }\n\n  const maxParticipants = session.max_participants ?? 1;\n  const currentParticipants = Number(session.current_participants ?? 0);\n  if (currentParticipants >= maxParticipants) {\n    throw new Error('\uC138\uC158 \uC815\uC6D0\uC774 \uAC00\uB4DD \uCC3C\uC2B5\uB2C8\uB2E4.');\n  }\n\n  const existing = await queryFirst(\n    env.DB,\n    `SELECT booking_id FROM session_bookings\n      WHERE session_id = ? AND user_id = ? AND status = ?\n      LIMIT 1`,\n    [payload.sessionId, userId, BOOKING_STATUS.CONFIRMED]\n  );\n\n  if (existing) {\n    throw new Error('\uC774\uBBF8 \uC608\uC57D\uB41C \uC138\uC158\uC785\uB2C8\uB2E4.');\n  }\n\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `INSERT INTO session_bookings (\n        session_id, user_id, status, booking_message,\n        cancelled_at, cancellation_reason, attended, feedback_rating,\n        feedback_comment, reminder_sent, reminder_sent_at, created_at, updated_at\n      ) VALUES (?, ?, ?, ?, NULL, NULL, 0, NULL, NULL, 0, NULL, ?, ?)\n    `,\n    [payload.sessionId, userId, BOOKING_STATUS.CONFIRMED, payload.bookingMessage ?? null, now, now]\n  );\n\n  const newParticipants = currentParticipants + 1;\n  await execute(\n    env.DB,\n    `UPDATE sessions\n        SET guest_user_id = CASE WHEN guest_user_id IS NULL THEN ? ELSE guest_user_id END,\n            current_participants = ?,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [userId, newParticipants, now, payload.sessionId]\n  );\n\n  const bookingRow = await queryFirst<BookingRow>(\n    env.DB,\n    `SELECT b.*, \n            s.title AS session_title,\n            s.scheduled_at AS session_scheduled_at,\n            s.duration_minutes AS session_duration_minutes,\n            s.language_code AS session_language_code,\n            s.host_user_id,\n            host.name AS host_user_name,\n            host.profile_image AS host_user_profile_image\n       FROM session_bookings b\n       JOIN sessions s ON s.session_id = b.session_id\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n      WHERE b.session_id = ? AND b.user_id = ?\n      ORDER BY b.created_at DESC\n      LIMIT 1`,\n    [payload.sessionId, userId]\n  );\n\n  if (!bookingRow) throw new Error('\uC608\uC57D \uC815\uBCF4\uB97C \uBD88\uB7EC\uC62C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  return mapBookingRow(bookingRow);\n}\n\nexport async function joinSession(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  bookingMessage?: string\n): Promise<SessionResponseType> {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id === userId) {\n    return mapSessionRow(session, userId);\n  }\n  await bookSession(env, userId, { sessionId, bookingMessage });\n  const updated = await getSessionRow(env, sessionId);\n  if (!updated) {\n    throw new Error('\uC138\uC158 \uC815\uBCF4\uB97C \uAC31\uC2E0\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  return mapSessionRow(updated, userId);\n}\n\nexport async function cancelBooking(\n  env: Env,\n  userId: string,\n  bookingId: number,\n  reason?: string\n) {\n  const booking = await queryFirst<BookingWithSessionRow>(\n    env.DB,\n    `SELECT b.*, s.host_user_id, s.guest_user_id, s.current_participants\n       FROM session_bookings b\n       JOIN sessions s ON s.session_id = b.session_id\n      WHERE b.booking_id = ?\n      LIMIT 1`,\n    [bookingId]\n  );\n\n  if (!booking) throw new Error('\uC608\uC57D\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  if (booking.user_id !== userId) throw new Error('\uC608\uC57D\uC744 \uCDE8\uC18C\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  if (booking.status !== BOOKING_STATUS.CONFIRMED) throw new Error('\uC774\uBBF8 \uCC98\uB9AC\uB41C \uC608\uC57D\uC785\uB2C8\uB2E4.');\n\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE session_bookings\n       SET status = ?, cancelled_at = ?, cancellation_reason = ?, updated_at = ?\n     WHERE booking_id = ?`,\n    [BOOKING_STATUS.CANCELLED, now, reason ?? null, now, bookingId]\n  );\n\n  const newParticipants = Math.max(Number(booking.current_participants ?? 1) - 1, 0);\n  const guestUserId = booking.guest_user_id === userId ? null : booking.guest_user_id;\n\n  await execute(\n    env.DB,\n    `UPDATE sessions\n        SET guest_user_id = ?,\n            current_participants = ?,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [guestUserId, newParticipants, now, booking.session_id]\n  );\n}\n\nexport async function listUserBookings(env: Env, userId: string, page: number, size: number) {\n  const offset = (page - 1) * size;\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    'SELECT COUNT(*) as count FROM session_bookings WHERE user_id = ?',\n    [userId]\n  );\n\n  const rows = await query<BookingRow>(\n    env.DB,\n    `SELECT b.*, s.title AS session_title, s.scheduled_at AS session_scheduled_at,\n            s.duration_minutes AS session_duration_minutes, s.language_code AS session_language_code,\n            s.host_user_id, host.name AS host_user_name, host.profile_image AS host_user_profile_image\n       FROM session_bookings b\n       JOIN sessions s ON s.session_id = b.session_id\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n      WHERE b.user_id = ?\n      ORDER BY b.created_at DESC\n      LIMIT ? OFFSET ?`,\n    [userId, size, offset]\n  );\n\n  const data = rows.map((row) => mapBookingRow(row));\n  return { data, page, size, total: totalRow?.count ?? 0 };\n}\n\nexport async function getUserCalendar(\n  env: Env,\n  userId: string,\n  start: string,\n  end: string\n): Promise<SessionCalendarResponse> {\n  const rows = await query<CalendarRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, guest.name AS guest_name\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE s.scheduled_at BETWEEN ? AND ?\n        AND (s.host_user_id = ? OR s.guest_user_id = ?)\n      ORDER BY s.scheduled_at ASC`,\n    [start, end, userId, userId]\n  );\n\n  const events = rows.map((row) => ({\n    sessionId: row.session_id,\n    title: row.title,\n    description: row.description ?? undefined,\n    startTime: row.scheduled_at,\n    endTime: new Date(new Date(row.scheduled_at).getTime() + Number(row.duration_minutes ?? 0) * 60000).toISOString(),\n    eventType: 'SESSION',\n    status: row.status,\n    isHost: row.host_user_id === userId,\n    color: row.host_user_id === userId ? '#4CAF50' : '#2196F3'\n  }));\n\n  // simple hourly slots between range\n  const availableSlots: SessionCalendarResponse['availableSlots'] = [];\n  const startDate = new Date(start);\n  const endDate = new Date(end);\n  let cursor = new Date(startDate);\n  while (cursor < endDate) {\n    const next = new Date(cursor.getTime() + 60 * 60000);\n    availableSlots.push({ startTime: cursor.toISOString(), endTime: next.toISOString(), isAvailable: true });\n    cursor = next;\n  }\n\n  return { events, availableSlots };\n}\n\nexport async function startSession(env: Env, userId: string, sessionId: number) {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uC138\uC158\uC744 \uC2DC\uC791\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  await execute(\n    env.DB,\n    'UPDATE sessions SET status = ?, started_at = ?, updated_at = ? WHERE session_id = ?',\n    [SESSION_STATUS.IN_PROGRESS, now, now, sessionId]\n  );\n}\n\nexport async function endSession(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  summary?: { duration?: number; notes?: string; rating?: number }\n) {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uC138\uC158\uC744 \uC885\uB8CC\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  await execute(\n    env.DB,\n    'UPDATE sessions SET status = ?, ended_at = ?, updated_at = ? WHERE session_id = ?',\n    [SESSION_STATUS.COMPLETED, now, now, sessionId]\n  );\n  if (summary) {\n    await mergeSessionSummary(env, sessionId, {\n      sessionId,\n      durationMinutes: summary.duration ?? undefined,\n      notes: summary.notes,\n      rating: summary.rating,\n      updatedAt: now,\n      highlights: [],\n      actionItems: []\n    });\n  }\n}\n\nexport async function cancelSession(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  reason?: string\n) {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uC138\uC158\uC744 \uCDE8\uC18C\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE sessions\n        SET status = ?, cancelled_at = ?, cancellation_reason = ?, updated_at = ?\n      WHERE session_id = ?`,\n    [SESSION_STATUS.CANCELLED, now, reason ?? null, now, sessionId]\n  );\n\n  await execute(\n    env.DB,\n    `UPDATE session_bookings\n        SET status = ?, cancelled_at = ?, cancellation_reason = ?, updated_at = ?\n      WHERE session_id = ? AND status = ?`,\n    [BOOKING_STATUS.CANCELLED, now, reason ?? 'Session cancelled by host', now, sessionId, BOOKING_STATUS.CONFIRMED]\n  );\n}\n\n\nasync function mergeSessionSummary(\n  env: Env,\n  sessionId: number,\n  update: Partial<SessionSummaryResponse> & { sessionId: number }\n): Promise<SessionSummaryResponse> {\n  const existingRow = await fetchSummaryRow(env, sessionId);\n  const existing = existingRow ? deserializeSummaryRow(existingRow) : null;\n  const combinedFeedback = {\n    ...(existing?.feedback ?? {}),\n    ...(update.feedback ?? {})\n  } as SessionSummaryResponse['feedback'];\n  const feedback = combinedFeedback && Object.keys(combinedFeedback).length > 0 ? combinedFeedback : existing?.feedback;\n  const highlights = update.highlights ?? existing?.highlights ?? [];\n  const actionItems = update.actionItems ?? existing?.actionItems ?? [];\n  const merged: SessionSummaryResponse = {\n    sessionId,\n    notes: update.notes ?? existing?.notes,\n    durationMinutes: update.durationMinutes ?? existing?.durationMinutes,\n    rating: update.rating ?? existing?.rating,\n    highlights,\n    actionItems,\n    feedback,\n    updatedAt: update.updatedAt ?? nowIso()\n  };\n  await upsertSummaryRow(env, serializeSummaryResponse(merged));\n  return merged;\n}\n\nasync function getStoredSessionSummary(env: Env, sessionId: number): Promise<SessionSummaryResponse | null> {\n  const row = await fetchSummaryRow(env, sessionId);\n  return row ? deserializeSummaryRow(row) : null;\n}\n\nasync function buildDefaultSessionSummary(env: Env, sessionId: number): Promise<SessionSummaryResponse> {\n  const row = await getSessionRow(env, sessionId);\n  if (!row) {\n    throw new Error('\uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  return {\n    sessionId,\n    notes: undefined,\n    durationMinutes: row.duration_minutes ?? undefined,\n    rating: undefined,\n    highlights: [],\n    actionItems: [],\n    feedback: undefined,\n    updatedAt: row.updated_at\n  };\n}\n\nfunction parsePreparationNotes(raw: string | null): any {\n  if (!raw) return {};\n  try {\n    return JSON.parse(raw);\n  } catch {\n    return { notes: raw };\n  }\n}\n\nexport async function rescheduleSession(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  payload: { scheduledAt?: string; duration?: number; reason?: string }\n): Promise<SessionResponseType> {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uC138\uC158 \uC77C\uC815\uC744 \uBCC0\uACBD\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  const newScheduledAt = payload.scheduledAt ?? session.scheduled_at;\n  const newDuration = payload.duration ?? session.duration_minutes ?? 30;\n  const notes = parsePreparationNotes(session.preparation_notes ?? null);\n  const reason = payload.reason?.trim();\n  if (reason) {\n    const history = Array.isArray(notes.rescheduleHistory) ? notes.rescheduleHistory : [];\n    history.push({ reason, updatedAt: now, userId });\n    notes.rescheduleHistory = history;\n  }\n  notes.lastRescheduleAt = now;\n  notes.lastRescheduleBy = userId;\n  await execute(\n    env.DB,\n    `UPDATE sessions\n        SET scheduled_at = ?,\n            duration_minutes = ?,\n            preparation_notes = ?,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [newScheduledAt, newDuration, JSON.stringify(notes), now, sessionId]\n  );\n  const updated = await getSessionRow(env, sessionId);\n  if (!updated) throw new Error('\uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  return mapSessionRow(updated, userId);\n}\n\ninterface SessionFeedbackPayload {\n  rating?: number;\n  comment?: string;\n  partnerRating?: number;\n  partnerComment?: string;\n  tags?: string[];\n  improvementAreas?: string[];\n  wouldRecommend?: boolean;\n}\n\nexport async function submitSessionFeedback(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  feedback: SessionFeedbackPayload\n): Promise<SessionSummaryResponse> {\n  const now = nowIso();\n  const booking = await queryFirst<BookingRow>(\n    env.DB,\n    `SELECT * FROM session_bookings WHERE session_id = ? AND user_id = ? LIMIT 1`,\n    [sessionId, userId]\n  );\n  if (booking) {\n    const feedbackComment = JSON.stringify({\n      comment: feedback.comment ?? null,\n      partnerRating: feedback.partnerRating ?? null,\n      partnerComment: feedback.partnerComment ?? null,\n      tags: feedback.tags ?? [],\n      improvementAreas: feedback.improvementAreas ?? [],\n      wouldRecommend: feedback.wouldRecommend ?? false\n    });\n    await execute(\n      env.DB,\n      `UPDATE session_bookings\n          SET feedback_rating = ?,\n              feedback_comment = ?,\n              attended = 1,\n              updated_at = ?\n        WHERE booking_id = ?`,\n      [feedback.rating ?? null, feedbackComment, now, booking.booking_id]\n    );\n  }\n  return mergeSessionSummary(env, sessionId, {\n    sessionId,\n    feedback: {\n      rating: feedback.rating,\n      comment: feedback.comment,\n      partnerRating: feedback.partnerRating,\n      partnerComment: feedback.partnerComment,\n      tags: feedback.tags,\n      improvementAreas: feedback.improvementAreas,\n      wouldRecommend: feedback.wouldRecommend\n    },\n    updatedAt: now\n  });\n}\n\nexport async function listSessionHistory(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number,\n  partnerId?: string\n) {\n  const offset = (page - 1) * size;\n  const filters = ['(s.host_user_id = ? OR s.guest_user_id = ?)'];\n  const params: any[] = [userId, userId];\n  if (partnerId) {\n    filters.push('((s.host_user_id = ? AND s.guest_user_id = ?) OR (s.host_user_id = ? AND s.guest_user_id = ?))');\n    params.push(userId, partnerId, partnerId, userId);\n  }\n  filters.push('s.status IN (?, ?)');\n  params.push(SESSION_STATUS.COMPLETED, SESSION_STATUS.CANCELLED);\n  const whereClause = `WHERE ${filters.join(' AND ')}`;\n\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM sessions s ${whereClause}`,\n    params\n  );\n\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      ${whereClause}\n      ORDER BY s.scheduled_at DESC\n      LIMIT ? OFFSET ?`,\n    params.concat([size, offset])\n  );\n\n  const data = rows.map((row) => mapSessionRow(row, userId));\n  return { data, page, size, total: totalRow?.count ?? 0 };\n}\n\nexport async function getSessionStats(\n  env: Env,\n  userId: string,\n  period: 'week' | 'month' | 'year'\n): Promise<SessionStatsResponseType> {\n  const now = new Date();\n  const start = new Date(now);\n  if (period === 'week') {\n    start.setUTCDate(start.getUTCDate() - 7);\n  } else if (period === 'month') {\n    start.setUTCMonth(start.getUTCMonth() - 1);\n  } else {\n    start.setUTCFullYear(start.getUTCFullYear() - 1);\n  }\n  const startIso = start.toISOString();\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE (s.host_user_id = ? OR s.guest_user_id = ?)\n        AND s.scheduled_at >= ?\n      ORDER BY s.scheduled_at DESC`,\n    [userId, userId, startIso]\n  );\n\n  let completed = 0;\n  let cancelled = 0;\n  let upcoming = 0;\n  let totalMinutes = 0;\n  const partners = new Set<string>();\n  const completedDates = new Set<string>();\n  let lastSessionAt: string | undefined;\n\n  for (const row of rows) {\n    if (!lastSessionAt || row.scheduled_at > lastSessionAt) {\n      lastSessionAt = row.scheduled_at;\n    }\n    const otherUser = row.host_user_id === userId ? row.guest_user_id : row.host_user_id;\n    if (otherUser) partners.add(otherUser);\n    if (row.status === SESSION_STATUS.COMPLETED) {\n      completed += 1;\n      totalMinutes += Number(row.duration_minutes ?? 0);\n      completedDates.add(new Date(row.scheduled_at).toISOString().slice(0, 10));\n    } else if (row.status === SESSION_STATUS.CANCELLED) {\n      cancelled += 1;\n    } else if (row.status === SESSION_STATUS.SCHEDULED) {\n      upcoming += 1;\n    }\n  }\n\n  const averageDuration = completed > 0 ? totalMinutes / completed : 0;\n  const streakDays = (() => {\n    if (completedDates.size === 0) return 0;\n    const cursor = new Date();\n    let streak = 0;\n    for (;;) {\n      const key = cursor.toISOString().slice(0, 10);\n      if (completedDates.has(key)) {\n        streak += 1;\n        cursor.setUTCDate(cursor.getUTCDate() - 1);\n      } else {\n        break;\n      }\n    }\n    return streak;\n  })();\n\n  return {\n    period,\n    totalSessions: rows.length,\n    completedSessions: completed,\n    cancelledSessions: cancelled,\n    upcomingSessions: upcoming,\n    totalMinutes,\n    averageDuration,\n    partnersCount: partners.size,\n    streakDays,\n    lastSessionAt\n  };\n}\n\nexport async function listUpcomingSessions(\n  env: Env,\n  userId: string,\n  limit: number\n): Promise<SessionResponseType[]> {\n  const rows = await query<SessionRow>(\n    env.DB,\n    `SELECT s.*, host.name AS host_name, host.profile_image AS host_profile_image,\n            guest.name AS guest_name, guest.profile_image AS guest_profile_image\n       FROM sessions s\n       LEFT JOIN users host ON host.user_id = s.host_user_id\n       LEFT JOIN users guest ON guest.user_id = s.guest_user_id\n      WHERE (s.host_user_id = ? OR s.guest_user_id = ?)\n        AND s.status = ?\n        AND s.scheduled_at >= ?\n      ORDER BY s.scheduled_at ASC\n      LIMIT ?`,\n    [userId, userId, SESSION_STATUS.SCHEDULED, nowIso(), limit]\n  );\n  return rows.map((row) => mapSessionRow(row, userId));\n}\n\nexport async function getSessionParticipants(\n  env: Env,\n  sessionId: number\n): Promise<SessionParticipantInfo[]> {\n  const row = await getSessionRow(env, sessionId);\n  if (!row) throw new Error('\uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const participants: SessionParticipantInfo[] = [];\n  participants.push({\n    userId: row.host_user_id,\n    name: row.host_name ?? undefined,\n    profileImage: row.host_profile_image ?? undefined,\n    role: 'HOST',\n    joinedAt: row.created_at\n  });\n  if (row.guest_user_id) {\n    participants.push({\n      userId: row.guest_user_id,\n      name: row.guest_name ?? undefined,\n      profileImage: row.guest_profile_image ?? undefined,\n      role: 'GUEST',\n      joinedAt: row.created_at\n    });\n  }\n  const bookingRows = await query<BookingRow & { name?: string | null; profile_image?: string | null }>(\n    env.DB,\n    `SELECT b.*, u.name, u.profile_image\n       FROM session_bookings b\n       LEFT JOIN users u ON u.user_id = b.user_id\n      WHERE b.session_id = ? AND b.status = ?`,\n    [sessionId, BOOKING_STATUS.CONFIRMED]\n  );\n  for (const booking of bookingRows) {\n    if (booking.user_id === row.host_user_id || booking.user_id === row.guest_user_id) {\n      continue;\n    }\n    participants.push({\n      userId: booking.user_id,\n      name: booking.name ?? undefined,\n      profileImage: booking.profile_image ?? undefined,\n      role: 'BOOKED',\n      joinedAt: booking.created_at\n    });\n  }\n  return participants;\n}\n\nexport async function generateSessionInvite(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  expiresInHours: number = 24\n): Promise<SessionInviteResponse> {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uCD08\uB300 \uB9C1\uD06C\uB97C \uC0DD\uC131\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const token = crypto.randomUUID();\n  const hours = Number.isFinite(expiresInHours) ? Math.max(1, expiresInHours) : DEFAULT_INVITE_EXPIRATION_HOURS;\n  const now = nowIso();\n  const expiresAt = new Date(Date.now() + hours * 3600 * 1000).toISOString();\n  await insertInviteRow(env, {\n    invite_token: token,\n    session_id: sessionId,\n    inviter_user_id: userId,\n    expires_at: expiresAt,\n    created_at: now,\n    used_at: null,\n    used_by: null\n  });\n  const baseUrl = env.API_BASE_URL ?? '';\n  const joinUrl = baseUrl ? `${baseUrl}/sessions/join?token=${token}` : `/sessions/join?token=${token}`;\n  return { sessionId, inviteToken: token, expiresAt, joinUrl };\n}\n\nexport async function acceptSessionInvite(\n  env: Env,\n  userId: string,\n  token: string\n): Promise<SessionResponseType> {\n  const record = await fetchInviteRow(env, token);\n  if (!record) {\n    throw new Error('\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uCD08\uB300 \uD1A0\uD070\uC785\uB2C8\uB2E4.');\n  }\n  if (record.used_at) {\n    throw new Error('\uC774\uBBF8 \uC0AC\uC6A9\uB41C \uCD08\uB300 \uD1A0\uD070\uC785\uB2C8\uB2E4.');\n  }\n  if (new Date(record.expires_at).getTime() < Date.now()) {\n    throw new Error('\uCD08\uB300 \uD1A0\uD070\uC774 \uB9CC\uB8CC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  await markInviteUsed(env, token, userId, now);\n  return joinSession(env, userId, record.session_id);\n}\n\nexport async function getSessionNotifications(\n  env: Env,\n  sessionId: number,\n  userId: string\n): Promise<SessionNotificationSettings> {\n  const row = await fetchNotificationRow(env, sessionId, userId);\n  if (row) {\n    return {\n      reminderBefore: row.reminder_before,\n      enableEmailReminder: intToBool(row.enable_email),\n      enablePushReminder: intToBool(row.enable_push),\n      enableSmsReminder: intToBool(row.enable_sms),\n      updatedAt: row.updated_at\n    };\n  }\n  return { ...NOTIFICATION_DEFAULTS, updatedAt: nowIso() };\n}\n\nexport async function updateSessionNotifications(\n  env: Env,\n  sessionId: number,\n  userId: string,\n  settings: Partial<SessionNotificationSettings>\n): Promise<SessionNotificationSettings> {\n  const current = await getSessionNotifications(env, sessionId, userId);\n  const merged: SessionNotificationSettings = {\n    reminderBefore: settings.reminderBefore ?? current.reminderBefore,\n    enableEmailReminder: settings.enableEmailReminder ?? current.enableEmailReminder,\n    enablePushReminder: settings.enablePushReminder ?? current.enablePushReminder,\n    enableSmsReminder: settings.enableSmsReminder ?? current.enableSmsReminder,\n    updatedAt: nowIso()\n  };\n  await upsertNotificationRow(env, sessionId, userId, merged);\n  return merged;\n}\n\nexport async function requestSessionRecording(\n  env: Env,\n  userId: string,\n  sessionId: number,\n  options: { recordAudio?: boolean; recordVideo?: boolean; recordTranscript?: boolean; language?: string; targetLanguage?: string }\n): Promise<SessionRecordingStatus> {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uB179\uD654\uB97C \uC694\uCCAD\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const status: SessionRecordingStatus = {\n    sessionId,\n    status: 'scheduled',\n    recordAudio: options.recordAudio ?? true,\n    recordVideo: options.recordVideo ?? false,\n    recordTranscript: options.recordTranscript ?? true,\n    downloadUrl: undefined,\n    message: options.language ? `Recording language: ${options.language}` : undefined,\n    updatedAt: nowIso()\n  };\n  await upsertRecordingRow(env, sessionId, status);\n  return status;\n}\n\nexport async function stopSessionRecording(\n  env: Env,\n  userId: string,\n  sessionId: number\n): Promise<SessionRecordingStatus> {\n  const session = await ensureSessionExists(env, sessionId);\n  if (session.host_user_id !== userId) {\n    throw new Error('\uB179\uD654\uB97C \uC911\uB2E8\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const current = await fetchRecordingRow(env, sessionId);\n  const status: SessionRecordingStatus = {\n    sessionId,\n    status: 'completed',\n    recordAudio: current ? intToBool(current.record_audio) : true,\n    recordVideo: current ? intToBool(current.record_video) : false,\n    recordTranscript: current ? intToBool(current.record_transcript) : true,\n    downloadUrl: current?.download_url ?? `/sessions/${sessionId}/recordings/latest`,\n    updatedAt: nowIso()\n  };\n  await upsertRecordingRow(env, sessionId, status);\n  return status;\n}\n\nexport async function getSessionRecording(\n  env: Env,\n  sessionId: number\n): Promise<SessionRecordingStatus> {\n  const stored = await fetchRecordingRow(env, sessionId);\n  if (stored) {\n    return {\n      sessionId,\n      status: stored.status as SessionRecordingStatus['status'],\n      recordAudio: intToBool(stored.record_audio),\n      recordVideo: intToBool(stored.record_video),\n      recordTranscript: intToBool(stored.record_transcript),\n      downloadUrl: stored.download_url ?? undefined,\n      message: stored.message ?? undefined,\n      updatedAt: stored.updated_at\n    };\n  }\n  return {\n    sessionId,\n    status: 'idle',\n    recordAudio: false,\n    recordVideo: false,\n    recordTranscript: false,\n    updatedAt: nowIso()\n  };\n}\n\nexport async function getSessionSummary(\n  env: Env,\n  sessionId: number\n): Promise<SessionSummaryResponse> {\n  const cached = await getStoredSessionSummary(env, sessionId);\n  if (cached) return cached;\n  return buildDefaultSessionSummary(env, sessionId);\n}\n\nexport async function getSessionTranscript(\n  env: Env,\n  sessionId: number,\n  language: string = 'default'\n): Promise<SessionTranscriptResponse> {\n  const row = await fetchTranscriptRow(env, sessionId, language);\n  if (row) {\n    return deserializeTranscriptRow(row);\n  }\n  const now = nowIso();\n  const transcript: SessionTranscriptResponse = {\n    sessionId,\n    language,\n    segments: [],\n    generatedAt: now\n  };\n  await upsertTranscriptRow(env, {\n    session_id: sessionId,\n    language,\n    segments: JSON.stringify(transcript.segments),\n    generated_at: now,\n    updated_at: now\n  });\n  return transcript;\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport {\n  createNotification,\n  createNotificationFromTemplate,\n  listNotifications,\n  getNotificationById,\n  markAsRead,\n  markAllAsRead,\n  deleteNotification,\n  deleteAllNotifications,\n  deleteNotificationsBatch,\n  getNotificationPreferences,\n  updateNotificationPreferences,\n  getNotificationStats,\n  getUnreadCount,\n  registerPushToken,\n  unregisterPushToken,\n  listNotificationCategories,\n  listScheduledNotifications,\n  subscribeToNotificationTopics,\n  unsubscribeFromNotificationTopics,\n  scheduleNotification,\n  sendTestNotification,\n  sendUrgentNotifications,\n  cancelScheduledNotification\n} from '../services/notifications';\n\nconst notificationsRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\nfunction parseBoolean(value: string | undefined): boolean | undefined {\n  if (value === undefined) return undefined;\n  const lowered = value.toLowerCase();\n  if (['true', '1', 'yes', 'y'].includes(lowered)) return true;\n  if (['false', '0', 'no', 'n'].includes(lowered)) return false;\n  return undefined;\n}\n\nnotificationsRoutes.use('*', requireAuth);\n\nnotificationsRoutes.get('/', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const page = Number(c.req.query('page')) || 1;\n  const size = Number(c.req.query('size')) || 20;\n  const unreadOnly = parseBoolean(c.req.query('unreadOnly')) ?? undefined;\n  const isRead = parseBoolean(c.req.query('isRead'));\n\n  let status: string | undefined;\n  if (isRead === true) status = 'READ';\n  else if (isRead === false) status = 'UNREAD';\n\n  const result = await listNotifications(c.env, userId, {\n    page,\n    size,\n    category: c.req.query('category') ?? c.req.query('type') ?? undefined,\n    status,\n    unreadOnly\n  });\n\n  return successResponse(c, {\n    notifications: result.data,\n    unreadCount: result.unreadCount,\n    pagination: {\n      page: result.page,\n      size: result.size,\n      total: result.total,\n      totalPages: Math.ceil(result.total / result.size)\n    }\n  });\n});\n\nnotificationsRoutes.get('/unread', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const result = await listNotifications(c.env, userId, { page: 1, size: 50, unreadOnly: true });\n  return successResponse(c, { notifications: result.data, unreadCount: result.unreadCount });\n});\n\nnotificationsRoutes.get('/unread-count', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const count = await getUnreadCount(c.env, userId);\n  return successResponse(c, { unreadCount: count });\n});\n\nnotificationsRoutes.get('/categories', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const categories = await listNotificationCategories(c.env, userId);\n  return successResponse(c, categories);\n});\n\nnotificationsRoutes.get('/history', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const page = Math.max(Number(c.req.query('page') ?? '1'), 1);\n  const size = Math.max(Math.min(Number(c.req.query('size') ?? '20'), 100), 1);\n  const category = c.req.query('category') ?? undefined;\n  const status = c.req.query('status') ?? undefined;\n  const unreadOnlyParam = c.req.query('unreadOnly');\n  const unreadOnly = typeof unreadOnlyParam === 'string'\n    ? ['true', '1'].includes(unreadOnlyParam.toLowerCase())\n    : false;\n  const result = await listNotifications(c.env, userId, {\n    page,\n    size,\n    category,\n    status,\n    unreadOnly\n  });\n  return successResponse(c, result);\n});\n\nnotificationsRoutes.get('/scheduled', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const page = Math.max(Number(c.req.query('page') ?? '1'), 1);\n  const size = Math.max(Math.min(Number(c.req.query('size') ?? '20'), 100), 1);\n  const result = await listScheduledNotifications(c.env, userId, page, size);\n  return successResponse(c, result);\n});\n\nnotificationsRoutes.get('/category/:category', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const category = c.req.param('category');\n  const page = Number(c.req.query('page')) || 1;\n  const size = Number(c.req.query('size')) || 20;\n  const result = await listNotifications(c.env, userId, { page, size, category });\n  return successResponse(c, {\n    notifications: result.data,\n    pagination: {\n      page: result.page,\n      size: result.size,\n      total: result.total,\n      totalPages: Math.ceil(result.total / result.size)\n    }\n  });\n});\n\nnotificationsRoutes.get('/:notificationId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const notificationId = Number(c.req.param('notificationId'));\n  if (!Number.isFinite(notificationId)) throw new AppError('Invalid notificationId', 400, 'INVALID_PATH_PARAM');\n  const record = await getNotificationById(c.env, notificationId);\n  if (record && record.notificationId && record.notificationId !== notificationId) {\n    throw new AppError('\uC54C\uB9BC\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'NOTIFICATION_NOT_FOUND');\n  }\n  if (record && record.userId !== userId) {\n    throw new AppError('\uC811\uADFC \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.', 403, 'NOTIFICATION_FORBIDDEN');\n  }\n  return successResponse(c, record);\n});\n\nnotificationsRoutes.post('/', async (c) => {\n  const body = await c.req.json();\n  const userId = typeof body.userId === 'string' ? body.userId : c.get('userId');\n  if (!userId) throw new AppError('userId is required', 400, 'INVALID_PAYLOAD');\n  if (!body.title || !body.content || !body.type) {\n    throw new AppError('type, title, content are required', 400, 'INVALID_PAYLOAD');\n  }\n  const record = await createNotification(c.env, {\n    userId,\n    type: body.type,\n    title: body.title,\n    content: body.content,\n    actionUrl: body.actionUrl,\n    actionData: body.actionData,\n    imageUrl: body.imageUrl,\n    iconUrl: body.iconUrl,\n    priority: body.priority,\n    category: body.category,\n    scheduledAt: body.scheduledAt,\n    expiresAt: body.expiresAt,\n    isPersistent: body.isPersistent,\n    senderUserId: body.senderUserId,\n    templateId: body.templateId,\n    templateVariables: body.templateVariables,\n    deliveryChannels: body.deliveryChannels\n  });\n  return successResponse(c, record);\n});\n\nnotificationsRoutes.post('/schedule', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const notification = (body as any).notification ?? body;\n  const scheduledAt = typeof (body as any).scheduledAt === 'string'\n    ? (body as any).scheduledAt\n    : typeof notification?.scheduledAt === 'string'\n      ? notification.scheduledAt\n      : undefined;\n  if (!scheduledAt) {\n    throw new AppError('scheduledAt is required', 400, 'INVALID_PAYLOAD');\n  }\n  const record = await scheduleNotification(c.env, userId, {\n    title: notification?.title ?? 'Scheduled Notification',\n    message: notification?.message ?? notification?.content ?? '\uC54C\uB9BC \uB0B4\uC6A9\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.',\n    type: notification?.type ?? 'SCHEDULED',\n    data: notification?.data ?? notification?.actionData ?? null,\n    scheduledAt,\n    recurring: notification?.recurring ?? (body as any).recurring ?? null,\n    priority: notification?.priority,\n    category: notification?.category ?? 'scheduled',\n    deliveryChannels: notification?.deliveryChannels ?? undefined\n  });\n  return successResponse(c, record);\n});\n\nnotificationsRoutes.post('/subscribe', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const topics = Array.isArray((body as any).topics) ? (body as any).topics : [];\n  const updated = await subscribeToNotificationTopics(c.env, userId, topics);\n  return successResponse(c, { topics: updated });\n});\n\nnotificationsRoutes.post('/unsubscribe', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const topics = Array.isArray((body as any).topics) ? (body as any).topics : [];\n  const updated = await unsubscribeFromNotificationTopics(c.env, userId, topics);\n  return successResponse(c, { topics: updated });\n});\n\nnotificationsRoutes.post('/template/:templateId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const templateId = c.req.param('templateId');\n  const body = await c.req.json().catch(() => ({}));\n  const record = await createNotificationFromTemplate(c.env, userId, templateId, body.variables, {\n    type: body.type,\n    title: body.title,\n    content: body.content,\n    actionUrl: body.actionUrl,\n    actionData: body.actionData\n  });\n  return successResponse(c, record);\n});\n\nnotificationsRoutes.post('/test', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const record = await sendTestNotification(c.env, userId, typeof (body as any).type === 'string' ? (body as any).type : null);\n  return successResponse(c, record);\n});\n\nnotificationsRoutes.post('/urgent', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const notification = (body as any).notification ?? body;\n  const recipients = Array.isArray((body as any).recipients) ? (body as any).recipients : [];\n  const result = await sendUrgentNotifications(c.env, userId, recipients, {\n    title: notification?.title ?? '\uAE34\uAE09 \uC54C\uB9BC',\n    message: notification?.message ?? notification?.content ?? '',\n    type: notification?.type ?? 'URGENT',\n    expiresAt: notification?.expiresAt ?? undefined,\n    priority: notification?.priority ?? 4,\n    category: notification?.category ?? 'urgent',\n    data: notification?.data ?? notification?.actionData ?? null\n  });\n  return successResponse(c, result);\n});\n\nnotificationsRoutes.patch('/:notificationId/read', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const notificationId = Number(c.req.param('notificationId'));\n  if (!Number.isFinite(notificationId)) throw new AppError('Invalid notificationId', 400, 'INVALID_PATH_PARAM');\n  await markAsRead(c.env, userId, notificationId);\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.patch('/read-all', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  await markAllAsRead(c.env, userId);\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.delete('/batch', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const rawIds: unknown[] = Array.isArray((body as any).notificationIds)\n    ? (body as any).notificationIds\n    : Array.isArray((body as any).ids)\n      ? (body as any).ids\n      : Array.isArray(body)\n        ? body\n        : [];\n  const ids = rawIds\n    .map((value): number => Number(value))\n    .filter((id): id is number => Number.isFinite(id));\n  await deleteNotificationsBatch(c.env, userId, ids);\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.delete('/scheduled/:notificationId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const notificationId = Number(c.req.param('notificationId'));\n  if (!Number.isFinite(notificationId)) {\n    throw new AppError('Invalid notificationId', 400, 'INVALID_PATH_PARAM');\n  }\n  const cancelled = await cancelScheduledNotification(c.env, userId, notificationId);\n  if (!cancelled) {\n    throw new AppError('\uC608\uC57D \uC54C\uB9BC\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'SCHEDULED_NOTIFICATION_NOT_FOUND');\n  }\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.delete('/:notificationId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const notificationId = Number(c.req.param('notificationId'));\n  if (!Number.isFinite(notificationId)) throw new AppError('Invalid notificationId', 400, 'INVALID_PATH_PARAM');\n  await deleteNotification(c.env, userId, notificationId);\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.delete('/all', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  await deleteAllNotifications(c.env, userId);\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.get('/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const prefs = await getNotificationPreferences(c.env, userId);\n  return successResponse(c, prefs);\n});\n\nfunction mapNotificationSettingsPayload(body: Record<string, unknown>): Record<string, unknown> {\n  const payload: Record<string, unknown> = {};\n\n  const booleanMap: Array<[string, string]> = [\n    ['notificationsEnabled', 'notificationsEnabled'],\n    ['notificationsEnabled', 'notifications'],\n    ['pushEnabled', 'pushEnabled'],\n    ['pushEnabled', 'pushNotifications'],\n    ['emailEnabled', 'emailEnabled'],\n    ['emailEnabled', 'emailNotifications'],\n    ['smsEnabled', 'smsEnabled'],\n    ['smsEnabled', 'smsNotifications'],\n    ['sessionNotifications', 'sessionNotifications'],\n    ['sessionReminders', 'sessionReminderNotifications'],\n    ['matchingNotifications', 'matchRequestNotifications'],\n    ['chatNotifications', 'chatMessageNotifications'],\n    ['systemNotifications', 'systemNotifications'],\n    ['marketingNotifications', 'marketingNotifications'],\n    ['quietHoursEnabled', 'quietHoursEnabled'],\n    ['digestEnabled', 'digestEnabled']\n  ];\n\n  for (const [targetKey, sourceKey] of booleanMap) {\n    if (Object.prototype.hasOwnProperty.call(body, sourceKey)) {\n      payload[targetKey] = Boolean((body as any)[sourceKey]);\n    }\n  }\n\n  if (typeof body.quietHours === 'object' && body.quietHours !== null) {\n    const quiet = body.quietHours as { start?: string; end?: string };\n    if (quiet.start !== undefined) payload.quietHoursStart = quiet.start ?? null;\n    if (quiet.end !== undefined) payload.quietHoursEnd = quiet.end ?? null;\n  }\n\n  if (body.quietHoursStart !== undefined) payload.quietHoursStart = body.quietHoursStart ?? null;\n  if (body.quietHoursEnd !== undefined) payload.quietHoursEnd = body.quietHoursEnd ?? null;\n\n  if (body.notificationSound !== undefined) payload.notificationSound = body.notificationSound ?? null;\n  if (body.timezone !== undefined) payload.timezone = body.timezone ?? null;\n  if (body.notificationLanguage !== undefined) payload.notificationLanguage = body.notificationLanguage ?? null;\n  if (body.digestFrequency !== undefined) payload.digestFrequency = body.digestFrequency ?? null;\n  if (body.digestTime !== undefined) payload.digestTime = body.digestTime ?? null;\n\n  return payload;\n}\n\nnotificationsRoutes.patch('/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const payload = mapNotificationSettingsPayload(body as Record<string, unknown>);\n  const prefs = await updateNotificationPreferences(c.env, userId, payload);\n  return successResponse(c, prefs);\n});\n\nnotificationsRoutes.get('/stats', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const stats = await getNotificationStats(c.env, userId);\n  return successResponse(c, stats);\n});\n\nnotificationsRoutes.post('/push-token', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const token = c.req.query('token') ?? body.token;\n  if (!token || typeof token !== 'string') {\n    throw new AppError('token is required', 400, 'INVALID_PAYLOAD');\n  }\n  const deviceType = (c.req.query('deviceType') ?? body.deviceType ?? 'web') as string;\n  await registerPushToken(c.env, userId, token, deviceType);\n  return successResponse(c, { success: true });\n});\n\nnotificationsRoutes.delete('/push-token', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const token = c.req.query('token') ?? body.token;\n  if (!token || typeof token !== 'string') {\n    throw new AppError('token is required', 400, 'INVALID_PAYLOAD');\n  }\n  await unregisterPushToken(c.env, userId, token);\n  return successResponse(c, { success: true });\n});\n\nexport default notificationsRoutes;\n", "import type { Env } from '../index';\nimport type {\n  NotificationRecord,\n  NotificationListItem,\n  NotificationPreferenceSettings,\n  NotificationStats\n} from '../types';\nimport { query, queryFirst, execute } from '../utils/db';\n\nconst DEFAULT_PAGE_SIZE = 20;\nconst MAX_PAGE_SIZE = 100;\n\ninterface ListOptions {\n  page?: number;\n  size?: number;\n  category?: string;\n  status?: string;\n  unreadOnly?: boolean;\n}\n\ninterface CreateNotificationPayload {\n  userId: string;\n  type: string;\n  title: string;\n  content: string;\n  actionUrl?: string;\n  actionData?: Record<string, any> | null;\n  imageUrl?: string;\n  iconUrl?: string;\n  priority?: number;\n  category?: string;\n  scheduledAt?: string;\n  expiresAt?: string;\n  isPersistent?: boolean;\n  senderUserId?: string;\n  templateId?: string;\n  templateVariables?: Record<string, any> | null;\n  deliveryChannels?: string;\n  status?: string;\n  scheduleMetadata?: Record<string, any> | null;\n}\n\ninterface NotificationRow {\n  notification_id: number;\n  user_id: string;\n  type: string;\n  title: string;\n  content: string;\n  action_url: string | null;\n  action_data: string | null;\n  image_url: string | null;\n  icon_url: string | null;\n  status: string;\n  priority: number | null;\n  category: string | null;\n  scheduled_at: string | null;\n  sent_at: string | null;\n  read_at: string | null;\n  expires_at: string | null;\n  created_at: string;\n  updated_at: string;\n  is_persistent: number | null;\n  sender_user_id: string | null;\n  template_id: string | null;\n  template_variables: string | null;\n  delivery_channels: string | null;\n  push_sent: number | null;\n  email_sent: number | null;\n  sms_sent: number | null;\n  schedule_metadata: string | null;\n}\n\ninterface PreferenceRow {\n  preference_id?: number;\n  user_id: string;\n  notifications_enabled: number;\n  push_enabled: number;\n  email_enabled: number;\n  sms_enabled: number;\n  session_notifications: number;\n  session_reminders: number;\n  matching_notifications: number;\n  chat_notifications: number;\n  level_test_notifications: number;\n  system_notifications: number;\n  marketing_notifications: number;\n  quiet_hours_enabled: number;\n  quiet_hours_start: string | null;\n  quiet_hours_end: string | null;\n  timezone: string | null;\n  notification_language: string | null;\n  digest_enabled: number;\n  digest_frequency: string | null;\n  digest_time: string | null;\n  created_at: string;\n  updated_at: string;\n}\n\nfunction nowIso(): string {\n  return new Date().toISOString();\n}\n\nfunction normalizePageSize(size?: number): number {\n  if (!size || Number.isNaN(size)) return DEFAULT_PAGE_SIZE;\n  return Math.max(1, Math.min(size, MAX_PAGE_SIZE));\n}\n\nfunction normalizePage(page?: number): number {\n  if (!page || Number.isNaN(page) || page < 1) return 1;\n  return page;\n}\n\nfunction parseJson<T>(value: string | null | undefined): T | null {\n  if (!value) return null;\n  try {\n    return JSON.parse(value) as T;\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction mapNotificationRow(row: NotificationRow): NotificationRecord {\n  const expiresAt = row.expires_at ?? undefined;\n  const priority = row.priority ?? 1;\n  const expired = expiresAt ? new Date(expiresAt) < new Date() : undefined;\n  const highPriority = priority >= 3;\n  const scheduleMetadata = parseJson<Record<string, any>>(row.schedule_metadata);\n  return {\n    userId: row.user_id,\n    notificationId: row.notification_id,\n    type: row.type,\n    title: row.title,\n    content: row.content,\n    actionUrl: row.action_url ?? undefined,\n    actionData: parseJson<Record<string, any>>(row.action_data) ?? undefined,\n    imageUrl: row.image_url ?? undefined,\n    iconUrl: row.icon_url ?? undefined,\n    status: row.status,\n    priority,\n    category: row.category ?? undefined,\n    scheduledAt: row.scheduled_at ?? undefined,\n    sentAt: row.sent_at ?? undefined,\n    readAt: row.read_at ?? undefined,\n    expiresAt,\n    createdAt: row.created_at,\n    isPersistent: Boolean(row.is_persistent ?? 1),\n    senderUserId: row.sender_user_id ?? undefined,\n    templateId: row.template_id ?? undefined,\n    deliveryChannels: row.delivery_channels ?? undefined,\n    pushSent: Boolean(row.push_sent ?? 0),\n    emailSent: Boolean(row.email_sent ?? 0),\n    smsSent: Boolean(row.sms_sent ?? 0),\n    expired,\n    highPriority,\n    scheduleMetadata\n  };\n}\n\nfunction toListItem(record: NotificationRecord): NotificationListItem {\n  return {\n    id: record.notificationId,\n    type: record.type,\n    category: record.category,\n    title: record.title,\n    message: record.content,\n    content: record.content,\n    isRead: record.status === 'READ',\n    status: record.status,\n    priority: record.priority,\n    createdAt: record.createdAt,\n    readAt: record.readAt,\n    scheduledAt: record.scheduledAt,\n    expiresAt: record.expiresAt,\n    clickUrl: record.actionUrl,\n    data: record.actionData ?? undefined,\n    imageUrl: record.imageUrl,\n    iconUrl: record.iconUrl,\n    highPriority: record.highPriority,\n    expired: record.expired\n  };\n}\n\nfunction mapPreferenceRow(row: PreferenceRow): NotificationPreferenceSettings {\n  return {\n    notificationsEnabled: Boolean(row.notifications_enabled),\n    pushEnabled: Boolean(row.push_enabled),\n    emailEnabled: Boolean(row.email_enabled),\n    smsEnabled: Boolean(row.sms_enabled),\n    sessionNotifications: Boolean(row.session_notifications),\n    sessionReminders: Boolean(row.session_reminders),\n    matchingNotifications: Boolean(row.matching_notifications),\n    chatNotifications: Boolean(row.chat_notifications),\n    levelTestNotifications: Boolean(row.level_test_notifications),\n    systemNotifications: Boolean(row.system_notifications),\n    marketingNotifications: Boolean(row.marketing_notifications),\n    quietHoursEnabled: Boolean(row.quiet_hours_enabled),\n    quietHoursStart: row.quiet_hours_start ?? undefined,\n    quietHoursEnd: row.quiet_hours_end ?? undefined,\n    timezone: row.timezone ?? undefined,\n    notificationLanguage: row.notification_language ?? undefined,\n    digestEnabled: Boolean(row.digest_enabled),\n    digestFrequency: row.digest_frequency ?? undefined,\n    digestTime: row.digest_time ?? undefined\n  };\n}\ntype RecurringSchedule = {\n  type: 'daily' | 'weekly' | 'monthly';\n  interval?: number;\n  endDate?: string;\n  time?: string;\n};\n\nfunction parseRecurringSchedule(raw: unknown): RecurringSchedule | null {\n  if (!raw || typeof raw !== 'object') {\n    return null;\n  }\n  const record = raw as Record<string, unknown>;\n  const typeValue = typeof record.type === 'string' ? record.type.toLowerCase() : '';\n  if (!['daily', 'weekly', 'monthly'].includes(typeValue)) {\n    return null;\n  }\n  const intervalValue = record.interval !== undefined ? Number(record.interval) : undefined;\n  const interval =\n    Number.isFinite(intervalValue) && intervalValue !== undefined && intervalValue > 0\n      ? Math.floor(intervalValue)\n      : undefined;\n  const endDate = typeof record.endDate === 'string' ? record.endDate : undefined;\n  const time = typeof record.time === 'string' ? record.time : undefined;\n  return {\n    type: typeValue as RecurringSchedule['type'],\n    interval,\n    endDate,\n    time,\n  };\n}\n\nfunction addDays(date: Date, days: number): Date {\n  const result = new Date(date.getTime());\n  result.setUTCDate(result.getUTCDate() + days);\n  return result;\n}\n\nfunction addMonths(date: Date, months: number): Date {\n  const result = new Date(date.getTime());\n  const currentDate = result.getUTCDate();\n  result.setUTCMonth(result.getUTCMonth() + months);\n  while (result.getUTCDate() < currentDate) {\n    result.setUTCDate(result.getUTCDate() - 1);\n  }\n  return result;\n}\n\nfunction applyTimeComponent(date: Date, metadata: RecurringSchedule, fallback: Date): void {\n  const timeString = metadata.time;\n  if (!timeString) {\n    date.setUTCHours(\n      fallback.getUTCHours(),\n      fallback.getUTCMinutes(),\n      fallback.getUTCSeconds(),\n      fallback.getUTCMilliseconds()\n    );\n    return;\n  }\n  const match = timeString.match(/^(\\d{1,2}):(\\d{2})(?::(\\d{2}))?$/);\n  if (!match) {\n    date.setUTCHours(\n      fallback.getUTCHours(),\n      fallback.getUTCMinutes(),\n      fallback.getUTCSeconds(),\n      fallback.getUTCMilliseconds()\n    );\n    return;\n  }\n  const hours = Number(match[1]);\n  const minutes = Number(match[2]);\n  const seconds = match[3] ? Number(match[3]) : 0;\n  date.setUTCHours(hours, minutes, seconds, 0);\n}\n\nfunction computeNextScheduledAt(currentIso: string | null, metadata: RecurringSchedule, reference: Date): string | null {\n  if (!currentIso) {\n    return null;\n  }\n  const base = new Date(currentIso);\n  if (Number.isNaN(base.getTime())) {\n    return null;\n  }\n\n  const interval = Math.max(1, metadata.interval ?? 1);\n  let next = new Date(base.getTime());\n\n  const advance = () => {\n    switch (metadata.type) {\n      case 'daily':\n        next = addDays(next, interval);\n        break;\n      case 'weekly':\n        next = addDays(next, interval * 7);\n        break;\n      case 'monthly':\n        next = addMonths(next, interval);\n        break;\n      default:\n        next = addDays(next, interval);\n        break;\n    }\n  };\n\n  advance();\n  applyTimeComponent(next, metadata, base);\n\n  const endDate = metadata.endDate ? new Date(metadata.endDate) : null;\n\n  while (next <= reference) {\n    advance();\n    applyTimeComponent(next, metadata, base);\n    if (endDate && next > endDate) {\n      return null;\n    }\n  }\n\n  if (endDate && next > endDate) {\n    return null;\n  }\n\n  return next.toISOString();\n}\nasync function ensurePreference(env: Env, userId: string): Promise<PreferenceRow> {\n  const existing = await queryFirst<PreferenceRow>(\n    env.DB,\n    'SELECT * FROM notification_preferences WHERE user_id = ? LIMIT 1',\n    [userId]\n  );\n\n  if (existing) {\n    return existing;\n  }\n\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `INSERT INTO notification_preferences (\n        user_id,\n        notifications_enabled,\n        push_enabled,\n        email_enabled,\n        sms_enabled,\n        session_notifications,\n        session_reminders,\n        matching_notifications,\n        chat_notifications,\n        level_test_notifications,\n        system_notifications,\n        marketing_notifications,\n        quiet_hours_enabled,\n        timezone,\n        notification_language,\n        digest_enabled,\n        digest_frequency,\n        digest_time,\n        created_at,\n        updated_at\n      ) VALUES (?, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, NULL, 'ko', 0, 'DAILY', '09:00', ?, ?)\n    `,\n    [userId, now, now]\n  );\n\n  const inserted = await queryFirst<PreferenceRow>(\n    env.DB,\n    'SELECT * FROM notification_preferences WHERE user_id = ? LIMIT 1',\n    [userId]\n  );\n  if (!inserted) {\n    throw new Error('\uC54C\uB9BC \uC124\uC815\uC744 \uCD08\uAE30\uD654\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  return inserted;\n}\n\nasync function listSubscriptionTopics(env: Env, userId: string): Promise<string[]> {\n  const rows = await query<{ topic: string }>(\n    env.DB,\n    'SELECT topic FROM notification_topic_subscription WHERE user_id = ? ORDER BY topic',\n    [userId]\n  );\n  return rows.map((row) => row.topic);\n}\n\nexport async function createNotification(env: Env, payload: CreateNotificationPayload): Promise<NotificationRecord> {\n  const now = nowIso();\n  const actionData = payload.actionData ? JSON.stringify(payload.actionData) : null;\n  const templateVariables = payload.templateVariables ? JSON.stringify(payload.templateVariables) : null;\n  const scheduleMetadata = payload.scheduleMetadata ? JSON.stringify(payload.scheduleMetadata) : null;\n  const status = payload.status ?? (payload.scheduledAt ? 'SCHEDULED' : 'UNREAD');\n\n  await execute(\n    env.DB,\n    `INSERT INTO notifications (\n        user_id,\n        type,\n        title,\n        content,\n        action_url,\n        action_data,\n        image_url,\n        icon_url,\n        status,\n        priority,\n        category,\n        scheduled_at,\n        sent_at,\n        read_at,\n        expires_at,\n        is_persistent,\n        sender_user_id,\n        template_id,\n        template_variables,\n        schedule_metadata,\n        delivery_channels,\n        push_sent,\n        email_sent,\n        sms_sent,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, NULL, ?, ?, ?, ?, ?, ?, ?, 0, 0, 0, ?, ?)\n    `,\n    [\n      payload.userId,\n      payload.type,\n      payload.title,\n      payload.content,\n      payload.actionUrl ?? null,\n      actionData,\n      payload.imageUrl ?? null,\n      payload.iconUrl ?? null,\n      status,\n      payload.priority ?? 1,\n      payload.category ?? null,\n      payload.scheduledAt ?? null,\n      payload.expiresAt ?? null,\n      payload.isPersistent === false ? 0 : 1,\n      payload.senderUserId ?? null,\n      payload.templateId ?? null,\n      templateVariables,\n      scheduleMetadata,\n      payload.deliveryChannels ?? null,\n      now,\n      now\n    ]\n  );\n\n  const row = await queryFirst<NotificationRow>(\n    env.DB,\n    'SELECT last_insert_rowid() as id'\n  );\n\n  const notificationId = Number((row as any)?.id ?? 0);\n  if (!notificationId) {\n    throw new Error('\uC54C\uB9BC \uC0DD\uC131 \uACB0\uACFC\uB97C \uD655\uC778\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n\n  return getNotificationById(env, notificationId);\n}\n\nexport async function getNotificationById(env: Env, notificationId: number): Promise<NotificationRecord> {\n  const row = await queryFirst<NotificationRow>(\n    env.DB,\n    'SELECT * FROM notifications WHERE notification_id = ? LIMIT 1',\n    [notificationId]\n  );\n  if (!row) {\n    throw new Error('\uC54C\uB9BC\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  return mapNotificationRow(row);\n}\n\nexport async function listNotifications(\n  env: Env,\n  userId: string,\n  options: ListOptions = {}\n): Promise<{ data: NotificationListItem[]; page: number; size: number; total: number; unreadCount: number }> {\n  const page = normalizePage(options.page);\n  const size = normalizePageSize(options.size);\n  const offset = (page - 1) * size;\n\n  const where: string[] = ['user_id = ?'];\n  const params: (string | number)[] = [userId];\n\n  if (options.category) {\n    where.push('UPPER(category) = UPPER(?)');\n    params.push(options.category);\n  }\n\n  if (options.unreadOnly) {\n    where.push(\"status = 'UNREAD'\");\n  } else if (options.status) {\n    where.push('status = ?');\n    params.push(options.status);\n  }\n\n  const whereClause = `WHERE ${where.join(' AND ')}`;\n\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM notifications ${whereClause}`,\n    params\n  );\n\n  const rows = await query<NotificationRow>(\n    env.DB,\n    `SELECT * FROM notifications\n      ${whereClause}\n      ORDER BY created_at DESC\n      LIMIT ? OFFSET ?`,\n    [...params, size, offset]\n  );\n\n  const records = rows.map(mapNotificationRow);\n  const unreadCount = await getUnreadCount(env, userId);\n\n  return {\n    data: records.map(toListItem),\n    page,\n    size,\n    total: totalRow?.count ?? 0,\n    unreadCount\n  };\n}\n\nexport async function getUnreadCount(env: Env, userId: string): Promise<number> {\n  const row = await queryFirst<{ count: number }>(\n    env.DB,\n    \"SELECT COUNT(*) as count FROM notifications WHERE user_id = ? AND status = 'UNREAD'\",\n    [userId]\n  );\n  return row?.count ?? 0;\n}\n\nexport async function markAsRead(env: Env, userId: string, notificationId: number) {\n  const record = await getNotificationById(env, notificationId);\n  if (record.userId !== userId) {\n    throw new Error('\uC54C\uB9BC\uC744 \uC77D\uC74C\uC73C\uB85C \uD45C\uC2DC\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE notifications\n        SET status = 'READ', read_at = ?, updated_at = ?\n      WHERE notification_id = ?`,\n    [now, now, notificationId]\n  );\n}\n\nexport async function markAllAsRead(env: Env, userId: string) {\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE notifications SET status = 'READ', read_at = ?, updated_at = ?\n      WHERE user_id = ? AND status = 'UNREAD'`,\n    [now, now, userId]\n  );\n}\n\nexport async function markCategoryAsRead(env: Env, userId: string, category: string) {\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE notifications SET status = 'READ', read_at = ?, updated_at = ?\n      WHERE user_id = ? AND category = ? AND status = 'UNREAD'`,\n    [now, now, userId, category]\n  );\n}\n\nexport async function deleteNotification(env: Env, userId: string, notificationId: number) {\n  await execute(\n    env.DB,\n    'DELETE FROM notifications WHERE notification_id = ? AND user_id = ?',\n    [notificationId, userId]\n  );\n}\n\nexport async function deleteAllNotifications(env: Env, userId: string) {\n  await execute(env.DB, 'DELETE FROM notifications WHERE user_id = ?', [userId]);\n}\n\nexport async function deleteNotificationsBatch(env: Env, userId: string, notificationIds: number[]): Promise<void> {\n  const ids = notificationIds.filter((id) => Number.isFinite(id));\n  if (!ids.length) {\n    return;\n  }\n  const placeholders = ids.map(() => '?').join(', ');\n  await execute(\n    env.DB,\n    `DELETE FROM notifications WHERE user_id = ? AND notification_id IN (${placeholders})`,\n    [userId, ...ids]\n  );\n}\n\nexport async function cancelScheduledNotification(env: Env, userId: string, notificationId: number): Promise<boolean> {\n  const row = await queryFirst<NotificationRow>(\n    env.DB,\n    'SELECT * FROM notifications WHERE notification_id = ? AND user_id = ? LIMIT 1',\n    [notificationId, userId]\n  );\n  if (!row) {\n    return false;\n  }\n  if (row.status !== 'SCHEDULED') {\n    await deleteNotification(env, userId, notificationId);\n    return true;\n  }\n\n  await execute(\n    env.DB,\n    \"UPDATE notifications SET status = 'CANCELLED', updated_at = ?, schedule_metadata = NULL WHERE notification_id = ?\",\n    [nowIso(), notificationId]\n  );\n  return true;\n}\n\nexport async function listNotificationCategories(env: Env, userId: string): Promise<Array<{ category: string; total: number; unread: number }>> {\n  const rows = await query<{ category: string | null; total: number; unread: number }>(\n    env.DB,\n    `SELECT\n        COALESCE(category, 'general') AS category,\n        COUNT(*) AS total,\n        SUM(CASE WHEN status = 'UNREAD' THEN 1 ELSE 0 END) AS unread\n      FROM notifications\n      WHERE user_id = ?\n      GROUP BY COALESCE(category, 'general')\n      ORDER BY category`,\n    [userId]\n  );\n\n  return rows.map((row) => ({\n    category: row.category ?? 'general',\n    total: Number(row.total ?? 0),\n    unread: Number(row.unread ?? 0)\n  }));\n}\n\nexport async function listScheduledNotifications(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number\n): Promise<{ data: NotificationRecord[]; page: number; size: number; total: number }> {\n  const normalizedPage = normalizePage(page);\n  const normalizedSize = normalizePageSize(size);\n  const offset = (normalizedPage - 1) * normalizedSize;\n\n  const whereClause = `WHERE user_id = ? AND (status = 'SCHEDULED' OR (scheduled_at IS NOT NULL AND datetime(scheduled_at) >= datetime('now'))) `;\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) AS count FROM notifications ${whereClause}`,\n    [userId]\n  );\n\n  const rows = await query<NotificationRow>(\n    env.DB,\n    `SELECT * FROM notifications\n      ${whereClause}\n      ORDER BY scheduled_at ASC, created_at DESC\n      LIMIT ? OFFSET ?`,\n    [userId, normalizedSize, offset]\n  );\n\n  return {\n    data: rows.map(mapNotificationRow),\n    page: normalizedPage,\n    size: normalizedSize,\n    total: totalRow ? Number(totalRow.count ?? 0) : 0\n  };\n}\n\nexport async function subscribeToNotificationTopics(env: Env, userId: string, topics: string[]): Promise<string[]> {\n  const normalized = topics\n    .map((topic) => String(topic).trim().toLowerCase())\n    .filter((topic) => topic.length > 0);\n\n  if (!normalized.length) {\n    return listSubscriptionTopics(env, userId);\n  }\n\n  const now = nowIso();\n  for (const topic of new Set(normalized)) {\n    await execute(\n      env.DB,\n      `INSERT INTO notification_topic_subscription (user_id, topic, created_at, updated_at)\n        VALUES (?, ?, ?, ?)\n        ON CONFLICT(user_id, topic) DO UPDATE SET updated_at = excluded.updated_at`,\n      [userId, topic, now, now]\n    );\n  }\n\n  return listSubscriptionTopics(env, userId);\n}\n\nexport async function unsubscribeFromNotificationTopics(env: Env, userId: string, topics: string[]): Promise<string[]> {\n  const normalized = topics\n    .map((topic) => String(topic).trim().toLowerCase())\n    .filter((topic) => topic.length > 0);\n\n  if (!normalized.length) {\n    return listSubscriptionTopics(env, userId);\n  }\n\n  const placeholders = normalized.map(() => '?').join(', ');\n  await execute(\n    env.DB,\n    `DELETE FROM notification_topic_subscription WHERE user_id = ? AND topic IN (${placeholders})`,\n    [userId, ...normalized]\n  );\n\n  return listSubscriptionTopics(env, userId);\n}\n\nexport async function scheduleNotification(\n  env: Env,\n  userId: string,\n  payload: {\n    title: string;\n    message: string;\n    type?: string;\n    data?: Record<string, any>;\n    scheduledAt: string;\n    recurring?: Record<string, any> | null;\n    priority?: number;\n    category?: string;\n    deliveryChannels?: string;\n  }\n): Promise<NotificationRecord> {\n  return createNotification(env, {\n    userId,\n    type: payload.type ?? 'SCHEDULED',\n    title: payload.title,\n    content: payload.message,\n    actionData: payload.data ?? null,\n    scheduledAt: payload.scheduledAt,\n    status: 'SCHEDULED',\n    scheduleMetadata: payload.recurring ?? null,\n    priority: payload.priority ?? 2,\n    category: payload.category ?? 'scheduled',\n    deliveryChannels: payload.deliveryChannels ?? undefined\n  });\n}\n\nexport async function sendTestNotification(env: Env, userId: string, type: string | null): Promise<NotificationRecord> {\n  return createNotification(env, {\n    userId,\n    type: type ?? 'TEST',\n    title: '\uD14C\uC2A4\uD2B8 \uC54C\uB9BC',\n    content: '\uD14C\uC2A4\uD2B8 \uC54C\uB9BC\uC785\uB2C8\uB2E4.',\n    category: 'test',\n    priority: 1\n  });\n}\n\nexport async function sendUrgentNotifications(\n  env: Env,\n  initiatorUserId: string,\n  recipients: string[],\n  payload: {\n    title: string;\n    message: string;\n    type?: string;\n    expiresAt?: string;\n    priority?: number;\n    category?: string;\n    data?: Record<string, any>;\n  }\n): Promise<{ delivered: number }>\n{\n  const normalized = recipients\n    .map((id) => String(id).trim())\n    .filter((id) => id.length > 0);\n\n  let targetIds: string[] = [];\n  const hasAll = normalized.some((id) => id.toLowerCase() === 'all');\n  if (hasAll) {\n    const rows = await query<{ user_id: string }>(\n      env.DB,\n      'SELECT user_id FROM users ORDER BY created_at DESC LIMIT 200'\n    );\n    targetIds = rows.map((row) => row.user_id);\n  } else {\n    targetIds = Array.from(new Set(normalized.filter((id) => id.toLowerCase() !== 'all')));\n  }\n\n  if (!targetIds.length) {\n    return { delivered: 0 };\n  }\n\n  const jobs = targetIds.map((targetId) =>\n    createNotification(env, {\n      userId: targetId,\n      type: payload.type ?? 'URGENT',\n      title: payload.title,\n      content: payload.message,\n      actionData: payload.data ?? null,\n      expiresAt: payload.expiresAt ?? undefined,\n      priority: payload.priority ?? 3,\n      category: payload.category ?? 'urgent',\n      senderUserId: initiatorUserId\n    }).catch((error) => {\n      console.error('[notifications] failed to send urgent notification', error);\n      return null;\n    })\n  );\n\n  const results = await Promise.all(jobs);\n  const delivered = results.filter((record) => record !== null).length;\n  return { delivered };\n}\n\nexport async function processScheduledNotifications(env: Env, limit = 100): Promise<number> {\n  const nowIsoStr = nowIso();\n  const reference = new Date(nowIsoStr);\n  const rows = await query<NotificationRow>(\n    env.DB,\n    \"SELECT * FROM notifications WHERE status = 'SCHEDULED' AND scheduled_at IS NOT NULL AND datetime(scheduled_at) <= datetime(?) LIMIT ?\",\n    [nowIsoStr, limit]\n  );\n\n  let processed = 0;\n\n  for (const row of rows) {\n    try {\n      await execute(\n        env.DB,\n        \"UPDATE notifications SET status = 'UNREAD', sent_at = ?, updated_at = ?, schedule_metadata = NULL WHERE notification_id = ?\",\n        [nowIsoStr, nowIsoStr, row.notification_id]\n      );\n      processed += 1;\n\n      const metadata = parseRecurringSchedule(parseJson<Record<string, unknown>>(row.schedule_metadata));\n      if (metadata) {\n        const nextScheduledAt = computeNextScheduledAt(row.scheduled_at ?? row.created_at, metadata, reference);\n        if (nextScheduledAt) {\n          const actionData = parseJson<Record<string, any>>(row.action_data);\n          const templateVariables = parseJson<Record<string, any>>(row.template_variables);\n          await createNotification(env, {\n            userId: row.user_id,\n            type: row.type,\n            title: row.title,\n            content: row.content,\n            actionUrl: row.action_url ?? undefined,\n            actionData: actionData ?? null,\n            imageUrl: row.image_url ?? undefined,\n            iconUrl: row.icon_url ?? undefined,\n            priority: row.priority ?? undefined,\n            category: row.category ?? undefined,\n            scheduledAt: nextScheduledAt,\n            status: 'SCHEDULED',\n            scheduleMetadata: metadata,\n            isPersistent: row.is_persistent !== null ? Boolean(row.is_persistent) : undefined,\n            senderUserId: row.sender_user_id ?? undefined,\n            templateId: row.template_id ?? undefined,\n            templateVariables: templateVariables ?? null,\n            deliveryChannels: row.delivery_channels ?? undefined,\n          });\n        }\n      }\n    } catch (error) {\n      console.error('[notifications] failed to process scheduled notification', error);\n    }\n  }\n\n  return processed;\n}\n\nexport async function getNotificationPreferences(env: Env, userId: string): Promise<NotificationPreferenceSettings> {\n  const row = await ensurePreference(env, userId);\n  const base = mapPreferenceRow(row);\n  const subscriptionTopics = await listSubscriptionTopics(env, userId);\n  return {\n    ...base,\n    subscriptionTopics\n  };\n}\n\nexport async function updateNotificationPreferences(\n  env: Env,\n  userId: string,\n  settings: Partial<NotificationPreferenceSettings>\n): Promise<NotificationPreferenceSettings> {\n  await ensurePreference(env, userId);\n  const now = nowIso();\n  const setClauses: string[] = [];\n  const params: (string | number)[] = [];\n\n  const booleanFields: Array<keyof NotificationPreferenceSettings> = [\n    'notificationsEnabled',\n    'pushEnabled',\n    'emailEnabled',\n    'smsEnabled',\n    'sessionNotifications',\n    'sessionReminders',\n    'matchingNotifications',\n    'chatNotifications',\n    'levelTestNotifications',\n    'systemNotifications',\n    'marketingNotifications',\n    'quietHoursEnabled',\n    'digestEnabled'\n  ];\n\n  for (const field of booleanFields) {\n    if (settings[field] !== undefined) {\n      const column = field.replace(/[A-Z]/g, (m) => `_${m.toLowerCase()}`);\n      setClauses.push(`${column} = ?`);\n      params.push(settings[field] ? 1 : 0);\n    }\n  }\n\n  if (settings.quietHoursStart !== undefined) {\n    setClauses.push('quiet_hours_start = ?');\n    params.push(settings.quietHoursStart ?? null);\n  }\n  if (settings.quietHoursEnd !== undefined) {\n    setClauses.push('quiet_hours_end = ?');\n    params.push(settings.quietHoursEnd ?? null);\n  }\n  if (settings.timezone !== undefined) {\n    setClauses.push('timezone = ?');\n    params.push(settings.timezone ?? null);\n  }\n  if (settings.notificationLanguage !== undefined) {\n    setClauses.push('notification_language = ?');\n    params.push(settings.notificationLanguage ?? null);\n  }\n  if (settings.digestFrequency !== undefined) {\n    setClauses.push('digest_frequency = ?');\n    params.push(settings.digestFrequency ?? null);\n  }\n  if (settings.digestTime !== undefined) {\n    setClauses.push('digest_time = ?');\n    params.push(settings.digestTime ?? null);\n  }\n\n  if (setClauses.length > 0) {\n    setClauses.push('updated_at = ?');\n    params.push(now, userId);\n    await execute(\n      env.DB,\n      `UPDATE notification_preferences SET ${setClauses.join(', ')} WHERE user_id = ?`,\n      params\n    );\n  }\n\n  return getNotificationPreferences(env, userId);\n}\n\nexport async function getNotificationStats(env: Env, userId: string): Promise<NotificationStats> {\n  const totals = await queryFirst<{ total: number; unread: number; read: number }>(\n    env.DB,\n    `SELECT COUNT(*) AS total,\n            SUM(CASE WHEN status = 'UNREAD' THEN 1 ELSE 0 END) AS unread,\n            SUM(CASE WHEN status = 'READ' THEN 1 ELSE 0 END) AS read\n       FROM notifications\n      WHERE user_id = ?`,\n    [userId]\n  );\n\n  const todayKey = new Date().toISOString().slice(0, 10);\n  const todayRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM notifications\n      WHERE user_id = ? AND substr(created_at, 1, 10) = ?`,\n    [userId, todayKey]\n  );\n\n  const categoryRows = await query<{ category: string | null; cnt: number }>(\n    env.DB,\n    `SELECT COALESCE(category, 'UNCATEGORIZED') as category, COUNT(*) as cnt\n       FROM notifications\n      WHERE user_id = ?\n      GROUP BY COALESCE(category, 'UNCATEGORIZED')`,\n    [userId]\n  );\n\n  const categories: Record<string, number> = {};\n  for (const row of categoryRows) {\n    categories[row.category ?? 'UNCATEGORIZED'] = row.cnt;\n  }\n\n  return {\n    total: totals?.total ?? 0,\n    unread: totals?.unread ?? 0,\n    read: totals?.read ?? 0,\n    today: todayRow?.count ?? 0,\n    categories\n  };\n}\n\nexport async function registerPushToken(env: Env, userId: string, token: string, deviceType?: string) {\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `INSERT INTO notification_push_tokens (user_id, token, device_type, created_at, updated_at)\n      VALUES (?, ?, ?, ?, ?)\n      ON CONFLICT(token) DO UPDATE SET updated_at = excluded.updated_at, user_id = excluded.user_id, device_type = excluded.device_type`,\n    [userId, token, deviceType ?? 'web', now, now]\n  );\n}\n\nexport async function unregisterPushToken(env: Env, userId: string, token: string) {\n  await execute(\n    env.DB,\n    'DELETE FROM notification_push_tokens WHERE token = ? AND user_id = ?',\n    [token, userId]\n  );\n}\n\nexport async function createNotificationFromTemplate(\n  env: Env,\n  userId: string,\n  templateId: string,\n  variables: Record<string, any> | undefined,\n  options: Partial<CreateNotificationPayload> = {}\n) {\n  const title = options.title ?? `Template ${templateId}`;\n  const content = options.content ?? '\uC54C\uB9BC\uC774 \uB3C4\uCC29\uD588\uC2B5\uB2C8\uB2E4.';\n  return createNotification(env, {\n    userId,\n    type: options.type ?? 'SYSTEM',\n    title,\n    content,\n    templateId,\n    templateVariables: variables ?? null,\n    ...options\n  });\n}\n\n/**\n * \uD559\uC2B5 \uB9AC\uB9C8\uC778\uB354 \uC54C\uB9BC \uC0DD\uC131\n * \uB9E4\uC77C \uD2B9\uC815 \uC2DC\uAC04\uC5D0 \uC0AC\uC6A9\uC790\uC5D0\uAC8C \uD559\uC2B5 \uB9AC\uB9C8\uC778\uB354 \uC804\uC1A1\n */\nexport async function createStudyReminderNotifications(env: Env): Promise<number> {\n  try {\n    // \uD65C\uC131 \uC0AC\uC6A9\uC790 \uC911 \uC624\uB298 \uD559\uC2B5\uD558\uC9C0 \uC54A\uC740 \uC0AC\uC6A9\uC790 \uC870\uD68C\n    const users = await query<{ user_id: string; name: string; english_name: string | null }>(\n      env.DB,\n      `SELECT u.user_id, u.name, u.english_name\n       FROM users u\n       WHERE u.is_active = 1\n         AND u.user_id NOT IN (\n           SELECT DISTINCT gsp.user_id\n           FROM group_session_participants gsp\n           JOIN group_sessions gs ON gs.session_id = gsp.session_id\n           WHERE DATE(gs.started_at) = DATE('now')\n             AND gsp.status = 'JOINED'\n         )\n       LIMIT 1000`\n    );\n\n    let count = 0;\n    for (const user of users) {\n      const userName = user.english_name || user.name || '\uC0AC\uC6A9\uC790';\n      try {\n        await createNotification(env, {\n          userId: user.user_id,\n          type: 'STUDY_REMINDER',\n          title: '\uD83D\uDCDA \uD559\uC2B5 \uB9AC\uB9C8\uC778\uB354',\n          content: `${userName}\uB2D8, \uC624\uB298 \uC544\uC9C1 \uD559\uC2B5\uD558\uC9C0 \uC54A\uC73C\uC168\uC5B4\uC694! \uC9C0\uAE08 \uC2DC\uC791\uD574\uBCF4\uB294 \uAC74 \uC5B4\uB5A8\uAE4C\uC694?`,\n          category: 'reminder',\n          priority: 1,\n          actionUrl: '/group-sessions',\n          actionData: {\n            reminderType: 'daily_study'\n          }\n        });\n        count++;\n      } catch (error) {\n        console.error(`Failed to create STUDY_REMINDER for user ${user.user_id}:`, error);\n      }\n    }\n\n    return count;\n  } catch (error) {\n    console.error('Failed to create study reminder notifications:', error);\n    return 0;\n  }\n}\n\n/**\n * \uBAA9\uD45C \uC9C4\uD589\uB960 \uC54C\uB9BC \uC0DD\uC131\n * \uC8FC\uAC04/\uC6D4\uAC04 \uBAA9\uD45C \uB2EC\uC131\uB960\uC5D0 \uB530\uB77C \uC54C\uB9BC \uC804\uC1A1\n */\nexport async function createGoalProgressNotifications(env: Env): Promise<number> {\n  try {\n    // \uC0AC\uC6A9\uC790\uBCC4 \uC774\uBC88 \uC8FC \uC138\uC158 \uC218 \uC870\uD68C\n    const userProgress = await query<{\n      user_id: string;\n      name: string;\n      english_name: string | null;\n      session_count: number;\n    }>(\n      env.DB,\n      `SELECT u.user_id, u.name, u.english_name, COUNT(gsp.participant_id) as session_count\n       FROM users u\n       LEFT JOIN group_session_participants gsp ON gsp.user_id = u.user_id\n       LEFT JOIN group_sessions gs ON gs.session_id = gsp.session_id\n       WHERE u.is_active = 1\n         AND (gs.started_at IS NULL OR DATE(gs.started_at) >= DATE('now', '-7 days'))\n         AND (gsp.status IS NULL OR gsp.status = 'JOINED')\n       GROUP BY u.user_id, u.name, u.english_name\n       HAVING session_count > 0 AND session_count < 10\n       LIMIT 1000`\n    );\n\n    let count = 0;\n    const weeklyGoal = 5; // \uC8FC\uAC04 \uBAA9\uD45C: 5\uD68C \uC138\uC158\n\n    for (const progress of userProgress) {\n      const userName = progress.english_name || progress.name || '\uC0AC\uC6A9\uC790';\n      const sessionsCompleted = Number(progress.session_count);\n      const progressPercent = Math.round((sessionsCompleted / weeklyGoal) * 100);\n\n      let message = '';\n      let priority = 1;\n\n      if (progressPercent >= 80) {\n        message = `${userName}\uB2D8, \uC774\uBC88 \uC8FC \uBAA9\uD45C\uB97C \uAC70\uC758 \uB2EC\uC131\uD588\uC5B4\uC694! \uD83C\uDF89 (${sessionsCompleted}/${weeklyGoal} \uC644\uB8CC)`;\n        priority = 2;\n      } else if (progressPercent >= 50) {\n        message = `${userName}\uB2D8, \uC774\uBC88 \uC8FC \uBAA9\uD45C\uC758 \uC808\uBC18\uC744 \uB2EC\uC131\uD588\uC5B4\uC694! \uD83D\uDCAA (${sessionsCompleted}/${weeklyGoal} \uC644\uB8CC)`;\n      } else {\n        message = `${userName}\uB2D8, \uC774\uBC88 \uC8FC \uBAA9\uD45C \uB2EC\uC131\uC744 \uC704\uD574 \uC870\uAE08\uB9CC \uB354 \uB178\uB825\uD574\uBCFC\uAE4C\uC694? \uD83D\uDCC8 (${sessionsCompleted}/${weeklyGoal} \uC644\uB8CC)`;\n      }\n\n      try {\n        await createNotification(env, {\n          userId: progress.user_id,\n          type: 'GOAL_PROGRESS',\n          title: '\uD83C\uDFAF \uC8FC\uAC04 \uBAA9\uD45C \uC9C4\uD589\uB960',\n          content: message,\n          category: 'goal',\n          priority,\n          actionUrl: '/achievements',\n          actionData: {\n            goalType: 'weekly',\n            currentProgress: sessionsCompleted,\n            targetGoal: weeklyGoal,\n            progressPercent\n          }\n        });\n        count++;\n      } catch (error) {\n        console.error(`Failed to create GOAL_PROGRESS for user ${progress.user_id}:`, error);\n      }\n    }\n\n    return count;\n  } catch (error) {\n    console.error('Failed to create goal progress notifications:', error);\n    return 0;\n  }\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse, paginatedResponse } from '../utils/response';\nimport {\n  createGroupSession,\n  joinGroupSession,\n  joinGroupSessionByCode,\n  leaveGroupSession,\n  startGroupSession,\n  endGroupSession,\n  cancelGroupSession,\n  getGroupSessionById,\n  listAvailableGroupSessions,\n  listUserGroupSessions,\n  listHostedGroupSessions,\n  kickGroupParticipant,\n  rateGroupSession,\n  updateGroupSession,\n  getRecommendedGroupSessions,\n  inviteToGroupSession,\n  respondToInvitation,\n  searchGroupSessions\n} from '../services/groupSessions';\nimport { saveLearningProgress } from '../services/groupSessionsAI';\n\nconst groupSessionsRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\nfunction getPaginationParams(c: any) {\n  const page = Math.max(Number(c.req.query('page') ?? '1'), 1);\n  const size = Math.max(Math.min(Number(c.req.query('size') ?? '20'), 50), 1);\n  return { page, size };\n}\n\nfunction requirePathParam(value: string | undefined, field: string): string {\n  if (!value) {\n    throw new AppError(`Invalid ${field}`, 400, 'INVALID_PATH_PARAM');\n  }\n  return value;\n}\n\nfunction requireUserId(c: any): string {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  return userId;\n}\n\ngroupSessionsRoutes.use('*', requireAuth);\n\ngroupSessionsRoutes.post('/', async (c) => {\n  const hostUserId = c.get('userId');\n  if (!hostUserId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const required = ['title', 'topicCategory', 'targetLanguage', 'languageLevel', 'maxParticipants', 'scheduledAt', 'sessionDuration', 'isPublic'];\n  const missing = required.filter((key) => body[key] === undefined || body[key] === null || body[key] === '');\n  if (missing.length) {\n    throw new AppError(`Missing fields: ${missing.join(', ')}`, 400, 'INVALID_PAYLOAD');\n  }\n  const session = await createGroupSession(c.env, hostUserId, body);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.get('/:sessionId', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const session = await getGroupSessionById(c.env, sessionId, userId);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.post('/:sessionId/join', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const body = await c.req.json().catch(() => ({}));\n  const session = await joinGroupSession(c.env, userId, sessionId, body);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.post('/join/:joinCode', async (c) => {\n  const userId = requireUserId(c);\n  const joinCode = requirePathParam(c.req.param('joinCode'), 'joinCode');\n  const body = await c.req.json().catch(() => ({}));\n  const session = await joinGroupSessionByCode(c.env, userId, joinCode, body);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.post('/:sessionId/leave', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  await leaveGroupSession(c.env, userId, sessionId);\n  return successResponse(c, { success: true });\n});\n\ngroupSessionsRoutes.post('/:sessionId/start', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const session = await startGroupSession(c.env, userId, sessionId);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.post('/:sessionId/end', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const session = await endGroupSession(c.env, userId, sessionId);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.post('/:sessionId/cancel', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const reason = c.req.query('reason') ?? undefined;\n  await cancelGroupSession(c.env, userId, sessionId, reason);\n  return successResponse(c, { success: true });\n});\n\ngroupSessionsRoutes.get('/', async (c) => {\n  const userId = c.get('userId');\n  const { page, size } = getPaginationParams(c);\n  const filters = {\n    language: c.req.query('language'),\n    level: c.req.query('level'),\n    category: c.req.query('category'),\n    tags: c.req.query('tags') ? c.req.query('tags')!.split(',').map((t) => t.trim()).filter(Boolean) : undefined\n  };\n  const result = await listAvailableGroupSessions(c.env, page, size, filters, userId ?? undefined);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\ngroupSessionsRoutes.get('/available', async (c) => {\n  const userId = c.get('userId');\n  const { page, size } = getPaginationParams(c);\n  const filters = {\n    language: c.req.query('language'),\n    level: c.req.query('level'),\n    category: c.req.query('category'),\n    tags: c.req.query('tags') ? c.req.query('tags')!.split(',').map((t) => t.trim()).filter(Boolean) : undefined\n  };\n  const result = await listAvailableGroupSessions(c.env, page, size, filters, userId ?? undefined);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\ngroupSessionsRoutes.get('/my', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const status = c.req.query('status') ?? undefined;\n  const sessions = await listUserGroupSessions(c.env, userId, status ?? undefined);\n  return successResponse(c, sessions);\n});\n\ngroupSessionsRoutes.get('/my-sessions', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const status = c.req.query('status') ?? undefined;\n  const sessions = await listUserGroupSessions(c.env, userId, status ?? undefined);\n  return successResponse(c, sessions);\n});\n\ngroupSessionsRoutes.get('/hosted', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const sessions = await listHostedGroupSessions(c.env, userId);\n  return successResponse(c, sessions);\n});\n\ngroupSessionsRoutes.post('/:sessionId/kick/:participantId', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const participantId = requirePathParam(c.req.param('participantId'), 'participantId');\n  await kickGroupParticipant(c.env, userId, sessionId, participantId);\n  return successResponse(c, { success: true });\n});\n\ngroupSessionsRoutes.post('/:sessionId/rate', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const rating = Number(c.req.query('rating') ?? c.req.query('score') ?? 0);\n  if (!rating || rating < 1 || rating > 5) {\n    throw new AppError('rating must be between 1 and 5', 400, 'INVALID_QUERY_PARAM');\n  }\n  const feedback = c.req.query('feedback') ?? undefined;\n  await rateGroupSession(c.env, userId, sessionId, rating, feedback);\n  return successResponse(c, { success: true });\n});\n\ngroupSessionsRoutes.put('/:sessionId', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const body = await c.req.json();\n  await updateGroupSession(c.env, userId, sessionId, body);\n  return successResponse(c, { success: true });\n});\n\ngroupSessionsRoutes.get('/recommended/list', async (c) => {\n  const userId = requireUserId(c);\n  const sessions = await getRecommendedGroupSessions(c.env, userId);\n  return successResponse(c, sessions);\n});\n\ngroupSessionsRoutes.post('/progress/track', async (c) => {\n  const userId = requireUserId(c);\n  const body = await c.req.json().catch(() => ({}));\n\n  const sessionId = typeof body.sessionId === 'string' ? body.sessionId : undefined;\n  const metrics = typeof body.metrics === 'object' && body.metrics !== null ? body.metrics : undefined;\n  const notes = typeof body.notes === 'string' ? body.notes : undefined;\n  const completedAt = typeof body.completedAt === 'string' ? body.completedAt : undefined;\n\n  let durationMinutes: number | undefined;\n  if (typeof body.durationMinutes === 'number' && Number.isFinite(body.durationMinutes)) {\n    durationMinutes = body.durationMinutes;\n  } else if (typeof body.duration === 'number' && Number.isFinite(body.duration)) {\n    durationMinutes = body.duration;\n  }\n\n  const record = await saveLearningProgress(c.env, {\n    userId,\n    sessionId,\n    metrics,\n    notes,\n    completedAt,\n    durationMinutes\n  });\n\n  return successResponse(c, { saved: true, progress: record });\n});\n\ngroupSessionsRoutes.post('/:sessionId/invite', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const body = await c.req.json();\n  if (!Array.isArray(body)) {\n    throw new AppError('Expected an array of userIds', 400, 'INVALID_PAYLOAD');\n  }\n  const session = await inviteToGroupSession(c.env, userId, sessionId, body);\n  return successResponse(c, session);\n});\n\ngroupSessionsRoutes.post('/:sessionId/invitation/respond', async (c) => {\n  const userId = requireUserId(c);\n  const sessionId = requirePathParam(c.req.param('sessionId'), 'sessionId');\n  const accept = c.req.query('accept');\n  const accepted = accept ? accept.toLowerCase() === 'true' : true;\n  await respondToInvitation(c.env, userId, sessionId, accepted);\n  return successResponse(c, { success: true, accepted });\n});\n\ngroupSessionsRoutes.get('/search', async (c) => {\n  const keyword = c.req.query('keyword') ?? '';\n  const language = c.req.query('language') ?? undefined;\n  const level = c.req.query('level') ?? undefined;\n  const sessions = await searchGroupSessions(c.env, keyword, language, level);\n  return successResponse(c, sessions);\n});\n\nexport default groupSessionsRoutes;\n", "import type { Env } from '../index';\nimport type { GroupSessionRecord, GroupSessionListItem, GroupSessionParticipant } from '../types';\nimport { query, queryFirst, execute } from '../utils/db';\nimport {\n  getCachedGroupSession,\n  setCachedGroupSession,\n  invalidateGroupSessionCache\n} from './groupSessionsCache';\nimport {\n  saveInvitation as saveSessionInvitation,\n  getInvitation as getSessionInvitation,\n  deleteInvitation as deleteSessionInvitation,\n  addActiveSession,\n  removeActiveSession,\n  addRecentSession\n} from './groupSessionsState';\nimport { createNotification } from './notifications';\n\ninterface CreateGroupSessionPayload {\n  title: string;\n  description?: string;\n  topicCategory: string;\n  targetLanguage: string;\n  languageLevel: string;\n  maxParticipants: number;\n  scheduledAt: string;\n  sessionDuration: number;\n  sessionTags?: string[];\n  isPublic: boolean;\n}\n\ninterface JoinPayload {\n  joinCode?: string;\n  message?: string;\n}\n\ninterface GroupSessionRow {\n  session_id: string;\n  title: string;\n  description: string | null;\n  host_user_id: string;\n  topic_category: string | null;\n  target_language: string | null;\n  language_level: string | null;\n  max_participants: number | null;\n  current_participants: number | null;\n  scheduled_at: string | null;\n  session_duration: number | null;\n  status: string | null;\n  room_id: string | null;\n  session_tags: string | null;\n  is_public: number | null;\n  join_code: string | null;\n  started_at: string | null;\n  ended_at: string | null;\n  rating_average: number | null;\n  rating_count: number | null;\n  host_user_name?: string | null;\n  host_profile_image?: string | null;\n}\n\ninterface ParticipantRow {\n  participant_id: string;\n  session_id: string;\n  user_id: string;\n  status: string | null;\n  joined_at: string | null;\n  left_at: string | null;\n  participation_duration: number | null;\n  rating: number | null;\n  feedback: string | null;\n  connection_quality: string | null;\n  is_muted: number | null;\n  is_video_enabled: number | null;\n  user_name?: string | null;\n  profile_image?: string | null;\n}\n\nconst GROUP_STATUS = {\n  SCHEDULED: 'SCHEDULED',\n  WAITING: 'WAITING',\n  ACTIVE: 'ACTIVE',\n  COMPLETED: 'COMPLETED',\n  CANCELLED: 'CANCELLED'\n} as const;\n\nconst PARTICIPANT_STATUS = {\n  INVITED: 'INVITED',\n  JOINED: 'JOINED',\n  LEFT: 'LEFT',\n  KICKED: 'KICKED',\n  BANNED: 'BANNED'\n} as const;\n\nfunction nowIso(): string {\n  return new Date().toISOString();\n}\n\nfunction newJoinCode(): string {\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\n}\n\nfunction mapGroupSession(row: GroupSessionRow, participants: GroupSessionParticipant[] = [], currentUserId?: string): GroupSessionRecord {\n  const isPublic = row.is_public === null ? undefined : Number(row.is_public) !== 0;\n  const currentParticipants = Number(row.current_participants ?? 0);\n  const maxParticipants = row.max_participants !== null ? Number(row.max_participants) : undefined;\n  const status = row.status ?? GROUP_STATUS.SCHEDULED;\n  const tags = row.session_tags\n    ? row.session_tags\n        .split(',')\n        .map((t) => t.trim())\n        .filter(Boolean)\n    : undefined;\n\n  return {\n    id: row.session_id,\n    title: row.title,\n    description: row.description ?? undefined,\n    hostUserId: row.host_user_id,\n    hostUserName: row.host_user_name ?? undefined,\n    hostProfileImage: row.host_profile_image ?? undefined,\n    topicCategory: row.topic_category ?? undefined,\n    targetLanguage: row.target_language ?? undefined,\n    languageLevel: row.language_level ?? undefined,\n    maxParticipants,\n    currentParticipants,\n    scheduledAt: row.scheduled_at ?? undefined,\n    sessionDuration: row.session_duration !== null ? Number(row.session_duration) : undefined,\n    status,\n    roomId: row.room_id ?? undefined,\n    sessionTags: tags && tags.length > 0 ? tags : undefined,\n    isPublic,\n    joinCode: row.join_code ?? undefined,\n    startedAt: row.started_at ?? undefined,\n    endedAt: row.ended_at ?? undefined,\n    ratingAverage: row.rating_average !== null ? Number(row.rating_average) : undefined,\n    ratingCount: row.rating_count !== null ? Number(row.rating_count) : undefined,\n    participants,\n    canJoin:\n      currentUserId !== undefined &&\n      row.host_user_id !== currentUserId &&\n      (isPublic ?? false) &&\n      status === GROUP_STATUS.SCHEDULED &&\n      currentParticipants < (maxParticipants ?? 10),\n    joinMessage: undefined\n  };\n}\n\nfunction cloneParticipants(participants?: GroupSessionParticipant[]): GroupSessionParticipant[] | undefined {\n  return participants ? participants.map((participant) => ({ ...participant })) : undefined;\n}\n\nfunction applyJoinMetadata(\n  record: GroupSessionRecord,\n  currentUserId?: string\n): GroupSessionRecord {\n  const cloned: GroupSessionRecord = {\n    ...record,\n    participants: cloneParticipants(record.participants)\n  };\n\n  const isPublic = record.isPublic ?? false;\n  const status = record.status ?? GROUP_STATUS.SCHEDULED;\n  const maxParticipants = record.maxParticipants ?? 10;\n\n  cloned.canJoin =\n    currentUserId !== undefined &&\n    record.hostUserId !== currentUserId &&\n    isPublic &&\n    status === GROUP_STATUS.SCHEDULED &&\n    record.currentParticipants < maxParticipants;\n\n  return cloned;\n}\n\nfunction mapGroupList(row: GroupSessionRow, currentUserId?: string): GroupSessionListItem {\n  const scheduledAt = row.scheduled_at ?? undefined;\n  const status = row.status ?? GROUP_STATUS.SCHEDULED;\n  let timeUntilStart: string | undefined;\n  if (scheduledAt) {\n    const diffMs = new Date(scheduledAt).getTime() - Date.now();\n    if (diffMs > 0) {\n      const hours = Math.floor(diffMs / 3600000);\n      const minutes = Math.floor((diffMs % 3600000) / 60000);\n      timeUntilStart = `${hours}h ${minutes}m`;\n    }\n  }\n  const tags = row.session_tags\n    ? row.session_tags\n        .split(',')\n        .map((t) => t.trim())\n        .filter(Boolean)\n    : undefined;\n  return {\n    id: row.session_id,\n    title: row.title,\n    description: row.description ?? undefined,\n    hostUserName: row.host_user_name ?? undefined,\n    hostProfileImage: row.host_profile_image ?? undefined,\n    topicCategory: row.topic_category ?? undefined,\n    targetLanguage: row.target_language ?? undefined,\n    languageLevel: row.language_level ?? undefined,\n    maxParticipants: row.max_participants !== null ? Number(row.max_participants) : undefined,\n    currentParticipants: Number(row.current_participants ?? 0),\n    scheduledAt,\n    sessionDuration: row.session_duration !== null ? Number(row.session_duration) : undefined,\n    status,\n    sessionTags: tags && tags.length > 0 ? tags : undefined,\n    ratingAverage: row.rating_average !== null ? Number(row.rating_average) : undefined,\n    ratingCount: row.rating_count !== null ? Number(row.rating_count) : undefined,\n    canJoin:\n      currentUserId !== undefined &&\n      row.host_user_id !== currentUserId &&\n      status === GROUP_STATUS.SCHEDULED &&\n      Number(row.current_participants ?? 0) < Number(row.max_participants ?? 10),\n    timeUntilStart\n  };\n}\n\nasync function fetchParticipants(env: Env, sessionId: string): Promise<GroupSessionParticipant[]> {\n  const rows = await query<ParticipantRow>(\n    env.DB,\n    `SELECT gsp.*, u.name AS user_name, u.profile_image AS profile_image\n       FROM group_session_participants gsp\n       LEFT JOIN users u ON u.user_id = gsp.user_id\n      WHERE gsp.session_id = ?\n      ORDER BY gsp.joined_at ASC`,\n    [sessionId]\n  );\n  return rows.map((row) => ({\n    userId: row.user_id,\n    userName: row.user_name ?? undefined,\n    profileImage: row.profile_image ?? undefined,\n    status: row.status ?? undefined,\n    joinedAt: row.joined_at ?? undefined,\n    isMuted: row.is_muted === null ? undefined : Boolean(row.is_muted),\n    isVideoEnabled: row.is_video_enabled === null ? undefined : Boolean(row.is_video_enabled)\n  }));\n}\n\nexport async function createGroupSession(env: Env, hostUserId: string, payload: CreateGroupSessionPayload): Promise<GroupSessionRecord> {\n  const now = nowIso();\n  const sessionId = crypto.randomUUID();\n  const joinCode = newJoinCode();\n  await execute(\n    env.DB,\n    `INSERT INTO group_sessions (\n        session_id,\n        title,\n        description,\n        host_user_id,\n        topic_category,\n        target_language,\n        language_level,\n        max_participants,\n        current_participants,\n        scheduled_at,\n        session_duration,\n        status,\n        room_id,\n        session_tags,\n        is_public,\n        join_code,\n        started_at,\n        ended_at,\n        rating_average,\n        rating_count,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, 1, ?, ?, ?, NULL, ?, ?, ?, NULL, NULL, 0, 0, ?, ?)\n    `,\n    [\n      sessionId,\n      payload.title,\n      payload.description ?? null,\n      hostUserId,\n      payload.topicCategory,\n      payload.targetLanguage,\n      payload.languageLevel,\n      payload.maxParticipants,\n      payload.scheduledAt,\n      payload.sessionDuration,\n      GROUP_STATUS.SCHEDULED,\n      payload.sessionTags ? payload.sessionTags.join(',') : null,\n      payload.isPublic ? 1 : 0,\n      joinCode,\n      now,\n      now\n    ]\n  );\n\n  await execute(\n    env.DB,\n    `INSERT INTO group_session_participants (\n        participant_id,\n        session_id,\n        user_id,\n        status,\n        joined_at,\n        left_at,\n        participation_duration,\n        rating,\n        feedback,\n        connection_quality,\n        is_muted,\n        is_video_enabled,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, NULL, NULL, NULL, NULL, NULL, 0, 1, ?, ?)\n    `,\n    [crypto.randomUUID(), sessionId, hostUserId, PARTICIPANT_STATUS.JOINED, now, now, now]\n  );\n\n  const row = await queryFirst<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_sessions gs\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      WHERE gs.session_id = ?\n      LIMIT 1`,\n    [sessionId]\n  );\n  if (!row) {\n    throw new Error('\uADF8\uB8F9 \uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n\n  const participants = await fetchParticipants(env, sessionId);\n  const baseRecord = mapGroupSession(row, participants);\n  await setCachedGroupSession(env, baseRecord);\n  await addActiveSession(env, hostUserId, sessionId);\n  await addRecentSession(env, hostUserId, sessionId);\n  return applyJoinMetadata(baseRecord, hostUserId);\n}\n\nexport async function getGroupSessionById(env: Env, sessionId: string, currentUserId?: string): Promise<GroupSessionRecord> {\n  const cached = await getCachedGroupSession(env, sessionId);\n  if (cached) {\n    if (currentUserId) {\n      await addRecentSession(env, currentUserId, sessionId);\n    }\n    return applyJoinMetadata(cached, currentUserId);\n  }\n\n  const row = await queryFirst<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_sessions gs\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      WHERE gs.session_id = ?\n      LIMIT 1`,\n    [sessionId]\n  );\n  if (!row) throw new Error('\uADF8\uB8F9 \uC138\uC158\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const participants = await fetchParticipants(env, sessionId);\n  const baseRecord = mapGroupSession(row, participants);\n  await setCachedGroupSession(env, baseRecord);\n  return applyJoinMetadata(baseRecord, currentUserId);\n}\n\nasync function ensureParticipant(env: Env, sessionId: string, userId: string): Promise<ParticipantRow | null> {\n  return queryFirst<ParticipantRow>(\n    env.DB,\n    `SELECT * FROM group_session_participants WHERE session_id = ? AND user_id = ? LIMIT 1`,\n    [sessionId, userId]\n  );\n}\n\nexport async function joinGroupSession(env: Env, userId: string, sessionId: string, payload: JoinPayload = {}): Promise<GroupSessionRecord> {\n  const session = await getGroupSessionById(env, sessionId);\n  if (session.hostUserId === userId) {\n    return session;\n  }\n  if (session.status !== GROUP_STATUS.SCHEDULED) {\n    throw new Error('\uC774\uBBF8 \uC9C4\uD589 \uC911\uC774\uAC70\uB098 \uC885\uB8CC\uB41C \uC138\uC158\uC785\uB2C8\uB2E4.');\n  }\n  if (session.currentParticipants >= (session.maxParticipants ?? 10)) {\n    throw new Error('\uC138\uC158 \uC815\uC6D0\uC774 \uAC00\uB4DD \uCC3C\uC2B5\uB2C8\uB2E4.');\n  }\n\n  const existing = await ensureParticipant(env, sessionId, userId);\n  if (existing && existing.status === PARTICIPANT_STATUS.JOINED) {\n    return session;\n  }\n\n  // \uCC38\uAC00\uC790 \uC815\uBCF4 \uC870\uD68C\n  const userInfo = await queryFirst<{\n    english_name: string | null;\n    name: string | null;\n  }>(env.DB, 'SELECT english_name, name FROM users WHERE user_id = ? LIMIT 1', [userId]);\n\n  const userName = userInfo?.english_name || userInfo?.name || '\uC0AC\uC6A9\uC790';\n\n  const now = nowIso();\n  if (existing) {\n    await execute(\n      env.DB,\n      `UPDATE group_session_participants\n         SET status = ?, joined_at = ?, left_at = NULL, updated_at = ?\n       WHERE session_id = ? AND user_id = ?`,\n      [PARTICIPANT_STATUS.JOINED, now, now, sessionId, userId]\n    );\n  } else {\n    await execute(\n      env.DB,\n      `INSERT INTO group_session_participants (\n          participant_id, session_id, user_id, status, joined_at, created_at, updated_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?)` ,\n      [crypto.randomUUID(), sessionId, userId, PARTICIPANT_STATUS.JOINED, now, now, now]\n    );\n  }\n\n  await execute(\n    env.DB,\n    `UPDATE group_sessions\n        SET current_participants = current_participants + 1,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [now, sessionId]\n  );\n\n  // \uD638\uC2A4\uD2B8\uC5D0\uAC8C \uCC38\uAC00 \uC54C\uB9BC \uC804\uC1A1\n  try {\n    await createNotification(env, {\n      userId: session.hostUserId,\n      type: 'GROUP_SESSION_JOINED',\n      title: '\uC0C8\uB85C\uC6B4 \uCC38\uAC00\uC790',\n      content: `${userName}\uB2D8\uC774 \"${session.title}\" \uADF8\uB8F9 \uC138\uC158\uC5D0 \uCC38\uAC00\uD588\uC2B5\uB2C8\uB2E4.`,\n      category: 'group_session',\n      priority: 1,\n      actionUrl: `/group-sessions/${sessionId}`,\n      actionData: {\n        sessionId,\n        sessionTitle: session.title,\n        participantId: userId,\n        participantName: userName\n      },\n      senderUserId: userId\n    });\n  } catch (error) {\n    console.error('Failed to send GROUP_SESSION_JOINED notification:', error);\n  }\n\n  await invalidateGroupSessionCache(env, sessionId);\n  await addActiveSession(env, userId, sessionId);\n  await addRecentSession(env, userId, sessionId);\n  return getGroupSessionById(env, sessionId, userId);\n}\n\nexport async function joinGroupSessionByCode(env: Env, userId: string, joinCode: string, payload: JoinPayload = {}) {\n  const row = await queryFirst<{ session_id: string }>(\n    env.DB,\n    'SELECT session_id FROM group_sessions WHERE join_code = ? LIMIT 1',\n    [joinCode]\n  );\n  if (!row) throw new Error('\uCC38\uAC00 \uCF54\uB4DC\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  return joinGroupSession(env, userId, row.session_id, payload);\n}\n\nexport async function leaveGroupSession(env: Env, userId: string, sessionId: string) {\n  const participant = await ensureParticipant(env, sessionId, userId);\n  if (!participant || participant.status !== PARTICIPANT_STATUS.JOINED) {\n    return;\n  }\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE group_session_participants\n        SET status = ?, left_at = ?, updated_at = ?\n      WHERE session_id = ? AND user_id = ?`,\n    [PARTICIPANT_STATUS.LEFT, now, now, sessionId, userId]\n  );\n  await execute(\n    env.DB,\n    `UPDATE group_sessions\n        SET current_participants = CASE WHEN current_participants > 0 THEN current_participants - 1 ELSE 0 END,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [now, sessionId]\n  );\n\n  await invalidateGroupSessionCache(env, sessionId);\n  await removeActiveSession(env, userId, sessionId);\n}\n\nexport async function startGroupSession(env: Env, userId: string, sessionId: string) {\n  const session = await getGroupSessionById(env, sessionId);\n  if (session.hostUserId !== userId) throw new Error('\uC138\uC158\uC744 \uC2DC\uC791\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const now = nowIso();\n  await execute(\n    env.DB,\n    'UPDATE group_sessions SET status = ?, started_at = ?, updated_at = ? WHERE session_id = ?',\n    [GROUP_STATUS.ACTIVE, now, now, sessionId]\n  );\n\n  // \uBAA8\uB4E0 \uCC38\uAC00\uC790\uC5D0\uAC8C \uC138\uC158 \uC2DC\uC791 \uC54C\uB9BC \uC804\uC1A1\n  const participants = await query<{ user_id: string }>(\n    env.DB,\n    'SELECT user_id FROM group_session_participants WHERE session_id = ? AND status = ? AND user_id != ?',\n    [sessionId, PARTICIPANT_STATUS.JOINED, userId]\n  );\n\n  for (const participant of participants) {\n    try {\n      await createNotification(env, {\n        userId: participant.user_id,\n        type: 'GROUP_SESSION_STARTED',\n        title: '\uADF8\uB8F9 \uC138\uC158 \uC2DC\uC791',\n        content: `\"${session.title}\" \uADF8\uB8F9 \uC138\uC158\uC774 \uC2DC\uC791\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uC9C0\uAE08 \uCC38\uC5EC\uD558\uC138\uC694!`,\n        category: 'group_session',\n        priority: 3, // \uAE34\uAE09 (\uC138\uC158\uC774 \uC2DC\uC791\uB418\uC5C8\uC73C\uBBC0\uB85C \uC989\uC2DC \uC54C\uB9BC \uD544\uC694)\n        actionUrl: `/group-sessions/${sessionId}`,\n        actionData: {\n          sessionId,\n          sessionTitle: session.title,\n          hostUserId: userId\n        },\n        senderUserId: userId\n      });\n    } catch (error) {\n      console.error(`Failed to send GROUP_SESSION_STARTED notification to ${participant.user_id}:`, error);\n    }\n  }\n\n  await invalidateGroupSessionCache(env, sessionId);\n  return getGroupSessionById(env, sessionId, userId);\n}\n\nexport async function endGroupSession(env: Env, userId: string, sessionId: string) {\n  const session = await getGroupSessionById(env, sessionId);\n  if (session.hostUserId !== userId) throw new Error('\uC138\uC158\uC744 \uC885\uB8CC\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const now = nowIso();\n  await execute(\n    env.DB,\n    'UPDATE group_sessions SET status = ?, ended_at = ?, updated_at = ? WHERE session_id = ?',\n    [GROUP_STATUS.COMPLETED, now, now, sessionId]\n  );\n  await invalidateGroupSessionCache(env, sessionId);\n  return getGroupSessionById(env, sessionId, userId);\n}\n\nexport async function cancelGroupSession(env: Env, userId: string, sessionId: string, reason?: string) {\n  const session = await getGroupSessionById(env, sessionId);\n  if (session.hostUserId !== userId) throw new Error('\uC138\uC158\uC744 \uCDE8\uC18C\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n\n  // \uBAA8\uB4E0 \uCC38\uAC00\uC790 \uC870\uD68C\n  const participants = await query<{ user_id: string }>(\n    env.DB,\n    'SELECT user_id FROM group_session_participants WHERE session_id = ? AND status = ? AND user_id != ?',\n    [sessionId, PARTICIPANT_STATUS.JOINED, userId]\n  );\n\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE group_sessions\n        SET status = ?, ended_at = ?, updated_at = ?\n      WHERE session_id = ?`,\n    [GROUP_STATUS.CANCELLED, now, now, sessionId]\n  );\n  await execute(\n    env.DB,\n    `UPDATE group_session_participants\n        SET status = ?, updated_at = ?\n      WHERE session_id = ? AND status = ?`,\n    [PARTICIPANT_STATUS.LEFT, now, sessionId, PARTICIPANT_STATUS.JOINED]\n  );\n\n  // \uBAA8\uB4E0 \uCC38\uAC00\uC790\uC5D0\uAC8C \uCDE8\uC18C \uC54C\uB9BC \uC804\uC1A1\n  const reasonText = reason ? ` (\uC0AC\uC720: ${reason})` : '';\n  for (const participant of participants) {\n    try {\n      await createNotification(env, {\n        userId: participant.user_id,\n        type: 'GROUP_SESSION_CANCELLED',\n        title: '\uADF8\uB8F9 \uC138\uC158 \uCDE8\uC18C',\n        content: `\"${session.title}\" \uADF8\uB8F9 \uC138\uC158\uC774 \uCDE8\uC18C\uB418\uC5C8\uC2B5\uB2C8\uB2E4${reasonText}.`,\n        category: 'group_session',\n        priority: 2,\n        actionUrl: `/group-sessions`,\n        actionData: {\n          sessionId,\n          sessionTitle: session.title,\n          hostUserId: userId,\n          reason\n        },\n        senderUserId: userId\n      });\n    } catch (error) {\n      console.error(`Failed to send GROUP_SESSION_CANCELLED notification to ${participant.user_id}:`, error);\n    }\n  }\n\n  await invalidateGroupSessionCache(env, sessionId);\n}\n\nexport async function listAvailableGroupSessions(\n  env: Env,\n  page: number,\n  size: number,\n  filters: { language?: string; level?: string; category?: string; tags?: string[] } = {},\n  currentUserId?: string\n) {\n  const offset = (page - 1) * size;\n  const where: string[] = ['status = ?', 'is_public = 1'];\n  const params: any[] = [GROUP_STATUS.SCHEDULED];\n\n  if (filters.language) {\n    where.push('UPPER(target_language) = UPPER(?)');\n    params.push(filters.language);\n  }\n  if (filters.level) {\n    where.push('UPPER(language_level) = UPPER(?)');\n    params.push(filters.level);\n  }\n  if (filters.category) {\n    where.push('UPPER(topic_category) = UPPER(?)');\n    params.push(filters.category);\n  }\n  if (filters.tags && filters.tags.length > 0) {\n    where.push(filters.tags.map(() => \"session_tags LIKE '%' || ? || '%' \").join(' AND '));\n    params.push(...filters.tags);\n  }\n\n  const whereClause = where.length ? `WHERE ${where.join(' AND ')}` : '';\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM group_sessions ${whereClause}`,\n    params\n  );\n\n  const rows = await query<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_sessions gs\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      ${whereClause}\n      ORDER BY gs.scheduled_at ASC\n      LIMIT ? OFFSET ?`,\n    [...params, size, offset]\n  );\n\n  const data = rows.map((row) => mapGroupList(row, currentUserId));\n  return {\n    data,\n    page,\n    size,\n    total: totalRow?.count ?? 0\n  };\n}\n\nexport async function listUserGroupSessions(env: Env, userId: string, status?: string) {\n  const rows = await query<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_session_participants gsp\n       JOIN group_sessions gs ON gs.session_id = gsp.session_id\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      WHERE gsp.user_id = ? ${status ? 'AND gs.status = ?' : ''}\n      ORDER BY gs.scheduled_at DESC`,\n    status ? [userId, status] : [userId]\n  );\n  const result: GroupSessionRecord[] = [];\n  for (const row of rows) {\n    const participants = await fetchParticipants(env, row.session_id);\n    result.push(mapGroupSession(row, participants, userId));\n  }\n  return result;\n}\n\nexport async function listHostedGroupSessions(env: Env, userId: string) {\n  const rows = await query<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_sessions gs\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      WHERE gs.host_user_id = ?\n      ORDER BY gs.scheduled_at DESC`,\n    [userId]\n  );\n  const result: GroupSessionRecord[] = [];\n  for (const row of rows) {\n    const participants = await fetchParticipants(env, row.session_id);\n    result.push(mapGroupSession(row, participants, userId));\n  }\n  return result;\n}\n\nexport async function kickGroupParticipant(env: Env, hostUserId: string, sessionId: string, participantId: string) {\n  const session = await getGroupSessionById(env, sessionId, hostUserId);\n  if (session.hostUserId !== hostUserId) throw new Error('\uCC38\uAC00\uC790\uB97C \uCD94\uBC29\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const participant = await ensureParticipant(env, sessionId, participantId);\n  if (!participant) throw new Error('\uCC38\uAC00\uC790\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE group_session_participants\n        SET status = ?, left_at = ?, updated_at = ?\n      WHERE session_id = ? AND user_id = ?`,\n    [PARTICIPANT_STATUS.KICKED, now, now, sessionId, participantId]\n  );\n  await execute(\n    env.DB,\n    `UPDATE group_sessions\n        SET current_participants = CASE WHEN current_participants > 0 THEN current_participants - 1 ELSE 0 END,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [now, sessionId]\n  );\n\n  await invalidateGroupSessionCache(env, sessionId);\n  await removeActiveSession(env, participantId, sessionId);\n}\n\nexport async function rateGroupSession(env: Env, userId: string, sessionId: string, rating: number, feedback?: string) {\n  const participant = await ensureParticipant(env, sessionId, userId);\n  if (!participant || participant.status !== PARTICIPANT_STATUS.JOINED) {\n    throw new Error('\uC138\uC158\uC5D0 \uCC38\uAC00\uD558\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.');\n  }\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE group_session_participants\n        SET rating = ?, feedback = ?, updated_at = ?\n      WHERE session_id = ? AND user_id = ?`,\n    [rating, feedback ?? null, now, sessionId, userId]\n  );\n\n  await execute(\n    env.DB,\n    `UPDATE group_sessions\n        SET rating_average = (\n          SELECT AVG(rating) FROM group_session_participants\n            WHERE session_id = ? AND rating IS NOT NULL\n        ),\n            rating_count = (\n          SELECT COUNT(*) FROM group_session_participants\n            WHERE session_id = ? AND rating IS NOT NULL\n        ),\n            updated_at = ?\n      WHERE session_id = ?`,\n    [sessionId, sessionId, now, sessionId]\n  );\n\n  await invalidateGroupSessionCache(env, sessionId);\n}\n\nexport async function updateGroupSession(env: Env, hostUserId: string, sessionId: string, payload: CreateGroupSessionPayload) {\n  const session = await getGroupSessionById(env, sessionId);\n  if (session.hostUserId !== hostUserId) throw new Error('\uC138\uC158\uC744 \uC218\uC815\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n\n  // \uBAA8\uB4E0 \uCC38\uAC00\uC790 \uC870\uD68C\n  const participants = await query<{ user_id: string }>(\n    env.DB,\n    'SELECT user_id FROM group_session_participants WHERE session_id = ? AND status = ? AND user_id != ?',\n    [sessionId, PARTICIPANT_STATUS.JOINED, hostUserId]\n  );\n\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE group_sessions\n        SET title = ?,\n            description = ?,\n            topic_category = ?,\n            target_language = ?,\n            language_level = ?,\n            max_participants = ?,\n            scheduled_at = ?,\n            session_duration = ?,\n            session_tags = ?,\n            is_public = ?,\n            updated_at = ?\n      WHERE session_id = ?`,\n    [\n      payload.title,\n      payload.description ?? null,\n      payload.topicCategory,\n      payload.targetLanguage,\n      payload.languageLevel,\n      payload.maxParticipants,\n      payload.scheduledAt,\n      payload.sessionDuration,\n      payload.sessionTags ? payload.sessionTags.join(',') : null,\n      payload.isPublic ? 1 : 0,\n      now,\n      sessionId\n    ]\n  );\n\n  // \uC138\uC158 \uC815\uBCF4\uAC00 \uBCC0\uACBD\uB418\uC5C8\uC74C\uC744 \uCC38\uAC00\uC790\uB4E4\uC5D0\uAC8C \uC54C\uB9BC\n  let changeDetails = '';\n  if (session.title !== payload.title) {\n    changeDetails = '\uC138\uC158 \uC81C\uBAA9\uC774 \uBCC0\uACBD\uB418\uC5C8\uC2B5\uB2C8\uB2E4.';\n  } else if (session.scheduledAt !== payload.scheduledAt) {\n    changeDetails = '\uC138\uC158 \uC77C\uC815\uC774 \uBCC0\uACBD\uB418\uC5C8\uC2B5\uB2C8\uB2E4.';\n  } else {\n    changeDetails = '\uC138\uC158 \uC815\uBCF4\uAC00 \uC5C5\uB370\uC774\uD2B8\uB418\uC5C8\uC2B5\uB2C8\uB2E4.';\n  }\n\n  for (const participant of participants) {\n    try {\n      await createNotification(env, {\n        userId: participant.user_id,\n        type: 'GROUP_SESSION_UPDATED',\n        title: '\uADF8\uB8F9 \uC138\uC158 \uBCC0\uACBD',\n        content: `\"${payload.title}\" \uADF8\uB8F9 \uC138\uC158 \uC815\uBCF4\uAC00 \uC5C5\uB370\uC774\uD2B8\uB418\uC5C8\uC2B5\uB2C8\uB2E4. ${changeDetails}`,\n        category: 'group_session',\n        priority: 2,\n        actionUrl: `/group-sessions/${sessionId}`,\n        actionData: {\n          sessionId,\n          sessionTitle: payload.title,\n          hostUserId,\n          scheduledAt: payload.scheduledAt,\n          changes: changeDetails\n        },\n        senderUserId: hostUserId\n      });\n    } catch (error) {\n      console.error(`Failed to send GROUP_SESSION_UPDATED notification to ${participant.user_id}:`, error);\n    }\n  }\n\n  await invalidateGroupSessionCache(env, sessionId);\n}\n\nexport async function inviteToGroupSession(env: Env, hostUserId: string, sessionId: string, invitedUserIds: string[]) {\n  const session = await getGroupSessionById(env, sessionId);\n  if (session.hostUserId !== hostUserId) throw new Error('\uC138\uC158\uC744 \uCD08\uB300\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n\n  // \uD638\uC2A4\uD2B8 \uC815\uBCF4 \uC870\uD68C\n  const hostInfo = await queryFirst<{\n    english_name: string | null;\n    name: string | null;\n  }>(env.DB, 'SELECT english_name, name FROM users WHERE user_id = ? LIMIT 1', [hostUserId]);\n\n  const hostName = hostInfo?.english_name || hostInfo?.name || '\uC0AC\uC6A9\uC790';\n  const now = nowIso();\n\n  for (const userId of invitedUserIds) {\n    await execute(\n      env.DB,\n      `INSERT INTO group_session_participants (\n          participant_id, session_id, user_id, status, joined_at, created_at, updated_at\n        ) VALUES (?, ?, ?, ?, NULL, ?, ?)\n        ON CONFLICT(session_id, user_id) DO UPDATE SET status = excluded.status, updated_at = excluded.updated_at`,\n      [crypto.randomUUID(), sessionId, userId, PARTICIPANT_STATUS.INVITED, now, now]\n    );\n    await saveSessionInvitation(env, sessionId, userId, hostUserId);\n\n    // \uCD08\uB300 \uC54C\uB9BC \uC804\uC1A1\n    try {\n      await createNotification(env, {\n        userId,\n        type: 'GROUP_SESSION_INVITE',\n        title: '\uADF8\uB8F9 \uC138\uC158 \uCD08\uB300',\n        content: `${hostName}\uB2D8\uC774 \"${session.title}\" \uADF8\uB8F9 \uC138\uC158\uC5D0 \uCD08\uB300\uD588\uC2B5\uB2C8\uB2E4.`,\n        category: 'group_session',\n        priority: 2,\n        actionUrl: `/group-sessions/${sessionId}`,\n        actionData: {\n          sessionId,\n          sessionTitle: session.title,\n          hostUserId,\n          hostName,\n          scheduledAt: session.scheduledAt\n        },\n        senderUserId: hostUserId\n      });\n    } catch (error) {\n      console.error('Failed to send GROUP_SESSION_INVITE notification:', error);\n    }\n  }\n  await invalidateGroupSessionCache(env, sessionId);\n  return getGroupSessionById(env, sessionId, hostUserId);\n}\n\nexport async function respondToInvitation(env: Env, userId: string, sessionId: string, accept: boolean) {\n  const invitation = await getSessionInvitation(env, sessionId, userId);\n  if (!invitation) throw new Error('\uCD08\uB300 \uAE30\uB85D\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const participant = await ensureParticipant(env, sessionId, userId);\n  if (!participant) throw new Error('\uCD08\uB300 \uAE30\uB85D\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  const now = nowIso();\n  if (accept) {\n    await execute(\n      env.DB,\n      `UPDATE group_session_participants\n          SET status = ?, joined_at = COALESCE(joined_at, ?), updated_at = ?\n        WHERE session_id = ? AND user_id = ?`,\n      [PARTICIPANT_STATUS.JOINED, now, now, sessionId, userId]\n    );\n    await execute(\n      env.DB,\n      `UPDATE group_sessions\n          SET current_participants = current_participants + 1,\n              updated_at = ?\n        WHERE session_id = ?`,\n      [now, sessionId]\n    );\n    await addActiveSession(env, userId, sessionId);\n  } else {\n    await execute(\n      env.DB,\n      `UPDATE group_session_participants\n          SET status = ?, updated_at = ?, left_at = COALESCE(left_at, ?)\n        WHERE session_id = ? AND user_id = ?`,\n      [PARTICIPANT_STATUS.BANNED, now, now, sessionId, userId]\n    );\n  }\n\n  await invalidateGroupSessionCache(env, sessionId);\n  await deleteSessionInvitation(env, sessionId, userId);\n}\n\nexport async function getRecommendedGroupSessions(env: Env, userId: string) {\n  const rows = await query<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_sessions gs\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      WHERE gs.is_public = 1 AND gs.status = ?\n      ORDER BY gs.scheduled_at ASC\n      LIMIT 5`,\n    [GROUP_STATUS.SCHEDULED]\n  );\n  const items: GroupSessionRecord[] = [];\n  for (const row of rows) {\n    const participants = await fetchParticipants(env, row.session_id);\n    items.push(mapGroupSession(row, participants, userId));\n  }\n  return items;\n}\n\nexport async function searchGroupSessions(env: Env, keyword: string, language?: string, level?: string) {\n  const where: string[] = ['is_public = 1'];\n  const params: any[] = [];\n  if (keyword) {\n    where.push('(title LIKE ? OR description LIKE ? OR topic_category LIKE ?)');\n    params.push(`%${keyword}%`, `%${keyword}%`, `%${keyword}%`);\n  }\n  if (language) {\n    where.push('target_language = ?');\n    params.push(language);\n  }\n  if (level) {\n    where.push('language_level = ?');\n    params.push(level);\n  }\n  const rows = await query<GroupSessionRow>(\n    env.DB,\n    `SELECT gs.*, host.name AS host_user_name, host.profile_image AS host_profile_image\n       FROM group_sessions gs\n       LEFT JOIN users host ON host.user_id = gs.host_user_id\n      ${where.length ? 'WHERE ' + where.join(' AND ') : ''}\n      ORDER BY gs.scheduled_at ASC\n      LIMIT 50`,\n    params\n  );\n  return rows.map((row: any) => mapGroupList(row));\n}\n", "import type { Env } from '../index';\nimport type { GroupSessionRecord, GroupSessionParticipant } from '../types';\nimport { CacheService } from './cache';\n\nconst CACHE_PREFIX = 'group-session';\nconst DEFAULT_TTL_SECONDS = 60 * 5; // 5 minutes\n\nfunction getCache(env: Env): CacheService {\n  return new CacheService(env.CACHE, CACHE_PREFIX, DEFAULT_TTL_SECONDS);\n}\n\nfunction cloneParticipants(\n  participants?: GroupSessionParticipant[]\n): GroupSessionParticipant[] | undefined {\n  return participants ? participants.map((participant) => ({ ...participant })) : undefined;\n}\n\nfunction sanitizeRecord(record: GroupSessionRecord): GroupSessionRecord {\n  return {\n    ...record,\n    canJoin: false,\n    participants: cloneParticipants(record.participants)\n  };\n}\n\nexport async function setCachedGroupSession(\n  env: Env,\n  record: GroupSessionRecord\n): Promise<void> {\n  const cache = getCache(env);\n  await cache.set(record.id, sanitizeRecord(record), {\n    ttl: DEFAULT_TTL_SECONDS,\n    tags: [`session:${record.id}`]\n  });\n}\n\nexport async function getCachedGroupSession(\n  env: Env,\n  sessionId: string\n): Promise<GroupSessionRecord | null> {\n  const cache = getCache(env);\n  const cached = await cache.get<GroupSessionRecord>(sessionId);\n  if (!cached) {\n    return null;\n  }\n  return {\n    ...cached,\n    participants: cloneParticipants(cached.participants)\n  };\n}\n\nexport async function invalidateGroupSessionCache(env: Env, sessionId: string): Promise<void> {\n  const cache = getCache(env);\n  await cache.delete(sessionId);\n}\n", "import type { Env } from '../index';\n\nconst INVITATION_PREFIX = 'group-session:invitation';\nconst ACTIVE_PREFIX = 'group-session:user-active';\nconst RECENT_PREFIX = 'group-session:recent';\nconst INVITATION_TTL_SECONDS = 60 * 60 * 24 * 3; // 3 days\nconst ACTIVE_TTL_SECONDS = 60 * 60 * 24; // 1 day\nconst RECENT_MAX = 10;\n\ninterface InvitationRecord {\n  sessionId: string;\n  userId: string;\n  hostUserId: string;\n  createdAt: string;\n}\n\ninterface ActiveSessionsRecord {\n  userId: string;\n  sessions: string[];\n  updatedAt: string;\n}\n\ninterface RecentSessionRecord {\n  sessionId: string;\n  viewedAt: string;\n}\n\nfunction invitationKey(sessionId: string, userId: string): string {\n  return `${INVITATION_PREFIX}:${sessionId}:${userId}`;\n}\n\nfunction activeKey(userId: string): string {\n  return `${ACTIVE_PREFIX}:${userId}`;\n}\n\nfunction recentKey(userId: string): string {\n  return `${RECENT_PREFIX}:${userId}`;\n}\n\nexport async function saveInvitation(\n  env: Env,\n  sessionId: string,\n  userId: string,\n  hostUserId: string\n): Promise<void> {\n  const record: InvitationRecord = {\n    sessionId,\n    userId,\n    hostUserId,\n    createdAt: new Date().toISOString()\n  };\n\n  await env.CACHE.put(invitationKey(sessionId, userId), JSON.stringify(record), {\n    expirationTtl: INVITATION_TTL_SECONDS\n  });\n}\n\nexport async function getInvitation(\n  env: Env,\n  sessionId: string,\n  userId: string\n): Promise<InvitationRecord | null> {\n  const raw = await env.CACHE.get(invitationKey(sessionId, userId), { type: 'json' });\n  return (raw as InvitationRecord | null) ?? null;\n}\n\nexport async function deleteInvitation(env: Env, sessionId: string, userId: string): Promise<void> {\n  await env.CACHE.delete(invitationKey(sessionId, userId));\n}\n\nexport async function addActiveSession(env: Env, userId: string, sessionId: string): Promise<void> {\n  const key = activeKey(userId);\n  const existing = (await env.CACHE.get(key, { type: 'json' })) as ActiveSessionsRecord | null;\n  const set = new Set(existing?.sessions ?? []);\n  set.add(sessionId);\n  const record: ActiveSessionsRecord = {\n    userId,\n    sessions: Array.from(set),\n    updatedAt: new Date().toISOString()\n  };\n  await env.CACHE.put(key, JSON.stringify(record), { expirationTtl: ACTIVE_TTL_SECONDS });\n}\n\nexport async function removeActiveSession(env: Env, userId: string, sessionId: string): Promise<void> {\n  const key = activeKey(userId);\n  const existing = (await env.CACHE.get(key, { type: 'json' })) as ActiveSessionsRecord | null;\n  if (!existing) {\n    return;\n  }\n  const set = new Set(existing.sessions);\n  set.delete(sessionId);\n  const record: ActiveSessionsRecord = {\n    userId,\n    sessions: Array.from(set),\n    updatedAt: new Date().toISOString()\n  };\n  if (record.sessions.length === 0) {\n    await env.CACHE.delete(key);\n  } else {\n    await env.CACHE.put(key, JSON.stringify(record), { expirationTtl: ACTIVE_TTL_SECONDS });\n  }\n}\n\nexport async function listActiveSessions(env: Env, userId: string): Promise<string[]> {\n  const key = activeKey(userId);\n  const existing = (await env.CACHE.get(key, { type: 'json' })) as ActiveSessionsRecord | null;\n  return existing?.sessions ?? [];\n}\n\nexport async function addRecentSession(env: Env, userId: string, sessionId: string): Promise<void> {\n  const key = recentKey(userId);\n  const existing = (await env.CACHE.get(key, { type: 'json' })) as string[] | null;\n  const recent = (existing ?? []).filter((id) => id !== sessionId);\n  recent.unshift(sessionId);\n  const trimmed = recent.slice(0, RECENT_MAX);\n  await env.CACHE.put(key, JSON.stringify(trimmed), { expirationTtl: ACTIVE_TTL_SECONDS });\n}\n\nexport async function listRecentSessions(env: Env, userId: string): Promise<string[]> {\n  const key = recentKey(userId);\n  const existing = (await env.CACHE.get(key, { type: 'json' })) as string[] | null;\n  return existing ?? [];\n}\n", "import type { Env } from '../index';\nimport { log } from '../utils/logger';\nimport { generateChatCompletion, sanitizeJsonResponse } from './ai';\nimport type { ChatMessage } from './ai';\n\nexport interface TopicRecommendationInput {\n  language: string;\n  level?: string;\n  interests?: string[];\n  participantCount?: number;\n}\n\nexport interface ConversationAnalysisInput {\n  transcript: string;\n  language?: string;\n  participantId?: string;\n}\n\nexport interface SessionSummaryInput {\n  sessionId?: string;\n  transcript: string;\n  duration?: number;\n  participants?: Array<{\n    id?: string;\n    name?: string;\n    role?: string;\n  }>;\n  language?: string;\n}\n\nexport interface IcebreakerInput {\n  language?: string;\n  level?: string;\n  topic?: string;\n}\n\nexport interface RoleplayInput {\n  language?: string;\n  level?: string;\n  situation?: string;\n  participantRoles?: string[];\n}\n\nexport interface TranslateInput {\n  text: string;\n  fromLanguage?: string;\n  toLanguage: string;\n}\n\nexport interface MatchRecommendationInput {\n  userId: string;\n  userProfile?: Record<string, unknown>;\n  availableSessions?: Array<Record<string, unknown>>;\n}\n\nexport interface LearningProgressRecord {\n  sessionId?: string;\n  userId: string;\n  metrics?: Record<string, unknown>;\n  notes?: string;\n  completedAt?: string;\n  durationMinutes?: number;\n  savedAt: string;\n}\n\nconst PROGRESS_TTL_SECONDS = 60 * 60 * 24 * 90; // 90\uC77C\nconst PROGRESS_HISTORY_LIMIT = 50;\n\nfunction parseJsonWithFallback<T>(text: string, fallback: T): T {\n  try {\n    return JSON.parse(text) as T;\n  } catch (error) {\n    log.warn('Failed to parse AI JSON response', error as Error, {\n      component: 'GROUP_SESSION_AI',\n      preview: text.slice(0, 240)\n    });\n    return fallback;\n  }\n}\n\nasync function callStructuredChat<T>(\n  env: Env,\n  systemPrompt: string,\n  userPrompt: string,\n  fallback: T,\n  options: { temperature?: number; maxTokens?: number } = {}\n): Promise<T> {\n  const messages: ChatMessage[] = [\n    { role: 'system', content: systemPrompt },\n    { role: 'user', content: userPrompt }\n  ];\n\n  const response = await generateChatCompletion(env.AI, messages, {\n    temperature: options.temperature ?? 0.6,\n    max_tokens: options.maxTokens ?? 900,\n    response_format: { type: 'json_object' }\n  });\n\n  const sanitized = sanitizeJsonResponse(response.text);\n  if (!sanitized) {\n    return fallback;\n  }\n  return parseJsonWithFallback(sanitized, fallback);\n}\n\nexport async function recommendSessionTopics(\n  env: Env,\n  userId: string,\n  input: TopicRecommendationInput\n) {\n  const fallback = {\n    topics: [\n      {\n        title: 'Daily Highlights',\n        description: 'Share the most interesting part of your day and ask follow-up questions to others.',\n        difficulty: input.level || 'INTERMEDIATE',\n        culturalTips: [] as string[],\n        followUpQuestions: [\n          'What made that moment special?',\n          'Would you do anything differently next time?'\n        ]\n      }\n    ]\n  };\n\n  const interestsText = (input.interests || []).join(', ') || 'general interests';\n  const userPrompt = `Recommend three engaging conversation topics for a small group session.\n\nContext:\n- Participants' primary learning language: ${input.language || 'English'}\n- Average proficiency level: ${input.level || 'Intermediate'}\n- Shared interests or focus areas: ${interestsText || 'general conversation'}\n- Group size: ${input.participantCount || 4}\n\nReturn JSON in the format:\n{\n  \"topics\": [\n    {\n      \"title\": string,\n      \"description\": string,\n      \"difficulty\": \"BEGINNER\" | \"INTERMEDIATE\" | \"ADVANCED\",\n      \"estimatedDurationMinutes\": number,\n      \"culturalTips\": string[],\n      \"followUpQuestions\": string[]\n    }\n  ]\n}`;\n\n  return callStructuredChat(env,\n    'You are an expert language tutor who designs conversation prompts that encourage balanced participation and vocabulary growth.',\n    userPrompt,\n    fallback,\n    { temperature: 0.7, maxTokens: 800 }\n  );\n}\n\nexport async function analyzeConversationTranscript(\n  env: Env,\n  userId: string,\n  input: ConversationAnalysisInput\n) {\n  const fallback = {\n    overallScore: 70,\n    strengths: ['Clear structure'],\n    improvements: ['Use more varied vocabulary'],\n    suggestedTopics: ['Cultural experiences'],\n    keyPhrases: [] as string[],\n    summary: 'Participants engaged in a structured conversation.',\n    sentiment: 'neutral'\n  };\n\n  const userPrompt = `Analyze this group session transcript for language learning insights.\nProvide:\n- overallScore (0-100)\n- strengths (array of strings)\n- improvements (array of strings)\n- suggestedTopics (array)\n- keyPhrases (array of strings)\n- summary (string)\n- sentiment (positive/neutral/negative)\n\nTranscript:\n${input.transcript}\n`;\n\n  return callStructuredChat(env,\n    'You are an experienced ESL coach. Focus on constructive, encouraging feedback.',\n    userPrompt,\n    fallback,\n    { temperature: 0.4, maxTokens: 800 }\n  );\n}\n\nexport async function generateSessionSummary(\n  env: Env,\n  userId: string,\n  input: SessionSummaryInput\n) {\n  const participantsLine = (input.participants || [])\n    .map((p) => `${p.name || p.id || 'Participant'}${p.role ? ` (${p.role})` : ''}`)\n    .join(', ');\n\n  const fallback = {\n    summary: 'Participants discussed the main topic and shared personal experiences.',\n    highlights: ['Active participation from all members'],\n    actionItems: ['Prepare vocabulary list for next session'],\n    followUpQuestions: ['What vocabulary felt challenging?'],\n    vocabulary: [] as Array<{ phrase: string; meaning: string }>\n  };\n\n  const userPrompt = `Summarize the group session for language learners.\nInclude summary, 2-3 highlights, actionItems, followUpQuestions, and vocabulary array with phrase/meaning.\n\nLanguage: ${input.language || 'English'}\nDuration (minutes): ${input.duration ?? 'unknown'}\nParticipants: ${participantsLine || 'Not specified'}\nTranscript:\n${input.transcript}\n`;\n\n  return callStructuredChat(env,\n    'You are a language coach who produces concise post-session reports for learners.',\n    userPrompt,\n    fallback,\n    { temperature: 0.5, maxTokens: 900 }\n  );\n}\n\nexport async function generateIcebreakers(\n  env: Env,\n  userId: string,\n  input: IcebreakerInput\n) {\n  const fallback = {\n    icebreakers: [\n      'Share one surprising fact about your hometown and ask others to react to it.'\n    ]\n  };\n\n  const userPrompt = `Provide five creative icebreaker prompts for a group session.\nLanguage: ${input.language || 'English'}\nLearner level: ${input.level || 'Intermediate'}\nTopic focus: ${input.topic || 'General conversation'}\nReturn JSON: { \"icebreakers\": string[] }\n`;\n\n  return callStructuredChat(env,\n    'You are a facilitator who creates inclusive, culturally sensitive warm-up questions.',\n    userPrompt,\n    fallback,\n    { temperature: 0.8, maxTokens: 500 }\n  );\n}\n\nexport async function generateRoleplayScenario(\n  env: Env,\n  userId: string,\n  input: RoleplayInput\n) {\n  const fallback = {\n    scenarioTitle: 'Business Meeting Kick-off',\n    setting: 'Virtual conference call with international teammates',\n    roles: ['Project lead', 'Marketing specialist', 'Engineer'],\n    goals: ['Align on project scope', 'Assign next steps'],\n    scriptOutline: [\n      'Introduction and greetings',\n      'Discuss project objectives',\n      'Clarify deliverables'\n    ],\n    vocabulary: [] as Array<{ phrase: string; meaning: string }>\n  };\n\n  const rolesText = (input.participantRoles || []).join(', ') || 'Flexible roles for 3-4 participants';\n  const userPrompt = `Create a roleplay scenario for language learners.\nInclude scenarioTitle, setting, roles, goals, scriptOutline (array of steps), vocabulary (array of { phrase, meaning }).\n\nLanguage: ${input.language || 'English'}\nLevel: ${input.level || 'Intermediate'}\nSituation: ${input.situation || 'Business discussion'}\nParticipant roles: ${rolesText}\n`;\n\n  return callStructuredChat(env,\n    'You design practical roleplay activities that build speaking confidence.',\n    userPrompt,\n    fallback,\n    { temperature: 0.75, maxTokens: 850 }\n  );\n}\n\nexport async function translateExpression(\n  env: Env,\n  userId: string,\n  input: TranslateInput\n) {\n  const fallback = {\n    translation: input.text,\n    pronunciation: null,\n    usageNotes: [],\n    examples: [] as Array<{ original: string; translated: string }>\n  };\n\n  const userPrompt = `Translate the following text for language learners.\nReturn JSON with fields: translation (string), pronunciation (string|null), usageNotes (string[]),\nexamples (array of { original, translated }).\n\nSource language: ${input.fromLanguage || 'auto'}\nTarget language: ${input.toLanguage}\nText:\n${input.text}\n`;\n\n  return callStructuredChat(env,\n    'You are a bilingual language coach who provides nuanced translations with context.',\n    userPrompt,\n    fallback,\n    { temperature: 0.4, maxTokens: 700 }\n  );\n}\n\nexport async function recommendSessionMatches(\n  env: Env,\n  userId: string,\n  input: MatchRecommendationInput\n) {\n  const fallback = {\n    matches: [] as Array<{ sessionId?: string; reason?: string; fitScore?: number }>,\n    strategy: 'Recommend sessions by topic relevance and speaking level proximity.'\n  };\n\n  const profileSummary = JSON.stringify(input.userProfile ?? {});\n  const sessionsInfo = JSON.stringify(input.availableSessions ?? []);\n\n  const userPrompt = `Recommend up to five group sessions for the learner.\nReturn JSON with fields:\n{\n  \"matches\": [\n    {\n      \"sessionId\": string | null,\n      \"title\": string,\n      \"fitScore\": number (0-100),\n      \"reason\": string\n    }\n  ],\n  \"strategy\": string\n}\n\nLearner profile:\n${profileSummary}\n\nAvailable sessions:\n${sessionsInfo}\n`;\n\n  return callStructuredChat(env,\n    'You are an AI assistant matching language learners to the most suitable group discussions.',\n    userPrompt,\n    fallback,\n    { temperature: 0.6, maxTokens: 900 }\n  );\n}\n\nfunction progressKey(userId: string) {\n  return `group-session:progress:${userId}`;\n}\n\nexport async function saveLearningProgress(\n  env: Env,\n  record: Omit<LearningProgressRecord, 'savedAt'>\n): Promise<LearningProgressRecord> {\n  const existingRaw = await env.CACHE.get(progressKey(record.userId));\n  let history: LearningProgressRecord[] = [];\n  if (existingRaw) {\n    try {\n      history = JSON.parse(existingRaw) as LearningProgressRecord[];\n    } catch (error) {\n      log.warn('Failed to parse existing learning progress history', error as Error, {\n        component: 'GROUP_SESSION_AI'\n      });\n      history = [];\n    }\n  }\n\n  const entry: LearningProgressRecord = {\n    ...record,\n    savedAt: new Date().toISOString()\n  };\n\n  history.unshift(entry);\n  if (history.length > PROGRESS_HISTORY_LIMIT) {\n    history = history.slice(0, PROGRESS_HISTORY_LIMIT);\n  }\n\n  await env.CACHE.put(progressKey(record.userId), JSON.stringify(history), {\n    expirationTtl: PROGRESS_TTL_SECONDS\n  });\n\n  return entry;\n}\n\nexport async function listLearningProgress(env: Env, userId: string): Promise<LearningProgressRecord[]> {\n  const raw = await env.CACHE.get(progressKey(userId));\n  if (!raw) return [];\n  try {\n    return JSON.parse(raw) as LearningProgressRecord[];\n  } catch (error) {\n    log.warn('Failed to parse stored learning progress', error as Error, {\n      component: 'GROUP_SESSION_AI'\n    });\n    return [];\n  }\n}\n", "import { Hono } from 'hono';\nimport { z } from 'zod';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport {\n  recommendSessionTopics,\n  analyzeConversationTranscript,\n  generateSessionSummary,\n  generateIcebreakers,\n  generateRoleplayScenario,\n  translateExpression,\n  recommendSessionMatches\n} from '../services/groupSessionsAI';\n\nconst aiRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\naiRoutes.use('*', requireAuth);\n\nconst recommendSchema = z.object({\n  language: z.string().min(1).default('English'),\n  level: z.string().min(1).optional(),\n  interests: z.array(z.string().min(1)).optional(),\n  participantCount: z.number().int().positive().optional()\n});\n\naiRoutes.post('/recommend-topics', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = recommendSchema.parse(payload);\n  const result = await recommendSessionTopics(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nconst analysisSchema = z.object({\n  transcript: z.string().min(5),\n  language: z.string().min(1).optional(),\n  participantId: z.string().min(1).optional()\n});\n\naiRoutes.post('/analyze-conversation', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = analysisSchema.parse(payload);\n  const result = await analyzeConversationTranscript(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nconst summarySchema = z.object({\n  sessionId: z.string().optional(),\n  transcript: z.string().min(5),\n  duration: z.number().int().positive().optional(),\n  language: z.string().min(1).optional(),\n  participants: z\n    .array(\n      z.object({\n        id: z.string().optional(),\n        name: z.string().optional(),\n        role: z.string().optional()\n      })\n    )\n    .optional()\n});\n\naiRoutes.post('/generate-summary', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = summarySchema.parse(payload);\n  const result = await generateSessionSummary(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nconst icebreakerSchema = z.object({\n  language: z.string().optional(),\n  level: z.string().optional(),\n  topic: z.string().optional()\n});\n\naiRoutes.post('/icebreakers', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = icebreakerSchema.parse(payload);\n  const result = await generateIcebreakers(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nconst roleplaySchema = z.object({\n  language: z.string().optional(),\n  level: z.string().optional(),\n  situation: z.string().optional(),\n  participantRoles: z.array(z.string()).optional()\n});\n\naiRoutes.post('/roleplay', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = roleplaySchema.parse(payload);\n  const result = await generateRoleplayScenario(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nconst translateSchema = z.object({\n  text: z.string().min(1),\n  fromLanguage: z.string().optional(),\n  toLanguage: z.string().min(1)\n});\n\naiRoutes.post('/translate', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = translateSchema.parse(payload);\n  const result = await translateExpression(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nconst matchSchema = z.object({\n  userId: z.string().min(1),\n  userProfile: z.record(z.unknown()).optional(),\n  availableSessions: z.array(z.record(z.unknown())).optional()\n});\n\naiRoutes.post('/match-recommendation', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  }\n  const payload = await c.req.json().catch(() => ({}));\n  const input = matchSchema.parse(payload);\n  const result = await recommendSessionMatches(c.env, userId, input);\n  return successResponse(c, result);\n});\n\nexport default aiRoutes;\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware, internalAuth } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\n\nconst presenceRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\ninterface PresencePayload {\n  userId?: string;\n  status: 'ONLINE' | 'OFFLINE' | 'AWAY' | 'STUDYING';\n  deviceInfo?: string;\n  sessionId?: string;\n  metadata?: Record<string, unknown>;\n}\n\nfunction getPresenceId(userId: string): DurableObjectId {\n  const stub = (presenceRoutes as any).context?.env?.USER_PRESENCE as DurableObjectNamespace;\n  if (!stub) {\n    throw new Error('Durable Object binding USER_PRESENCE is not configured');\n  }\n  return stub.idFromString(userId);\n}\n\nasync function fetchPresence(env: Env, userId: string, path: string, init?: RequestInit) {\n  const id = env.USER_PRESENCE.idFromString(userId);\n  const stub = env.USER_PRESENCE.get(id);\n  const url = `https://user-presence/${path}`;\n  return stub.fetch(new Request(url, init));\n}\n\npresenceRoutes.use('/internal/*', internalAuth());\n\npresenceRoutes.post('/internal/presence/set', async (c) => {\n  const body = (await c.req.json()) as PresencePayload;\n  const userId = body.userId;\n  if (!userId) throw new AppError('userId is required', 400, 'INVALID_PAYLOAD');\n  const response = await fetchPresence(c.env, userId, 'set', {\n    method: 'POST',\n    body: JSON.stringify({\n      ...body,\n      userId,\n      lastSeenAt: new Date().toISOString()\n    }),\n    headers: { 'Content-Type': 'application/json' }\n  });\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.post('/internal/presence/touch', async (c) => {\n  const body = (await c.req.json().catch(() => ({}))) as { userId?: string };\n  const userId = body.userId;\n  if (!userId) throw new AppError('userId is required', 400, 'INVALID_PAYLOAD');\n  const response = await fetchPresence(c.env, userId, 'touch', { method: 'POST' });\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.post('/internal/presence/offline', async (c) => {\n  const body = (await c.req.json().catch(() => ({}))) as { userId?: string };\n  const userId = body.userId;\n  if (!userId) throw new AppError('userId is required', 400, 'INVALID_PAYLOAD');\n  const response = await fetchPresence(c.env, userId, 'offline', { method: 'POST' });\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.get('/internal/presence/status/:userId', async (c) => {\n  const userId = c.req.param('userId');\n  if (!userId) throw new AppError('userId is required', 400, 'INVALID_PATH_PARAM');\n  const response = await fetchPresence(c.env, userId, 'status');\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.use('/*', requireAuth);\n\npresenceRoutes.post('/presence/status', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const body = (await c.req.json().catch(() => ({}))) as PresencePayload;\n  const payload: PresencePayload = {\n    ...body,\n    userId,\n    status: body.status ?? 'ONLINE'\n  };\n  const response = await fetchPresence(c.env, userId, 'set', {\n    method: 'POST',\n    body: JSON.stringify({ ...payload, lastSeenAt: new Date().toISOString() }),\n    headers: { 'Content-Type': 'application/json' }\n  });\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.post('/presence/touch', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const response = await fetchPresence(c.env, userId, 'touch', { method: 'POST' });\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.post('/presence/offline', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const response = await fetchPresence(c.env, userId, 'offline', { method: 'POST' });\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\npresenceRoutes.get('/presence/status', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User context missing', 500, 'CONTEXT_MISSING_USER');\n  const response = await fetchPresence(c.env, userId, 'status');\n  const data = (await response.json().catch(() => ({}))) as Record<string, unknown>;\n  return c.json(data, response.status as any);\n});\n\nexport default presenceRoutes;\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse, paginatedResponse } from '../utils/response';\nimport {\n  recommendPartners,\n  createMatchingRequest,\n  listSentRequests,\n  listReceivedRequests,\n  acceptMatchingRequest,\n  rejectMatchingRequest,\n  listMatches,\n  removeMatch,\n  addToMatchingQueue,\n  removeFromMatchingQueue,\n  getMatchingQueueStatus,\n  recordFeedback,\n  calculateCompatibilityAnalysis\n} from '../services/matching';\nimport {\n  findBestMatches,\n  calculateAIMatchScore,\n  type MatchingPreferences\n} from '../services/aiMatching';\nimport { getUserProfile } from '../services/user';\n\nconst matchingRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\nconst requireAuth = authMiddleware();\n\nfunction getPaginationParams(c: any) {\n  const page = Math.max(Number(c.req.query('page') ?? '1'), 1);\n  const size = Math.max(Math.min(Number(c.req.query('size') ?? '20'), 50), 1);\n  return { page, size };\n}\n\nmatchingRoutes.use('*', requireAuth);\n\nasync function getMatchingSettings(env: Env, userId: string) {\n  const key = `matching:settings:${userId}`;\n  const stored = await env.CACHE.get(key, { type: 'json' }) as Record<string, unknown> | null;\n  if (stored) {\n    return stored;\n  }\n  return {\n    autoAcceptMatches: false,\n    showOnlineStatus: true,\n    allowMatchRequests: true,\n    preferredAgeRange: null,\n    preferredGenders: [],\n    preferredNationalities: [],\n    preferredLanguages: [],\n    maxDistance: null,\n    notificationSettings: {\n      matchFound: true,\n      requestReceived: true\n    }\n  };\n}\n\nmatchingRoutes.get('/partners', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n\n  const { page, size } = getPaginationParams(c);\n  try {\n    const result = await recommendPartners(c.env, userId, {\n      nativeLanguage: c.req.query('nativeLanguage') || undefined,\n      targetLanguage: c.req.query('targetLanguage') || undefined,\n      languageLevel: c.req.query('languageLevel') || undefined,\n      minAge: c.req.query('minAge') ? Number(c.req.query('minAge')) : undefined,\n      maxAge: c.req.query('maxAge') ? Number(c.req.query('maxAge')) : undefined,\n      page,\n      size\n    });\n    return paginatedResponse(c, result.data, {\n      page: result.page,\n      limit: result.size,\n      total: result.total\n    });\n  } catch (error) {\n    if (error instanceof AppError) throw error;\n    throw new AppError(\n      error instanceof Error ? error.message : 'Failed to load partners',\n      500,\n      'MATCHING_PARTNERS_FAILED'\n    );\n  }\n});\n\nmatchingRoutes.post('/partners/advanced', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n\n  const filters = await c.req.json().catch(() => ({})) as Record<string, unknown>;\n  const { page, size } = getPaginationParams(c);\n\n  try {\n    const result = await recommendPartners(c.env, userId, {\n      nativeLanguage: typeof filters.nativeLanguage === 'string' ? filters.nativeLanguage : undefined,\n      targetLanguage: typeof filters.targetLanguage === 'string' ? filters.targetLanguage : undefined,\n      languageLevel: typeof filters.proficiencyLevel === 'string' ? filters.proficiencyLevel : undefined,\n      minAge: typeof filters.minAge === 'number' ? filters.minAge : undefined,\n      maxAge: typeof filters.maxAge === 'number' ? filters.maxAge : undefined,\n      page,\n      size\n    });\n    return paginatedResponse(c, result.data, {\n      page: result.page,\n      limit: result.size,\n      total: result.total\n    });\n  } catch (error) {\n    if (error instanceof AppError) throw error;\n    throw new AppError(\n      error instanceof Error ? error.message : 'Failed to search partners',\n      500,\n      'MATCHING_SEARCH_FAILED'\n    );\n  }\n});\n\nmatchingRoutes.post('/request', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) {\n    console.error('[POST /matching/request] User ID not found in context');\n    throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  }\n\n  let body: any;\n  try {\n    body = await c.req.json();\n  } catch (parseError) {\n    console.error('[POST /matching/request] JSON parse error:', parseError);\n    throw new AppError('Invalid request body', 400, 'INVALID_JSON');\n  }\n\n  console.log('[POST /matching/request] Request details:', JSON.stringify({\n    targetUserId: body.targetUserId,\n    hasMessage: !!body.message,\n    messageLength: body.message?.length,\n    userId\n  }));\n\n  if (typeof body.targetUserId !== 'string' || !body.targetUserId.trim()) {\n    throw new AppError('targetUserId is required and must be a valid string', 400, 'INVALID_PAYLOAD');\n  }\n\n  try {\n    const result = await createMatchingRequest(c.env, {\n      senderId: userId,\n      receiverId: body.targetUserId.trim(),\n      message: typeof body.message === 'string' ? body.message.trim() : undefined\n    });\n\n    console.log('[POST /matching/request] Success:', {\n      requestId: result.requestId,\n      senderId: userId,\n      receiverId: body.targetUserId\n    });\n\n    return successResponse(c, {\n      success: true,\n      requestId: result.requestId\n    });\n  } catch (error) {\n    console.error('[POST /matching/request] Error caught:', {\n      errorType: error instanceof Error ? error.constructor.name : typeof error,\n      errorMessage: error instanceof Error ? error.message : String(error),\n      errorStack: error instanceof Error ? error.stack : undefined,\n      isAppError: error instanceof AppError,\n      statusCode: error instanceof AppError ? error.statusCode : undefined,\n      errorCode: error instanceof AppError ? error.code : undefined,\n      userId,\n      targetUserId: body.targetUserId\n    });\n\n    // AppError\uB294 \uADF8\uB300\uB85C throw (\uC801\uC808\uD55C status code\uC640 \uD568\uAED8)\n    if (error instanceof AppError) {\n      throw error;\n    }\n\n    // \uAE30\uD0C0 \uC5D0\uB7EC\uB294 500\uC73C\uB85C \uB798\uD551 (\uC608\uC0C1\uCE58 \uBABB\uD55C \uC5D0\uB7EC\uC774\uBBC0\uB85C)\n    throw new AppError(\n      error instanceof Error ? error.message : 'Failed to send matching request',\n      500,\n      'MATCHING_REQUEST_FAILED'\n    );\n  }\n});\n\nmatchingRoutes.get('/requests/sent', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listSentRequests(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nmatchingRoutes.get('/requests/received', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listReceivedRequests(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nmatchingRoutes.post('/accept/:requestId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const requestId = c.req.param('requestId');\n  const body = (await c.req.json().catch(() => ({}))) as { responseMessage?: string };\n  try {\n    await acceptMatchingRequest(c.env, {\n      requestId,\n      receiverId: userId,\n      responseMessage: body.responseMessage\n    });\n    return successResponse(c, { success: true });\n  } catch (error) {\n    if (error instanceof AppError) throw error;\n    throw new AppError(\n      error instanceof Error ? error.message : 'Failed to accept matching request',\n      400,\n      'MATCHING_ACCEPT_FAILED'\n    );\n  }\n});\n\nmatchingRoutes.post('/reject/:requestId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const requestId = c.req.param('requestId');\n  const body = (await c.req.json().catch(() => ({}))) as { responseMessage?: string };\n  try {\n    await rejectMatchingRequest(c.env, {\n      requestId,\n      receiverId: userId,\n      responseMessage: body.responseMessage\n    });\n    return successResponse(c, { success: true });\n  } catch (error) {\n    if (error instanceof AppError) throw error;\n    throw new AppError(\n      error instanceof Error ? error.message : 'Failed to reject matching request',\n      400,\n      'MATCHING_REJECT_FAILED'\n    );\n  }\n});\n\nmatchingRoutes.get('/matches', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listMatches(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nmatchingRoutes.delete('/matches/:matchId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const matchId = c.req.param('matchId');\n  await removeMatch(c.env, { matchId, userId });\n  return successResponse(c, { success: true });\n});\n\nmatchingRoutes.post('/queue', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  const sessionType = typeof body.sessionType === 'string' ? body.sessionType : 'ANY';\n  await addToMatchingQueue(c.env, userId, sessionType);\n  return successResponse(c, { success: true });\n});\n\nmatchingRoutes.delete('/queue', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  await removeFromMatchingQueue(c.env, userId);\n  return successResponse(c, { success: true });\n});\n\nmatchingRoutes.get('/queue/status', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const status = await getMatchingQueueStatus(c.env, userId);\n  return successResponse(c, status ?? {});\n});\n\nmatchingRoutes.get('/history', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const { page, size } = getPaginationParams(c);\n  const result = await listMatches(c.env, userId, page, size);\n  return paginatedResponse(c, result.data, {\n    page: result.page,\n    limit: result.size,\n    total: result.total\n  });\n});\n\nmatchingRoutes.post('/feedback', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json();\n  if (typeof body.partnerId !== 'string' || typeof body.matchId !== 'string' || typeof body.overallRating !== 'number') {\n    throw new AppError('partnerId, matchId, overallRating are required', 400, 'INVALID_PAYLOAD');\n  }\n  await recordFeedback(c.env, {\n    reviewerId: userId,\n    partnerId: body.partnerId,\n    matchId: body.matchId,\n    overallRating: body.overallRating,\n    writtenFeedback: typeof body.writtenFeedback === 'string' ? body.writtenFeedback : undefined,\n    wouldMatchAgain: typeof body.wouldMatchAgain === 'boolean' ? body.wouldMatchAgain : undefined\n  });\n  return successResponse(c, { success: true });\n});\n\nmatchingRoutes.get('/my-matches', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const result = await listMatches(c.env, userId, 1, 50);\n  return successResponse(c, result.data);\n});\n\nmatchingRoutes.get('/stats', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const matches = await listMatches(c.env, userId, 1, 20);\n  const queueStatus = await getMatchingQueueStatus(c.env, userId);\n  const activeRequest = (queueStatus as any)?.queue_status === 'WAITING';\n  return successResponse(c, {\n    totalMatches: matches.total,\n    recentMatches: matches.data.slice(0, 5),\n    activeRequest,\n    queueStatus\n  });\n});\n\nmatchingRoutes.get('/compatibility/:partnerId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const partnerId = c.req.param('partnerId');\n  const analysis = await calculateCompatibilityAnalysis(c.env, userId, partnerId);\n  return successResponse(c, {\n    partnerId,\n    ...analysis\n  });\n});\n\nmatchingRoutes.get('/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const settings = await getMatchingSettings(c.env, userId);\n  return successResponse(c, settings);\n});\n\nmatchingRoutes.patch('/settings', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const updates = await c.req.json().catch(() => ({}));\n  const current = await getMatchingSettings(c.env, userId);\n  const merged = {\n    ...current,\n    ...updates,\n    updatedAt: new Date().toISOString()\n  };\n  await c.env.CACHE.put(`matching:settings:${userId}`, JSON.stringify(merged));\n  return successResponse(c, merged);\n});\n\n// AI-powered matching endpoints\nmatchingRoutes.post('/ai/best-matches', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n\n  try {\n    log.info('[AI_BEST_MATCHES] Request started', { userId });\n\n    const body = await c.req.json().catch(() => ({}));\n    const limit = typeof body.limit === 'number' ? Math.min(body.limit, 50) : 10;\n\n    log.info('[AI_BEST_MATCHES] Request body parsed', { limit, preferences: body });\n\n    // Get user's profile\n    log.info('[AI_BEST_MATCHES] Fetching user profile', { userId });\n    const userProfile = await getUserProfile(c.env, userId);\n    if (!userProfile) {\n      log.error('[AI_BEST_MATCHES] User profile not found', undefined, { userId });\n      throw new AppError('User profile not found', 404, 'USER_NOT_FOUND');\n    }\n    log.info('[AI_BEST_MATCHES] User profile fetched', { userId, profileId: userProfile.id });\n\n    // Get candidate profiles (from existing recommendPartners logic)\n    log.info('[AI_BEST_MATCHES] Fetching candidates', { userId });\n    const candidates = await recommendPartners(c.env, userId, {\n      page: 1,\n      size: 100 // Get more candidates for AI to analyze\n    });\n    log.info('[AI_BEST_MATCHES] Candidates fetched', {\n      userId,\n      totalCandidates: candidates.total,\n      candidateCount: candidates.data.length\n    });\n\n    // Get matching preferences from body or use defaults\n    const preferences: MatchingPreferences = {\n      languageWeight: typeof body.languageWeight === 'number' ? body.languageWeight : 0.25,\n      levelWeight: typeof body.levelWeight === 'number' ? body.levelWeight : 0.15,\n      semanticWeight: typeof body.semanticWeight === 'number' ? body.semanticWeight : 0.15,\n      scheduleWeight: typeof body.scheduleWeight === 'number' ? body.scheduleWeight : 0.15,\n      goalsWeight: typeof body.goalsWeight === 'number' ? body.goalsWeight : 0.10,\n      personalityWeight: typeof body.personalityWeight === 'number' ? body.personalityWeight : 0.10,\n      topicsWeight: typeof body.topicsWeight === 'number' ? body.topicsWeight : 0.10,\n    };\n\n    log.info('[AI_BEST_MATCHES] Preferences set', { preferences });\n\n    // Find best matches using AI\n    log.info('[AI_BEST_MATCHES] Starting AI matching', {\n      userId,\n      candidateCount: candidates.data.length,\n      limit\n    });\n    const matches = await findBestMatches(\n      c.env.AI,\n      userProfile,\n      candidates.data,\n      preferences,\n      c.env,\n      limit\n    );\n    log.info('[AI_BEST_MATCHES] AI matching completed', {\n      userId,\n      matchCount: matches.length\n    });\n\n    return successResponse(c, {\n      matches,\n      totalCandidates: candidates.total,\n      analyzedCandidates: candidates.data.length,\n    });\n  } catch (error) {\n    // AppError\uB294 \uADF8\uB300\uB85C throw (\uC6D0\uB798 \uC0C1\uD0DC \uCF54\uB4DC \uC720\uC9C0)\n    if (error instanceof AppError) {\n      log.error('[AI_BEST_MATCHES] AppError occurred', error, { userId });\n      throw error;\n    }\n\n    // \uAE30\uD0C0 \uC5D0\uB7EC\uB294 500\uC73C\uB85C \uB798\uD551\n    log.error('[AI_BEST_MATCHES] Unexpected error occurred', error as Error, {\n      userId,\n      errorMessage: error instanceof Error ? error.message : String(error),\n      errorStack: error instanceof Error ? error.stack : undefined\n    });\n\n    throw new AppError(\n      error instanceof Error ? error.message : 'AI matching failed',\n      500,\n      'AI_MATCHING_FAILED'\n    );\n  }\n});\n\nmatchingRoutes.post('/ai/compatibility/:partnerId', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n  const partnerId = c.req.param('partnerId');\n\n  try {\n    const body = await c.req.json().catch(() => ({}));\n\n    // Get both profiles\n    const [userProfile, partnerProfile] = await Promise.all([\n      getUserProfile(c.env, userId),\n      getUserProfile(c.env, partnerId)\n    ]);\n\n    if (!userProfile || !partnerProfile) {\n      throw new AppError('User or partner profile not found', 404, 'PROFILE_NOT_FOUND');\n    }\n\n    // Get matching preferences\n    const preferences: MatchingPreferences = {\n      languageWeight: typeof body.languageWeight === 'number' ? body.languageWeight : 0.25,\n      levelWeight: typeof body.levelWeight === 'number' ? body.levelWeight : 0.15,\n      semanticWeight: typeof body.semanticWeight === 'number' ? body.semanticWeight : 0.15,\n      scheduleWeight: typeof body.scheduleWeight === 'number' ? body.scheduleWeight : 0.15,\n      goalsWeight: typeof body.goalsWeight === 'number' ? body.goalsWeight : 0.10,\n      personalityWeight: typeof body.personalityWeight === 'number' ? body.personalityWeight : 0.10,\n      topicsWeight: typeof body.topicsWeight === 'number' ? body.topicsWeight : 0.10,\n    };\n\n    // Calculate AI-powered compatibility score\n    const compatibility = await calculateAIMatchScore(\n      c.env.AI,\n      userProfile,\n      partnerProfile,\n      preferences,\n      c.env\n    );\n\n    return successResponse(c, {\n      partnerId,\n      compatibility\n    });\n  } catch (error) {\n    // AppError\uB294 \uADF8\uB300\uB85C throw (\uC6D0\uB798 \uC0C1\uD0DC \uCF54\uB4DC \uC720\uC9C0)\n    if (error instanceof AppError) {\n      throw error;\n    }\n\n    // \uAE30\uD0C0 \uC5D0\uB7EC\uB294 500\uC73C\uB85C \uB798\uD551\n    throw new AppError(\n      error instanceof Error ? error.message : 'AI compatibility calculation failed',\n      500,\n      'AI_COMPATIBILITY_FAILED'\n    );\n  }\n});\n\nexport default matchingRoutes;\n", "import type { Env } from '../index';\nimport { query, queryFirst, execute, transaction } from '../utils/db';\nimport { AppError } from '../utils/errors';\nimport type {\n  MatchingPartner,\n  MatchingRequestItem,\n  MatchSummary,\n  CompatibilityScoreResponseType,\n  CompatibilitySharedInsights,\n  CompatibilityCategoryDetail\n} from '../types';\nimport { createNotification } from './notifications';\n\nconst MATCHING_DEFAULT_EXPIRE_DAYS = 7;\n\ninterface RecommendOptions {\n  nativeLanguage?: string;\n  targetLanguage?: string;\n  languageLevel?: string;\n  minAge?: number;\n  maxAge?: number;\n  page: number;\n  size: number;\n}\n\ninterface RequestInsertPayload {\n  senderId: string;\n  receiverId: string;\n  message?: string;\n}\n\ninterface AcceptOptions {\n  requestId: string;\n  receiverId: string;\n  responseMessage?: string;\n}\n\ninterface RejectOptions {\n  requestId: string;\n  receiverId: string;\n  responseMessage?: string;\n}\n\ninterface RemoveMatchOptions {\n  matchId: string;\n  userId: string;\n}\n\ninterface PaginatedResult<T> {\n  data: T[];\n  page: number;\n  size: number;\n  total: number;\n}\n\ninterface TargetLanguageProfile {\n  languageId?: number;\n  languageCode?: string;\n  languageName?: string;\n  currentLevelOrder?: number | null;\n  targetLevelOrder?: number | null;\n}\n\ninterface CompatibilityProfile {\n  userId: string;\n  nativeLanguageId?: number;\n  nativeLanguageCode?: string;\n  nativeLanguageName?: string;\n  targetLanguages: TargetLanguageProfile[];\n  personalities: string[];\n  studyGoals: string[];\n  interests: string[];\n}\n\nconst MATCHING_STATUS = {\n  PENDING: 'PENDING',\n  ACCEPTED: 'ACCEPTED',\n  REJECTED: 'REJECTED',\n  CANCELLED: 'CANCELLED'\n} as const;\n\nexport async function recommendPartners(\n  env: Env,\n  userId: string,\n  options: RecommendOptions\n): Promise<PaginatedResult<MatchingPartner>> {\n  const whereClauses: string[] = ['u.user_id != ?', 'IFNULL(u.user_disable, 0) = 0'];\n  const params: (string | number)[] = [userId];\n\n  if (options.nativeLanguage) {\n    whereClauses.push('EXISTS (SELECT 1 FROM languages nl WHERE nl.language_id = u.native_lang_id AND (nl.language_code = ? OR nl.language_name = ?))');\n    params.push(options.nativeLanguage, options.nativeLanguage);\n  }\n\n  if (options.targetLanguage) {\n    whereClauses.push(\n      `EXISTS (\n        SELECT 1 FROM onboarding_lang_level oll\n        JOIN languages tl ON tl.language_id = oll.language_id\n        WHERE oll.user_id = u.user_id AND (tl.language_code = ? OR tl.language_name = ?)\n      )`\n    );\n    params.push(options.targetLanguage, options.targetLanguage);\n  }\n\n  if (options.languageLevel) {\n    whereClauses.push(\n      `EXISTS (\n        SELECT 1 FROM onboarding_lang_level oll\n        JOIN lang_level_type lt ON lt.lang_level_id = oll.target_level_id\n        WHERE oll.user_id = u.user_id AND (lt.lang_level_name = ? OR lt.category = ?)\n      )`\n    );\n    params.push(options.languageLevel, options.languageLevel);\n  }\n\n  const where = whereClauses.length ? `WHERE ${whereClauses.join(' AND ')}` : '';\n\n  // 1\uB2E8\uACC4: \uD544\uD130\uB9C1\uB41C \uD6C4\uBCF4\uC790 \uC870\uD68C (\uD398\uC774\uC9C0\uB124\uC774\uC158 \uC5C6\uC774 \uB354 \uB9CE\uC774 \uAC00\uC838\uC624\uAE30)\n  const candidateLimit = Math.min(options.size * 5, 100); // \uCD5C\uB300 100\uBA85 \uD6C4\uBCF4\n  const candidateRows = await query<{\n    user_id: string;\n    name: string | null;\n    english_name: string | null;\n    profile_image: string | null;\n    self_bio: string | null;\n    birthyear: string | null;\n    gender: string | null;\n    location_country: string | null;\n    location_city: string | null;\n    native_lang_id: number | null;\n    native_language_name: string | null;\n    native_language_code: string | null;\n    communication_method: string | null;\n    daily_minute: string | null;\n    partner_gender: string | null;\n    learning_expectation: string | null;\n    status: string | null;\n    last_seen_at: string | null;\n  }>(\n    env.DB,\n    `SELECT\n        u.user_id,\n        u.name,\n        u.english_name,\n        u.profile_image,\n        u.self_bio,\n        u.birthyear,\n        u.gender,\n        loc.country AS location_country,\n        loc.city AS location_city,\n        u.native_lang_id,\n        nl.language_name AS native_language_name,\n        nl.language_code AS native_language_code,\n        u.communication_method,\n        u.daily_minute,\n        u.partner_gender,\n        u.learning_expectation,\n        us.status,\n        us.last_seen_at\n      FROM users u\n      LEFT JOIN user_status us ON us.user_id = u.user_id\n      LEFT JOIN locations loc ON loc.location_id = u.location_id\n      LEFT JOIN languages nl ON nl.language_id = u.native_lang_id\n      ${where}\n      ORDER BY u.updated_at DESC, u.created_at DESC\n      LIMIT ?\n    `,\n    [...params, candidateLimit]\n  );\n\n  if (candidateRows.length === 0) {\n    return {\n      data: [],\n      page: options.page,\n      size: options.size,\n      total: 0\n    };\n  }\n\n  // 2\uB2E8\uACC4: \uD604\uC7AC \uC0AC\uC6A9\uC790 \uD504\uB85C\uD544 \uC870\uD68C (\uD638\uD658\uC131 \uACC4\uC0B0\uC6A9)\n  const currentUserProfile = await loadCompatibilityProfile(env, userId);\n\n  // 3\uB2E8\uACC4: \uAC01 \uD6C4\uBCF4\uC790\uC640 \uD638\uD658\uC131 \uC810\uC218 \uACC4\uC0B0\n  const userIds = candidateRows.map((row) => row.user_id);\n  const targetLanguagesMap = await loadTargetLanguages(env, userIds);\n  const interestsMap = await loadInterests(env, userIds);\n  const personalitiesMap = await loadPartnerPersonalities(env, userIds);\n\n  // \uBCD1\uB82C\uB85C \uD638\uD658\uC131 \uC810\uC218 \uACC4\uC0B0\n  const partnersWithScores = await Promise.all(\n    candidateRows.map(async (row) => {\n      const birthyearNum = row.birthyear ? Number(row.birthyear) : undefined;\n      let age: number | undefined;\n      if (birthyearNum && Number.isFinite(birthyearNum)) {\n        const currentYear = new Date().getUTCFullYear();\n        age = currentYear - birthyearNum;\n      }\n\n      const profileImageUrl = row.profile_image\n        ? `/api/v1/upload/file/${row.profile_image}`\n        : undefined;\n\n      // \uCE90\uC2DC\uC5D0\uC11C \uD638\uD658\uC131 \uC810\uC218 \uC870\uD68C\n      const cacheKey = `compatibility:${userId}:${row.user_id}`;\n      let compatibilityScore = 50; // \uAE30\uBCF8\uAC12\n      let compatibilityLevel: 'HIGH' | 'MEDIUM' | 'LOW' = 'MEDIUM';\n\n      try {\n        const cached = await env.CACHE.get(cacheKey, { type: 'json' }) as { score: number; level: string } | null;\n        if (cached) {\n          compatibilityScore = cached.score;\n          compatibilityLevel = cached.level as 'HIGH' | 'MEDIUM' | 'LOW';\n        } else {\n          // \uCE90\uC2DC \uBBF8\uC2A4: \uC2E4\uC2DC\uAC04 \uACC4\uC0B0\n          const partnerProfile: CompatibilityProfile = {\n            userId: row.user_id,\n            nativeLanguageId: row.native_lang_id ?? undefined,\n            nativeLanguageCode: row.native_language_code ?? undefined,\n            nativeLanguageName: row.native_language_name ?? undefined,\n            targetLanguages: (targetLanguagesMap.get(row.user_id) ?? []).map((lang) => ({\n              languageName: lang.languageName,\n              currentLevel: lang.currentLevel,\n              targetLevel: lang.targetLevel\n            })) as TargetLanguageProfile[],\n            personalities: personalitiesMap.get(row.user_id) ?? [],\n            studyGoals: [],\n            interests: interestsMap.get(row.user_id) ?? []\n          };\n\n          const compatibility = calculateCompatibility(currentUserProfile, partnerProfile);\n          compatibilityScore = compatibility.overallScore;\n          compatibilityLevel = compatibility.compatibilityLevel;\n\n          // \uCE90\uC2DC\uC5D0 \uC800\uC7A5 (24\uC2DC\uAC04 TTL)\n          await env.CACHE.put(\n            cacheKey,\n            JSON.stringify({ score: compatibilityScore, level: compatibilityLevel }),\n            { expirationTtl: 86400 }\n          ).catch(() => {\n            // \uCE90\uC2DC \uC800\uC7A5 \uC2E4\uD328\uD574\uB3C4 \uACC4\uC18D \uC9C4\uD589\n          });\n        }\n      } catch (error) {\n        console.error('Compatibility calculation error:', error);\n        // \uC5D0\uB7EC \uBC1C\uC0DD \uC2DC \uAE30\uBCF8\uAC12 \uC0AC\uC6A9\n      }\n\n      return {\n        userId: row.user_id,\n        englishName: row.english_name ?? row.name ?? undefined,\n        profileImageUrl,\n        selfBio: row.self_bio ?? undefined,\n        age,\n        gender: row.gender ?? undefined,\n        location: row.location_country\n          ? row.location_city\n            ? `${row.location_country}, ${row.location_city}`\n            : row.location_country\n          : undefined,\n        nativeLanguage: row.native_language_name ?? undefined,\n        targetLanguages: targetLanguagesMap.get(row.user_id) ?? [],\n        interests: interestsMap.get(row.user_id) ?? [],\n        partnerPersonalities: personalitiesMap.get(row.user_id) ?? [],\n        compatibilityScore,\n        compatibilityLevel,\n        onlineStatus: row.status ?? 'OFFLINE',\n        lastActiveTime: row.last_seen_at ?? undefined\n      };\n    })\n  );\n\n  // 4\uB2E8\uACC4: \uD638\uD658\uC131 \uC810\uC218 \uB192\uC740 \uC21C\uC73C\uB85C \uC815\uB82C\n  const sortedPartners = partnersWithScores.sort((a, b) => {\n    // \uC628\uB77C\uC778 \uC0C1\uD0DC \uC6B0\uC120\n    if (a.onlineStatus === 'ONLINE' && b.onlineStatus !== 'ONLINE') return -1;\n    if (a.onlineStatus !== 'ONLINE' && b.onlineStatus === 'ONLINE') return 1;\n\n    // \uD638\uD658\uC131 \uC810\uC218\uB85C \uC815\uB82C\n    return b.compatibilityScore - a.compatibilityScore;\n  });\n\n  // 5\uB2E8\uACC4: \uD398\uC774\uC9C0\uB124\uC774\uC158 \uC801\uC6A9\n  const offset = (options.page - 1) * options.size;\n  const paginatedData = sortedPartners.slice(offset, offset + options.size);\n\n  return {\n    data: paginatedData,\n    page: options.page,\n    size: options.size,\n    total: sortedPartners.length\n  };\n}\n\n// \uAC04\uC18C\uD654\uB41C \uD638\uD658\uC131 \uACC4\uC0B0 (\uC2E4\uC2DC\uAC04 \uC0AC\uC6A9)\nfunction calculateCompatibility(\n  current: CompatibilityProfile,\n  partner: CompatibilityProfile\n): {\n  overallScore: number;\n  compatibilityLevel: 'HIGH' | 'MEDIUM' | 'LOW';\n} {\n  const language = computeLanguageCompatibility(current, partner);\n  const personality = computePersonalityCompatibility(current, partner);\n  const goals = computeGoalCompatibility(current, partner);\n  const interests = computeInterestCompatibility(current, partner);\n\n  // \uAC00\uC911 \uD3C9\uADE0 \uACC4\uC0B0 (\uC5B8\uC5B4 30%, \uC131\uACA9 25%, \uBAA9\uD45C 25%, \uAD00\uC2EC\uC0AC 20%)\n  const overallScore = Math.round(\n    (language.score * 0.3 + personality.score * 0.25 + goals.score * 0.25 + interests.score * 0.2) * 10\n  ) / 10;\n\n  const compatibilityLevel = determineCompatibilityLevel(overallScore);\n\n  return {\n    overallScore,\n    compatibilityLevel\n  };\n}\n\nasync function loadTargetLanguages(env: Env, userIds: string[]) {\n  const map = new Map<string, MatchingPartner['targetLanguages']>();\n  if (userIds.length === 0) return map;\n\n  const placeholders = userIds.map(() => '?').join(',');\n  const rows = await query<{\n    user_id: string;\n    language_name: string | null;\n    current_level_name: string | null;\n    target_level_name: string | null;\n  }>(\n    env.DB,\n    `SELECT\n        oll.user_id,\n        lang.language_name,\n        curr.lang_level_name AS current_level_name,\n        target.lang_level_name AS target_level_name\n      FROM onboarding_lang_level oll\n      LEFT JOIN languages lang ON lang.language_id = oll.language_id\n      LEFT JOIN lang_level_type curr ON curr.lang_level_id = oll.current_level_id\n      LEFT JOIN lang_level_type target ON target.lang_level_id = oll.target_level_id\n      WHERE oll.user_id IN (${placeholders})\n    `,\n    userIds\n  );\n\n  for (const row of rows) {\n    const list = map.get(row.user_id) ?? [];\n    list.push({\n      languageName: row.language_name ?? 'Unknown',\n      currentLevel: row.current_level_name ?? undefined,\n      targetLevel: row.target_level_name ?? undefined\n    });\n    map.set(row.user_id, list);\n  }\n  return map;\n}\n\nasync function loadInterests(env: Env, userIds: string[]) {\n  const map = new Map<string, string[]>();\n  if (userIds.length === 0) return map;\n  const placeholders = userIds.map(() => '?').join(',');\n  const rows = await query<{\n    user_id: string;\n    topic_name: string | null;\n  }>(\n    env.DB,\n    `SELECT ot.user_id, t.topic_name\n       FROM onboarding_topic ot\n       JOIN topic t ON t.topic_id = ot.topic_id\n       WHERE ot.user_id IN (${placeholders})\n    `,\n    userIds\n  );\n  for (const row of rows) {\n    const list = map.get(row.user_id) ?? [];\n    if (row.topic_name) list.push(row.topic_name);\n    map.set(row.user_id, list);\n  }\n  return map;\n}\n\nasync function loadPartnerPersonalities(env: Env, userIds: string[]) {\n  const map = new Map<string, string[]>();\n  if (userIds.length === 0) return map;\n  const placeholders = userIds.map(() => '?').join(',');\n  const rows = await query<{\n    user_id: string;\n    partner_personality: string | null;\n  }>(\n    env.DB,\n    `SELECT op.user_id, pp.partner_personality\n       FROM onboarding_partner op\n       JOIN partner_personality pp ON pp.partner_personality_id = op.partner_personality_id\n       WHERE op.user_id IN (${placeholders})\n    `,\n    userIds\n  );\n  for (const row of rows) {\n    const list = map.get(row.user_id) ?? [];\n    if (row.partner_personality) list.push(row.partner_personality);\n    map.set(row.user_id, list);\n  }\n  return map;\n}\n\nfunction nowIso(): string {\n  return new Date().toISOString();\n}\n\nfunction addDays(days: number): string {\n  const date = new Date();\n  date.setUTCDate(date.getUTCDate() + days);\n  return date.toISOString();\n}\n\nfunction normalizePair(a: string, b: string): [string, string] {\n  return [a, b].sort((x, y) => (x < y ? -1 : x > y ? 1 : 0)) as [string, string];\n}\n\nexport async function createMatchingRequest(env: Env, payload: RequestInsertPayload) {\n  try {\n    console.log('[createMatchingRequest] Starting with payload:', JSON.stringify({\n      senderId: payload.senderId,\n      receiverId: payload.receiverId,\n      hasMessage: !!payload.message\n    }));\n\n    // 1. \uC785\uB825 \uAC80\uC99D\n    if (!payload.senderId || !payload.receiverId) {\n      throw new AppError('senderId\uC640 receiverId\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 400, 'MATCHING_INVALID_INPUT');\n    }\n\n    if (payload.senderId === payload.receiverId) {\n      throw new AppError('\uC790\uAE30 \uC790\uC2E0\uC5D0\uAC8C\uB294 \uB9E4\uCE6D\uC744 \uBCF4\uB0BC \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 400, 'MATCHING_SELF_REQUEST');\n    }\n\n    // 2. \uC218\uC2E0\uC790 \uC874\uC7AC \uC5EC\uBD80 \uD655\uC778\n    console.log('[createMatchingRequest] Checking if receiver exists');\n    const receiverExists = await queryFirst<{ user_id: string }>(\n      env.DB,\n      'SELECT user_id FROM users WHERE user_id = ? LIMIT 1',\n      [payload.receiverId]\n    );\n\n    if (!receiverExists) {\n      throw new AppError('\uC874\uC7AC\uD558\uC9C0 \uC54A\uB294 \uC0AC\uC6A9\uC790\uC785\uB2C8\uB2E4.', 404, 'MATCHING_USER_NOT_FOUND');\n    }\n\n    // 3. \uC911\uBCF5 \uC694\uCCAD \uD655\uC778\n    console.log('[createMatchingRequest] Checking for duplicate requests');\n    const duplicate = await queryFirst<{ request_id: string }>(\n      env.DB,\n      `SELECT request_id FROM matching_requests\n         WHERE sender_id = ? AND receiver_id = ? AND status = ?\n         LIMIT 1`,\n      [payload.senderId, payload.receiverId, MATCHING_STATUS.PENDING]\n    );\n\n    if (duplicate) {\n      console.log('[createMatchingRequest] Duplicate request found:', duplicate.request_id);\n      throw new AppError('\uC774\uBBF8 \uB300\uAE30 \uC911\uC778 \uB9E4\uCE6D \uC694\uCCAD\uC774 \uC788\uC2B5\uB2C8\uB2E4.', 400, 'MATCHING_DUPLICATE_REQUEST');\n    }\n\n    // 4. \uAE30\uC874 \uB9E4\uCE6D \uD655\uC778\n    console.log('[createMatchingRequest] Checking for existing matches');\n    const [user1, user2] = normalizePair(payload.senderId, payload.receiverId);\n    const existingMatch = await queryFirst<{ match_id: string; is_active: number }>(\n      env.DB,\n      `SELECT match_id, is_active FROM user_matches\n         WHERE (user1_id = ? AND user2_id = ?) OR (user1_id = ? AND user2_id = ?)\n         LIMIT 1`,\n      [user1, user2, user1, user2]\n    );\n\n    if (existingMatch?.is_active) {\n      console.log('[createMatchingRequest] Active match found:', existingMatch.match_id);\n      throw new AppError('\uC774\uBBF8 \uB9E4\uCE6D\uB41C \uC0AC\uC6A9\uC790\uC785\uB2C8\uB2E4.', 400, 'MATCHING_ALREADY_MATCHED');\n    }\n\n    // 5. \uB9E4\uCE6D \uC694\uCCAD \uC0DD\uC131\n    const requestId = crypto.randomUUID();\n    const now = nowIso();\n    const expiresAt = addDays(MATCHING_DEFAULT_EXPIRE_DAYS);\n\n    console.log('[createMatchingRequest] Inserting new request:', {\n      requestId,\n      senderId: payload.senderId,\n      receiverId: payload.receiverId\n    });\n\n    try {\n      await execute(\n        env.DB,\n        `INSERT INTO matching_requests (\n            request_id, sender_id, receiver_id, message, status, response_message,\n            responded_at, expires_at, created_at, updated_at\n          ) VALUES (?, ?, ?, ?, ?, NULL, NULL, ?, ?, ?)\n        `,\n        [\n          requestId,\n          payload.senderId,\n          payload.receiverId,\n          payload.message ?? null,\n          MATCHING_STATUS.PENDING,\n          expiresAt,\n          now,\n          now\n        ]\n      );\n    } catch (dbError) {\n      console.error('[createMatchingRequest] Database insert failed:', {\n        error: dbError instanceof Error ? dbError.message : String(dbError),\n        stack: dbError instanceof Error ? dbError.stack : undefined\n      });\n      throw new AppError(\n        '\uB9E4\uCE6D \uC694\uCCAD \uC0DD\uC131\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4. \uC7A0\uC2DC \uD6C4 \uB2E4\uC2DC \uC2DC\uB3C4\uD574\uC8FC\uC138\uC694.',\n        500,\n        'MATCHING_DB_INSERT_FAILED'\n      );\n    }\n\n    console.log('[createMatchingRequest] Successfully created request:', requestId);\n\n    // 6. \uC54C\uB9BC \uC804\uC1A1 (\uC2E4\uD328\uD574\uB3C4 \uB9E4\uCE6D \uC694\uCCAD\uC740 \uC131\uACF5)\n    try {\n      console.log('[createMatchingRequest] Sending notification to receiver:', payload.receiverId);\n\n      // \uBC1C\uC2E0\uC790 \uC815\uBCF4 \uC870\uD68C\n      const senderInfo = await queryFirst<{\n        english_name: string | null;\n        name: string | null;\n        profile_image: string | null;\n      }>(\n        env.DB,\n        'SELECT english_name, name, profile_image FROM users WHERE user_id = ? LIMIT 1',\n        [payload.senderId]\n      );\n\n      const senderName = senderInfo?.english_name || senderInfo?.name || '\uC775\uBA85\uC758 \uC0AC\uC6A9\uC790';\n\n      await createNotification(env, {\n        userId: payload.receiverId,\n        type: 'MATCHING_REQUEST',\n        title: '\uC0C8\uB85C\uC6B4 \uB9E4\uCE6D \uC694\uCCAD',\n        content: `${senderName}\uB2D8\uC774 \uB9E4\uCE6D\uC744 \uC694\uCCAD\uD588\uC2B5\uB2C8\uB2E4.`,\n        category: 'matching',\n        priority: 2,\n        actionUrl: `/matching/requests/received`,\n        actionData: {\n          requestId,\n          senderId: payload.senderId,\n          senderName\n        },\n        senderUserId: payload.senderId\n      });\n\n      console.log('[createMatchingRequest] Notification sent successfully');\n    } catch (notificationError) {\n      // \uC54C\uB9BC \uC804\uC1A1 \uC2E4\uD328\uB294 \uB85C\uAE45\uB9CC \uD558\uACE0 \uC694\uCCAD \uC0DD\uC131\uC740 \uC131\uACF5 \uCC98\uB9AC\n      console.error('[createMatchingRequest] Failed to send notification:', {\n        error: notificationError instanceof Error ? notificationError.message : String(notificationError),\n        stack: notificationError instanceof Error ? notificationError.stack : undefined,\n        receiverId: payload.receiverId\n      });\n    }\n\n    return { requestId };\n  } catch (error) {\n    console.error('[createMatchingRequest] Error occurred:', {\n      error: error instanceof Error ? error.message : String(error),\n      stack: error instanceof Error ? error.stack : undefined,\n      name: error instanceof Error ? error.constructor.name : typeof error,\n      payload: {\n        senderId: payload.senderId,\n        receiverId: payload.receiverId\n      }\n    });\n\n    // AppError\uB294 \uADF8\uB300\uB85C throw\n    if (error instanceof AppError) {\n      throw error;\n    }\n\n    // \uAE30\uD0C0 \uC5D0\uB7EC\uB294 AppError\uB85C \uBCC0\uD658\n    throw new AppError(\n      error instanceof Error ? error.message : '\uB9E4\uCE6D \uC694\uCCAD \uC0DD\uC131 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.',\n      500,\n      'MATCHING_REQUEST_CREATE_FAILED'\n    );\n  }\n}\n\nexport async function listSentRequests(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number\n): Promise<PaginatedResult<MatchingRequestItem>> {\n  return listRequests(env, { userId, page, size, mode: 'sent' });\n}\n\nexport async function listReceivedRequests(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number\n): Promise<PaginatedResult<MatchingRequestItem>> {\n  return listRequests(env, { userId, page, size, mode: 'received' });\n}\n\nasync function listRequests(\n  env: Env,\n  options: { userId: string; page: number; size: number; mode: 'sent' | 'received' }\n): Promise<PaginatedResult<MatchingRequestItem>> {\n  const column = options.mode === 'sent' ? 'sender_id' : 'receiver_id';\n  const partnerColumn = options.mode === 'sent' ? 'receiver_id' : 'sender_id';\n\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count FROM matching_requests WHERE ${column} = ?`,\n    [options.userId]\n  );\n  const total = totalRow?.count ?? 0;\n  const offset = (options.page - 1) * options.size;\n\n  const rows = await query<{\n    request_id: string;\n    sender_id: string;\n    receiver_id: string;\n    message: string | null;\n    status: string;\n    response_message: string | null;\n    responded_at: string | null;\n    expires_at: string | null;\n    created_at: string;\n    partner_id: string;\n    partner_name: string | null;\n    partner_profile_image: string | null;\n  }>(\n    env.DB,\n    `SELECT\n        mr.request_id,\n        mr.sender_id,\n        mr.receiver_id,\n        mr.message,\n        mr.status,\n        mr.response_message,\n        mr.responded_at,\n        mr.expires_at,\n        mr.created_at,\n        partner.user_id AS partner_id,\n        partner.name AS partner_name,\n        partner.profile_image AS partner_profile_image\n      FROM matching_requests mr\n      JOIN users partner ON partner.user_id = mr.${partnerColumn}\n      WHERE mr.${column} = ?\n      ORDER BY mr.created_at DESC\n      LIMIT ? OFFSET ?\n    `,\n    [options.userId, options.size, offset]\n  );\n\n  const data: MatchingRequestItem[] = rows.map((row) => ({\n    requestId: row.request_id,\n    senderId: row.sender_id,\n    receiverId: row.receiver_id,\n    message: row.message ?? undefined,\n    status: row.status,\n    responseMessage: row.response_message ?? undefined,\n    respondedAt: row.responded_at ?? undefined,\n    expiresAt: row.expires_at ?? undefined,\n    createdAt: row.created_at,\n    partner: {\n      userId: row.partner_id,\n      name: row.partner_name ?? undefined,\n      profileImageUrl: row.partner_profile_image\n        ? `/api/v1/upload/file/${row.partner_profile_image}`\n        : undefined\n    }\n  }));\n\n  return {\n    data,\n    page: options.page,\n    size: options.size,\n    total\n  };\n}\n\nexport async function acceptMatchingRequest(env: Env, options: AcceptOptions) {\n  const request = await queryFirst<{\n    request_id: string;\n    sender_id: string;\n    receiver_id: string;\n    status: string;\n  }>(\n    env.DB,\n    'SELECT request_id, sender_id, receiver_id, status FROM matching_requests WHERE request_id = ? LIMIT 1',\n    [options.requestId]\n  );\n\n  if (!request) {\n    throw new Error('\uB9E4\uCE6D \uC694\uCCAD\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n  if (request.receiver_id !== options.receiverId) {\n    throw new Error('\uB2E4\uB978 \uC0AC\uC6A9\uC790\uC758 \uC694\uCCAD\uC785\uB2C8\uB2E4.');\n  }\n  if (request.status !== MATCHING_STATUS.PENDING) {\n    throw new Error('\uC774\uBBF8 \uCC98\uB9AC\uB41C \uC694\uCCAD\uC785\uB2C8\uB2E4.');\n  }\n\n  const now = nowIso();\n  const [user1, user2] = normalizePair(request.sender_id, request.receiver_id);\n\n  await transaction(env.DB, [\n    {\n      sql: `UPDATE matching_requests\n              SET status = ?, response_message = ?, responded_at = ?, updated_at = ?\n            WHERE request_id = ?`,\n      params: [\n        MATCHING_STATUS.ACCEPTED,\n        options.responseMessage ?? null,\n        now,\n        now,\n        options.requestId\n      ]\n    },\n    {\n      sql: `INSERT INTO user_matches (\n                match_id, user1_id, user2_id, matched_at, is_active, created_at, updated_at\n            ) VALUES (?, ?, ?, ?, 1, ?, ?)\n            ON CONFLICT(user1_id, user2_id) DO UPDATE SET\n              is_active = 1,\n              matched_at = excluded.matched_at,\n              deactivated_at = NULL,\n              deactivated_by = NULL,\n              updated_at = excluded.updated_at`,\n      params: [crypto.randomUUID(), user1, user2, now, now, now]\n    }\n  ]);\n\n  // \uB9E4\uCE6D \uC218\uB77D \uC54C\uB9BC\uC744 \uBC1C\uC2E0\uC790\uC5D0\uAC8C \uC804\uC1A1\n  try {\n    console.log('[acceptMatchingRequest] Sending acceptance notification to sender:', request.sender_id);\n\n    // \uC218\uB77D\uD55C \uC0AC\uC6A9\uC790(receiver) \uC815\uBCF4 \uC870\uD68C\n    const receiverInfo = await queryFirst<{\n      english_name: string | null;\n      name: string | null;\n    }>(\n      env.DB,\n      'SELECT english_name, name FROM users WHERE user_id = ? LIMIT 1',\n      [request.receiver_id]\n    );\n\n    const receiverName = receiverInfo?.english_name || receiverInfo?.name || '\uC775\uBA85\uC758 \uC0AC\uC6A9\uC790';\n\n    await createNotification(env, {\n      userId: request.sender_id,\n      type: 'MATCHING_ACCEPTED',\n      title: '\uB9E4\uCE6D \uC218\uB77D',\n      content: `${receiverName}\uB2D8\uC774 \uB9E4\uCE6D\uC744 \uC218\uB77D\uD588\uC2B5\uB2C8\uB2E4. \uC774\uC81C \uCC44\uD305\uC744 \uC2DC\uC791\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4!`,\n      category: 'matching',\n      priority: 2,\n      actionUrl: `/chat`,\n      actionData: {\n        requestId: options.requestId,\n        partnerId: request.receiver_id,\n        partnerName: receiverName\n      },\n      senderUserId: request.receiver_id\n    });\n\n    console.log('[acceptMatchingRequest] Acceptance notification sent successfully');\n  } catch (notificationError) {\n    console.error('[acceptMatchingRequest] Failed to send acceptance notification:', {\n      error: notificationError instanceof Error ? notificationError.message : String(notificationError),\n      senderId: request.sender_id\n    });\n  }\n}\n\nexport async function rejectMatchingRequest(env: Env, options: RejectOptions) {\n  const request = await queryFirst<{\n    sender_id: string;\n    receiver_id: string;\n    status: string;\n  }>(\n    env.DB,\n    'SELECT sender_id, receiver_id, status FROM matching_requests WHERE request_id = ? LIMIT 1',\n    [options.requestId]\n  );\n\n  if (!request) {\n    throw new Error('\uB9E4\uCE6D \uC694\uCCAD\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n\n  if (request.receiver_id !== options.receiverId) {\n    throw new Error('\uB2E4\uB978 \uC0AC\uC6A9\uC790\uC758 \uC694\uCCAD\uC785\uB2C8\uB2E4.');\n  }\n\n  if (request.status !== MATCHING_STATUS.PENDING) {\n    throw new Error('\uC774\uBBF8 \uCC98\uB9AC\uB41C \uC694\uCCAD\uC785\uB2C8\uB2E4.');\n  }\n\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE matching_requests\n       SET status = ?, response_message = ?, responded_at = ?, updated_at = ?\n       WHERE request_id = ?`,\n    [MATCHING_STATUS.REJECTED, options.responseMessage ?? null, now, now, options.requestId]\n  );\n\n  // \uB9E4\uCE6D \uAC70\uC808 \uC54C\uB9BC\uC744 \uBC1C\uC2E0\uC790\uC5D0\uAC8C \uC804\uC1A1\n  try {\n    console.log('[rejectMatchingRequest] Sending rejection notification to sender:', request.sender_id);\n\n    // \uAC70\uC808\uD55C \uC0AC\uC6A9\uC790(receiver) \uC815\uBCF4 \uC870\uD68C\n    const receiverInfo = await queryFirst<{\n      english_name: string | null;\n      name: string | null;\n    }>(\n      env.DB,\n      'SELECT english_name, name FROM users WHERE user_id = ? LIMIT 1',\n      [request.receiver_id]\n    );\n\n    const receiverName = receiverInfo?.english_name || receiverInfo?.name || '\uC775\uBA85\uC758 \uC0AC\uC6A9\uC790';\n\n    await createNotification(env, {\n      userId: request.sender_id,\n      type: 'MATCHING_REJECTED',\n      title: '\uB9E4\uCE6D \uAC70\uC808',\n      content: `${receiverName}\uB2D8\uC774 \uB9E4\uCE6D\uC744 \uAC70\uC808\uD588\uC2B5\uB2C8\uB2E4.`,\n      category: 'matching',\n      priority: 1,\n      actionUrl: `/matching`,\n      actionData: {\n        requestId: options.requestId,\n        partnerId: request.receiver_id,\n        partnerName: receiverName\n      },\n      senderUserId: request.receiver_id\n    });\n\n    console.log('[rejectMatchingRequest] Rejection notification sent successfully');\n  } catch (notificationError) {\n    console.error('[rejectMatchingRequest] Failed to send rejection notification:', {\n      error: notificationError instanceof Error ? notificationError.message : String(notificationError),\n      senderId: request.sender_id\n    });\n  }\n}\n\nexport async function listMatches(\n  env: Env,\n  userId: string,\n  page: number,\n  size: number\n): Promise<PaginatedResult<MatchSummary>> {\n  const totalRow = await queryFirst<{ count: number }>(\n    env.DB,\n    'SELECT COUNT(*) as count FROM user_matches WHERE is_active = 1 AND (user1_id = ? OR user2_id = ?)',\n    [userId, userId]\n  );\n  const total = totalRow?.count ?? 0;\n  const offset = (page - 1) * size;\n\n  const rows = await query<{\n    match_id: string;\n    user1_id: string;\n    user2_id: string;\n    matched_at: string;\n    partner_id: string;\n    partner_name: string | null;\n    partner_profile_image: string | null;\n  }>(\n    env.DB,\n    `SELECT\n        um.match_id,\n        um.user1_id,\n        um.user2_id,\n        um.matched_at,\n        CASE WHEN um.user1_id = ? THEN um.user2_id ELSE um.user1_id END AS partner_id,\n        p.name AS partner_name,\n        p.profile_image AS partner_profile_image\n      FROM user_matches um\n      JOIN users p ON p.user_id = CASE WHEN um.user1_id = ? THEN um.user2_id ELSE um.user1_id END\n      WHERE um.is_active = 1 AND (um.user1_id = ? OR um.user2_id = ?)\n      ORDER BY um.matched_at DESC\n      LIMIT ? OFFSET ?\n    `,\n    [userId, userId, userId, userId, size, offset]\n  );\n\n  const data: MatchSummary[] = rows.map((row) => ({\n    matchId: row.match_id,\n    partnerId: row.partner_id,\n    partnerName: row.partner_name ?? undefined,\n    partnerProfileImageUrl: row.partner_profile_image\n      ? `/api/v1/upload/file/${row.partner_profile_image}`\n      : undefined,\n    matchedAt: row.matched_at\n  }));\n\n  return {\n    data,\n    page,\n    size,\n    total\n  };\n}\n\nexport async function removeMatch(env: Env, options: RemoveMatchOptions) {\n  const match = await queryFirst<{\n    match_id: string;\n    user1_id: string;\n    user2_id: string;\n    is_active: number;\n  }>(\n    env.DB,\n    'SELECT match_id, user1_id, user2_id, is_active FROM user_matches WHERE match_id = ? LIMIT 1',\n    [options.matchId]\n  );\n\n  if (!match) {\n    throw new Error('\uB9E4\uCE6D \uC815\uBCF4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n\n  if (match.is_active !== 1) {\n    return;\n  }\n\n  if (match.user1_id !== options.userId && match.user2_id !== options.userId) {\n    throw new Error('\uD574\uB2F9 \uB9E4\uCE6D\uC5D0 \uB300\uD55C \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.');\n  }\n\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `UPDATE user_matches\n       SET is_active = 0,\n           deactivated_at = ?,\n           deactivated_by = ?,\n           updated_at = ?\n       WHERE match_id = ?`,\n    [now, options.userId, now, options.matchId]\n  );\n}\n\nexport async function getMatchingQueueStatus(env: Env, userId: string) {\n  return queryFirst(\n    env.DB,\n    'SELECT queue_id, session_type, queue_status, priority_score, joined_at, estimated_wait_minutes FROM matching_queue WHERE user_id = ? ORDER BY created_at DESC LIMIT 1',\n    [userId]\n  );\n}\n\nexport async function addToMatchingQueue(env: Env, userId: string, sessionType: string) {\n  const now = nowIso();\n  await transaction(env.DB, [\n    { sql: 'DELETE FROM matching_queue WHERE user_id = ?', params: [userId] },\n    {\n      sql: `INSERT INTO matching_queue (\n              user_id, session_type, queue_status, priority_score,\n              joined_at, created_at, updated_at\n            ) VALUES (?, ?, ?, ?, ?, ?, ?)` ,\n      params: [userId, sessionType, 'WAITING', 0, now, now, now]\n    }\n  ]);\n}\n\nexport async function removeFromMatchingQueue(env: Env, userId: string) {\n  await execute(env.DB, 'DELETE FROM matching_queue WHERE user_id = ?', [userId]);\n}\n\nexport async function recordFeedback(\n  env: Env,\n  options: {\n    reviewerId: string;\n    partnerId: string;\n    matchId: string;\n    overallRating: number;\n    writtenFeedback?: string;\n    wouldMatchAgain?: boolean;\n  }\n) {\n  const now = nowIso();\n  await execute(\n    env.DB,\n    `INSERT INTO matching_feedback (\n        reviewer_id, partner_id, match_id, overall_rating,\n        written_feedback, would_match_again, created_at, updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)` ,\n    [\n      options.reviewerId,\n      options.partnerId,\n      options.matchId,\n      options.overallRating,\n      options.writtenFeedback ?? null,\n      options.wouldMatchAgain ? 1 : 0,\n      now,\n      now\n  ]\n  );\n}\n\nasync function loadCompatibilityProfile(env: Env, userId: string): Promise<CompatibilityProfile> {\n  const userRow = await queryFirst<{\n    user_id: string;\n    native_lang_id: number | null;\n    language_code: string | null;\n    language_name: string | null;\n  }>(\n    env.DB,\n    `SELECT u.user_id,\n            u.native_lang_id,\n            lang.language_code,\n            lang.language_name\n       FROM users u\n       LEFT JOIN languages lang ON lang.language_id = u.native_lang_id\n      WHERE u.user_id = ?\n      LIMIT 1`,\n    [userId]\n  );\n\n  if (!userRow) {\n    throw new AppError('\uC0AC\uC6A9\uC790\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'MATCHING_USER_NOT_FOUND');\n  }\n\n  const languageRows = await query<{\n    language_id: number | null;\n    language_code: string | null;\n    language_name: string | null;\n    current_level_order: number | null;\n    target_level_order: number | null;\n  }>(\n    env.DB,\n    `SELECT\n        oll.language_id,\n        lang.language_code,\n        lang.language_name,\n        curr.level_order AS current_level_order,\n        target.level_order AS target_level_order\n      FROM onboarding_lang_level oll\n      LEFT JOIN languages lang ON lang.language_id = oll.language_id\n      LEFT JOIN lang_level_type curr ON curr.lang_level_id = oll.current_level_id\n      LEFT JOIN lang_level_type target ON target.lang_level_id = oll.target_level_id\n     WHERE oll.user_id = ?`,\n    [userId]\n  );\n\n  const targetLanguages: TargetLanguageProfile[] = languageRows.map((row) => ({\n    languageId: row.language_id ?? undefined,\n    languageCode: row.language_code ?? undefined,\n    languageName: row.language_name ?? undefined,\n    currentLevelOrder: row.current_level_order,\n    targetLevelOrder: row.target_level_order\n  }));\n\n  const personalityMap = await loadPartnerPersonalities(env, [userId]);\n  const interestsMap = await loadInterests(env, [userId]);\n\n  const studyGoalRows = await query<{\n    motivation_name: string | null;\n  }>(\n    env.DB,\n    `SELECT m.motivation_name\n       FROM onboarding_study_goal osg\n       JOIN motivation m ON m.motivation_id = osg.motivation_id\n      WHERE osg.user_id = ?`,\n    [userId]\n  );\n\n  return {\n    userId: userRow.user_id,\n    nativeLanguageId: userRow.native_lang_id ?? undefined,\n    nativeLanguageCode: userRow.language_code ?? undefined,\n    nativeLanguageName: userRow.language_name ?? undefined,\n    targetLanguages,\n    personalities: personalityMap.get(userId) ?? [],\n    studyGoals: studyGoalRows\n      .map((row) => row.motivation_name)\n      .filter((name): name is string => Boolean(name)),\n    interests: interestsMap.get(userId) ?? []\n  };\n}\n\nfunction intersectStrings(a: string[], b: string[]): string[] {\n  const setB = new Set(b.map((value) => value.toLowerCase()));\n  const seen = new Set<string>();\n  const result: string[] = [];\n  for (const value of a) {\n    const key = value.toLowerCase();\n    if (!seen.has(key) && setB.has(key)) {\n      seen.add(key);\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nfunction computeLanguageCompatibility(\n  current: CompatibilityProfile,\n  partner: CompatibilityProfile\n): {\n  score: number;\n  description: string;\n  mutualExchangeLanguages: string[];\n  sharedTargetLanguages: string[];\n} {\n  const descriptionParts: string[] = [];\n  const mutualExchangeLanguages: string[] = [];\n\n  let score = 0;\n\n  if (current.nativeLanguageId) {\n    const partnerTargets = partner.targetLanguages.filter(\n      (lang) => lang.languageId === current.nativeLanguageId\n    );\n    if (partnerTargets.length > 0) {\n      const label = current.nativeLanguageName ?? current.nativeLanguageCode ?? 'native language';\n      mutualExchangeLanguages.push(label);\n      score += 40;\n      descriptionParts.push('\uC0C1\uB300\uAC00 \uB0B4 \uBAA8\uAD6D\uC5B4\uB97C \uD559\uC2B5 \uC911\uC785\uB2C8\uB2E4.');\n    }\n  }\n\n  if (partner.nativeLanguageId) {\n    const userTargets = current.targetLanguages.filter(\n      (lang) => lang.languageId === partner.nativeLanguageId\n    );\n    if (userTargets.length > 0) {\n      const label = partner.nativeLanguageName ?? partner.nativeLanguageCode ?? 'partner language';\n      mutualExchangeLanguages.push(label);\n      score += 40;\n      descriptionParts.push('\uB0B4\uAC00 \uC0C1\uB300\uC758 \uBAA8\uAD6D\uC5B4\uB97C \uD559\uC2B5\uD558\uACE0 \uC788\uC2B5\uB2C8\uB2E4.');\n    }\n  }\n\n  const currentTargets = current.targetLanguages\n    .map((lang) => lang.languageCode ?? lang.languageName ?? String(lang.languageId ?? ''))\n    .filter((value): value is string => value.length > 0);\n  const partnerTargets = partner.targetLanguages\n    .map((lang) => lang.languageCode ?? lang.languageName ?? String(lang.languageId ?? ''))\n    .filter((value): value is string => value.length > 0);\n\n  const sharedTargetLanguages = intersectStrings(currentTargets, partnerTargets);\n\n  if (sharedTargetLanguages.length > 0) {\n    score += 15;\n    descriptionParts.push('\uAC19\uC740 \uBAA9\uD45C \uC5B8\uC5B4\uB97C \uD568\uAED8 \uD559\uC2B5\uD558\uACE0 \uC788\uC2B5\uB2C8\uB2E4.');\n  }\n\n  let levelBonus = 0;\n  if (sharedTargetLanguages.length > 0) {\n    const averages = sharedTargetLanguages.map((code) => {\n      const normalized = code.toLowerCase();\n      const currentLanguage = current.targetLanguages.find((lang) => {\n        const candidate = lang.languageCode ?? lang.languageName ?? '';\n        return candidate.toLowerCase() === normalized;\n      });\n      const partnerLanguage = partner.targetLanguages.find((lang) => {\n        const candidate = lang.languageCode ?? lang.languageName ?? '';\n        return candidate.toLowerCase() === normalized;\n      });\n      const currentLevel = currentLanguage?.targetLevelOrder ?? currentLanguage?.currentLevelOrder;\n      const partnerLevel = partnerLanguage?.targetLevelOrder ?? partnerLanguage?.currentLevelOrder;\n      if (currentLevel != null && partnerLevel != null) {\n        const diff = Math.abs(currentLevel - partnerLevel);\n        if (diff <= 1) return 12;\n        if (diff <= 2) return 8;\n        return 5;\n      }\n      return 5;\n    });\n\n    if (averages.length > 0) {\n      levelBonus = Math.min(15, averages.reduce((sum, value) => sum + value, 0) / averages.length);\n      if (levelBonus >= 10) {\n        descriptionParts.push('\uC5B8\uC5B4 \uB808\uBCA8\uC774 \uBE44\uC2B7\uD574 \uB300\uD654\uAC00 \uC218\uC6D4\uD569\uB2C8\uB2E4.');\n      }\n    }\n  }\n\n  score += levelBonus;\n\n  if (score === 0) {\n    if (current.targetLanguages.length === 0 || partner.targetLanguages.length === 0) {\n      score = 50;\n      descriptionParts.push('\uC5B8\uC5B4 \uD559\uC2B5 \uC815\uBCF4\uAC00 \uBD80\uC871\uD558\uC5EC \uAE30\uBCF8 \uC810\uC218\uB97C \uC801\uC6A9\uD588\uC2B5\uB2C8\uB2E4.');\n    } else {\n      score = 30;\n      descriptionParts.push('\uC5B8\uC5B4 \uD559\uC2B5 \uBC29\uD5A5\uC774 \uBD80\uBD84\uC801\uC73C\uB85C\uB9CC \uACB9\uCE69\uB2C8\uB2E4.');\n    }\n  }\n\n  return {\n    score: Math.min(100, Math.round(score * 10) / 10),\n    description: descriptionParts.join(' '),\n    mutualExchangeLanguages: Array.from(new Set(mutualExchangeLanguages)),\n    sharedTargetLanguages: Array.from(new Set(sharedTargetLanguages))\n  };\n}\n\nfunction hasComplementaryTrait(traitsA: Set<string>, traitsB: Set<string>, pair: [string, string]): boolean {\n  const [first, second] = pair;\n  const aHasFirst = traitsA.has(first);\n  const aHasSecond = traitsA.has(second);\n  const bHasFirst = traitsB.has(first);\n  const bHasSecond = traitsB.has(second);\n  return (aHasFirst && bHasSecond) || (aHasSecond && bHasFirst);\n}\n\nfunction computePersonalityCompatibility(\n  current: CompatibilityProfile,\n  partner: CompatibilityProfile\n): { score: number; description: string; overlap: string[] } {\n  const traitsA = new Set(current.personalities.map((trait) => trait.toUpperCase()));\n  const traitsB = new Set(partner.personalities.map((trait) => trait.toUpperCase()));\n\n  if (traitsA.size === 0 || traitsB.size === 0) {\n    return {\n      score: 50,\n      description: '\uC131\uACA9 \uB370\uC774\uD130\uAC00 \uCDA9\uBD84\uD558\uC9C0 \uC54A\uC544 \uAE30\uBCF8 \uC810\uC218\uB97C \uC801\uC6A9\uD588\uC2B5\uB2C8\uB2E4.',\n      overlap: []\n    };\n  }\n\n  const commonTraits = Array.from(traitsA).filter((trait) => traitsB.has(trait));\n  let score = commonTraits.length * 20;\n\n  const complementaryPairs: Array<[string, string]> = [\n    ['INTROVERT', 'EXTROVERT'],\n    ['LEADER', 'SUPPORTER'],\n    ['PLANNER', 'ADVENTURER'],\n    ['ANALYTICAL', 'CREATIVE']\n  ];\n\n  let complementaryScore = 0;\n  for (const pair of complementaryPairs) {\n    if (hasComplementaryTrait(traitsA, traitsB, pair)) {\n      complementaryScore += 15;\n    }\n  }\n\n  score += complementaryScore;\n\n  if (score === 0) {\n    score = 45;\n  }\n\n  return {\n    score: Math.min(100, Math.round(score * 10) / 10),\n    description:\n      commonTraits.length > 0\n        ? '\uC131\uACA9 \uC720\uD615\uC774 \uC798 \uB9DE\uC73C\uBA70 \uBCF4\uC644 \uAD00\uACC4\uB3C4 \uAE30\uB300\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.'\n        : complementaryScore > 0\n          ? '\uC11C\uB85C\uC758 \uC131\uACA9\uC774 \uBCF4\uC644\uC801\uC778 \uC870\uD569\uC785\uB2C8\uB2E4.'\n          : '\uC131\uACA9 \uC870\uD569 \uB370\uC774\uD130\uAC00 \uC81C\uD55C\uC801\uC785\uB2C8\uB2E4.',\n    overlap: commonTraits\n  };\n}\n\nfunction computeGoalCompatibility(\n  current: CompatibilityProfile,\n  partner: CompatibilityProfile\n): { score: number; description: string; sharedGoals: string[] } {\n  if (current.studyGoals.length === 0 || partner.studyGoals.length === 0) {\n    return {\n      score: 50,\n      description: '\uD559\uC2B5 \uBAA9\uD45C \uB370\uC774\uD130\uAC00 \uBD80\uC871\uD558\uC5EC \uAE30\uBCF8 \uC810\uC218\uB97C \uC801\uC6A9\uD588\uC2B5\uB2C8\uB2E4.',\n      sharedGoals: []\n    };\n  }\n\n  const sharedGoals = intersectStrings(current.studyGoals, partner.studyGoals);\n  let score = sharedGoals.length * 25;\n\n  const normalizedCurrent = current.studyGoals.map((goal) => goal.toUpperCase());\n  const normalizedPartner = partner.studyGoals.map((goal) => goal.toUpperCase());\n  const currentSet = new Set(normalizedCurrent);\n  const partnerSet = new Set(normalizedPartner);\n\n  const complementaryPairs: Array<[string, string]> = [\n    ['BUSINESS', 'CASUAL'],\n    ['ACADEMIC', 'PRACTICAL'],\n    ['TEST_PREP', 'CONVERSATION']\n  ];\n\n  for (const [a, b] of complementaryPairs) {\n    if ((currentSet.has(a) && partnerSet.has(b)) || (currentSet.has(b) && partnerSet.has(a))) {\n      score += 20;\n      break;\n    }\n  }\n\n  if (score === 0) {\n    score = 45;\n  }\n\n  return {\n    score: Math.min(100, Math.round(score * 10) / 10),\n    description:\n      sharedGoals.length > 0\n        ? '\uACF5\uD1B5 \uD559\uC2B5 \uBAA9\uD45C\uAC00 \uC788\uC5B4 \uD559\uC2B5 \uBC29\uD5A5\uC774 \uC720\uC0AC\uD569\uB2C8\uB2E4.'\n        : '\uD559\uC2B5 \uBAA9\uD45C\uAC00 \uBCF4\uC644\uC801\uC774\uC5B4\uC11C \uC11C\uB85C \uC2DC\uB108\uC9C0\uB97C \uB0BC \uC218 \uC788\uC2B5\uB2C8\uB2E4.',\n    sharedGoals\n  };\n}\n\nfunction computeInterestCompatibility(\n  current: CompatibilityProfile,\n  partner: CompatibilityProfile\n): { score: number; description: string; sharedInterests: string[] } {\n  if (current.interests.length === 0 || partner.interests.length === 0) {\n    return {\n      score: 50,\n      description: '\uAD00\uC2EC\uC0AC \uB370\uC774\uD130\uAC00 \uBD80\uC871\uD558\uC5EC \uAE30\uBCF8 \uC810\uC218\uB97C \uC801\uC6A9\uD588\uC2B5\uB2C8\uB2E4.',\n      sharedInterests: []\n    };\n  }\n\n  const sharedInterests = intersectStrings(current.interests, partner.interests);\n  const totalUnique = new Set(\n    [...current.interests.map((i) => i.toLowerCase()), ...partner.interests.map((i) => i.toLowerCase())]\n  ).size;\n  const ratio = totalUnique > 0 ? (sharedInterests.length * 2) / totalUnique : 0;\n  const score = Math.round(Math.min(100, ratio * 1000)) / 10;\n\n  return {\n    score,\n    description:\n      sharedInterests.length > 0\n        ? '\uACF5\uD1B5 \uAD00\uC2EC\uC0AC\uAC00 \uC788\uC5B4 \uC790\uC5F0\uC2A4\uB7FD\uAC8C \uB300\uD654\uB97C \uC774\uC5B4\uAC08 \uC218 \uC788\uC2B5\uB2C8\uB2E4.'\n        : '\uAD00\uC2EC\uC0AC\uAC00 \uB2E4\uC591\uD558\uAC8C \uBD84\uD3EC\uD574 \uC788\uC5B4 \uC0C8\uB85C\uC6B4 \uC8FC\uC81C\uB97C \uACF5\uC720\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.',\n    sharedInterests\n  };\n}\n\nfunction determineCompatibilityLevel(score: number): 'HIGH' | 'MEDIUM' | 'LOW' {\n  if (score >= 80) return 'HIGH';\n  if (score >= 60) return 'MEDIUM';\n  return 'LOW';\n}\n\nfunction createRecommendation(\n  score: number,\n  categoryScores: Record<string, number>\n): string {\n  let message = '';\n  if (score >= 80) {\n    message = '\uB9E4\uC6B0 \uC88B\uC740 \uB9E4\uCE6D\uC785\uB2C8\uB2E4! ';\n  } else if (score >= 60) {\n    message = '\uAD1C\uCC2E\uC740 \uB9E4\uCE6D\uC785\uB2C8\uB2E4. ';\n  } else {\n    message = '\uD638\uD658\uC131\uC774 \uB0AE\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4. ';\n  }\n\n  const bestCategory = Object.entries(categoryScores)\n    .sort((a, b) => b[1] - a[1])\n    .map(([category]) => category)[0];\n\n  switch (bestCategory) {\n    case 'language':\n      message += '\uC5B8\uC5B4 \uAD50\uD658\uC5D0 \uCD5C\uC801\uD654\uB41C \uD30C\uD2B8\uB108\uC785\uB2C8\uB2E4.';\n      break;\n    case 'personality':\n      message += '\uC131\uACA9\uC774 \uC798 \uB9DE\uB294 \uD30C\uD2B8\uB108\uC785\uB2C8\uB2E4.';\n      break;\n    case 'goals':\n      message += '\uD559\uC2B5 \uBAA9\uD45C\uAC00 \uBE44\uC2B7\uD55C \uD30C\uD2B8\uB108\uC785\uB2C8\uB2E4.';\n      break;\n    case 'interests':\n      message += '\uACF5\uD1B5 \uAD00\uC2EC\uC0AC\uAC00 \uB9CE\uC740 \uD30C\uD2B8\uB108\uC785\uB2C8\uB2E4.';\n      break;\n    default:\n      message += '\uD568\uAED8 \uD559\uC2B5\uD558\uBA70 \uC2DC\uB108\uC9C0\uB97C \uD655\uC778\uD574\uBCF4\uC138\uC694!';\n  }\n\n  return message;\n}\n\nexport async function calculateCompatibilityAnalysis(\n  env: Env,\n  currentUserId: string,\n  partnerId: string\n): Promise<CompatibilityScoreResponseType> {\n  if (currentUserId === partnerId) {\n    throw new AppError('\uC790\uC2E0\uACFC\uC758 \uD638\uD658\uC131\uC740 \uBD84\uC11D\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 400, 'MATCHING_SELF_COMPATIBILITY');\n  }\n\n  const [currentProfile, partnerProfile] = await Promise.all([\n    loadCompatibilityProfile(env, currentUserId),\n    loadCompatibilityProfile(env, partnerId)\n  ]);\n\n  const language = computeLanguageCompatibility(currentProfile, partnerProfile);\n  const personality = computePersonalityCompatibility(currentProfile, partnerProfile);\n  const goals = computeGoalCompatibility(currentProfile, partnerProfile);\n  const interests = computeInterestCompatibility(currentProfile, partnerProfile);\n\n  const overallScore = Math.round(\n    (language.score * 0.3 + personality.score * 0.25 + goals.score * 0.25 + interests.score * 0.2) * 10\n  ) / 10;\n\n  const categoryScores: Record<string, number> = {\n    language: language.score,\n    personality: personality.score,\n    goals: goals.score,\n    interests: interests.score\n  };\n\n  const categoryDetails: CompatibilityCategoryDetail[] = [\n    { category: 'language', score: language.score, description: language.description },\n    { category: 'personality', score: personality.score, description: personality.description },\n    { category: 'goals', score: goals.score, description: goals.description },\n    { category: 'interests', score: interests.score, description: interests.description }\n  ];\n\n  const sharedInsights: CompatibilitySharedInsights = {\n    mutualExchangeLanguages: language.mutualExchangeLanguages,\n    sharedTargetLanguages: language.sharedTargetLanguages,\n    sharedInterests: interests.sharedInterests,\n    sharedGoals: goals.sharedGoals,\n    personalityOverlap: personality.overlap\n  };\n\n  return {\n    overallScore,\n    compatibilityLevel: determineCompatibilityLevel(overallScore),\n    recommendation: createRecommendation(overallScore, categoryScores),\n    categoryScores,\n    categoryDetails,\n    sharedInsights\n  };\n}\n", "// AI \uAE30\uBC18 \uB9E4\uCE6D \uC2DC\uC2A4\uD15C\n// LLM \uC784\uBCA0\uB529 \uBC0F \uC758\uBBF8\uB860\uC801 \uC720\uC0AC\uB3C4 \uAE30\uBC18 \uD30C\uD2B8\uB108 \uB9E4\uCE6D\n\nimport { generateEmbedding, generateChatCompletion, sanitizeJsonResponse, type ChatMessage } from './ai';\nimport { log } from '../utils/logger';\nimport type { UserProfile, MatchingPartner } from '../types';\nimport type { Env } from '../index';\nimport { query } from '../utils/db';\n\n// Extended profile for AI matching (combines UserProfile with additional data)\nexport interface ExtendedMatchingProfile {\n  userId: string;\n  name: string;\n\n  // \uC5B8\uC5B4 \uC815\uBCF4\n  nativeLanguage: string;\n  nativeLanguageCode?: string;\n  targetLanguages: Array<{\n    language: string;\n    languageCode?: string;\n    currentLevel: string;  // CEFR level\n    targetLevel?: string;\n  }>;\n\n  // \uD559\uC2B5 \uC815\uBCF4\n  studyGoals: string[];\n  interests: string[];\n  personalities: string[];\n\n  // \uD504\uB85C\uD544 \uC815\uBCF4\n  bio?: string;\n  age?: number;\n  gender?: string;\n  location?: string;\n\n  // \uCEE4\uBBA4\uB2C8\uCF00\uC774\uC158 \uC120\uD638\uB3C4\n  communicationMethod?: string;\n  dailyMinute?: string;\n  learningExpectation?: string;\n}\n\nexport interface MatchingPreferences {\n  languageWeight: number;      // 0-1, \uC5B8\uC5B4 \uD638\uD658\uC131 \uAC00\uC911\uCE58 (\uAE30\uBCF8 0.25)\n  levelWeight: number;          // 0-1, \uB808\uBCA8 \uD638\uD658\uC131 \uAC00\uC911\uCE58 (\uAE30\uBCF8 0.15)\n  semanticWeight: number;       // 0-1, \uC758\uBBF8\uB860\uC801 \uC720\uC0AC\uB3C4 \uAC00\uC911\uCE58 (\uAE30\uBCF8 0.15)\n  scheduleWeight: number;       // 0-1, \uC77C\uC815 \uD638\uD658\uC131 \uAC00\uC911\uCE58 (\uAE30\uBCF8 0.15)\n  goalsWeight: number;          // 0-1, \uBAA9\uD45C \uC77C\uCE58 \uAC00\uC911\uCE58 (\uAE30\uBCF8 0.10)\n  personalityWeight: number;    // 0-1, \uC131\uACA9 \uD638\uD658\uC131 \uAC00\uC911\uCE58 (\uAE30\uBCF8 0.10)\n  topicsWeight: number;         // 0-1, \uC8FC\uC81C \uC911\uBCF5 \uAC00\uC911\uCE58 (\uAE30\uBCF8 0.10)\n}\n\nexport interface MatchScore {\n  userId: string;\n  overallScore: number;  // 0-100\n  breakdown: {\n    languageCompatibility: number;   // 0-100\n    levelCompatibility: number;       // 0-100\n    semanticSimilarity: number;       // 0-100\n    scheduleCompatibility: number;    // 0-100\n    goalAlignment: number;            // 0-100\n    personalityMatch: number;         // 0-100\n    topicOverlap: number;            // 0-100\n  };\n  aiReasons: string[];  // LLM\uC774 \uC0DD\uC131\uD55C \uB9E4\uCE6D \uC774\uC720\n  suggestedTopics: string[];  // \uB300\uD654 \uCD94\uCC9C \uC8FC\uC81C\n  compatibilityInsights: string;  // AI \uC0DD\uC131 \uC778\uC0AC\uC774\uD2B8\n}\n\nconst CEFR_LEVELS = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\n\nfunction getCEFRLevelIndex(level: string): number {\n  const idx = CEFR_LEVELS.indexOf(level.toUpperCase());\n  return idx === -1 ? 0 : idx;\n}\n\nfunction cosineSimilarity(a: number[], b: number[]): number {\n  if (a.length !== b.length || a.length === 0) return 0;\n\n  let dotProduct = 0;\n  let normA = 0;\n  let normB = 0;\n\n  for (let i = 0; i < a.length; i++) {\n    dotProduct += a[i] * b[i];\n    normA += a[i] * a[i];\n    normB += b[i] * b[i];\n  }\n\n  if (normA === 0 || normB === 0) return 0;\n\n  return dotProduct / (Math.sqrt(normA) * Math.sqrt(normB));\n}\n\nfunction calculateLanguageCompatibility(user: ExtendedMatchingProfile, candidate: ExtendedMatchingProfile): number {\n  // \uC5B8\uC5B4 \uAD50\uD658 \uAC00\uB2A5 \uC5EC\uBD80 \uCCB4\uD06C\n  // user\uC758 native = candidate\uC758 target \uC911 \uD558\uB098 && candidate\uC758 native = user\uC758 target \uC911 \uD558\uB098\n\n  const userNative = user.nativeLanguageCode || user.nativeLanguage;\n  const candidateNative = candidate.nativeLanguageCode || candidate.nativeLanguage;\n\n  const userTargetCodes = user.targetLanguages.map(t => t.languageCode || t.language);\n  const candidateTargetCodes = candidate.targetLanguages.map(t => t.languageCode || t.language);\n\n  const userTeachesCandidateLearns = candidateTargetCodes.includes(userNative);\n  const candidateTeachesUserLearns = userTargetCodes.includes(candidateNative);\n\n  if (userTeachesCandidateLearns && candidateTeachesUserLearns) {\n    return 100;  // \uC644\uBCBD\uD55C \uC5B8\uC5B4 \uAD50\uD658\n  } else if (userTeachesCandidateLearns || candidateTeachesUserLearns) {\n    return 60;  // \uC77C\uBC29\uD5A5 \uC5B8\uC5B4 \uAD50\uD658\n  } else {\n    // \uAC19\uC740 \uC5B8\uC5B4\uB97C \uBC30\uC6B0\uB294 \uACBD\uC6B0\n    const overlap = userTargetCodes.filter(lang => candidateTargetCodes.includes(lang));\n    return overlap.length > 0 ? 40 : 0;\n  }\n}\n\nfunction calculateLevelCompatibility(user: ExtendedMatchingProfile, candidate: ExtendedMatchingProfile): number {\n  // \uB808\uBCA8 \uCC28\uC774\uAC00 \uC801\uC744\uC218\uB85D \uC88B\uC74C (\u00B11 \uB808\uBCA8\uC774 \uC774\uC0C1\uC801)\n  if (user.targetLanguages.length === 0 || candidate.targetLanguages.length === 0) {\n    return 50;  // \uC911\uB9BD\n  }\n\n  // \uACF5\uD1B5 \uD559\uC2B5 \uC5B8\uC5B4 \uCC3E\uAE30\n  const userTargets = user.targetLanguages;\n  const candidateTargets = candidate.targetLanguages;\n\n  let totalScore = 0;\n  let count = 0;\n\n  for (const userTarget of userTargets) {\n    for (const candidateTarget of candidateTargets) {\n      if (userTarget.languageCode === candidateTarget.languageCode ||\n          userTarget.language === candidateTarget.language) {\n        const userLevel = getCEFRLevelIndex(userTarget.currentLevel);\n        const candidateLevel = getCEFRLevelIndex(candidateTarget.currentLevel);\n        const diff = Math.abs(userLevel - candidateLevel);\n\n        // \uB808\uBCA8 \uCC28\uC774\uC5D0 \uB530\uB978 \uC810\uC218: 0\uCC28\uC774=100, 1\uCC28\uC774=80, 2\uCC28\uC774=60, 3\uCC28\uC774=40, 4\uCC28\uC774=20, 5\uCC28\uC774=0\n        const score = Math.max(0, 100 - diff * 20);\n        totalScore += score;\n        count++;\n      }\n    }\n  }\n\n  return count > 0 ? totalScore / count : 50;\n}\n\nfunction calculateScheduleCompatibility(user: ExtendedMatchingProfile, candidate: ExtendedMatchingProfile): number {\n  // \uD604\uC7AC\uB294 dailyMinute \uAE30\uBC18\uC73C\uB85C \uAC04\uB2E8\uD788 \uACC4\uC0B0\n  // \uB098\uC911\uC5D0 \uB354 \uC815\uAD50\uD55C \uC2DC\uAC04\uB300 \uC911\uBCF5 \uACC4\uC0B0 \uAC00\uB2A5\n\n  if (!user.dailyMinute && !candidate.dailyMinute) {\n    return 50;  // \uC815\uBCF4 \uC5C6\uC73C\uBA74 \uC911\uB9BD\n  }\n\n  if (user.dailyMinute === candidate.dailyMinute) {\n    return 100;\n  }\n\n  // \uC77C\uC815 \uC815\uBCF4\uAC00 \uC788\uC73C\uBA74 \uBD80\uBD84 \uC810\uC218\n  return user.dailyMinute && candidate.dailyMinute ? 60 : 30;\n}\n\nfunction calculateGoalAlignment(user: ExtendedMatchingProfile, candidate: ExtendedMatchingProfile): number {\n  if (user.studyGoals.length === 0 || candidate.studyGoals.length === 0) {\n    return 50;  // \uC815\uBCF4 \uC5C6\uC73C\uBA74 \uC911\uB9BD\n  }\n\n  const overlap = user.studyGoals.filter(goal =>\n    candidate.studyGoals.includes(goal)\n  );\n\n  const maxLength = Math.max(user.studyGoals.length, candidate.studyGoals.length);\n  return (overlap.length / maxLength) * 100;\n}\n\nfunction calculatePersonalityMatch(user: ExtendedMatchingProfile, candidate: ExtendedMatchingProfile): number {\n  if (user.personalities.length === 0 || candidate.personalities.length === 0) {\n    return 50;  // \uC815\uBCF4 \uC5C6\uC73C\uBA74 \uC911\uB9BD\n  }\n\n  // \uC131\uACA9 \uD2B9\uC131 \uC911\uBCF5 \uACC4\uC0B0\n  const overlap = user.personalities.filter(trait =>\n    candidate.personalities.includes(trait)\n  );\n\n  const maxLength = Math.max(user.personalities.length, candidate.personalities.length);\n  return (overlap.length / maxLength) * 100;\n}\n\nfunction calculateTopicOverlap(user: ExtendedMatchingProfile, candidate: ExtendedMatchingProfile): number {\n  if (user.interests.length === 0 || candidate.interests.length === 0) {\n    return 50;  // \uC815\uBCF4 \uC5C6\uC73C\uBA74 \uC911\uB9BD\n  }\n\n  const overlap = user.interests.filter(interest =>\n    candidate.interests.includes(interest)\n  );\n\n  const maxLength = Math.max(user.interests.length, candidate.interests.length);\n  return (overlap.length / maxLength) * 100;\n}\n\n/**\n * UserProfile\uC744 ExtendedMatchingProfile\uB85C \uBCC0\uD658\n */\nexport async function convertToExtendedProfile(\n  env: Env,\n  profile: UserProfile | MatchingPartner\n): Promise<ExtendedMatchingProfile> {\n  const userId = 'id' in profile ? profile.id : profile.userId;\n\n  // \uBAA9\uD45C \uC5B8\uC5B4 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30\n  const targetLangs = await query<{\n    language_id: number;\n    language_code: string;\n    language_name: string;\n    current_level_name: string | null;\n    target_level_name: string | null;\n  }>(\n    env.DB,\n    `SELECT\n      l.language_id,\n      l.language_code,\n      l.language_name,\n      curr.lang_level_name as current_level_name,\n      tgt.lang_level_name as target_level_name\n    FROM onboarding_lang_level oll\n    JOIN languages l ON l.language_id = oll.language_id\n    LEFT JOIN lang_level_type curr ON curr.lang_level_id = oll.current_level_id\n    LEFT JOIN lang_level_type tgt ON tgt.lang_level_id = oll.target_level_id\n    WHERE oll.user_id = ?`,\n    [userId]\n  );\n\n  // \uD559\uC2B5 \uBAA9\uD45C \uAC00\uC838\uC624\uAE30\n  const goals = await query<{ goal_name: string }>(\n    env.DB,\n    `SELECT g.goal_name\n    FROM onboarding_goals og\n    JOIN goals g ON g.goal_id = og.goal_id\n    WHERE og.user_id = ?`,\n    [userId]\n  );\n\n  // \uAD00\uC2EC\uC0AC \uAC00\uC838\uC624\uAE30\n  const interests = await query<{ interest_name: string }>(\n    env.DB,\n    `SELECT i.interest_name\n    FROM onboarding_interests oi\n    JOIN interests i ON i.interest_id = oi.interest_id\n    WHERE oi.user_id = ?`,\n    [userId]\n  );\n\n  // \uC131\uACA9 \uD2B9\uC131 \uAC00\uC838\uC624\uAE30\n  const personalities = await query<{ personality_name: string }>(\n    env.DB,\n    `SELECT p.personality_name\n    FROM onboarding_personalities op\n    JOIN personalities p ON p.personality_id = op.personality_id\n    WHERE op.user_id = ?`,\n    [userId]\n  );\n\n  const extended: ExtendedMatchingProfile = {\n    userId,\n    name: profile.englishName || profile.name || 'Unknown',\n    nativeLanguage: profile.nativeLanguage?.name || '',\n    nativeLanguageCode: profile.nativeLanguage?.code,\n    targetLanguages: targetLangs.map(t => ({\n      language: t.language_name,\n      languageCode: t.language_code,\n      currentLevel: t.current_level_name || 'A1',\n      targetLevel: t.target_level_name || undefined\n    })),\n    studyGoals: goals.map(g => g.goal_name),\n    interests: interests.map(i => i.interest_name),\n    personalities: personalities.map(p => p.personality_name),\n    bio: profile.selfBio,\n    communicationMethod: profile.communicationMethod,\n    dailyMinute: profile.dailyMinute,\n    learningExpectation: profile.learningExpectation,\n  };\n\n  // \uB098\uC774 \uACC4\uC0B0 (birthyear\uAC00 \uC788\uB294 \uACBD\uC6B0)\n  if (profile.birthyear) {\n    const currentYear = new Date().getFullYear();\n    extended.age = currentYear - parseInt(profile.birthyear);\n  }\n\n  // \uC131\uBCC4\n  if (profile.gender) {\n    extended.gender = profile.gender;\n  }\n\n  // \uC704\uCE58 (location\uC774 \uC788\uB294 \uACBD\uC6B0)\n  if ('location' in profile && profile.location) {\n    extended.location = profile.location.country + (profile.location.city ? `, ${profile.location.city}` : '');\n  } else if ('locationCountry' in profile && profile.locationCountry) {\n    extended.location = profile.locationCountry + (profile.locationCity ? `, ${profile.locationCity}` : '');\n  }\n\n  return extended;\n}\n\n/**\n * \uD504\uB85C\uD544\uC758 \uC758\uBBF8\uB860\uC801 \uC784\uBCA0\uB529 \uC0DD\uC131\n */\nasync function generateProfileEmbedding(ai: Ai, profile: ExtendedMatchingProfile): Promise<number[]> {\n  // \uD504\uB85C\uD544 \uC815\uBCF4\uB97C \uD14D\uC2A4\uD2B8\uB85C \uBCC0\uD658\n  const profileText = `\nName: ${profile.name}\nNative Language: ${profile.nativeLanguage}\nLearning: ${profile.targetLanguages.map(t => `${t.language} (${t.currentLevel})`).join(', ')}\nGoals: ${profile.studyGoals.join(', ')}\nInterests: ${profile.interests.join(', ')}\nPersonality: ${profile.personalities.join(', ')}\nBio: ${profile.bio || 'N/A'}\n  `.trim();\n\n  const embedding = await generateEmbedding(ai, profileText);\n  return embedding;\n}\n\n/**\n * AI\uB97C \uC0AC\uC6A9\uD558\uC5EC \uB9E4\uCE6D \uC774\uC720 \uC0DD\uC131\n */\nasync function generateMatchingReasons(\n  ai: Ai,\n  user: ExtendedMatchingProfile,\n  candidate: ExtendedMatchingProfile,\n  score: MatchScore\n): Promise<{ reasons: string[]; insights: string; topics: string[] }> {\n  const messages: ChatMessage[] = [\n    {\n      role: 'system',\n      content: `You are a language learning matchmaking expert. Analyze two user profiles and explain why they would be good language exchange partners. Focus on:\n- Language exchange compatibility\n- Shared interests and goals\n- Personality compatibility\n- Conversation topics they could enjoy together\n\nRespond in JSON format:\n{\n  \"reasons\": [\"reason1\", \"reason2\", \"reason3\"],\n  \"insights\": \"overall compatibility insight\",\n  \"topics\": [\"topic1\", \"topic2\", \"topic3\", \"topic4\", \"topic5\"]\n}`\n    },\n    {\n      role: 'user',\n      content: `User 1:\n- Name: ${user.name}\n- Native: ${user.nativeLanguage}, Learning: ${user.targetLanguages.map(t => t.language).join(', ')}\n- Goals: ${user.studyGoals.join(', ')}\n- Interests: ${user.interests.join(', ')}\n- Personality: ${user.personalities.join(', ')}\n\nUser 2:\n- Name: ${candidate.name}\n- Native: ${candidate.nativeLanguage}, Learning: ${candidate.targetLanguages.map(t => t.language).join(', ')}\n- Goals: ${candidate.studyGoals.join(', ')}\n- Interests: ${candidate.interests.join(', ')}\n- Personality: ${candidate.personalities.join(', ')}\n\nCompatibility Score: ${score.overallScore}/100\nLanguage Match: ${score.breakdown.languageCompatibility}/100\nLevel Match: ${score.breakdown.levelCompatibility}/100\nGoals Alignment: ${score.breakdown.goalAlignment}/100\nTopic Overlap: ${score.breakdown.topicOverlap}/100`\n    }\n  ];\n\n  try {\n    const response = await generateChatCompletion(ai, messages, {\n      model: '@cf/meta/llama-3.3-70b-instruct-fp8-fast',\n      temperature: 0.7,\n      max_tokens: 800\n    });\n\n    const sanitized = sanitizeJsonResponse(response);\n    const parsed = JSON.parse(sanitized);\n\n    return {\n      reasons: Array.isArray(parsed.reasons) ? parsed.reasons.slice(0, 5) : [],\n      insights: typeof parsed.insights === 'string' ? parsed.insights : '',\n      topics: Array.isArray(parsed.topics) ? parsed.topics.slice(0, 5) : []\n    };\n  } catch (error) {\n    log.error('Failed to generate matching reasons:', error);\n    return {\n      reasons: ['Language exchange compatibility', 'Shared learning goals'],\n      insights: 'Compatible language learning partners',\n      topics: ['Culture', 'Travel', 'Daily Life']\n    };\n  }\n}\n\n/**\n * \uB450 \uC0AC\uC6A9\uC790 \uAC04\uC758 AI \uAE30\uBC18 \uB9E4\uCE6D \uC810\uC218 \uACC4\uC0B0\n */\nexport async function calculateAIMatchScore(\n  ai: Ai,\n  user: UserProfile | MatchingPartner,\n  candidate: UserProfile | MatchingPartner,\n  preferences: MatchingPreferences,\n  env: Env\n): Promise<MatchScore> {\n  const userId = 'id' in user ? user.id : user.userId;\n  const candidateId = 'id' in candidate ? candidate.id : candidate.userId;\n\n  try {\n    log.info('[CALCULATE_AI_MATCH_SCORE] Starting', { userId, candidateId });\n\n    // \uD504\uB85C\uD544 \uD655\uC7A5\n    log.info('[CALCULATE_AI_MATCH_SCORE] Converting to extended profiles', { userId, candidateId });\n    const [userExtended, candidateExtended] = await Promise.all([\n      convertToExtendedProfile(env, user),\n      convertToExtendedProfile(env, candidate)\n    ]);\n    log.info('[CALCULATE_AI_MATCH_SCORE] Extended profiles created', { userId, candidateId });\n\n    // \uAC01 \uCC28\uC6D0\uBCC4 \uD638\uD658\uC131 \uC810\uC218 \uACC4\uC0B0\n    log.info('[CALCULATE_AI_MATCH_SCORE] Calculating compatibility scores', { userId, candidateId });\n    const languageCompatibility = calculateLanguageCompatibility(userExtended, candidateExtended);\n    const levelCompatibility = calculateLevelCompatibility(userExtended, candidateExtended);\n    const scheduleCompatibility = calculateScheduleCompatibility(userExtended, candidateExtended);\n    const goalAlignment = calculateGoalAlignment(userExtended, candidateExtended);\n    const personalityMatch = calculatePersonalityMatch(userExtended, candidateExtended);\n    const topicOverlap = calculateTopicOverlap(userExtended, candidateExtended);\n\n    log.info('[CALCULATE_AI_MATCH_SCORE] Compatibility scores calculated', {\n      userId,\n      candidateId,\n      languageCompatibility,\n      levelCompatibility,\n      scheduleCompatibility,\n      goalAlignment,\n      personalityMatch,\n      topicOverlap\n    });\n\n    // \uC758\uBBF8\uB860\uC801 \uC720\uC0AC\uB3C4 \uACC4\uC0B0 (\uC784\uBCA0\uB529 \uAE30\uBC18)\n    let semanticSimilarity = 50;  // \uAE30\uBCF8\uAC12\n    try {\n      log.info('[CALCULATE_AI_MATCH_SCORE] Generating embeddings', { userId, candidateId });\n      const [userEmbedding, candidateEmbedding] = await Promise.all([\n        generateProfileEmbedding(ai, userExtended),\n        generateProfileEmbedding(ai, candidateExtended)\n      ]);\n\n      log.info('[CALCULATE_AI_MATCH_SCORE] Embeddings generated', {\n        userId,\n        candidateId,\n        userEmbeddingLength: userEmbedding.length,\n        candidateEmbeddingLength: candidateEmbedding.length\n      });\n\n      const similarity = cosineSimilarity(userEmbedding, candidateEmbedding);\n      semanticSimilarity = Math.round(similarity * 100);  // 0-1 -> 0-100\n\n      log.info('[CALCULATE_AI_MATCH_SCORE] Semantic similarity calculated', {\n        userId,\n        candidateId,\n        semanticSimilarity\n      });\n    } catch (error) {\n      log.error('[CALCULATE_AI_MATCH_SCORE] Failed to calculate semantic similarity', error as Error, {\n        userId,\n        candidateId\n      });\n    }\n\n    // \uAC00\uC911 \uD3C9\uADE0\uC73C\uB85C \uC804\uCCB4 \uC810\uC218 \uACC4\uC0B0\n    log.info('[CALCULATE_AI_MATCH_SCORE] Calculating overall score', { userId, candidateId });\n    const overallScore = Math.round(\n      languageCompatibility * preferences.languageWeight +\n      levelCompatibility * preferences.levelWeight +\n      semanticSimilarity * preferences.semanticWeight +\n      scheduleCompatibility * preferences.scheduleWeight +\n      goalAlignment * preferences.goalsWeight +\n      personalityMatch * preferences.personalityWeight +\n      topicOverlap * preferences.topicsWeight\n    );\n\n    const score: MatchScore = {\n      userId: candidateExtended.userId,\n      overallScore,\n      breakdown: {\n        languageCompatibility,\n        levelCompatibility,\n        semanticSimilarity,\n        scheduleCompatibility,\n        goalAlignment,\n        personalityMatch,\n        topicOverlap\n      },\n      aiReasons: [],\n      suggestedTopics: [],\n      compatibilityInsights: ''\n    };\n\n    log.info('[CALCULATE_AI_MATCH_SCORE] Overall score calculated', {\n      userId,\n      candidateId,\n      overallScore\n    });\n\n    // AI \uC0DD\uC131 \uB9E4\uCE6D \uC774\uC720 \uBC0F \uC8FC\uC81C \uCD94\uCC9C (\uBE44\uB3D9\uAE30\uB85C \uC0DD\uC131)\n    log.info('[CALCULATE_AI_MATCH_SCORE] Generating AI matching reasons', { userId, candidateId });\n    const aiGenerated = await generateMatchingReasons(ai, userExtended, candidateExtended, score);\n    score.aiReasons = aiGenerated.reasons;\n    score.suggestedTopics = aiGenerated.topics;\n    score.compatibilityInsights = aiGenerated.insights;\n\n    log.info('[CALCULATE_AI_MATCH_SCORE] Completed successfully', {\n      userId,\n      candidateId,\n      overallScore,\n      hasReasons: aiGenerated.reasons.length > 0,\n      hasTopics: aiGenerated.topics.length > 0\n    });\n\n    return score;\n  } catch (error) {\n    log.error('[CALCULATE_AI_MATCH_SCORE] Failed', error as Error, {\n      userId,\n      candidateId,\n      errorMessage: error instanceof Error ? error.message : String(error),\n      errorStack: error instanceof Error ? error.stack : undefined\n    });\n    throw error;\n  }\n}\n\n/**\n * \uC5EC\uB7EC \uD6C4\uBCF4 \uC911 \uCD5C\uC801\uC758 \uB9E4\uCE58 \uCC3E\uAE30\n */\nexport async function findBestMatches(\n  ai: Ai,\n  user: UserProfile | MatchingPartner,\n  candidates: (UserProfile | MatchingPartner)[],\n  preferences: MatchingPreferences,\n  env: Env,\n  limit: number = 10\n): Promise<MatchScore[]> {\n  try {\n    log.info('[FIND_BEST_MATCHES] Starting', {\n      userId: 'id' in user ? user.id : user.userId,\n      candidateCount: candidates.length,\n      limit\n    });\n\n    // \uBAA8\uB4E0 \uD6C4\uBCF4\uC5D0 \uB300\uD574 \uB9E4\uCE6D \uC810\uC218 \uACC4\uC0B0\n    const scores = await Promise.all(\n      candidates.map(async (candidate, index) => {\n        try {\n          log.info(`[FIND_BEST_MATCHES] Processing candidate ${index + 1}/${candidates.length}`, {\n            candidateId: 'id' in candidate ? candidate.id : candidate.userId\n          });\n          return await calculateAIMatchScore(ai, user, candidate, preferences, env);\n        } catch (error) {\n          log.error(`[FIND_BEST_MATCHES] Error processing candidate ${index + 1}`, error as Error, {\n            candidateId: 'id' in candidate ? candidate.id : candidate.userId,\n            errorMessage: error instanceof Error ? error.message : String(error)\n          });\n          throw error;\n        }\n      })\n    );\n\n    log.info('[FIND_BEST_MATCHES] All candidates processed', {\n      scoreCount: scores.length\n    });\n\n    // \uC810\uC218 \uC21C\uC73C\uB85C \uC815\uB82C\uD558\uACE0 \uC0C1\uC704 limit\uAC1C \uBC18\uD658\n    scores.sort((a, b) => b.overallScore - a.overallScore);\n\n    log.info('[FIND_BEST_MATCHES] Completed successfully', {\n      returnedMatches: Math.min(limit, scores.length)\n    });\n\n    return scores.slice(0, limit);\n  } catch (error) {\n    log.error('[FIND_BEST_MATCHES] Failed', error as Error, {\n      userId: 'id' in user ? user.id : user.userId,\n      candidateCount: candidates.length,\n      errorMessage: error instanceof Error ? error.message : String(error),\n      errorStack: error instanceof Error ? error.stack : undefined\n    });\n    throw error;\n  }\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport {\n  getAllAchievements,\n  getAchievementsByCategory,\n  getUserAchievements,\n  getCompletedAchievements,\n  getInProgressAchievements,\n  getAchievementStats,\n  updateAchievementProgress,\n  incrementAchievementProgress,\n  claimAchievementReward,\n  initializeUserAchievements,\n  checkAndCompleteAchievements\n} from '../services/achievement';\n\nconst achievementsRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\nfunction requireUserId(userId: string | undefined): string {\n  if (!userId) {\n    throw new AppError('\uC778\uC99D \uC815\uBCF4\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 401, 'UNAUTHORIZED');\n  }\n  return userId;\n}\n\nachievementsRoutes.use('*', requireAuth);\n\nachievementsRoutes.get('/', async (c) => {\n  const achievements = await getAllAchievements(c.env);\n  return successResponse(c, achievements);\n});\n\nachievementsRoutes.get('/category/:category', async (c) => {\n  const category = c.req.param('category');\n  if (!category) {\n    throw new AppError('\uCE74\uD14C\uACE0\uB9AC\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 400, 'INVALID_CATEGORY');\n  }\n  const achievements = await getAchievementsByCategory(c.env, category);\n  return successResponse(c, achievements);\n});\n\nachievementsRoutes.get('/my', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  await initializeUserAchievements(c.env, userId);\n  const achievements = await getUserAchievements(c.env, userId);\n  return successResponse(c, achievements);\n});\n\nachievementsRoutes.get('/my/completed', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const achievements = await getCompletedAchievements(c.env, userId);\n  return successResponse(c, achievements);\n});\n\nachievementsRoutes.get('/my/in-progress', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const achievements = await getInProgressAchievements(c.env, userId);\n  return successResponse(c, achievements);\n});\n\nachievementsRoutes.get('/my/stats', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  await initializeUserAchievements(c.env, userId);\n  const stats = await getAchievementStats(c.env, userId);\n  return successResponse(c, stats);\n});\n\nachievementsRoutes.post('/progress', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const body = await c.req.json().catch(() => ({}));\n  const achievementKey = typeof body?.achievementKey === 'string' ? body.achievementKey.trim() : '';\n  const progress = typeof body?.progress === 'number' ? body.progress : Number(body?.progress);\n  if (!achievementKey) {\n    throw new AppError('achievementKey\uB294 \uD544\uC218\uC785\uB2C8\uB2E4.', 400, 'INVALID_ACHIEVEMENT_KEY');\n  }\n  if (!Number.isFinite(progress)) {\n    throw new AppError('progress\uB294 \uC22B\uC790\uC5EC\uC57C \uD569\uB2C8\uB2E4.', 400, 'INVALID_PROGRESS');\n  }\n  const updated = await updateAchievementProgress(c.env, userId, achievementKey, progress);\n  return successResponse(c, updated);\n});\n\nachievementsRoutes.post('/progress/increment', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const achievementKey = (c.req.query('achievementKey') || '').trim();\n  const incrementRaw = c.req.query('increment');\n  const increment = incrementRaw ? Number(incrementRaw) : 1;\n  if (!achievementKey) {\n    throw new AppError('achievementKey\uB294 \uD544\uC218\uC785\uB2C8\uB2E4.', 400, 'INVALID_ACHIEVEMENT_KEY');\n  }\n  if (!Number.isFinite(increment)) {\n    throw new AppError('increment\uB294 \uC22B\uC790\uC5EC\uC57C \uD569\uB2C8\uB2E4.', 400, 'INVALID_INCREMENT');\n  }\n  const updated = await incrementAchievementProgress(c.env, userId, achievementKey, increment);\n  return successResponse(c, updated);\n});\n\nachievementsRoutes.post('/:userAchievementId/claim-reward', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const idRaw = c.req.param('userAchievementId');\n  const userAchievementId = Number(idRaw);\n  if (!Number.isFinite(userAchievementId)) {\n    throw new AppError('userAchievementId\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.', 400, 'INVALID_PATH_PARAM');\n  }\n  const result = await claimAchievementReward(c.env, userId, userAchievementId);\n  return successResponse(c, result);\n});\n\nachievementsRoutes.post('/initialize', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  await initializeUserAchievements(c.env, userId);\n  return successResponse(c, { initialized: true });\n});\n\nachievementsRoutes.post('/check-completion', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const completed = await checkAndCompleteAchievements(c.env, userId);\n  return successResponse(c, completed);\n});\n\nexport default achievementsRoutes;\n", "import type { Env } from '../index';\nimport type {\n  AchievementResponseType,\n  AchievementStatsResponseType,\n  UserAchievementResponseType\n} from '../types';\nimport { query, queryFirst, execute, transaction } from '../utils/db';\nimport { AppError } from '../utils/errors';\nimport { createNotification } from './notifications';\n\ninterface AchievementRow {\n  achievement_id: number;\n  achievement_key: string;\n  title: string;\n  description: string | null;\n  category: string;\n  type: string;\n  tier: string;\n  target_value: number | null;\n  target_unit: string | null;\n  xp_reward: number | null;\n  badge_icon_url: string | null;\n  badge_color: string | null;\n  is_active: number;\n  is_hidden: number;\n  sort_order: number | null;\n  prerequisite_achievement_id: number | null;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface UserAchievementRow {\n  user_achievement_id: number;\n  user_id: string;\n  achievement_id: number;\n  current_progress: number;\n  is_completed: number;\n  completed_at: string | null;\n  is_reward_claimed: number;\n  reward_claimed_at: string | null;\n  achievement_key: string;\n  title: string;\n  description: string | null;\n  category: string;\n  type: string;\n  tier: string;\n  target_value: number | null;\n  target_unit: string | null;\n  xp_reward: number | null;\n  badge_icon_url: string | null;\n  badge_color: string | null;\n  is_active: number;\n  is_hidden: number;\n  sort_order: number | null;\n  prerequisite_achievement_id: number | null;\n}\n\ninterface StatsRow {\n  key: string;\n  count: number;\n}\n\nconst CATEGORY_ALIAS: Record<string, string> = {\n  LEARNING: 'STUDY',\n  SKILL: 'STUDY',\n  SOCIAL: 'SOCIAL',\n  ENGAGEMENT: 'ENGAGEMENT',\n  TIME: 'STREAK',\n  MILESTONE: 'MILESTONE',\n  SPECIAL: 'SPECIAL'\n};\n\nconst DEFAULT_ACHIEVEMENTS = [\n  {\n    achievementKey: 'first_session',\n    title: '\uCCAB \uC138\uC158 \uC644\uB8CC',\n    description: '\uCCAB \uBC88\uC9F8 \uD654\uC0C1 \uC138\uC158\uC744 \uC644\uB8CC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'LEARNING',\n    type: 'COUNT',\n    tier: 'BRONZE',\n    targetValue: 1,\n    targetUnit: '\uC138\uC158',\n    xpReward: 100,\n    badgeColor: '#CD7F32',\n    sortOrder: 1\n  },\n  {\n    achievementKey: 'session_10',\n    title: '\uC138\uC158 \uB9C8\uC2A4\uD130',\n    description: '10\uBC88\uC758 \uD654\uC0C1 \uC138\uC158\uC744 \uC644\uB8CC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'LEARNING',\n    type: 'COUNT',\n    tier: 'SILVER',\n    targetValue: 10,\n    targetUnit: '\uC138\uC158',\n    xpReward: 500,\n    badgeColor: '#C0C0C0',\n    sortOrder: 2\n  },\n  {\n    achievementKey: 'session_50',\n    title: '\uC138\uC158 \uC804\uBB38\uAC00',\n    description: '50\uBC88\uC758 \uD654\uC0C1 \uC138\uC158\uC744 \uC644\uB8CC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'LEARNING',\n    type: 'COUNT',\n    tier: 'GOLD',\n    targetValue: 50,\n    targetUnit: '\uC138\uC158',\n    xpReward: 2000,\n    badgeColor: '#FFD700',\n    sortOrder: 3\n  },\n  {\n    achievementKey: 'streak_7',\n    title: '\uC77C\uC8FC\uC77C \uC5F0\uC18D',\n    description: '7\uC77C \uC5F0\uC18D\uC73C\uB85C \uC138\uC158\uC5D0 \uCC38\uC5EC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'ENGAGEMENT',\n    type: 'STREAK',\n    tier: 'SILVER',\n    targetValue: 7,\n    targetUnit: '\uC77C',\n    xpReward: 750,\n    badgeColor: '#C0C0C0',\n    sortOrder: 4\n  },\n  {\n    achievementKey: 'streak_30',\n    title: '\uD55C \uB2EC \uC5F0\uC18D',\n    description: '30\uC77C \uC5F0\uC18D\uC73C\uB85C \uC138\uC158\uC5D0 \uCC38\uC5EC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'ENGAGEMENT',\n    type: 'STREAK',\n    tier: 'GOLD',\n    targetValue: 30,\n    targetUnit: '\uC77C',\n    xpReward: 3000,\n    badgeColor: '#FFD700',\n    sortOrder: 5\n  },\n  {\n    achievementKey: 'first_friend',\n    title: '\uCCAB \uCE5C\uAD6C',\n    description: '\uCCAB \uBC88\uC9F8 \uD559\uC2B5 \uCE5C\uAD6C\uB97C \uB9CC\uB4E4\uC5C8\uC2B5\uB2C8\uB2E4!',\n    category: 'SOCIAL',\n    type: 'COUNT',\n    tier: 'BRONZE',\n    targetValue: 1,\n    targetUnit: '\uCE5C\uAD6C',\n    xpReward: 200,\n    badgeColor: '#CD7F32',\n    sortOrder: 6\n  },\n  {\n    achievementKey: 'friends_5',\n    title: '\uC778\uAE30\uC7C1\uC774',\n    description: '5\uBA85\uC758 \uD559\uC2B5 \uCE5C\uAD6C\uB97C \uB9CC\uB4E4\uC5C8\uC2B5\uB2C8\uB2E4!',\n    category: 'SOCIAL',\n    type: 'COUNT',\n    tier: 'SILVER',\n    targetValue: 5,\n    targetUnit: '\uCE5C\uAD6C',\n    xpReward: 1000,\n    badgeColor: '#C0C0C0',\n    sortOrder: 7\n  },\n  {\n    achievementKey: 'study_hours_10',\n    title: '10\uC2DC\uAC04 \uB2EC\uC131',\n    description: '\uCD1D 10\uC2DC\uAC04\uC758 \uD559\uC2B5\uC744 \uC644\uB8CC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'TIME',\n    type: 'ACCUMULATE',\n    tier: 'BRONZE',\n    targetValue: 600,\n    targetUnit: '\uBD84',\n    xpReward: 500,\n    badgeColor: '#CD7F32',\n    sortOrder: 8\n  },\n  {\n    achievementKey: 'study_hours_50',\n    title: '50\uC2DC\uAC04 \uB2EC\uC131',\n    description: '\uCD1D 50\uC2DC\uAC04\uC758 \uD559\uC2B5\uC744 \uC644\uB8CC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'TIME',\n    type: 'ACCUMULATE',\n    tier: 'SILVER',\n    targetValue: 3000,\n    targetUnit: '\uBD84',\n    xpReward: 2500,\n    badgeColor: '#C0C0C0',\n    sortOrder: 9\n  },\n  {\n    achievementKey: 'study_hours_100',\n    title: '100\uC2DC\uAC04 \uB2EC\uC131',\n    description: '\uCD1D 100\uC2DC\uAC04\uC758 \uD559\uC2B5\uC744 \uC644\uB8CC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'TIME',\n    type: 'ACCUMULATE',\n    tier: 'GOLD',\n    targetValue: 6000,\n    targetUnit: '\uBD84',\n    xpReward: 5000,\n    badgeColor: '#FFD700',\n    sortOrder: 10\n  },\n  {\n    achievementKey: 'level_up_first',\n    title: '\uCCAB \uB808\uBCA8\uC5C5',\n    description: '\uCC98\uC74C\uC73C\uB85C \uB808\uBCA8\uC774 \uC62C\uB790\uC2B5\uB2C8\uB2E4!',\n    category: 'SKILL',\n    type: 'THRESHOLD',\n    tier: 'BRONZE',\n    targetValue: 2,\n    targetUnit: '\uB808\uBCA8',\n    xpReward: 300,\n    badgeColor: '#CD7F32',\n    sortOrder: 11\n  },\n  {\n    achievementKey: 'level_5',\n    title: '\uC911\uAE09\uC790',\n    description: '\uB808\uBCA8 5\uC5D0 \uB3C4\uB2EC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'SKILL',\n    type: 'THRESHOLD',\n    tier: 'SILVER',\n    targetValue: 5,\n    targetUnit: '\uB808\uBCA8',\n    xpReward: 1500,\n    badgeColor: '#C0C0C0',\n    sortOrder: 12\n  },\n  {\n    achievementKey: 'level_10',\n    title: '\uACE0\uAE09\uC790',\n    description: '\uB808\uBCA8 10\uC5D0 \uB3C4\uB2EC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'SKILL',\n    type: 'THRESHOLD',\n    tier: 'GOLD',\n    targetValue: 10,\n    targetUnit: '\uB808\uBCA8',\n    xpReward: 5000,\n    badgeColor: '#FFD700',\n    sortOrder: 13\n  },\n  {\n    achievementKey: 'early_adopter',\n    title: '\uC5BC\uB9AC \uC5B4\uB2F5\uD130',\n    description: '\uC11C\uBE44\uC2A4 \uC624\uD508 \uCCAB \uB2EC\uC5D0 \uAC00\uC785\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'SPECIAL',\n    type: 'MILESTONE',\n    tier: 'LEGENDARY',\n    xpReward: 1000,\n    badgeColor: '#9932CC',\n    isHidden: true,\n    sortOrder: 14\n  },\n  {\n    achievementKey: 'perfect_week',\n    title: '\uC644\uBCBD\uD55C \uD55C \uC8FC',\n    description: '\uC77C\uC8FC\uC77C \uB3D9\uC548 \uB9E4\uC77C \uC138\uC158\uC5D0 \uCC38\uC5EC\uD588\uC2B5\uB2C8\uB2E4!',\n    category: 'ENGAGEMENT',\n    type: 'COMBINATION',\n    tier: 'PLATINUM',\n    targetValue: 7,\n    targetUnit: '\uC77C',\n    xpReward: 2000,\n    badgeColor: '#E5E4E2',\n    sortOrder: 15\n  }\n];\n\nfunction toBoolean(value: number | boolean | null | undefined): boolean {\n  return value === 1 || value === true;\n}\n\nfunction aliasCategory(original: string | null): string {\n  if (!original) return 'GENERAL';\n  return CATEGORY_ALIAS[original] ?? original;\n}\n\nfunction mapAchievementRow(row: AchievementRow): AchievementResponseType {\n  return {\n    id: row.achievement_id,\n    achievementKey: row.achievement_key,\n    title: row.title,\n    description: row.description ?? undefined,\n    category: aliasCategory(row.category),\n    originalCategory: row.category,\n    type: row.type,\n    tier: row.tier,\n    targetValue: row.target_value ?? undefined,\n    targetUnit: row.target_unit ?? undefined,\n    xpReward: row.xp_reward ?? undefined,\n    badgeIconUrl: row.badge_icon_url ?? undefined,\n    badgeColor: row.badge_color ?? undefined,\n    isActive: toBoolean(row.is_active),\n    isHidden: toBoolean(row.is_hidden),\n    sortOrder: row.sort_order ?? undefined,\n    prerequisiteAchievementId: row.prerequisite_achievement_id ?? undefined\n  };\n}\n\nfunction mapUserAchievementRow(row: UserAchievementRow): UserAchievementResponseType {\n  const achievement = mapAchievementRow({\n    achievement_id: row.achievement_id,\n    achievement_key: row.achievement_key,\n    title: row.title,\n    description: row.description,\n    category: row.category,\n    type: row.type,\n    tier: row.tier,\n    target_value: row.target_value,\n    target_unit: row.target_unit,\n    xp_reward: row.xp_reward,\n    badge_icon_url: row.badge_icon_url,\n    badge_color: row.badge_color,\n    is_active: row.is_active,\n    is_hidden: row.is_hidden,\n    sort_order: row.sort_order,\n    prerequisite_achievement_id: row.prerequisite_achievement_id,\n    created_at: '',\n    updated_at: ''\n  });\n\n  const targetValue = row.target_value ?? 0;\n  const current = row.current_progress ?? 0;\n  const progressPercentage = targetValue > 0 ? Math.min(100, (current / targetValue) * 100) : (toBoolean(row.is_completed) ? 100 : 0);\n\n  return {\n    id: row.user_achievement_id,\n    achievement,\n    currentProgress: current,\n    isCompleted: toBoolean(row.is_completed),\n    completedAt: row.completed_at ?? undefined,\n    isRewardClaimed: toBoolean(row.is_reward_claimed),\n    rewardClaimedAt: row.reward_claimed_at ?? undefined,\n    progressPercentage\n  };\n}\n\nasync function seedDefaultAchievements(env: Env): Promise<void> {\n  const countRow = await queryFirst<{ count: number }>(\n    env.DB,\n    'SELECT COUNT(*) as count FROM achievements'\n  );\n  if ((countRow?.count ?? 0) > 0) {\n    return;\n  }\n\n  const now = new Date().toISOString();\n  await transaction(\n    env.DB,\n    DEFAULT_ACHIEVEMENTS.map((item) => ({\n      sql: `INSERT INTO achievements (\n              achievement_key,\n              title,\n              description,\n              category,\n              type,\n              tier,\n              target_value,\n              target_unit,\n              xp_reward,\n              badge_icon_url,\n              badge_color,\n              is_active,\n              is_hidden,\n              sort_order,\n              created_at,\n              updated_at\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, 1, ?, ?, ?, ?)`,\n      params: [\n        item.achievementKey,\n        item.title,\n        item.description ?? null,\n        item.category,\n        item.type,\n        item.tier,\n        item.targetValue ?? null,\n        item.targetUnit ?? null,\n        item.xpReward ?? null,\n        item.badgeColor ?? null,\n        item.isHidden ? 1 : 0,\n        item.sortOrder ?? null,\n        now,\n        now\n      ]\n    }))\n  );\n}\n\nasync function fetchAchievementByKey(env: Env, achievementKey: string): Promise<AchievementRow> {\n  const row = await queryFirst<AchievementRow>(\n    env.DB,\n    'SELECT * FROM achievements WHERE achievement_key = ? AND is_active = 1 LIMIT 1',\n    [achievementKey]\n  );\n  if (!row) {\n    throw new AppError('\uC874\uC7AC\uD558\uC9C0 \uC54A\uB294 \uC5C5\uC801\uC785\uB2C8\uB2E4.', 404, 'ACHIEVEMENT_NOT_FOUND');\n  }\n  return row;\n}\n\nasync function ensureUserAchievement(\n  env: Env,\n  userId: string,\n  achievementId: number\n): Promise<UserAchievementRow> {\n  const existing = await queryFirst<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.achievement_id = ?\n      LIMIT 1`,\n    [userId, achievementId]\n  );\n  if (existing) {\n    return existing;\n  }\n\n  const now = new Date().toISOString();\n  await execute(\n    env.DB,\n    `INSERT INTO user_achievements (\n        user_id,\n        achievement_id,\n        current_progress,\n        is_completed,\n        completed_at,\n        is_reward_claimed,\n        reward_claimed_at,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, 0, 0, NULL, 0, NULL, ?, ?)`,\n    [userId, achievementId, now, now]\n  );\n\n  const inserted = await queryFirst<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.achievement_id = ?\n      LIMIT 1`,\n    [userId, achievementId]\n  );\n\n  if (!inserted) {\n    throw new AppError('\uC5C5\uC801 \uC815\uBCF4\uB97C \uCD08\uAE30\uD654\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 500, 'ACHIEVEMENT_INIT_FAILED');\n  }\n  return inserted;\n}\n\nasync function updateUserAchievementProgress(\n  env: Env,\n  userId: string,\n  achievement: AchievementRow,\n  progress: number,\n  incrementMode: boolean\n): Promise<UserAchievementRow> {\n  const targetValue = achievement.target_value ?? undefined;\n  const now = new Date().toISOString();\n\n  const row = await ensureUserAchievement(env, userId, achievement.achievement_id);\n  const current = incrementMode ? Math.max(0, (row.current_progress ?? 0) + progress) : Math.max(0, progress);\n\n  let isCompleted = row.is_completed;\n  let completedAt = row.completed_at;\n  if (typeof targetValue === 'number' && current >= targetValue && !toBoolean(row.is_completed)) {\n    isCompleted = 1;\n    completedAt = now;\n  }\n\n  await execute(\n    env.DB,\n    `UPDATE user_achievements\n        SET current_progress = ?,\n            is_completed = ?,\n            completed_at = ?,\n            updated_at = ?\n      WHERE user_id = ? AND achievement_id = ?`,\n    [current, isCompleted, completedAt, now, userId, achievement.achievement_id]\n  );\n\n  const updated = await queryFirst<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.achievement_id = ?\n      LIMIT 1`,\n    [userId, achievement.achievement_id]\n  );\n\n  if (!updated) {\n    throw new AppError('\uC5C5\uC801 \uC9C4\uD589\uB3C4\uB97C \uAC31\uC2E0\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 500, 'ACHIEVEMENT_UPDATE_FAILED');\n  }\n\n  return updated;\n}\n\nexport async function getAllAchievements(env: Env): Promise<AchievementResponseType[]> {\n  await seedDefaultAchievements(env);\n  const rows = await query<AchievementRow>(\n    env.DB,\n    `SELECT * FROM achievements\n      WHERE is_active = 1\n      ORDER BY COALESCE(sort_order, 9999), title`\n  );\n  return rows.map(mapAchievementRow);\n}\n\nexport async function getAchievementsByCategory(\n  env: Env,\n  category: string\n): Promise<AchievementResponseType[]> {\n  await seedDefaultAchievements(env);\n  const normalized = category.toUpperCase();\n  const rows = await query<AchievementRow>(\n    env.DB,\n    `SELECT * FROM achievements\n      WHERE is_active = 1 AND UPPER(category) = ?\n      ORDER BY COALESCE(sort_order, 9999), title`,\n    [normalized]\n  );\n  return rows.map(mapAchievementRow);\n}\n\nexport async function getUserAchievements(\n  env: Env,\n  userId: string\n): Promise<UserAchievementResponseType[]> {\n  await seedDefaultAchievements(env);\n  const rows = await query<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ?\n      ORDER BY ua.is_completed DESC, ua.completed_at DESC, COALESCE(a.sort_order, 9999)`,\n    [userId]\n  );\n  return rows.map(mapUserAchievementRow);\n}\n\nexport async function getCompletedAchievements(\n  env: Env,\n  userId: string\n): Promise<UserAchievementResponseType[]> {\n  const rows = await query<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.is_completed = 1\n      ORDER BY ua.completed_at DESC`,\n    [userId]\n  );\n  return rows.map(mapUserAchievementRow);\n}\n\nexport async function getInProgressAchievements(\n  env: Env,\n  userId: string\n): Promise<UserAchievementResponseType[]> {\n  const rows = await query<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.is_completed = 0\n      ORDER BY ua.current_progress DESC, COALESCE(a.sort_order, 9999)`,\n    [userId]\n  );\n  return rows.map(mapUserAchievementRow);\n}\n\nexport async function getAchievementStats(\n  env: Env,\n  userId: string\n): Promise<AchievementStatsResponseType> {\n  await seedDefaultAchievements(env);\n\n  const [totalRow, completedRow, inProgressRow, totalXpRow, unclaimedRow] = await Promise.all([\n    queryFirst<{ count: number }>(env.DB, 'SELECT COUNT(*) as count FROM achievements WHERE is_active = 1'),\n    queryFirst<{ count: number }>(\n      env.DB,\n      'SELECT COUNT(*) as count FROM user_achievements WHERE user_id = ? AND is_completed = 1',\n      [userId]\n    ),\n    queryFirst<{ count: number }>(\n      env.DB,\n      'SELECT COUNT(*) as count FROM user_achievements WHERE user_id = ? AND is_completed = 0 AND current_progress > 0',\n      [userId]\n    ),\n    queryFirst<{ total: number }>(\n      env.DB,\n      `SELECT COALESCE(SUM(a.xp_reward), 0) as total\n         FROM user_achievements ua\n         JOIN achievements a ON a.achievement_id = ua.achievement_id\n        WHERE ua.user_id = ? AND ua.is_reward_claimed = 1`,\n      [userId]\n    ),\n    queryFirst<{ count: number }>(\n      env.DB,\n      'SELECT COUNT(*) as count FROM user_achievements WHERE user_id = ? AND is_completed = 1 AND is_reward_claimed = 0',\n      [userId]\n    )\n  ]);\n\n  const achievementsByCategoryRows = await query<StatsRow>(\n    env.DB,\n    `SELECT a.category as key, COUNT(*) as count\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.is_completed = 1\n      GROUP BY a.category`,\n    [userId]\n  );\n\n  const achievementsByTierRows = await query<StatsRow>(\n    env.DB,\n    `SELECT a.tier as key, COUNT(*) as count\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.is_completed = 1\n      GROUP BY a.tier`,\n    [userId]\n  );\n\n  const recentRows = await query<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.is_completed = 1\n      ORDER BY ua.completed_at DESC\n      LIMIT 5`,\n    [userId]\n  );\n\n  const nearCompletionRows = await query<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ?\n        AND ua.is_completed = 0\n        AND a.target_value IS NOT NULL\n        AND a.target_value > 0\n        AND (ua.current_progress * 100.0 / a.target_value) >= 80\n      ORDER BY (ua.current_progress * 100.0 / a.target_value) DESC\n      LIMIT 5`,\n    [userId]\n  );\n\n  const totalAchievements = totalRow?.count ?? 0;\n  const completedAchievements = completedRow?.count ?? 0;\n  const completionRate = totalAchievements > 0 ? (completedAchievements / totalAchievements) * 100 : 0;\n\n  const achievementsByCategory: Record<string, number> = {};\n  for (const row of achievementsByCategoryRows) {\n    achievementsByCategory[aliasCategory(row.key)] = row.count;\n  }\n\n  const achievementsByTier: Record<string, number> = {};\n  for (const row of achievementsByTierRows) {\n    achievementsByTier[row.key ?? 'UNKNOWN'] = row.count;\n  }\n\n  return {\n    totalAchievements,\n    completedAchievements,\n    inProgressAchievements: inProgressRow?.count ?? 0,\n    totalXpEarned: totalXpRow?.total ?? 0,\n    unclaimedRewards: unclaimedRow?.count ?? 0,\n    completionRate,\n    achievementsByCategory,\n    achievementsByTier,\n    recentCompletions: recentRows.map(mapUserAchievementRow),\n    nearCompletion: nearCompletionRows.map(mapUserAchievementRow)\n  };\n}\n\nexport async function updateAchievementProgress(\n  env: Env,\n  userId: string,\n  achievementKey: string,\n  progress: number\n): Promise<UserAchievementResponseType> {\n  if (!achievementKey) {\n    throw new AppError('achievementKey\uB294 \uD544\uC218\uC785\uB2C8\uB2E4.', 400, 'INVALID_ACHIEVEMENT_KEY');\n  }\n  if (!Number.isFinite(progress) || progress < 0) {\n    throw new AppError('progress\uB294 0 \uC774\uC0C1\uC758 \uC22B\uC790\uC5EC\uC57C \uD569\uB2C8\uB2E4.', 400, 'INVALID_PROGRESS');\n  }\n  const achievement = await fetchAchievementByKey(env, achievementKey);\n  const updated = await updateUserAchievementProgress(env, userId, achievement, progress, false);\n  return mapUserAchievementRow(updated);\n}\n\nexport async function incrementAchievementProgress(\n  env: Env,\n  userId: string,\n  achievementKey: string,\n  increment: number\n): Promise<UserAchievementResponseType> {\n  if (!achievementKey) {\n    throw new AppError('achievementKey\uB294 \uD544\uC218\uC785\uB2C8\uB2E4.', 400, 'INVALID_ACHIEVEMENT_KEY');\n  }\n  if (!Number.isFinite(increment) || increment <= 0) {\n    throw new AppError('increment\uB294 1 \uC774\uC0C1\uC758 \uC22B\uC790\uC5EC\uC57C \uD569\uB2C8\uB2E4.', 400, 'INVALID_INCREMENT');\n  }\n  const achievement = await fetchAchievementByKey(env, achievementKey);\n  const updated = await updateUserAchievementProgress(env, userId, achievement, increment, true);\n  return mapUserAchievementRow(updated);\n}\n\nexport async function claimAchievementReward(\n  env: Env,\n  userId: string,\n  userAchievementId: number\n): Promise<UserAchievementResponseType> {\n  const row = await queryFirst<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_achievement_id = ?\n      LIMIT 1`,\n    [userAchievementId]\n  );\n\n  if (!row) {\n    throw new AppError('\uC874\uC7AC\uD558\uC9C0 \uC54A\uB294 \uC0AC\uC6A9\uC790 \uC5C5\uC801\uC785\uB2C8\uB2E4.', 404, 'USER_ACHIEVEMENT_NOT_FOUND');\n  }\n  if (row.user_id !== userId) {\n    throw new AppError('\uBCF8\uC778\uC758 \uC5C5\uC801\uB9CC \uBCF4\uC0C1\uC744 \uBC1B\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4.', 403, 'FORBIDDEN');\n  }\n  if (!toBoolean(row.is_completed)) {\n    throw new AppError('\uC644\uB8CC\uB418\uC9C0 \uC54A\uC740 \uC5C5\uC801\uC785\uB2C8\uB2E4.', 400, 'ACHIEVEMENT_NOT_COMPLETED');\n  }\n  if (toBoolean(row.is_reward_claimed)) {\n    throw new AppError('\uC774\uBBF8 \uBCF4\uC0C1\uC744 \uC218\uB839\uD588\uC2B5\uB2C8\uB2E4.', 400, 'ACHIEVEMENT_REWARD_ALREADY_CLAIMED');\n  }\n\n  const now = new Date().toISOString();\n  await execute(\n    env.DB,\n    `UPDATE user_achievements\n        SET is_reward_claimed = 1,\n            reward_claimed_at = ?,\n            updated_at = ?\n      WHERE user_achievement_id = ?`,\n    [now, now, userAchievementId]\n  );\n\n  const updated = await queryFirst<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_achievement_id = ?\n      LIMIT 1`,\n    [userAchievementId]\n  );\n\n  if (!updated) {\n    throw new AppError('\uC5C5\uC801 \uBCF4\uC0C1 \uC815\uBCF4\uB97C \uAC31\uC2E0\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 500, 'ACHIEVEMENT_REWARD_FAILED');\n  }\n\n  return mapUserAchievementRow(updated);\n}\n\nexport async function initializeUserAchievements(\n  env: Env,\n  userId: string\n): Promise<void> {\n  await seedDefaultAchievements(env);\n  const achievementIds = await query<{ achievement_id: number }>(\n    env.DB,\n    'SELECT achievement_id FROM achievements WHERE is_active = 1'\n  );\n\n  const statements = achievementIds.map(({ achievement_id }) => ({\n    sql: `INSERT OR IGNORE INTO user_achievements (\n            user_id,\n            achievement_id,\n            current_progress,\n            is_completed,\n            completed_at,\n            is_reward_claimed,\n            reward_claimed_at,\n            created_at,\n            updated_at\n          ) VALUES (?, ?, 0, 0, NULL, 0, NULL, ?, ?)`\n    ,\n    params: [userId, achievement_id, new Date().toISOString(), new Date().toISOString()]\n  }));\n\n  if (statements.length) {\n    await transaction(env.DB, statements);\n  }\n}\n\nexport async function checkAndCompleteAchievements(\n  env: Env,\n  userId: string\n): Promise<UserAchievementResponseType[]> {\n  await seedDefaultAchievements(env);\n  const candidates = await query<UserAchievementRow>(\n    env.DB,\n    `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n            a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n            a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n       FROM user_achievements ua\n       JOIN achievements a ON a.achievement_id = ua.achievement_id\n      WHERE ua.user_id = ? AND ua.is_completed = 0\n      ORDER BY ua.current_progress DESC`,\n    [userId]\n  );\n\n  const completed: UserAchievementResponseType[] = [];\n  const now = new Date().toISOString();\n\n  for (const candidate of candidates) {\n    const targetValue = candidate.target_value ?? null;\n    if (typeof targetValue !== 'number' || candidate.current_progress < targetValue) {\n      continue;\n    }\n\n    if (candidate.prerequisite_achievement_id) {\n      const prereq = await queryFirst<{ is_completed: number }>(\n        env.DB,\n        `SELECT is_completed FROM user_achievements\n          WHERE user_id = ? AND achievement_id = ?\n          LIMIT 1`,\n        [userId, candidate.prerequisite_achievement_id]\n      );\n      if (!prereq || !toBoolean(prereq.is_completed)) {\n        continue;\n      }\n    }\n\n    await execute(\n      env.DB,\n      `UPDATE user_achievements\n          SET is_completed = 1,\n              completed_at = COALESCE(completed_at, ?),\n              updated_at = ?\n        WHERE user_achievement_id = ?`,\n      [now, now, candidate.user_achievement_id]\n    );\n\n    const updated = await queryFirst<UserAchievementRow>(\n      env.DB,\n      `SELECT ua.*, a.achievement_key, a.title, a.description, a.category, a.type, a.tier,\n              a.target_value, a.target_unit, a.xp_reward, a.badge_icon_url, a.badge_color,\n              a.is_active, a.is_hidden, a.sort_order, a.prerequisite_achievement_id\n         FROM user_achievements ua\n         JOIN achievements a ON a.achievement_id = ua.achievement_id\n        WHERE ua.user_achievement_id = ?\n        LIMIT 1`,\n      [candidate.user_achievement_id]\n    );\n\n    if (updated) {\n      completed.push(mapUserAchievementRow(updated));\n\n      // \uC5C5\uC801 \uB2EC\uC131 \uC54C\uB9BC \uC804\uC1A1\n      try {\n        const xpReward = updated.xp_reward || 0;\n        await createNotification(env, {\n          userId,\n          type: 'ACHIEVEMENT_UNLOCKED',\n          title: '\uD83C\uDFC6 \uC5C5\uC801 \uB2EC\uC131!',\n          content: `\"${updated.title}\" \uC5C5\uC801\uC744 \uB2EC\uC131\uD588\uC2B5\uB2C8\uB2E4! (${xpReward} XP \uD68D\uB4DD)`,\n          category: 'achievement',\n          priority: 2,\n          actionUrl: `/achievements`,\n          actionData: {\n            achievementId: updated.achievement_id,\n            achievementKey: updated.achievement_key,\n            title: updated.title,\n            tier: updated.tier,\n            xpReward\n          }\n        });\n      } catch (error) {\n        console.error(`Failed to send ACHIEVEMENT_UNLOCKED notification for achievement ${updated.achievement_id}:`, error);\n      }\n    }\n  }\n\n  return completed;\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport {\n  listUserChatRooms,\n  listPublicChatRooms,\n  createChatRoom,\n  joinChatRoom,\n  leaveChatRoom,\n  listRoomMessages,\n  searchRoomMessages,\n  uploadChatImages,\n  uploadChatAudio,\n  listMyChatFiles,\n  deleteChatFile,\n  markRoomMessagesAsRead,\n  getUnreadCountForRoom,\n  getTotalUnreadCount\n} from '../services/chat';\n\nconst chatRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\nfunction requireUserId(userId: string | undefined): string {\n  if (!userId) {\n    throw new AppError('\uC778\uC99D \uC815\uBCF4\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 401, 'UNAUTHORIZED');\n  }\n  return userId;\n}\n\nfunction parseRoomId(raw: string | undefined): number {\n  const roomId = Number(raw);\n  if (!Number.isFinite(roomId)) {\n    throw new AppError('\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 roomId \uC785\uB2C8\uB2E4.', 400, 'INVALID_ROOM_ID');\n  }\n  return roomId;\n}\n\nchatRoutes.use('*', requireAuth);\n\nchatRoutes.get('/rooms', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const rooms = await listUserChatRooms(c.env, userId);\n  return successResponse(c, rooms);\n});\n\nchatRoutes.get('/rooms/public', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const rooms = await listPublicChatRooms(c.env, userId);\n  return successResponse(c, rooms);\n});\n\nchatRoutes.post('/rooms', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const body = await c.req.json().catch(() => ({}));\n  const roomName = typeof body?.roomName === 'string' ? body.roomName : '';\n  const participantIds = Array.isArray(body?.participantIds)\n    ? body.participantIds.filter((id: unknown): id is string => typeof id === 'string')\n    : [];\n  const isPublic = Boolean(body?.isPublic);\n  const roomType = typeof body?.roomType === 'string' ? body.roomType : undefined;\n  const maxParticipants =\n    typeof body?.maxParticipants === 'number' ? Number(body.maxParticipants) : undefined;\n\n  const room = await createChatRoom(c.env, userId, roomName, participantIds, {\n    isPublic,\n    roomType,\n    maxParticipants\n  });\n  try {\n    const hubId = c.env.CHAT_HUB.idFromName('global');\n    const hubStub = c.env.CHAT_HUB.get(hubId);\n    const publish = (destination: string, payload: unknown, targetUserId?: string) =>\n      hubStub.fetch('https://chat-hub/publish', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ destination, payload, userId: targetUserId })\n      });\n\n    if (room.isPublic) {\n      await publish('/sub/chat/public-rooms', room);\n    }\n\n    if (Array.isArray(room.participants)) {\n      await Promise.all(\n        room.participants\n          .filter((participant) => participant.userId)\n          .map((participant) => publish('/user/queue/rooms', room, participant.userId))\n      );\n    }\n  } catch (error) {\n    console.error('[chatRoutes] Failed to publish room creation event', error);\n  }\n  return successResponse(c, room);\n});\n\nchatRoutes.post('/rooms/:roomId/join', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  const room = await joinChatRoom(c.env, roomId, userId);\n  return successResponse(c, room);\n});\n\nchatRoutes.post('/rooms/:roomId/leave', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  await leaveChatRoom(c.env, roomId, userId);\n  return successResponse(c, { success: true });\n});\n\nchatRoutes.get('/rooms/:roomId/messages', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  const page = Number(c.req.query('page') ?? '0');\n  const size = Number(c.req.query('size') ?? '50');\n  if (!Number.isFinite(page) || page < 0) {\n    throw new AppError('page \uAC12\uC774 \uC62C\uBC14\uB974\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.', 400, 'INVALID_PAGE_PARAM');\n  }\n  const perPage = Number.isFinite(size) && size > 0 ? Math.min(size, 200) : 50;\n  const messages = await listRoomMessages(c.env, roomId, page, perPage);\n  return successResponse(c, messages);\n});\n\nchatRoutes.get('/rooms/:roomId/messages/search', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  const keyword = c.req.query('keyword') ?? '';\n  const page = Number(c.req.query('page') ?? '0');\n  const size = Number(c.req.query('size') ?? '20');\n  const perPage = Number.isFinite(size) && size > 0 ? Math.min(size, 100) : 20;\n  const messages = await searchRoomMessages(c.env, roomId, keyword, page, perPage);\n  return successResponse(c, messages);\n});\n\nchatRoutes.post('/rooms/:roomId/images', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  const formData = await c.req.formData();\n  const entries = formData.getAll('files');\n  const files = entries\n    .filter((value) => typeof value === 'object' && value !== null && 'arrayBuffer' in (value as any))\n    .map((value) => value as File);\n  if (!files.length) {\n    return successResponse(c, []);\n  }\n  const urls = await uploadChatImages(c.env, roomId, userId, files);\n  return successResponse(c, urls);\n});\n\nchatRoutes.post('/upload/image', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const formData = await c.req.formData();\n  const roomIdValue = formData.get('roomId');\n  const roomId = typeof roomIdValue === 'string' ? Number(roomIdValue) : Number(roomIdValue);\n  if (!Number.isFinite(roomId)) {\n    throw new AppError('roomId\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 400, 'INVALID_ROOM_ID');\n  }\n  const fileEntry = formData.get('image') ?? formData.get('file');\n  if (!fileEntry || typeof fileEntry !== 'object' || !('arrayBuffer' in (fileEntry as any))) {\n    throw new AppError('\uC774\uBBF8\uC9C0 \uD30C\uC77C\uC774 \uD544\uC694\uD569\uB2C8\uB2E4.', 400, 'IMAGE_FILE_REQUIRED');\n  }\n  const file = fileEntry as File;\n  const urls = await uploadChatImages(c.env, roomId, userId, [file]);\n  const primary = urls.length > 0 ? urls[0] : null;\n  return successResponse(c, { url: primary, urls });\n});\n\nchatRoutes.post('/rooms/:roomId/audio', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  const formData = await c.req.formData();\n  const entry = formData.get('file');\n  if (!entry || typeof entry !== 'object' || !('arrayBuffer' in (entry as any))) {\n    throw new AppError('\uC624\uB514\uC624 \uD30C\uC77C\uC774 \uD544\uC694\uD569\uB2C8\uB2E4.', 400, 'AUDIO_FILE_REQUIRED');\n  }\n  const file = entry as File;\n  const url = await uploadChatAudio(c.env, roomId, userId, file);\n  return successResponse(c, url);\n});\n\nchatRoutes.get('/files/my-files', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const files = await listMyChatFiles(c.env, userId);\n  return successResponse(c, files);\n});\n\nchatRoutes.delete('/files/:fileId', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const fileId = Number(c.req.param('fileId'));\n  if (!Number.isFinite(fileId)) {\n    throw new AppError('\uD30C\uC77C ID\uAC00 \uC62C\uBC14\uB974\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.', 400, 'INVALID_FILE_ID');\n  }\n  await deleteChatFile(c.env, userId, fileId);\n  return successResponse(c, { success: true });\n});\n\nchatRoutes.post('/read-status/rooms/:roomId/read-all', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  await markRoomMessagesAsRead(c.env, roomId, userId);\n  return successResponse(c, { success: true });\n});\n\nchatRoutes.get('/read-status/rooms/:roomId/unread-count', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const roomId = parseRoomId(c.req.param('roomId'));\n  const count = await getUnreadCountForRoom(c.env, roomId, userId);\n  return successResponse(c, count);\n});\n\nchatRoutes.get('/read-status/total-unread-count', async (c) => {\n  const userId = requireUserId(c.get('userId'));\n  const count = await getTotalUnreadCount(c.env, userId);\n  return successResponse(c, count);\n});\n\nexport default chatRoutes;\n", "import type { Env } from '../index';\nimport type {\n  ChatRoomSummary,\n  ChatParticipant,\n  ChatMessageResponseType,\n  ChatFileResponseType,\n  ChatMessageType\n} from '../types';\nimport { query, queryFirst, execute, transaction } from '../utils/db';\nimport { AppError } from '../utils/errors';\nimport { saveToR2, generateUniqueFileName } from './storage';\nimport { createNotification } from './notifications';\n\nfunction nowIso(): string {\n  return new Date().toISOString();\n}\n\ninterface ChatRoomRow {\n  room_id: number;\n  room_name: string;\n  room_type: string;\n  is_public: number;\n  max_participants: number | null;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface ParticipantRow {\n  room_id: number;\n  user_id: string;\n  joined_at: string;\n  name: string | null;\n  profile_image: string | null;\n}\n\ninterface MessageRow {\n  message_id: number;\n  room_id: number;\n  user_id: string;\n  message: string | null;\n  audio_url: string | null;\n  created_at: string;\n  name: string | null;\n  profile_image: string | null;\n}\n\nexport interface ChatMessageCreatePayload {\n  roomId: number;\n  message?: string;\n  imageUrls?: string[];\n  audioData?: string;\n  audioUrl?: string;\n  messageType?: ChatMessageType;\n}\n\ninterface ImageRow {\n  message_id: number;\n  image_url: string;\n}\n\ninterface FileRow {\n  file_id: number;\n  message_id: number;\n  original_filename: string;\n  stored_filename: string;\n  file_path: string;\n  file_url: string | null;\n  file_size: number;\n  content_type: string | null;\n  file_type: string;\n  thumbnail_url: string | null;\n  duration: number | null;\n  is_deleted: number;\n  created_at: string;\n}\n\nfunction toBoolean(value: number | boolean | null | undefined): boolean {\n  return value === 1 || value === true;\n}\n\nfunction mapParticipant(row: ParticipantRow): ChatParticipant {\n  return {\n    userId: row.user_id,\n    name: row.name ?? undefined,\n    profileImage: row.profile_image ?? undefined\n  };\n}\n\nasync function fetchParticipants(env: Env, roomId: number): Promise<ChatParticipant[]> {\n  const rows = await query<ParticipantRow>(\n    env.DB,\n    `SELECT p.room_id, p.user_id, p.joined_at, u.name, u.profile_image\n       FROM chat_room_participant p\n       LEFT JOIN users u ON u.user_id = p.user_id\n      WHERE p.room_id = ?\n      ORDER BY p.joined_at ASC`,\n    [roomId]\n  );\n  return rows.map(mapParticipant);\n}\n\nfunction computeMessageType(row: MessageRow, images: ImageRow[], files: ChatFileResponseType[]): ChatMessageType {\n  const hasText = Boolean(row.message && row.message.trim().length > 0);\n  const hasImages = images.length > 0;\n  const hasAudio = Boolean(row.audio_url);\n  const hasFiles = files.length > 0;\n\n  if (hasAudio && !hasImages && !hasText && !hasFiles) return 'AUDIO';\n  if (hasImages && !hasAudio && !hasText && !hasFiles) return 'IMAGE';\n  if (hasFiles && !hasAudio && !hasImages && !hasText) return 'FILE';\n  if (hasText && !hasAudio && !hasImages && !hasFiles) return 'TEXT';\n  return 'MIXED';\n}\n\nfunction mapFile(row: FileRow): ChatFileResponseType {\n  return {\n    fileId: row.file_id,\n    originalFilename: row.original_filename,\n    fileUrl: row.file_url ?? `/api/v1/upload/file/${row.file_path}`,\n    fileType: row.file_type,\n    contentType: row.content_type ?? undefined,\n    fileSize: row.file_size ?? undefined,\n    thumbnailUrl: row.thumbnail_url ?? undefined,\n    duration: row.duration ?? undefined,\n    createdAt: row.created_at\n  };\n}\n\nfunction mapMessage(\n  row: MessageRow,\n  images: ImageRow[],\n  files: ChatFileResponseType[]\n): ChatMessageResponseType {\n  const participant: ChatParticipant = {\n    userId: row.user_id,\n    name: row.name ?? undefined,\n    profileImage: row.profile_image ?? undefined\n  };\n\n  return {\n    messageId: row.message_id,\n    roomId: row.room_id,\n    sender: participant,\n    message: row.message ?? undefined,\n    imageUrls: images.map((img) => img.image_url),\n    audioUrl: row.audio_url ?? undefined,\n    audioDuration: undefined,\n    files,\n    messageType: computeMessageType(row, images, files),\n    sentAt: row.created_at\n  };\n}\n\nasync function ensureRoomExists(env: Env, roomId: number): Promise<ChatRoomRow> {\n  const row = await queryFirst<ChatRoomRow>(\n    env.DB,\n    'SELECT * FROM chat_room WHERE room_id = ? LIMIT 1',\n    [roomId]\n  );\n  if (!row) {\n    throw new AppError('\uCC44\uD305\uBC29\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'CHAT_ROOM_NOT_FOUND');\n  }\n  return row;\n}\n\nasync function mapRoom(env: Env, room: ChatRoomRow): Promise<ChatRoomSummary> {\n  const participants = await fetchParticipants(env, room.room_id);\n  const lastMessageRow = await queryFirst<{ message: string | null; created_at: string | null }>(\n    env.DB,\n    `SELECT m.message, m.created_at\n       FROM chat_message m\n      WHERE m.room_id = ?\n      ORDER BY m.created_at DESC\n      LIMIT 1`,\n    [room.room_id]\n  );\n\n  return {\n    roomId: room.room_id,\n    roomName: room.room_name,\n    roomType: room.room_type,\n    isPublic: toBoolean(room.is_public),\n    maxParticipants: room.max_participants ?? undefined,\n    participants,\n    lastMessage: lastMessageRow?.message ?? undefined,\n    lastMessageAt: lastMessageRow?.created_at ?? undefined\n  };\n}\n\nexport async function listUserChatRooms(env: Env, userId: string): Promise<ChatRoomSummary[]> {\n  const rows = await query<ChatRoomRow>(\n    env.DB,\n    `SELECT r.*\n       FROM chat_room r\n       JOIN chat_room_participant p ON p.room_id = r.room_id\n      WHERE p.user_id = ?\n      ORDER BY r.updated_at DESC, r.created_at DESC`,\n    [userId]\n  );\n\n  const summaries: ChatRoomSummary[] = [];\n  for (const row of rows) {\n    summaries.push(await mapRoom(env, row));\n  }\n  return summaries;\n}\n\nexport async function listPublicChatRooms(env: Env, userId: string): Promise<ChatRoomSummary[]> {\n  const rows = await query<ChatRoomRow>(\n    env.DB,\n    `SELECT r.*\n       FROM chat_room r\n      WHERE r.is_public = 1\n        AND r.room_id NOT IN (SELECT room_id FROM chat_room_participant WHERE user_id = ?)\n      ORDER BY r.created_at DESC`,\n    [userId]\n  );\n\n  const summaries: ChatRoomSummary[] = [];\n  for (const row of rows) {\n    summaries.push(await mapRoom(env, row));\n  }\n  return summaries;\n}\n\nexport async function createChatRoom(\n  env: Env,\n  creatorId: string,\n  roomName: string,\n  participantIds: string[] = [],\n  options?: { isPublic?: boolean; roomType?: string; maxParticipants?: number }\n): Promise<ChatRoomSummary> {\n  if (!roomName?.trim()) {\n    throw new AppError('\uCC44\uD305\uBC29 \uC774\uB984\uC740 \uD544\uC218\uC785\uB2C8\uB2E4.', 400, 'INVALID_ROOM_NAME');\n  }\n\n  const now = new Date().toISOString();\n  const isPublic = options?.isPublic ? 1 : 0;\n  const roomType = options?.roomType ?? 'GROUP';\n  const maxParticipants = options?.maxParticipants ?? null;\n\n  await execute(\n    env.DB,\n    `INSERT INTO chat_room (room_name, room_type, is_public, max_participants, created_at, updated_at)\n      VALUES (?, ?, ?, ?, ?, ?)`,\n    [roomName.trim(), roomType, isPublic, maxParticipants, now, now]\n  );\n\n  const roomIdRow = await queryFirst<{ id: number }>(env.DB, 'SELECT last_insert_rowid() as id');\n  const roomId = Number(roomIdRow?.id ?? 0);\n  if (!roomId) {\n    throw new AppError('\uCC44\uD305\uBC29\uC744 \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 500, 'CHAT_ROOM_CREATE_FAILED');\n  }\n\n  const uniqueIds = new Set<string>([creatorId, ...participantIds]);\n  const statements = Array.from(uniqueIds).map((id) => ({\n    sql: `INSERT OR IGNORE INTO chat_room_participant (room_id, user_id, joined_at)\n            VALUES (?, ?, ?)`,\n    params: [roomId, id, now]\n  }));\n  await transaction(env.DB, statements);\n\n  const room = await ensureRoomExists(env, roomId);\n  return mapRoom(env, room);\n}\n\nexport async function joinChatRoom(env: Env, roomId: number, userId: string): Promise<ChatRoomSummary> {\n  const room = await ensureRoomExists(env, roomId);\n  const now = new Date().toISOString();\n  await execute(\n    env.DB,\n    `INSERT OR IGNORE INTO chat_room_participant (room_id, user_id, joined_at)\n      VALUES (?, ?, ?)`,\n    [roomId, userId, now]\n  );\n  return mapRoom(env, room);\n}\n\nexport async function leaveChatRoom(env: Env, roomId: number, userId: string): Promise<void> {\n  await ensureRoomExists(env, roomId);\n  await execute(\n    env.DB,\n    'DELETE FROM chat_room_participant WHERE room_id = ? AND user_id = ?',\n    [roomId, userId]\n  );\n}\n\nexport async function listRoomMessages(\n  env: Env,\n  roomId: number,\n  page: number,\n  size: number\n): Promise<ChatMessageResponseType[]> {\n  await ensureRoomExists(env, roomId);\n  const offset = Math.max(page, 0) * size;\n\n  const messageRows = await query<MessageRow>(\n    env.DB,\n    `SELECT m.*, u.name, u.profile_image\n       FROM chat_message m\n       LEFT JOIN users u ON u.user_id = m.user_id\n      WHERE m.room_id = ?\n      ORDER BY m.created_at DESC\n      LIMIT ? OFFSET ?`,\n    [roomId, size, offset]\n  );\n\n  const messageIds = messageRows.map((row) => row.message_id);\n  if (messageIds.length === 0) {\n    return [];\n  }\n\n  const imageRows = await query<ImageRow>(\n    env.DB,\n    `SELECT message_id, image_url\n       FROM chat_image\n      WHERE message_id IN (${messageIds.map(() => '?').join(',')})`,\n    messageIds\n  );\n\n  const fileRows = await query<FileRow>(\n    env.DB,\n    `SELECT f.*\n       FROM chat_files f\n      WHERE f.message_id IN (${messageIds.map(() => '?').join(',')})\n        AND f.is_deleted = 0`,\n    messageIds\n  );\n\n  const imageMap = new Map<number, ImageRow[]>();\n  for (const img of imageRows) {\n    const list = imageMap.get(img.message_id) ?? [];\n    list.push(img);\n    imageMap.set(img.message_id, list);\n  }\n\n  const fileMap = new Map<number, ChatFileResponseType[]>();\n  for (const file of fileRows) {\n    const mapped = mapFile(file);\n    const list = fileMap.get(file.message_id) ?? [];\n    list.push(mapped);\n    fileMap.set(file.message_id, list);\n  }\n\n  const messages = messageRows\n    .map((row) => {\n      const images = imageMap.get(row.message_id) ?? [];\n      const files = fileMap.get(row.message_id) ?? [];\n      return mapMessage(row, images, files);\n    })\n    .reverse();\n\n  return messages;\n}\n\nexport async function searchRoomMessages(\n  env: Env,\n  roomId: number,\n  keyword: string,\n  page: number,\n  size: number\n): Promise<ChatMessageResponseType[]> {\n  await ensureRoomExists(env, roomId);\n  if (!keyword?.trim()) {\n    return [];\n  }\n\n  const offset = Math.max(page, 0) * size;\n  const messageRows = await query<MessageRow>(\n    env.DB,\n    `SELECT m.*, u.name, u.profile_image\n       FROM chat_message m\n       LEFT JOIN users u ON u.user_id = m.user_id\n      WHERE m.room_id = ? AND m.message LIKE ?\n      ORDER BY m.created_at DESC\n      LIMIT ? OFFSET ?`,\n    [roomId, `%${keyword}%`, size, offset]\n  );\n\n  const messageIds = messageRows.map((row) => row.message_id);\n  if (messageIds.length === 0) {\n    return [];\n  }\n\n  const imageRows = await query<ImageRow>(\n    env.DB,\n    `SELECT message_id, image_url\n       FROM chat_image\n      WHERE message_id IN (${messageIds.map(() => '?').join(',')})`,\n    messageIds\n  );\n\n  const fileRows = await query<FileRow>(\n    env.DB,\n    `SELECT f.*\n       FROM chat_files f\n      WHERE f.message_id IN (${messageIds.map(() => '?').join(',')})\n        AND f.is_deleted = 0`,\n    messageIds\n  );\n\n  const imageMap = new Map<number, ImageRow[]>();\n  for (const img of imageRows) {\n    const list = imageMap.get(img.message_id) ?? [];\n    list.push(img);\n    imageMap.set(img.message_id, list);\n  }\n\n  const fileMap = new Map<number, ChatFileResponseType[]>();\n  for (const file of fileRows) {\n    const mapped = mapFile(file);\n    const list = fileMap.get(file.message_id) ?? [];\n    list.push(mapped);\n    fileMap.set(file.message_id, list);\n  }\n\n  return messageRows\n    .map((row) => mapMessage(row, imageMap.get(row.message_id) ?? [], fileMap.get(row.message_id) ?? []))\n    .reverse();\n}\n\nexport async function uploadChatImages(\n  env: Env,\n  roomId: number,\n  userId: string,\n  files: File[]\n): Promise<string[]> {\n  await ensureRoomExists(env, roomId);\n  const participant = await queryFirst(\n    env.DB,\n    'SELECT 1 FROM chat_room_participant WHERE room_id = ? AND user_id = ? LIMIT 1',\n    [roomId, userId]\n  );\n  if (!participant) {\n    throw new AppError('\uCC44\uD305\uBC29\uC5D0 \uCC38\uC5EC\uD558\uC9C0 \uC54A\uC740 \uC0AC\uC6A9\uC790\uC785\uB2C8\uB2E4.', 403, 'CHAT_ROOM_FORBIDDEN');\n  }\n\n  if (!files.length) {\n    return [];\n  }\n\n  const urls: string[] = [];\n  for (const file of files) {\n    const buffer = await file.arrayBuffer();\n    const key = `chat/${roomId}/images/${generateUniqueFileName(file.name, userId)}`;\n    await saveToR2(env.STORAGE, key, buffer, file.type, {\n      roomId: String(roomId),\n      uploader: userId,\n      fileName: file.name\n    });\n    const url = `/api/v1/upload/file/${key}`;\n    urls.push(url);\n  }\n\n  return urls;\n}\n\nexport async function uploadChatAudio(\n  env: Env,\n  roomId: number,\n  userId: string,\n  file: File\n): Promise<string> {\n  await ensureRoomExists(env, roomId);\n  const participant = await queryFirst(\n    env.DB,\n    'SELECT 1 FROM chat_room_participant WHERE room_id = ? AND user_id = ? LIMIT 1',\n    [roomId, userId]\n  );\n  if (!participant) {\n    throw new AppError('\uCC44\uD305\uBC29\uC5D0 \uCC38\uC5EC\uD558\uC9C0 \uC54A\uC740 \uC0AC\uC6A9\uC790\uC785\uB2C8\uB2E4.', 403, 'CHAT_ROOM_FORBIDDEN');\n  }\n\n  const buffer = await file.arrayBuffer();\n  const key = `chat/${roomId}/audio/${generateUniqueFileName(file.name, userId)}`;\n  await saveToR2(env.STORAGE, key, buffer, file.type, {\n    roomId: String(roomId),\n    uploader: userId,\n    fileName: file.name\n  });\n  return `/api/v1/upload/file/${key}`;\n}\n\nexport async function listMyChatFiles(env: Env, userId: string): Promise<ChatFileResponseType[]> {\n  const rows = await query<FileRow>(\n    env.DB,\n    `SELECT f.*\n       FROM chat_files f\n       JOIN chat_message m ON m.message_id = f.message_id\n      WHERE m.user_id = ? AND f.is_deleted = 0\n      ORDER BY f.created_at DESC`,\n    [userId]\n  );\n  return rows.map(mapFile);\n}\n\nexport async function deleteChatFile(env: Env, userId: string, fileId: number): Promise<void> {\n  const row = await queryFirst<FileRow>(\n    env.DB,\n    `SELECT f.*\n       FROM chat_files f\n       JOIN chat_message m ON m.message_id = f.message_id\n      WHERE f.file_id = ?\n      LIMIT 1`,\n    [fileId]\n  );\n  if (!row) {\n    throw new AppError('\uD30C\uC77C\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'CHAT_FILE_NOT_FOUND');\n  }\n  const messageOwner = await queryFirst<{ user_id: string }>(\n    env.DB,\n    'SELECT user_id FROM chat_message WHERE message_id = ? LIMIT 1',\n    [row.message_id]\n  );\n  if (messageOwner?.user_id !== userId) {\n    throw new AppError('\uBCF8\uC778\uC774 \uC5C5\uB85C\uB4DC\uD55C \uD30C\uC77C\uB9CC \uC0AD\uC81C\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.', 403, 'CHAT_FILE_FORBIDDEN');\n  }\n  await execute(\n    env.DB,\n    'UPDATE chat_files SET is_deleted = 1, updated_at = ? WHERE file_id = ?',\n    [new Date().toISOString(), fileId]\n  );\n}\n\nfunction parseDataUrl(base64DataUrl: string): { contentType: string; buffer: ArrayBuffer } {\n  const match = base64DataUrl.match(/^data:(.+);base64,(.*)$/);\n  if (!match) {\n    throw new AppError('\uC798\uBABB\uB41C \uC624\uB514\uC624 \uB370\uC774\uD130\uC785\uB2C8\uB2E4.', 400, 'INVALID_AUDIO_DATA');\n  }\n  const contentType = match[1];\n  const base64 = match[2];\n  const binaryString = atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i += 1) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return { contentType, buffer: bytes.buffer };\n}\n\nexport async function createChatMessage(\n  env: Env,\n  userId: string,\n  payload: ChatMessageCreatePayload\n): Promise<ChatMessageResponseType> {\n  const roomId = Number(payload.roomId);\n  if (!Number.isFinite(roomId)) {\n    throw new AppError('roomId\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 400, 'INVALID_ROOM_ID');\n  }\n\n  const room = await queryFirst<ChatRoomRow>(\n    env.DB,\n    'SELECT * FROM chat_room WHERE room_id = ? LIMIT 1',\n    [roomId]\n  );\n  if (!room) {\n    throw new AppError('\uCC44\uD305\uBC29\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 404, 'CHAT_ROOM_NOT_FOUND');\n  }\n\n  const participant = await queryFirst(\n    env.DB,\n    'SELECT 1 FROM chat_room_participant WHERE room_id = ? AND user_id = ? LIMIT 1',\n    [roomId, userId]\n  );\n  if (!participant) {\n    throw new AppError('\uCC44\uD305\uBC29\uC5D0 \uCC38\uC5EC\uD558\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.', 403, 'CHAT_ROOM_FORBIDDEN');\n  }\n\n  const now = nowIso();\n  const messageText = typeof payload.message === 'string' && payload.message.trim().length > 0\n    ? payload.message.trim()\n    : null;\n  const imageUrls = Array.isArray(payload.imageUrls)\n    ? payload.imageUrls.filter((url): url is string => typeof url === 'string' && url.length > 0)\n    : [];\n\n  let audioUrl = payload.audioUrl ?? null;\n  if (!audioUrl && typeof payload.audioData === 'string' && payload.audioData.startsWith('data:')) {\n    const { contentType, buffer } = parseDataUrl(payload.audioData);\n    const key = `chat/${roomId}/audio/${generateUniqueFileName('voice-message.webm', userId)}`;\n    await saveToR2(env.STORAGE, key, buffer, contentType, {\n      roomId: String(roomId),\n      uploader: userId,\n      type: 'voice-message'\n    });\n    audioUrl = `/api/v1/upload/file/${key}`;\n  }\n\n  if (!messageText && !imageUrls.length && !audioUrl) {\n    throw new AppError('\uBA54\uC2DC\uC9C0 \uB0B4\uC6A9\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.', 400, 'EMPTY_MESSAGE');\n  }\n\n  await execute(\n    env.DB,\n    `INSERT INTO chat_message (\n        room_id,\n        user_id,\n        message,\n        audio_url,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?)`,\n    [roomId, userId, messageText ?? null, audioUrl, now, now]\n  );\n\n  const messageIdRow = await queryFirst<{ id: number }>(env.DB, 'SELECT last_insert_rowid() as id');\n  const messageId = Number(messageIdRow?.id ?? 0);\n  if (!messageId) {\n    throw new AppError('\uBA54\uC2DC\uC9C0\uB97C \uC800\uC7A5\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 500, 'CHAT_MESSAGE_CREATE_FAILED');\n  }\n\n  if (imageUrls.length) {\n    for (const url of imageUrls) {\n      await execute(\n        env.DB,\n        `INSERT INTO chat_image (message_id, image_url, created_at, updated_at)\n          VALUES (?, ?, ?, ?)`,\n        [messageId, url, now, now]\n      );\n    }\n  }\n\n  await execute(\n    env.DB,\n    'UPDATE chat_room SET updated_at = ? WHERE room_id = ?',\n    [now, roomId]\n  );\n\n  const messageRow = await queryFirst<MessageRow>(\n    env.DB,\n    `SELECT m.*, u.name, u.profile_image\n       FROM chat_message m\n       LEFT JOIN users u ON u.user_id = m.user_id\n      WHERE m.message_id = ?\n      LIMIT 1`,\n    [messageId]\n  );\n  if (!messageRow) {\n    throw new AppError('\uBA54\uC2DC\uC9C0\uB97C \uC870\uD68C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.', 500, 'CHAT_MESSAGE_LOAD_FAILED');\n  }\n\n  const images = await query<ImageRow>(\n    env.DB,\n    'SELECT message_id, image_url FROM chat_image WHERE message_id = ?',\n    [messageId]\n  );\n\n  const files = await query<FileRow>(\n    env.DB,\n    'SELECT * FROM chat_files WHERE message_id = ? AND is_deleted = 0',\n    [messageId]\n  );\n\n  const mappedFiles = files.map(mapFile);\n  const chatMessage = mapMessage(messageRow, images, mappedFiles);\n\n  // \uCC44\uD305\uBC29\uC758 \uB2E4\uB978 \uCC38\uC5EC\uC790\uB4E4\uC5D0\uAC8C \uC54C\uB9BC \uC804\uC1A1\n  try {\n    console.log('[createChatMessage] Sending notifications to room participants');\n\n    // \uBC1C\uC2E0\uC790 \uC815\uBCF4 \uC870\uD68C\n    const senderInfo = await queryFirst<{\n      english_name: string | null;\n      name: string | null;\n    }>(\n      env.DB,\n      'SELECT english_name, name FROM users WHERE user_id = ? LIMIT 1',\n      [userId]\n    );\n\n    const senderName = senderInfo?.english_name || senderInfo?.name || '\uC775\uBA85\uC758 \uC0AC\uC6A9\uC790';\n\n    // \uCC44\uD305\uBC29\uC758 \uB2E4\uB978 \uCC38\uC5EC\uC790 ID \uC870\uD68C (\uBC1C\uC2E0\uC790 \uC81C\uC678)\n    const otherParticipants = await query<{ user_id: string }>(\n      env.DB,\n      'SELECT user_id FROM chat_room_participant WHERE room_id = ? AND user_id != ?',\n      [roomId, userId]\n    );\n\n    // \uBA54\uC2DC\uC9C0 \uB0B4\uC6A9 \uC694\uC57D (\uCD5C\uB300 50\uC790)\n    let contentPreview = messageText || '';\n    if (!contentPreview && audioUrl) {\n      contentPreview = '\uC74C\uC131 \uBA54\uC2DC\uC9C0';\n    } else if (!contentPreview && imageUrls.length > 0) {\n      contentPreview = '\uC774\uBBF8\uC9C0';\n    }\n    if (contentPreview.length > 50) {\n      contentPreview = contentPreview.substring(0, 50) + '...';\n    }\n\n    // \uAC01 \uCC38\uC5EC\uC790\uC5D0\uAC8C \uC54C\uB9BC \uC804\uC1A1\n    for (const participant of otherParticipants) {\n      try {\n        await createNotification(env, {\n          userId: participant.user_id,\n          type: 'CHAT_MESSAGE',\n          title: `${room.room_name}`,\n          content: `${senderName}: ${contentPreview}`,\n          category: 'chat',\n          priority: 1,\n          actionUrl: `/chat/${roomId}`,\n          actionData: {\n            roomId,\n            messageId,\n            senderId: userId,\n            senderName\n          },\n          senderUserId: userId\n        });\n      } catch (notificationError) {\n        console.error('[createChatMessage] Failed to send notification to participant:', {\n          error: notificationError instanceof Error ? notificationError.message : String(notificationError),\n          participantId: participant.user_id\n        });\n      }\n    }\n\n    console.log('[createChatMessage] Notifications sent to', otherParticipants.length, 'participants');\n  } catch (notificationError) {\n    // \uC54C\uB9BC \uC804\uC1A1 \uC2E4\uD328\uB294 \uB85C\uAE45\uB9CC \uD558\uACE0 \uBA54\uC2DC\uC9C0 \uC0DD\uC131\uC740 \uC131\uACF5 \uCC98\uB9AC\n    console.error('[createChatMessage] Failed to send notifications:', {\n      error: notificationError instanceof Error ? notificationError.message : String(notificationError),\n      roomId,\n      messageId\n    });\n  }\n\n  return chatMessage;\n}\n\nexport async function markRoomMessagesAsRead(env: Env, roomId: number, userId: string): Promise<void> {\n  await ensureRoomExists(env, roomId);\n  const messageIds = await query<{ message_id: number }>(\n    env.DB,\n    'SELECT message_id FROM chat_message WHERE room_id = ? AND user_id != ?',\n    [roomId, userId]\n  );\n  if (!messageIds.length) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const statements = messageIds.map(({ message_id }) => ({\n    sql: `INSERT OR REPLACE INTO message_read_status (message_id, user_id, read_at, is_deleted, created_at, updated_at)\n            VALUES (?, ?, ?, 0, ?, ?)`,\n    params: [message_id, userId, now, now, now]\n  }));\n  await transaction(env.DB, statements);\n}\n\nexport async function getUnreadCountForRoom(env: Env, roomId: number, userId: string): Promise<number> {\n  await ensureRoomExists(env, roomId);\n  const row = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count\n       FROM chat_message m\n      WHERE m.room_id = ?\n        AND m.user_id != ?\n        AND m.message_id NOT IN (\n          SELECT message_id FROM message_read_status\n           WHERE user_id = ? AND is_deleted = 0\n        )`,\n    [roomId, userId, userId]\n  );\n  return row?.count ?? 0;\n}\n\nexport async function getTotalUnreadCount(env: Env, userId: string): Promise<number> {\n  const row = await queryFirst<{ count: number }>(\n    env.DB,\n    `SELECT COUNT(*) as count\n       FROM chat_message m\n      WHERE m.user_id != ?\n        AND m.message_id NOT IN (\n          SELECT message_id FROM message_read_status WHERE user_id = ? AND is_deleted = 0\n        )`,\n    [userId, userId]\n  );\n  return row?.count ?? 0;\n}\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport { getUserProfile, updateUserProfile, getUserSettings, updateUserSettings } from '../services/user';\nimport { query, transaction, execute } from '../utils/db';\n\nconst settingsRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\nconst requireAuth = authMiddleware();\n\nsettingsRoutes.use('*', requireAuth);\n\nasync function loadSettingsMap(env: Env, userId: string): Promise<Map<string, string>> {\n  const rows = await query<{ setting_key: string; setting_value: string | null }>(\n    env.DB,\n    'SELECT setting_key, setting_value FROM user_settings WHERE user_id = ?',\n    [userId]\n  );\n  const map = new Map<string, string>();\n  for (const row of rows) {\n    if (row.setting_key) {\n      map.set(row.setting_key, row.setting_value ?? '');\n    }\n  }\n  return map;\n}\n\nasync function saveSettingsEntries(env: Env, userId: string, entries: Record<string, string | null | undefined>) {\n  const now = new Date().toISOString();\n  const statements = Object.entries(entries)\n    .filter(([_, value]) => value !== undefined)\n    .map(([key, value]) => ({\n      sql: 'INSERT OR REPLACE INTO user_settings (user_id, setting_key, setting_value, updated_at) VALUES (?, ?, ?, ?)',\n      params: [userId, key, value === null ? null : String(value), now]\n    }));\n  if (statements.length === 0) return;\n  await transaction(env.DB, statements);\n}\n\nasync function deleteSettingsKeys(env: Env, userId: string, keys: string[]) {\n  if (!keys.length) return;\n  const placeholders = keys.map(() => '?').join(',');\n  await execute(\n    env.DB,\n    `DELETE FROM user_settings WHERE user_id = ? AND setting_key IN (${placeholders})`,\n    [userId, ...keys]\n  );\n}\n\nfunction toBool(value: string | undefined, fallback = false): boolean {\n  if (value === undefined) return fallback;\n  if (value === 'true' || value === '1') return true;\n  if (value === 'false' || value === '0') return false;\n  return fallback;\n}\n\nsettingsRoutes.get('/account', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const [profile, settings] = await Promise.all([\n    getUserProfile(c.env, userId),\n    loadSettingsMap(c.env, userId)\n  ]);\n  if (!profile) {\n    throw new AppError('User not found', 404, 'USER_NOT_FOUND');\n  }\n  return successResponse(c, {\n    email: profile.email ?? '',\n    phoneNumber: settings.get('account.phoneNumber') ?? '',\n    englishName: profile.englishName ?? '',\n    residence: settings.get('account.residence') ?? profile.location?.country ?? '',\n    profileImage: profile.profileImage ?? null,\n    bio: profile.selfBio ?? '',\n    birthDate: profile.birthday ?? '',\n    gender: profile.gender ?? '',\n  });\n});\n\nsettingsRoutes.patch('/account', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n\n  const profilePayload: Record<string, any> = {};\n  if (typeof body.englishName === 'string') profilePayload.englishName = body.englishName.trim();\n  if (typeof body.bio === 'string') profilePayload.selfBio = body.bio.trim();\n  if (typeof body.birthDate === 'string') profilePayload.birthday = body.birthDate;\n  if (typeof body.gender === 'string') profilePayload.gender = body.gender;\n  if (typeof body.profileImage === 'string' && body.profileImage.length > 0) {\n    profilePayload.profileImage = body.profileImage;\n  }\n  if (Object.keys(profilePayload).length > 0) {\n    await updateUserProfile(c.env, userId, profilePayload);\n  }\n\n  const entries: Record<string, string | null> = {};\n  if (body.phoneNumber !== undefined) entries['account.phoneNumber'] = body.phoneNumber ? String(body.phoneNumber) : '';\n  if (body.residence !== undefined) entries['account.residence'] = body.residence ? String(body.residence) : '';\n  if (body.email !== undefined) entries['account.email'] = body.email ? String(body.email) : '';\n\n  await saveSettingsEntries(c.env, userId, entries);\n\n  if (body.email && typeof body.email === 'string') {\n    await execute(\n      c.env.DB,\n      'UPDATE users SET email = ?, updated_at = ? WHERE user_id = ?',\n      [body.email.trim(), new Date().toISOString(), userId]\n    );\n  }\n\n  return successResponse(c, { success: true });\n});\n\nsettingsRoutes.delete('/account', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  await execute(\n    c.env.DB,\n    'UPDATE users SET user_disable = 1, updated_at = ? WHERE user_id = ?',\n    [new Date().toISOString(), userId]\n  );\n  return successResponse(c, { disabled: true });\n});\n\nsettingsRoutes.get('/notifications', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const settings = await getUserSettings(c.env, userId);\n  const prefs = settings.notificationPreferences ?? {};\n  return successResponse(c, {\n    email: prefs.email ?? false,\n    push: prefs.push ?? false,\n    sms: prefs.sms ?? false\n  });\n});\n\nsettingsRoutes.patch('/notifications', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const preferences: Record<string, boolean> = {};\n  for (const key of ['email', 'push', 'sms']) {\n    if (body[key] !== undefined) {\n      preferences[key] = Boolean(body[key]);\n    }\n  }\n  await updateUserSettings(c.env, userId, { notificationPreferences: preferences });\n  return successResponse(c, { success: true });\n});\n\nsettingsRoutes.get('/privacy', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const map = await loadSettingsMap(c.env, userId);\n  return successResponse(c, {\n    profilePublic: toBool(map.get('privacy.profilePublic'), true),\n    showOnlineStatus: toBool(map.get('privacy.showOnlineStatus'), true),\n    allowMessages: toBool(map.get('privacy.allowMessages'), true)\n  });\n});\n\nsettingsRoutes.patch('/privacy', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const entries: Record<string, string> = {};\n  if (body.profilePublic !== undefined) entries['privacy.profilePublic'] = String(Boolean(body.profilePublic));\n  if (body.showOnlineStatus !== undefined) entries['privacy.showOnlineStatus'] = String(Boolean(body.showOnlineStatus));\n  if (body.allowMessages !== undefined) entries['privacy.allowMessages'] = String(Boolean(body.allowMessages));\n  await saveSettingsEntries(c.env, userId, entries);\n  return successResponse(c, { success: true });\n});\n\nsettingsRoutes.get('/language', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const settings = await getUserSettings(c.env, userId);\n  return successResponse(c, {\n    language: settings.language ?? 'ko',\n    timeZone: settings.timeZone ?? 'Asia/Seoul'\n  });\n});\n\nsettingsRoutes.patch('/language', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const payload: any = {};\n  if (body.language !== undefined) payload.language = String(body.language);\n  if (body.timeZone !== undefined) payload.timeZone = String(body.timeZone);\n  if (body.marketingOptIn !== undefined) payload.marketingOptIn = Boolean(body.marketingOptIn);\n  await updateUserSettings(c.env, userId, payload);\n  return successResponse(c, { success: true });\n});\n\nsettingsRoutes.patch('/password', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  if (typeof body.currentPassword !== 'string' || typeof body.newPassword !== 'string') {\n    throw new AppError('currentPassword and newPassword are required', 400, 'INVALID_PAYLOAD');\n  }\n  // \uBE44\uBC00\uBC88\uD638 \uC800\uC7A5 \uB85C\uC9C1\uC740 \uC778\uC99D \uC778\uD504\uB77C\uC5D0 \uB530\uB77C \uB2EC\uB77C\uC9C0\uBBC0\uB85C \uD604\uC7AC\uB294 \uC131\uACF5\uB9CC \uBC18\uD658\n  return successResponse(c, { success: true, message: 'Password change acknowledged (no-op in worker).' });\n});\n\nsettingsRoutes.post('/export', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const profile = await getUserProfile(c.env, userId);\n  return successResponse(c, {\n    exportedAt: new Date().toISOString(),\n    profile,\n    sessions: [],\n    messages: []\n  });\n});\n\nsettingsRoutes.get('/login-history', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n\n  // \uCD5C\uADFC 90\uC77C\uAC04\uC758 \uB85C\uADF8\uC778 \uD788\uC2A4\uD1A0\uB9AC \uC870\uD68C\n  const ninetyDaysAgo = new Date();\n  ninetyDaysAgo.setDate(ninetyDaysAgo.getDate() - 90);\n\n  const history = await query<{\n    id: number;\n    login_time: string;\n    ip_address: string | null;\n    device: string | null;\n    browser: string | null;\n    location: string | null;\n    country_code: string | null;\n    suspicious: number;\n    suspicious_reason: string | null;\n    success: number;\n  }>(\n    c.env.DB,\n    `SELECT\n      id,\n      login_time,\n      ip_address,\n      device,\n      browser,\n      location,\n      country_code,\n      suspicious,\n      suspicious_reason,\n      success\n    FROM login_history\n    WHERE user_id = ? AND login_time >= ? AND success = 1\n    ORDER BY login_time DESC\n    LIMIT 100`,\n    [userId, ninetyDaysAgo.toISOString()]\n  );\n\n  // \uB370\uC774\uD130 \uBCC0\uD658\n  const formattedHistory = history.map(record => ({\n    loginTime: record.login_time,\n    ipAddress: record.ip_address || 'Unknown',\n    device: record.device || 'Unknown Device',\n    browser: record.browser || null,\n    location: record.location || 'Unknown Location',\n    countryCode: record.country_code || null,\n    suspicious: Boolean(record.suspicious),\n    suspiciousReason: record.suspicious_reason || null\n  }));\n\n  return successResponse(c, formattedHistory);\n});\n\nsettingsRoutes.get('/two-factor', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const map = await loadSettingsMap(c.env, userId);\n  const pending = map.get('security.twoFactor.setup');\n  return successResponse(c, {\n    enabled: toBool(map.get('security.twoFactor.enabled'), false),\n    qrCode: pending ? map.get('security.twoFactor.qrCode') ?? null : null\n  });\n});\n\nsettingsRoutes.post('/two-factor/enable', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const secret = crypto.randomUUID().replace(/-/g, '').slice(0, 16).toUpperCase();\n  const otpauth = `otpauth://totp/StudyMate:${userId}?secret=${secret}&issuer=StudyMate`;\n  await saveSettingsEntries(c.env, userId, {\n    'security.twoFactor.setup': 'pending',\n    'security.twoFactor.secret': secret,\n    'security.twoFactor.qrCode': otpauth\n  });\n  return successResponse(c, { qrCode: otpauth });\n});\n\nsettingsRoutes.post('/two-factor/disable', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User id missing from context', 500, 'CONTEXT_MISSING_USER');\n  const body = await c.req.json().catch(() => ({}));\n  const map = await loadSettingsMap(c.env, userId);\n  if (map.get('security.twoFactor.setup') === 'pending') {\n    await saveSettingsEntries(c.env, userId, { 'security.twoFactor.enabled': 'true' });\n    await deleteSettingsKeys(c.env, userId, ['security.twoFactor.setup', 'security.twoFactor.qrCode']);\n    return successResponse(c, { success: true, enabled: true, verified: true });\n  }\n  await saveSettingsEntries(c.env, userId, { 'security.twoFactor.enabled': 'false' });\n  await deleteSettingsKeys(c.env, userId, ['security.twoFactor.secret', 'security.twoFactor.qrCode']);\n  return successResponse(c, { success: true, enabled: false });\n});\n\nexport default settingsRoutes;\n", "import { Hono } from 'hono';\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { auth as authMiddleware } from '../middleware/auth';\nimport { AppError } from '../utils/errors';\nimport { successResponse } from '../utils/response';\nimport { performComprehensivePronunciationEvaluation } from '../services/pronunciationEvaluation';\nimport { processAudio } from '../services/ai';\n\nconst pronunciationRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\nconst requireAuth = authMiddleware();\n\npronunciationRoutes.use('*', requireAuth);\n\n/**\n * POST /api/v1/pronunciation/evaluate\n * \uC74C\uC131 \uD30C\uC77C\uC744 \uC5C5\uB85C\uB4DC\uD558\uC5EC \uC885\uD569 \uBC1C\uC74C \uD3C9\uAC00 \uC218\uD589\n *\n * Request:\n * - audio: File (\uC74C\uC131 \uD30C\uC77C)\n * - targetLanguage: string (\uC635\uC158, \uAE30\uBCF8\uAC12: 'English')\n * - text: string (\uC635\uC158, \uC77D\uC740 \uD14D\uC2A4\uD2B8 - \uBE44\uAD50\uC6A9)\n *\n * Response:\n * - transcription: string\n * - evaluation: ComprehensivePronunciationEvaluation\n */\npronunciationRoutes.post('/evaluate', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n\n  try {\n    // Multipart form data \uD30C\uC2F1\n    const formData = await c.req.formData();\n    const audioFile = formData.get('audio') as File;\n    const targetLanguage = (formData.get('targetLanguage') as string) || 'English';\n    const expectedText = formData.get('text') as string | null;\n\n    if (!audioFile) {\n      throw new AppError('Audio file is required', 400, 'MISSING_AUDIO');\n    }\n\n    // \uC74C\uC131 \uD30C\uC77C\uC744 ArrayBuffer\uB85C \uBCC0\uD658\n    const audioBuffer = await audioFile.arrayBuffer();\n\n    // Whisper\uB85C \uC74C\uC131 \uC778\uC2DD\n    const transcription = await processAudio(c.env.AI, audioBuffer, {\n      language: targetLanguage.toLowerCase() === 'english' ? 'en' :\n                targetLanguage.toLowerCase() === 'korean' ? 'ko' : undefined\n    });\n\n    if (!transcription?.text) {\n      throw new AppError('Failed to transcribe audio', 500, 'TRANSCRIPTION_FAILED');\n    }\n\n    // \uC885\uD569 \uBC1C\uC74C \uD3C9\uAC00 \uC218\uD589\n    const evaluation = await performComprehensivePronunciationEvaluation(\n      c.env.AI,\n      transcription.text,\n      targetLanguage\n    );\n\n    return successResponse(c, {\n      transcription: transcription.text,\n      expectedText: expectedText || null,\n      evaluation\n    });\n  } catch (error) {\n    if (error instanceof AppError) {\n      throw error;\n    }\n    throw new AppError(\n      error instanceof Error ? error.message : 'Pronunciation evaluation failed',\n      500,\n      'PRONUNCIATION_EVAL_FAILED'\n    );\n  }\n});\n\n/**\n * POST /api/v1/pronunciation/evaluate-text\n * \uD14D\uC2A4\uD2B8 \uC804\uC0AC\uB97C \uAE30\uBC18\uC73C\uB85C \uBC1C\uC74C \uD3C9\uAC00 \uC218\uD589\n * (\uC74C\uC131 \uD30C\uC77C \uC5C6\uC774 \uD14D\uC2A4\uD2B8\uB9CC\uC73C\uB85C \uD3C9\uAC00 - \uD14C\uC2A4\uD2B8\uC6A9)\n *\n * Request:\n * - transcription: string (\uC74C\uC131 \uC804\uC0AC \uD14D\uC2A4\uD2B8)\n * - targetLanguage: string (\uC635\uC158, \uAE30\uBCF8\uAC12: 'English')\n *\n * Response:\n * - evaluation: ComprehensivePronunciationEvaluation\n */\npronunciationRoutes.post('/evaluate-text', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n\n  try {\n    const body = await c.req.json();\n\n    if (!body.transcription || typeof body.transcription !== 'string') {\n      throw new AppError('Transcription text is required', 400, 'MISSING_TRANSCRIPTION');\n    }\n\n    const targetLanguage = body.targetLanguage || 'English';\n\n    // \uC885\uD569 \uBC1C\uC74C \uD3C9\uAC00 \uC218\uD589\n    const evaluation = await performComprehensivePronunciationEvaluation(\n      c.env.AI,\n      body.transcription,\n      targetLanguage\n    );\n\n    return successResponse(c, {\n      transcription: body.transcription,\n      evaluation\n    });\n  } catch (error) {\n    if (error instanceof AppError) {\n      throw error;\n    }\n    throw new AppError(\n      error instanceof Error ? error.message : 'Pronunciation evaluation failed',\n      500,\n      'PRONUNCIATION_EVAL_FAILED'\n    );\n  }\n});\n\n/**\n * GET /api/v1/pronunciation/phonemes/:language\n * \uD2B9\uC815 \uC5B8\uC5B4\uC758 \uC8FC\uC694 \uC74C\uC18C \uBAA9\uB85D \uBC0F \uC5F0\uC2B5 \uAC00\uC774\uB4DC \uC81C\uACF5\n *\n * Response:\n * - language: string\n * - phonemes: Array<{ symbol: string, description: string, examples: string[] }>\n */\npronunciationRoutes.get('/phonemes/:language', async (c) => {\n  const userId = c.get('userId');\n  if (!userId) throw new AppError('User not found in context', 500, 'CONTEXT_MISSING_USER');\n\n  const language = c.req.param('language');\n\n  // \uC8FC\uC694 \uC5B8\uC5B4\uBCC4 \uC74C\uC18C \uAC00\uC774\uB4DC (\uAC04\uB2E8\uD55C \uC608\uC2DC)\n  const phonemeGuides: Record<string, any> = {\n    english: {\n      language: 'English',\n      phonemes: [\n        {\n          symbol: '\u03B8',\n          description: 'Voiceless dental fricative (as in \"think\")',\n          examples: ['think', '\u062B', 'thank', 'three'],\n          tips: 'Place tongue between teeth and blow air'\n        },\n        {\n          symbol: '\u00F0',\n          description: 'Voiced dental fricative (as in \"this\")',\n          examples: ['this', 'that', 'they', 'though'],\n          tips: 'Like \u03B8 but with voice'\n        },\n        {\n          symbol: 'r',\n          description: 'Alveolar approximant',\n          examples: ['red', 'right', 'royal', 'around'],\n          tips: 'Curl tongue slightly back, do not trill'\n        },\n        {\n          symbol: 'l',\n          description: 'Alveolar lateral approximant',\n          examples: ['light', 'love', 'full', 'all'],\n          tips: 'Touch tongue to alveolar ridge'\n        }\n      ]\n    },\n    korean: {\n      language: 'Korean',\n      phonemes: [\n        {\n          symbol: '\u3131/\u314B/\u3132',\n          description: 'Plain/Aspirated/Tense k sounds',\n          examples: ['\uAC00\uB2E4', '\uCE74\uB4DC', '\uAE4C\uB2E4'],\n          tips: 'Distinguish between plain, aspirated, and tense'\n        }\n      ]\n    }\n  };\n\n  const guide = phonemeGuides[language.toLowerCase()];\n\n  if (!guide) {\n    throw new AppError('Phoneme guide not available for this language', 404, 'LANGUAGE_NOT_SUPPORTED');\n  }\n\n  return successResponse(c, guide);\n});\n\nexport default pronunciationRoutes;\n", "// \uC815\uBC00 \uBC1C\uC74C \uD3C9\uAC00 \uC2DC\uC2A4\uD15C\n// \uC74C\uC18C \uB2E8\uC704 \uBD84\uC11D, \uC5B5\uC591 \uD328\uD134, \uB9AC\uB4EC, \uC2A4\uD2B8\uB808\uC2A4 \uD3C9\uAC00\n\nimport { generateChatCompletion, sanitizeJsonResponse, type ChatMessage } from './ai';\nimport { log } from '../utils/logger';\n\n// \uC74C\uC18C \uBD84\uC11D \uACB0\uACFC\nexport interface PhonemeAnalysis {\n  phoneme: string;              // \uC74C\uC18C \uAE30\uD638 (IPA)\n  word: string;                 // \uD574\uB2F9 \uB2E8\uC5B4\n  position: number;             // \uB2E8\uC5B4 \uB0B4 \uC704\uCE58\n  accuracy: number;             // 0-100, \uC815\uD655\uB3C4\n  issues: string[];             // \uBC1C\uACAC\uB41C \uBB38\uC81C\uC810\n  nativeSample?: string;        // \uC6D0\uC5B4\uBBFC \uBC1C\uC74C \uC608\uC2DC (IPA)\n  userPronunciation?: string;   // \uC0AC\uC6A9\uC790 \uBC1C\uC74C (IPA)\n}\n\n// \uC5B5\uC591 \uD328\uD134 \uBD84\uC11D\nexport interface IntonationPattern {\n  type: 'rising' | 'falling' | 'level' | 'fall-rise' | 'rise-fall';\n  sentenceType: 'statement' | 'question' | 'command' | 'exclamation';\n  isCorrect: boolean;\n  expectedPattern: string;\n  detectedPattern: string;\n  confidence: number;  // 0-100\n}\n\n// \uB9AC\uB4EC \uBD84\uC11D\nexport interface RhythmAnalysis {\n  syllableCount: number;\n  stressPattern: string;         // e.g., \"10010\" (1=stressed, 0=unstressed)\n  expectedStress: string;\n  rhythmType: 'stress-timed' | 'syllable-timed' | 'mora-timed';\n  isNaturalRhythm: boolean;\n  pauseLocations: number[];      // \uBB38\uC7A5 \uB0B4 \uC26C\uB294 \uC704\uCE58 (\uB2E8\uC5B4 \uC778\uB371\uC2A4)\n  speakingRate: number;          // \uBD84\uB2F9 \uC74C\uC808 \uC218 (syllables per minute)\n  consistency: number;           // 0-100, \uB9AC\uB4EC \uC77C\uAD00\uC131\n}\n\n// \uC2A4\uD2B8\uB808\uC2A4 \uBD84\uC11D\nexport interface StressAnalysis {\n  wordStresses: Array<{\n    word: string;\n    expectedStress: number;      // \uAC15\uC138 \uC704\uCE58 (\uC74C\uC808 \uC778\uB371\uC2A4)\n    detectedStress: number;\n    isCorrect: boolean;\n    syllableCount: number;\n  }>;\n  sentenceStress: {\n    contentWords: string[];      // \uAC15\uC870\uB418\uC5B4\uC57C \uD560 \uB0B4\uC6A9\uC5B4\n    functionWords: string[];     // \uC57D\uD654\uB418\uC5B4\uC57C \uD560 \uAE30\uB2A5\uC5B4\n    correctlyStressed: number;   // \uC62C\uBC14\uB974\uAC8C \uAC15\uC138 \uC900 \uB2E8\uC5B4 \uC218\n    totalContentWords: number;\n  };\n  overallAccuracy: number;       // 0-100\n}\n\n// \uBC1C\uC74C \uC624\uB958 \uBD84\uB958\nexport interface PronunciationError {\n  type: 'substitution' | 'omission' | 'insertion' | 'distortion';\n  phoneme: string;\n  word: string;\n  position: number;\n  severity: 'critical' | 'major' | 'minor';\n  suggestion: string;\n  example: string;               // \uC62C\uBC14\uB978 \uBC1C\uC74C \uC608\uC2DC\n}\n\n// \uC885\uD569 \uBC1C\uC74C \uD3C9\uAC00 \uACB0\uACFC\nexport interface ComprehensivePronunciationEvaluation {\n  overallScore: number;          // 0-100, \uC804\uCCB4 \uBC1C\uC74C \uC810\uC218\n\n  // \uC138\uBD80 \uC810\uC218\n  scores: {\n    segmental: number;           // \uBD84\uC808\uC74C \uC815\uD655\uB3C4 (\uAC1C\uBCC4 \uC74C\uC18C)\n    suprasegmental: number;      // \uCD08\uBD84\uC808\uC74C (\uC5B5\uC591, \uB9AC\uB4EC, \uC2A4\uD2B8\uB808\uC2A4)\n    intelligibility: number;     // \uC774\uD574 \uAC00\uB2A5\uC131\n    fluency: number;             // \uC720\uCC3D\uC131\n    nativelikeness: number;      // \uC6D0\uC5B4\uBBFC\uB2E4\uC6C0\n  };\n\n  // \uC0C1\uC138 \uBD84\uC11D\n  phonemeAnalysis: PhonemeAnalysis[];\n  intonationPatterns: IntonationPattern[];\n  rhythmAnalysis: RhythmAnalysis;\n  stressAnalysis: StressAnalysis;\n  errors: PronunciationError[];\n\n  // \uAC1C\uC120 \uAD8C\uC7A5\uC0AC\uD56D\n  recommendations: {\n    priority: 'high' | 'medium' | 'low';\n    category: string;\n    description: string;\n    exercises: string[];\n  }[];\n\n  // \uAC15\uC810 \uBC0F \uC57D\uC810\n  strengths: string[];\n  weaknesses: string[];\n\n  // CEFR \uBC1C\uC74C \uB808\uBCA8\n  cefrLevel: string;             // A1-C2 \uAE30\uC900 \uBC1C\uC74C \uC218\uC900\n  nextLevelRequirements: string[];\n}\n\n/**\n * \uC74C\uC131 \uC804\uC0AC\uB97C \uAE30\uBC18\uC73C\uB85C \uC74C\uC18C \uBD84\uC11D \uC218\uD589\n */\nasync function analyzePhonemes(\n  ai: Ai,\n  transcription: string,\n  targetLanguage: string = 'English'\n): Promise<PhonemeAnalysis[]> {\n  const messages: ChatMessage[] = [\n    {\n      role: 'system',\n      content: `You are an expert phonetician specializing in ${targetLanguage} pronunciation analysis. Analyze the transcribed speech and identify phoneme-level pronunciation issues.\n\nRespond in JSON format:\n{\n  \"phonemes\": [\n    {\n      \"phoneme\": \"\u03B8\",\n      \"word\": \"think\",\n      \"position\": 0,\n      \"accuracy\": 65,\n      \"issues\": [\"fronting - pronounced as /s/ or /t/\"],\n      \"nativeSample\": \"\u03B8\",\n      \"userPronunciation\": \"s\"\n    }\n  ]\n}`\n    },\n    {\n      role: 'user',\n      content: `Analyze the phonemes in this speech transcription:\n\n\"${transcription}\"\n\nIdentify commonly mispronounced phonemes, especially:\n- Consonant clusters\n- Th-sounds (\u03B8, \u00F0)\n- R and L sounds\n- Vowel quality\n- Final consonants\n\nProvide accuracy scores and specific issues for each problematic phoneme.`\n    }\n  ];\n\n  try {\n    const response = await generateChatCompletion(ai, messages, {\n      model: '@cf/meta/llama-3.3-70b-instruct-fp8-fast',\n      temperature: 0.3,\n      max_tokens: 1500\n    });\n\n    const sanitized = sanitizeJsonResponse(response);\n    const parsed = JSON.parse(sanitized);\n\n    if (Array.isArray(parsed.phonemes)) {\n      return parsed.phonemes.map((p: any) => ({\n        phoneme: p.phoneme || '',\n        word: p.word || '',\n        position: p.position || 0,\n        accuracy: typeof p.accuracy === 'number' ? p.accuracy : 50,\n        issues: Array.isArray(p.issues) ? p.issues : [],\n        nativeSample: p.nativeSample,\n        userPronunciation: p.userPronunciation\n      }));\n    }\n\n    return [];\n  } catch (error) {\n    log.error('Failed to analyze phonemes:', error);\n    return [];\n  }\n}\n\n/**\n * \uC5B5\uC591 \uD328\uD134 \uBD84\uC11D\n */\nasync function analyzeIntonation(\n  ai: Ai,\n  transcription: string,\n  targetLanguage: string = 'English'\n): Promise<IntonationPattern[]> {\n  const messages: ChatMessage[] = [\n    {\n      role: 'system',\n      content: `You are an expert in ${targetLanguage} intonation patterns. Analyze the speech and identify intonation patterns for each sentence.\n\nRespond in JSON format:\n{\n  \"patterns\": [\n    {\n      \"type\": \"rising\",\n      \"sentenceType\": \"question\",\n      \"isCorrect\": true,\n      \"expectedPattern\": \"rising at end\",\n      \"detectedPattern\": \"rising at end\",\n      \"confidence\": 85\n    }\n  ]\n}`\n    },\n    {\n      role: 'user',\n      content: `Analyze intonation patterns in this transcription:\n\n\"${transcription}\"\n\nFor each sentence, identify:\n- Intonation type (rising, falling, level, fall-rise, rise-fall)\n- Sentence type (statement, question, command, exclamation)\n- Whether the pattern matches the sentence type\n- Confidence level`\n    }\n  ];\n\n  try {\n    const response = await generateChatCompletion(ai, messages, {\n      model: '@cf/meta/llama-3.3-70b-instruct-fp8-fast',\n      temperature: 0.3,\n      max_tokens: 1200\n    });\n\n    const sanitized = sanitizeJsonResponse(response);\n    const parsed = JSON.parse(sanitized);\n\n    if (Array.isArray(parsed.patterns)) {\n      return parsed.patterns.map((p: any) => ({\n        type: p.type || 'level',\n        sentenceType: p.sentenceType || 'statement',\n        isCorrect: p.isCorrect !== false,\n        expectedPattern: p.expectedPattern || '',\n        detectedPattern: p.detectedPattern || '',\n        confidence: typeof p.confidence === 'number' ? p.confidence : 50\n      }));\n    }\n\n    return [];\n  } catch (error) {\n    log.error('Failed to analyze intonation:', error);\n    return [];\n  }\n}\n\n/**\n * \uB9AC\uB4EC \uBD84\uC11D\n */\nasync function analyzeRhythm(\n  ai: Ai,\n  transcription: string,\n  targetLanguage: string = 'English'\n): Promise<RhythmAnalysis> {\n  const messages: ChatMessage[] = [\n    {\n      role: 'system',\n      content: `You are an expert in ${targetLanguage} speech rhythm analysis. Analyze the rhythm, stress patterns, and speaking rate.\n\nRespond in JSON format:\n{\n  \"syllableCount\": 45,\n  \"stressPattern\": \"1001010010\",\n  \"expectedStress\": \"1001010010\",\n  \"rhythmType\": \"stress-timed\",\n  \"isNaturalRhythm\": true,\n  \"pauseLocations\": [5, 12, 20],\n  \"speakingRate\": 180,\n  \"consistency\": 75\n}`\n    },\n    {\n      role: 'user',\n      content: `Analyze the rhythm in this speech:\n\n\"${transcription}\"\n\nDetermine:\n- Total syllable count\n- Stress pattern (1=stressed, 0=unstressed syllables)\n- Expected stress pattern for natural speech\n- Rhythm type (stress-timed for English)\n- Natural pause locations\n- Speaking rate (syllables per minute)\n- Rhythm consistency (0-100)`\n    }\n  ];\n\n  try {\n    const response = await generateChatCompletion(ai, messages, {\n      model: '@cf/meta/llama-3.3-70b-instruct-fp8-fast',\n      temperature: 0.3,\n      max_tokens: 1000\n    });\n\n    const sanitized = sanitizeJsonResponse(response);\n    const parsed = JSON.parse(sanitized);\n\n    return {\n      syllableCount: parsed.syllableCount || 0,\n      stressPattern: parsed.stressPattern || '',\n      expectedStress: parsed.expectedStress || '',\n      rhythmType: parsed.rhythmType || 'stress-timed',\n      isNaturalRhythm: parsed.isNaturalRhythm !== false,\n      pauseLocations: Array.isArray(parsed.pauseLocations) ? parsed.pauseLocations : [],\n      speakingRate: parsed.speakingRate || 150,\n      consistency: typeof parsed.consistency === 'number' ? parsed.consistency : 50\n    };\n  } catch (error) {\n    log.error('Failed to analyze rhythm:', error);\n    return {\n      syllableCount: 0,\n      stressPattern: '',\n      expectedStress: '',\n      rhythmType: 'stress-timed',\n      isNaturalRhythm: false,\n      pauseLocations: [],\n      speakingRate: 150,\n      consistency: 50\n    };\n  }\n}\n\n/**\n * \uC2A4\uD2B8\uB808\uC2A4 \uBD84\uC11D\n */\nasync function analyzeStress(\n  ai: Ai,\n  transcription: string,\n  targetLanguage: string = 'English'\n): Promise<StressAnalysis> {\n  const messages: ChatMessage[] = [\n    {\n      role: 'system',\n      content: `You are an expert in ${targetLanguage} word and sentence stress. Analyze stress placement at word and sentence levels.\n\nRespond in JSON format:\n{\n  \"wordStresses\": [\n    {\n      \"word\": \"important\",\n      \"expectedStress\": 1,\n      \"detectedStress\": 1,\n      \"isCorrect\": true,\n      \"syllableCount\": 3\n    }\n  ],\n  \"sentenceStress\": {\n    \"contentWords\": [\"important\", \"meeting\", \"tomorrow\"],\n    \"functionWords\": [\"the\", \"is\", \"at\"],\n    \"correctlyStressed\": 8,\n    \"totalContentWords\": 10\n  },\n  \"overallAccuracy\": 80\n}`\n    },\n    {\n      role: 'user',\n      content: `Analyze stress patterns in this speech:\n\n\"${transcription}\"\n\nIdentify:\n- Word-level stress for multi-syllable words\n- Content words that should receive sentence stress\n- Function words that should be reduced\n- Overall stress accuracy`\n    }\n  ];\n\n  try {\n    const response = await generateChatCompletion(ai, messages, {\n      model: '@cf/meta/llama-3.3-70b-instruct-fp8-fast',\n      temperature: 0.3,\n      max_tokens: 1500\n    });\n\n    const sanitized = sanitizeJsonResponse(response);\n    const parsed = JSON.parse(sanitized);\n\n    return {\n      wordStresses: Array.isArray(parsed.wordStresses) ? parsed.wordStresses : [],\n      sentenceStress: {\n        contentWords: Array.isArray(parsed.sentenceStress?.contentWords)\n          ? parsed.sentenceStress.contentWords : [],\n        functionWords: Array.isArray(parsed.sentenceStress?.functionWords)\n          ? parsed.sentenceStress.functionWords : [],\n        correctlyStressed: parsed.sentenceStress?.correctlyStressed || 0,\n        totalContentWords: parsed.sentenceStress?.totalContentWords || 0\n      },\n      overallAccuracy: typeof parsed.overallAccuracy === 'number' ? parsed.overallAccuracy : 50\n    };\n  } catch (error) {\n    log.error('Failed to analyze stress:', error);\n    return {\n      wordStresses: [],\n      sentenceStress: {\n        contentWords: [],\n        functionWords: [],\n        correctlyStressed: 0,\n        totalContentWords: 0\n      },\n      overallAccuracy: 50\n    };\n  }\n}\n\n/**\n * \uBC1C\uC74C \uC624\uB958 \uBD84\uB958 \uBC0F \uBD84\uC11D\n */\nasync function classifyPronunciationErrors(\n  ai: Ai,\n  transcription: string,\n  phonemeAnalysis: PhonemeAnalysis[]\n): Promise<PronunciationError[]> {\n  if (phonemeAnalysis.length === 0) {\n    return [];\n  }\n\n  const messages: ChatMessage[] = [\n    {\n      role: 'system',\n      content: `You are an expert in pronunciation error analysis. Classify pronunciation errors and provide corrective suggestions.\n\nRespond in JSON format:\n{\n  \"errors\": [\n    {\n      \"type\": \"substitution\",\n      \"phoneme\": \"\u03B8\",\n      \"word\": \"think\",\n      \"position\": 0,\n      \"severity\": \"major\",\n      \"suggestion\": \"Place tongue between teeth and blow air\",\n      \"example\": \"Try: 'thin', 'thick', 'thank'\"\n    }\n  ]\n}`\n    },\n    {\n      role: 'user',\n      content: `Classify these pronunciation issues and provide corrections:\n\nTranscription: \"${transcription}\"\n\nPhoneme issues: ${JSON.stringify(phonemeAnalysis.slice(0, 10))}\n\nFor each error, determine:\n- Error type (substitution, omission, insertion, distortion)\n- Severity (critical, major, minor)\n- Specific correction suggestion\n- Practice examples`\n    }\n  ];\n\n  try {\n    const response = await generateChatCompletion(ai, messages, {\n      model: '@cf/meta/llama-3.3-70b-instruct-fp8-fast',\n      temperature: 0.3,\n      max_tokens: 1500\n    });\n\n    const sanitized = sanitizeJsonResponse(response);\n    const parsed = JSON.parse(sanitized);\n\n    if (Array.isArray(parsed.errors)) {\n      return parsed.errors.map((e: any) => ({\n        type: e.type || 'substitution',\n        phoneme: e.phoneme || '',\n        word: e.word || '',\n        position: e.position || 0,\n        severity: e.severity || 'minor',\n        suggestion: e.suggestion || '',\n        example: e.example || ''\n      }));\n    }\n\n    return [];\n  } catch (error) {\n    log.error('Failed to classify pronunciation errors:', error);\n    return [];\n  }\n}\n\n/**\n * \uBC1C\uC74C \uAC1C\uC120 \uAD8C\uC7A5\uC0AC\uD56D \uC0DD\uC131\n */\nasync function generateRecommendations(\n  ai: Ai,\n  evaluation: Partial<ComprehensivePronunciationEvaluation>\n): Promise<ComprehensivePronunciationEvaluation['recommendations']> {\n  const messages: ChatMessage[] = [\n    {\n      role: 'system',\n      content: `You are a pronunciation coach. Generate personalized improvement recommendations.\n\nRespond in JSON format:\n{\n  \"recommendations\": [\n    {\n      \"priority\": \"high\",\n      \"category\": \"Consonant Sounds\",\n      \"description\": \"Focus on 'th' sounds\",\n      \"exercises\": [\n        \"Practice minimal pairs: think/sink, thick/sick\",\n        \"Tongue placement drills\",\n        \"Record and compare with native speaker\"\n      ]\n    }\n  ]\n}`\n    },\n    {\n      role: 'user',\n      content: `Based on this pronunciation analysis, generate improvement recommendations:\n\nOverall Score: ${evaluation.overallScore || 0}/100\nSegmental Score: ${evaluation.scores?.segmental || 0}/100\nSuprasegmental Score: ${evaluation.scores?.suprasegmental || 0}/100\n\nMain issues:\n${evaluation.errors?.slice(0, 5).map(e => `- ${e.phoneme} in \"${e.word}\": ${e.suggestion}`).join('\\n') || 'None identified'}\n\nWeaknesses:\n${evaluation.weaknesses?.join(', ') || 'None identified'}\n\nGenerate 3-5 prioritized recommendations with specific exercises.`\n    }\n  ];\n\n  try {\n    const response = await generateChatCompletion(ai, messages, {\n      model: '@cf/meta/llama-3.3-70b-instruct-fp8-fast',\n      temperature: 0.7,\n      max_tokens: 1200\n    });\n\n    const sanitized = sanitizeJsonResponse(response);\n    const parsed = JSON.parse(sanitized);\n\n    if (Array.isArray(parsed.recommendations)) {\n      return parsed.recommendations.map((r: any) => ({\n        priority: r.priority || 'medium',\n        category: r.category || '',\n        description: r.description || '',\n        exercises: Array.isArray(r.exercises) ? r.exercises : []\n      }));\n    }\n\n    return [];\n  } catch (error) {\n    log.error('Failed to generate recommendations:', error);\n    return [];\n  }\n}\n\n/**\n * \uC885\uD569 \uBC1C\uC74C \uD3C9\uAC00 \uC218\uD589\n */\nexport async function performComprehensivePronunciationEvaluation(\n  ai: Ai,\n  transcription: string,\n  targetLanguage: string = 'English'\n): Promise<ComprehensivePronunciationEvaluation> {\n  // \uBCD1\uB82C\uB85C \uBAA8\uB4E0 \uBD84\uC11D \uC218\uD589\n  const [\n    phonemeAnalysis,\n    intonationPatterns,\n    rhythmAnalysis,\n    stressAnalysis\n  ] = await Promise.all([\n    analyzePhonemes(ai, transcription, targetLanguage),\n    analyzeIntonation(ai, transcription, targetLanguage),\n    analyzeRhythm(ai, transcription, targetLanguage),\n    analyzeStress(ai, transcription, targetLanguage)\n  ]);\n\n  // \uBC1C\uC74C \uC624\uB958 \uBD84\uB958\n  const errors = await classifyPronunciationErrors(ai, transcription, phonemeAnalysis);\n\n  // \uC138\uBD80 \uC810\uC218 \uACC4\uC0B0\n  const segmentalScore = phonemeAnalysis.length > 0\n    ? Math.round(phonemeAnalysis.reduce((sum, p) => sum + p.accuracy, 0) / phonemeAnalysis.length)\n    : 70;\n\n  const intonationScore = intonationPatterns.length > 0\n    ? Math.round(intonationPatterns.filter(p => p.isCorrect).length / intonationPatterns.length * 100)\n    : 70;\n\n  const rhythmScore = rhythmAnalysis.consistency;\n  const stressScore = stressAnalysis.overallAccuracy;\n\n  const suprasegmentalScore = Math.round(\n    (intonationScore + rhythmScore + stressScore) / 3\n  );\n\n  // \uC804\uCCB4 \uC810\uC218 \uACC4\uC0B0 (\uAC00\uC911 \uD3C9\uADE0)\n  const overallScore = Math.round(\n    segmentalScore * 0.40 +        // \uBD84\uC808\uC74C 40%\n    suprasegmentalScore * 0.35 +   // \uCD08\uBD84\uC808\uC74C 35%\n    stressScore * 0.15 +           // \uC2A4\uD2B8\uB808\uC2A4 15%\n    intonationScore * 0.10         // \uC5B5\uC591 10%\n  );\n\n  // \uC774\uD574 \uAC00\uB2A5\uC131 \uC810\uC218\n  const intelligibility = Math.round(\n    segmentalScore * 0.6 + suprasegmentalScore * 0.4\n  );\n\n  // \uC720\uCC3D\uC131 \uC810\uC218 (\uB9AC\uB4EC + \uC18D\uB3C4)\n  const fluency = Math.round(\n    (rhythmScore + Math.min(rhythmAnalysis.speakingRate / 180 * 100, 100)) / 2\n  );\n\n  // \uC6D0\uC5B4\uBBFC\uB2E4\uC6C0 \uC810\uC218\n  const nativelikeness = Math.round(\n    (segmentalScore + suprasegmentalScore + stressScore) / 3 * 0.8  // \uCD5C\uB300 80\uC810\n  );\n\n  // CEFR \uBC1C\uC74C \uB808\uBCA8 \uACB0\uC815\n  let cefrLevel = 'A1';\n  if (overallScore >= 90) cefrLevel = 'C2';\n  else if (overallScore >= 80) cefrLevel = 'C1';\n  else if (overallScore >= 70) cefrLevel = 'B2';\n  else if (overallScore >= 60) cefrLevel = 'B1';\n  else if (overallScore >= 45) cefrLevel = 'A2';\n\n  // \uAC15\uC810 \uBC0F \uC57D\uC810 \uD30C\uC545\n  const strengths: string[] = [];\n  const weaknesses: string[] = [];\n\n  if (segmentalScore >= 80) strengths.push('Clear individual sound production');\n  else if (segmentalScore < 60) weaknesses.push('Individual sound accuracy needs improvement');\n\n  if (suprasegmentalScore >= 80) strengths.push('Natural intonation and rhythm');\n  else if (suprasegmentalScore < 60) weaknesses.push('Prosody and speech melody need work');\n\n  if (stressScore >= 80) strengths.push('Good word and sentence stress');\n  else if (stressScore < 60) weaknesses.push('Stress placement needs attention');\n\n  if (rhythmAnalysis.isNaturalRhythm) strengths.push('Natural speaking rhythm');\n  else weaknesses.push('Speaking rhythm is not yet natural');\n\n  // \uBD80\uBD84 \uD3C9\uAC00 \uACB0\uACFC\uB85C \uAD8C\uC7A5\uC0AC\uD56D \uC0DD\uC131\n  const partialEval: Partial<ComprehensivePronunciationEvaluation> = {\n    overallScore,\n    scores: { segmental: segmentalScore, suprasegmental: suprasegmentalScore,\n              intelligibility, fluency, nativelikeness },\n    errors,\n    weaknesses\n  };\n\n  const recommendations = await generateRecommendations(ai, partialEval);\n\n  // \uB2E4\uC74C \uB808\uBCA8 \uC694\uAD6C\uC0AC\uD56D\n  const nextLevelRequirements: string[] = [];\n  if (cefrLevel === 'A1') {\n    nextLevelRequirements.push('Master basic consonant and vowel sounds');\n    nextLevelRequirements.push('Develop consistent word stress');\n    nextLevelRequirements.push('Practice basic intonation patterns');\n  } else if (cefrLevel === 'A2') {\n    nextLevelRequirements.push('Improve difficult consonant clusters');\n    nextLevelRequirements.push('Refine sentence stress and rhythm');\n    nextLevelRequirements.push('Develop natural intonation for questions');\n  } else if (cefrLevel === 'B1') {\n    nextLevelRequirements.push('Perfect problematic phonemes (e.g., th, r, l)');\n    nextLevelRequirements.push('Master connected speech and linking');\n    nextLevelRequirements.push('Improve speech flow and naturalness');\n  } else if (cefrLevel === 'B2') {\n    nextLevelRequirements.push('Refine subtle pronunciation differences');\n    nextLevelRequirements.push('Develop more native-like prosody');\n    nextLevelRequirements.push('Reduce L1 interference in all contexts');\n  } else if (cefrLevel === 'C1') {\n    nextLevelRequirements.push('Perfect pronunciation in all contexts');\n    nextLevelRequirements.push('Master regional variations and nuances');\n    nextLevelRequirements.push('Achieve near-native fluency and naturalness');\n  }\n\n  return {\n    overallScore,\n    scores: {\n      segmental: segmentalScore,\n      suprasegmental: suprasegmentalScore,\n      intelligibility,\n      fluency,\n      nativelikeness\n    },\n    phonemeAnalysis,\n    intonationPatterns,\n    rhythmAnalysis,\n    stressAnalysis,\n    errors,\n    recommendations,\n    strengths,\n    weaknesses,\n    cefrLevel,\n    nextLevelRequirements\n  };\n}\n", "import { DurableObject } from 'cloudflare:workers';\nimport { log } from '../utils/logger';\nimport { upsertActiveRoom, removeActiveRoom } from '../utils/activeRooms';\nimport { ActiveRoomInfo } from '../types';\n\n// Durable Object for WebRTC Room Management with Hibernation Support\nexport class WebRTCRoom extends DurableObject {\n  private roomData: RoomData;\n  private roomId: string;\n  protected env: any;\n\n  constructor(state: DurableObjectState, env: any) {\n    super(state, env);\n    this.env = env;\n    \n    // Initialize room ID from Durable Object ID\n    this.roomId = state.id.toString();\n    \n    // Initialize room data\n    this.roomData = {\n      id: this.roomId,\n      participants: [],\n      maxParticipants: 4,\n      createdAt: new Date().toISOString(),\n      type: 'audio',\n      metadata: {},\n      settings: {\n        allowScreenShare: true,\n        allowRecording: false,\n        autoMuteOnJoin: false,\n        stunServers: [\n          { urls: 'stun:stun1.l.google.com:19302' },\n          { urls: 'stun:stun2.l.google.com:19302' },\n          { urls: 'stun.cloudflare.com:3478' }\n        ],\n        turnServers: [\n          {\n            urls: 'turn:openrelay.metered.ca:80',\n            username: 'openrelayproject',\n            credential: 'openrelayproject'\n          },\n          {\n            urls: 'turn:openrelay.metered.ca:443',\n            username: 'openrelayproject',\n            credential: 'openrelayproject'\n          },\n          {\n            urls: 'turn:freestun.net:3478',\n            username: 'free',\n            credential: 'free'\n          }\n        ],\n        recordingSettings: {\n          enabled: true,\n          autoStart: false,\n          maxDuration: 60, // 1\uC2DC\uAC04\n          format: 'webm',\n          quality: 'medium',\n          audioOnly: false\n        }\n      },\n      metrics: {\n        totalParticipants: 0,\n        peakParticipants: 0,\n        messagesExchanged: 0,\n        connectionErrors: 0,\n        lastActivity: new Date().toISOString(),\n        sessionDuration: 0\n      }\n    };\n    \n    // Restore participants from hibernation\n    this.restoreParticipants();\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    const url = new URL(request.url);\n    \n    // Handle WebSocket upgrade\n    if (request.headers.get('Upgrade') === 'websocket') {\n      return this.handleWebSocket(request);\n    }\n    \n    // Handle HTTP requests\n    switch (url.pathname) {\n      case '/init':\n        return this.handleInit(request);\n      case '/join':\n        return this.handleJoin(request);\n      case '/leave':\n        return this.handleLeave(request);\n      case '/info':\n        return this.handleInfo();\n      case '/settings':\n        return this.handleSettings(request);\n      case '/metadata':\n        return this.handleMetadata(request);\n      case '/ice-servers':\n        return this.handleIceServers();\n      case '/metrics':\n        return this.handleMetrics();\n      default:\n        return new Response('Not Found', { status: 404 });\n    }\n  }\n\n  private async handleWebSocket(request: Request): Promise<Response> {\n    const url = new URL(request.url);\n    const userId = url.searchParams.get('userId');\n    const userName = url.searchParams.get('userName') || 'Anonymous';\n    \n    if (!userId) {\n      return new Response('Missing userId parameter', { status: 400 });\n    }\n    \n    // Check if room is full\n    const activeParticipants = this.getActiveParticipants();\n    if (activeParticipants.length >= this.roomData.maxParticipants) {\n      return new Response(JSON.stringify({ error: 'Room is full' }), { \n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    // Create WebSocket pair\n    const pair = new WebSocketPair();\n    const [client, server] = Object.values(pair);\n    \n    // Store user data with WebSocket for hibernation\n    const userData: WebSocketData = {\n      userId,\n      userName,\n      joinedAt: new Date().toISOString()\n    };\n    server.serializeAttachment(userData);\n    \n    // Accept WebSocket with hibernation support\n    this.ctx.acceptWebSocket(server, [userId]);\n    \n    // Add participant to room\n    const participant: Participant = {\n      id: userId,\n      name: userName,\n      joinedAt: userData.joinedAt,\n      audioEnabled: true,\n      videoEnabled: this.roomData.type === 'video',\n      isScreenSharing: false\n    };\n    \n    this.roomData.participants.push(participant);\n    \n    // Update metrics for participant join\n    this.updateMetrics('join');\n    await this.saveRoomData();\n    await this.syncActiveRoomCache();\n    \n    // Send analytics\n    await this.sendAnalytics('participant_joined', {\n      userId,\n      userName,\n      totalParticipants: this.roomData.participants.length,\n      roomType: this.roomData.type\n    });\n    \n    // Send initial room state to new participant\n    server.send(JSON.stringify({\n      type: 'connected',\n      roomData: this.roomData,\n      userId\n    }));\n    \n    // Notify other participants\n    this.broadcast({\n      type: 'participant-joined',\n      participant\n    }, userId);\n    \n    return new Response(null, { status: 101, webSocket: client });\n  }\n\n  private async handleInit(request: Request): Promise<Response> {\n    try {\n      const { roomType = 'audio', maxParticipants = 4, metadata = {} } = await request.json() as {\n        roomType?: 'audio' | 'video';\n        maxParticipants?: number;\n        metadata?: any;\n      };\n\n      // Update room data with initialization parameters\n      this.roomData.type = roomType;\n      this.roomData.maxParticipants = maxParticipants;\n      this.roomData.createdAt = new Date().toISOString();\n      this.roomData.metadata = metadata || {};\n      \n      // Save room data to storage\n      await this.saveRoomData();\n      await this.syncActiveRoomCache();\n\n      return new Response(JSON.stringify({\n        success: true,\n        roomId: this.roomId,\n        roomType,\n        maxParticipants,\n        metadata,\n        createdAt: this.roomData.createdAt\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      log.error('Init error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      return new Response(JSON.stringify({ \n        error: 'Failed to initialize room' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  }\n\n  private async handleJoin(request: Request): Promise<Response> {\n    try {\n      const { userId, userName, roomType } = await request.json() as {\n        userId: string;\n        userName: string;\n        roomType?: 'audio' | 'video';\n      };\n      \n      // Check if user already in room\n      const existingParticipant = this.roomData.participants.find(p => p.id === userId);\n      if (existingParticipant) {\n        return new Response(JSON.stringify({ \n          success: true,\n          roomData: this.roomData,\n          message: 'Already in room'\n        }), {\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      const activeParticipants = this.getActiveParticipants();\n      if (activeParticipants.length >= this.roomData.maxParticipants) {\n        return new Response(JSON.stringify({ \n          error: 'Room is full' \n        }), { \n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // Update room type if needed\n      if (roomType && this.roomData.participants.length === 0) {\n        this.roomData.type = roomType;\n      }\n\n      await this.saveRoomData();\n\n      return new Response(JSON.stringify({ \n        success: true,\n        roomData: this.roomData,\n        websocketUrl: `/room/${this.roomId}/websocket?userId=${userId}&userName=${encodeURIComponent(userName)}`\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      log.error('Join error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      return new Response(JSON.stringify({ \n        error: 'Failed to join room' \n      }), { \n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  }\n\n  private async handleLeave(request: Request): Promise<Response> {\n    try {\n      const { userId } = await request.json() as { userId: string };\n      await this.handleParticipantLeave(userId);\n      \n      return new Response(JSON.stringify({ success: true }));\n    } catch (error) {\n      log.error('Leave error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      return new Response(JSON.stringify({ \n        error: 'Failed to leave room' \n      }), { status: 500 });\n    }\n  }\n\n  private async handleSignal(request: Request): Promise<Response> {\n    try {\n      const { from, to, signal } = await request.json() as {\n        from: string;\n        to: string;\n        signal: unknown;\n      };\n\n      // Forward signal to specific participant using WebSocket hibernation groups\n      const websockets = this.ctx.getWebSockets(to);\n      websockets.forEach((ws) => {\n        try {\n          ws.send(JSON.stringify({ type: 'signal', from, signal }));\n        } catch (e) {\n          log.error('Signal forward error', e as Error, undefined, { component: 'WEBRTC_ROOM' });\n        }\n      });\n\n      return new Response(JSON.stringify({ success: true }));\n    } catch (error) {\n      log.error('Signal error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      return new Response(JSON.stringify({ \n        error: 'Failed to send signal' \n      }), { status: 500 });\n    }\n  }\n\n  private async handleInfo(): Promise<Response> {\n    const roomData = await this.ctx.storage.get('roomData') || this.roomData;\n    return new Response(JSON.stringify(roomData));\n  }\n\n  // WebSocket Hibernation API event handlers\n  async webSocketMessage(ws: WebSocket, message: ArrayBuffer | string) {\n    try {\n      // Get user data from WebSocket attachment\n      const userData = ws.deserializeAttachment() as WebSocketData;\n      if (!userData) {\n        ws.close(1008, 'User data not found');\n        return;\n      }\n      \n      const msg = typeof message === 'string' ? JSON.parse(message) : null;\n      if (!msg) return;\n      \n      await this.handleWebSocketMessage(ws, userData.userId, msg);\n    } catch (error) {\n      log.error('WebSocket message error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      this.updateMetrics('error');\n      await this.sendAnalytics('websocket_error', { error: String(error) });\n      ws.send(JSON.stringify({ \n        type: 'error', \n        message: 'Invalid message format' \n      }));\n    }\n  }\n  \n  async webSocketClose(ws: WebSocket, code: number, reason: string, wasClean: boolean) {\n    const userData = ws.deserializeAttachment() as WebSocketData;\n    if (userData) {\n      await this.handleParticipantLeave(userData.userId);\n    }\n  }\n  \n  async webSocketError(ws: WebSocket, error: unknown) {\n    log.error('WebSocket error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n    this.updateMetrics('error');\n    await this.sendAnalytics('websocket_connection_error', { error: String(error) });\n    \n    const userData = ws.deserializeAttachment() as WebSocketData;\n    if (userData) {\n      await this.handleParticipantLeave(userData.userId);\n    }\n  }\n  \n  private async handleWebSocketMessage(ws: WebSocket, userId: string, message: any) {\n    const { type, data } = message;\n    \n    // Update message metrics\n    this.updateMetrics('message');\n\n    switch (type) {\n      case 'offer':\n      case 'answer':\n      case 'ice-candidate':\n        // Forward WebRTC signals to specific participant\n        if (data.to) {\n          this.sendToParticipant(data.to, {\n            type,\n            from: userId,\n            data: data.signal || data\n          });\n        }\n        break;\n\n      case 'toggle-audio':\n        await this.updateParticipantStatus(userId, { audioEnabled: data.enabled });\n        break;\n\n      case 'toggle-video':\n        await this.updateParticipantStatus(userId, { videoEnabled: data.enabled });\n        break;\n        \n      case 'toggle-screen-share':\n        await this.updateParticipantStatus(userId, { isScreenSharing: data.enabled });\n        this.broadcast({\n          type: 'screen-share-changed',\n          userId,\n          isSharing: data.enabled\n        }, userId);\n        break;\n\n      case 'chat':\n        // Broadcast chat message to all participants\n        this.broadcast({\n          type: 'chat',\n          from: userId,\n          message: data.message,\n          timestamp: new Date().toISOString()\n        });\n        break;\n        \n      case 'start-recording':\n        // \uB179\uD654 \uC2DC\uC791 \uBE0C\uB85C\uB4DC\uCE90\uC2A4\uD2B8\n        if (this.roomData.settings.allowRecording && this.roomData.settings.recordingSettings?.enabled) {\n          this.broadcast({\n            type: 'recording-started',\n            initiatedBy: userId,\n            timestamp: new Date().toISOString(),\n            settings: this.roomData.settings.recordingSettings\n          });\n          await this.sendAnalytics('recording_started', { userId });\n        }\n        break;\n\n      case 'stop-recording':\n        // \uB179\uD654 \uC911\uC9C0 \uBE0C\uB85C\uB4DC\uCE90\uC2A4\uD2B8\n        this.broadcast({\n          type: 'recording-stopped',\n          stoppedBy: userId,\n          timestamp: new Date().toISOString()\n        });\n        await this.sendAnalytics('recording_stopped', { userId });\n        break;\n\n      case 'recording-chunk':\n        // \uB179\uD654 \uCCAD\uD06C \uC5C5\uB85C\uB4DC \uC644\uB8CC \uC54C\uB9BC\n        await this.handleRecordingChunk(userId, data);\n        break;\n\n      case 'quality-report':\n        // \uC5F0\uACB0 \uD488\uC9C8 \uB9AC\uD3EC\uD2B8 \uCC98\uB9AC\n        await this.handleQualityReport(userId, data);\n        break;\n        \n      case 'ping':\n        ws.send(JSON.stringify({ type: 'pong' }));\n        break;\n\n      default:\n        log.warn('Unknown message type', { component: 'WEBRTC_ROOM' }, { type });\n    }\n  }\n\n  private async updateParticipantStatus(userId: string, updates: Partial<Participant>) {\n    const participant = this.roomData.participants.find(p => p.id === userId);\n    if (participant) {\n      Object.assign(participant, updates);\n      await this.saveRoomData();\n      \n      this.broadcast({\n        type: 'participant-updated',\n        participant\n      });\n    }\n  }\n\n  private async handleParticipantLeave(userId: string) {\n    const participantIndex = this.roomData.participants.findIndex(p => p.id === userId);\n    if (participantIndex === -1) return;\n    \n    // Remove participant\n    this.roomData.participants.splice(participantIndex, 1);\n    \n    // Update metrics\n    this.updateMetrics('leave');\n    await this.saveRoomData();\n    await this.syncActiveRoomCache();\n    \n    // Send analytics\n    await this.sendAnalytics('participant_left', {\n      userId,\n      remainingParticipants: this.roomData.participants.length,\n      sessionDuration: this.roomData.metrics.sessionDuration\n    });\n    \n    // Notify others\n    this.broadcast({\n      type: 'participant-left',\n      userId\n    });\n\n    // Schedule room cleanup if empty\n    const activeParticipants = this.getActiveParticipants();\n    if (activeParticipants.length === 0) {\n      // Use alarm for cleanup instead of setTimeout\n      const cleanupTime = Date.now() + 60000; // 1 minute\n      await this.ctx.storage.setAlarm(cleanupTime);\n    }\n  }\n  \n  // Handle alarm for room cleanup\n  async alarm() {\n    const activeParticipants = this.getActiveParticipants();\n    if (activeParticipants.length === 0) {\n      await this.ctx.storage.deleteAll();\n      await this.syncActiveRoomCache({ forceRemove: true });\n    }\n  }\n\n  private async handleSettings(request: Request): Promise<Response> {\n    if (request.method === 'GET') {\n      return new Response(JSON.stringify(this.roomData.settings), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    if (request.method === 'PATCH') {\n      try {\n        const updates = await request.json();\n        Object.assign(this.roomData.settings, updates);\n        await this.saveRoomData();\n        await this.syncActiveRoomCache();\n        \n        this.broadcast({\n          type: 'settings-updated',\n          settings: this.roomData.settings\n        });\n        \n        return new Response(JSON.stringify({ success: true }), {\n          headers: { 'Content-Type': 'application/json' }\n        });\n      } catch (error) {\n        return new Response(JSON.stringify({ error: 'Invalid request' }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n    }\n\n    return new Response('Method not allowed', { status: 405 });\n  }\n\n  private async handleMetadata(request: Request): Promise<Response> {\n    if (request.method !== 'PATCH' && request.method !== 'POST') {\n      return new Response('Method not allowed', { status: 405 });\n    }\n\n    try {\n      const metadata = await request.json() as Record<string, unknown> | undefined;\n\n      if (!metadata || typeof metadata !== 'object') {\n        return new Response(JSON.stringify({ error: 'metadata object is required' }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      this.roomData.metadata = {\n        ...(this.roomData.metadata || {}),\n        ...metadata\n      };\n\n      await this.saveRoomData();\n      await this.syncActiveRoomCache();\n\n      return new Response(JSON.stringify({\n        success: true,\n        metadata: this.roomData.metadata\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      log.error('Metadata update error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      return new Response(JSON.stringify({ error: 'Failed to update metadata' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  }\n\n  private async syncActiveRoomCache(options?: { forceRemove?: boolean }) {\n    if (!this.env?.CACHE) {\n      return;\n    }\n\n    try {\n      if (options?.forceRemove) {\n        await removeActiveRoom(this.env.CACHE, this.roomId);\n        return;\n      }\n\n      const activeCount = this.getActiveParticipants().length;\n      const roomInfo: ActiveRoomInfo = {\n        roomId: this.roomId,\n        roomType: this.roomData.type === 'video' ? 'video' : 'audio',\n        currentParticipants: activeCount,\n        maxParticipants: this.roomData.maxParticipants,\n        status: activeCount > 0 ? 'active' : 'waiting',\n        createdAt: this.roomData.createdAt,\n        updatedAt: new Date().toISOString(),\n        metadata: this.roomData.metadata || {}\n      };\n\n      await upsertActiveRoom(this.env.CACHE, roomInfo);\n    } catch (error) {\n      log.warn('Active room cache sync failed', undefined, {\n        component: 'WEBRTC_ROOM',\n        error: error instanceof Error ? error.message : String(error)\n      });\n    }\n  }\n\n  private broadcast(message: any, excludeUserId?: string) {\n    const data = JSON.stringify(message);\n    \n    this.ctx.getWebSockets().forEach(ws => {\n      try {\n        const userData = ws.deserializeAttachment() as WebSocketData;\n        if (userData && userData.userId !== excludeUserId) {\n          ws.send(data);\n        }\n      } catch (error) {\n        log.error('Broadcast error', error as Error, undefined, { component: 'WEBRTC_ROOM' });\n      }\n    });\n  }\n  \n  private sendToParticipant(userId: string, message: any) {\n    const data = JSON.stringify(message);\n    const websockets = this.ctx.getWebSockets(userId);\n    \n    websockets.forEach(ws => {\n      try {\n        ws.send(data);\n      } catch (error) {\n        log.error('Send to user error', error as Error, undefined, { component: 'WEBRTC_ROOM', userId });\n      }\n    });\n  }\n\n  private async handleIceServers(): Promise<Response> {\n    const iceServers = [\n      ...this.roomData.settings.stunServers || [],\n      ...this.roomData.settings.turnServers || []\n    ];\n\n    return new Response(JSON.stringify({\n      iceServers,\n      ttl: 3600 // ICE \uC11C\uBC84 \uC815\uBCF4 TTL (1\uC2DC\uAC04)\n    }), {\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  private async handleMetrics(): Promise<Response> {\n    // Update session duration before returning metrics\n    this.updateMetrics('message'); // This will update the session duration\n    \n    const activeParticipants = this.getActiveParticipants();\n    \n    const metricsData = {\n      roomId: this.roomData.id,\n      currentParticipants: activeParticipants.length,\n      metrics: this.roomData.metrics,\n      roomSettings: {\n        type: this.roomData.type,\n        maxParticipants: this.roomData.maxParticipants,\n        createdAt: this.roomData.createdAt\n      },\n      participants: activeParticipants.map(p => ({\n        id: p.id,\n        name: p.name,\n        joinedAt: p.joinedAt,\n        audioEnabled: p.audioEnabled,\n        videoEnabled: p.videoEnabled,\n        isScreenSharing: p.isScreenSharing\n      }))\n    };\n\n    return new Response(JSON.stringify(metricsData), {\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n  \n  private getActiveParticipants(): Participant[] {\n    const connectedUserIds = new Set<string>();\n    \n    this.ctx.getWebSockets().forEach(ws => {\n      const userData = ws.deserializeAttachment() as WebSocketData;\n      if (userData) {\n        connectedUserIds.add(userData.userId);\n      }\n    });\n    \n    return this.roomData.participants.filter(p => connectedUserIds.has(p.id));\n  }\n  \n  private async saveRoomData() {\n    await this.ctx.storage.put('roomData', this.roomData);\n  }\n\n  private updateMetrics(type: 'join' | 'leave' | 'message' | 'error', data?: any) {\n    const now = new Date().toISOString();\n    this.roomData.metrics.lastActivity = now;\n\n    switch (type) {\n      case 'join':\n        this.roomData.metrics.totalParticipants++;\n        const currentCount = this.roomData.participants.length;\n        if (currentCount > this.roomData.metrics.peakParticipants) {\n          this.roomData.metrics.peakParticipants = currentCount;\n        }\n        break;\n      case 'message':\n        this.roomData.metrics.messagesExchanged++;\n        break;\n      case 'error':\n        this.roomData.metrics.connectionErrors++;\n        break;\n    }\n\n    // Calculate session duration\n    const createdTime = new Date(this.roomData.createdAt).getTime();\n    const currentTime = new Date(now).getTime();\n    this.roomData.metrics.sessionDuration = Math.floor((currentTime - createdTime) / 1000);\n  }\n\n  private async sendAnalytics(event: string, data: any) {\n    try {\n      // Cloudflare Analytics Engine\uC5D0 \uBA54\uD2B8\uB9AD \uC804\uC1A1 (env.ANALYTICS \uBC14\uC778\uB529 \uC0AC\uC6A9)\n      if (this.env?.ANALYTICS) {\n        await this.env.ANALYTICS.writeDataPoint({\n          blobs: [this.roomData.id, event],\n          doubles: [\n            this.roomData.participants.length,\n            this.roomData.metrics.peakParticipants,\n            this.roomData.metrics.messagesExchanged,\n            this.roomData.metrics.connectionErrors\n          ],\n          indexes: [this.roomData.id]\n        });\n      }\n    } catch (error) {\n      console.error('Analytics error:', error);\n    }\n  }\n\n  private async handleRecordingChunk(userId: string, data: any) {\n    try {\n      const { filename, size, duration } = data;\n      \n      // \uB179\uD654 \uCCAD\uD06C \uBA54\uD0C0\uB370\uC774\uD130 \uC800\uC7A5\n      const recordingMetadata = {\n        roomId: this.roomData.id,\n        userId,\n        filename,\n        size,\n        duration,\n        timestamp: new Date().toISOString(),\n        participants: this.roomData.participants.map(p => ({\n          id: p.id,\n          name: p.name\n        }))\n      };\n\n      // KV\uC5D0 \uB179\uD654 \uBA54\uD0C0\uB370\uC774\uD130 \uC800\uC7A5\n      if (this.env?.CACHE) {\n        const recordingKey = `recording:${this.roomData.id}:${filename}`;\n        await this.env.CACHE.put(recordingKey, JSON.stringify(recordingMetadata), {\n          expirationTtl: 86400 * 30 // 30\uC77C \uBCF4\uAD00\n        });\n      }\n\n      // \uB2E4\uB978 \uCC38\uAC00\uC790\uB4E4\uC5D0\uAC8C \uB179\uD654 \uCCAD\uD06C \uC54C\uB9BC\n      this.broadcast({\n        type: 'recording-chunk-saved',\n        filename,\n        size,\n        duration,\n        uploadedBy: userId,\n        timestamp: recordingMetadata.timestamp\n      }, userId);\n\n      await this.sendAnalytics('recording_chunk_saved', {\n        userId,\n        filename,\n        size,\n        duration\n      });\n\n    } catch (error) {\n      console.error('Recording chunk handling error:', error);\n    }\n  }\n\n  private async handleQualityReport(userId: string, data: any) {\n    try {\n      const { qualityData, timestamp } = data;\n      \n      // \uD488\uC9C8 \uB370\uC774\uD130\uB97C KV\uC5D0 \uC800\uC7A5 (\uC2E4\uC2DC\uAC04 \uBD84\uC11D\uC6A9)\n      if (this.env?.CACHE) {\n        const qualityKey = `quality:${this.roomId}:${userId}:${Date.now()}`;\n        const qualityReport = {\n          roomId: this.roomData.id,\n          userId,\n          timestamp: timestamp || new Date().toISOString(),\n          quality: qualityData,\n          participantCount: this.roomData.participants.length\n        };\n\n        await this.env.CACHE.put(qualityKey, JSON.stringify(qualityReport), {\n          expirationTtl: 3600 // 1\uC2DC\uAC04 \uBCF4\uAD00\n        });\n      }\n\n      // Analytics Engine\uC5D0 \uD488\uC9C8 \uB370\uC774\uD130 \uC804\uC1A1\n      await this.sendQualityAnalytics(userId, qualityData);\n\n      // \uD488\uC9C8\uC774 \uB098\uC05C \uACBD\uC6B0 \uB2E4\uB978 \uCC38\uAC00\uC790\uB4E4\uC5D0\uAC8C \uC54C\uB9BC\n      if (qualityData.overall === 'poor' || qualityData.overall === 'fair') {\n        this.broadcast({\n          type: 'quality-alert',\n          userId,\n          quality: qualityData.overall,\n          issues: this.extractQualityIssues(qualityData),\n          timestamp: new Date().toISOString()\n        }, userId);\n      }\n\n      // \uCC38\uAC00\uC790\uC758 \uD488\uC9C8 \uC815\uBCF4 \uC5C5\uB370\uC774\uD2B8\n      const participant = this.roomData.participants.find(p => p.id === userId);\n      if (participant) {\n        (participant as any).connectionQuality = qualityData.overall;\n        (participant as any).lastQualityUpdate = new Date().toISOString();\n        await this.saveRoomData();\n      }\n\n    } catch (error) {\n      console.error('Quality report handling error:', error);\n    }\n  }\n\n  private async sendQualityAnalytics(userId: string, qualityData: any) {\n    try {\n      if (this.env?.ANALYTICS) {\n        await this.env.ANALYTICS.writeDataPoint({\n          blobs: [this.roomData.id, userId, 'quality_report'],\n          doubles: [\n            qualityData.audio?.stats?.packetLossRate || 0,\n            qualityData.video?.stats?.packetLossRate || 0,\n            qualityData.network?.stats?.roundTripTime || 0,\n            qualityData.audio?.stats?.jitter || 0,\n            this.getQualityScore(qualityData.overall)\n          ],\n          indexes: [this.roomData.id, userId]\n        });\n      }\n    } catch (error) {\n      console.error('Quality analytics error:', error);\n    }\n  }\n\n  private getQualityScore(quality: string): number {\n    const scores: Record<string, number> = { 'excellent': 100, 'good': 75, 'fair': 50, 'poor': 25 };\n    return scores[quality] || 0;\n  }\n\n  private extractQualityIssues(qualityData: any): string[] {\n    const issues = [];\n    \n    if (qualityData.audio?.stats?.packetLossRate > 0.05) {\n      issues.push('audio_packet_loss');\n    }\n    \n    if (qualityData.video?.stats?.packetLossRate > 0.05) {\n      issues.push('video_packet_loss');\n    }\n    \n    if (qualityData.network?.stats?.roundTripTime > 300) {\n      issues.push('high_latency');\n    }\n    \n    if (qualityData.audio?.stats?.jitter > 50) {\n      issues.push('audio_jitter');\n    }\n    \n    return issues;\n  }\n  \n  private async restoreParticipants() {\n    const stored = await this.ctx.storage.get<RoomData>('roomData');\n    if (stored) {\n      this.roomData = stored;\n      \n      // Update participants based on active WebSockets\n      const activeParticipants = this.getActiveParticipants();\n      this.roomData.participants = activeParticipants;\n      \n      if (activeParticipants.length !== stored.participants.length) {\n        await this.saveRoomData();\n      }\n    }\n  }\n}\n\n// Type definitions\ninterface RoomMetrics {\n  totalParticipants: number;\n  peakParticipants: number;\n  messagesExchanged: number;\n  connectionErrors: number;\n  lastActivity: string;\n  sessionDuration: number; // in seconds\n}\n\ninterface RoomSettings {\n  allowScreenShare: boolean;\n  allowRecording: boolean;\n  autoMuteOnJoin: boolean;\n  stunServers?: RTCIceServer[];\n  turnServers?: RTCIceServer[];\n  recordingSettings?: RecordingSettings;\n}\n\ninterface RecordingSettings {\n  enabled: boolean;\n  autoStart: boolean;\n  maxDuration: number; // in minutes\n  format: 'webm' | 'mp4';\n  quality: 'low' | 'medium' | 'high';\n  audioOnly: boolean;\n}\n\ninterface RTCIceServer {\n  urls: string | string[];\n  username?: string;\n  credential?: string;\n}\n\ninterface RoomData {\n  id: string;\n  participants: Participant[];\n  maxParticipants: number;\n  createdAt: string;\n  type: 'audio' | 'video';\n  settings: RoomSettings;\n  metrics: RoomMetrics;\n  metadata?: Record<string, any>;\n}\n\ninterface Participant {\n  id: string;\n  name: string;\n  joinedAt: string;\n  audioEnabled: boolean;\n  videoEnabled: boolean;\n  isScreenSharing: boolean;\n  connectionQuality?: 'excellent' | 'good' | 'fair' | 'poor';\n  lastQualityUpdate?: string;\n}\n\ninterface WebSocketData {\n  userId: string;\n  userName: string;\n  joinedAt: string;\n}\n", "import { DurableObject } from 'cloudflare:workers';\nimport type { Env } from '../index';\nimport { updateUserStatus, touchUserStatus } from '../services/userStatus';\n\ninterface PresenceState {\n  userId: string;\n  status: 'ONLINE' | 'OFFLINE' | 'AWAY' | 'STUDYING';\n  lastSeenAt: string;\n  deviceInfo?: string;\n  sessionId?: string;\n  metadata?: Record<string, unknown>;\n}\n\nconst STATUS_KEY = 'status';\nconst ONLINE_LIST_PREFIX = 'presence:online';\nconst SESSION_PREFIX = 'presence:session';\nconst INACTIVE_THRESHOLD_MS = 15 * 60 * 1000; // 15\uBD84\n\nexport class UserPresence extends DurableObject {\n  env: Env;\n  private userId: string;\n\n  constructor(state: DurableObjectState, env: Env) {\n    super(state, env);\n    this.env = env;\n    this.userId = state.id.toString();\n  }\n\n  private async ensureState(): Promise<PresenceState | null> {\n    const cached = await this.ctx.storage.get<PresenceState>(STATUS_KEY);\n    if (cached) {\n      return cached;\n    }\n\n    const row = await this.env.DB.prepare(\n      `SELECT status, last_seen_at, device_info, current_session_id\n         FROM user_status WHERE user_id = ? LIMIT 1`\n    )\n      .bind(this.userId)\n      .first<{ status: string; last_seen_at: string | null; device_info: string | null; current_session_id: string | null }>();\n\n    if (!row) {\n      return null;\n    }\n\n    const state: PresenceState = {\n      userId: this.userId,\n      status: (row.status as PresenceState['status']) ?? 'OFFLINE',\n      lastSeenAt: row.last_seen_at ?? new Date().toISOString(),\n      deviceInfo: row.device_info ?? undefined,\n      sessionId: row.current_session_id ?? undefined\n    };\n\n    await this.ctx.storage.put(STATUS_KEY, state);\n    await this.updateIndexes(state);\n    return state;\n  }\n\n  async setStatus(request: Request): Promise<Response> {\n    const body = await request.json<PresenceState>();\n    const state: PresenceState = {\n      ...body,\n      userId: body.userId ?? this.userId,\n      lastSeenAt: body.lastSeenAt ?? new Date().toISOString()\n    };\n\n    await this.ctx.storage.put(STATUS_KEY, state);\n    await this.updateIndexes(state);\n    await updateUserStatus(this.env, state.userId, state.status, {\n      sessionId: state.sessionId,\n      deviceInfo: state.deviceInfo\n    });\n\n    return new Response(JSON.stringify(state), { status: 200, headers: { 'Content-Type': 'application/json' } });\n  }\n\n  async touch(): Promise<Response> {\n    const current = (await this.ctx.storage.get<PresenceState>(STATUS_KEY)) ?? (await this.ensureState());\n    if (!current) {\n      return new Response(JSON.stringify({ success: false, reason: 'USER_NOT_FOUND' }), { status: 404 });\n    }\n\n    const updated: PresenceState = {\n      ...current,\n      lastSeenAt: new Date().toISOString()\n    };\n\n    await this.ctx.storage.put(STATUS_KEY, updated);\n    await this.updateIndexes(updated);\n    await touchUserStatus(this.env, updated.userId);\n\n    return new Response(JSON.stringify({ success: true }), { status: 200, headers: { 'Content-Type': 'application/json' } });\n  }\n\n  async getStatus(): Promise<Response> {\n    const current = (await this.ctx.storage.get<PresenceState>(STATUS_KEY)) ?? (await this.ensureState());\n    if (!current) {\n      return new Response(JSON.stringify({ status: 'OFFLINE' }), { status: 200, headers: { 'Content-Type': 'application/json' } });\n    }\n    return new Response(JSON.stringify(current), { status: 200, headers: { 'Content-Type': 'application/json' } });\n  }\n\n  async setOffline(): Promise<Response> {\n    const current = (await this.ctx.storage.get<PresenceState>(STATUS_KEY)) ?? (await this.ensureState());\n    if (!current) {\n      return new Response(JSON.stringify({ success: true }), { status: 200 });\n    }\n\n    const updated: PresenceState = {\n      ...current,\n      status: 'OFFLINE',\n      sessionId: undefined,\n      lastSeenAt: new Date().toISOString()\n    };\n\n    await this.ctx.storage.put(STATUS_KEY, updated);\n    await this.updateIndexes(updated, { removeFromSession: current.sessionId });\n    await updateUserStatus(this.env, updated.userId, 'OFFLINE');\n\n    return new Response(JSON.stringify(updated), { status: 200, headers: { 'Content-Type': 'application/json' } });\n  }\n\n  async alarm(): Promise<void> {\n    const current = await this.ctx.storage.get<PresenceState>(STATUS_KEY);\n    if (!current) {\n      return;\n    }\n\n    const lastSeen = new Date(current.lastSeenAt).getTime();\n    if (Date.now() - lastSeen > INACTIVE_THRESHOLD_MS && current.status !== 'OFFLINE') {\n      await this.setOffline();\n    } else {\n      await this.scheduleAlarm();\n    }\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    const url = new URL(request.url);\n    switch (url.pathname) {\n      case '/status':\n        return this.getStatus();\n      case '/set':\n        if (request.method !== 'POST') return new Response('Method Not Allowed', { status: 405 });\n        await this.scheduleAlarm();\n        return this.setStatus(request);\n      case '/touch':\n        if (request.method !== 'POST') return new Response('Method Not Allowed', { status: 405 });\n        await this.scheduleAlarm();\n        return this.touch();\n      case '/offline':\n        if (request.method !== 'POST') return new Response('Method Not Allowed', { status: 405 });\n        return this.setOffline();\n      default:\n        return new Response('Not Found', { status: 404 });\n    }\n  }\n\n  private async updateIndexes(state: PresenceState, options: { removeFromSession?: string } = {}) {\n    const { status, userId, sessionId } = state;\n\n    if (!userId) return;\n\n    if (status === 'ONLINE' || status === 'STUDYING' || status === 'AWAY') {\n      await this.env.CACHE.put(`${ONLINE_LIST_PREFIX}:${userId}`, state.status, { expirationTtl: 60 * 10 });\n    } else {\n      await this.env.CACHE.delete(`${ONLINE_LIST_PREFIX}:${userId}`);\n    }\n\n    if (sessionId) {\n      await this.env.CACHE.put(`${SESSION_PREFIX}:${sessionId}:${userId}`, state.status, { expirationTtl: 60 * 10 });\n    }\n    if (options.removeFromSession) {\n      await this.env.CACHE.delete(`${SESSION_PREFIX}:${options.removeFromSession}:${userId}`);\n    }\n  }\n\n  private async scheduleAlarm() {\n    const alarmTime = Date.now() + INACTIVE_THRESHOLD_MS;\n    await this.ctx.storage.setAlarm(alarmTime);\n  }\n}\n", "import type { Env } from '../index';\n\nexport type PresenceStatus = 'ONLINE' | 'OFFLINE' | 'AWAY' | 'STUDYING';\n\nexport interface PresenceUpdateOptions {\n  sessionId?: string;\n  deviceInfo?: string;\n  metadata?: Record<string, unknown>;\n}\n\nfunction isoNow(): string {\n  return new Date().toISOString();\n}\n\nexport async function updateUserStatus(\n  env: Env,\n  userId: string,\n  status: PresenceStatus,\n  options: PresenceUpdateOptions = {}\n): Promise<void> {\n  const payload = {\n    userId,\n    status,\n    sessionId: options.sessionId ?? null,\n    deviceInfo: options.deviceInfo ?? null,\n    metadata: options.metadata ?? null,\n    updatedAt: isoNow()\n  };\n\n  const result: any = await env.DB.prepare(\n    `UPDATE user_status\n       SET status = ?,\n           current_session_id = ?,\n           device_info = ?,\n           last_seen_at = ?,\n           updated_at = ?\n     WHERE user_id = ?`\n  )\n    .bind(status, options.sessionId ?? null, options.deviceInfo ?? null, payload.updatedAt, payload.updatedAt, userId)\n    .run();\n\n  if (result.changes === 0) {\n    await env.DB.prepare(\n      `INSERT INTO user_status (\n          user_id,\n          status,\n          last_seen_at,\n          device_info,\n          current_session_id,\n          created_at,\n          updated_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?)`\n    )\n      .bind(\n        userId,\n        status,\n        payload.updatedAt,\n        options.deviceInfo ?? null,\n        options.sessionId ?? null,\n        payload.updatedAt,\n        payload.updatedAt\n      )\n      .run();\n  }\n}\n\nexport async function touchUserStatus(env: Env, userId: string): Promise<void> {\n  const now = isoNow();\n  const result: any = await env.DB.prepare(\n    `UPDATE user_status\n       SET last_seen_at = ?,\n           updated_at = ?\n     WHERE user_id = ?`\n  )\n    .bind(now, now, userId)\n    .run();\n\n  if (result.changes === 0) {\n    await env.DB.prepare(\n      `INSERT INTO user_status (\n          user_id,\n          status,\n          last_seen_at,\n          device_info,\n          current_session_id,\n          created_at,\n          updated_at\n        ) VALUES (?, 'OFFLINE', ?, NULL, NULL, ?, ?)`\n    )\n      .bind(userId, now, now, now)\n      .run();\n  }\n}\n\nexport async function setInactiveUsersOffline(env: Env, cutoffMinutes: number): Promise<number> {\n  const now = isoNow();\n  const cutoffDate = new Date(Date.now() - cutoffMinutes * 60 * 1000).toISOString();\n  const result: any = await env.DB.prepare(\n    `UPDATE user_status\n        SET status = 'OFFLINE',\n            current_session_id = NULL,\n            updated_at = ?,\n            device_info = device_info\n      WHERE status != 'OFFLINE'\n        AND last_seen_at IS NOT NULL\n        AND last_seen_at < ?`\n  )\n    .bind(now, cutoffDate)\n    .run();\n  return result.changes ?? 0;\n}\n", "import type { DurableObjectState } from '@cloudflare/workers-types';\nimport type { Env } from '../index';\nimport { createChatMessage, ChatMessageCreatePayload } from '../services/chat';\nimport { queryFirst } from '../utils/db';\nimport { AppError } from '../utils/errors';\nimport { verify } from 'hono/jwt';\nimport { assertEnvVar } from '../utils/security';\n\ninterface ConnectionState {\n  id: string;\n  userId: string;\n  subscriptions: Map<string, string>;\n  buffer: string;\n  profile?: { name?: string; profileImage?: string };\n}\n\ninterface StompFrame {\n  command: string;\n  headers: Record<string, string>;\n  body: string;\n}\n\nfunction nowIso(): string {\n  return new Date().toISOString();\n}\n\ninterface AuthInfo {\n  id: string;\n  name?: string;\n}\n\ninterface PublishEvent {\n  destination: string;\n  payload: unknown;\n  headers?: Record<string, string>;\n  userId?: string;\n}\n\nfunction parseStompFrame(raw: string): StompFrame | null {\n  const trimmed = raw.replace(/\\r/g, '');\n  if (!trimmed.trim()) {\n    return null;\n  }\n  const parts = trimmed.split('\\n');\n  const command = parts.shift() ?? '';\n  const headers: Record<string, string> = {};\n  while (parts.length > 0) {\n    const line = parts.shift() as string;\n    if (line === '') {\n      break;\n    }\n    const idx = line.indexOf(':');\n    if (idx > -1) {\n      const key = line.slice(0, idx).trim();\n      const value = line.slice(idx + 1).trim();\n      headers[key] = value;\n    }\n  }\n  const body = parts.join('\\n');\n  return { command, headers, body };\n}\n\nfunction serializeStompFrame(frame: StompFrame): string {\n  const headerLines = Object.entries(frame.headers)\n    .map(([key, value]) => `${key}:${value}`)\n    .join('\\n');\n  return `${frame.command}\\n${headerLines}\\n\\n${frame.body}\\0`;\n}\n\nfunction normalizeDestination(destination: string, userId?: string): string {\n  if (destination.startsWith('/user/')) {\n    const keyUser = userId ?? '';\n    return `${destination}|${keyUser}`;\n  }\n  return destination;\n}\n\nfunction safeJsonParse<T>(input: string): T | null {\n  try {\n    return JSON.parse(input) as T;\n  } catch {\n    return null;\n  }\n}\n\nfunction buildMessageFrame(\n  subscriptionId: string,\n  destination: string,\n  body: unknown\n): StompFrame {\n  return {\n    command: 'MESSAGE',\n    headers: {\n      subscription: subscriptionId,\n      'message-id': crypto.randomUUID(),\n      destination,\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(body ?? null)\n  };\n}\n\nexport class ChatHub {\n  private connections = new Map<WebSocket, ConnectionState>();\n  private destinationMap = new Map<string, Map<WebSocket, string>>();\n\n  constructor(private state: DurableObjectState, private env: Env) {}\n\n  async fetch(request: Request): Promise<Response> {\n    const upgradeHeader = request.headers.get('Upgrade');\n    if (upgradeHeader && upgradeHeader.toLowerCase() === 'websocket') {\n      const pair = new WebSocketPair();\n      const client = pair[0];\n      const server = pair[1];\n      this.acceptWebSocket(server);\n      return new Response(null, { status: 101, webSocket: client });\n    }\n\n    if (request.method === 'POST') {\n      const event = await request.json<PublishEvent>();\n      await this.publish(event.destination, event.payload, event.userId);\n      return new Response(null, { status: 204 });\n    }\n\n    return new Response('Not Found', { status: 404 });\n  }\n\n  private acceptWebSocket(socket: WebSocket, userId?: string) {\n    const id = crypto.randomUUID();\n    const state: ConnectionState = {\n      id,\n      userId: userId ?? '',\n      subscriptions: new Map(),\n      buffer: ''\n    };\n    this.connections.set(socket, state);\n\n    socket.accept();\n\n    socket.addEventListener('message', (event) => {\n      if (typeof event.data !== 'string') {\n        return;\n      }\n      state.buffer += event.data as string;\n      let frameEnd = state.buffer.indexOf('\\0');\n      while (frameEnd >= 0) {\n        const rawFrame = state.buffer.slice(0, frameEnd);\n        state.buffer = state.buffer.slice(frameEnd + 1);\n        const frame = parseStompFrame(rawFrame);\n        if (frame) {\n          this.handleFrame(socket, state, frame).catch((error) => {\n            console.error('[ChatHub] Failed to handle frame', error);\n          });\n        }\n        frameEnd = state.buffer.indexOf('\\0');\n      }\n    });\n\n    socket.addEventListener('close', () => {\n      this.cleanup(socket);\n    });\n\n    socket.addEventListener('error', () => {\n      this.cleanup(socket);\n    });\n  }\n\n  private async handleFrame(socket: WebSocket, state: ConnectionState, frame: StompFrame) {\n    switch (frame.command) {\n      case 'CONNECT': {\n        const auth = await this.authenticateConnection(frame.headers);\n        if (!auth) {\n          this.sendError(socket, 'Unauthorized');\n          socket.close(1008, 'Unauthorized');\n          return;\n        }\n        state.userId = auth.id;\n        const profile = await this.getUserProfile(auth.id);\n        state.profile = {\n          name: profile.name ?? auth.name,\n          profileImage: profile.profileImage\n        };\n        this.sendFrame(socket, {\n          command: 'CONNECTED',\n          headers: {\n            version: '1.2',\n            'heart-beat': '0,0'\n          },\n          body: ''\n        });\n        break;\n      }\n      case 'SUBSCRIBE': {\n        const destination = frame.headers.destination;\n        const subscriptionId = frame.headers.id;\n        if (!destination || !subscriptionId) {\n          this.sendError(socket, 'SUBSCRIBE frame missing destination or id');\n          return;\n        }\n        const key = normalizeDestination(destination, state.userId);\n        state.subscriptions.set(subscriptionId, key);\n        let subMap = this.destinationMap.get(key);\n        if (!subMap) {\n          subMap = new Map<WebSocket, string>();\n          this.destinationMap.set(key, subMap);\n        }\n        subMap.set(socket, subscriptionId);\n        break;\n      }\n      case 'UNSUBSCRIBE': {\n        const subscriptionId = frame.headers.id;\n        if (!subscriptionId) {\n          return;\n        }\n        const key = state.subscriptions.get(subscriptionId);\n        if (!key) {\n          return;\n        }\n        state.subscriptions.delete(subscriptionId);\n        const subMap = this.destinationMap.get(key);\n        subMap?.delete(socket);\n        if (subMap && subMap.size === 0) {\n          this.destinationMap.delete(key);\n        }\n        break;\n      }\n      case 'SEND': {\n        const destination = frame.headers.destination;\n        if (!destination) {\n          this.sendError(socket, 'SEND frame missing destination');\n          return;\n        }\n        await this.handleSend(socket, destination, frame.body, state);\n        break;\n      }\n      case 'DISCONNECT': {\n        socket.close(1000, 'Client disconnect');\n        break;\n      }\n      default:\n        // Ignore other commands for now\n        break;\n    }\n  }\n\n  private async handleSend(socket: WebSocket, destination: string, body: string, state: ConnectionState) {\n    if (!state.userId) {\n      this.sendError(socket, 'Unauthorized');\n      socket.close(1008, 'Unauthorized');\n      return;\n    }\n    if (destination === '/pub/chat/message') {\n      const parsed = safeJsonParse<Partial<ChatMessageCreatePayload>>(body) ?? {};\n      const roomId = Number(parsed.roomId);\n      if (!Number.isFinite(roomId)) {\n        throw new AppError('roomId\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.', 400, 'INVALID_ROOM_ID');\n      }\n      const message = await createChatMessage(this.env, state.userId, {\n        roomId,\n        message: parsed.message,\n        imageUrls: parsed.imageUrls,\n        audioData: parsed.audioData,\n        audioUrl: parsed.audioUrl,\n        messageType: parsed.messageType\n      });\n      await this.publish(`/sub/chat/room/${message.roomId}`, message);\n    } else if (destination === '/pub/chat/typing') {\n      const payload = safeJsonParse<{ roomId: number; isTyping: boolean }>(body);\n      if (!payload || !Number.isFinite(payload.roomId)) {\n        return;\n      }\n      const profile = state.profile ?? await this.getUserProfile(state.userId);\n      state.profile = profile;\n      await this.publish(`/sub/chat/room/${payload.roomId}/typing`, {\n        userId: state.userId,\n        userName: profile.name,\n        userProfileImage: profile.profileImage,\n        isTyping: Boolean(payload.isTyping),\n        timestamp: nowIso()\n      });\n    }\n  }\n\n  private async authenticateConnection(headers: Record<string, string>): Promise<AuthInfo | null> {\n    const authorization = headers['Authorization'] ?? headers['authorization'];\n    if (!authorization) {\n      return null;\n    }\n    const match = authorization.match(/^Bearer (.+)$/i);\n    if (!match) {\n      return null;\n    }\n    try {\n      const secret = assertEnvVar(this.env.JWT_SECRET, 'JWT_SECRET');\n      const verifyOptions: { alg: 'HS512'; iss?: string } = { alg: 'HS512' };\n      const issuer = this.env.JWT_ISSUER ?? this.env.API_BASE_URL;\n      if (issuer) {\n        verifyOptions.iss = issuer;\n      }\n      const payload = await verify(match[1], secret, verifyOptions);\n      const id = payload.sub ? String(payload.sub) : '';\n      if (!id) {\n        return null;\n      }\n      return { id, name: payload.name as string | undefined };\n    } catch {\n      return null;\n    }\n  }\n\n  private async getUserProfile(userId: string): Promise<{ name?: string; profileImage?: string }> {\n    const row = await queryFirst<{ name: string | null; profile_image: string | null }>(\n      this.env.DB,\n      'SELECT name, profile_image FROM users WHERE user_id = ? LIMIT 1',\n      [userId]\n    );\n    return {\n      name: row?.name ?? undefined,\n      profileImage: row?.profile_image ?? undefined\n    };\n  }\n\n  private async publish(destination: string, payload: unknown, userId?: string) {\n    const key = normalizeDestination(destination, userId);\n    const subscribers = this.destinationMap.get(key);\n    if (!subscribers || subscribers.size === 0) {\n      return;\n    }\n    for (const [socket, subscriptionId] of subscribers.entries()) {\n      if (socket.readyState !== WebSocket.OPEN) {\n        continue;\n      }\n      this.sendFrame(socket, buildMessageFrame(subscriptionId, destination, payload));\n    }\n  }\n\n  private sendFrame(socket: WebSocket, frame: StompFrame) {\n    try {\n      socket.send(serializeStompFrame(frame));\n    } catch (error) {\n      console.error('[ChatHub] Failed to send frame', error);\n      socket.close(1011, 'Frame send error');\n    }\n  }\n\n  private sendError(socket: WebSocket, message: string) {\n    this.sendFrame(socket, {\n      command: 'ERROR',\n      headers: { message },\n      body: message\n    });\n  }\n\n  private cleanup(socket: WebSocket) {\n    const state = this.connections.get(socket);\n    if (!state) {\n      return;\n    }\n    for (const [subscriptionId, key] of state.subscriptions.entries()) {\n      const subMap = this.destinationMap.get(key);\n      subMap?.delete(socket);\n      if (subMap && subMap.size === 0) {\n        this.destinationMap.delete(key);\n      }\n    }\n    this.connections.delete(socket);\n  }\n}\n", "export * from './auth';\nexport * from './error-handler';\nexport * from './logger';\nexport * from './security';\n\nimport { compress } from 'hono/compress';\nimport { etag } from 'hono/etag';\nimport { timeout } from 'hono/timeout';\nimport { requestId } from 'hono/request-id';\nimport { prettyJSON } from 'hono/pretty-json';\nimport { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport type { Variables } from '../types';\n\nimport { errorHandler } from './error-handler';\nimport { logger, performanceMonitor } from './logger';\nimport { securityHeaders, rateLimit } from './security';\n\n/**\n * \uAE30\uBCF8 \uBBF8\uB4E4\uC6E8\uC5B4 \uC124\uC815\n */\nexport function setupMiddleware(app: Hono) {\n    // CORS \uC124\uC815 (\uAC00\uC7A5 \uBA3C\uC800 \uC801\uC6A9)\n    app.use('*', cors({\n        origin: (origin) => {\n            // \uD5C8\uC6A9\uB41C \uC624\uB9AC\uC9C4 \uBAA9\uB85D\n            const allowedOrigins = [\n                'http://localhost:3000',\n                'http://localhost:5173',\n                'https://languagemate.kr',\n                'https://www.languagemate.kr',\n                'https://api.languagemate.kr'\n            ];\n\n            // \uC624\uB9AC\uC9C4\uC774 \uC5C6\uAC70\uB098 \uD5C8\uC6A9\uB41C \uBAA9\uB85D\uC5D0 \uC788\uC73C\uBA74 \uD5C8\uC6A9\n            if (!origin || allowedOrigins.includes(origin)) {\n                return origin || '*';\n            }\n\n            // Cloudflare \uAC1C\uBC1C \uD658\uACBD \uD5C8\uC6A9\n            if (origin.includes('.pages.dev') || origin.includes('.workers.dev')) {\n                return origin;\n            }\n\n            return null;\n        },\n        allowMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'],\n        allowHeaders: [\n            'Content-Type',\n            'Authorization',\n            'X-Requested-With',\n            'X-API-Key',\n            'X-Internal-Secret',\n            'X-Trace-ID'\n        ],\n        exposeHeaders: [\n            'Content-Length',\n            'X-Request-ID'\n        ],\n        credentials: true,\n        maxAge: 86400 // 24\uC2DC\uAC04\n    }));\n\n    // \uC694\uCCAD ID \uC0DD\uC131\n    app.use('*', requestId());\n\n    // \uC5D0\uB7EC \uD578\uB4E4\uB9C1\n    app.use('*', errorHandler);\n\n    // \uB85C\uAE45\n    app.use('*', logger);\n\n    // \uBCF4\uC548 \uD5E4\uB354 (CORS \uC774\uD6C4\uC5D0 \uC801\uC6A9)\n    app.use('*', securityHeaders);\n\n    return app;\n}\n", "import { Context, Next } from 'hono';\nimport { Variables } from '../types';\nimport { log, logger as utilLogger } from '../utils/logger';\n\nexport interface LogContext {\n    requestId: string;\n    method: string;\n    path: string;\n    ip?: string;\n    userAgent?: string;\n    userId?: string;\n    duration?: number;\n    status?: number;\n    error?: any;\n}\n\n/**\n * \uD658\uACBD \uCD08\uAE30\uD654\n */\nfunction initializeLogger(env?: any) {\n    if (env?.ENVIRONMENT) {\n        utilLogger.setEnvironment(env.ENVIRONMENT);\n    }\n}\n\n/**\n * \uC694\uCCAD ID \uC0DD\uC131\n */\nfunction generateRequestId(): string {\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n}\n\n/**\n * \uB85C\uAE45 \uBBF8\uB4E4\uC6E8\uC5B4\n * \uBAA8\uB4E0 \uC694\uCCAD/\uC751\uB2F5\uC744 \uAD6C\uC870\uD654\uB41C \uD615\uC2DD\uC73C\uB85C \uB85C\uAE45\n */\nexport async function logger(c: Context<{ Variables: Variables }>, next: Next) {\n    // \uD658\uACBD \uCD08\uAE30\uD654 (\uCD5C\uCD08 1\uD68C)\n    initializeLogger(c.env);\n\n    const requestId = c.req.header('X-Request-ID') || generateRequestId();\n    const startTime = Date.now();\n\n    // \uBCC0\uC218 \uC124\uC815\n    c.set('requestId', requestId);\n    c.set('startTime', startTime);\n\n    // \uC694\uCCAD \uB85C\uAE45\n    const logContext = {\n        requestId,\n        method: c.req.method,\n        path: c.req.path,\n        ip: c.req.header('CF-Connecting-IP') || c.req.header('X-Forwarded-For'),\n        userAgent: c.req.header('User-Agent'),\n        userId: c.get('userId')\n    };\n\n    log.info('Request received', logContext);\n\n    try {\n        await next();\n\n        // \uC751\uB2F5 \uB85C\uAE45\n        const duration = Date.now() - startTime;\n        log.api(c.req.method, c.req.path, c.res.status, duration, logContext);\n    } catch (error) {\n        // \uC5D0\uB7EC \uB85C\uAE45\n        const duration = Date.now() - startTime;\n        log.error(\n            'Request failed', \n            error instanceof Error ? error : new Error(String(error)),\n            { ...logContext, duration }\n        );\n        throw error;\n    }\n}\n\n/**\n * \uC131\uB2A5 \uBAA8\uB2C8\uD130\uB9C1 \uBBF8\uB4E4\uC6E8\uC5B4\n * \uB290\uB9B0 \uC694\uCCAD\uC744 \uAC10\uC9C0\uD558\uACE0 \uACBD\uACE0\n */\nexport function performanceMonitor(threshold: number = 3000) {\n    return async (c: Context<{ Variables: Variables }>, next: Next) => {\n        const startTime = c.get('startTime');\n\n        await next();\n\n        const duration = Date.now() - startTime;\n        if (duration > threshold) {\n            log.warn('Slow request detected', {\n                requestId: c.get('requestId'),\n                method: c.req.method,\n                path: c.req.path,\n                duration,\n                status: c.res.status,\n                component: 'PERFORMANCE'\n            });\n        }\n    };\n}", "// src/middleware/request-id/index.ts\nimport { requestId } from \"./request-id.js\";\nexport {\n  requestId\n};\n", "// src/middleware/request-id/request-id.ts\nvar requestId = ({\n  limitLength = 255,\n  headerName = \"X-Request-Id\",\n  generator = () => crypto.randomUUID()\n} = {}) => {\n  return async function requestId2(c, next) {\n    let reqId = headerName ? c.req.header(headerName) : void 0;\n    if (!reqId || reqId.length > limitLength || /[^\\w\\-]/.test(reqId)) {\n      reqId = generator(c);\n    }\n    c.set(\"requestId\", reqId);\n    if (headerName) {\n      c.header(headerName, reqId);\n    }\n    await next();\n  };\n};\nexport {\n  requestId\n};\n", "import { verify } from 'hono/jwt';\nimport type { Context } from 'hono';\n\nimport type { Env } from '../index';\nimport type { Variables } from '../types';\nimport { assertEnvVar } from '../utils/security';\nimport { listNotifications } from '../services/notifications';\nimport type { NotificationListItem } from '../types';\n\ninterface StompFrame {\n  command: string;\n  headers: Record<string, string>;\n  body: string;\n}\n\ninterface SubscriptionContext {\n  destination: string;\n  pollTimer?: ReturnType<typeof setTimeout>;\n}\n\nconst HEARTBEAT_INTERVAL_MS = 25000;\nconst NOTIFICATION_POLL_INTERVAL_MS = 15000;\nconst MAX_SENT_HISTORY = 200;\n\nexport async function handleNotificationWebSocket(\n  c: Context<{ Bindings: Env; Variables: Variables }>\n): Promise<Response> {\n  const url = new URL(c.req.url);\n  const token = url.searchParams.get('token')\n    ?? extractBearerToken(c.req.header('Authorization'))\n    ?? '';\n\n  const user = await verifyUserToken(token, c.env);\n  if (!user) {\n    return new Response('Unauthorized', { status: 401 });\n  }\n\n  const { 0: client, 1: server } = new WebSocketPair();\n  const session = new NotificationSocketSession(server, c.env, user.id);\n  session.start();\n\n  return new Response(null, { status: 101, webSocket: client });\n}\n\nfunction extractBearerToken(authorizationHeader?: string | null): string | undefined {\n  if (!authorizationHeader) return undefined;\n  const match = authorizationHeader.match(/^Bearer (.+)$/i);\n  return match?.[1];\n}\n\nasync function verifyUserToken(token: string, env: Env): Promise<{ id: string } | null> {\n  if (!token) return null;\n  try {\n    const secret = assertEnvVar(env.JWT_SECRET, 'JWT_SECRET');\n    const verifyOptions: { alg: 'HS512'; iss?: string } = { alg: 'HS512' };\n    const issuer = env.JWT_ISSUER ?? env.API_BASE_URL;\n    if (issuer) {\n      verifyOptions.iss = issuer;\n    }\n\n    const payload = await verify(token, secret, verifyOptions);\n    if (typeof payload.sub !== 'string') {\n      return null;\n    }\n    return { id: payload.sub };\n  } catch (error) {\n    console.error('[notifications-ws] Failed to verify token', error);\n    return null;\n  }\n}\n\nclass NotificationSocketSession {\n  private readonly ws: WebSocket;\n  private readonly env: Env;\n  private readonly userId: string;\n  private buffer = '';\n  private connected = false;\n  private heartbeatTimer?: ReturnType<typeof setTimeout>;\n  private readonly subscriptions = new Map<string, SubscriptionContext>();\n  private readonly sentHistory = new Set<number>();\n  private readonly sentOrder: number[] = [];\n\n  constructor(ws: WebSocket, env: Env, userId: string) {\n    this.ws = ws;\n    this.env = env;\n    this.userId = userId;\n  }\n\n  start() {\n    this.ws.accept();\n    this.ws.addEventListener('message', (event) => {\n      this.handleIncomingData(event.data);\n    });\n    this.ws.addEventListener('close', () => {\n      this.cleanup();\n    });\n    this.ws.addEventListener('error', (event) => {\n      console.error('[notifications-ws] Socket error', event);\n      this.cleanup();\n    });\n  }\n\n  private handleIncomingData(data: unknown) {\n    const text = typeof data === 'string'\n      ? data\n      : data instanceof ArrayBuffer\n        ? new TextDecoder().decode(data)\n        : '';\n\n    if (!text) {\n      return;\n    }\n\n    this.buffer += text;\n\n    while (true) {\n      const terminatorIndex = this.buffer.indexOf('\\u0000');\n      if (terminatorIndex === -1) {\n        break;\n      }\n\n      const frameText = this.buffer.slice(0, terminatorIndex);\n      this.buffer = this.buffer.slice(terminatorIndex + 1);\n\n      const trimmed = frameText.trim();\n      if (trimmed === '') {\n        continue; // heartbeat\n      }\n\n      const frame = this.parseFrame(frameText);\n      if (frame) {\n        this.handleFrame(frame);\n      }\n    }\n  }\n\n  private parseFrame(raw: string): StompFrame | null {\n    const lines = raw.split('\\n');\n    if (!lines.length) return null;\n\n    const command = lines.shift()?.trim() ?? '';\n    if (!command) return null;\n\n    const headers: Record<string, string> = {};\n    let line: string | undefined;\n    while ((line = lines.shift()) !== undefined) {\n      if (line === '') break;\n      const separatorIndex = line.indexOf(':');\n      if (separatorIndex === -1) continue;\n      const key = line.slice(0, separatorIndex).trim();\n      const value = line.slice(separatorIndex + 1).trim();\n      headers[key] = value;\n    }\n\n    const body = lines.join('\\n');\n    return { command, headers, body };\n  }\n\n  private handleFrame(frame: StompFrame) {\n    const { command } = frame;\n    switch (command) {\n      case 'CONNECT':\n      case 'STOMP':\n        this.handleConnect(frame);\n        break;\n      case 'SUBSCRIBE':\n        this.handleSubscribe(frame);\n        break;\n      case 'UNSUBSCRIBE':\n        this.handleUnsubscribe(frame);\n        break;\n      case 'DISCONNECT':\n        this.handleDisconnect(frame);\n        break;\n      case 'SEND':\n        // Notifications are server-driven; acknowledge politely\n        this.ackReceipt(frame.headers['receipt']);\n        break;\n      default:\n        console.warn('[notifications-ws] Unsupported STOMP command', command);\n        this.sendError(`Unsupported command: ${command}`);\n    }\n  }\n\n  private handleConnect(frame: StompFrame) {\n    if (this.connected) {\n      return;\n    }\n\n    const heartbeatHeader = frame.headers['heart-beat'] ?? '0,0';\n    const [, clientHeartbeatRaw] = heartbeatHeader.split(',');\n    const clientHeartbeat = Number(clientHeartbeatRaw) || 0;\n    const serverHeartbeat = Math.max(clientHeartbeat, HEARTBEAT_INTERVAL_MS);\n\n    this.connected = true;\n    this.sendFrame('CONNECTED', {\n      version: '1.2',\n      'heart-beat': `0,${serverHeartbeat}`\n    });\n\n    this.scheduleHeartbeat(serverHeartbeat);\n  }\n\n  private scheduleHeartbeat(interval: number) {\n    if (interval <= 0) return;\n    const sendBeat = () => {\n      if (this.ws.readyState === WebSocket.OPEN) {\n        this.ws.send('\\n');\n        this.heartbeatTimer = setTimeout(sendBeat, interval);\n      }\n    };\n    this.heartbeatTimer = setTimeout(sendBeat, interval);\n  }\n\n  private handleSubscribe(frame: StompFrame) {\n    const id = frame.headers['id'] ?? crypto.randomUUID();\n    const destination = frame.headers['destination'];\n\n    if (!destination) {\n      this.sendError('SUBSCRIBE frame missing destination header');\n      return;\n    }\n\n    this.subscriptions.set(id, { destination });\n\n    if (destination.includes('notifications')) {\n      this.startNotificationPolling(id, destination);\n    }\n\n    this.ackReceipt(frame.headers['receipt']);\n  }\n\n  private handleUnsubscribe(frame: StompFrame) {\n    const id = frame.headers['id'];\n    if (!id) {\n      this.sendError('UNSUBSCRIBE frame missing id header');\n      return;\n    }\n    this.stopNotificationPolling(id);\n    this.subscriptions.delete(id);\n    this.ackReceipt(frame.headers['receipt']);\n  }\n\n  private handleDisconnect(frame: StompFrame) {\n    this.ackReceipt(frame.headers['receipt']);\n    this.cleanup();\n    this.ws.close(1000, 'Client disconnected');\n  }\n\n  private ackReceipt(receiptId?: string) {\n    if (!receiptId) return;\n    this.sendFrame('RECEIPT', { 'receipt-id': receiptId });\n  }\n\n  private sendError(message: string) {\n    this.sendFrame('ERROR', { message }, message);\n  }\n\n  private sendFrame(command: string, headers: Record<string, string> = {}, body = '') {\n    if (this.ws.readyState !== WebSocket.OPEN) {\n      return;\n    }\n\n    const headerLines = Object.entries(headers).map(([key, value]) => `${key}:${value}`);\n    const frame = [command, ...headerLines, '', body, '\\u0000'].join('\\n');\n    this.ws.send(frame);\n  }\n\n  private async startNotificationPolling(subscriptionId: string, destination: string) {\n    const poll = async () => {\n      try {\n        await this.sendNotificationSnapshot(subscriptionId, destination);\n      } catch (error) {\n        console.error('[notifications-ws] Failed to send notification snapshot', error);\n      }\n\n      const context = this.subscriptions.get(subscriptionId);\n      if (!context) return;\n      context.pollTimer = setTimeout(poll, NOTIFICATION_POLL_INTERVAL_MS);\n    };\n\n    await poll();\n  }\n\n  private stopNotificationPolling(subscriptionId: string) {\n    const context = this.subscriptions.get(subscriptionId);\n    if (context?.pollTimer) {\n      clearTimeout(context.pollTimer);\n    }\n  }\n\n  private async sendNotificationSnapshot(subscriptionId: string, destination: string) {\n    const result = await listNotifications(this.env, this.userId, {\n      page: 1,\n      size: 20,\n      unreadOnly: true\n    });\n\n    const freshNotifications = result.data.filter((item) => this.registerNotification(item.id));\n\n    for (const notification of freshNotifications) {\n      const payload = this.serializeNotification(notification, result.unreadCount);\n      this.sendFrame('MESSAGE', {\n        subscription: subscriptionId,\n        'message-id': crypto.randomUUID(),\n        destination,\n        'content-type': 'application/json'\n      }, payload);\n    }\n  }\n\n  private registerNotification(notificationId: number): boolean {\n    if (this.sentHistory.has(notificationId)) {\n      return false;\n    }\n\n    this.sentHistory.add(notificationId);\n    this.sentOrder.push(notificationId);\n\n    if (this.sentOrder.length > MAX_SENT_HISTORY) {\n      const expired = this.sentOrder.shift();\n      if (typeof expired === 'number') {\n        this.sentHistory.delete(expired);\n      }\n    }\n\n    return true;\n  }\n\n  private serializeNotification(notification: NotificationListItem, unreadCount: number): string {\n    const payload = {\n      ...notification,\n      unreadCount,\n      timestamp: new Date().toISOString()\n    };\n    return JSON.stringify(payload);\n  }\n\n  private cleanup() {\n    if (this.heartbeatTimer) {\n      clearTimeout(this.heartbeatTimer);\n      this.heartbeatTimer = undefined;\n    }\n\n    for (const [id, context] of this.subscriptions.entries()) {\n      if (context.pollTimer) {\n        clearTimeout(context.pollTimer);\n      }\n      this.subscriptions.delete(id);\n    }\n  }\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": ";;;;;;;;;;;;;AAuBO,SAAS,0BAA0B,MAAM;AAC/C,SAAO,IAAI,MAAM,WAAW,IAAI,0BAA0B;AAC3D;AAAA;AAEO,SAAS,eAAe,MAAM;AACpC,QAAM,KAAK,6BAAM;AAChB,UAAM,0CAA0B,IAAI;AAAA,EACrC,GAFW;AAGX,SAAO,OAAO,OAAO,IAAI,EAAE,WAAW,KAAK,CAAC;AAC7C;AAAA;AASO,SAAS,oBAAoB,MAAM;AACzC,SAAO,MAAM;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AACb,YAAM,IAAI,MAAM,WAAW,IAAI,0BAA0B;AAAA,IAC1D;AAAA,EACD;AACD;AAhDA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA;AAuBgB;AAIA;AAcA;AAAA;AAAA;;;ACzChB,IACM,aACA,iBACA,YAuBO,kBAyBA,iBAWA,oBAIA,2BAyBA,8BAaA,aA4FA,qBAmCA;AAvOb;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAAA;AACA,IAAM,cAAc,WAAW,aAAa,cAAc,KAAK,IAAI;AACnE,IAAM,kBAAkB,WAAW,aAAa,MAAM,WAAW,YAAY,IAAI,KAAK,WAAW,WAAW,IAAI,MAAM,KAAK,IAAI,IAAI;AACnI,IAAM,aAAa;AAAA,MAClB,MAAM;AAAA,MACN,WAAW;AAAA,MACX,WAAW;AAAA,MACX,UAAU;AAAA,MACV,WAAW;AAAA,MACX,SAAS;AAAA,MACT,mBAAmB;AAAA,MACnB,aAAa;AAAA,MACb,WAAW;AAAA,MACX,UAAU;AAAA,MACV,UAAU;AAAA,MACV,eAAe;AAAA,QACd,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,eAAe;AAAA,MAChB;AAAA,MACA,QAAQ;AAAA,MACR,SAAS;AACR,eAAO;AAAA,MACR;AAAA,IACD;AAEO,IAAM,mBAAN,MAAuB;AAAA,MA1B9B,OA0B8B;AAAA;AAAA;AAAA,MAC7B,YAAY;AAAA,MACZ;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,MACA;AAAA,MACA,YAAY,MAAM,SAAS;AAC1B,aAAK,OAAO;AACZ,aAAK,YAAY,SAAS,aAAa,gBAAgB;AACvD,aAAK,SAAS,SAAS;AAAA,MACxB;AAAA,MACA,IAAI,WAAW;AACd,eAAO,gBAAgB,IAAI,KAAK;AAAA,MACjC;AAAA,MACA,SAAS;AACR,eAAO;AAAA,UACN,MAAM,KAAK;AAAA,UACX,WAAW,KAAK;AAAA,UAChB,WAAW,KAAK;AAAA,UAChB,UAAU,KAAK;AAAA,UACf,QAAQ,KAAK;AAAA,QACd;AAAA,MACD;AAAA,IACD;AAEO,IAAM,kBAAkB,MAAMC,yBAAwB,iBAAiB;AAAA,MAnD9E,OAmD8E;AAAA;AAAA;AAAA,MAC7E,YAAY;AAAA,MACZ,cAAc;AAEb,cAAM,GAAG,SAAS;AAAA,MACnB;AAAA,MACA,IAAI,WAAW;AACd,eAAO;AAAA,MACR;AAAA,IACD;AAEO,IAAM,qBAAN,cAAiC,iBAAiB;AAAA,MA9DzD,OA8DyD;AAAA;AAAA;AAAA,MACxD,YAAY;AAAA,IACb;AAEO,IAAM,4BAAN,cAAwC,iBAAiB;AAAA,MAlEhE,OAkEgE;AAAA;AAAA;AAAA,MAC/D,YAAY;AAAA,MACZ,eAAe,CAAC;AAAA,MAChB,aAAa;AAAA,MACb,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,MAClB,aAAa;AAAA,MACb,gBAAgB;AAAA,MAChB,OAAO;AAAA,MACP,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,wBAAwB;AAAA,MACxB,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,cAAc;AAAA,MACd,iBAAiB;AAAA,IAClB;AAEO,IAAM,+BAAN,MAAmC;AAAA,MA3F1C,OA2F0C;AAAA;AAAA;AAAA,MACzC,YAAY;AAAA,MACZ,aAAa;AACZ,eAAO,CAAC;AAAA,MACT;AAAA,MACA,iBAAiB,OAAO,OAAO;AAC9B,eAAO,CAAC;AAAA,MACT;AAAA,MACA,iBAAiB,MAAM;AACtB,eAAO,CAAC;AAAA,MACT;AAAA,IACD;AAEO,IAAM,cAAN,MAAkB;AAAA,MAxGzB,OAwGyB;AAAA;AAAA;AAAA,MACxB,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,cAAc,oBAAI,IAAI;AAAA,MACtB,WAAW,CAAC;AAAA,MACZ,4BAA4B;AAAA,MAC5B,aAAa;AAAA,MACb,SAAS;AAAA,MACT,SAAS,KAAK,UAAU;AACvB,cAAM,0BAA0B,sBAAsB;AAAA,MACvD;AAAA,MACA,IAAI,aAAa;AAChB,eAAO;AAAA,MACR;AAAA,MACA,uBAAuB;AACtB,eAAO,CAAC;AAAA,MACT;AAAA,MACA,qBAAqB;AAIpB,eAAO,IAAI,0BAA0B,EAAE;AAAA,MACxC;AAAA,MACA,6BAA6B;AAAA,MAC7B,MAAM;AAEL,YAAI,KAAK,eAAe,aAAa;AACpC,iBAAO,gBAAgB;AAAA,QACxB;AACA,eAAO,KAAK,IAAI,IAAI,KAAK;AAAA,MAC1B;AAAA,MACA,WAAW,UAAU;AACpB,aAAK,WAAW,WAAW,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,SAAS,QAAQ,IAAI,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,MAAM;AAAA,MACjI;AAAA,MACA,cAAc,aAAa;AAC1B,aAAK,WAAW,cAAc,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,SAAS,WAAW,IAAI,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,SAAS;AAAA,MAC1I;AAAA,MACA,uBAAuB;AACtB,aAAK,WAAW,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,cAAc,EAAE,cAAc,YAAY;AAAA,MACvG;AAAA,MACA,aAAa;AACZ,eAAO,KAAK;AAAA,MACb;AAAA,MACA,iBAAiB,MAAM,MAAM;AAC5B,eAAO,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,SAAS,SAAS,CAAC,QAAQ,EAAE,cAAc,KAAK;AAAA,MACtF;AAAA,MACA,iBAAiB,MAAM;AACtB,eAAO,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,IAAI;AAAA,MACxD;AAAA,MACA,KAAK,MAAM,SAAS;AAEnB,cAAM,QAAQ,IAAI,gBAAgB,MAAM,OAAO;AAC/C,aAAK,SAAS,KAAK,KAAK;AACxB,eAAO;AAAA,MACR;AAAA,MACA,QAAQ,aAAa,uBAAuB,SAAS;AACpD,YAAI;AACJ,YAAI;AACJ,YAAI,OAAO,0BAA0B,UAAU;AAC9C,kBAAQ,KAAK,iBAAiB,uBAAuB,MAAM,EAAE,CAAC,GAAG;AACjE,gBAAM,KAAK,iBAAiB,SAAS,MAAM,EAAE,CAAC,GAAG;AAAA,QAClD,OAAO;AACN,kBAAQ,OAAO,WAAW,uBAAuB,KAAK,KAAK,KAAK,IAAI;AACpE,gBAAM,OAAO,WAAW,uBAAuB,GAAG,KAAK,KAAK,IAAI;AAAA,QACjE;AACA,cAAM,QAAQ,IAAI,mBAAmB,aAAa;AAAA,UACjD,WAAW;AAAA,UACX,QAAQ;AAAA,YACP;AAAA,YACA;AAAA,UACD;AAAA,QACD,CAAC;AACD,aAAK,SAAS,KAAK,KAAK;AACxB,eAAO;AAAA,MACR;AAAA,MACA,4BAA4B,SAAS;AACpC,aAAK,4BAA4B;AAAA,MAClC;AAAA,MACA,iBAAiB,MAAM,UAAU,SAAS;AACzC,cAAM,0BAA0B,8BAA8B;AAAA,MAC/D;AAAA,MACA,oBAAoB,MAAM,UAAU,SAAS;AAC5C,cAAM,0BAA0B,iCAAiC;AAAA,MAClE;AAAA,MACA,cAAc,OAAO;AACpB,cAAM,0BAA0B,2BAA2B;AAAA,MAC5D;AAAA,MACA,SAAS;AACR,eAAO;AAAA,MACR;AAAA,IACD;AAEO,IAAM,sBAAN,MAA0B;AAAA,MApMjC,OAoMiC;AAAA;AAAA;AAAA,MAChC,YAAY;AAAA,MACZ,OAAO,sBAAsB,CAAC;AAAA,MAC9B,YAAY;AAAA,MACZ,YAAY,UAAU;AACrB,aAAK,YAAY;AAAA,MAClB;AAAA,MACA,cAAc;AACb,eAAO,CAAC;AAAA,MACT;AAAA,MACA,aAAa;AACZ,cAAM,0BAA0B,gCAAgC;AAAA,MACjE;AAAA,MACA,QAAQ,SAAS;AAChB,cAAM,0BAA0B,6BAA6B;AAAA,MAC9D;AAAA,MACA,KAAK,IAAI;AACR,eAAO;AAAA,MACR;AAAA,MACA,gBAAgB,IAAI,YAAY,MAAM;AACrC,eAAO,GAAG,KAAK,SAAS,GAAG,IAAI;AAAA,MAChC;AAAA,MACA,UAAU;AACT,eAAO;AAAA,MACR;AAAA,MACA,iBAAiB;AAChB,eAAO;AAAA,MACR;AAAA,MACA,cAAc;AACb,eAAO;AAAA,MACR;AAAA,IACD;AAIO,IAAM,cAAc,WAAW,eAAe,sBAAsB,WAAW,cAAc,WAAW,cAAc,IAAI,YAAY;AAAA;AAAA;;;ACvO7I;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAEA;AAAA;AAAA;;;ACFA,IAAAC,oBAAA;AAAA;AAAA;AAUA,eAAW,cAAc;AACzB,eAAW,cAAc;AACzB,eAAW,mBAAmB;AAC9B,eAAW,kBAAkB;AAC7B,eAAW,qBAAqB;AAChC,eAAW,sBAAsB;AACjC,eAAW,+BAA+B;AAC1C,eAAW,4BAA4B;AAAA;AAAA;;;ACjBvC,IAAO;AAAP;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAAA,IAAO,eAAQ,OAAO,OAAO,MAAM;AAAA,IAAC,GAAG,EAAE,WAAW,KAAK,CAAC;AAAA;AAAA;;;ACA1D,SAAS,gBAAgB;AAAzB,IAGM,UAEO,eACA,SACA,SACAC,MACA,MACA,OACA,OACA,OACA,OACA,MAEA,YAGA,OACA,OACA,YACA,KACA,QACA,OACA,UACA,gBACA,SACA,YACA,MACA,SACA,SACA,WACA,SACA,QAKA,qBACA;AAxCb;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA;AACA;AACA,IAAM,WAAW,WAAW;AAErB,IAAM,gBAAgB;AACtB,IAAM,UAAU,IAAI,SAAS;AAC7B,IAAM,UAAU,IAAI,SAAS;AAC7B,IAAMD,OAAM,UAAU,OAAO;AAC7B,IAAM,OAAO,UAAU,QAAQA;AAC/B,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAASA;AACjC,IAAM,QAAQ,UAAU,SAASA;AACjC,IAAM,QAAQ,UAAU,SAASA;AACjC,IAAM,OAAO,UAAU,QAAQ;AAE/B,IAAM,aAAa,UAAU,cAA8B,+BAAe,oBAAoB;AAG9F,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,aAAa,UAAU,cAAc;AAC3C,IAAM,MAAM,UAAU,OAAO;AAC7B,IAAM,SAAS,UAAU,UAAU;AACnC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,WAAW,UAAU,YAAY;AACvC,IAAM,iBAAiB,UAAU,kBAAkB;AACnD,IAAM,UAAU,UAAU,WAAW;AACrC,IAAM,aAAa,UAAU,cAAc;AAC3C,IAAM,OAAO,UAAU,QAAQ;AAC/B,IAAM,UAAU,UAAU,WAAW;AACrC,IAAM,UAAU,UAAU,WAAW;AACrC,IAAM,YAAY,UAAU,aAAa;AACzC,IAAM,UAAU,UAAU,WAA2B,oCAAoB,iBAAiB;AAC1F,IAAM,SAAyB,oBAAI,IAAI;AAKvC,IAAM,sBAAsB;AAC5B,IAAM,sBAAsB;AAAA;AAAA;;;ACxCnC,IAkBM,gBAEJ,QACAE,QAEA,SACAC,QACAC,aAEAC,aACAC,QACAC,MACAC,SACAC,QACAC,QACAC,iBACAC,WACAC,OACAC,MACAC,UACAC,aACAC,QACAC,OACAC,UACAC,UACAC,YACAC,QACAC,OAWK;AAxDP,IAAAC,gBAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAAA;AAkBA,IAAM,iBAAiB,WAAW,SAAS;AACpC,KAAM;AAAA,MACX;AAAA,MACA,OAAAvB;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MACA,OAAAC;AAAA,MACA,YAAAC;AAAA,MAEA;AAAA;AAAA,QAAAC;AAAA;AAAA,MACA,OAAAC;AAAA,MACA,KAAAC;AAAA,MACA,QAAAC;AAAA,MACA,OAAAC;AAAA,MACA,OAAAC;AAAA,MACA,gBAAAC;AAAA,MACA,UAAAC;AAAA,MACA,MAAAC;AAAA,MACA,KAAAC;AAAA,MACA,SAAAC;AAAA,MACA,YAAAC;AAAA,MACA,OAAAC;AAAA,MACA,MAAAC;AAAA,MACA,SAAAC;AAAA,MACA,SAAAC;AAAA,MACA,WAAAC;AAAA,MACA,OAAAC;AAAA,MACA,MAAAC;AAAA,QACE;AACJ,WAAO,OAAO,gBAAgB;AAAA,MAC5B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,IAAO,kBAAQ;AAAA;AAAA;;;ACxDf;AAAA;AAAA,IAAAG;AACA,eAAW,UAAU;AAAA;AAAA;;;ACDrB,IACa;AADb;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACO,IAAM,SAAyB,uBAAO,OAAO,gCAASC,QAAO,WAAW;AAC9E,YAAM,MAAM,KAAK,IAAI;AAErB,YAAM,UAAU,KAAK,MAAM,MAAM,GAAG;AAEpC,YAAM,QAAQ,MAAM,MAAM;AAC1B,UAAI,WAAW;AACd,YAAI,cAAc,UAAU,UAAU,CAAC;AACvC,YAAI,YAAY,QAAQ,UAAU,CAAC;AACnC,YAAI,YAAY,GAAG;AAClB,wBAAc,cAAc;AAC5B,sBAAY,MAAM;AAAA,QACnB;AACA,eAAO,CAAC,aAAa,SAAS;AAAA,MAC/B;AACA,aAAO,CAAC,SAAS,KAAK;AAAA,IACvB,GAhBoD,WAgBjD,EAAE,QAAQ,gCAAS,SAAS;AAE9B,aAAO,OAAO,KAAK,IAAI,IAAI,GAAG;AAAA,IAC/B,GAHa,UAGX,CAAC;AAAA;AAAA;;;ACpBH,IAAa;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAAO,IAAM,aAAN,MAAiB;AAAA,MAAxB,OAAwB;AAAA;AAAA;AAAA,MACvB;AAAA,MACA,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,YAAY,IAAI;AACf,aAAK,KAAK;AAAA,MACX;AAAA,MACA,WAAW,MAAM;AAChB,aAAK,QAAQ;AACb,eAAO;AAAA,MACR;AAAA,IACD;AAAA;AAAA;;;ACXA,IAAa;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAAO,IAAM,cAAN,MAAkB;AAAA,MAAzB,OAAyB;AAAA;AAAA;AAAA,MACxB;AAAA,MACA,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,YAAY,IAAI;AACf,aAAK,KAAK;AAAA,MACX;AAAA,MACA,UAAUC,MAAK,UAAU;AACxB,oBAAY,SAAS;AACrB,eAAO;AAAA,MACR;AAAA,MACA,gBAAgB,UAAU;AACzB,oBAAY,SAAS;AACrB,eAAO;AAAA,MACR;AAAA,MACA,SAAS,GAAG,GAAG,UAAU;AACxB,oBAAY,OAAO,aAAa,cAAc,SAAS;AACvD,eAAO;AAAA,MACR;AAAA,MACA,WAAW,IAAI,IAAI,UAAU;AAC5B,oBAAY,SAAS;AACrB,eAAO;AAAA,MACR;AAAA,MACA,cAAcC,MAAK;AAClB,eAAO;AAAA,MACR;AAAA,MACA,UAAUC,QAAOD,MAAK;AACrB,eAAO;AAAA,MACR;AAAA,MACA,gBAAgB;AACf,eAAO,CAAC,KAAK,SAAS,KAAK,IAAI;AAAA,MAChC;AAAA,MACA,MAAM,KAAK,UAAU,IAAI;AACxB,YAAI,eAAe,YAAY;AAC9B,gBAAM,IAAI,YAAY,EAAE,OAAO,GAAG;AAAA,QACnC;AACA,YAAI;AACH,kBAAQ,IAAI,GAAG;AAAA,QAChB,QAAQ;AAAA,QAAC;AACT,cAAM,OAAO,OAAO,cAAc,GAAG;AACrC,eAAO;AAAA,MACR;AAAA,IACD;AAAA;AAAA;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAE;AAEA;AACA;AAAA;AAAA;;;ACHA,IACa;AADb;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACO,IAAM,eAAe;AAAA;AAAA;;;ACD5B,SAAS,oBAAoB;AAA7B,IAKa;AALb;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA;AACA;AAEA;AACO,IAAM,UAAN,MAAM,iBAAgB,aAAa;AAAA,MAL1C,OAK0C;AAAA;AAAA;AAAA,MACzC;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAY,MAAM;AACjB,cAAM;AACN,aAAK,MAAM,KAAK;AAChB,aAAK,SAAS,KAAK;AACnB,aAAK,WAAW,KAAK;AACrB,mBAAW,QAAQ,CAAC,GAAG,OAAO,oBAAoB,SAAQ,SAAS,GAAG,GAAG,OAAO,oBAAoB,aAAa,SAAS,CAAC,GAAG;AAC7H,gBAAM,QAAQ,KAAK,IAAI;AACvB,cAAI,OAAO,UAAU,YAAY;AAChC,iBAAK,IAAI,IAAI,MAAM,KAAK,IAAI;AAAA,UAC7B;AAAA,QACD;AAAA,MACD;AAAA;AAAA,MAEA,YAAY,SAAS,MAAM,MAAM;AAChC,gBAAQ,KAAK,GAAG,OAAO,IAAI,IAAI,OAAO,EAAE,GAAG,OAAO,GAAG,IAAI,OAAO,EAAE,GAAG,OAAO,EAAE;AAAA,MAC/E;AAAA,MACA,QAAQ,MAAM;AAEb,eAAO,MAAM,KAAK,GAAG,IAAI;AAAA,MAC1B;AAAA,MACA,UAAU,WAAW;AACpB,eAAO,MAAM,UAAU,SAAS;AAAA,MACjC;AAAA;AAAA,MAEA;AAAA,MACA;AAAA,MACA;AAAA,MACA,IAAI,QAAQ;AACX,eAAO,KAAK,WAAW,IAAI,WAAW,CAAC;AAAA,MACxC;AAAA,MACA,IAAI,SAAS;AACZ,eAAO,KAAK,YAAY,IAAI,YAAY,CAAC;AAAA,MAC1C;AAAA,MACA,IAAI,SAAS;AACZ,eAAO,KAAK,YAAY,IAAI,YAAY,CAAC;AAAA,MAC1C;AAAA;AAAA,MAEA,OAAO;AAAA,MACP,MAAMC,MAAK;AACV,aAAK,OAAOA;AAAA,MACb;AAAA,MACA,MAAM;AACL,eAAO,KAAK;AAAA,MACb;AAAA;AAAA,MAEA,OAAO;AAAA,MACP,WAAW;AAAA,MACX,OAAO,CAAC;AAAA,MACR,QAAQ;AAAA,MACR,WAAW,CAAC;AAAA,MACZ,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,IAAI,UAAU;AACb,eAAO,IAAI,YAAY;AAAA,MACxB;AAAA,MACA,IAAI,WAAW;AACd,eAAO,EAAE,MAAM,aAAa;AAAA,MAC7B;AAAA,MACA,IAAI,8BAA8B;AACjC,eAAO,oBAAI,IAAI;AAAA,MAChB;AAAA,MACA,IAAI,oBAAoB;AACvB,eAAO;AAAA,MACR;AAAA,MACA,IAAI,YAAY;AACf,eAAO;AAAA,MACR;AAAA,MACA,IAAI,mBAAmB;AACtB,eAAO;AAAA,MACR;AAAA,MACA,IAAI,mBAAmB;AACtB,eAAO;AAAA,MACR;AAAA,MACA,IAAI,WAAW;AACd,eAAO,CAAC;AAAA,MACT;AAAA,MACA,IAAI,UAAU;AACb,eAAO,CAAC;AAAA,MACT;AAAA,MACA,IAAI,YAAY;AACf,eAAO;AAAA,MACR;AAAA,MACA,IAAI,SAAS;AACZ,eAAO,CAAC;AAAA,MACT;AAAA,MACA,IAAI,iBAAiB;AACpB,eAAO,CAAC;AAAA,MACT;AAAA,MACA,oBAAoB;AACnB,eAAO;AAAA,MACR;AAAA,MACA,kBAAkB;AACjB,eAAO;AAAA,MACR;AAAA,MACA,SAAS;AACR,eAAO;AAAA,MACR;AAAA,MACA,gBAAgB;AACf,eAAO,CAAC;AAAA,MACT;AAAA;AAAA,MAEA,MAAM;AAAA,MAEN;AAAA,MACA,QAAQ;AAAA,MAER;AAAA;AAAA,MAEA,QAAQ;AACP,cAAM,0BAA0B,eAAe;AAAA,MAChD;AAAA,MACA,mBAAmB;AAClB,eAAO;AAAA,MACR;AAAA,MACA,yBAAyB;AACxB,cAAM,0BAA0B,gCAAgC;AAAA,MACjE;AAAA,MACA,OAAO;AACN,cAAM,0BAA0B,cAAc;AAAA,MAC/C;AAAA,MACA,aAAa;AACZ,cAAM,0BAA0B,oBAAoB;AAAA,MACrD;AAAA,MACA,OAAO;AACN,cAAM,0BAA0B,cAAc;AAAA,MAC/C;AAAA,MACA,QAAQ;AACP,cAAM,0BAA0B,eAAe;AAAA,MAChD;AAAA,MACA,SAAS;AACR,cAAM,0BAA0B,gBAAgB;AAAA,MACjD;AAAA,MACA,uBAAuB;AACtB,cAAM,0BAA0B,8BAA8B;AAAA,MAC/D;AAAA,MACA,cAAc;AACb,cAAM,0BAA0B,qBAAqB;AAAA,MACtD;AAAA,MACA,aAAa;AACZ,cAAM,0BAA0B,oBAAoB;AAAA,MACrD;AAAA,MACA,WAAW;AACV,cAAM,0BAA0B,kBAAkB;AAAA,MACnD;AAAA,MACA,sCAAsC;AACrC,cAAM,0BAA0B,6CAA6C;AAAA,MAC9E;AAAA,MACA,sCAAsC;AACrC,cAAM,0BAA0B,6CAA6C;AAAA,MAC9E;AAAA,MACA,aAAa;AACZ,cAAM,0BAA0B,oBAAoB;AAAA,MACrD;AAAA,MACA,YAAY;AACX,cAAM,0BAA0B,mBAAmB;AAAA,MACpD;AAAA,MACA,SAAS;AACR,cAAM,0BAA0B,gBAAgB;AAAA,MACjD;AAAA,MACA,UAAU;AACT,cAAM,0BAA0B,iBAAiB;AAAA,MAClD;AAAA;AAAA,MAEA,aAAa,EAAE,KAAqB,+BAAe,wBAAwB,EAAE;AAAA,MAC7E,SAAS;AAAA,QACR,WAAW;AAAA,QACX,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,oBAAoB;AAAA,QACpB,gBAAgB;AAAA,QAChB,2BAA2B;AAAA,QAC3B,WAA2B,+BAAe,0BAA0B;AAAA,QACpE,aAA6B,+BAAe,4BAA4B;AAAA,MACzE;AAAA,MACA,eAAe;AAAA,QACd,UAA0B,+BAAe,+BAA+B;AAAA,QACxE,YAA4B,+BAAe,iCAAiC;AAAA,QAC5E,oBAAoC,+BAAe,yCAAyC;AAAA,MAC7F;AAAA,MACA,cAAc,OAAO,OAAO,OAAO;AAAA,QAClC,cAAc;AAAA,QACd,KAAK;AAAA,QACL,UAAU;AAAA,QACV,WAAW;AAAA,QACX,UAAU;AAAA,MACX,IAAI,EAAE,KAAK,6BAAM,GAAN,OAAQ,CAAC;AAAA;AAAA,MAEpB,aAAa;AAAA,MACb,SAAS;AAAA;AAAA,MAET,OAAO;AAAA,MACP,WAAW;AAAA,MACX,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,UAAU;AAAA,MACV,UAAU;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,SAAS;AAAA;AAAA,MAET,UAAU;AAAA,MACV,eAAe;AAAA,MACf,WAAW;AAAA,MACX,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,kBAAkB;AAAA,MAClB,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,MACrB,QAAQ;AAAA,MACR,mBAAmB;AAAA,MACnB,YAAY;AAAA,MACZ,6BAA6B;AAAA,MAC7B,4BAA4B;AAAA,MAC5B,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,iBAAiB;AAAA,IAClB;AAAA;AAAA;;;AC7OA,IAEM,eACO,kBACP,gBACA,oBACA,cAOS,MAAM,UAAU,UAG7B,KAEAC,SAEA,UAGA,UACA,aACA,SACA,cACA,cACA,eACA,iBACA,OACAC,SACA,YACA,YAIA,WAEA,eAEA,UAEA,iBAEA,mBAEA,oBAEA,OAEA,gBAEA,kBAEA,WAEA,4BAEA,2BAEA,eACA,OACA,aACA,6BACA,MACA,MACA,OACA,iBAEA,SACA,SACA,OACA,QACA,WACA,mBACA,UACA,KACA,WACA,QAEA,QACA,MACA,aACA,YACA,UACA,UACA,UACA,cACA,wBACA,SACA,SACA,QACA,WACA,iBACA,QACA,qCAEA,YACA,MACA,eACA,WACA,aACA,aAEA,gBACA,KACA,IACA,MAEA,WACA,YACA,KACA,MACA,iBACA,qBACA,cAEA,YACA,KACA,SACA,oBACA,gBACA,QACA,eACA,MACA,SACA,SACA,QACA,WACA,iBACA,sBACA,QACA,qCACA,mBACA,QACA,OACA,QACA,kBACA,OACA,kBACA,OACA,OACA,QACA,SACA,UAEI,UA8GC;AAjQP,IAAAC,gBAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAAA;AACA;AACA,IAAM,gBAAgB,WAAW,SAAS;AACnC,IAAM,mBAAmB,cAAc;AAC9C,IAAM,iBAAiB,iBAAiB,cAAc;AACtD,IAAM,qBAAqB,WAAW,WAAW,mBAAmB;AACpE,IAAM,eAAe,IAAI,QAAa;AAAA,MACpC,KAAK,cAAc;AAAA;AAAA,MAEnB,QAAQ,qBAAqB,eAAe,SAAS;AAAA;AAAA,MAErD,UAAU,eAAe;AAAA,IAC3B,CAAC;AACM,KAAM,EAAE,MAAM,UAAU,aAAa;AACrC,KAAM;AAAA,MAEX;AAAA;AAAA;AAAA;AAAA,MAEA;AAAA;AAAA,QAAAH;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,QACE;AACG,KAAM;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAAC;AAAA,MACA;AAAA,MACA;AAAA,QACE;AACG,KAAM;AAAA,MAEX;AAAA;AAAA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE,qBAAqB,iBAAiB;AAC1C,IAAM,WAAW;AAAA,MACfkBAAQ;AAAA;AAAA;;;ACjQf;AAAA;AAAA,IAAAG;AACA,eAAW,UAAU;AAAA;AAAA;;;ACDrB;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAAA;AAAA;;;ACAA;AAAA;AAGA;AAAA;AAAA;;;ACHA,IACI;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA,IAAI,mBAAmB,OAAO;AAAA;AAAA;;;ACU9B,eAAe,cAAc,SAAS,SAAS;AAC7C,QAAM,WAAW,MAAM,QAAQ,SAAS;AACxC,MAAI,UAAU;AACZ,WAAO,0BAA0B,UAAU,OAAO;AAAA,EACpD;AACA,SAAO,CAAC;AACV;AACA,SAAS,0BAA0B,UAAU,SAAS;AACpD,QAAM,OAAuB,uBAAO,OAAO,IAAI;AAC/C,WAAS,QAAQ,CAAC,OAAO,QAAQ;AAC/B,UAAM,uBAAuB,QAAQ,OAAO,IAAI,SAAS,IAAI;AAC7D,QAAI,CAAC,sBAAsB;AACzB,WAAK,GAAG,IAAI;AAAA,IACd,OAAO;AACL,6BAAuB,MAAM,KAAK,KAAK;AAAA,IACzC;AAAA,EACF,CAAC;AACD,MAAI,QAAQ,KAAK;AACf,WAAO,QAAQ,IAAI,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AAC7C,YAAM,uBAAuB,IAAI,SAAS,GAAG;AAC7C,UAAI,sBAAsB;AACxB,kCAA0B,MAAM,KAAK,KAAK;AAC1C,eAAO,KAAK,GAAG;AAAA,MACjB;AAAA,IACF,CAAC;AAAA,EACH;AACA,SAAO;AACT;AAtCA,IAEI,WAqCA,wBAgBA;AAvDJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA;AACA,IAAI,YAAY,8BAAO,SAAS,UAA0B,uBAAO,OAAO,IAAI,MAAM;AAChF,YAAM,EAAE,MAAM,OAAO,MAAM,MAAM,IAAI;AACrC,YAAM,UAAU,mBAAmB,cAAc,QAAQ,IAAI,UAAU,QAAQ;AAC/E,YAAM,cAAc,QAAQ,IAAI,cAAc;AAC9C,UAAI,aAAa,WAAW,qBAAqB,KAAK,aAAa,WAAW,mCAAmC,GAAG;AAClH,eAAO,cAAc,SAAS,EAAE,KAAK,IAAI,CAAC;AAAA,MAC5C;AACA,aAAO,CAAC;AAAA,IACV,GARgB;AASD;AAON;AAqBT,IAAI,yBAAyB,wBAAC,MAAM,KAAK,UAAU;AACjD,UAAI,KAAK,GAAG,MAAM,QAAQ;AACxB,YAAI,MAAM,QAAQ,KAAK,GAAG,CAAC,GAAG;AAC5B;AACA,eAAK,GAAG,EAAE,KAAK,KAAK;AAAA,QACtB,OAAO;AACL,eAAK,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,KAAK;AAAA,QAC/B;AAAA,MACF,OAAO;AACL,YAAI,CAAC,IAAI,SAAS,IAAI,GAAG;AACvB,eAAK,GAAG,IAAI;AAAA,QACd,OAAO;AACL,eAAK,GAAG,IAAI,CAAC,KAAK;AAAA,QACpB;AAAA,MACF;AAAA,IACF,GAf6B;AAgB7B,IAAI,4BAA4B,wBAAC,MAAM,KAAK,UAAU;AACpD,UAAI,aAAa;AACjB,YAAM,OAAO,IAAI,MAAM,GAAG;AAC1B,WAAK,QAAQ,CAAC,MAAM,UAAU;AAC5B,YAAI,UAAU,KAAK,SAAS,GAAG;AAC7B,qBAAW,IAAI,IAAI;AAAA,QACrB,OAAO;AACL,cAAI,CAAC,WAAW,IAAI,KAAK,OAAO,WAAW,IAAI,MAAM,YAAY,MAAM,QAAQ,WAAW,IAAI,CAAC,KAAK,WAAW,IAAI,aAAa,MAAM;AACpI,uBAAW,IAAI,IAAoB,uBAAO,OAAO,IAAI;AAAA,UACvD;AACA,uBAAa,WAAW,IAAI;AAAA,QAC9B;AAAA,MACF,CAAC;AAAA,IACH,GAbgC;AAAA;AAAA;;;ACvDhC,IACI,WAOA,kBAKA,uBASA,mBAYA,cACA,YAkBA,WAaA,cACA,SAuBA,iBAIA,WAMA,wBA2BA,YASA,gBAgEA,eACA,gBAGA;AA5MJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA,IAAI,YAAY,wBAAC,SAAS;AACxB,YAAM,QAAQ,KAAK,MAAM,GAAG;AAC5B,UAAI,MAAM,CAAC,MAAM,IAAI;AACnB,cAAM,MAAM;AAAA,MACd;AACA,aAAO;AAAA,IACT,GANgB;AAOhB,IAAI,mBAAmB,wBAAC,cAAc;AACpC,YAAM,EAAE,QAAQ,KAAK,IAAI,sBAAsB,SAAS;AACxD,YAAM,QAAQ,UAAU,IAAI;AAC5B,aAAO,kBAAkB,OAAO,MAAM;AAAA,IACxC,GAJuB;AAKvB,IAAI,wBAAwB,wBAAC,SAAS;AACpC,YAAM,SAAS,CAAC;AAChB,aAAO,KAAK,QAAQ,cAAc,CAAC,OAAO,UAAU;AAClD,cAAM,OAAO,IAAI,KAAK;AACtB,eAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,eAAO;AAAA,MACT,CAAC;AACD,aAAO,EAAE,QAAQ,KAAK;AAAA,IACxB,GAR4B;AAS5B,IAAI,oBAAoB,wBAAC,OAAO,WAAW;AACzC,eAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,cAAM,CAAC,IAAI,IAAI,OAAO,CAAC;AACvB,iBAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,cAAI,MAAM,CAAC,EAAE,SAAS,IAAI,GAAG;AAC3B,kBAAM,CAAC,IAAI,MAAM,CAAC,EAAE,QAAQ,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC;AAC9C;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,IACT,GAXwB;AAYxB,IAAI,eAAe,CAAC;AACpB,IAAI,aAAa,wBAAC,OAAO,SAAS;AAChC,UAAI,UAAU,KAAK;AACjB,eAAO;AAAA,MACT;AACA,YAAM,QAAQ,MAAM,MAAM,6BAA6B;AACvD,UAAI,OAAO;AACT,cAAM,WAAW,GAAG,KAAK,IAAI,IAAI;AACjC,YAAI,CAAC,aAAa,QAAQ,GAAG;AAC3B,cAAI,MAAM,CAAC,GAAG;AACZ,yBAAa,QAAQ,IAAI,QAAQ,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,MAAM,CAAC,UAAU,MAAM,CAAC,GAAG,IAAI,OAAO,IAAI,MAAM,CAAC,CAAC,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,MAAM,CAAC,GAAG,IAAI,OAAO,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC;AAAA,UACpL,OAAO;AACL,yBAAa,QAAQ,IAAI,CAAC,OAAO,MAAM,CAAC,GAAG,IAAI;AAAA,UACjD;AAAA,QACF;AACA,eAAO,aAAa,QAAQ;AAAA,MAC9B;AACA,aAAO;AAAA,IACT,GAjBiB;AAkBjB,IAAI,YAAY,wBAAC,KAAK,YAAY;AAChC,UAAI;AACF,eAAO,QAAQ,GAAG;AAAA,MACpB,QAAQ;AACN,eAAO,IAAI,QAAQ,yBAAyB,CAAC,UAAU;AACrD,cAAI;AACF,mBAAO,QAAQ,KAAK;AAAA,UACtB,QAAQ;AACN,mBAAO;AAAA,UACT;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF,GAZgB;AAahB,IAAI,eAAe,wBAAC,QAAQ,UAAU,KAAK,SAAS,GAAjC;AACnB,IAAI,UAAU,wBAAC,YAAY;AACzB,YAAMC,OAAM,QAAQ;AACpB,YAAM,QAAQA,KAAI;AAAA,QAChB;AAAA,QACAA,KAAI,WAAW,CAAC,MAAM,KAAK,KAAK;AAAA,MAClC;AACA,UAAI,IAAI;AACR,aAAO,IAAIA,KAAI,QAAQ,KAAK;AAC1B,cAAM,WAAWA,KAAI,WAAW,CAAC;AACjC,YAAI,aAAa,IAAI;AACnB,gBAAM,aAAaA,KAAI,QAAQ,KAAK,CAAC;AACrC,gBAAM,OAAOA,KAAI,MAAM,OAAO,eAAe,KAAK,SAAS,UAAU;AACrE,iBAAO,aAAa,KAAK,SAAS,KAAK,IAAI,KAAK,QAAQ,QAAQ,OAAO,IAAI,IAAI;AAAA,QACjF,WAAW,aAAa,IAAI;AAC1B;AAAA,QACF;AAAA,MACF;AACA,aAAOA,KAAI,MAAM,OAAO,CAAC;AAAA,IAC3B,GAlBc;AAuBd,IAAI,kBAAkB,wBAAC,YAAY;AACjC,YAAM,SAAS,QAAQ,OAAO;AAC9B,aAAO,OAAO,SAAS,KAAK,OAAO,GAAG,EAAE,MAAM,MAAM,OAAO,MAAM,GAAG,EAAE,IAAI;AAAA,IAC5E,GAHsB;AAItB,IAAI,YAAY,wBAAC,MAAM,QAAQ,SAAS;AACtC,UAAI,KAAK,QAAQ;AACf,cAAM,UAAU,KAAK,GAAG,IAAI;AAAA,MAC9B;AACA,aAAO,GAAG,OAAO,CAAC,MAAM,MAAM,KAAK,GAAG,GAAG,IAAI,GAAG,QAAQ,MAAM,KAAK,GAAG,MAAM,GAAG,EAAE,MAAM,MAAM,KAAK,GAAG,GAAG,MAAM,CAAC,MAAM,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG,EAAE;AAAA,IACjJ,GALgB;AAMhB,IAAI,yBAAyB,wBAAC,SAAS;AACrC,UAAI,KAAK,WAAW,KAAK,SAAS,CAAC,MAAM,MAAM,CAAC,KAAK,SAAS,GAAG,GAAG;AAClE,eAAO;AAAA,MACT;AACA,YAAM,WAAW,KAAK,MAAM,GAAG;AAC/B,YAAM,UAAU,CAAC;AACjB,UAAI,WAAW;AACf,eAAS,QAAQ,CAAC,YAAY;AAC5B,YAAI,YAAY,MAAM,CAAC,KAAK,KAAK,OAAO,GAAG;AACzC,sBAAY,MAAM;AAAA,QACpB,WAAW,KAAK,KAAK,OAAO,GAAG;AAC7B,cAAI,KAAK,KAAK,OAAO,GAAG;AACtB,gBAAI,QAAQ,WAAW,KAAK,aAAa,IAAI;AAC3C,sBAAQ,KAAK,GAAG;AAAA,YAClB,OAAO;AACL,sBAAQ,KAAK,QAAQ;AAAA,YACvB;AACA,kBAAM,kBAAkB,QAAQ,QAAQ,KAAK,EAAE;AAC/C,wBAAY,MAAM;AAClB,oBAAQ,KAAK,QAAQ;AAAA,UACvB,OAAO;AACL,wBAAY,MAAM;AAAA,UACpB;AAAA,QACF;AAAA,MACF,CAAC;AACD,aAAO,QAAQ,OAAO,CAAC,GAAG,GAAG,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC;AAAA,IACvD,GA1B6B;AA2B7B,IAAI,aAAa,wBAAC,UAAU;AAC1B,UAAI,CAAC,OAAO,KAAK,KAAK,GAAG;AACvB,eAAO;AAAA,MACT;AACA,UAAI,MAAM,QAAQ,GAAG,MAAM,IAAI;AAC7B,gBAAQ,MAAM,QAAQ,OAAO,GAAG;AAAA,MAClC;AACA,aAAO,MAAM,QAAQ,GAAG,MAAM,KAAK,UAAU,OAAO,mBAAmB,IAAI;AAAA,IAC7E,GARiB;AASjB,IAAI,iBAAiB,wBAACA,MAAK,KAAK,aAAa;AAC3C,UAAI;AACJ,UAAI,CAAC,YAAY,OAAO,CAAC,OAAO,KAAK,GAAG,GAAG;AACzC,YAAI,YAAYA,KAAI,QAAQ,IAAI,GAAG,IAAI,CAAC;AACxC,YAAI,cAAc,IAAI;AACpB,sBAAYA,KAAI,QAAQ,IAAI,GAAG,IAAI,CAAC;AAAA,QACtC;AACA,eAAO,cAAc,IAAI;AACvB,gBAAM,kBAAkBA,KAAI,WAAW,YAAY,IAAI,SAAS,CAAC;AACjE,cAAI,oBAAoB,IAAI;AAC1B,kBAAM,aAAa,YAAY,IAAI,SAAS;AAC5C,kBAAM,WAAWA,KAAI,QAAQ,KAAK,UAAU;AAC5C,mBAAO,WAAWA,KAAI,MAAM,YAAY,aAAa,KAAK,SAAS,QAAQ,CAAC;AAAA,UAC9E,WAAW,mBAAmB,MAAM,MAAM,eAAe,GAAG;AAC1D,mBAAO;AAAA,UACT;AACA,sBAAYA,KAAI,QAAQ,IAAI,GAAG,IAAI,YAAY,CAAC;AAAA,QAClD;AACA,kBAAU,OAAO,KAAKA,IAAG;AACzB,YAAI,CAAC,SAAS;AACZ,iBAAO;AAAA,QACT;AAAA,MACF;AACA,YAAM,UAAU,CAAC;AACjB,kBAAY,OAAO,KAAKA,IAAG;AAC3B,UAAI,WAAWA,KAAI,QAAQ,KAAK,CAAC;AACjC,aAAO,aAAa,IAAI;AACtB,cAAM,eAAeA,KAAI,QAAQ,KAAK,WAAW,CAAC;AAClD,YAAI,aAAaA,KAAI,QAAQ,KAAK,QAAQ;AAC1C,YAAI,aAAa,gBAAgB,iBAAiB,IAAI;AACpD,uBAAa;AAAA,QACf;AACA,YAAI,OAAOA,KAAI;AAAA,UACb,WAAW;AAAA,UACX,eAAe,KAAK,iBAAiB,KAAK,SAAS,eAAe;AAAA,QACpE;AACA,YAAI,SAAS;AACX,iBAAO,WAAW,IAAI;AAAA,QACxB;AACA,mBAAW;AACX,YAAI,SAAS,IAAI;AACf;AAAA,QACF;AACA,YAAI;AACJ,YAAI,eAAe,IAAI;AACrB,kBAAQ;AAAA,QACV,OAAO;AACL,kBAAQA,KAAI,MAAM,aAAa,GAAG,iBAAiB,KAAK,SAAS,YAAY;AAC7E,cAAI,SAAS;AACX,oBAAQ,WAAW,KAAK;AAAA,UAC1B;AAAA,QACF;AACA,YAAI,UAAU;AACZ,cAAI,EAAE,QAAQ,IAAI,KAAK,MAAM,QAAQ,QAAQ,IAAI,CAAC,IAAI;AACpD,oBAAQ,IAAI,IAAI,CAAC;AAAA,UACnB;AACA;AACA,kBAAQ,IAAI,EAAE,KAAK,KAAK;AAAA,QAC1B,OAAO;AACL,kBAAQ,IAAI,MAAM;AAAA,QACpB;AAAA,MACF;AACA,aAAO,MAAM,QAAQ,GAAG,IAAI;AAAA,IAC9B,GA/DqB;AAgErB,IAAI,gBAAgB;AACpB,IAAI,iBAAiB,wBAACA,MAAK,QAAQ;AACjC,aAAO,eAAeA,MAAK,KAAK,IAAI;AAAA,IACtC,GAFqB;AAGrB,IAAI,sBAAsB;AAAA;AAAA;;;AC5M1B,IAII,uBACA;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA;AACA;AACA;AACA,IAAI,wBAAwB,wBAAC,QAAQ,UAAU,KAAK,mBAAmB,GAA3C;AAC5B,IAAI,cAAc,MAAM;AAAA,MALxB,OAKwB;AAAA;AAAA;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,MACA,aAAa;AAAA,MACb;AAAA,MACA,YAAY,CAAC;AAAA,MACb,YAAY,SAAS,OAAO,KAAK,cAAc,CAAC,CAAC,CAAC,GAAG;AACnD,aAAK,MAAM;AACX,aAAK,OAAO;AACZ,aAAK,eAAe;AACpB,aAAK,iBAAiB,CAAC;AAAA,MACzB;AAAA,MACA,MAAM,KAAK;AACT,eAAO,MAAM,KAAK,iBAAiB,GAAG,IAAI,KAAK,qBAAqB;AAAA,MACtE;AAAA,MACA,iBAAiB,KAAK;AACpB,cAAM,WAAW,KAAK,aAAa,CAAC,EAAE,KAAK,UAAU,EAAE,CAAC,EAAE,GAAG;AAC7D,cAAM,QAAQ,KAAK,eAAe,QAAQ;AAC1C,eAAO,QAAQ,KAAK,KAAK,KAAK,IAAI,sBAAsB,KAAK,IAAI,QAAQ;AAAA,MAC3E;AAAA,MACA,uBAAuB;AACrB,cAAM,UAAU,CAAC;AACjB,cAAM,OAAO,OAAO,KAAK,KAAK,aAAa,CAAC,EAAE,KAAK,UAAU,EAAE,CAAC,CAAC;AACjE,mBAAW,OAAO,MAAM;AACtB,gBAAM,QAAQ,KAAK,eAAe,KAAK,aAAa,CAAC,EAAE,KAAK,UAAU,EAAE,CAAC,EAAE,GAAG,CAAC;AAC/E,cAAI,SAAS,OAAO,UAAU,UAAU;AACtC,oBAAQ,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,sBAAsB,KAAK,IAAI;AAAA,UACnE;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MACA,eAAe,UAAU;AACvB,eAAO,KAAK,aAAa,CAAC,IAAI,KAAK,aAAa,CAAC,EAAE,QAAQ,IAAI;AAAA,MACjE;AAAA,MACA,MAAM,KAAK;AACT,eAAO,cAAc,KAAK,KAAK,GAAG;AAAA,MACpC;AAAA,MACA,QAAQ,KAAK;AACX,eAAO,eAAe,KAAK,KAAK,GAAG;AAAA,MACrC;AAAA,MACA,OAAO,MAAM;AACX,YAAI,MAAM;AACR,iBAAO,KAAK,IAAI,QAAQ,IAAI,IAAI,KAAK;AAAA,QACvC;AACA,cAAM,aAAa,CAAC;AACpB,aAAK,IAAI,QAAQ,QAAQ,CAAC,OAAO,QAAQ;AACvC,qBAAW,GAAG,IAAI;AAAA,QACpB,CAAC;AACD,eAAO;AAAA,MACT;AAAA,MACA,MAAM,UAAU,SAAS;AACvB,eAAO,KAAK,UAAU,eAAe,MAAM,UAAU,MAAM,OAAO;AAAA,MACpE;AAAA,MACA,cAAc,wBAAC,QAAQ;AACrB,cAAM,EAAE,WAAW,KAAAC,KAAI,IAAI;AAC3B,cAAM,aAAa,UAAU,GAAG;AAChC,YAAI,YAAY;AACd,iBAAO;AAAA,QACT;AACA,cAAM,eAAe,OAAO,KAAK,SAAS,EAAE,CAAC;AAC7C,YAAI,cAAc;AAChB,iBAAO,UAAU,YAAY,EAAE,KAAK,CAAC,SAAS;AAC5C,gBAAI,iBAAiB,QAAQ;AAC3B,qBAAO,KAAK,UAAU,IAAI;AAAA,YAC5B;AACA,mBAAO,IAAI,SAAS,IAAI,EAAE,GAAG,EAAE;AAAA,UACjC,CAAC;AAAA,QACH;AACA,eAAO,UAAU,GAAG,IAAIA,KAAI,GAAG,EAAE;AAAA,MACnC,GAhBc;AAAA,MAiBd,OAAO;AACL,eAAO,KAAK,YAAY,MAAM,EAAE,KAAK,CAAC,SAAS,KAAK,MAAM,IAAI,CAAC;AAAA,MACjE;AAAA,MACA,OAAO;AACL,eAAO,KAAK,YAAY,MAAM;AAAA,MAChC;AAAA,MACA,cAAc;AACZ,eAAO,KAAK,YAAY,aAAa;AAAA,MACvC;AAAA,MACA,OAAO;AACL,eAAO,KAAK,YAAY,MAAM;AAAA,MAChC;AAAA,MACA,WAAW;AACT,eAAO,KAAK,YAAY,UAAU;AAAA,MACpC;AAAA,MACA,iBAAiB,QAAQ,MAAM;AAC7B,aAAK,eAAe,MAAM,IAAI;AAAA,MAChC;AAAA,MACA,MAAM,QAAQ;AACZ,eAAO,KAAK,eAAe,MAAM;AAAA,MACnC;AAAA,MACA,IAAI,MAAM;AACR,eAAO,KAAK,IAAI;AAAA,MAClB;AAAA,MACA,IAAI,SAAS;AACX,eAAO,KAAK,IAAI;AAAA,MAClB;AAAA,MACA,KAAK,gBAAgB,IAAI;AACvB,eAAO,KAAK;AAAA,MACd;AAAA,MACA,IAAI,gBAAgB;AAClB,eAAO,KAAK,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,KAAK;AAAA,MACxD;AAAA,MACA,IAAI,YAAY;AACd,eAAO,KAAK,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,KAAK,EAAE,KAAK,UAAU,EAAE;AAAA,MAC3E;AAAA,IACF;AAAA;AAAA;;;AChHA,IACI,0BAKA,KAgFA;AAtFJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA,IAAI,2BAA2B;AAAA,MAC7B,WAAW;AAAA,MACX,cAAc;AAAA,MACd,QAAQ;AAAA,IACV;AACA,IAAI,MAAM,wBAAC,OAAO,cAAc;AAC9B,YAAM,gBAAgB,IAAI,OAAO,KAAK;AACtC,oBAAc,YAAY;AAC1B,oBAAc,YAAY;AAC1B,aAAO;AAAA,IACT,GALU;AAgFV,IAAI,kBAAkB,8BAAO,KAAK,OAAO,mBAAmBC,UAAS,WAAW;AAC9E,UAAI,OAAO,QAAQ,YAAY,EAAE,eAAe,SAAS;AACvD,YAAI,EAAE,eAAe,UAAU;AAC7B,gBAAM,IAAI,SAAS;AAAA,QACrB;AACA,YAAI,eAAe,SAAS;AAC1B,gBAAM,MAAM;AAAA,QACd;AAAA,MACF;AACA,YAAM,YAAY,IAAI;AACtB,UAAI,CAAC,WAAW,QAAQ;AACtB,eAAO,QAAQ,QAAQ,GAAG;AAAA,MAC5B;AACA,UAAI,QAAQ;AACV,eAAO,CAAC,KAAK;AAAA,MACf,OAAO;AACL,iBAAS,CAAC,GAAG;AAAA,MACf;AACA,YAAM,SAAS,QAAQ,IAAI,UAAU,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,QAAQ,SAAAA,SAAQ,CAAC,CAAC,CAAC,EAAE;AAAA,QAC9E,CAAC,QAAQ,QAAQ;AAAA,UACf,IAAI,OAAO,OAAO,EAAE,IAAI,CAAC,SAAS,gBAAgB,MAAM,OAAO,OAAOA,UAAS,MAAM,CAAC;AAAA,QACxF,EAAE,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,MACxB;AACA,UAAI,mBAAmB;AACrB,eAAO,IAAI,MAAM,QAAQ,SAAS;AAAA,MACpC,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF,GA5BsB;AAAA;AAAA;;;ACtFtB,IAGI,YACA,uBAMA;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA;AACA;AACA,IAAI,aAAa;AACjB,IAAI,wBAAwB,wBAAC,aAAa,YAAY;AACpD,aAAO;AAAA,QACL,gBAAgB;AAAA,QAChB,GAAG;AAAA,MACL;AAAA,IACF,GAL4B;AAM5B,IAAI,UAAU,MAAM;AAAA,MAVpB,OAUoB;AAAA;AAAA;AAAA,MAClB;AAAA,MACA;AAAA,MACA,MAAM,CAAC;AAAA,MACP;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAY,KAAK,SAAS;AACxB,aAAK,cAAc;AACnB,YAAI,SAAS;AACX,eAAK,gBAAgB,QAAQ;AAC7B,eAAK,MAAM,QAAQ;AACnB,eAAK,mBAAmB,QAAQ;AAChC,eAAK,QAAQ,QAAQ;AACrB,eAAK,eAAe,QAAQ;AAAA,QAC9B;AAAA,MACF;AAAA,MACA,IAAI,MAAM;AACR,aAAK,SAAS,IAAI,YAAY,KAAK,aAAa,KAAK,OAAO,KAAK,YAAY;AAC7E,eAAO,KAAK;AAAA,MACd;AAAA,MACA,IAAI,QAAQ;AACV,YAAI,KAAK,iBAAiB,iBAAiB,KAAK,eAAe;AAC7D,iBAAO,KAAK;AAAA,QACd,OAAO;AACL,gBAAM,MAAM,gCAAgC;AAAA,QAC9C;AAAA,MACF;AAAA,MACA,IAAI,eAAe;AACjB,YAAI,KAAK,eAAe;AACtB,iBAAO,KAAK;AAAA,QACd,OAAO;AACL,gBAAM,MAAM,sCAAsC;AAAA,QACpD;AAAA,MACF;AAAA,MACA,IAAI,MAAM;AACR,eAAO,KAAK,SAAS,IAAI,SAAS,MAAM;AAAA,UACtC,SAAS,KAAK,qBAAqB,IAAI,QAAQ;AAAA,QACjD,CAAC;AAAA,MACH;AAAA,MACA,IAAI,IAAI,MAAM;AACZ,YAAI,KAAK,QAAQ,MAAM;AACrB,iBAAO,IAAI,SAAS,KAAK,MAAM,IAAI;AACnC,qBAAW,CAAC,GAAG,CAAC,KAAK,KAAK,KAAK,QAAQ,QAAQ,GAAG;AAChD,gBAAI,MAAM,gBAAgB;AACxB;AAAA,YACF;AACA,gBAAI,MAAM,cAAc;AACtB,oBAAM,UAAU,KAAK,KAAK,QAAQ,aAAa;AAC/C,mBAAK,QAAQ,OAAO,YAAY;AAChC,yBAAW,UAAU,SAAS;AAC5B,qBAAK,QAAQ,OAAO,cAAc,MAAM;AAAA,cAC1C;AAAA,YACF,OAAO;AACL,mBAAK,QAAQ,IAAI,GAAG,CAAC;AAAA,YACvB;AAAA,UACF;AAAA,QACF;AACA,aAAK,OAAO;AACZ,aAAK,YAAY;AAAA,MACnB;AAAA,MACA,SAAS,2BAAI,SAAS;AACpB,aAAK,cAAc,CAAC,YAAY,KAAK,KAAK,OAAO;AACjD,eAAO,KAAK,UAAU,GAAG,IAAI;AAAA,MAC/B,GAHS;AAAA,MAIT,YAAY,wBAAC,WAAW,KAAK,UAAU,QAA3B;AAAA,MACZ,YAAY,6BAAM,KAAK,SAAX;AAAA,MACZ,cAAc,wBAAC,aAAa;AAC1B,aAAK,YAAY;AAAA,MACnB,GAFc;AAAA,MAGd,SAAS,wBAAC,MAAM,OAAO,YAAY;AACjC,YAAI,KAAK,WAAW;AAClB,eAAK,OAAO,IAAI,SAAS,KAAK,KAAK,MAAM,KAAK,IAAI;AAAA,QACpD;AACA,cAAM,UAAU,KAAK,OAAO,KAAK,KAAK,UAAU,KAAK,qBAAqB,IAAI,QAAQ;AACtF,YAAI,UAAU,QAAQ;AACpB,kBAAQ,OAAO,IAAI;AAAA,QACrB,WAAW,SAAS,QAAQ;AAC1B,kBAAQ,OAAO,MAAM,KAAK;AAAA,QAC5B,OAAO;AACL,kBAAQ,IAAI,MAAM,KAAK;AAAA,QACzB;AAAA,MACF,GAZS;AAAA,MAaT,SAAS,wBAAC,WAAW;AACnB,aAAK,UAAU;AAAA,MACjB,GAFS;AAAA,MAGT,MAAM,wBAAC,KAAK,UAAU;AACpB,aAAK,SAAyB,oBAAI,IAAI;AACtC,aAAK,KAAK,IAAI,KAAK,KAAK;AAAA,MAC1B,GAHM;AAAA,MAIN,MAAM,wBAAC,QAAQ;AACb,eAAO,KAAK,OAAO,KAAK,KAAK,IAAI,GAAG,IAAI;AAAA,MAC1C,GAFM;AAAA,MAGN,IAAI,MAAM;AACR,YAAI,CAAC,KAAK,MAAM;AACd,iBAAO,CAAC;AAAA,QACV;AACA,eAAO,OAAO,YAAY,KAAK,IAAI;AAAA,MACrC;AAAA,MACA,aAAa,MAAM,KAAK,SAAS;AAC/B,cAAM,kBAAkB,KAAK,OAAO,IAAI,QAAQ,KAAK,KAAK,OAAO,IAAI,KAAK,oBAAoB,IAAI,QAAQ;AAC1G,YAAI,OAAO,QAAQ,YAAY,aAAa,KAAK;AAC/C,gBAAM,aAAa,IAAI,mBAAmB,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,OAAO;AACzF,qBAAW,CAAC,KAAK,KAAK,KAAK,YAAY;AACrC,gBAAI,IAAI,YAAY,MAAM,cAAc;AACtC,8BAAgB,OAAO,KAAK,KAAK;AAAA,YACnC,OAAO;AACL,8BAAgB,IAAI,KAAK,KAAK;AAAA,YAChC;AAAA,UACF;AAAA,QACF;AACA,YAAI,SAAS;AACX,qBAAW,CAAC,GAAG,CAAC,KAAK,OAAO,QAAQ,OAAO,GAAG;AAC5C,gBAAI,OAAO,MAAM,UAAU;AACzB,8BAAgB,IAAI,GAAG,CAAC;AAAA,YAC1B,OAAO;AACL,8BAAgB,OAAO,CAAC;AACxB,yBAAW,MAAM,GAAG;AAClB,gCAAgB,OAAO,GAAG,EAAE;AAAA,cAC9B;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,cAAM,SAAS,OAAO,QAAQ,WAAW,MAAM,KAAK,UAAU,KAAK;AACnE,eAAO,IAAI,SAAS,MAAM,EAAE,QAAQ,SAAS,gBAAgB,CAAC;AAAA,MAChE;AAAA,MACA,cAAc,2BAAI,SAAS,KAAK,aAAa,GAAG,IAAI,GAAtC;AAAA,MACd,OAAO,wBAAC,MAAM,KAAK,YAAY,KAAK,aAAa,MAAM,KAAK,OAAO,GAA5D;AAAA,MACP,OAAO,wBAAC,MAAM,KAAK,YAAY;AAC7B,eAAO,CAAC,KAAK,oBAAoB,CAAC,KAAK,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,YAAY,IAAI,SAAS,IAAI,IAAI,KAAK;AAAA,UAChH;AAAA,UACA;AAAA,UACA,sBAAsB,YAAY,OAAO;AAAA,QAC3C;AAAA,MACF,GANO;AAAA,MAOP,OAAO,wBAACC,SAAQ,KAAK,YAAY;AAC/B,eAAO,KAAK;AAAA,UACV,KAAK,UAAUA,OAAM;AAAA,UACrB;AAAA,UACA,sBAAsB,oBAAoB,OAAO;AAAA,QACnD;AAAA,MACF,GANO;AAAA,MAOP,OAAO,wBAAC,MAAM,KAAK,YAAY;AAC7B,cAAM,MAAM,wBAAC,UAAU,KAAK,aAAa,OAAO,KAAK,sBAAsB,4BAA4B,OAAO,CAAC,GAAnG;AACZ,eAAO,OAAO,SAAS,WAAW,gBAAgB,MAAM,yBAAyB,WAAW,OAAO,CAAC,CAAC,EAAE,KAAK,GAAG,IAAI,IAAI,IAAI;AAAA,MAC7H,GAHO;AAAA,MAIP,WAAW,wBAAC,UAAU,WAAW;AAC/B,cAAM,iBAAiB,OAAO,QAAQ;AACtC,aAAK;AAAA,UACH;AAAA,UACA,CAAC,eAAe,KAAK,cAAc,IAAI,iBAAiB,UAAU,cAAc;AAAA,QAClF;AACA,eAAO,KAAK,YAAY,MAAM,UAAU,GAAG;AAAA,MAC7C,GAPW;AAAA,MAQX,WAAW,6BAAM;AACf,aAAK,qBAAqB,MAAM,IAAI,SAAS;AAC7C,eAAO,KAAK,iBAAiB,IAAI;AAAA,MACnC,GAHW;AAAA,IAIb;AAAA;AAAA;;;ACjLA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA;AAAA;AAAA;;;ACDA,IAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA;AAAA;AAAA;;;ACDA,IACI;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA,IAAI,gBAAgB,cAAc,MAAM;AAAA,MADxC,OACwC;AAAA;AAAA;AAAA,MACtC;AAAA,MACA;AAAA,MACA,YAAY,SAAS,KAAK,SAAS;AACjC,cAAM,SAAS,SAAS,EAAE,OAAO,SAAS,MAAM,CAAC;AACjD,aAAK,MAAM,SAAS;AACpB,aAAK,SAAS;AAAA,MAChB;AAAA,MACA,cAAc;AACZ,YAAI,KAAK,KAAK;AACZ,gBAAM,cAAc,IAAI,SAAS,KAAK,IAAI,MAAM;AAAA,YAC9C,QAAQ,KAAK;AAAA,YACb,SAAS,KAAK,IAAI;AAAA,UACpB,CAAC;AACD,iBAAO;AAAA,QACT;AACA,eAAO,IAAI,SAAS,KAAK,SAAS;AAAA,UAChC,QAAQ,KAAK;AAAA,QACf,CAAC;AAAA,MACH;AAAA,IACF;AAAA;AAAA;;;ACrBA,IACI,iBAGA,iBACA,cAQA;AAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA,IAAI,kBAAkB,wBAAC,QAAQ;AAC7B,aAAO,aAAa,IAAI,QAAQ,QAAQ,CAAC,OAAO,EAAE,GAAG,KAAK,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;AAAA,IAChF,GAFsB;AAGtB,IAAI,kBAAkB,wBAAC,QAAQ,aAAa,GAAG,EAAE,QAAQ,UAAU,CAAC,OAAO,EAAE,KAAK,KAAK,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,GAApF;AACtB,IAAI,eAAe,wBAAC,QAAQ;AAC1B,UAAI,SAAS;AACb,YAAM,QAAQ,IAAI,WAAW,GAAG;AAChC,eAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK;AAChD,kBAAU,OAAO,aAAa,MAAM,CAAC,CAAC;AAAA,MACxC;AACA,aAAO,KAAK,MAAM;AAAA,IACpB,GAPmB;AAQnB,IAAI,eAAe,wBAAC,QAAQ;AAC1B,YAAM,SAAS,KAAK,GAAG;AACvB,YAAM,QAAQ,IAAI,WAAW,IAAI,YAAY,OAAO,MAAM,CAAC;AAC3D,YAAM,OAAO,OAAO,SAAS;AAC7B,eAAS,IAAI,GAAG,IAAI,OAAO,SAAS,GAAG,KAAK,MAAM,KAAK,KAAK;AAC1D,cAAM,CAAC,IAAI,OAAO,WAAW,CAAC;AAC9B,cAAM,CAAC,IAAI,OAAO,WAAW,CAAC;AAAA,MAChC;AACA,aAAO;AAAA,IACT,GATmB;AAAA;AAAA;;;ACbnB,IACI;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA,IAAI,iBAAkC,kBAAC,oBAAoB;AACzD,sBAAgB,OAAO,IAAI;AAC3B,sBAAgB,OAAO,IAAI;AAC3B,sBAAgB,OAAO,IAAI;AAC3B,sBAAgB,OAAO,IAAI;AAC3B,sBAAgB,OAAO,IAAI;AAC3B,sBAAgB,OAAO,IAAI;AAC3B,sBAAgB,OAAO,IAAI;AAC3B,sBAAgB,OAAO,IAAI;AAC3B,sBAAgB,OAAO,IAAI;AAC3B,sBAAgB,OAAO,IAAI;AAC3B,sBAAgB,OAAO,IAAI;AAC3B,sBAAgB,OAAO,IAAI;AAC3B,sBAAgB,OAAO,IAAI;AAC3B,aAAO;AAAA,IACT,GAAG,kBAAkB,CAAC,CAAC;AAAA;AAAA;;;AChBvB,IAkBI,iBAMA,eAqBA;AA7CJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAkBA,IAAI,kBAAkB;AAAA,MACpB,MAAM;AAAA,MACN,KAAK;AAAA,MACL,SAAS;AAAA,MACT,MAAM;AAAA,IACR;AACA,IAAI,gBAAgB,6BAAM;AACxB,YAAM,SAAS;AACf,YAAM,qBAAqB,OAAO,cAAc,eAAe;AAC/D,UAAI,oBAAoB;AACtB,mBAAW,CAAC,YAAY,SAAS,KAAK,OAAO,QAAQ,eAAe,GAAG;AACrE,cAAI,qBAAqB,SAAS,GAAG;AACnC,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AACA,UAAI,OAAO,QAAQ,gBAAgB,UAAU;AAC3C,eAAO;AAAA,MACT;AACA,UAAI,QAAQ,WAAW,QAAQ;AAC7B,eAAO;AAAA,MACT;AACA,UAAI,QAAQ,SAAS,SAAS,SAAS,QAAQ;AAC7C,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT,GApBoB;AAqBpB,IAAI,uBAAuB,wBAACC,cAAa;AACvC,YAAM,YAAY;AAClB,aAAO,UAAU,WAAWA,SAAQ;AAAA,IACtC,GAH2B;AAAA;AAAA;;;AC7C3B,IACI,4BAMA,iBAMA,mBAMA,iBAMA,kBAQA,gBAMA,kBAMA,sBAMA,6BAMA;AAzDJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA,IAAI,6BAA6B,cAAc,MAAM;AAAA,MADrD,OACqD;AAAA;AAAA;AAAA,MACnD,YAAY,KAAK;AACf,cAAM,GAAG,GAAG,kCAAkC;AAC9C,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AACA,IAAI,kBAAkB,cAAc,MAAM;AAAA,MAP1C,OAO0C;AAAA;AAAA;AAAA,MACxC,YAAY,OAAO;AACjB,cAAM,sBAAsB,KAAK,EAAE;AACnC,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AACA,IAAI,oBAAoB,cAAc,MAAM;AAAA,MAb5C,OAa4C;AAAA;AAAA;AAAA,MAC1C,YAAY,OAAO;AACjB,cAAM,UAAU,KAAK,mCAAmC;AACxD,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AACA,IAAI,kBAAkB,cAAc,MAAM;AAAA,MAnB1C,OAmB0C;AAAA;AAAA;AAAA,MACxC,YAAY,OAAO;AACjB,cAAM,UAAU,KAAK,WAAW;AAChC,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AACA,IAAI,mBAAmB,cAAc,MAAM;AAAA,MAzB3C,OAyB2C;AAAA;AAAA;AAAA,MACzC,YAAY,kBAAkB,KAAK;AACjC;AAAA,UACE,2DAA2D,gBAAgB,YAAY,GAAG;AAAA,QAC5F;AACA,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AACA,IAAI,iBAAiB,cAAc,MAAM;AAAA,MAjCzC,OAiCyC;AAAA;AAAA;AAAA,MACvC,YAAY,UAAU,KAAK;AACzB,cAAM,oBAAoB,QAAQ,UAAU,MAAM,IAAI,GAAG,MAAM,MAAM,GAAG;AACxE,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AACA,IAAI,mBAAmB,cAAc,MAAM;AAAA,MAvC3C,OAuC2C;AAAA;AAAA;AAAA,MACzC,YAAY,QAAQ;AAClB,cAAM,0BAA0B,KAAK,UAAU,MAAM,CAAC,EAAE;AACxD,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AACA,IAAI,uBAAuB,cAAc,MAAM;AAAA,MA7C/C,OA6C+C;AAAA;AAAA;AAAA,MAC7C,YAAY,QAAQ;AAClB,cAAM,iCAAiC,KAAK,UAAU,MAAM,CAAC,EAAE;AAC/D,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AACA,IAAI,8BAA8B,cAAc,MAAM;AAAA,MAnDtD,OAmDsD;AAAA;AAAA;AAAA,MACpD,YAAY,OAAO;AACjB,cAAM,SAAS,KAAK,wBAAwB;AAC5C,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AACA,IAAI,iBAAkC,kBAAC,oBAAoB;AACzD,sBAAgB,SAAS,IAAI;AAC7B,sBAAgB,SAAS,IAAI;AAC7B,sBAAgB,MAAM,IAAI;AAC1B,sBAAgB,QAAQ,IAAI;AAC5B,sBAAgB,WAAW,IAAI;AAC/B,sBAAgB,YAAY,IAAI;AAChC,sBAAgB,SAAS,IAAI;AAC7B,sBAAgB,WAAW,IAAI;AAC/B,aAAO;AAAA,IACT,GAAG,kBAAkB,CAAC,CAAC;AAAA;AAAA;;;ACnEvB,IACI,aACA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA,IAAI,cAAc,IAAI,YAAY;AAClC,IAAI,cAAc,IAAI,YAAY;AAAA;AAAA;;;ACGlC,eAAe,QAAQ,YAAY,KAAK,MAAM;AAC5C,QAAM,YAAY,gBAAgB,GAAG;AACrC,QAAM,YAAY,MAAM,iBAAiB,YAAY,SAAS;AAC9D,SAAO,MAAM,OAAO,OAAO,KAAK,WAAW,WAAW,IAAI;AAC5D;AACA,eAAe,UAAU,WAAW,KAAK,WAAW,MAAM;AACxD,QAAM,YAAY,gBAAgB,GAAG;AACrC,QAAM,YAAY,MAAM,gBAAgB,WAAW,SAAS;AAC5D,SAAO,MAAM,OAAO,OAAO,OAAO,WAAW,WAAW,WAAW,IAAI;AACzE;AACA,SAAS,YAAY,KAAK;AACxB,SAAO,aAAa,IAAI,QAAQ,oBAAoB,EAAE,EAAE,QAAQ,OAAO,EAAE,CAAC;AAC5E;AACA,eAAe,iBAAiB,KAAK,KAAK;AACxC,MAAI,CAAC,OAAO,UAAU,CAAC,OAAO,OAAO,WAAW;AAC9C,UAAM,IAAI,MAAM,0EAA0E;AAAA,EAC5F;AACA,MAAI,YAAY,GAAG,GAAG;AACpB,QAAI,IAAI,SAAS,aAAa,IAAI,SAAS,UAAU;AACnD,YAAM,IAAI;AAAA,QACR,0CAA0C,IAAI,IAAI;AAAA,MACpD;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACA,QAAM,SAAS,CAAC,eAAe,IAAI;AACnC,MAAI,OAAO,QAAQ,UAAU;AAC3B,WAAO,MAAM,OAAO,OAAO,UAAU,OAAO,KAAK,KAAK,OAAO,MAAM;AAAA,EACrE;AACA,MAAI,IAAI,SAAS,SAAS,GAAG;AAC3B,WAAO,MAAM,OAAO,OAAO,UAAU,SAAS,YAAY,GAAG,GAAG,KAAK,OAAO,MAAM;AAAA,EACpF;AACA,SAAO,MAAM,OAAO,OAAO,UAAU,OAAO,YAAY,OAAO,GAAG,GAAG,KAAK,OAAO,MAAM;AACzF;AACA,eAAe,gBAAgB,KAAK,KAAK;AACvC,MAAI,CAAC,OAAO,UAAU,CAAC,OAAO,OAAO,WAAW;AAC9C,UAAM,IAAI,MAAM,0EAA0E;AAAA,EAC5F;AACA,MAAI,YAAY,GAAG,GAAG;AACpB,QAAI,IAAI,SAAS,YAAY,IAAI,SAAS,UAAU;AAClD,aAAO;AAAA,IACT;AACA,UAAM,MAAM,oBAAoB,GAAG;AAAA,EACrC;AACA,MAAI,OAAO,QAAQ,YAAY,IAAI,SAAS,SAAS,GAAG;AACtD,UAAM,aAAa,MAAM,OAAO,OAAO,UAAU,SAAS,YAAY,GAAG,GAAG,KAAK,MAAM;AAAA,MACrF,eAAe;AAAA,IACjB,CAAC;AACD,UAAM,MAAM,oBAAoB,UAAU;AAAA,EAC5C;AACA,QAAM,SAAS,CAAC,eAAe,MAAM;AACrC,MAAI,OAAO,QAAQ,UAAU;AAC3B,WAAO,MAAM,OAAO,OAAO,UAAU,OAAO,KAAK,KAAK,OAAO,MAAM;AAAA,EACrE;AACA,MAAI,IAAI,SAAS,QAAQ,GAAG;AAC1B,WAAO,MAAM,OAAO,OAAO,UAAU,QAAQ,YAAY,GAAG,GAAG,KAAK,OAAO,MAAM;AAAA,EACnF;AACA,SAAO,MAAM,OAAO,OAAO,UAAU,OAAO,YAAY,OAAO,GAAG,GAAG,KAAK,OAAO,MAAM;AACzF;AACA,eAAe,oBAAoB,YAAY;AAC7C,MAAI,WAAW,SAAS,WAAW;AACjC,UAAM,IAAI,MAAM,wBAAwB,WAAW,IAAI,EAAE;AAAA,EAC3D;AACA,MAAI,CAAC,WAAW,aAAa;AAC3B,UAAM,IAAI,MAAM,yCAAyC;AAAA,EAC3D;AACA,QAAM,MAAM,MAAM,OAAO,OAAO,UAAU,OAAO,UAAU;AAC3D,QAAM,EAAE,IAAI,IAAI;AAChB,QAAM,EAAE,KAAK,GAAG,EAAE,IAAI;AACtB,QAAM,EAAE,KAAK,GAAG,EAAE,IAAI;AACtB,SAAO,EAAE,KAAK,KAAK,GAAG,GAAG,KAAK,GAAG,GAAG,SAAS,CAAC,eAAe,MAAM,EAAE;AACvE;AACA,SAAS,gBAAgB,MAAM;AAC7B,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,MAAM;AAAA,QACR;AAAA,QACA,YAAY;AAAA,MACd;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,MAAM;AAAA,QACR;AAAA,QACA,YAAY;AAAA,MACd;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,MAAM;AAAA,QACR;AAAA,QACA,YAAY;AAAA,MACd;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,MAAM;AAAA,QACR;AAAA,QACA,YAAY;AAAA,MACd;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,MAAM;AAAA,QACR;AAAA,QACA,YAAY;AAAA,MACd;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,MAAM;AAAA,QACR;AAAA,QACA,YAAY;AAAA,MACd;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,YAAY;AAAA,MACd;AAAA,IACF;AACE,YAAM,IAAI,2BAA2B,IAAI;AAAA,EAC7C;AACF;AACA,SAAS,YAAY,KAAK;AACxB,QAAM,UAAU,cAAc;AAC9B,MAAI,YAAY,UAAU,CAAC,CAAC,OAAO,WAAW;AAC5C,WAAO,eAAe,OAAO,UAAU;AAAA,EACzC;AACA,SAAO,eAAe;AACxB;AAxLA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA;AACA;AACA;AACA;AACe;AAKA;AAKN;AAGM;AAqBA;AAyBA;AAaN;AAqGA;AAAA;AAAA;;;AChKT,SAAS,cAAc,KAAK;AAC1B,MAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;AAC3C,UAAM,aAAa;AACnB,WAAO,SAAS,cAAc,OAAO,OAAO,cAAc,EAAE,SAAS,WAAW,GAAG,MAAM,EAAE,SAAS,eAAe,WAAW,QAAQ;AAAA,EACxI;AACA,SAAO;AACT;AAxBA,IAeI,eACA,qBACA,eAQA,MAcA,QAkDA,gBAsCA,QAaA;AA5IJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA;AACA;AACA;AACA;AAUA;AACA,IAAI,gBAAgB,wBAAC,SAAS,gBAAgB,YAAY,OAAO,KAAK,UAAU,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,MAAM,EAAE,GAA3F;AACpB,IAAI,sBAAsB,wBAAC,QAAQ,gBAAgB,GAAG,EAAE,QAAQ,MAAM,EAAE,GAA9C;AAC1B,IAAI,gBAAgB,wBAAC,SAAS,KAAK,MAAM,YAAY,OAAO,gBAAgB,IAAI,CAAC,CAAC,GAA9D;AACX;AAOT,IAAI,OAAO,8BAAO,SAAS,YAAY,MAAM,YAAY;AACvD,YAAM,iBAAiB,cAAc,OAAO;AAC5C,UAAI;AACJ,UAAI,OAAO,eAAe,YAAY,SAAS,YAAY;AACzD,cAAM,WAAW;AACjB,wBAAgB,cAAc,EAAE,KAAK,KAAK,OAAO,KAAK,WAAW,IAAI,CAAC;AAAA,MACxE,OAAO;AACL,wBAAgB,cAAc,EAAE,KAAK,KAAK,MAAM,CAAC;AAAA,MACnD;AACA,YAAM,eAAe,GAAG,aAAa,IAAI,cAAc;AACvD,YAAM,gBAAgB,MAAM,QAAQ,YAAY,KAAK,YAAY,OAAO,YAAY,CAAC;AACrF,YAAM,YAAY,oBAAoB,aAAa;AACnD,aAAO,GAAG,YAAY,IAAI,SAAS;AAAA,IACrC,GAbW;AAcX,IAAI,SAAS,8BAAO,OAAO,WAAW,iBAAiB;AACrD,YAAM,SAAS,OAAO,iBAAiB,WAAW,EAAE,KAAK,aAAa,IAAI,gBAAgB,CAAC;AAC3F,YAAM,OAAO;AAAA,QACX,KAAK,OAAO,OAAO;AAAA,QACnB,KAAK,OAAO;AAAA,QACZ,KAAK,OAAO,OAAO;AAAA,QACnB,KAAK,OAAO,OAAO;AAAA,QACnB,KAAK,OAAO,OAAO;AAAA,MACrB;AACA,YAAM,aAAa,MAAM,MAAM,GAAG;AAClC,UAAI,WAAW,WAAW,GAAG;AAC3B,cAAM,IAAI,gBAAgB,KAAK;AAAA,MACjC;AACA,YAAM,EAAE,QAAQ,QAAQ,IAAI,OAAO,KAAK;AACxC,UAAI,CAAC,cAAc,MAAM,GAAG;AAC1B,cAAM,IAAI,iBAAiB,MAAM;AAAA,MACnC;AACA,YAAM,MAAM,KAAK,IAAI,IAAI,MAAM;AAC/B,UAAI,KAAK,OAAO,QAAQ,OAAO,QAAQ,MAAM,KAAK;AAChD,cAAM,IAAI,kBAAkB,KAAK;AAAA,MACnC;AACA,UAAI,KAAK,OAAO,QAAQ,OAAO,QAAQ,OAAO,KAAK;AACjD,cAAM,IAAI,gBAAgB,KAAK;AAAA,MACjC;AACA,UAAI,KAAK,OAAO,QAAQ,OAAO,MAAM,QAAQ,KAAK;AAChD,cAAM,IAAI,iBAAiB,KAAK,QAAQ,GAAG;AAAA,MAC7C;AACA,UAAI,KAAK,KAAK;AACZ,YAAI,CAAC,QAAQ,KAAK;AAChB,gBAAM,IAAI,eAAe,KAAK,KAAK,IAAI;AAAA,QACzC;AACA,YAAI,OAAO,KAAK,QAAQ,YAAY,QAAQ,QAAQ,KAAK,KAAK;AAC5D,gBAAM,IAAI,eAAe,KAAK,KAAK,QAAQ,GAAG;AAAA,QAChD;AACA,YAAI,KAAK,eAAe,UAAU,CAAC,KAAK,IAAI,KAAK,QAAQ,GAAG,GAAG;AAC7D,gBAAM,IAAI,eAAe,KAAK,KAAK,QAAQ,GAAG;AAAA,QAChD;AAAA,MACF;AACA,YAAM,gBAAgB,MAAM,UAAU,GAAG,MAAM,YAAY,GAAG,CAAC;AAC/D,YAAM,WAAW,MAAM;AAAA,QACrB;AAAA,QACA,KAAK;AAAA,QACL,gBAAgB,WAAW,CAAC,CAAC;AAAA,QAC7B,YAAY,OAAO,aAAa;AAAA,MAClC;AACA,UAAI,CAAC,UAAU;AACb,cAAM,IAAI,4BAA4B,KAAK;AAAA,MAC7C;AACA,aAAO;AAAA,IACT,GAjDa;AAkDb,IAAI,iBAAiB,8BAAO,OAAO,SAAS,SAAS;AACnD,YAAM,aAAa,QAAQ,gBAAgB,CAAC;AAC5C,YAAM,SAAS,aAAa,KAAK;AACjC,UAAI,CAAC,cAAc,MAAM,GAAG;AAC1B,cAAM,IAAI,iBAAiB,MAAM;AAAA,MACnC;AACA,UAAI,CAAC,OAAO,KAAK;AACf,cAAM,IAAI,qBAAqB,MAAM;AAAA,MACvC;AACA,UAAI,QAAQ,UAAU;AACpB,cAAM,WAAW,MAAM,MAAM,QAAQ,UAAU,IAAI;AACnD,YAAI,CAAC,SAAS,IAAI;AAChB,gBAAM,IAAI,MAAM,6BAA6B,QAAQ,QAAQ,EAAE;AAAA,QACjE;AACA,cAAM,OAAO,MAAM,SAAS,KAAK;AACjC,YAAI,CAAC,KAAK,MAAM;AACd,gBAAM,IAAI,MAAM,gDAAgD;AAAA,QAClE;AACA,YAAI,CAAC,MAAM,QAAQ,KAAK,IAAI,GAAG;AAC7B,gBAAM,IAAI,MAAM,qDAAqD;AAAA,QACvE;AACA,YAAI,QAAQ,MAAM;AAChB,kBAAQ,KAAK,KAAK,GAAG,KAAK,IAAI;AAAA,QAChC,OAAO;AACL,kBAAQ,OAAO,KAAK;AAAA,QACtB;AAAA,MACF,WAAW,CAAC,QAAQ,MAAM;AACxB,cAAM,IAAI,MAAM,yEAAyE;AAAA,MAC3F;AACA,YAAM,cAAc,QAAQ,KAAK,KAAK,CAAC,QAAQ,IAAI,QAAQ,OAAO,GAAG;AACrE,UAAI,CAAC,aAAa;AAChB,cAAM,IAAI,gBAAgB,KAAK;AAAA,MACjC;AACA,aAAO,MAAM,OAAO,OAAO,aAAa;AAAA,QACtC,KAAK,YAAY,OAAO,OAAO;AAAA,QAC/B,GAAG;AAAA,MACL,CAAC;AAAA,IACH,GArCqB;AAsCrB,IAAI,SAAS,wBAAC,UAAU;AACtB,UAAI;AACF,cAAM,CAAC,GAAG,CAAC,IAAI,MAAM,MAAM,GAAG;AAC9B,cAAM,SAAS,cAAc,CAAC;AAC9B,cAAM,UAAU,cAAc,CAAC;AAC/B,eAAO;AAAA,UACL;AAAA,UACA;AAAA,QACF;AAAA,MACF,QAAQ;AACN,cAAM,IAAI,gBAAgB,KAAK;AAAA,MACjC;AAAA,IACF,GAZa;AAab,IAAI,eAAe,wBAAC,UAAU;AAC5B,UAAI;AACF,cAAM,CAAC,CAAC,IAAI,MAAM,MAAM,GAAG;AAC3B,eAAO,cAAc,CAAC;AAAA,MACxB,QAAQ;AACN,cAAM,IAAI,gBAAgB,KAAK;AAAA,MACjC;AAAA,IACF,GAPmB;AAAA;AAAA;;;AC5InB,IAEI;AAFJ,IAAAC,YAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA;AACA,IAAI,MAAM,EAAE,MAAM,QAAQ,QAAQ,eAAe;AAAA;AAAA;;;ACFjD,IAoGIC,iBACAC,SACAC,SACAC;AAvGJ,IAAAC,YAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA,IAAAC;AACA;AACA,IAAAF;AACA;AAgGA,IAAIJ,kBAAiB,IAAI;AACzB,IAAIC,UAAS,IAAI;AACjB,IAAIC,UAAS,IAAI;AACjB,IAAIC,QAAO,IAAI;AAAA;AAAA;;;ACvGf,IAAAI,YAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA,IAAAD;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAAE;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAkFO,SAAS,oBAAoBC,SAAyC;AAE3E,MAAIA,mBAAiB,UAAU;AAC7B,WAAO;AAAA,MACL,OAAO;AAAA,QACL,MAAMA,QAAM;AAAA,QACZ,SAASA,QAAM;AAAA,QACf,SAASA,QAAM;AAAA,MACjB;AAAA,MACA,QAAQA,QAAM;AAAA,IAChB;AAAA,EACF;AAGA,MAAIA,mBAAiB,eAAe;AAClC,WAAO;AAAA,MACL,OAAO;AAAA,QACL,MAAM;AAAA,QACN,SAASA,QAAM;AAAA,QACf,QAAQA,QAAM;AAAA,MAChB;AAAA,MACA,QAAQA,QAAM;AAAA,IAChB;AAAA,EACF;AAGA,QAAM,gBAAiB,WAAmB,aAAa;AACvD,SAAO;AAAA,IACL,OAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS,gBAAgBA,QAAM,UAAU;AAAA,MACzC,OAAO,gBAAgBA,QAAM,QAAQ;AAAA,IACvC;AAAA,IACA,QAAQ;AAAA,EACV;AACF;AAGA,eAAsBD,cACpB,KACA,GACA;AACA,UAAQ,MAAM,UAAU,GAAG;AAE3B,QAAM,EAAE,OAAAC,SAAO,OAAO,IAAI,oBAAoB,GAAG;AAGjD,QAAMC,aAAY,EAAE,IAAI,OAAO,cAAc,KAAK,OAAO,WAAW;AACpE,IAAE,OAAO,gBAAgBA,UAAS;AAGlC,MAAK,WAAmB,aAAa,cAAc;AAEjD,YAAQ,MAAM,qBAAqB;AAAA,MACjC,WAAAA;AAAA,MACA,OAAAD;AAAA,MACA,KAAK,EAAE,IAAI;AAAA,MACX,QAAQ,EAAE,IAAI;AAAA,MACd,SAAS,OAAO,YAAY,EAAE,IAAI,IAAI,QAAQ,QAAQ,CAAC;AAAA,IACzD,CAAC;AAAA,EACH;AAGA,MAAI,eAAe,kBAAkB,IAAI,SAAS,YAAY;AAC5D,MAAE,OAAO,eAAe,OAAO,IAAI,QAAQ,UAAU,CAAC;AAAA,EACxD;AAEA,SAAO,EAAE,KAAKA,SAAc,MAAa;AAC3C;AAGO,SAAS,aACd,IACG;AACH,SAAQ,UAAU,SAAwB;AACxC,QAAI;AACF,aAAO,MAAM,GAAG,GAAG,IAAI;AAAA,IACzB,SAASA,SAAO;AACd,YAAMA;AAAA,IACR;AAAA,EACF;AACF;AAGO,SAAS,iBACd,MACA,QACM;AACN,QAAM,UAAU,OAAO,OAAO,WAAS,CAAC,KAAK,KAAK,CAAC;AACnD,MAAI,QAAQ,SAAS,GAAG;AACtB,UAAM,IAAI;AAAA,MACR,4BAA4B,QAAQ,KAAK,IAAI,CAAC;AAAA,MAC9C,EAAE,eAAe,QAAQ;AAAA,IAC3B;AAAA,EACF;AACF;AAGO,SAAS,aACd,OACA,MACA,WACM;AACN,MAAI,UAAU;AAEd,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,gBAAU,OAAO,UAAU;AAC3B;AAAA,IACF,KAAK;AACH,gBAAU,OAAO,UAAU,YAAY,CAAC,MAAM,KAAK;AACnD;AAAA,IACF,KAAK;AACH,gBAAU,OAAO,UAAU;AAC3B;AAAA,IACF,KAAK;AACH,gBAAU,MAAM,QAAQ,KAAK;AAC7B;AAAA,IACF,KAAK;AACH,gBAAU,UAAU,QAAQ,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,KAAK;AAC7E;AAAA,EACJ;AAEA,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI;AAAA,MACR,oBAAoB,SAAS,cAAc,IAAI;AAAA,MAC/C,EAAE,OAAO,WAAW,cAAc,MAAM,YAAY,OAAO,MAAM;AAAA,IACnE;AAAA,EACF;AACF;AAnNA,IAMa,UAqBA,iBAOA,qBAOA,oBAOA,eAOA,eAOA,gBAOA,sBAiJA;AAtNb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAE;AAGA;AAGO,IAAM,WAAN,MAAM,kBAAiB,MAAM;AAAA,MANpC,OAMoC;AAAA;AAAA;AAAA,MAKlC,YACE,SACA,aAAqB,KACrB,YAAoB,kBACpB,SACA;AACA,cAAM,OAAO;AACb,aAAK,OAAO;AACZ,aAAK,aAAa;AAClB,aAAK,YAAY;AACjB,aAAK,UAAU;AACf,eAAO,eAAe,MAAM,UAAS,SAAS;AAAA,MAChD;AAAA,IACF;AAGO,IAAM,kBAAN,cAA8B,SAAS;AAAA,MA3B9C,OA2B8C;AAAA;AAAA;AAAA,MAC5C,YAAY,SAAiB,SAAe;AAC1C,cAAM,SAAS,KAAK,oBAAoB,OAAO;AAC/C,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AAEO,IAAM,sBAAN,cAAkC,SAAS;AAAA,MAlClD,OAkCkD;AAAA;AAAA;AAAA,MAChD,YAAY,UAAkB,2BAA2B;AACvD,cAAM,SAAS,KAAK,sBAAsB;AAC1C,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AAEO,IAAM,qBAAN,cAAiC,SAAS;AAAA,MAzCjD,OAyCiD;AAAA;AAAA;AAAA,MAC/C,YAAY,UAAkB,4BAA4B;AACxD,cAAM,SAAS,KAAK,qBAAqB;AACzC,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AAEO,IAAM,gBAAN,cAA4B,SAAS;AAAA,MAhD5C,OAgD4C;AAAA;AAAA;AAAA,MAC1C,YAAY,WAAmB,YAAY;AACzC,cAAM,GAAG,QAAQ,cAAc,KAAK,WAAW;AAC/C,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AAEO,IAAM,gBAAN,cAA4B,SAAS;AAAA,MAvD5C,OAuD4C;AAAA;AAAA;AAAA,MAC1C,YAAY,SAAiB;AAC3B,cAAM,SAAS,KAAK,gBAAgB;AACpC,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AAEO,IAAM,iBAAN,cAA6B,SAAS;AAAA,MA9D7C,OA8D6C;AAAA;AAAA;AAAA,MAC3C,YAAY,YAAqB;AAC/B,cAAM,qBAAqB,KAAK,oBAAoB,EAAE,WAAW,CAAC;AAClE,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AAEO,IAAM,uBAAN,cAAmC,SAAS;AAAA,MArEnD,OAqEmD;AAAA;AAAA;AAAA,MACjD,YAAY,SAAiB,eAAqB;AAChD;AAAA,UACE,2BAA2B,OAAO;AAAA,UAClC;AAAA,UACA;AAAA,UACA,EAAE,SAAS,cAAc;AAAA,QAC3B;AACA,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AAGgB;AAsCM,WAAAH,eAAA;AAiCN;AAaA;AAcA;AAkCT,IAAM,cAAcA;AAAA;AAAA;;;ACtN3B,eAAsB,WAAW,OAAgC;AAC/D,QAAM,UAAU,IAAI,YAAY;AAChC,QAAM,OAAO,QAAQ,OAAO,KAAK;AACjC,QAAM,aAAa,MAAM,OAAO,OAAO,OAAO,WAAW,IAAI;AAC7D,QAAM,YAAY,MAAM,KAAK,IAAI,WAAW,UAAU,CAAC;AACvD,SAAO,UAAU,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AACtE;AAEO,SAAS,cAAc,SAAiB,SAAiB;AAC9D,SAAO,GAAG,MAAM,IAAI,OAAO,WAAW,CAAC;AACzC;AAEO,SAAS,iBAAiB,MAAsB;AACrD,SAAO,KACJ,UAAU,MAAM,EAChB,QAAQ,oBAAoB,EAAE,EAC9B,QAAQ,oBAAoB,GAAG,EAC/B,QAAQ,UAAU,GAAG,EACrB,QAAQ,YAAY,EAAE,EACtB,YAAY;AACjB;AAEO,SAAS,aAAa,OAA2B,cAA8B;AACpF,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,MAAM,wBAAwB,YAAY,cAAc;AAAA,EACpE;AACA,SAAO;AACT;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAI;AAAsB;AAQN;AAIA;AAUA;AAAA;AAAA;;;ACtBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyIA,eAAe,sBAAsBC,MAAU,OAAuB;AAClE,MAAI,CAACA,KAAI,UAAW;AAEpB,MAAI;AACA,UAAM,cAAc,MAAM,QAAQ,UAAU,OACtC,MAAM,QAAQ,OAAO,SAAS,IAC9B;AAEN,UAAOA,KAAI,UAAkB,eAAe;AAAA,MACxC,OAAO;AAAA,QACH,MAAM;AAAA,QACN,MAAM,QAAQ;AAAA,QACd,MAAM,QAAQ;AAAA,QACd,MAAM,QAAQ,SAAS;AAAA,QACvB,MAAM,QAAQ,WAAW;AAAA,QACzB,MAAM,QAAQ,WAAW;AAAA,QACzB,MAAM,QAAQ,eAAe;AAAA,QAC7B,MAAM,UAAU,eAAe;AAAA,QAC/B,MAAM,UAAU,WAAW;AAAA,MAC/B;AAAA,MACA,SAAS;AAAA,QACL,MAAM,QAAQ;AAAA,QACd,MAAM,QAAQ;AAAA,QACd,MAAM,QAAQ,gBAAgB;AAAA,QAC9B,MAAM,QAAQ,cAAc;AAAA,QAC5B,MAAM,QAAQ,WAAW,IAAI;AAAA,MACjC;AAAA,MACA,SAAS,CAAC,WAAW;AAAA,IACzB,CAAC;AAAA,EACL,SAASC,SAAO;AACZ,YAAQ,MAAM,wCAAwCA,OAAK;AAAA,EAC/D;AACJ;AAGA,SAAS,2BAA2B,SAAyBD,MAAU;AACnE,QAAM,EAAE,UAAAE,WAAU,QAAQ,IAAI;AAG9B,MAAI,gBAAiD;AACrD,MAAIA,YAAW,uBAAuB,SAAS,UAAU;AACrD,oBAAgB;AAAA,EACpB,WAAWA,YAAW,uBAAuB,SAAS,SAAS;AAC3D,oBAAgB;AAAA,EACpB;AAGA,MAAI,WAA4C;AAChD,MAAI,UAAU,uBAAuB,QAAQ,UAAU;AACnD,eAAW;AAAA,EACf,WAAW,UAAU,uBAAuB,QAAQ,SAAS;AACzD,eAAW;AAAA,EACf;AAGA,MAAI,kBAAkB,UAAU,aAAa,QAAQ;AACjD,YAAQ,KAAK,mCAAmC;AAAA,MAC5C,MAAM,QAAQ;AAAA,MACd,UAAU,GAAGA,SAAQ,OAAO,aAAa;AAAA,MACzC,SAAS,GAAG,OAAO,OAAO,QAAQ;AAAA,MAClC,QAAQ,QAAQ;AAAA,IACpB,CAAC;AAAA,EACL;AACJ;AAuCA,eAAsB,qBAClBF,MACA,WACA,SACY;AACZ,MAAI,CAACA,KAAI,UAAW,QAAO;AAC3B,MAAI;AACA,UAAM,SAAS,MAAOA,KAAI,WAAmB,QAAQ;AAAA,MACjD,WAAW,CAAC,UAAU,OAAO,UAAU,GAAG;AAAA,MAC1C,QAAQ,EAAE,OAAO,cAAc;AAAA,MAC/B,cAAc;AAAA,QACV,OAAO,EAAE,OAAO,CAAC,EAAE;AAAA,QACnB,aAAa,EAAE,KAAK,EAAE,OAAO,UAAU,EAAE;AAAA,QACzC,YAAY,EAAE,KAAK,EAAE,OAAO,UAAU,EAAE;AAAA,QACxC,aAAa,EAAE,UAAU,EAAE,OAAO,WAAW,UAAU,KAAK,EAAE;AAAA,QAC9D,YAAY,EAAE,UAAU,EAAE,OAAO,WAAW,UAAU,KAAK,EAAE;AAAA,MACjE;AAAA,MACA,SAAS,UAAU,CAAC,OAAO,cAAc,OAAO,CAAC,EAAE,IAAI;AAAA,IAC3D,CAAC;AACD,WAAO,UAAU;AAAA,EACrB,SAASC,SAAO;AACZ,YAAQ,MAAM,qCAAqCA,OAAK;AACxD,WAAO;AAAA,EACX;AACJ;AAGA,SAAS,cAAc,OAAuB;AAC1C,QAAM,WAAmC;AAAA,IACrC,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,WAAW;AAAA,EACf;AACA,SAAO,SAAS,KAAK,KAAK;AAC9B;AAGA,eAAsB,cAAc,IAAeD,MAAU;AACzD,QAAM,WAAW,YAAY,YAAY;AACrC,QAAI;AAEA,YAAM,UAAU,MAAM,qBAAqBA,MAAK;AAAA,QAC5C,OAAO,IAAI,KAAK,KAAK,IAAI,IAAI,GAAK;AAAA,QAClC,KAAK,oBAAI,KAAK;AAAA,MAClB,CAAC;AAED,UAAI,WAAW,GAAG,eAAe,UAAU,MAAM;AAC7C,WAAG,KAAK,KAAK,UAAU;AAAA,UACnB,MAAM;AAAA,UACN,WAAW,KAAK,IAAI;AAAA,UACpB,MAAM;AAAA,QACV,CAAC,CAAC;AAAA,MACN;AAAA,IACJ,SAASC,SAAO;AACZ,cAAQ,MAAM,6BAA6BA,OAAK;AAAA,IACpD;AAAA,EACJ,GAAG,GAAI;AAGP,KAAG,iBAAiB,SAAS,MAAM;AAC/B,kBAAc,QAAQ;AAAA,EAC1B,CAAC;AACL;AA7SA,IA2CM,wBAcO,qBAkJA;AA3Mb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAE;AA2CA,IAAM,yBAAyB;AAAA,MAC3B,UAAU;AAAA,QACN,MAAM;AAAA;AAAA,QACN,SAAS;AAAA;AAAA,QACT,UAAU;AAAA;AAAA,MACd;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA;AAAA,QACN,SAAS;AAAA;AAAA,QACT,UAAU;AAAA;AAAA,MACd;AAAA,IACJ;AAGO,IAAM,sBAAyC,8BAAO,GAAG,SAAS;AACrE,YAAM,YAAY,KAAK,IAAI;AAC3B,YAAM,WAAY,EAAE,aAAqB,WAAW;AAGpD,YAAM,UAAU,EAAE,IAAI;AACtB,YAAMC,OAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,YAAM,KAAK,QAAQ;AAEnB,UAAI;AAEA,cAAM,KAAK;AAGX,cAAMF,YAAW,KAAK,IAAI,IAAI;AAC9B,cAAM,WAAY,EAAE,aAAqB,WAAW,KAAK;AACzD,cAAM,SAAS,EAAE,IAAI;AAGrB,cAAM,UAA0B;AAAA,UAC5B,QAAQ,QAAQ;AAAA,UAChB,MAAME,KAAI;AAAA,UACV;AAAA,UACA,UAAAF;AAAA,UACA;AAAA,UACA,WAAW,QAAQ,QAAQ,IAAI,YAAY,KAAK;AAAA,UAChD,SAAS,IAAI;AAAA,UACb,MAAM,IAAI;AAAA,UACV,MAAM,IAAI;AAAA,UACV,YAAY,IAAI;AAAA,UAChB,cAAc,IAAI;AAAA,UAClB,aAAa,EAAE,IAAI,QAAQ,IAAI,iBAAiB,KAAK;AAAA,UACrD,UAAU,EAAE,IAAI,QAAQ,IAAI,iBAAiB,MAAM;AAAA,QACvD;AAGA,cAAM,YAAY,EAAE,IAAI,WAAW;AACnC,YAAI,WAAW;AACX,kBAAQ,UAAU,UAAU;AAC5B,kBAAQ,eAAe,UAAU;AACjC,kBAAQ,aAAa,UAAU;AAAA,QACnC;AAGA,YAAI,UAAU,KAAK;AACf,gBAAMD,UAAQ,EAAE,IAAI,OAAO;AAC3B,cAAIA,SAAO;AACP,oBAAQ,QAAQA,QAAM;AACtB,oBAAQ,YAAYA,QAAM,QAAQ;AAAA,UACtC;AAAA,QACJ;AAGA,cAAM,sBAAsB,EAAE,KAAK;AAAA,UAC/B,WAAW,KAAK,IAAI;AAAA,UACpB,MAAM;AAAA,UACN;AAAA,UACA,UAAU;AAAA,YACN,aAAa,EAAE,IAAI;AAAA,YACnB,SAAS,EAAE,IAAI;AAAA,UACnB;AAAA,QACJ,CAAC;AAGD,mCAA2B,SAAS,EAAE,GAAG;AAGzC,UAAE,IAAI,QAAQ,IAAI,iBAAiB;AAAA,UAC/B,WAAW,QAAQ,QAAQ,CAAC,CAAC;AAAA,UAC7B,aAAaC,UAAS,QAAQ,CAAC,CAAC;AAAA,UAChC,IAAI,OAAO,cAAc,GAAG,IAAI,MAAM;AAAA,QAC1C,EAAE,OAAO,OAAO,EAAE,KAAK,IAAI,CAAC;AAAA,MAEhC,SAASD,SAAO;AACZ,gBAAQ,MAAM,+BAA+BA,OAAK;AAAA,MAEtD;AAAA,IACJ,GA7EsD;AAgFvC;AAmCN;AA+BF,IAAM,0BAA6C,8BAAO,GAAG,SAAS;AACzE,UAAI;AACA,cAAM,KAAK;AAAA,MACf,SAASA,SAAY;AAEjB,UAAE,IAAI,SAAS;AAAA,UACX,SAASA,QAAM;AAAA,UACf,MAAMA,QAAM,YAAY;AAAA,UACxB,OAAOA,QAAM;AAAA,QACjB,CAAC;AAGD,cAAM,sBAAsB,EAAE,KAAK;AAAA,UAC/B,WAAW,KAAK,IAAI;AAAA,UACpB,MAAM;AAAA,UACN,SAAS;AAAA,YACL,QAAQ,EAAE,IAAI;AAAA,YACd,MAAM,IAAI,IAAI,EAAE,IAAI,GAAG,EAAE;AAAA,YACzB,QAAQ;AAAA,YACR,UAAU;AAAA,YACV,SAAS;AAAA,YACT,OAAOA,QAAM;AAAA,YACb,WAAWA,QAAM,YAAY;AAAA,UACjC;AAAA,UACA,UAAU;AAAA,YACN,OAAOA,QAAM;AAAA,YACb,aAAa,EAAE,IAAI;AAAA,UACvB;AAAA,QACJ,CAAC;AAGD,cAAMA;AAAA,MACV;AAAA,IACJ,GAjC0D;AAoCpC;AA2Bb;AAUa;AAAA;AAAA;;;AChRtB,eAAsB,MACpB,IACA,KACA,SAAoB,CAAC,GACP;AACd,QAAM,SAAS,MAAM,GAAG,QAAQ,GAAG,EAAE,KAAK,GAAG,MAAM,EAAE,IAAO;AAC5D,SAAO,OAAO,WAAW,CAAC;AAC5B;AAEA,eAAsB,WACpB,IACA,KACA,SAAoB,CAAC,GACF;AACnB,QAAM,OAAO,MAAM,MAAS,IAAI,KAAK,MAAM;AAC3C,SAAO,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI;AACrC;AAEA,eAAsB,QACpB,IACA,KACA,SAAoB,CAAC,GACF;AACnB,SAAO,GAAG,QAAQ,GAAG,EAAE,KAAK,GAAG,MAAM,EAAE,IAAI;AAC7C;AAEA,eAAsB,YACpB,IACA,YACA,SACwB;AACxB,MAAI,cAA6B;AAEjC,QAAM,GAAG;AAAA,IACP,WAAW,IAAI,CAAC,EAAE,KAAK,OAAO,MAAM,GAAG,QAAQ,GAAG,EAAE,KAAK,GAAI,UAAU,CAAC,CAAE,CAAC;AAAA,EAC7E,EAAE,KAAK,CAAC,YAAY;AAClB,QAAI,SAAS;AACX,cAAQ,QAAQ,CAAC,KAAK,UAAU;AAC9B,sBAAc,QAAQ,KAAK,OAAO,WAAW;AAAA,MAC/C,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAED,SAAO;AACT;AAhDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAI;AAIsB;AASA;AASA;AAQA;AAAA;AAAA;;;ACjBf,SAAS,eAAe,WAAqC;AAClE,MAAI,CAAC,WAAW;AACd,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,IAAI;AAAA,IACN;AAAA,EACF;AAEA,QAAM,KAAK,UAAU,YAAY;AAGjC,MAAI,KAAK;AACT,MAAI,GAAG,SAAS,SAAS,GAAG;AAC1B,SAAK;AACL,QAAI,GAAG,SAAS,iBAAiB,EAAG,MAAK;AAAA,aAChC,GAAG,SAAS,gBAAgB,EAAG,MAAK;AAAA,aACpC,GAAG,SAAS,gBAAgB,EAAG,MAAK;AAAA,aACpC,GAAG,SAAS,gBAAgB,EAAG,MAAK;AAAA,EAC/C,WAAW,GAAG,SAAS,UAAU,GAAG;AAClC,SAAK;AACL,UAAM,QAAQ,GAAG,MAAM,uBAAuB;AAC9C,QAAI,OAAO;AACT,WAAK,SAAS,MAAM,CAAC,EAAE,QAAQ,KAAK,GAAG,CAAC;AAAA,IAC1C;AAAA,EACF,WAAW,GAAG,SAAS,SAAS,GAAG;AACjC,SAAK;AACL,UAAM,QAAQ,GAAG,MAAM,qBAAqB;AAC5C,QAAI,OAAO;AACT,WAAK,WAAW,MAAM,CAAC,CAAC;AAAA,IAC1B;AAAA,EACF,WAAW,GAAG,SAAS,QAAQ,KAAK,GAAG,SAAS,MAAM,GAAG;AACvD,SAAK,GAAG,SAAS,MAAM,IAAI,WAAW;AACtC,UAAM,QAAQ,GAAG,MAAM,iBAAiB;AACxC,QAAI,OAAO;AACT,WAAK,GAAG,EAAE,IAAI,MAAM,CAAC,EAAE,QAAQ,KAAK,GAAG,CAAC;AAAA,IAC1C;AAAA,EACF,WAAW,GAAG,SAAS,OAAO,GAAG;AAC/B,SAAK;AAAA,EACP;AAGA,MAAI,UAAU;AACd,MAAIC,WAAU;AAEd,MAAI,GAAG,SAAS,MAAM,GAAG;AACvB,cAAU;AACV,UAAM,QAAQ,GAAG,MAAM,kBAAkB;AACzC,QAAI,MAAO,CAAAA,WAAU,MAAM,CAAC;AAAA,EAC9B,WAAW,GAAG,SAAS,SAAS,KAAK,CAAC,GAAG,SAAS,KAAK,GAAG;AACxD,cAAU;AACV,UAAM,QAAQ,GAAG,MAAM,qBAAqB;AAC5C,QAAI,MAAO,CAAAA,WAAU,MAAM,CAAC;AAAA,EAC9B,WAAW,GAAG,SAAS,SAAS,KAAK,CAAC,GAAG,SAAS,QAAQ,GAAG;AAC3D,cAAU;AACV,UAAM,QAAQ,GAAG,MAAM,sBAAsB;AAC7C,QAAI,MAAO,CAAAA,WAAU,MAAM,CAAC;AAAA,EAC9B,WAAW,GAAG,SAAS,UAAU,GAAG;AAClC,cAAU;AACV,UAAM,QAAQ,GAAG,MAAM,sBAAsB;AAC7C,QAAI,MAAO,CAAAA,WAAU,MAAM,CAAC;AAAA,EAC9B,WAAW,GAAG,SAAS,QAAQ,KAAK,GAAG,SAAS,MAAM,GAAG;AACvD,cAAU;AACV,UAAM,QAAQ,GAAG,MAAM,4BAA4B;AACnD,QAAI,MAAO,CAAAA,WAAU,MAAM,CAAC;AAAA,EAC9B;AAEA,MAAIA,UAAS;AACX,cAAU,GAAG,OAAO,IAAIA,SAAQ,MAAM,GAAG,EAAE,CAAC,CAAC;AAAA,EAC/C;AAGA,MAAI,SAAS;AACb,MAAI,GAAG,SAAS,QAAQ,GAAG;AACzB,aAAS;AAAA,EACX,WAAW,GAAG,SAAS,QAAQ,KAAK,GAAG,SAAS,MAAM,GAAG;AACvD,aAAS;AAAA,EACX;AAGA,QAAM,aAAa,GAAG,OAAO,OAAO,EAAE;AAEtC,SAAO;AAAA,IACL,QAAQ;AAAA,IACR;AAAA,IACA;AAAA,EACF;AACF;AAMO,SAAS,kBAAkB,WAA+D;AAG/F,SAAO;AAAA,IACL,UAAU;AAAA,IACV,aAAa;AAAA,EACf;AACF;AAKO,SAAS,yBAAyB,QAKI;AAO3C,SAAO;AAAA,IACL,YAAY;AAAA,IACZ,QAAQ;AAAA,EACV;AACF;AAtIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAagB;AA6FA;AAYA;AAAA;AAAA;;;ACtHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwDA,SAAS,kBAAkB,OAA2B,UAA0B;AAC9E,MAAI,CAAC,MAAO,QAAO;AACnB,QAAM,SAAS,OAAO,KAAK;AAC3B,MAAI,OAAO,SAAS,MAAM,KAAK,SAAS,GAAG;AACzC,WAAO,KAAK,MAAM,MAAM;AAAA,EAC1B;AACA,SAAO;AACT;AAEA,SAAS,kBAAkBC,MAAkB;AAC3C,SAAO,kBAAkBA,KAAI,0BAA0B,gCAAgC;AACzF;AAEA,SAAS,mBAAmBA,MAAkB;AAC5C,SAAO,kBAAkBA,KAAI,2BAA2B,iCAAiC;AAC3F;AAEA,SAAS,aAAaA,MAAkB;AACtC,SAAOA,KAAI,cAAcA,KAAI,gBAAgB;AAC/C;AAUA,SAAS,kBAAkBA,MAAU,UAAyC;AAC5E,UAAQ,UAAU;AAAA,IAChB,KAAK;AACH,aAAO;AAAA,QACL,UAAU,aAAaA,KAAI,iBAAiB,iBAAiB;AAAA,QAC7D,cAAc,aAAaA,KAAI,qBAAqB,qBAAqB;AAAA,QACzE,aAAa,aAAaA,KAAI,oBAAoB,oBAAoB;AAAA,MACxE;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,UAAU,aAAaA,KAAI,kBAAkB,kBAAkB;AAAA,QAC/D,cAAc,aAAaA,KAAI,sBAAsB,sBAAsB;AAAA,QAC3E,aAAa,aAAaA,KAAI,qBAAqB,qBAAqB;AAAA,MAC1E;AAAA,IACF;AACE,YAAM,IAAI,MAAM,yBAAyB,QAAQ,EAAE;AAAA,EACvD;AACF;AAEA,SAAS,kBAAkB,UAAiC;AAC1D,QAAM,QAAQ,SAAS,YAAY;AACnC,MAAI,UAAU,WAAW,UAAU,UAAU;AAC3C,UAAM,IAAI,MAAM,2BAA2B,QAAQ,EAAE;AAAA,EACvD;AACA,SAAO;AACT;AAEA,eAAe,gBACbA,MACA,UACA,UACA,SACoB;AACpB,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,QAAQ;AAAA,EACX;AAEA,QAAMC,WAAS,oBAAI,KAAK,GAAE,YAAY;AAEtC,MAAI,UAAU;AACZ,UAAM,UAAoB,CAAC;AAC3B,UAAM,SAA4B,CAAC;AAEnC,QAAI,QAAQ,MAAM;AAChB,cAAQ,KAAK,UAAU;AACvB,aAAO,KAAK,QAAQ,IAAI;AAAA,IAC1B;AACA,QAAI,QAAQ,OAAO;AACjB,cAAQ,KAAK,WAAW;AACxB,aAAO,KAAK,QAAQ,KAAK;AAAA,IAC3B;AACA,QAAI,QAAQ,cAAc;AACxB,cAAQ,KAAK,mBAAmB;AAChC,aAAO,KAAK,QAAQ,YAAY;AAAA,IAClC;AAEA,QAAI,QAAQ,SAAS,GAAG;AACtB,cAAQ,KAAK,gBAAgB;AAC7B,aAAO,KAAKA,OAAM;AAClB,aAAO,KAAK,SAAS,OAAO;AAC5B,YAAM,QAAQD,KAAI,IAAI,oBAAoB,QAAQ,KAAK,IAAI,CAAC,sBAAsB,MAAM;AAAA,IAC1F;AAEA,WAAO;AAAA,MACL,GAAG;AAAA,MACH,OAAO,QAAQ,SAAS,SAAS;AAAA,MACjC,MAAM,QAAQ,QAAQ,SAAS;AAAA,MAC/B,eAAe,QAAQ,gBAAgB,SAAS;AAAA,IAClD;AAAA,EACF;AAEA,QAAM,SAAS,OAAO,WAAW;AACjC,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAcA;AAAA,MACE;AAAA,MACA;AAAA,MACA,QAAQ,SAAS;AAAA,MACjB,QAAQ,QAAQ;AAAA,MAChB,QAAQ,gBAAgB;AAAA,MACxB,SAAS,YAAY;AAAA,MACrBC;AAAA,MACAA;AAAA,MACAA;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AAAA,IACL,SAAS;AAAA,IACT,eAAe;AAAA,IACf,OAAO,QAAQ,SAAS;AAAA,IACxB,MAAM,QAAQ,QAAQ;AAAA,IACtB,cAAc;AAAA,IACd,eAAe,QAAQ,gBAAgB;AAAA,IACvC,UAAU;AAAA,IACV,QAAQ;AAAA,EACV;AACF;AAEA,eAAe,YAAY,SAAuG;AAChI,QAAM;AAAA,IACJ,KAAAD;AAAA,IACA;AAAA,IACA,OAAAE;AAAA,IACA,OAAO;AAAA,IACP,cAAc,CAAC;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AAEJ,QAAM,SAAS,aAAaF,KAAI,YAAY,YAAY;AACxD,QAAM,iBAAiB,kBAAkBA,IAAG;AAC5C,QAAM,kBAAkB,mBAAmBA,IAAG;AAC9C,QAAM,SAAS,aAAaA,IAAG;AAC/B,QAAM,aAAa,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AAC/C,QAAM,mBAAmB,aAAa;AAEtC,QAAM,UAAU;AAAA,IACd,KAAK;AAAA,IACL,OAAAE;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,EACP;AAEA,QAAM,cAAc,MAAMC,MAAK,SAAS,QAAQ,OAAO;AAEvD,QAAM,YAAY,OAAO,WAAW;AACpC,QAAM,iBAAiB;AAAA,IACrB,KAAK;AAAA,IACL,KAAK;AAAA,IACL,MAAM;AAAA,IACN,KAAK;AAAA,IACL,KAAK,aAAa;AAAA,IAClB,KAAK;AAAA,EACP;AACA,QAAM,eAAe,MAAMA,MAAK,gBAAgB,QAAQ,OAAO;AAC/D,QAAM,cAAc,MAAM,WAAW,YAAY;AACjD,QAAM,cAAc,IAAI,KAAK,aAAa,GAAI,EAAE,YAAY;AAC5D,QAAM,sBAAsB,IAAI,MAAM,aAAa,mBAAmB,GAAI,EAAE,YAAY;AAGxF,QAAM,WAAW,eAAe,SAAS;AACzC,QAAM,eAAe,kBAAkB,SAAS;AAChD,QAAM,kBAAkB,yBAAyB;AAAA,IAC/C;AAAA,IACA;AAAA,EACF,CAAC;AAED,QAAM,YAAYH,KAAI,IAAI;AAAA,IACxB,GAAI,iBACA;AAAA,MACE;AAAA,QACE,KAAK;AAAA,QACL,QAAQ,CAAC,aAAa,cAAc;AAAA,MACtC;AAAA,IACF,IACA,CAAC;AAAA,IACL;AAAA,MACE,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASL,QAAQ,CAAC,WAAW,QAAQ,aAAa,aAAa,qBAAqB,aAAa,MAAM,aAAa,IAAI;AAAA,IACjH;AAAA;AAAA,IAEA;AAAA,MACE,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcL,QAAQ;AAAA,QACN;AAAA,QACA;AAAA,QACA,aAAa;AAAA,QACb,aAAa;AAAA,QACb,SAAS;AAAA,QACT,SAAS;AAAA,QACT,aAAa;AAAA,QACb,aAAa;AAAA,QACb,gBAAgB,aAAa,IAAI;AAAA,QACjC,gBAAgB,UAAU;AAAA,QAC1B;AAAA,QACA;AAAA;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,WAAW;AAAA,EACb;AACF;AAEA,eAAe,YAAYA,MAAU,QAA2C;AAC9E,SAAO;AAAA,IACLA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AACF;AAEA,SAAS,oBAAoB,KAA0B;AACrD,SAAO;AAAA,IACL,IAAI,IAAI;AAAA,IACR,OAAO,IAAI,SAAS;AAAA,IACpB,MAAM;AAAA,IACN,aAAa,CAAC;AAAA,EAChB;AACF;AAEA,eAAe,aAAaA,MAAU,OAA8C;AAClF,MAAI,CAAC,OAAO;AACV,WAAO;AAAA,EACT;AACA,QAAM,MAAM,eAAe,KAAK;AAChC,QAAM,QAAQ,MAAMA,KAAI,MAAM,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC;AACvD,MAAI,OAAO;AACT,UAAMA,KAAI,MAAM,OAAO,GAAG;AAAA,EAC5B;AACA,SAAO;AACT;AAEA,eAAsB,iBACpBA,MACA,cACA,aACyC;AACzC,QAAM,WAAW,kBAAkB,YAAY;AAC/C,QAAMI,UAAS,kBAAkBJ,MAAK,QAAQ;AAC9C,QAAM,QAAQ,cAAc,QAAQ;AAIpC,QAAM,eAAe,eAAe;AACpC,QAAM,eAAe,MAAM;AACzB,QAAI;AACF,aAAO,IAAI,IAAI,sBAAsB,QAAQ,IAAI,YAAY,EAAE,SAAS;AAAA,IAC1E,QAAQ;AACN,aAAO,6CAA6C,QAAQ;AAAA,IAC9D;AAAA,EACF,GAAG;AAEH,QAAM,eAA6B;AAAA,IACjC;AAAA,IACA,aAAa;AAAA;AAAA,IACb;AAAA,IACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,EACpC;AAEA,QAAMA,KAAI,MAAM,IAAI,eAAe,KAAK,IAAI,KAAK,UAAU,YAAY,GAAG;AAAA,IACxE,eAAe;AAAA,EACjB,CAAC;AAED,QAAM,eAAe,IAAI,IAAI,aAAa,UAAU,sBAAsB,oBAAoB;AAC9F,eAAa,aAAa,IAAI,iBAAiB,MAAM;AACrD,eAAa,aAAa,IAAI,aAAaI,QAAO,QAAQ;AAC1D,eAAa,aAAa,IAAI,gBAAgBA,QAAO,WAAW;AAChE,eAAa,aAAa,IAAI,SAAS,KAAK;AAE5C,MAAI,aAAa,UAAU;AACzB,iBAAa,aAAa,IAAI,SAAS,sBAAsB;AAC7D,iBAAa,aAAa,IAAI,eAAe,SAAS;AACtD,iBAAa,aAAa,IAAI,UAAU,SAAS;AAAA,EACnD;AAEA,SAAO;AAAA,IACL,KAAK,aAAa,SAAS;AAAA,IAC3B;AAAA,EACF;AACF;AAEA,eAAsB,oBACpBJ,MACA,cACA,QACA,WAAuD,CAAC,GAC1B;AAC9B,QAAM,WAAW,kBAAkB,YAAY;AAC/C,QAAMI,UAAS,kBAAkBJ,MAAK,QAAQ;AAC9C,QAAM,eAAe,MAAM,aAAaA,MAAK,OAAO,KAAK;AAGzD,QAAM,mBAAmB,cAAc,eAAe;AACtD,QAAM,cAAc,cAAc,gBAAgB,MAAM;AACtD,QAAI;AACF,aAAO,IAAI,IAAI,sBAAsB,QAAQ,IAAI,gBAAgB,EAAE,SAAS;AAAA,IAC9E,QAAQ;AACN,aAAO,6CAA6C,QAAQ;AAAA,IAC9D;AAAA,EACF,GAAG;AAEH,MAAI,gBAAgB,aAAa,aAAa,UAAU;AACtD,UAAM,IAAI,MAAM,4CAA4C;AAAA,EAC9D;AAGA,QAAM,SAAS,aAAa,UACxB,MAAM,oBAAoBA,MAAKI,SAAQ,OAAO,MAAM,OAAO,OAAOA,QAAO,aAAa,QAAQ,IAC9F,MAAM,qBAAqBJ,MAAKI,SAAQ,OAAO,MAAMA,QAAO,aAAa,QAAQ;AAErF,SAAO;AAAA,IACL,GAAG;AAAA,IACH,aAAa;AAAA,IACb;AAAA,EACF;AACF;AAEA,eAAe,oBACbJ,MACAI,SACA,MACA,OACA,aACA,UAC8B;AAC9B,QAAM,OAAO,IAAI,gBAAgB;AAAA,IAC/B,YAAY;AAAA,IACZ,WAAWA,QAAO;AAAA,IAClB,eAAeA,QAAO;AAAA,IACtB;AAAA,IACA,OAAO,SAAS;AAAA,IAChB,cAAc;AAAA,EAChB,CAAC;AAED,QAAM,WAAW,MAAM,MAAM,iBAAiB;AAAA,IAC5C,QAAQ;AAAA,IACR,SAAS,EAAE,gBAAgB,oCAAoC;AAAA,IAC/D;AAAA,EACF,CAAC;AAED,MAAI,CAAC,SAAS,IAAI;AAChB,UAAM,IAAI,MAAM,gCAAgC,SAAS,MAAM,EAAE;AAAA,EACnE;AAEA,QAAM,YAAY,MAAM,SAAS,KAAK;AACtC,QAAM,cAAc,UAAU;AAC9B,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,MAAM,oDAAoD;AAAA,EACtE;AAEA,QAAM,aAAa,MAAM,MAAM,oBAAoB;AAAA,IACjD,SAAS;AAAA,MACP,eAAe,UAAU,WAAW;AAAA,IACtC;AAAA,EACF,CAAC;AAED,MAAI,CAAC,WAAW,IAAI;AAClB,UAAM,IAAI,MAAM,kCAAkC,WAAW,MAAM,EAAE;AAAA,EACvE;AAEA,QAAM,cAAc,MAAM,WAAW,KAAK;AAC1C,QAAM,WAAW,YAAY,YAAY,CAAC;AAC1C,QAAM,WAAW,SAAS;AAE1B,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,MAAM,mCAAmC;AAAA,EACrD;AAEA,QAAM,UAAU,MAAM,gBAAgBJ,MAAK,UAAU,SAAS;AAAA,IAC5D,MAAM,SAAS,QAAQ,SAAS,YAAY;AAAA,IAC5C,OAAO,SAAS,SAAS;AAAA,IACzB,cAAc,SAAS,iBAAiB;AAAA,EAC1C,CAAC;AAED,QAAM,SAAS,MAAM,YAAY;AAAA,IAC/B,KAAAA;AAAA,IACA,QAAQ,QAAQ;AAAA,IAChB,OAAO,QAAQ;AAAA,IACf,MAAM;AAAA,IACN,aAAa,CAAC;AAAA,IACd,WAAW,SAAS;AAAA,IACpB,WAAW,SAAS;AAAA,EACtB,CAAC;AAED,SAAO;AAAA,IACL,MAAM,oBAAoB,OAAO;AAAA,IACjC,aAAa,OAAO;AAAA,IACpB,cAAc,OAAO;AAAA,IACrB,WAAW,OAAO;AAAA,IAClB;AAAA,EACF;AACF;AAEA,eAAe,qBACbA,MACAI,SACA,MACA,aACA,UAC8B;AAC9B,QAAM,OAAO,IAAI,gBAAgB;AAAA,IAC/B,YAAY;AAAA,IACZ,WAAWA,QAAO;AAAA,IAClB,eAAeA,QAAO;AAAA,IACtB;AAAA,IACA,cAAc;AAAA,EAChB,CAAC;AAED,QAAM,WAAW,MAAM,MAAM,kBAAkB;AAAA,IAC7C,QAAQ;AAAA,IACR,SAAS,EAAE,gBAAgB,oCAAoC;AAAA,IAC/D;AAAA,EACF,CAAC;AAED,MAAI,CAAC,SAAS,IAAI;AAChB,UAAM,IAAI,MAAM,iCAAiC,SAAS,MAAM,EAAE;AAAA,EACpE;AAEA,QAAM,YAAY,MAAM,SAAS,KAAK;AACtC,QAAM,cAAc,UAAU;AAE9B,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,MAAM,qDAAqD;AAAA,EACvE;AAEA,QAAM,aAAa,MAAM,MAAM,qBAAqB;AAAA,IAClD,SAAS;AAAA,MACP,eAAe,UAAU,WAAW;AAAA,IACtC;AAAA,EACF,CAAC;AAED,MAAI,CAAC,WAAW,IAAI;AAClB,UAAM,IAAI,MAAM,mCAAmC,WAAW,MAAM,EAAE;AAAA,EACxE;AAEA,QAAM,cAAc,MAAM,WAAW,KAAK;AAC1C,MAAI,CAAC,YAAY,IAAI;AACnB,UAAM,IAAI,MAAM,oCAAoC;AAAA,EACtD;AAEA,QAAM,UAAU,MAAM,gBAAgBJ,MAAK,YAAY,IAAI,UAAU;AAAA,IACnE,MAAM,YAAY,QAAQ;AAAA,IAC1B,OAAO,YAAY,SAAS;AAAA,IAC5B,cAAc,YAAY,WAAW;AAAA,EACvC,CAAC;AAED,QAAM,SAAS,MAAM,YAAY;AAAA,IAC/B,KAAAA;AAAA,IACA,QAAQ,QAAQ;AAAA,IAChB,OAAO,QAAQ;AAAA,IACf,MAAM;AAAA,IACN,aAAa,CAAC;AAAA,IACd,WAAW,SAAS;AAAA,IACpB,WAAW,SAAS;AAAA,EACtB,CAAC;AAED,SAAO;AAAA,IACL,MAAM,oBAAoB,OAAO;AAAA,IACjC,aAAa,OAAO;AAAA,IACpB,cAAc,OAAO;AAAA,IACrB,WAAW,OAAO;AAAA,IAClB;AAAA,EACF;AACF;AAEA,eAAsB,cACpBA,MACA,cACA,WAAuD,CAAC,GACmB;AAC3E,QAAM,cAAc,MAAM,WAAW,YAAY;AACjD,QAAM,MAAM,MAAM;AAAA,IAMhBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,WAAW;AAAA,EACd;AAEA,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,MAAM,uBAAuB;AAAA,EACzC;AAEA,MAAI,IAAI,YAAY;AAClB,UAAM,IAAI,MAAM,uBAAuB;AAAA,EACzC;AAEA,MAAI,KAAK,MAAM,IAAI,UAAU,IAAI,KAAK,IAAI,GAAG;AAC3C,UAAM,IAAI,MAAM,uBAAuB;AAAA,EACzC;AAEA,QAAM,OAAO,MAAM,YAAYA,MAAK,IAAI,OAAO;AAC/C,MAAI,CAAC,MAAM;AACT,UAAM,IAAI,MAAM,kCAAkC;AAAA,EACpD;AAEA,SAAO,YAAY;AAAA,IACjB,KAAAA;AAAA,IACA,QAAQ,KAAK;AAAA,IACb,OAAO,KAAK;AAAA,IACZ,MAAM;AAAA,IACN,aAAa,CAAC;AAAA,IACd,WAAW,SAAS;AAAA,IACpB,WAAW,SAAS;AAAA,IACpB,gBAAgB,IAAI;AAAA,EACtB,CAAC;AACH;AAEA,eAAsB,WACpBA,MACA,cACA,cACe;AACf,MAAI,CAAC,cAAc;AACjB;AAAA,EACF;AAEA,QAAM,cAAc,MAAM,WAAW,YAAY;AACjD,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,IACA,EAAC,oBAAI,KAAK,GAAE,YAAY,GAAG,WAAW;AAAA,EACxC;AACF;AA7nBA,IAqDM,kCACA,mCAuBA,qBACA,iBACA,oBAEA,sBACA,kBACA;AAnFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAK;AAAA,IAAAC;AAGA;AACA;AACA;AAgDA,IAAM,mCAAmC,KAAK,KAAK;AACnD,IAAM,oCAAoC,IAAI,KAAK,KAAK;AAE/C;AASA;AAIA;AAIA;AAIT,IAAM,sBAAsB;AAC5B,IAAM,kBAAkB;AACxB,IAAM,qBAAqB;AAE3B,IAAM,uBAAuB;AAC7B,IAAM,mBAAmB;AACzB,IAAM,sBAAsB;AAEnB;AAmBA;AAQM;AAwFA;AAkHA;AAQN;AASM;AAYO;AAiDA;AAoCP;AA4EA;AAwEO;AA8CA;AAAA;AAAA;;;AC9mBtB;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;AACA,IAAI,UAAU,wBAAC,YAAY,SAAS,eAAe;AACjD,SAAO,CAACC,UAAS,SAAS;AACxB,QAAI,QAAQ;AACZ,WAAO,SAAS,CAAC;AACjB,mBAAe,SAAS,GAAG;AACzB,UAAI,KAAK,OAAO;AACd,cAAM,IAAI,MAAM,8BAA8B;AAAA,MAChD;AACA,cAAQ;AACR,UAAI;AACJ,UAAI,UAAU;AACd,UAAI;AACJ,UAAI,WAAW,CAAC,GAAG;AACjB,kBAAU,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC;AAC5B,QAAAA,SAAQ,IAAI,aAAa;AAAA,MAC3B,OAAO;AACL,kBAAU,MAAM,WAAW,UAAU,QAAQ;AAAA,MAC/C;AACA,UAAI,SAAS;AACX,YAAI;AACF,gBAAM,MAAM,QAAQA,UAAS,MAAM,SAAS,IAAI,CAAC,CAAC;AAAA,QACpD,SAAS,KAAK;AACZ,cAAI,eAAe,SAAS,SAAS;AACnC,YAAAA,SAAQ,QAAQ;AAChB,kBAAM,MAAM,QAAQ,KAAKA,QAAO;AAChC,sBAAU;AAAA,UACZ,OAAO;AACL,kBAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF,OAAO;AACL,YAAIA,SAAQ,cAAc,SAAS,YAAY;AAC7C,gBAAM,MAAM,WAAWA,QAAO;AAAA,QAChC;AAAA,MACF;AACA,UAAI,QAAQA,SAAQ,cAAc,SAAS,UAAU;AACnD,QAAAA,SAAQ,MAAM;AAAA,MAChB;AACA,aAAOA;AAAA,IACT;AAnCe;AAAA,EAoCjB;AACF,GAzCc;;;ADCd;;;AEFA;AAAA;AAAA;AAAAC;AACA,IAAI,kBAAkB;AACtB,IAAI,4BAA4B;AAChC,IAAI,UAAU,CAAC,OAAO,QAAQ,OAAO,UAAU,WAAW,OAAO;AACjE,IAAI,mCAAmC;AACvC,IAAI,uBAAuB,cAAc,MAAM;AAAA,EAL/C,OAK+C;AAAA;AAAA;AAC/C;;;ACNA;AAAA;AAAA;AAAAC;AACA,IAAI,mBAAmB;;;AHIvB;AACA,IAAI,kBAAkB,wBAAC,MAAM;AAC3B,SAAO,EAAE,KAAK,iBAAiB,GAAG;AACpC,GAFsB;AAGtB,IAAI,eAAe,wBAAC,KAAK,MAAM;AAC7B,MAAI,iBAAiB,KAAK;AACxB,UAAM,MAAM,IAAI,YAAY;AAC5B,WAAO,EAAE,YAAY,IAAI,MAAM,GAAG;AAAA,EACpC;AACA,UAAQ,MAAM,GAAG;AACjB,SAAO,EAAE,KAAK,yBAAyB,GAAG;AAC5C,GAPmB;AAQnB,IAAI,OAAO,MAAM;AAAA,EAjBjB,OAiBiB;AAAA;AAAA;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,SAAS,CAAC;AAAA,EACV,YAAY,UAAU,CAAC,GAAG;AACxB,UAAM,aAAa,CAAC,GAAG,SAAS,yBAAyB;AACzD,eAAW,QAAQ,CAAC,WAAW;AAC7B,WAAK,MAAM,IAAI,CAAC,UAAU,SAAS;AACjC,YAAI,OAAO,UAAU,UAAU;AAC7B,eAAK,QAAQ;AAAA,QACf,OAAO;AACL,eAAK,UAAU,QAAQ,KAAK,OAAO,KAAK;AAAA,QAC1C;AACA,aAAK,QAAQ,CAAC,YAAY;AACxB,eAAK,UAAU,QAAQ,KAAK,OAAO,OAAO;AAAA,QAC5C,CAAC;AACD,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AACD,SAAK,KAAK,CAAC,QAAQ,SAAS,aAAa;AACvC,iBAAW,KAAK,CAAC,IAAI,EAAE,KAAK,GAAG;AAC7B,aAAK,QAAQ;AACb,mBAAW,KAAK,CAAC,MAAM,EAAE,KAAK,GAAG;AAC/B,mBAAS,IAAI,CAAC,YAAY;AACxB,iBAAK,UAAU,EAAE,YAAY,GAAG,KAAK,OAAO,OAAO;AAAA,UACrD,CAAC;AAAA,QACH;AAAA,MACF;AACA,aAAO;AAAA,IACT;AACA,SAAK,MAAM,CAAC,SAAS,aAAa;AAChC,UAAI,OAAO,SAAS,UAAU;AAC5B,aAAK,QAAQ;AAAA,MACf,OAAO;AACL,aAAK,QAAQ;AACb,iBAAS,QAAQ,IAAI;AAAA,MACvB;AACA,eAAS,QAAQ,CAAC,YAAY;AAC5B,aAAK,UAAU,iBAAiB,KAAK,OAAO,OAAO;AAAA,MACrD,CAAC;AACD,aAAO;AAAA,IACT;AACA,UAAM,EAAE,QAAQ,GAAG,qBAAqB,IAAI;AAC5C,WAAO,OAAO,MAAM,oBAAoB;AACxC,SAAK,UAAU,UAAU,OAAO,QAAQ,WAAW,UAAU;AAAA,EAC/D;AAAA,EACA,SAAS;AACP,UAAMC,SAAQ,IAAI,KAAK;AAAA,MACrB,QAAQ,KAAK;AAAA,MACb,SAAS,KAAK;AAAA,IAChB,CAAC;AACD,IAAAA,OAAM,eAAe,KAAK;AAC1B,IAAAA,OAAM,mBAAmB,KAAK;AAC9B,IAAAA,OAAM,SAAS,KAAK;AACpB,WAAOA;AAAA,EACT;AAAA,EACA,mBAAmB;AAAA,EACnB,eAAe;AAAA,EACf,MAAM,MAAMC,MAAK;AACf,UAAM,SAAS,KAAK,SAAS,IAAI;AACjC,IAAAA,KAAI,OAAO,IAAI,CAAC,MAAM;AACpB,UAAI;AACJ,UAAIA,KAAI,iBAAiB,cAAc;AACrC,kBAAU,EAAE;AAAA,MACd,OAAO;AACL,kBAAU,8BAAO,GAAG,UAAU,MAAM,QAAQ,CAAC,GAAGA,KAAI,YAAY,EAAE,GAAG,MAAM,EAAE,QAAQ,GAAG,IAAI,CAAC,GAAG,KAAtF;AACV,gBAAQ,gBAAgB,IAAI,EAAE;AAAA,MAChC;AACA,aAAO,UAAU,EAAE,QAAQ,EAAE,MAAM,OAAO;AAAA,IAC5C,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,SAAS,MAAM;AACb,UAAM,SAAS,KAAK,OAAO;AAC3B,WAAO,YAAY,UAAU,KAAK,WAAW,IAAI;AACjD,WAAO;AAAA,EACT;AAAA,EACA,UAAU,wBAAC,YAAY;AACrB,SAAK,eAAe;AACpB,WAAO;AAAA,EACT,GAHU;AAAA,EAIV,WAAW,wBAAC,YAAY;AACtB,SAAK,mBAAmB;AACxB,WAAO;AAAA,EACT,GAHW;AAAA,EAIX,MAAM,MAAM,oBAAoB,SAAS;AACvC,QAAI;AACJ,QAAI;AACJ,QAAI,SAAS;AACX,UAAI,OAAO,YAAY,YAAY;AACjC,wBAAgB;AAAA,MAClB,OAAO;AACL,wBAAgB,QAAQ;AACxB,YAAI,QAAQ,mBAAmB,OAAO;AACpC,2BAAiB,wBAAC,YAAY,SAAb;AAAA,QACnB,OAAO;AACL,2BAAiB,QAAQ;AAAA,QAC3B;AAAA,MACF;AAAA,IACF;AACA,UAAM,aAAa,gBAAgB,CAAC,MAAM;AACxC,YAAM,WAAW,cAAc,CAAC;AAChC,aAAO,MAAM,QAAQ,QAAQ,IAAI,WAAW,CAAC,QAAQ;AAAA,IACvD,IAAI,CAAC,MAAM;AACT,UAAI,mBAAmB;AACvB,UAAI;AACF,2BAAmB,EAAE;AAAA,MACvB,QAAQ;AAAA,MACR;AACA,aAAO,CAAC,EAAE,KAAK,gBAAgB;AAAA,IACjC;AACA,wBAAoB,MAAM;AACxB,YAAM,aAAa,UAAU,KAAK,WAAW,IAAI;AACjD,YAAM,mBAAmB,eAAe,MAAM,IAAI,WAAW;AAC7D,aAAO,CAAC,YAAY;AAClB,cAAMC,OAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAAA,KAAI,WAAWA,KAAI,SAAS,MAAM,gBAAgB,KAAK;AACvD,eAAO,IAAI,QAAQA,MAAK,OAAO;AAAA,MACjC;AAAA,IACF,GAAG;AACH,UAAM,UAAU,8BAAO,GAAG,SAAS;AACjC,YAAM,MAAM,MAAM,mBAAmB,eAAe,EAAE,IAAI,GAAG,GAAG,GAAG,WAAW,CAAC,CAAC;AAChF,UAAI,KAAK;AACP,eAAO;AAAA,MACT;AACA,YAAM,KAAK;AAAA,IACb,GANgB;AAOhB,SAAK,UAAU,iBAAiB,UAAU,MAAM,GAAG,GAAG,OAAO;AAC7D,WAAO;AAAA,EACT;AAAA,EACA,UAAU,QAAQ,MAAM,SAAS;AAC/B,aAAS,OAAO,YAAY;AAC5B,WAAO,UAAU,KAAK,WAAW,IAAI;AACrC,UAAM,IAAI,EAAE,UAAU,KAAK,WAAW,MAAM,QAAQ,QAAQ;AAC5D,SAAK,OAAO,IAAI,QAAQ,MAAM,CAAC,SAAS,CAAC,CAAC;AAC1C,SAAK,OAAO,KAAK,CAAC;AAAA,EACpB;AAAA,EACA,aAAa,KAAK,GAAG;AACnB,QAAI,eAAe,OAAO;AACxB,aAAO,KAAK,aAAa,KAAK,CAAC;AAAA,IACjC;AACA,UAAM;AAAA,EACR;AAAA,EACA,UAAU,SAAS,cAAcC,MAAK,QAAQ;AAC5C,QAAI,WAAW,QAAQ;AACrB,cAAQ,YAAY,IAAI,SAAS,MAAM,MAAM,KAAK,UAAU,SAAS,cAAcA,MAAK,KAAK,CAAC,GAAG;AAAA,IACnG;AACA,UAAM,OAAO,KAAK,QAAQ,SAAS,EAAE,KAAAA,KAAI,CAAC;AAC1C,UAAM,cAAc,KAAK,OAAO,MAAM,QAAQ,IAAI;AAClD,UAAM,IAAI,IAAI,QAAQ,SAAS;AAAA,MAC7B;AAAA,MACA;AAAA,MACA,KAAAA;AAAA,MACA;AAAA,MACA,iBAAiB,KAAK;AAAA,IACxB,CAAC;AACD,QAAI,YAAY,CAAC,EAAE,WAAW,GAAG;AAC/B,UAAI;AACJ,UAAI;AACF,cAAM,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,YAAY;AAC3C,YAAE,MAAM,MAAM,KAAK,iBAAiB,CAAC;AAAA,QACvC,CAAC;AAAA,MACH,SAAS,KAAK;AACZ,eAAO,KAAK,aAAa,KAAK,CAAC;AAAA,MACjC;AACA,aAAO,eAAe,UAAU,IAAI;AAAA,QAClC,CAAC,aAAa,aAAa,EAAE,YAAY,EAAE,MAAM,KAAK,iBAAiB,CAAC;AAAA,MAC1E,EAAE,MAAM,CAAC,QAAQ,KAAK,aAAa,KAAK,CAAC,CAAC,IAAI,OAAO,KAAK,iBAAiB,CAAC;AAAA,IAC9E;AACA,UAAM,WAAW,QAAQ,YAAY,CAAC,GAAG,KAAK,cAAc,KAAK,gBAAgB;AACjF,YAAQ,YAAY;AAClB,UAAI;AACF,cAAMC,WAAU,MAAM,SAAS,CAAC;AAChC,YAAI,CAACA,SAAQ,WAAW;AACtB,gBAAM,IAAI;AAAA,YACR;AAAA,UACF;AAAA,QACF;AACA,eAAOA,SAAQ;AAAA,MACjB,SAAS,KAAK;AACZ,eAAO,KAAK,aAAa,KAAK,CAAC;AAAA,MACjC;AAAA,IACF,GAAG;AAAA,EACL;AAAA,EACA,QAAQ,wBAAC,YAAY,SAAS;AAC5B,WAAO,KAAK,UAAU,SAAS,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,QAAQ,MAAM;AAAA,EACjE,GAFQ;AAAA,EAGR,UAAU,wBAAC,OAAO,aAAa,KAAK,iBAAiB;AACnD,QAAI,iBAAiB,SAAS;AAC5B,aAAO,KAAK,MAAM,cAAc,IAAI,QAAQ,OAAO,WAAW,IAAI,OAAO,KAAK,YAAY;AAAA,IAC5F;AACA,YAAQ,MAAM,SAAS;AACvB,WAAO,KAAK;AAAA,MACV,IAAI;AAAA,QACF,eAAe,KAAK,KAAK,IAAI,QAAQ,mBAAmB,UAAU,KAAK,KAAK,CAAC;AAAA,QAC7E;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF,GAbU;AAAA,EAcV,OAAO,6BAAM;AACX,qBAAiB,SAAS,CAAC,UAAU;AACnC,YAAM,YAAY,KAAK,UAAU,MAAM,SAAS,OAAO,QAAQ,MAAM,QAAQ,MAAM,CAAC;AAAA,IACtF,CAAC;AAAA,EACH,GAJO;AAKT;;;AI1OA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;AAMA;;;ACNA;AAAA;AAAA;AAAAC;AACA,IAAI,oBAAoB;AACxB,IAAI,4BAA4B;AAChC,IAAI,4BAA4B;AAChC,IAAI,aAAa,OAAO;AACxB,IAAI,kBAAkB,IAAI,IAAI,aAAa;AAC3C,SAAS,WAAW,GAAG,GAAG;AACxB,MAAI,EAAE,WAAW,GAAG;AAClB,WAAO,EAAE,WAAW,IAAI,IAAI,IAAI,KAAK,IAAI;AAAA,EAC3C;AACA,MAAI,EAAE,WAAW,GAAG;AAClB,WAAO;AAAA,EACT;AACA,MAAI,MAAM,6BAA6B,MAAM,2BAA2B;AACtE,WAAO;AAAA,EACT,WAAW,MAAM,6BAA6B,MAAM,2BAA2B;AAC7E,WAAO;AAAA,EACT;AACA,MAAI,MAAM,mBAAmB;AAC3B,WAAO;AAAA,EACT,WAAW,MAAM,mBAAmB;AAClC,WAAO;AAAA,EACT;AACA,SAAO,EAAE,WAAW,EAAE,SAAS,IAAI,IAAI,KAAK,IAAI,EAAE,SAAS,EAAE;AAC/D;AAlBS;AAmBT,IAAI,OAAO,MAAM;AAAA,EAzBjB,OAyBiB;AAAA;AAAA;AAAA,EACf;AAAA,EACA;AAAA,EACA,YAA4B,uBAAO,OAAO,IAAI;AAAA,EAC9C,OAAO,QAAQ,OAAO,UAAUC,UAAS,oBAAoB;AAC3D,QAAI,OAAO,WAAW,GAAG;AACvB,UAAI,KAAK,WAAW,QAAQ;AAC1B,cAAM;AAAA,MACR;AACA,UAAI,oBAAoB;AACtB;AAAA,MACF;AACA,WAAK,SAAS;AACd;AAAA,IACF;AACA,UAAM,CAAC,OAAO,GAAG,UAAU,IAAI;AAC/B,UAAM,UAAU,UAAU,MAAM,WAAW,WAAW,IAAI,CAAC,IAAI,IAAI,yBAAyB,IAAI,CAAC,IAAI,IAAI,iBAAiB,IAAI,UAAU,OAAO,CAAC,IAAI,IAAI,yBAAyB,IAAI,MAAM,MAAM,6BAA6B;AAC9N,QAAI;AACJ,QAAI,SAAS;AACX,YAAM,OAAO,QAAQ,CAAC;AACtB,UAAI,YAAY,QAAQ,CAAC,KAAK;AAC9B,UAAI,QAAQ,QAAQ,CAAC,GAAG;AACtB,YAAI,cAAc,MAAM;AACtB,gBAAM;AAAA,QACR;AACA,oBAAY,UAAU,QAAQ,0BAA0B,KAAK;AAC7D,YAAI,YAAY,KAAK,SAAS,GAAG;AAC/B,gBAAM;AAAA,QACR;AAAA,MACF;AACA,aAAO,KAAK,UAAU,SAAS;AAC/B,UAAI,CAAC,MAAM;AACT,YAAI,OAAO,KAAK,KAAK,SAAS,EAAE;AAAA,UAC9B,CAAC,MAAM,MAAM,6BAA6B,MAAM;AAAA,QAClD,GAAG;AACD,gBAAM;AAAA,QACR;AACA,YAAI,oBAAoB;AACtB;AAAA,QACF;AACA,eAAO,KAAK,UAAU,SAAS,IAAI,IAAI,KAAK;AAC5C,YAAI,SAAS,IAAI;AACf,eAAK,YAAYA,SAAQ;AAAA,QAC3B;AAAA,MACF;AACA,UAAI,CAAC,sBAAsB,SAAS,IAAI;AACtC,iBAAS,KAAK,CAAC,MAAM,KAAK,SAAS,CAAC;AAAA,MACtC;AAAA,IACF,OAAO;AACL,aAAO,KAAK,UAAU,KAAK;AAC3B,UAAI,CAAC,MAAM;AACT,YAAI,OAAO,KAAK,KAAK,SAAS,EAAE;AAAA,UAC9B,CAAC,MAAM,EAAE,SAAS,KAAK,MAAM,6BAA6B,MAAM;AAAA,QAClE,GAAG;AACD,gBAAM;AAAA,QACR;AACA,YAAI,oBAAoB;AACtB;AAAA,QACF;AACA,eAAO,KAAK,UAAU,KAAK,IAAI,IAAI,KAAK;AAAA,MAC1C;AAAA,IACF;AACA,SAAK,OAAO,YAAY,OAAO,UAAUA,UAAS,kBAAkB;AAAA,EACtE;AAAA,EACA,iBAAiB;AACf,UAAM,YAAY,OAAO,KAAK,KAAK,SAAS,EAAE,KAAK,UAAU;AAC7D,UAAM,UAAU,UAAU,IAAI,CAAC,MAAM;AACnC,YAAM,IAAI,KAAK,UAAU,CAAC;AAC1B,cAAQ,OAAO,EAAE,cAAc,WAAW,IAAI,CAAC,KAAK,EAAE,SAAS,KAAK,gBAAgB,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,eAAe;AAAA,IAChI,CAAC;AACD,QAAI,OAAO,KAAK,WAAW,UAAU;AACnC,cAAQ,QAAQ,IAAI,KAAK,MAAM,EAAE;AAAA,IACnC;AACA,QAAI,QAAQ,WAAW,GAAG;AACxB,aAAO;AAAA,IACT;AACA,QAAI,QAAQ,WAAW,GAAG;AACxB,aAAO,QAAQ,CAAC;AAAA,IAClB;AACA,WAAO,QAAQ,QAAQ,KAAK,GAAG,IAAI;AAAA,EACrC;AACF;;;AC1GA;AAAA;AAAA;AAAAC;AAEA,IAAI,OAAO,MAAM;AAAA,EAFjB,OAEiB;AAAA;AAAA;AAAA,EACf,WAAW,EAAE,UAAU,EAAE;AAAA,EACzB,QAAQ,IAAI,KAAK;AAAA,EACjB,OAAO,MAAM,OAAO,oBAAoB;AACtC,UAAM,aAAa,CAAC;AACpB,UAAM,SAAS,CAAC;AAChB,aAAS,IAAI,OAAO;AAClB,UAAI,WAAW;AACf,aAAO,KAAK,QAAQ,cAAc,CAAC,MAAM;AACvC,cAAM,OAAO,MAAM,CAAC;AACpB,eAAO,CAAC,IAAI,CAAC,MAAM,CAAC;AACpB;AACA,mBAAW;AACX,eAAO;AAAA,MACT,CAAC;AACD,UAAI,CAAC,UAAU;AACb;AAAA,MACF;AAAA,IACF;AACA,UAAM,SAAS,KAAK,MAAM,0BAA0B,KAAK,CAAC;AAC1D,aAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,YAAM,CAAC,IAAI,IAAI,OAAO,CAAC;AACvB,eAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,YAAI,OAAO,CAAC,EAAE,QAAQ,IAAI,MAAM,IAAI;AAClC,iBAAO,CAAC,IAAI,OAAO,CAAC,EAAE,QAAQ,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC;AAChD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,SAAK,MAAM,OAAO,QAAQ,OAAO,YAAY,KAAK,UAAU,kBAAkB;AAC9E,WAAO;AAAA,EACT;AAAA,EACA,cAAc;AACZ,QAAI,SAAS,KAAK,MAAM,eAAe;AACvC,QAAI,WAAW,IAAI;AACjB,aAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAAA,IACtB;AACA,QAAI,eAAe;AACnB,UAAM,sBAAsB,CAAC;AAC7B,UAAM,sBAAsB,CAAC;AAC7B,aAAS,OAAO,QAAQ,yBAAyB,CAAC,GAAG,cAAc,eAAe;AAChF,UAAI,iBAAiB,QAAQ;AAC3B,4BAAoB,EAAE,YAAY,IAAI,OAAO,YAAY;AACzD,eAAO;AAAA,MACT;AACA,UAAI,eAAe,QAAQ;AACzB,4BAAoB,OAAO,UAAU,CAAC,IAAI,EAAE;AAC5C,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT,CAAC;AACD,WAAO,CAAC,IAAI,OAAO,IAAI,MAAM,EAAE,GAAG,qBAAqB,mBAAmB;AAAA,EAC5E;AACF;;;AF9CA,IAAI,aAAa,CAAC;AAClB,IAAI,cAAc,CAAC,MAAM,CAAC,GAAmB,uBAAO,OAAO,IAAI,CAAC;AAChE,IAAI,sBAAsC,uBAAO,OAAO,IAAI;AAC5D,SAAS,oBAAoB,MAAM;AACjC,SAAO,oBAAoB,IAAI,MAAM,IAAI;AAAA,IACvC,SAAS,MAAM,KAAK,IAAI,KAAK;AAAA,MAC3B;AAAA,MACA,CAAC,GAAG,aAAa,WAAW,KAAK,QAAQ,KAAK;AAAA,IAChD,CAAC;AAAA,EACH;AACF;AAPS;AAQT,SAAS,2BAA2B;AAClC,wBAAsC,uBAAO,OAAO,IAAI;AAC1D;AAFS;AAGT,SAAS,mCAAmC,QAAQ;AAClD,QAAM,OAAO,IAAI,KAAK;AACtB,QAAM,cAAc,CAAC;AACrB,MAAI,OAAO,WAAW,GAAG;AACvB,WAAO;AAAA,EACT;AACA,QAAM,2BAA2B,OAAO;AAAA,IACtC,CAAC,UAAU,CAAC,CAAC,SAAS,KAAK,MAAM,CAAC,CAAC,GAAG,GAAG,KAAK;AAAA,EAChD,EAAE;AAAA,IACA,CAAC,CAAC,WAAW,KAAK,GAAG,CAAC,WAAW,KAAK,MAAM,YAAY,IAAI,YAAY,KAAK,MAAM,SAAS,MAAM;AAAA,EACpG;AACA,QAAM,YAA4B,uBAAO,OAAO,IAAI;AACpD,WAAS,IAAI,GAAG,IAAI,IAAI,MAAM,yBAAyB,QAAQ,IAAI,KAAK,KAAK;AAC3E,UAAM,CAAC,oBAAoB,MAAM,QAAQ,IAAI,yBAAyB,CAAC;AACvE,QAAI,oBAAoB;AACtB,gBAAU,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAmB,uBAAO,OAAO,IAAI,CAAC,CAAC,GAAG,UAAU;AAAA,IAChG,OAAO;AACL;AAAA,IACF;AACA,QAAI;AACJ,QAAI;AACF,mBAAa,KAAK,OAAO,MAAM,GAAG,kBAAkB;AAAA,IACtD,SAAS,GAAG;AACV,YAAM,MAAM,aAAa,IAAI,qBAAqB,IAAI,IAAI;AAAA,IAC5D;AACA,QAAI,oBAAoB;AACtB;AAAA,IACF;AACA,gBAAY,CAAC,IAAI,SAAS,IAAI,CAAC,CAAC,GAAG,UAAU,MAAM;AACjD,YAAM,gBAAgC,uBAAO,OAAO,IAAI;AACxD,oBAAc;AACd,aAAO,cAAc,GAAG,cAAc;AACpC,cAAM,CAAC,KAAK,KAAK,IAAI,WAAW,UAAU;AAC1C,sBAAc,GAAG,IAAI;AAAA,MACvB;AACA,aAAO,CAAC,GAAG,aAAa;AAAA,IAC1B,CAAC;AAAA,EACH;AACA,QAAM,CAAC,QAAQ,qBAAqB,mBAAmB,IAAI,KAAK,YAAY;AAC5E,WAAS,IAAI,GAAG,MAAM,YAAY,QAAQ,IAAI,KAAK,KAAK;AACtD,aAAS,IAAI,GAAG,OAAO,YAAY,CAAC,EAAE,QAAQ,IAAI,MAAM,KAAK;AAC3D,YAAMC,OAAM,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC;AACjC,UAAI,CAACA,MAAK;AACR;AAAA,MACF;AACA,YAAM,OAAO,OAAO,KAAKA,IAAG;AAC5B,eAAS,IAAI,GAAG,OAAO,KAAK,QAAQ,IAAI,MAAM,KAAK;AACjD,QAAAA,KAAI,KAAK,CAAC,CAAC,IAAI,oBAAoBA,KAAI,KAAK,CAAC,CAAC,CAAC;AAAA,MACjD;AAAA,IACF;AAAA,EACF;AACA,QAAM,aAAa,CAAC;AACpB,aAAW,KAAK,qBAAqB;AACnC,eAAW,CAAC,IAAI,YAAY,oBAAoB,CAAC,CAAC;AAAA,EACpD;AACA,SAAO,CAAC,QAAQ,YAAY,SAAS;AACvC;AAxDS;AAyDT,SAAS,eAAe,YAAY,MAAM;AACxC,MAAI,CAAC,YAAY;AACf,WAAO;AAAA,EACT;AACA,aAAW,KAAK,OAAO,KAAK,UAAU,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,MAAM,GAAG;AAC3E,QAAI,oBAAoB,CAAC,EAAE,KAAK,IAAI,GAAG;AACrC,aAAO,CAAC,GAAG,WAAW,CAAC,CAAC;AAAA,IAC1B;AAAA,EACF;AACA,SAAO;AACT;AAVS;AAWT,IAAI,eAAe,MAAM;AAAA,EA3FzB,OA2FyB;AAAA;AAAA;AAAA,EACvB,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA,cAAc;AACZ,SAAK,cAAc,EAAE,CAAC,eAAe,GAAmB,uBAAO,OAAO,IAAI,EAAE;AAC5E,SAAK,UAAU,EAAE,CAAC,eAAe,GAAmB,uBAAO,OAAO,IAAI,EAAE;AAAA,EAC1E;AAAA,EACA,IAAI,QAAQ,MAAM,SAAS;AACzB,UAAM,aAAa,KAAK;AACxB,UAAM,SAAS,KAAK;AACpB,QAAI,CAAC,cAAc,CAAC,QAAQ;AAC1B,YAAM,IAAI,MAAM,gCAAgC;AAAA,IAClD;AACA,QAAI,CAAC,WAAW,MAAM,GAAG;AACvB;AACA,OAAC,YAAY,MAAM,EAAE,QAAQ,CAAC,eAAe;AAC3C,mBAAW,MAAM,IAAoB,uBAAO,OAAO,IAAI;AACvD,eAAO,KAAK,WAAW,eAAe,CAAC,EAAE,QAAQ,CAAC,MAAM;AACtD,qBAAW,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,WAAW,eAAe,EAAE,CAAC,CAAC;AAAA,QAC5D,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AACA,QAAI,SAAS,MAAM;AACjB,aAAO;AAAA,IACT;AACA,UAAM,cAAc,KAAK,MAAM,MAAM,KAAK,CAAC,GAAG;AAC9C,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,YAAM,KAAK,oBAAoB,IAAI;AACnC,UAAI,WAAW,iBAAiB;AAC9B,eAAO,KAAK,UAAU,EAAE,QAAQ,CAAC,MAAM;AACrC,qBAAW,CAAC,EAAE,IAAI,MAAM,eAAe,WAAW,CAAC,GAAG,IAAI,KAAK,eAAe,WAAW,eAAe,GAAG,IAAI,KAAK,CAAC;AAAA,QACvH,CAAC;AAAA,MACH,OAAO;AACL,mBAAW,MAAM,EAAE,IAAI,MAAM,eAAe,WAAW,MAAM,GAAG,IAAI,KAAK,eAAe,WAAW,eAAe,GAAG,IAAI,KAAK,CAAC;AAAA,MACjI;AACA,aAAO,KAAK,UAAU,EAAE,QAAQ,CAAC,MAAM;AACrC,YAAI,WAAW,mBAAmB,WAAW,GAAG;AAC9C,iBAAO,KAAK,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM;AACxC,eAAG,KAAK,CAAC,KAAK,WAAW,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,SAAS,UAAU,CAAC;AAAA,UAC3D,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AACD,aAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,MAAM;AACjC,YAAI,WAAW,mBAAmB,WAAW,GAAG;AAC9C,iBAAO,KAAK,OAAO,CAAC,CAAC,EAAE;AAAA,YACrB,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,OAAO,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,SAAS,UAAU,CAAC;AAAA,UAC9D;AAAA,QACF;AAAA,MACF,CAAC;AACD;AAAA,IACF;AACA,UAAM,QAAQ,uBAAuB,IAAI,KAAK,CAAC,IAAI;AACnD,aAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK;AAChD,YAAM,QAAQ,MAAM,CAAC;AACrB,aAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,MAAM;AACjC,YAAI,WAAW,mBAAmB,WAAW,GAAG;AAC9C,iBAAO,CAAC,EAAE,KAAK,MAAM;AAAA,YACnB,GAAG,eAAe,WAAW,CAAC,GAAG,KAAK,KAAK,eAAe,WAAW,eAAe,GAAG,KAAK,KAAK,CAAC;AAAA,UACpG;AACA,iBAAO,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,aAAa,MAAM,IAAI,CAAC,CAAC;AAAA,QAC3D;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,MAAM,QAAQ,MAAM;AAClB,6BAAyB;AACzB,UAAM,WAAW,KAAK,kBAAkB;AACxC,SAAK,QAAQ,CAAC,SAAS,UAAU;AAC/B,YAAM,UAAU,SAAS,OAAO,KAAK,SAAS,eAAe;AAC7D,YAAM,cAAc,QAAQ,CAAC,EAAE,KAAK;AACpC,UAAI,aAAa;AACf,eAAO;AAAA,MACT;AACA,YAAM,QAAQ,MAAM,MAAM,QAAQ,CAAC,CAAC;AACpC,UAAI,CAAC,OAAO;AACV,eAAO,CAAC,CAAC,GAAG,UAAU;AAAA,MACxB;AACA,YAAM,QAAQ,MAAM,QAAQ,IAAI,CAAC;AACjC,aAAO,CAAC,QAAQ,CAAC,EAAE,KAAK,GAAG,KAAK;AAAA,IAClC;AACA,WAAO,KAAK,MAAM,QAAQ,IAAI;AAAA,EAChC;AAAA,EACA,oBAAoB;AAClB,UAAM,WAA2B,uBAAO,OAAO,IAAI;AACnD,WAAO,KAAK,KAAK,OAAO,EAAE,OAAO,OAAO,KAAK,KAAK,WAAW,CAAC,EAAE,QAAQ,CAAC,WAAW;AAClF,eAAS,MAAM,MAAM,KAAK,cAAc,MAAM;AAAA,IAChD,CAAC;AACD,SAAK,cAAc,KAAK,UAAU;AAClC,WAAO;AAAA,EACT;AAAA,EACA,cAAc,QAAQ;AACpB,UAAM,SAAS,CAAC;AAChB,QAAI,cAAc,WAAW;AAC7B,KAAC,KAAK,aAAa,KAAK,OAAO,EAAE,QAAQ,CAAC,MAAM;AAC9C,YAAM,WAAW,EAAE,MAAM,IAAI,OAAO,KAAK,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC;AAC9F,UAAI,SAAS,WAAW,GAAG;AACzB,wBAAgB;AAChB,eAAO,KAAK,GAAG,QAAQ;AAAA,MACzB,WAAW,WAAW,iBAAiB;AACrC,eAAO;AAAA,UACL,GAAG,OAAO,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;AAAA,QACnF;AAAA,MACF;AAAA,IACF,CAAC;AACD,QAAI,CAAC,aAAa;AAChB,aAAO;AAAA,IACT,OAAO;AACL,aAAO,mCAAmC,MAAM;AAAA,IAClD;AAAA,EACF;AACF;;;AG1MA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;AAEA,IAAI,cAAc,MAAM;AAAA,EAFxB,OAEwB;AAAA;AAAA;AAAA,EACtB,OAAO;AAAA,EACP,WAAW,CAAC;AAAA,EACZ,UAAU,CAAC;AAAA,EACX,YAAY,MAAM;AAChB,SAAK,WAAW,KAAK;AAAA,EACvB;AAAA,EACA,IAAI,QAAQ,MAAM,SAAS;AACzB,QAAI,CAAC,KAAK,SAAS;AACjB,YAAM,IAAI,MAAM,gCAAgC;AAAA,IAClD;AACA,SAAK,QAAQ,KAAK,CAAC,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC3C;AAAA,EACA,MAAM,QAAQ,MAAM;AAClB,QAAI,CAAC,KAAK,SAAS;AACjB,YAAM,IAAI,MAAM,aAAa;AAAA,IAC/B;AACA,UAAM,UAAU,KAAK;AACrB,UAAM,SAAS,KAAK;AACpB,UAAM,MAAM,QAAQ;AACpB,QAAI,IAAI;AACR,QAAI;AACJ,WAAO,IAAI,KAAK,KAAK;AACnB,YAAM,SAAS,QAAQ,CAAC;AACxB,UAAI;AACF,iBAAS,KAAK,GAAG,OAAO,OAAO,QAAQ,KAAK,MAAM,MAAM;AACtD,iBAAO,IAAI,GAAG,OAAO,EAAE,CAAC;AAAA,QAC1B;AACA,cAAM,OAAO,MAAM,QAAQ,IAAI;AAAA,MACjC,SAAS,GAAG;AACV,YAAI,aAAa,sBAAsB;AACrC;AAAA,QACF;AACA,cAAM;AAAA,MACR;AACA,WAAK,QAAQ,OAAO,MAAM,KAAK,MAAM;AACrC,WAAK,WAAW,CAAC,MAAM;AACvB,WAAK,UAAU;AACf;AAAA,IACF;AACA,QAAI,MAAM,KAAK;AACb,YAAM,IAAI,MAAM,aAAa;AAAA,IAC/B;AACA,SAAK,OAAO,iBAAiB,KAAK,aAAa,IAAI;AACnD,WAAO;AAAA,EACT;AAAA,EACA,IAAI,eAAe;AACjB,QAAI,KAAK,WAAW,KAAK,SAAS,WAAW,GAAG;AAC9C,YAAM,IAAI,MAAM,2CAA2C;AAAA,IAC7D;AACA,WAAO,KAAK,SAAS,CAAC;AAAA,EACxB;AACF;;;ACtDA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;AACA;;;ACDA;AAAA;AAAA;AAAAC;AAEA;AACA,IAAI,cAA8B,uBAAO,OAAO,IAAI;AACpD,IAAIC,QAAO,MAAM;AAAA,EAJjB,OAIiB;AAAA;AAAA;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,UAAU;AAAA,EACV,YAAY,QAAQ,SAAS,UAAU;AACrC,SAAK,YAAY,YAA4B,uBAAO,OAAO,IAAI;AAC/D,SAAK,WAAW,CAAC;AACjB,QAAI,UAAU,SAAS;AACrB,YAAM,IAAoB,uBAAO,OAAO,IAAI;AAC5C,QAAE,MAAM,IAAI,EAAE,SAAS,cAAc,CAAC,GAAG,OAAO,EAAE;AAClD,WAAK,WAAW,CAAC,CAAC;AAAA,IACpB;AACA,SAAK,YAAY,CAAC;AAAA,EACpB;AAAA,EACA,OAAO,QAAQ,MAAM,SAAS;AAC5B,SAAK,SAAS,EAAE,KAAK;AACrB,QAAI,UAAU;AACd,UAAM,QAAQ,iBAAiB,IAAI;AACnC,UAAM,eAAe,CAAC;AACtB,aAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK;AAChD,YAAM,IAAI,MAAM,CAAC;AACjB,YAAM,QAAQ,MAAM,IAAI,CAAC;AACzB,YAAM,UAAU,WAAW,GAAG,KAAK;AACnC,YAAM,MAAM,MAAM,QAAQ,OAAO,IAAI,QAAQ,CAAC,IAAI;AAClD,UAAI,OAAO,QAAQ,WAAW;AAC5B,kBAAU,QAAQ,UAAU,GAAG;AAC/B,YAAI,SAAS;AACX,uBAAa,KAAK,QAAQ,CAAC,CAAC;AAAA,QAC9B;AACA;AAAA,MACF;AACA,cAAQ,UAAU,GAAG,IAAI,IAAIA,MAAK;AAClC,UAAI,SAAS;AACX,gBAAQ,UAAU,KAAK,OAAO;AAC9B,qBAAa,KAAK,QAAQ,CAAC,CAAC;AAAA,MAC9B;AACA,gBAAU,QAAQ,UAAU,GAAG;AAAA,IACjC;AACA,YAAQ,SAAS,KAAK;AAAA,MACpB,CAAC,MAAM,GAAG;AAAA,QACR;AAAA,QACA,cAAc,aAAa,OAAO,CAAC,GAAG,GAAG,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC;AAAA,QACjE,OAAO,KAAK;AAAA,MACd;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,gBAAgB,MAAM,QAAQ,YAAY,QAAQ;AAChD,UAAM,cAAc,CAAC;AACrB,aAAS,IAAI,GAAG,MAAM,KAAK,SAAS,QAAQ,IAAI,KAAK,KAAK;AACxD,YAAM,IAAI,KAAK,SAAS,CAAC;AACzB,YAAM,aAAa,EAAE,MAAM,KAAK,EAAE,eAAe;AACjD,YAAM,eAAe,CAAC;AACtB,UAAI,eAAe,QAAQ;AACzB,mBAAW,SAAyB,uBAAO,OAAO,IAAI;AACtD,oBAAY,KAAK,UAAU;AAC3B,YAAI,eAAe,eAAe,UAAU,WAAW,aAAa;AAClE,mBAAS,KAAK,GAAG,OAAO,WAAW,aAAa,QAAQ,KAAK,MAAM,MAAM;AACvE,kBAAM,MAAM,WAAW,aAAa,EAAE;AACtC,kBAAM,YAAY,aAAa,WAAW,KAAK;AAC/C,uBAAW,OAAO,GAAG,IAAI,SAAS,GAAG,KAAK,CAAC,YAAY,OAAO,GAAG,IAAI,WAAW,GAAG,KAAK,SAAS,GAAG;AACpG,yBAAa,WAAW,KAAK,IAAI;AAAA,UACnC;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,QAAQ,MAAM;AACnB,UAAM,cAAc,CAAC;AACrB,SAAK,UAAU;AACf,UAAM,UAAU;AAChB,QAAI,WAAW,CAAC,OAAO;AACvB,UAAM,QAAQ,UAAU,IAAI;AAC5B,UAAM,gBAAgB,CAAC;AACvB,aAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK;AAChD,YAAM,OAAO,MAAM,CAAC;AACpB,YAAM,SAAS,MAAM,MAAM;AAC3B,YAAM,YAAY,CAAC;AACnB,eAAS,IAAI,GAAG,OAAO,SAAS,QAAQ,IAAI,MAAM,KAAK;AACrD,cAAM,OAAO,SAAS,CAAC;AACvB,cAAM,WAAW,KAAK,UAAU,IAAI;AACpC,YAAI,UAAU;AACZ,mBAAS,UAAU,KAAK;AACxB,cAAI,QAAQ;AACV,gBAAI,SAAS,UAAU,GAAG,GAAG;AAC3B,0BAAY;AAAA,gBACV,GAAG,KAAK,gBAAgB,SAAS,UAAU,GAAG,GAAG,QAAQ,KAAK,OAAO;AAAA,cACvE;AAAA,YACF;AACA,wBAAY,KAAK,GAAG,KAAK,gBAAgB,UAAU,QAAQ,KAAK,OAAO,CAAC;AAAA,UAC1E,OAAO;AACL,sBAAU,KAAK,QAAQ;AAAA,UACzB;AAAA,QACF;AACA,iBAAS,IAAI,GAAG,OAAO,KAAK,UAAU,QAAQ,IAAI,MAAM,KAAK;AAC3D,gBAAM,UAAU,KAAK,UAAU,CAAC;AAChC,gBAAM,SAAS,KAAK,YAAY,cAAc,CAAC,IAAI,EAAE,GAAG,KAAK,QAAQ;AACrE,cAAI,YAAY,KAAK;AACnB,kBAAM,UAAU,KAAK,UAAU,GAAG;AAClC,gBAAI,SAAS;AACX,0BAAY,KAAK,GAAG,KAAK,gBAAgB,SAAS,QAAQ,KAAK,OAAO,CAAC;AACvE,sBAAQ,UAAU;AAClB,wBAAU,KAAK,OAAO;AAAA,YACxB;AACA;AAAA,UACF;AACA,gBAAM,CAAC,KAAK,MAAM,OAAO,IAAI;AAC7B,cAAI,CAAC,QAAQ,EAAE,mBAAmB,SAAS;AACzC;AAAA,UACF;AACA,gBAAM,QAAQ,KAAK,UAAU,GAAG;AAChC,gBAAM,iBAAiB,MAAM,MAAM,CAAC,EAAE,KAAK,GAAG;AAC9C,cAAI,mBAAmB,QAAQ;AAC7B,kBAAM,IAAI,QAAQ,KAAK,cAAc;AACrC,gBAAI,GAAG;AACL,qBAAO,IAAI,IAAI,EAAE,CAAC;AAClB,0BAAY,KAAK,GAAG,KAAK,gBAAgB,OAAO,QAAQ,KAAK,SAAS,MAAM,CAAC;AAC7E,kBAAI,OAAO,KAAK,MAAM,SAAS,EAAE,QAAQ;AACvC,sBAAM,UAAU;AAChB,sBAAM,iBAAiB,EAAE,CAAC,EAAE,MAAM,IAAI,GAAG,UAAU;AACnD,sBAAM,iBAAiB,cAAc,cAAc,MAAM,CAAC;AAC1D,+BAAe,KAAK,KAAK;AAAA,cAC3B;AACA;AAAA,YACF;AAAA,UACF;AACA,cAAI,YAAY,QAAQ,QAAQ,KAAK,IAAI,GAAG;AAC1C,mBAAO,IAAI,IAAI;AACf,gBAAI,QAAQ;AACV,0BAAY,KAAK,GAAG,KAAK,gBAAgB,OAAO,QAAQ,QAAQ,KAAK,OAAO,CAAC;AAC7E,kBAAI,MAAM,UAAU,GAAG,GAAG;AACxB,4BAAY;AAAA,kBACV,GAAG,KAAK,gBAAgB,MAAM,UAAU,GAAG,GAAG,QAAQ,QAAQ,KAAK,OAAO;AAAA,gBAC5E;AAAA,cACF;AAAA,YACF,OAAO;AACL,oBAAM,UAAU;AAChB,wBAAU,KAAK,KAAK;AAAA,YACtB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,iBAAW,UAAU,OAAO,cAAc,MAAM,KAAK,CAAC,CAAC;AAAA,IACzD;AACA,QAAI,YAAY,SAAS,GAAG;AAC1B,kBAAY,KAAK,CAAC,GAAG,MAAM;AACzB,eAAO,EAAE,QAAQ,EAAE;AAAA,MACrB,CAAC;AAAA,IACH;AACA,WAAO,CAAC,YAAY,IAAI,CAAC,EAAE,SAAS,OAAO,MAAM,CAAC,SAAS,MAAM,CAAC,CAAC;AAAA,EACrE;AACF;;;AD3JA,IAAI,aAAa,MAAM;AAAA,EAHvB,OAGuB;AAAA;AAAA;AAAA,EACrB,OAAO;AAAA,EACP;AAAA,EACA,cAAc;AACZ,SAAK,QAAQ,IAAIC,MAAK;AAAA,EACxB;AAAA,EACA,IAAI,QAAQ,MAAM,SAAS;AACzB,UAAM,UAAU,uBAAuB,IAAI;AAC3C,QAAI,SAAS;AACX,eAAS,IAAI,GAAG,MAAM,QAAQ,QAAQ,IAAI,KAAK,KAAK;AAClD,aAAK,MAAM,OAAO,QAAQ,QAAQ,CAAC,GAAG,OAAO;AAAA,MAC/C;AACA;AAAA,IACF;AACA,SAAK,MAAM,OAAO,QAAQ,MAAM,OAAO;AAAA,EACzC;AAAA,EACA,MAAM,QAAQ,MAAM;AAClB,WAAO,KAAK,MAAM,OAAO,QAAQ,IAAI;AAAA,EACvC;AACF;;;AZjBA,IAAIC,QAAO,cAAc,KAAS;AAAA,EALlC,OAKkC;AAAA;AAAA;AAAA,EAChC,YAAY,UAAU,CAAC,GAAG;AACxB,UAAM,OAAO;AACb,SAAK,SAAS,QAAQ,UAAU,IAAI,YAAY;AAAA,MAC9C,SAAS,CAAC,IAAI,aAAa,GAAG,IAAI,WAAW,CAAC;AAAA,IAChD,CAAC;AAAA,EACH;AACF;;;AcZA;AAAA;AAAA;AAAAC;AACA,IAAI,OAAO,wBAAC,YAAY;AACtB,QAAM,WAAW;AAAA,IACf,QAAQ;AAAA,IACR,cAAc,CAAC,OAAO,QAAQ,OAAO,QAAQ,UAAU,OAAO;AAAA,IAC9D,cAAc,CAAC;AAAA,IACf,eAAe,CAAC;AAAA,EAClB;AACA,QAAM,OAAO;AAAA,IACX,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACA,QAAM,mBAAmB,CAAC,eAAe;AACvC,QAAI,OAAO,eAAe,UAAU;AAClC,UAAI,eAAe,KAAK;AACtB,eAAO,MAAM;AAAA,MACf,OAAO;AACL,eAAO,CAAC,WAAW,eAAe,SAAS,SAAS;AAAA,MACtD;AAAA,IACF,WAAW,OAAO,eAAe,YAAY;AAC3C,aAAO;AAAA,IACT,OAAO;AACL,aAAO,CAAC,WAAW,WAAW,SAAS,MAAM,IAAI,SAAS;AAAA,IAC5D;AAAA,EACF,GAAG,KAAK,MAAM;AACd,QAAM,oBAAoB,CAAC,qBAAqB;AAC9C,QAAI,OAAO,qBAAqB,YAAY;AAC1C,aAAO;AAAA,IACT,WAAW,MAAM,QAAQ,gBAAgB,GAAG;AAC1C,aAAO,MAAM;AAAA,IACf,OAAO;AACL,aAAO,MAAM,CAAC;AAAA,IAChB;AAAA,EACF,GAAG,KAAK,YAAY;AACpB,SAAO,sCAAe,MAAM,GAAG,MAAM;AACnC,aAASC,KAAI,KAAK,OAAO;AACvB,QAAE,IAAI,QAAQ,IAAI,KAAK,KAAK;AAAA,IAC9B;AAFS,WAAAA,MAAA;AAGT,UAAM,cAAc,gBAAgB,EAAE,IAAI,OAAO,QAAQ,KAAK,IAAI,CAAC;AACnE,QAAI,aAAa;AACf,MAAAA,KAAI,+BAA+B,WAAW;AAAA,IAChD;AACA,QAAI,KAAK,WAAW,KAAK;AACvB,YAAM,eAAe,EAAE,IAAI,OAAO,MAAM;AACxC,UAAI,cAAc;AAChB,QAAAA,KAAI,QAAQ,YAAY;AAAA,MAC1B,OAAO;AACL,QAAAA,KAAI,QAAQ,QAAQ;AAAA,MACtB;AAAA,IACF;AACA,QAAI,KAAK,aAAa;AACpB,MAAAA,KAAI,oCAAoC,MAAM;AAAA,IAChD;AACA,QAAI,KAAK,eAAe,QAAQ;AAC9B,MAAAA,KAAI,iCAAiC,KAAK,cAAc,KAAK,GAAG,CAAC;AAAA,IACnE;AACA,QAAI,EAAE,IAAI,WAAW,WAAW;AAC9B,UAAI,KAAK,UAAU,MAAM;AACvB,QAAAA,KAAI,0BAA0B,KAAK,OAAO,SAAS,CAAC;AAAA,MACtD;AACA,YAAM,eAAe,iBAAiB,EAAE,IAAI,OAAO,QAAQ,KAAK,IAAI,CAAC;AACrE,UAAI,aAAa,QAAQ;AACvB,QAAAA,KAAI,gCAAgC,aAAa,KAAK,GAAG,CAAC;AAAA,MAC5D;AACA,UAAI,UAAU,KAAK;AACnB,UAAI,CAAC,SAAS,QAAQ;AACpB,cAAM,iBAAiB,EAAE,IAAI,OAAO,gCAAgC;AACpE,YAAI,gBAAgB;AAClB,oBAAU,eAAe,MAAM,SAAS;AAAA,QAC1C;AAAA,MACF;AACA,UAAI,SAAS,QAAQ;AACnB,QAAAA,KAAI,gCAAgC,QAAQ,KAAK,GAAG,CAAC;AACrD,UAAE,IAAI,QAAQ,OAAO,QAAQ,gCAAgC;AAAA,MAC/D;AACA,QAAE,IAAI,QAAQ,OAAO,gBAAgB;AACrC,QAAE,IAAI,QAAQ,OAAO,cAAc;AACnC,aAAO,IAAI,SAAS,MAAM;AAAA,QACxB,SAAS,EAAE,IAAI;AAAA,QACf,QAAQ;AAAA,QACR,YAAY;AAAA,MACd,CAAC;AAAA,IACH;AACA,UAAM,KAAK;AAAA,EACb,GAlDO;AAmDT,GApFW;;;ACDX;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;AACAC;;;ACDA;AAAA;AAAA;AAAAC;AACA;;;ACDA;AAAA;AAAA;AAAAC;AAkBO,IAAM,WAAN,cAAuB,MAAM;AAAA,EAChC,YACW,YACA,MACP,SACO,SACT;AACE,UAAM,OAAO;AALN;AACA;AAEA;AAGP,SAAK,OAAO;AAAA,EAChB;AAAA,EA3BJ,OAkBoC;AAAA;AAAA;AAUpC;;;AC5BA;AAAA;AAAA;AAAAC;AAYO,IAAM,aAAuB;AAAA,EAChC,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AACX;AA4BO,IAAM,gBAAN,MAAM,eAAc;AAAA,EAKf,cAAc;AAHtB,SAAQ,eAAuB,WAAW;AAC1C,SAAQ,cAAsB;AAAA,EAEP;AAAA,EAlD3B,OA6C2B;AAAA;AAAA;AAAA,EAOvB,OAAO,cAA6B;AAChC,QAAI,CAAC,eAAc,UAAU;AACzB,qBAAc,WAAW,IAAI,eAAc;AAAA,IAC/C;AACA,WAAO,eAAc;AAAA,EACzB;AAAA,EAEA,SAAS,OAAuB;AAC5B,SAAK,eAAe,WAAW,KAAK;AAAA,EACxC;AAAA,EAEA,eAAeC,MAAa;AACxB,SAAK,cAAcA;AAEnB,QAAIA,SAAQ,iBAAiBA,SAAQ,WAAW;AAC5C,WAAK,SAAS,OAAO;AAAA,IACzB;AAAA,EACJ;AAAA,EAEQ,UAAU,OAAwB;AACtC,WAAO,SAAS,KAAK;AAAA,EACzB;AAAA,EAEQ,eACJ,OACA,SACAC,UACAC,SACA,UACQ;AACR,UAAM,QAAkB;AAAA,MACpB;AAAA,MACA;AAAA,MACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,SAAAD;AAAA,MACA;AAAA,IACJ;AAEA,QAAIC,SAAO;AACP,YAAM,QAAQ;AAAA,QACV,MAAMA,QAAM;AAAA,QACZ,SAASA,QAAM;AAAA,QACf,OAAO,KAAK,gBAAgB,gBAAgBA,QAAM,QAAQ;AAAA,MAC9D;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAAA,EAEQ,OAAO,OAAiB;AAC5B,UAAM,YAAY,KAAK,UAAU,KAAK;AAEtC,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK;AACD,gBAAQ,MAAM,SAAS;AACvB;AAAA,MACJ,KAAK;AACD,gBAAQ,KAAK,SAAS;AACtB;AAAA,MACJ,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AACI,gBAAQ,IAAI,SAAS;AACrB;AAAA,IACR;AAAA,EACJ;AAAA,EAEA,MAAM,SAAiBD,UAAsB,UAAgC;AACzE,QAAI,CAAC,KAAK,UAAU,WAAW,KAAK,EAAG;AACvC,UAAM,QAAQ,KAAK,eAAe,SAAS,SAASA,UAAS,QAAW,QAAQ;AAChF,SAAK,OAAO,KAAK;AAAA,EACrB;AAAA,EAEA,KAAK,SAAiBA,UAAsB,UAAgC;AACxE,QAAI,CAAC,KAAK,UAAU,WAAW,IAAI,EAAG;AACtC,UAAM,QAAQ,KAAK,eAAe,QAAQ,SAASA,UAAS,QAAW,QAAQ;AAC/E,SAAK,OAAO,KAAK;AAAA,EACrB;AAAA,EAEA,KAAK,SAAiBA,UAAsB,UAAgC;AACxE,QAAI,CAAC,KAAK,UAAU,WAAW,IAAI,EAAG;AACtC,UAAM,QAAQ,KAAK,eAAe,QAAQ,SAASA,UAAS,QAAW,QAAQ;AAC/E,SAAK,OAAO,KAAK;AAAA,EACrB;AAAA,EAEA,MAAM,SAAiBC,SAAeD,UAAsB,UAAgC;AACxF,QAAI,CAAC,KAAK,UAAU,WAAW,KAAK,EAAG;AACvC,UAAM,QAAQ,KAAK,eAAe,SAAS,SAASA,UAASC,SAAO,QAAQ;AAC5E,SAAK,OAAO,KAAK;AAAA,EACrB;AAAA;AAAA,EAGA,QAAQ,QAAgB,MAAc,QAAgBC,WAAkBF,UAAsB;AAC1F,UAAM,UAAU,GAAG,OAAO,YAAY,CAAC,IAAI,IAAI,MAAM,MAAM,KAAKE,SAAQ;AACxE,UAAM,aAAyB;AAAA,MAC3B,GAAGF;AAAA,MACH,QAAQ,OAAO,YAAY;AAAA,MAC3B;AAAA,MACA;AAAA,MACA,UAAAE;AAAA,MACA,WAAW;AAAA,IACf;AAEA,QAAI,UAAU,KAAK;AACf,WAAK,MAAM,SAAS,QAAW,UAAU;AAAA,IAC7C,WAAW,UAAU,KAAK;AACtB,WAAK,KAAK,SAAS,UAAU;AAAA,IACjC,OAAO;AACH,WAAK,KAAK,SAAS,UAAU;AAAA,IACjC;AAAA,EACJ;AAAA;AAAA,EAGA,YAAY,WAAmBA,WAAkBF,UAAsB;AACnE,UAAM,cAA0B;AAAA,MAC5B,GAAGA;AAAA,MACH;AAAA,MACA,UAAAE;AAAA,MACA,WAAW;AAAA,IACf;AAEA,QAAIA,YAAW,KAAM;AACjB,WAAK,KAAK,mBAAmB,SAAS,KAAKA,SAAQ,OAAO,WAAW;AAAA,IACzE,WAAWA,YAAW,KAAM;AACxB,WAAK,KAAK,cAAc,SAAS,KAAKA,SAAQ,OAAO,WAAW;AAAA,IACpE,OAAO;AACH,WAAK,MAAM,cAAc,SAAS,KAAKA,SAAQ,OAAO,WAAW;AAAA,IACrE;AAAA,EACJ;AAAA;AAAA,EAGA,YAAY,SAAiB,WAAmBA,WAAkB,QAAiBF,UAAsB;AACrG,UAAM,YAAwB;AAAA,MAC1B,GAAGA;AAAA,MACH,WAAW;AAAA,MACX,WAAW,GAAG,OAAO,IAAI,SAAS;AAAA,MAClC,UAAAE;AAAA,IACJ;AAEA,UAAM,WAAW,SAAS,EAAE,OAAO,IAAI;AACvC,SAAK,KAAK,MAAM,OAAO,KAAK,SAAS,KAAKA,SAAQ,OAAO,WAAW,QAAQ;AAAA,EAChF;AAAA;AAAA,EAGA,OAAO,OAAe,QAAiB,QAAiBF,UAAsB;AAC1E,UAAM,gBAA4B;AAAA,MAC9B,GAAGA;AAAA,MACH,WAAW;AAAA,MACX,WAAW;AAAA,MACX;AAAA,IACJ;AAEA,UAAM,WAAW,SAAS,EAAE,OAAO,IAAI;AACvC,SAAK,KAAK,WAAW,KAAK,IAAI,eAAe,QAAQ;AAAA,EACzD;AAAA;AAAA,EAGA,QAAQ,WAAmB,KAAa,MAAeA,UAAsB;AACzE,UAAM,iBAA6B;AAAA,MAC/B,GAAGA;AAAA,MACH,WAAW;AAAA,MACX;AAAA,IACJ;AAEA,UAAM,WAAW,EAAE,KAAK,KAAK;AAC7B,SAAK,MAAM,WAAW,SAAS,KAAK,GAAG,IAAI,gBAAgB,QAAQ;AAAA,EACvE;AAAA;AAAA,EAGA,MAAM,WAA8C,KAAaA,UAAsB;AACnF,UAAM,eAA2B;AAAA,MAC7B,GAAGA;AAAA,MACH,WAAW;AAAA,MACX;AAAA,IACJ;AAEA,UAAM,WAAW,EAAE,IAAI;AACvB,SAAK,MAAM,SAAS,SAAS,KAAK,GAAG,IAAI,cAAc,QAAQ;AAAA,EACnE;AAAA;AAAA,EAGA,SAAS,OAAe,IAAaA,UAAsB;AACvD,UAAM,kBAA8B;AAAA,MAChC,GAAGA;AAAA,MACH,WAAW;AAAA,MACX,WAAW;AAAA,MACX;AAAA,IACJ;AAEA,SAAK,KAAK,mBAAmB,KAAK,IAAI,eAAe;AAAA,EACzD;AACJ;AAGO,IAAM,SAAS,cAAc,YAAY;AAGzC,IAAMG,OAAM;AAAA,EACf,OAAO,wBAAC,KAAa,KAAkB,SAA+B,OAAO,MAAM,KAAK,KAAK,IAAI,GAA1F;AAAA,EACP,MAAM,wBAAC,KAAa,KAAkB,SAA+B,OAAO,KAAK,KAAK,KAAK,IAAI,GAAzF;AAAA,EACN,MAAM,wBAAC,KAAa,KAAkB,SAA+B,OAAO,KAAK,KAAK,KAAK,IAAI,GAAzF;AAAA,EACN,OAAO,wBAAC,KAAa,KAAa,KAAkB,SAA+B,OAAO,MAAM,KAAK,KAAK,KAAK,IAAI,GAA5G;AAAA,EACP,KAAK,wBAAC,QAAgB,MAAc,QAAgBD,WAAkB,QAClE,OAAO,QAAQ,QAAQ,MAAM,QAAQA,WAAU,GAAG,GADjD;AAAA,EAEL,MAAM,wBAAC,WAAmBA,WAAkB,QACxC,OAAO,YAAY,WAAWA,WAAU,GAAG,GADzC;AAAA,EAEN,IAAI,wBAAC,SAAiB,WAAmBA,WAAkB,QAAiB,QACxE,OAAO,YAAY,SAAS,WAAWA,WAAU,QAAQ,GAAG,GAD5D;AAAA,EAEJ,QAAQ,wBAAC,OAAe,QAAiB,QAAiB,QACtD,OAAO,OAAO,OAAO,QAAQ,QAAQ,GAAG,GADpC;AAAA,EAER,SAAS,wBAAC,WAAmB,KAAa,MAAe,QACrD,OAAO,QAAQ,WAAW,KAAK,MAAM,GAAG,GADnC;AAAA,EAET,OAAO,wBAAC,WAA8C,KAAa,QAC/D,OAAO,MAAM,WAAW,KAAK,GAAG,GAD7B;AAAA,EAEP,UAAU,wBAAC,OAAe,IAAa,QACnC,OAAO,SAAS,OAAO,IAAI,GAAG,GADxB;AAEd;;;AFxQA;AAMA,eAAsBE,cAAa,GAAY,MAAY;AACvD,MAAI;AACA,UAAM,KAAK;AAAA,EACf,SAASC,SAAO;AAEZ,IAAAC,KAAI;AAAA,MACA;AAAA,MACAD,mBAAiB,QAAQA,UAAQ,IAAI,MAAM,OAAOA,OAAK,CAAC;AAAA,MACxD;AAAA,QACI,WAAW,EAAE,IAAI,WAAW;AAAA,QAC5B,MAAM,EAAE,IAAI;AAAA,QACZ,QAAQ,EAAE,IAAI;AAAA,QACd,WAAW;AAAA,MACf;AAAA,IACJ;AAGA,QAAIA,mBAAiB,UAAU;AAC3B,aAAO,EAAE,KAAkB;AAAA,QACvB,SAAS;AAAA,QACT,OAAO;AAAA,UACH,SAASA,QAAM;AAAA,UACf,MAAMA,QAAM;AAAA,UACZ,SAASA,QAAM;AAAA,QACnB;AAAA,QACA,MAAM;AAAA,UACF,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,UAClC,WAAW,EAAE,IAAI,WAAW;AAAA,QAChC;AAAA,MACJ,GAAGA,QAAM,UAAiB;AAAA,IAC9B;AAGA,QAAIA,mBAAiB,UAAU;AAC3B,aAAO,EAAE,KAAkB;AAAA,QACvB,SAAS;AAAA,QACT,OAAO;AAAA,UACH,SAASA,QAAM;AAAA,UACf,MAAMA,QAAM;AAAA,UACZ,SAASA,QAAM;AAAA,QACnB;AAAA,QACA,MAAM;AAAA,UACF,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,UAClC,WAAW,EAAE,IAAI,WAAW;AAAA,QAChC;AAAA,MACJ,GAAGA,QAAM,UAAiB;AAAA,IAC9B;AAGA,QAAIA,mBAAiB,eAAe;AAChC,aAAO,EAAE,KAAkB;AAAA,QACvB,SAAS;AAAA,QACT,OAAO;AAAA,UACH,SAASA,QAAM;AAAA,UACf,MAAM;AAAA,QACV;AAAA,QACA,MAAM;AAAA,UACF,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,UAClC,WAAW,EAAE,IAAI,WAAW;AAAA,QAChC;AAAA,MACJ,GAAG,EAAE,QAAQA,QAAM,OAAO,CAAC;AAAA,IAC/B;AAGA,UAAM,gBAAgB,EAAE,IAAI,gBAAgB;AAC5C,WAAO,EAAE,KAAkB;AAAA,MACvB,SAAS;AAAA,MACT,OAAO;AAAA,QACH,SAAS,gBAAiBA,QAAgB,UAAU;AAAA,QACpD,MAAM;AAAA,QACN,SAAS,gBAAiBA,QAAgB,QAAQ;AAAA,MACtD;AAAA,MACA,MAAM;AAAA,QACF,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAChC;AAAA,IACJ,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EACtB;AACJ;AA9EsB,OAAAD,eAAA;AAmFf,SAASG,iBAAgB,GAAsB;AAClD,SAAO,EAAE,KAAkB;AAAA,IACvB,SAAS;AAAA,IACT,OAAO;AAAA,MACH,SAAS,oBAAoB,EAAE,IAAI,MAAM,IAAI,EAAE,IAAI,IAAI;AAAA,MACvD,MAAM;AAAA,IACV;AAAA,IACA,MAAM;AAAA,MACF,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAChC;AAAA,EACJ,GAAG,EAAE,QAAQ,IAAI,CAAC;AACtB;AAZgB,OAAAA,kBAAA;AAiBT,SAAS,gBAAgB,SAAiB,SAAyB;AACtE,SAAO,IAAI,SAAS,KAAK,oBAAoB,SAAS,OAAO;AACjE;AAFgB;AAOT,SAAS,UAAU,UAAkB,gBAA0B;AAClE,SAAO,IAAI,SAAS,KAAK,cAAc,OAAO;AAClD;AAFgB;AAOT,SAAS,eAAe,UAAkB,aAAuB;AACpE,SAAO,IAAI,SAAS,KAAK,aAAa,OAAO;AACjD;AAFgB;AAOT,SAAS,cAAc,UAA4B;AACtD,SAAO,IAAI,SAAS,KAAK,aAAa,GAAG,QAAQ,YAAY;AACjE;AAFgB;AAOT,SAAS,cAAc,SAA2B;AACrD,SAAO,IAAI,SAAS,KAAK,YAAY,OAAO;AAChD;AAFgB;;;ADrIhB;AAWA,eAAe,YAAY,OAAeC,MAAoC;AAC1E,MAAI;AACA,UAAM,SAAS,aAAaA,KAAI,YAAY,YAAY;AACxD,UAAM,gBAGF,EAAE,KAAK,QAAQ;AACnB,UAAM,SAASA,KAAI,cAAcA,KAAI;AACrC,QAAI,QAAQ;AACR,oBAAc,MAAM;AAAA,IACxB;AACA,UAAM,UAAU,MAAMC,QAAO,OAAO,QAAQ,aAAa;AACzD,WAAO;AAAA,MACH,IAAI,QAAQ;AAAA,MACZ,OAAO,QAAQ;AAAA,MACf,MAAM,QAAQ;AAAA,MACd,aAAa,QAAQ;AAAA,IACzB;AAAA,EACJ,SAASC,SAAO;AACZ,WAAO;AAAA,EACX;AACJ;AArBe;AA0BR,SAAS,KAAK,UAAuB,CAAC,GAAG;AAC5C,SAAO,OAAO,GAAqD,SAAe;AAC9E,UAAM,aAAa,EAAE,IAAI,OAAO,eAAe;AAE/C,QAAI,CAAC,YAAY;AACb,UAAI,QAAQ,UAAU;AAClB,eAAO,KAAK;AAAA,MAChB;AAEA,aAAO,EAAE,KAAK;AAAA,QACV,SAAS;AAAA,QACT,OAAO;AAAA,UACH,SAAS;AAAA,UACT,MAAM;AAAA,QACV;AAAA,QACA,MAAM;AAAA,UACF,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,UAClC,WAAW,EAAE,IAAI,WAAW;AAAA,QAChC;AAAA,MACJ,GAAG,GAAG;AAAA,IACV;AAEA,UAAM,QAAQ,WAAW,MAAM,eAAe;AAC9C,QAAI,CAAC,OAAO;AACR,aAAO,EAAE,KAAK;AAAA,QACV,SAAS;AAAA,QACT,OAAO;AAAA,UACH,SAAS;AAAA,UACT,MAAM;AAAA,QACV;AAAA,QACA,MAAM;AAAA,UACF,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,UAClC,WAAW,EAAE,IAAI,WAAW;AAAA,QAChC;AAAA,MACJ,GAAG,GAAG;AAAA,IACV;AAEA,UAAM,QAAQ,MAAM,CAAC;AACrB,UAAM,OAAO,MAAM,YAAY,OAAO,EAAE,GAAG;AAE3C,QAAI,CAAC,MAAM;AACP,aAAO,EAAE,KAAK;AAAA,QACV,SAAS;AAAA,QACT,OAAO;AAAA,UACH,SAAS;AAAA,UACT,MAAM;AAAA,QACV;AAAA,QACA,MAAM;AAAA,UACF,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,UAClC,WAAW,EAAE,IAAI,WAAW;AAAA,QAChC;AAAA,MACJ,GAAG,GAAG;AAAA,IACV;AAGA,QAAI,QAAQ,SAAS,QAAQ,MAAM,SAAS,GAAG;AAC3C,UAAI,CAAC,KAAK,QAAQ,CAAC,QAAQ,MAAM,SAAS,KAAK,IAAI,GAAG;AAClD,cAAM,eAAe,mBAAmB;AAAA,MAC5C;AAAA,IACJ;AAGA,QAAI,QAAQ,eAAe,QAAQ,YAAY,SAAS,GAAG;AACvD,YAAM,gBAAgB,QAAQ,YAAY;AAAA,QACtC,CAAAC,gBAAc,KAAK,aAAa,SAASA,WAAU;AAAA,MACvD;AACA,UAAI,CAAC,eAAe;AAChB,cAAM,eAAe,0BAA0B;AAAA,MACnD;AAAA,IACJ;AAGA,MAAE,IAAI,UAAU,KAAK,EAAE;AACvB,MAAE,IAAI,QAAQ,IAAsB;AAEpC,UAAM,KAAK;AAAA,EACf;AACJ;AA7EgB;AAsGT,SAAS,aAAa,QAAiB;AAC1C,SAAO,OAAO,GAA+B,SAAe;AACxD,UAAM,aAAa,EAAE,IAAI,OAAO,mBAAmB;AACnD,UAAM,iBAAiB,UAAU,EAAE,IAAI;AAEvC,QAAI,CAAC,cAAc,eAAe,gBAAgB;AAC9C,YAAM,UAAU,iCAAiC;AAAA,IACrD;AAEA,UAAM,KAAK;AAAA,EACf;AACJ;AAXgB;AAgBT,SAAS,eAAe,GAA6B;AACxD,SAAO,EAAE,IAAI,MAAM,KAAK;AAC5B;AAFgB;;;AD5JhB;;;AKJA;AAAA;AAAA;AAAAC;AAMO,SAAS,gBACZ,GACA,MACA,MACQ;AACR,QAAM,WAA2B;AAAA,IAC7B,SAAS;AAAA,IACT;AAAA,IACA,MAAM;AAAA,MACF,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC5B,GAAG;AAAA,IACP;AAAA,EACJ;AACA,SAAO,EAAE,KAAK,UAAU,GAAG;AAC/B;AAfgB;AAoBT,SAAS,gBACZ,GACA,MACA,UACQ;AACR,QAAM,WAA2B;AAAA,IAC7B,SAAS;AAAA,IACT;AAAA,IACA,MAAM;AAAA,MACF,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAChC;AAAA,EACJ;AAEA,MAAI,UAAU;AACV,MAAE,OAAO,YAAY,QAAQ;AAAA,EACjC;AAEA,SAAO,EAAE,KAAK,UAAU,GAAG;AAC/B;AAnBgB;AAwBT,SAAS,kBAAkB,GAAsB;AACpD,SAAO,EAAE,KAAK,MAAM,GAAG;AAC3B;AAFgB;AAOT,SAAS,kBACZ,GACA,MACA,YAKQ;AACR,QAAM,WAAiC;AAAA,IACnC,SAAS;AAAA,IACT;AAAA,IACA,MAAM;AAAA,MACF,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC5B,MAAM,WAAW;AAAA,MACjB,OAAO,WAAW;AAAA,MAClB,OAAO,WAAW;AAAA,MAClB,YAAY,KAAK,KAAK,WAAW,QAAQ,WAAW,KAAK;AAAA,IAC7D;AAAA,EACJ;AACA,SAAO,EAAE,KAAK,UAAU,GAAG;AAC/B;AAtBgB;AA2BT,SAAS,gBACZ,GACA,UAOI,CAAC,GACD;AACJ,QAAM,aAAuB,CAAC;AAE9B,MAAI,QAAQ,SAAS;AACjB,eAAW,KAAK,UAAU;AAAA,EAC9B,WAAW,QAAQ,SAAS;AACxB,eAAW,KAAK,UAAU;AAAA,EAC9B,OAAO;AACH,QAAI,QAAQ,SAAS;AACjB,iBAAW,KAAK,SAAS;AAAA,IAC7B,OAAO;AACH,iBAAW,KAAK,QAAQ;AAAA,IAC5B;AAEA,QAAI,QAAQ,WAAW,QAAW;AAC9B,iBAAW,KAAK,WAAW,QAAQ,MAAM,EAAE;AAAA,IAC/C;AAEA,QAAI,QAAQ,YAAY,QAAW;AAC/B,iBAAW,KAAK,YAAY,QAAQ,OAAO,EAAE;AAAA,IACjD;AAEA,QAAI,QAAQ,gBAAgB;AACxB,iBAAW,KAAK,iBAAiB;AAAA,IACrC;AAAA,EACJ;AAEA,IAAE,OAAO,iBAAiB,WAAW,KAAK,IAAI,CAAC;AACnD;AAtCgB;AA6FT,SAAS,cACZ,GACA,SACA,MACA,SACA,SAAiB,KACT;AACR,QAAM,WAAwB;AAAA,IAC1B,SAAS;AAAA,IACT,OAAO;AAAA,MACH;AAAA,MACA,MAAM,QAAQ;AAAA,MACd;AAAA,IACJ;AAAA,IACA,MAAM;AAAA,MACF,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAChC;AAAA,EACJ;AACA,SAAO,EAAE,KAAK,UAAU,MAAa;AACzC;AApBgB;;;ACjLhB;AAAA;AAAA;AAAAC;AAKA,eAAsB,qBAAqB,aAA0B,YAAoB,OAAO,MAA8B;AAC1H,QAAM,SAAwB,CAAC;AAG/B,WAAS,IAAI,GAAG,IAAI,YAAY,YAAY,KAAK,WAAW;AACxD,UAAM,QAAQ,YAAY,MAAM,GAAG,KAAK,IAAI,IAAI,WAAW,YAAY,UAAU,CAAC;AAClF,WAAO,KAAK,KAAK;AAAA,EACrB;AAEA,SAAO;AACX;AAVsB;AAatB,eAAe,kBACX,IACA,YACA,UAA0B,CAAC,GACH;AACxB,MAAI;AACA,UAAM,WAAW,MAAM,GAAG,IAAI,qCAAqC;AAAA,MAC/D,OAAO,CAAC,GAAG,IAAI,WAAW,UAAU,CAAC;AAAA,MACrC,MAAM,QAAQ,QAAQ;AAAA,MACtB,UAAU,QAAQ,YAAY;AAAA,MAC9B,YAAY,QAAQ,cAAc;AAAA,MAClC,gBAAgB,QAAQ;AAAA,MACxB,QAAQ,QAAQ;AAAA,IACpB,CAAC;AAED,WAAO;AAAA,EACX,SAASC,SAAO;AACZ,IAAAC,KAAI,MAAM,kCAAkCD,SAAgB,EAAE,WAAW,aAAa,CAAC;AACvF,WAAO,EAAE,MAAM,8BAA8B,YAAY,EAAE;AAAA,EAC/D;AACJ;AApBe;AAuBf,eAAsB,aAClB,IACA,aACA,UAA0B,CAAC,GACC;AAC5B,MAAI;AAEA,QAAI,YAAY,cAAc,OAAO,MAAM;AACvC,YAAM,WAAW,MAAM,kBAAkB,IAAI,aAAa,OAAO;AACjE,aAAO;AAAA,QACH,MAAM,SAAS,QAAQ;AAAA,QACvB,YAAY,SAAS,cAAc;AAAA,QACnC,OAAO,SAAS,SAAS,CAAC;AAAA,QAC1B,QAAQ;AAAA,MACZ;AAAA,IACJ;AAGA,UAAM,SAAS,MAAM,qBAAqB,WAAW;AACrD,UAAM,UAA6B,CAAC;AACpC,QAAI,iBAAiB;AACrB,QAAI,iBAAiB;AACrB,UAAM,WAA0B,CAAC;AACjC,QAAI,aAAa;AAEjB,eAAW,SAAS,QAAQ;AACxB,YAAM,SAAS,MAAM,kBAAkB,IAAI,OAAO,OAAO;AACzD,cAAQ,KAAK,MAAM;AAEnB,wBAAkB,OAAO,OAAO;AAChC,wBAAkB,OAAO,cAAc;AAGvC,UAAI,OAAO,OAAO;AACd,cAAM,gBAAgB,OAAO,MAAM,IAAI,WAAS;AAAA,UAC5C,GAAG;AAAA,UACH,OAAO,KAAK,QAAQ;AAAA,UACpB,KAAK,KAAK,MAAM;AAAA,QACpB,EAAE;AACF,iBAAS,KAAK,GAAG,aAAa;AAG9B,cAAM,WAAW,OAAO,MAAM,OAAO,MAAM,SAAS,CAAC;AACrD,YAAI,UAAU;AACV,uBAAa,SAAS;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,MACH,MAAM,eAAe,KAAK;AAAA,MAC1B,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ,OAAO;AAAA,IACnB;AAAA,EACJ,SAASA,SAAO;AACZ,IAAAC,KAAI,MAAM,4BAA4BD,SAAgB,EAAE,WAAW,aAAa,CAAC;AACjF,UAAM,IAAI,MAAM,sCAAsC;AAAA,EAC1D;AACJ;AA3DsB;AAuItB,eAAsB,kBAAkB,IAAQ,MAAiC;AAC7E,MAAI;AACA,UAAM,WAAW,MAAM,GAAG,IAAI,6BAA6B;AAAA,MACvD;AAAA,IACJ,CAAC;AAED,WAAQ,SAAiB,OAAO,CAAC,KAAK,CAAC;AAAA,EAC3C,SAASE,SAAO;AACZ,IAAAC,KAAI,MAAM,8BAA8BD,SAAgB,EAAE,WAAW,aAAa,CAAC;AACnF,UAAM,IAAI,MAAM,8BAA8B;AAAA,EAClD;AACJ;AAXsB;AActB,eAAsB,aAClB,IACA,QACA,UAAsB,CAAC,GACH;AACpB,MAAI;AACA,UAAM,QAAQ,QAAQ,SAAS;AAC/B,UAAM,WAAW,MAAM,GAAG,IAAI,OAAc;AAAA,MACxC;AAAA,MACA,QAAQ,QAAQ,UAAU;AAAA,MAC1B,YAAY,QAAQ,cAAc;AAAA,MAClC,aAAa,QAAQ,eAAe;AAAA,MACpC,OAAO,QAAQ,SAAS;AAAA,MACxB,OAAO,QAAQ,SAAS;AAAA,MACxB,oBAAoB,QAAQ,sBAAsB;AAAA,MAClD,mBAAmB,QAAQ,qBAAqB;AAAA,MAChD,kBAAkB,QAAQ,oBAAoB;AAAA,MAC9C,MAAM,QAAQ;AAAA,IAClB,CAAC;AAED,WAAO;AAAA,MACH,MAAO,SAAiB,YAAY;AAAA,MACpC;AAAA,MACA,OAAQ,SAAiB,SAAS;AAAA,QAC9B,eAAe;AAAA,QACf,mBAAmB;AAAA,QACnB,cAAc;AAAA,MAClB;AAAA,IACJ;AAAA,EACJ,SAASA,SAAO;AACZ,IAAAC,KAAI,MAAM,yBAAyBD,SAAgB,EAAE,WAAW,aAAa,CAAC;AAC9E,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC7C;AACJ;AAjCsB;AAoCtB,SAAS,wBAAwBE,MAAsB;AACnD,MAAI,OAAOA,SAAQ,UAAU;AACzB,WAAOA;AAAA,EACX;AAEA,MAAI,MAAM,QAAQA,IAAG,GAAG;AACpB,WAAOA,KACF,IAAI,CAAC,SAAS;AACX,UAAI,OAAO,SAAS,SAAU,QAAO;AACrC,UAAI,QAAQ,OAAO,SAAS,YAAY,UAAU,MAAM;AACpD,cAAM,YAAa,KAAiC;AACpD,eAAO,OAAO,cAAc,WAAW,YAAY,KAAK,UAAU,aAAa,CAAC,CAAC;AAAA,MACrF;AACA,aAAO,KAAK,UAAU,QAAQ,CAAC,CAAC;AAAA,IACpC,CAAC,EACA,KAAK,EAAE;AAAA,EAChB;AAEA,MAAIA,QAAO,OAAOA,SAAQ,UAAU;AAChC,QAAI,UAAWA,MAAiC;AAC5C,YAAM,YAAaA,KAAgC;AACnD,aAAO,OAAO,cAAc,WAAW,YAAY,KAAK,UAAU,aAAa,CAAC,CAAC;AAAA,IACrF;AAEA,WAAO,KAAK,UAAUA,IAAG;AAAA,EAC7B;AAEA,SAAO;AACX;AA5BS;AA8BF,SAAS,qBAAqBA,MAAwC;AACzE,MAAI,CAACA,KAAK,QAAO;AAEjB,MAAI,OAAOA,KAAI,KAAK;AAEpB,MAAI,KAAK,WAAW,KAAK,GAAG;AACxB,WAAO,KAAK,QAAQ,qBAAqB,EAAE;AAC3C,UAAM,eAAe,KAAK,YAAY,KAAK;AAC3C,QAAI,iBAAiB,IAAI;AACrB,aAAO,KAAK,MAAM,GAAG,YAAY;AAAA,IACrC;AACA,WAAO,KAAK,KAAK;AAAA,EACrB;AAEA,SAAO;AACX;AAfgB;AAiBhB,eAAsB,uBAClB,IACA,UACA,UAAsB,CAAC,GACH;AACpB,MAAI;AACA,UAAM,QAAQ,QAAQ,SAAS;AAG/B,UAAM,oBAAoB,CAAC,mCAAmC,gCAAgC,EAAE;AAAA,MAC5F,OAAK,MAAM,SAAS,CAAC;AAAA,IACzB;AAEA,UAAM,gBAAqB;AAAA,MACvB;AAAA,MACA,QAAQ,QAAQ,UAAU;AAAA,MAC1B,YAAY,QAAQ,cAAc;AAAA,MAClC,aAAa,QAAQ,eAAe;AAAA,MACpC,OAAO,QAAQ,SAAS;AAAA,MACxB,OAAO,QAAQ,SAAS;AAAA,MACxB,oBAAoB,QAAQ,sBAAsB;AAAA,MAClD,mBAAmB,QAAQ,qBAAqB;AAAA,MAChD,kBAAkB,QAAQ,oBAAoB;AAAA,MAC9C,MAAM,QAAQ;AAAA,IAClB;AAGA,QAAI,QAAQ,iBAAiB;AACzB,oBAAc,kBAAkB,QAAQ;AAAA,IAC5C;AAGA,QAAI,QAAQ,SAAS,mBAAmB;AACpC,oBAAc,QAAQ,QAAQ;AAAA,IAClC;AAEA,UAAM,WAAW,MAAM,GAAG,IAAI,OAAc,aAAa;AACzD,UAAM,UAAW,SAAiB,YAAY;AAE9C,WAAO;AAAA,MACH,MAAM,wBAAwB,OAAO;AAAA,MACrC;AAAA,MACA,OAAQ,SAAiB,SAAS;AAAA,QAC9B,eAAe;AAAA,QACf,mBAAmB;AAAA,QACnB,cAAc;AAAA,MAClB;AAAA,MACA,YAAa,SAAiB;AAAA,IAClC;AAAA,EACJ,SAASF,SAAO;AACZ,IAAAC,KAAI,MAAM,yBAAyBD,SAAgB,EAAE,WAAW,aAAa,CAAC;AAC9E,UAAM,IAAI,MAAM,oCAAoC;AAAA,EACxD;AACJ;AArDsB;AAwDtB,eAAsB,sBAClB,IACA,eACA,UACY;AACZ,MAAI;AACA,UAAM,SAAS;AAAA;AAAA,mBAEJ,QAAQ;AAAA,uBACJ,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8B5B,UAAM,WAAW,MAAM,uBAAuB,IAAI;AAAA,MAC9C,EAAE,MAAM,UAAU,SAAS,0FAA0F;AAAA,MACrH,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,IACpC,GAAG;AAAA,MACC,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,iBAAiB,EAAE,MAAM,cAAc;AAAA,IAC3C,CAAC;AAED,UAAM,YAAY,qBAAqB,SAAS,IAAI;AAEpD,QAAI;AACA,aAAO,KAAK,MAAM,SAAS;AAAA,IAC/B,SAAS,YAAY;AACjB,MAAAC,KAAI,KAAK,mCAAmC,QAAW;AAAA,QACnD,WAAW;AAAA,QACX,OAAO,SAAS;AAAA,QAChB,YAAY,SAAS,MAAM,MAAM,GAAG,GAAG;AAAA,QACvC,kBAAkB,UAAU,MAAM,GAAG,GAAG;AAAA,QACxC,cAAc,sBAAsB,QAAQ,WAAW,UAAU,OAAO,UAAU;AAAA,MACtF,CAAC;AAED,aAAO;AAAA,QACH,QAAQ;AAAA,UACJ,eAAe;AAAA,UACf,SAAS;AAAA,UACT,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,WAAW;AAAA,UACX,aAAa;AAAA,QACjB;AAAA,QACA,UAAU;AAAA,QACV,aAAa,CAAC,mCAAmC,2BAA2B,0BAA0B;AAAA,QACtG,gBAAgB;AAAA,MACpB;AAAA,IACJ;AAAA,EACJ,SAASD,SAAO;AACZ,IAAAC,KAAI,MAAM,6BAA6BD,SAAgB,EAAE,WAAW,aAAa,CAAC;AAClF,UAAM,IAAI,MAAM,mCAAmC;AAAA,EACvD;AACJ;AA/EsB;AAkFtB,eAAsB,sBAClB,IACA,UACA,OACe;AACf,MAAI;AACA,UAAM,SAAS;AAAA;AAAA,SAEd,KAAK;AAAA;AAAA,aAED,SAAS,OAAO;AAAA,gBACb,SAAS,UAAU;AAAA,aACtB,SAAS,OAAO;AAAA,mBACV,SAAS,aAAa;AAAA,sBACnB,SAAS,eAAe;AAAA,iBAC7B,SAAS,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW7B,UAAM,WAAW,MAAM,aAAa,IAAI,QAAQ;AAAA,MAC5C,aAAa;AAAA,MACb,YAAY;AAAA,IAChB,CAAC;AAED,WAAO,SAAS;AAAA,EACpB,SAASA,SAAO;AACZ,IAAAC,KAAI,MAAM,6BAA6BD,SAAgB,EAAE,WAAW,aAAa,CAAC;AAClF,WAAO;AAAA,EACX;AACJ;AApCsB;AAiHtB,eAAsB,6BAClB,IACA,MACA,iBACA,iBAAyB,QACM;AAC/B,MAAI;AACA,UAAM,cAAsC;AAAA,MACxC,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,IACV;AAEA,UAAM,eAAe,gBAChB,IAAI,UAAQ,GAAG,YAAY,IAAI,KAAK,IAAI,iBAAiB,EACzD,KAAK,IAAI;AAEd,UAAM,SAAS;AAAA;AAAA,EAErB,YAAY;AAAA;AAAA,sBAEQ,IAAI;AAElB,UAAM,WAAW,MAAM,uBAAuB,IAAI;AAAA,MAC9C;AAAA,QACI,MAAM;AAAA,QACN,SAAS;AAAA,MACb;AAAA,MACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,IACpC,GAAG;AAAA,MACC,aAAa;AAAA,MACb,YAAY;AAAA,IAChB,CAAC;AAED,UAAM,eAAuC,CAAC;AAC9C,UAAM,QAAQ,SAAS,KAAK,KAAK,EAAE,MAAM,IAAI;AAE7C,eAAW,QAAQ,OAAO;AACtB,YAAM,QAAQ,KAAK,MAAM,6FAA6F;AACtH,UAAI,OAAO;AACP,cAAM,WAAW,MAAM,CAAC;AACxB,cAAM,cAAc,MAAM,CAAC,EAAE,KAAK;AAClC,cAAM,WAAW,OAAO,QAAQ,WAAW,EAAE,KAAK,CAAC,CAAC,MAAM,IAAI,MAAM,SAAS,QAAQ,IAAI,CAAC;AAC1F,YAAI,UAAU;AACV,uBAAa,QAAQ,IAAI;AAAA,QAC7B;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX,SAASG,SAAO;AACZ,IAAAC,KAAI,MAAM,2BAA2BD,SAAgB,EAAE,WAAW,aAAa,CAAC;AAChF,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAC/D;AACJ;AA7DsB;;;AC5gBtB;AAAA;AAAA;AAAAE;AAUA,IAAM,kBAAkB;AAAA,EACtB,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;AAAA,EACtB,IAAI,EAAE,KAAK,IAAI,KAAK,GAAG;AAAA,EACvB,IAAI,EAAE,KAAK,IAAI,KAAK,GAAG;AAAA,EACvB,IAAI,EAAE,KAAK,IAAI,KAAK,GAAG;AAAA,EACvB,IAAI,EAAE,KAAK,IAAI,KAAK,GAAG;AAAA,EACvB,IAAI,EAAE,KAAK,IAAI,KAAK,IAAI;AAC1B;AAqHA,eAAe,qBACb,IACA,eACA,cACgC;AAChC,MAAI;AACF,UAAM,SAAS;AAAA;AAAA,kBAED,aAAa;AAAA,uBACR,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8B/B,UAAM,WAAW,MAAM,uBAAuB,IAAI;AAAA,MAChD;AAAA,QACE,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,IAClC,GAAG;AAAA,MACD,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,iBAAiB,EAAE,MAAM,cAAc;AAAA,IACzC,CAAC;AAED,UAAM,YAAY,qBAAqB,SAAS,IAAI;AACpD,UAAM,SAAS,KAAK,MAAM,SAAS;AAGnC,UAAM,qBAAqB,OAAO,qBAAqB,CAAC,GAAG,IAAI,CAAC,UAAe;AAAA,MAC7E,OAAO,KAAK,SAAS;AAAA,MACrB,WAAW,KAAK,cAAc,SAAS,IAAI,KAAK,cAAc,WAAW,IAAI;AAAA,MAC7E,YAAY,KAAK,cAAc;AAAA,IACjC,EAAE;AAEF,WAAO;AAAA,MACL,cAAc,OAAO,gBAAgB;AAAA,MACrC,SAAS,OAAO,WAAW;AAAA,MAC3B,YAAY,OAAO,cAAc;AAAA,MACjC,QAAQ,OAAO,UAAU;AAAA,MACzB,QAAQ,OAAO,UAAU;AAAA,MACzB,gBAAgB,OAAO,kBAAkB;AAAA,MACzC;AAAA,IACF;AAAA,EACF,SAASC,SAAO;AACd,IAAAC,KAAI,MAAM,gCAAgCD,SAAgB,EAAE,WAAW,gBAAgB,CAAC;AAExF,WAAO;AAAA,MACL,cAAc;AAAA,MACd,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,mBAAmB,CAAC;AAAA,IACtB;AAAA,EACF;AACF;AAnFe;AAwFf,eAAe,eACb,IACA,eACA,iBAC0B;AAC1B,MAAI;AACF,UAAM,SAAS;AAAA;AAAA,aAEN,eAAe;AAAA,aACf,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BtB,UAAM,WAAW,MAAM,uBAAuB,IAAI;AAAA,MAChD;AAAA,QACE,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,IAClC,GAAG;AAAA,MACD,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,iBAAiB,EAAE,MAAM,cAAc;AAAA,IACzC,CAAC;AAED,UAAM,YAAY,qBAAqB,SAAS,IAAI;AACpD,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,WAAO;AAAA,MACL,cAAc,OAAO,gBAAgB;AAAA,MACrC,UAAU,OAAO,YAAY;AAAA,MAC7B,YAAY,OAAO,cAAc;AAAA,MACjC,OAAO,OAAO,SAAS;AAAA,MACvB,cAAc,OAAO,gBAAgB,CAAC;AAAA,MACtC,WAAW,OAAO,aAAa,CAAC;AAAA,IAClC;AAAA,EACF,SAASA,SAAO;AACd,IAAAC,KAAI,MAAM,0BAA0BD,SAAgB,EAAE,WAAW,gBAAgB,CAAC;AAClF,WAAO;AAAA,MACL,cAAc;AAAA,MACd,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,cAAc,CAAC;AAAA,MACf,WAAW,CAAC,sBAAsB,4BAA4B;AAAA,IAChE;AAAA,EACF;AACF;AAvEe;AA4Ef,eAAe,kBACb,IACA,eAC6B;AAC7B,MAAI;AACF,UAAM,SAAS;AAAA;AAAA,SAEV,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBlB,UAAM,WAAW,MAAM,uBAAuB,IAAI;AAAA,MAChD;AAAA,QACE,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,IAClC,GAAG;AAAA,MACD,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,iBAAiB,EAAE,MAAM,cAAc;AAAA,IACzC,CAAC;AAED,UAAM,YAAY,qBAAqB,SAAS,IAAI;AACpD,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,WAAO;AAAA,MACL,cAAc,OAAO,gBAAgB;AAAA,MACrC,OAAO,OAAO,SAAS;AAAA,MACvB,iBAAiB,OAAO,mBAAmB;AAAA,MAC3C,gBAAgB,OAAO,kBAAkB;AAAA,MACzC,eAAe,OAAO,iBAAiB;AAAA,MACvC,eAAe,OAAO,iBAAiB,CAAC;AAAA,MACxC,cAAc,OAAO,gBAAgB,CAAC;AAAA,MACtC,YAAY,OAAO,cAAc,CAAC;AAAA,IACpC;AAAA,EACF,SAASA,SAAO;AACd,IAAAC,KAAI,MAAM,6BAA6BD,SAAgB,EAAE,WAAW,gBAAgB,CAAC;AACrF,WAAO;AAAA,MACL,cAAc;AAAA,MACd,OAAO;AAAA,MACP,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,eAAe,CAAC;AAAA,MAChB,cAAc,CAAC;AAAA,MACf,YAAY,CAAC;AAAA,IACf;AAAA,EACF;AACF;AAtEe;AA2Ef,eAAe,eACb,IACA,eACA,cACA,WAC0B;AAC1B,MAAI;AACF,UAAM,iBAAiB,aAAa,eAAe;AAEnD,UAAM,SAAS;AAAA;AAAA,SAEV,aAAa;AAAA,iBACL,YAAY;AAAA,cACf,SAAS;AAAA,SACd,KAAK,MAAM,cAAc,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmB/B,UAAM,WAAW,MAAM,uBAAuB,IAAI;AAAA,MAChD;AAAA,QACE,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,IAClC,GAAG;AAAA,MACD,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,iBAAiB,EAAE,MAAM,cAAc;AAAA,IACzC,CAAC;AAED,UAAM,YAAY,qBAAqB,SAAS,IAAI;AACpD,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,WAAO;AAAA,MACL,cAAc,OAAO,gBAAgB;AAAA,MACrC,OAAO,OAAO,SAAS;AAAA,MACvB,QAAQ,OAAO,UAAU;AAAA,MACzB,YAAY,OAAO,cAAc;AAAA,MACjC,gBAAgB,OAAO,kBAAkB;AAAA,MACzC,YAAY,OAAO,cAAc;AAAA,IACnC;AAAA,EACF,SAASA,SAAO;AACd,IAAAC,KAAI,MAAM,0BAA0BD,SAAgB,EAAE,WAAW,gBAAgB,CAAC;AAClF,WAAO;AAAA,MACL,cAAc;AAAA,MACd,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,YAAY;AAAA,IACd;AAAA,EACF;AACF;AAnEe;AAwEf,eAAe,iBACb,IACA,eACA,iBAC4B;AAC5B,MAAI;AACF,UAAM,SAAS;AAAA;AAAA,aAEN,eAAe;AAAA,aACf,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBtB,UAAM,WAAW,MAAM,uBAAuB,IAAI;AAAA,MAChD;AAAA,QACE,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,IAClC,GAAG;AAAA,MACD,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,iBAAiB,EAAE,MAAM,cAAc;AAAA,IACzC,CAAC;AAED,UAAM,YAAY,qBAAqB,SAAS,IAAI;AACpD,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,WAAO;AAAA,MACL,cAAc,OAAO,gBAAgB;AAAA,MACrC,cAAc,OAAO,gBAAgB;AAAA,MACrC,UAAU,OAAO,YAAY;AAAA,MAC7B,aAAa,OAAO,eAAe;AAAA,MACnC,kBAAkB,OAAO,oBAAoB;AAAA,MAC7C,gBAAgB,OAAO,kBAAkB,CAAC;AAAA,IAC5C;AAAA,EACF,SAASA,SAAO;AACd,IAAAC,KAAI,MAAM,4BAA4BD,SAAgB,EAAE,WAAW,gBAAgB,CAAC;AACpF,WAAO;AAAA,MACL,cAAc;AAAA,MACd,cAAc;AAAA,MACd,UAAU;AAAA,MACV,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,gBAAgB,CAAC;AAAA,IACnB;AAAA,EACF;AACF;AA/De;AAoEf,SAAS,mBAAmB,cAAoE;AAC9F,MAAI,QAAmB;AAEvB,aAAW,CAAC,WAAWE,MAAK,KAAK,OAAO,QAAQ,eAAe,GAAG;AAChE,QAAI,gBAAgBA,OAAM,OAAO,eAAeA,OAAM,KAAK;AACzD,cAAQ;AACR;AAAA,IACF;AAAA,EACF;AAEA,MAAI,gBAAgB,gBAAgB,GAAG,KAAK;AAC1C,YAAQ;AAAA,EACV;AAGA,QAAM,QAAQ,gBAAgB,KAAK;AACnC,QAAM,YAAY,MAAM,MAAM,MAAM;AACpC,QAAM,WAAW,eAAe,MAAM;AACtC,QAAM,aAAc,WAAW,YAAa;AAE5C,MAAI,WAAyB;AAC7B,MAAI,cAAc,GAAI,YAAW;AAAA,WACxB,cAAc,GAAI,YAAW;AAEtC,SAAO,EAAE,OAAO,SAAS;AAC3B;AAzBS;AA8BT,eAAsB,+BACpB,IACA,eACA,cACA,cACA,cACkC;AAClC,MAAI;AACF,UAAM,YAAY,cAAc,MAAM,KAAK,EAAE;AAG7C,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,MAAM,QAAQ,IAAI;AAAA,MACpB,qBAAqB,IAAI,eAAe,YAAY;AAAA,MACpD,eAAe,IAAI,eAAe,YAAY;AAAA,MAC9C,kBAAkB,IAAI,aAAa;AAAA,MACnC,eAAe,IAAI,eAAe,cAAc,SAAS;AAAA,MACzD,iBAAiB,IAAI,eAAe,YAAY;AAAA,IAClD,CAAC;AAGD,UAAM,oBAAoB,kBAAkB,mBAAmB,gBAAgB,YAAY;AAE3F,UAAM,iBAAiC;AAAA,MACrC,eAAe,sBAAsB;AAAA,MACrC,SAAS,gBAAgB;AAAA,MACzB,SAAS,gBAAgB;AAAA,MACzB,YAAY,mBAAmB;AAAA,MAC/B,WAAW,kBAAkB;AAAA,MAC7B,aAAa;AAAA,IACf;AAGA,UAAM,eAAe,OAAO,OAAO,cAAc,EAAE,OAAO,CAAC,KAAK,UAAU,MAAM,OAAO,CAAC,IAAI;AAC5F,UAAM,EAAE,OAAO,cAAc,SAAS,IAAI,mBAAmB,YAAY;AAGzE,UAAM,SAAS,OAAO,OAAO,cAAc;AAC3C,UAAM,oBAAoB,KAAK;AAAA,MAC7B,OAAO,OAAO,CAAC,KAAK,UAAU,MAAM,KAAK,IAAI,QAAQ,cAAc,CAAC,GAAG,CAAC,IAAI,OAAO;AAAA,IACrF;AACA,UAAM,kBAAkB,KAAK,IAAI,GAAG,MAAO,oBAAoB,CAAE;AAGjE,UAAM,YAAsB,CAAC;AAC7B,UAAM,aAAuB,CAAC;AAC9B,UAAM,uBAAwE,CAAC;AAE/E,WAAO,QAAQ,cAAc,EAAE,QAAQ,CAAC,CAAC,MAAM,KAAK,MAAM;AACxD,UAAI,SAAS,IAAI;AACf,kBAAU,KAAK,UAAU,IAAI,YAAY,KAAK,MAAM,KAAK,CAAC,OAAO;AAAA,MACnE,WAAW,QAAQ,IAAI;AACrB,mBAAW,KAAK,GAAG,KAAK,OAAO,CAAC,EAAE,YAAY,IAAI,KAAK,MAAM,CAAC,CAAC,uBAAuB,KAAK,MAAM,KAAK,CAAC,OAAO;AAC9G,6BAAqB,KAAK;AAAA,UACxB;AAAA,UACA,cAAc,KAAK,MAAM,KAAK;AAAA,UAC9B,aAAa,KAAK,MAAM,KAAK,IAAI;AAAA,UACjC,aAAa,sBAAsB,MAAM,KAAK;AAAA,QAChD,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAGD,UAAM,YAAY,MAAM,kBAAkB,IAAI,cAAc,gBAAgB,oBAAoB;AAGhG,UAAM,oBAAoB,MAAM,0BAA0B,IAAI,cAAc,cAAc;AAE1F,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,iBAAiB,KAAK,MAAM,eAAe;AAAA,MAC3C;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF,SAASF,SAAO;AACd,IAAAC,KAAI,MAAM,kCAAkCD,SAAgB,EAAE,WAAW,gBAAgB,CAAC;AAC1F,UAAM,IAAI,MAAM,4CAA4C;AAAA,EAC9D;AACF;AA7FsB;AAkGtB,SAAS,sBAAsB,MAAc,cAAgC;AAC3E,QAAM,UAAoC;AAAA,IACxC,eAAe;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,YAAY;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,WAAW;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,aAAa;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,SAAO,QAAQ,IAAI,KAAK,CAAC,sBAAsB,+BAA+B,iCAAiC;AACjH;AAzCS;AA8CT,eAAe,kBACb,IACA,cACA,QACA,YAC+C;AAC/C,MAAI;AACF,UAAM,SAAS;AAAA;AAAA,iBAEF,YAAY;AAAA,mBACV,KAAK,UAAU,MAAM,CAAC;AAAA,kBACvB,WAAW,IAAI,OAAK,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcpD,UAAM,WAAW,MAAM,uBAAuB,IAAI;AAAA,MAChD;AAAA,QACE,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,IAClC,GAAG;AAAA,MACD,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,iBAAiB,EAAE,MAAM,cAAc;AAAA,IACzC,CAAC;AAED,UAAM,YAAY,qBAAqB,SAAS,IAAI;AACpD,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,WAAO;AAAA,MACL,WAAW,OAAO,aAAa,CAAC,uCAAuC,4BAA4B;AAAA,MACnG,YAAY,OAAO,cAAc,CAAC,kCAAkC,+CAA+C;AAAA,MACnH,UAAU,OAAO,YAAY,CAAC,2BAA2B,sCAAsC;AAAA,IACjG;AAAA,EACF,SAASA,SAAO;AACd,IAAAC,KAAI,MAAM,+BAA+BD,SAAgB,EAAE,WAAW,gBAAgB,CAAC;AACvF,WAAO;AAAA,MACL,WAAW,CAAC,sCAAsC,uCAAuC;AAAA,MACzF,YAAY,CAAC,sCAAsC,gCAAgC;AAAA,MACnF,UAAU,CAAC,yBAAyB,qCAAqC;AAAA,IAC3E;AAAA,EACF;AACF;AArDe;AA0Df,eAAe,0BACb,IACA,cACA,QACuD;AACvD,QAAM,aAA0B,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AACnE,QAAM,eAAe,WAAW,QAAQ,YAAY;AACpD,QAAM,cAAyB,eAAe,WAAW,SAAS,IAC9D,WAAW,eAAe,CAAC,IAC3B;AAEJ,MAAI;AACF,UAAM,SAAS,sCAAsC,YAAY,OAAO,WAAW;AAAA;AAAA,kBAErE,KAAK,UAAU,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcpC,UAAM,WAAW,MAAM,uBAAuB,IAAI;AAAA,MAChD;AAAA,QACE,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,IAClC,GAAG;AAAA,MACD,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,iBAAiB,EAAE,MAAM,cAAc;AAAA,IACzC,CAAC;AAED,UAAM,YAAY,qBAAqB,SAAS,IAAI;AACpD,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,WAAO;AAAA,MACL;AAAA,MACA,qBAAqB,OAAO,uBAAuB;AAAA,MACnD,eAAe,OAAO,iBAAiB;AAAA,QACrC,UAAU,WAAW;AAAA,QACrB,SAAS,WAAW;AAAA,QACpB,kCAAkC,WAAW;AAAA,MAC/C;AAAA,MACA,sBAAsB,OAAO,wBAAwB;AAAA,QACnD;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF,SAASA,SAAO;AACd,IAAAC,KAAI,MAAM,6BAA6BD,SAAgB,EAAE,WAAW,gBAAgB,CAAC;AACrF,WAAO;AAAA,MACL;AAAA,MACA,qBAAqB;AAAA,MACrB,eAAe,CAAC,2BAA2B,yBAAyB,yBAAyB;AAAA,MAC7F,sBAAsB,CAAC,8BAA8B,6BAA6B,wBAAwB;AAAA,IAC5G;AAAA,EACF;AACF;AAnEe;;;ACzuBf;AAAA;AAAA;AAAAG;AAEA,eAAsB,SACpB,QACA,KACA,MACA,aACA,gBACmB;AACnB,MAAI;AACF,UAAM,eAA+B,CAAC;AAEtC,QAAI,aAAa;AACf,mBAAa,cAAc;AAAA,IAC7B;AAGA,QAAI,aAAa,WAAW,QAAQ,GAAG;AACrC,mBAAa,eAAe;AAAA,IAC9B,WAAW,aAAa,WAAW,QAAQ,GAAG;AAC5C,mBAAa,eAAe;AAAA,IAC9B,OAAO;AACL,mBAAa,eAAe;AAAA,IAC9B;AAEA,UAAMC,UAAS,MAAM,OAAO,IAAI,KAAK,MAAM;AAAA,MACzC;AAAA,MACA,gBAAgB;AAAA,QACd,aAAY,oBAAI,KAAK,GAAE,YAAY;AAAA,QACnC,GAAG;AAAA,MACL;AAAA,IACF,CAAC;AAED,WAAOA;AAAA,EACT,SAASC,SAAO;AACd,YAAQ,MAAM,kBAAkBA,OAAK;AACrC,UAAM,IAAI,MAAM,yBAAyB,GAAG,EAAE;AAAA,EAChD;AACF;AApCsB;AAsCtB,eAAsB,UACpB,QACA,KAC8B;AAC9B,MAAI;AACF,UAAMD,UAAS,MAAM,OAAO,IAAI,GAAG;AACnC,WAAOA;AAAA,EACT,SAASC,SAAO;AACd,YAAQ,MAAM,iBAAiBA,OAAK;AACpC,WAAO;AAAA,EACT;AACF;AAXsB;AAatB,eAAsB,aACpB,QACA,KACe;AACf,MAAI;AACF,UAAM,OAAO,OAAO,GAAG;AAAA,EACzB,SAASA,SAAO;AACd,YAAQ,MAAM,oBAAoBA,OAAK;AACvC,UAAM,IAAI,MAAM,6BAA6B,GAAG,EAAE;AAAA,EACpD;AACF;AAVsB;AA+Df,SAAS,uBACd,cACA,QACQ;AACR,QAAM,YAAY,KAAK,IAAI;AAC3B,QAAM,SAAS,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,GAAG,CAAC;AACxD,QAAM,YAAY,aAAa,MAAM,GAAG,EAAE,IAAI;AAC9C,QAAM,iBAAiB,aAAa,QAAQ,aAAa,EAAE;AAG3D,QAAM,YAAY,eACf,QAAQ,mBAAmB,GAAG,EAC9B,UAAU,GAAG,EAAE;AAElB,SAAO,GAAG,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,SAAS,IAAI,SAAS;AACnE;AAfgB;;;ARzGhB,IAAM,kBAAkB,IAAIC,MAA8C;AAE1E,IAAM,sBAAsB,KAAK,KAAK,KAAK;AAC3C,IAAM,sBAAsB,KAAK,KAAK,KAAK;AAC3C,IAAM,oBAAoB;AAE1B,IAAM,aAAa,CAAC,iBAAiB,WAAW,WAAW,cAAc,aAAa,aAAa;AAoEnG,IAAM,eAAe,KAAK,EAAE,UAAU,KAAK,CAAC;AAC5C,gBAAgB,IAAI,KAAK,YAAY;AAErC,IAAM,iBAAiB;AAAA,EACrB;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,YAAY;AAAA,EACd;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,YAAY;AAAA,EACd;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,YAAY;AAAA,EACd;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,YAAY;AAAA,EACd;AACF;AAEA,SAAS,iBAAyB;AAChC,QAAM,MAAM,KAAK,IAAI;AACrB,QAAM,SAAS,KAAK,MAAM,KAAK,OAAO,IAAI,GAAI;AAC9C,SAAO,OAAO,MAAM,MAAO,MAAM;AACnC;AAJS;AAMT,SAAS,WAAW,QAAgB;AAClC,SAAO,sBAAsB,MAAM;AACrC;AAFS;AAIT,SAAS,eAAe,QAAgB;AACtC,SAAO,sBAAsB,MAAM;AACrC;AAFS;AAIT,eAAe,YAAYC,MAAU,QAAkD;AACrF,QAAMC,OAAM,MAAMD,KAAI,MAAM,IAAI,WAAW,MAAM,CAAC;AAClD,MAAI,CAACC,KAAK,QAAO;AACjB,MAAI;AACF,WAAO,KAAK,MAAMA,IAAG;AAAA,EACvB,SAASC,SAAO;AACd,IAAAC,KAAI,MAAM,sCAAsCD,SAAgB,EAAE,WAAW,cAAc,OAAO,CAAC;AACnG,WAAO;AAAA,EACT;AACF;AATe;AAWf,eAAe,eAAeF,MAAU,QAA2C;AACjF,QAAM,UAAU,MAAM,YAAYA,MAAK,MAAM;AAC7C,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AAAA,EACxE;AACA,SAAO;AACT;AANe;AAQf,SAAS,gBAAgB,SAA2B,QAAgB;AAClE,MAAI,QAAQ,WAAW,QAAQ;AAC7B,UAAM,IAAI,SAAS,uCAAuC,KAAK,sBAAsB;AAAA,EACvF;AACF;AAJS;AAMT,eAAe,YAAYA,MAAU,SAA2B;AAC9D,QAAMA,KAAI,MAAM,IAAI,WAAW,QAAQ,MAAM,GAAG,KAAK,UAAU,OAAO,GAAG;AAAA,IACvE,eAAe;AAAA,EACjB,CAAC;AACD,QAAM,cAAcA,MAAK,QAAQ,QAAQ,OAAO;AAClD;AALe;AAOf,eAAe,cAAcA,MAAU,QAAgB,SAA2B;AAChF,QAAM,MAAM,eAAe,MAAM;AACjC,QAAMC,OAAM,MAAMD,KAAI,MAAM,IAAI,GAAG;AACnC,MAAI,UAAmC,CAAC;AACxC,MAAIC,MAAK;AACP,QAAI;AACF,gBAAU,KAAK,MAAMA,IAAG;AAAA,IAC1B,SAASC,SAAO;AACd,gBAAU,CAAC;AAAA,IACb;AAAA,EACF;AAEA,QAAM,UAAiC;AAAA,IACrC,QAAQ,QAAQ;AAAA,IAChB,WAAW,QAAQ;AAAA,IACnB,aAAa,QAAQ;AAAA,IACrB,QAAQ,QAAQ;AAAA,IAChB,cAAc,QAAQ;AAAA,IACtB,UAAU,QAAQ;AAAA,IAClB,WAAW,QAAQ;AAAA,IACnB,cAAc,QAAQ,QAAQ;AAAA,IAC9B,OAAO,QAAQ,QAAQ;AAAA,EACzB;AAEA,YAAU,QAAQ,OAAO,CAAC,SAAS,KAAK,WAAW,QAAQ,MAAM;AACjE,UAAQ,QAAQ,OAAO;AACvB,MAAI,QAAQ,SAAS,mBAAmB;AACtC,cAAU,QAAQ,MAAM,GAAG,iBAAiB;AAAA,EAC9C;AAEA,QAAMF,KAAI,MAAM,IAAI,KAAK,KAAK,UAAU,OAAO,GAAG;AAAA,IAChD,eAAe;AAAA,EACjB,CAAC;AACH;AAjCe;AAmCf,eAAe,eAAeA,MAAU,QAAkD;AACxF,QAAMC,OAAM,MAAMD,KAAI,MAAM,IAAI,eAAe,MAAM,CAAC;AACtD,MAAI,CAACC,KAAK,QAAO,CAAC;AAClB,MAAI;AACF,WAAO,KAAK,MAAMA,IAAG;AAAA,EACvB,SAASC,SAAO;AACd,WAAO,CAAC;AAAA,EACV;AACF;AARe;AAUf,SAAS,cAAc,SAA2B,YAAoB;AACpE,SAAO,cAAc,QAAQ,MAAM,IAAI,QAAQ,MAAM,aAAa,UAAU;AAC9E;AAFS;AAIT,SAAS,cAAc,QAAgB,YAAoB;AACzD,SAAO,sBAAsB,MAAM,UAAU,UAAU;AACzD;AAFS;AAIT,SAAS,gBAAgB,SAA2B;AAClD,SAAO;AAAA,IACL,QAAQ,OAAO,QAAQ,MAAM;AAAA,IAC7B,QAAQ,QAAQ;AAAA,IAChB,cAAc,QAAQ;AAAA,IACtB,UAAU,QAAQ;AAAA,IAClB,WAAW,QAAQ;AAAA,IACnB,MAAM,QAAQ;AAAA,IACd,WAAW,QAAQ;AAAA,IACnB,aAAa,QAAQ,eAAe;AAAA,IACpC,WAAW,QAAQ;AAAA,IACnB,SAAS,QAAQ,QAAQ,IAAI,CAAC,YAAY;AAAA,MACxC,YAAY,OAAO;AAAA,MACnB,eAAe,OAAO,iBAAiB;AAAA,MACvC,aAAa,OAAO;AAAA,MACpB,qBAAqB,OAAO,uBAAuB;AAAA,MACnD,UAAU,OAAO,WAAW,cAAc,QAAQ,QAAQ,OAAO,UAAU,IAAI;AAAA,MAC/E,YAAY,OAAO,cAAc;AAAA,IACnC,EAAE;AAAA,IACF,QAAQ,QAAQ,SACZ;AAAA,MACE,GAAG,QAAQ;AAAA,MACX,QAAQ,OAAO,QAAQ,OAAO,MAAM;AAAA,IACtC,IACA;AAAA,EACN;AACF;AA1BS;AA4BT,SAAS,iBAAiB,GAAgB;AACxC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,2BAA2B,KAAK,eAAe;AAAA,EACpE;AACA,SAAO;AACT;AANS;AAQT,SAAS,UAAU,OAAoC;AACrD,MAAI,OAAO,UAAU,YAAY,OAAO,SAAS,KAAK,GAAG;AACvD,WAAO,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,KAAK,CAAC;AAAA,EACzC;AACA,MAAI,OAAO,UAAU,UAAU;AAC7B,UAAM,SAAS,OAAO,WAAW,KAAK;AACtC,QAAI,OAAO,SAAS,MAAM,GAAG;AAC3B,aAAO,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,MAAM,CAAC;AAAA,IAC1C;AAAA,EACF;AACA,SAAO;AACT;AAXS;AAaT,SAAS,aAAa,SAA2B,YAAqC;AACpF,QAAM,WAAW,QAAQ,QAAQ,KAAK,CAACE,YAAWA,QAAO,eAAe,UAAU;AAClF,MAAI,UAAU;AACZ,WAAO;AAAA,EACT;AACA,QAAM,SAA0B;AAAA,IAC9B;AAAA,IACA,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC,qBAAqB;AAAA,EACvB;AACA,UAAQ,QAAQ,KAAK,MAAM;AAC3B,SAAO;AACT;AAZS;AAcT,SAAS,gBAAgB,SAA2B,YAA4B;AAC9E,MAAI,YAAY;AACd,UAAM,WAAW,QAAQ,UAAU,KAAK,CAAC,SAAS,KAAK,OAAO,UAAU;AACxE,QAAI,CAAC,UAAU;AACb,YAAM,IAAI,SAAS,uBAAuB,KAAK,6BAA6B;AAAA,IAC9E;AACA,WAAO;AAAA,EACT;AAEA,QAAM,aAAa,QAAQ,UAAU,KAAK,CAAC,aAAa,CAAC,QAAQ,QAAQ,KAAK,CAAC,WAAW,OAAO,eAAe,SAAS,EAAE,CAAC;AAC5H,MAAI,CAAC,YAAY;AACf,UAAM,IAAI,SAAS,kCAAkC,KAAK,sBAAsB;AAAA,EAClF;AACA,SAAO;AACT;AAdS;AAgBT,SAAS,gBAAgB,aAAuE;AAC9F,QAAM,SAA2D;AAAA,IAC/D,eAAe,EAAE,KAAK,GAAG,OAAO,EAAE;AAAA,IAClC,SAAS,EAAE,KAAK,GAAG,OAAO,EAAE;AAAA,IAC5B,SAAS,EAAE,KAAK,GAAG,OAAO,EAAE;AAAA,IAC5B,YAAY,EAAE,KAAK,GAAG,OAAO,EAAE;AAAA,IAC/B,WAAW,EAAE,KAAK,GAAG,OAAO,EAAE;AAAA,IAC9B,aAAa,EAAE,KAAK,GAAG,OAAO,EAAE;AAAA,EAClC;AAEA,aAAW,cAAc,aAAa;AACpC,eAAW,OAAO,YAAY;AAC5B,YAAM,QAAQ,UAAU,WAAW,OAAO,GAAG,CAAC;AAC9C,UAAI,UAAU,QAAW;AACvB,eAAO,GAAG,EAAE,OAAO;AACnB,eAAO,GAAG,EAAE,SAAS;AAAA,MACvB;AAAA,IACF;AAAA,EACF;AAEA,QAAM,WAAqC;AAAA,IACzC,eAAe;AAAA,IACf,SAAS;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,aAAa;AAAA,EACf;AAEA,aAAW,OAAO,YAAY;AAC5B,aAAS,GAAG,IAAI,OAAO,GAAG,EAAE,QAAQ,IAAI,KAAK,MAAM,OAAO,GAAG,EAAE,MAAM,OAAO,GAAG,EAAE,KAAK,IAAI;AAAA,EAC5F;AAEA,SAAO;AACT;AAlCS;AAoCT,SAAS,eAAe,cAA8B;AACpD,MAAI,gBAAgB,GAAI,QAAO;AAC/B,MAAI,gBAAgB,GAAI,QAAO;AAC/B,MAAI,gBAAgB,GAAI,QAAO;AAC/B,MAAI,gBAAgB,GAAI,QAAO;AAC/B,MAAI,gBAAgB,GAAI,QAAO;AAC/B,SAAO;AACT;AAPS;AAST,eAAe,gBAAgBJ,MAAU,SAAqD;AAC5F,QAAM,cAA8C,CAAC;AAErD,aAAW,YAAY,QAAQ,WAAW;AACxC,UAAM,SAAS,QAAQ,QAAQ,KAAK,CAAC,SAAS,KAAK,eAAe,SAAS,EAAE;AAC7E,QAAI,CAAC,QAAQ,eAAe;AAC1B;AAAA,IACF;AAEA,QAAI,CAAC,OAAO,YAAY;AAEtB,UAAI;AACF,cAAM,oBAAoB,MAAM;AAAA,UAC9BA,KAAI;AAAA,UACJ,OAAO;AAAA,UACP,SAAS;AAAA,UACT;AAAA;AAAA,UACA;AAAA;AAAA,QACF;AAEA,cAAM,SAAmC;AAAA,UACvC,eAAe,kBAAkB,eAAe;AAAA,UAChD,SAAS,kBAAkB,eAAe;AAAA,UAC1C,SAAS,kBAAkB,eAAe;AAAA,UAC1C,YAAY,kBAAkB,eAAe;AAAA,UAC7C,WAAW,kBAAkB,eAAe;AAAA,UAC5C,aAAa,kBAAkB,eAAe;AAAA;AAAA,QAChD;AAGA,cAAM,WAAW,kBAAkB,kBAAkB,YAAY,KAAK,kBAAkB,QAAQ;AAAA,cAC1F,KAAK,MAAM,kBAAkB,eAAe,CAAC;AAAA;AAAA,iBAE1C,kBAAkB,sBAAsB,YAAY,UAAU,kBAAkB,sBAAsB,OAAO;AAAA,WACnH,kBAAkB,gBAAgB,aAAa,UAAU,kBAAkB,gBAAgB,UAAU;AAAA,cAClG,kBAAkB,mBAAmB,UAAU,UAAU,kBAAkB,mBAAmB,mBAAmB;AAAA,WACpH,kBAAkB,gBAAgB,YAAY,UAAU,kBAAkB,gBAAgB,UAAU;AAEvG,cAAMK,eAAwB;AAAA,UAC5B,GAAG,kBAAkB,sBAAsB,iBAAiB,IAAI,UAAQ,kBAAkB,IAAI,EAAE;AAAA,UAChG,GAAG,kBAAkB,gBAAgB,aAAa,MAAM,GAAG,CAAC,EAAE,IAAI,SAAO,YAAY,GAAG,EAAE;AAAA,UAC1F,GAAG,kBAAkB,UAAU,UAAU,MAAM,GAAG,CAAC;AAAA,QACrD;AAEA,eAAO,aAAa;AAAA,UAClB;AAAA,UACA;AAAA,UACA,aAAAA;AAAA,UACA,gBAAgB,kBAAkB;AAAA;AAAA,UAElC,mBAAmB;AAAA,QACrB;AAAA,MACF,SAASH,SAAO;AAEd,QAAAC,KAAI,KAAK,4DAA4DD,OAAK;AAC1E,cAAM,aAAa,MAAM,sBAAsBF,KAAI,IAAI,OAAO,eAAe,SAAS,IAAI;AAC1F,cAAM,SAAmC;AAAA,UACvC,eAAe,UAAU,YAAY,QAAQ,aAAa,KAAK;AAAA,UAC/D,SAAS,UAAU,YAAY,QAAQ,OAAO,KAAK;AAAA,UACnD,SAAS,UAAU,YAAY,QAAQ,OAAO,KAAK;AAAA,UACnD,YAAY,UAAU,YAAY,QAAQ,UAAU,KAAK;AAAA,UACzD,WAAW,UAAU,YAAY,QAAQ,SAAS,KAAK;AAAA,UACvD,aAAa,UAAU,YAAY,QAAQ,WAAW,KAAK;AAAA,QAC7D;AAEA,eAAO,aAAa;AAAA,UAClB;AAAA,UACA,UAAU,YAAY,YAAY;AAAA,UAClC,aAAa,MAAM,QAAQ,YAAY,WAAW,IAAI,WAAW,YAAY,OAAO,OAAO,IAAI,CAAC;AAAA,UAChG,gBAAgB,YAAY;AAAA,QAC9B;AAAA,MACF;AAAA,IACF;AAEA,gBAAY,KAAK;AAAA,MACf,YAAY,SAAS;AAAA,MACrB,UAAU,SAAS;AAAA,MACnB,eAAe,OAAO;AAAA,MACtB,QAAQ,OAAO,WAAY;AAAA,MAC3B,UAAU,OAAO,WAAY;AAAA,MAC7B,aAAa,OAAO,WAAY;AAAA,MAChC,gBAAgB,OAAO,WAAY;AAAA,IACrC,CAAC;AAAA,EACH;AAEA,MAAI,YAAY,WAAW,GAAG;AAC5B,UAAM,IAAI,SAAS,8BAA8B,KAAK,2BAA2B;AAAA,EACnF;AAEA,QAAM,WAAW,gBAAgB,WAAW;AAC5C,QAAM,eAAe,KAAK;AAAA,IACxB,WAAW,OAAO,CAAC,KAAK,QAAQ,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,WAAW;AAAA,EACvE;AACA,QAAM,QAAQ,eAAe,YAAY;AAEzC,QAAM,YAAY,WAAW,OAAO,CAAC,QAAQ,SAAS,GAAG,KAAK,EAAE,EAAE,IAAI,CAAC,QAAQ,GAAG;AAClF,QAAM,eAAe,WAAW,OAAO,CAAC,QAAQ,SAAS,GAAG,KAAK,EAAE,EAAE,IAAI,CAAC,QAAQ,GAAG;AAErF,QAAM,cAAc,MAAM;AAAA,IACxB,IAAI;AAAA,MACF,YACG,QAAQ,CAAC,eAAe,WAAW,WAAW,EAC9C,OAAO,OAAO;AAAA,IACnB;AAAA,EACF,EAAE,MAAM,GAAG,CAAC;AAEZ,QAAM,WAAW;AAAA,IACf,SAAS,SAAS;AAAA,IAClB,YAAY,SAAS;AAAA,IACrB,SAAS,SAAS;AAAA,IAClB,eAAe,SAAS;AAAA,IACxB,iBAAiB,SAAS;AAAA,IAC1B,aAAa,SAAS;AAAA,EACxB;AAEA,QAAM,kBAAkB,MAAM,sBAAsBA,KAAI,IAAI,UAAU,KAAY;AAElF,QAAM,SAA0B;AAAA,IAC9B,QAAQ,QAAQ;AAAA,IAChB;AAAA,IACA,gBAAgB;AAAA,IAChB;AAAA,IACA,QAAQ;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC;AAAA,EACF;AAEA,SAAO;AACT;AApIe;AAsIf,eAAe,cAAc,GAAQ,MAA4B;AAC/D,QAAMA,OAAW,EAAE;AACnB,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAEhD,QAAM,eAAe,OAAO,MAAM,iBAAiB,WAAW,KAAK,eAAe,OAAO,MAAM,mBAAmB,WAAW,KAAK,iBAAiB;AACnJ,QAAM,WAAW,OAAO,MAAM,aAAa,WAAW,KAAK,WAAW;AACtE,QAAM,YAAY,OAAO,MAAM,cAAc,WAAW,KAAK,YAAY;AACzE,QAAM,qBAAqB,OAAO,MAAM,cAAc,KAAK,eAAe;AAC1E,QAAM,gBAAgB,KAAK,IAAI,KAAK,IAAI,oBAAoB,CAAC,GAAG,eAAe,MAAM;AAErF,QAAM,SAAS,eAAe;AAC9B,QAAM,YAAY,eAAe,MAAM,GAAG,aAAa,EAAE,IAAI,CAAC,UAAU,WAAW;AAAA,IACjF,GAAG;AAAA,IACH,IAAI,QAAQ;AAAA,EACd,EAAE;AAEF,QAAM,UAA4B;AAAA,IAChC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS,CAAC;AAAA,IACV,QAAQ;AAAA,IACR,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,EACpC;AAEA,QAAM,YAAYA,MAAK,OAAO;AAC9B,SAAO;AACT;AAjCe;AAmCf,eAAe,sBAAsB,GAAQ,SAA2B,oBAAoC;AAC1G,QAAMA,OAAW,EAAE;AACnB,QAAM,WAAW,MAAM,EAAE,IAAI,SAAS;AACtC,QAAM,QAAQ,SAAS,IAAI,OAAO;AAClC,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,SAAS,sBAAsB,KAAK,2BAA2B;AAAA,EAC3E;AAEA,QAAM,qBAAqB,SAAS,IAAI,YAAY;AACpD,QAAM,iBAAiB,uBAAuB,OAAO,uBAAuB,WAAW,OAAO,SAAS,oBAAoB,EAAE,IAAI;AAEjI,QAAM,WAAW,gBAAgB,SAAS,OAAO,SAAS,cAAc,IAAI,OAAO,cAAc,IAAI,MAAS;AAC9G,QAAM,SAAS,aAAa,SAAS,SAAS,EAAE;AAEhD,QAAM,cAAc,MAAM,MAAM,YAAY;AAC5C,QAAM,WAAW,cAAc,SAAS,SAAS,EAAE;AACnD,QAAM,SAASA,KAAI,SAAS,UAAU,aAAa,MAAM,QAAQ,YAAY;AAE7E,QAAM,gBAAgB,MAAM,aAAaA,KAAI,IAAI,aAAa;AAAA,IAC5D,MAAM;AAAA,IACN,UAAU,QAAQ,gBAAgB;AAAA,IAClC,YAAY;AAAA,IACZ,gBAAgB,SAAS;AAAA,EAC3B,CAAC;AAED,SAAO,WAAW;AAClB,SAAO,YAAY,MAAM,QAAQ;AACjC,SAAO,gBAAgB,eAAe,QAAQ;AAC9C,SAAO,eAAc,oBAAI,KAAK,GAAE,YAAY;AAC5C,SAAO,sBAAsB,OAAO,SAAS,IAAI,qBAAqB,MAAM,WACxE,OAAO,WAAW,SAAS,IAAI,qBAAqB,CAAW,IAC/D,OAAO,uBAAuB;AAClC,SAAO,aAAa;AAEpB,QAAM,YAAYA,MAAK,OAAO;AAE9B,SAAO;AAAA,IACL,QAAQ,OAAO,QAAQ,MAAM;AAAA,IAC7B,YAAY,SAAS;AAAA,IACrB,eAAe,OAAO;AAAA,IACtB,UAAU,cAAc,QAAQ,QAAQ,SAAS,EAAE;AAAA,IACnD,aAAa,OAAO;AAAA,EACtB;AACF;AA3Ce;AA+Cf,gBAAgB,IAAI,cAAc,CAAC,MAAM;AACvC,SAAO,gBAAgB,GAAG,EAAE,WAAW,eAAe,CAAC;AACzD,CAAC;AAED,gBAAgB,KAAK,UAAU,KAAK,GAAG,OAAO,MAAM;AAClD,QAAM,UAAU,MAAM,cAAc,GAAG,UAAU;AACjD,SAAO,gBAAgB,GAAG;AAAA,IACxB,QAAQ,OAAO,QAAQ,MAAM;AAAA,IAC7B,cAAc,QAAQ;AAAA,IACtB,UAAU,QAAQ;AAAA,IAClB,WAAW,QAAQ;AAAA,IACnB,gBAAgB,QAAQ;AAAA,IACxB,WAAW,QAAQ;AAAA,IACnB,WAAW,QAAQ;AAAA,EACrB,CAAC;AACH,CAAC;AAED,gBAAgB,KAAK,YAAY,KAAK,GAAG,OAAO,MAAM;AACpD,QAAMA,OAAW,EAAE;AACnB,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,iBAAiB,OAAO,MAAM,mBAAmB,WAAW,KAAK,iBAAiB,OAAO,MAAM,WAAW,WAAW,KAAK,SAAS;AAEzI,MAAI,gBAAgB;AAClB,UAAM,WAAW,MAAM,YAAYA,MAAK,cAAc;AACtD,QAAI,YAAY,SAAS,WAAW,UAAU,SAAS,WAAW,eAAe;AAC/E,eAAS,SAAS;AAClB,eAAS,eAAc,oBAAI,KAAK,GAAE,YAAY;AAC9C,YAAM,YAAYA,MAAK,QAAQ;AAAA,IACjC;AAAA,EACF;AAEA,QAAM,UAAU,MAAM,cAAc,GAAG,UAAU;AACjD,SAAO,gBAAgB,GAAG;AAAA,IACxB,QAAQ,OAAO,QAAQ,MAAM;AAAA,IAC7B,cAAc,QAAQ;AAAA,IACtB,UAAU,QAAQ;AAAA,IAClB,WAAW,QAAQ;AAAA,IACnB,gBAAgB,QAAQ;AAAA,IACxB,WAAW,QAAQ;AAAA,IACnB,WAAW,QAAQ;AAAA,EACrB,CAAC;AACH,CAAC;AAED,gBAAgB,KAAK,gBAAgB,KAAK,GAAG,OAAO,MAAM;AACxD,QAAM,UAAU,MAAM,cAAc,GAAG,OAAO;AAC9C,SAAO,gBAAgB,GAAG;AAAA,IACxB,QAAQ,OAAO,QAAQ,MAAM;AAAA,IAC7B,cAAc,QAAQ;AAAA,IACtB,UAAU,QAAQ;AAAA,IAClB,WAAW,QAAQ;AAAA,IACnB,gBAAgB,QAAQ;AAAA,IACxB,WAAW,QAAQ;AAAA,IACnB,WAAW,QAAQ;AAAA,EACrB,CAAC;AACH,CAAC;AAED,gBAAgB,KAAK,yBAAyB,KAAK,GAAG,OAAO,MAAM;AACjE,QAAMA,OAAW,EAAE;AACnB,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,UAAU,MAAM,eAAeA,MAAK,MAAM;AAChD,kBAAgB,SAAS,MAAM;AAC/B,MAAI,QAAQ,WAAW,aAAa;AAClC,UAAM,IAAI,SAAS,0BAA0B,KAAK,8BAA8B;AAAA,EAClF;AACA,QAAM,WAAW,MAAM,sBAAsB,GAAG,SAAS,IAAI;AAC7D,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,gBAAgB,KAAK,qBAAqB,KAAK,GAAG,OAAO,MAAM;AAC7D,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,cAAc,EAAE,IAAI,OAAO,cAAc,KAAK;AAEpD,MAAI,cAAkC;AACtC,MAAI,WAAW;AACf,MAAI,iBAA0C,CAAC;AAE/C,MAAI,YAAY,WAAW,qBAAqB,GAAG;AACjD,UAAM,WAAW,MAAM,EAAE,IAAI,SAAS;AACtC,UAAM,QAAQ,SAAS,IAAI,OAAO;AAClC,QAAI,EAAE,iBAAiB,OAAO;AAC5B,YAAM,IAAI,SAAS,0BAA0B,KAAK,2BAA2B;AAAA,IAC/E;AACA,kBAAc,MAAM,MAAM,YAAY;AACtC,eAAW,MAAM,QAAQ;AACzB,qBAAiB;AAAA,MACf,UAAU,SAAS,IAAI,UAAU,KAAK;AAAA,MACtC,MAAM,SAAS,IAAI,MAAM,KAAK;AAAA,MAC9B,gBAAgB,SAAS,IAAI,eAAe,KAAK;AAAA,MACjD,QAAQ,SAAS,IAAI,QAAQ,KAAK;AAAA,MAClC,YAAY,SAAS,IAAI,WAAW,KAAK,SAAS,IAAI,YAAY,KAAK;AAAA,IACzE;AAAA,EACF,OAAO;AACL,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAI,OAAO,KAAK,UAAU,UAAU;AAClC,YAAM,UAAU,KAAK,MAAM,QAAQ,uBAAuB,EAAE;AAC5D,YAAM,eAAe,KAAK,OAAO;AACjC,YAAM,OAAO,IAAI,WAAW,aAAa,MAAM;AAC/C,eAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,aAAK,CAAC,IAAI,aAAa,WAAW,CAAC;AAAA,MACrC;AACA,oBAAc,KAAK;AACnB,iBAAW,OAAO,KAAK,aAAa,WAAW,KAAK,WAAW;AAAA,IACjE;AACA,qBAAiB;AAAA,MACf,UAAU,OAAO,KAAK,aAAa,WAAW,KAAK,WAAW;AAAA,MAC9D,MAAM,OAAO,KAAK,SAAS,WAAW,KAAK,OAAO;AAAA,MAClD,gBAAgB,OAAO,KAAK,kBAAkB,WAAW,KAAK,gBAAgB;AAAA,MAC9E,QAAQ,OAAO,KAAK,WAAW,WAAW,KAAK,SAAS;AAAA,MACxD,YAAY,OAAO,KAAK,cAAc,YAAY,KAAK,YAAY;AAAA,IACrE;AAAA,EACF;AAEA,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,SAAS,6BAA6B,KAAK,2BAA2B;AAAA,EAClF;AAEA,QAAM,gBAAgB,MAAM,aAAa,EAAE,IAAI,IAAI,aAAa;AAAA,IAC9D,MAAO,eAAe,QAAmB;AAAA,IACzC,UAAW,eAAe,YAAuB;AAAA,IACjD,YAAY,eAAe,eAAe,SAAY,QAAQ,eAAe,UAAU,IAAI;AAAA,IAC3F,gBAAgB,eAAe;AAAA,IAC/B,QAAQ,eAAe;AAAA,EACzB,CAAC;AAED,SAAO,gBAAgB,GAAG;AAAA,IACxB;AAAA,IACA;AAAA,IACA,eAAe,cAAc;AAAA,IAC7B,WAAW,cAAc;AAAA,IACzB,OAAO,cAAc,SAAS,CAAC;AAAA,IAC/B,QAAQ,cAAc;AAAA,EACxB,CAAC;AACH,CAAC;AAED,gBAAgB,KAAK,0BAA0B,KAAK,GAAG,OAAO,MAAM;AAClE,QAAMA,OAAW,EAAE;AACnB,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,UAAU,MAAM,eAAeA,MAAK,MAAM;AAChD,kBAAgB,SAAS,MAAM;AAE/B,QAAM,SAAS,MAAM,gBAAgBA,MAAK,OAAO;AACjD,UAAQ,SAAS;AACjB,UAAQ,SAAS;AACjB,UAAQ,cAAc,OAAO;AAC7B,QAAM,YAAYA,MAAK,OAAO;AAE9B,SAAO,gBAAgB,GAAG;AAAA,IACxB,GAAG;AAAA,IACH,QAAQ,OAAO,OAAO,MAAM;AAAA,EAC9B,CAAC;AACH,CAAC;AAED,gBAAgB,IAAI,yBAAyB,KAAK,GAAG,OAAO,MAAM;AAChE,QAAMA,OAAW,EAAE;AACnB,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,UAAU,MAAM,eAAeA,MAAK,MAAM;AAChD,kBAAgB,SAAS,MAAM;AAC/B,MAAI,CAAC,QAAQ,QAAQ;AACnB,UAAM,IAAI,SAAS,4BAA4B,KAAK,6BAA6B;AAAA,EACnF;AACA,SAAO,gBAAgB,GAAG;AAAA,IACxB,GAAG,QAAQ;AAAA,IACX,QAAQ,OAAO,QAAQ,OAAO,MAAM;AAAA,EACtC,CAAC;AACH,CAAC;AAED,gBAAgB,KAAK,WAAW,KAAK,GAAG,OAAO,MAAM;AACnD,QAAMA,OAAW,EAAE;AACnB,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAEhD,QAAM,SAAS,OAAO,MAAM,WAAW,WAAW,OAAO,KAAK,MAAM,IAAI,OAAO,MAAM,WAAW,WAAW,KAAK,SAAS;AACzH,QAAM,iBAAiB,OAAO,MAAM,mBAAmB,WAAW,KAAK,iBAAiB,OAAO,MAAM,UAAU;AAC/G,QAAM,aAAa,OAAO,MAAM,eAAe,WAAW,KAAK,WAAW,KAAK,IAAI;AAEnF,MAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,YAAY;AAC7C,UAAM,IAAI,SAAS,sDAAsD,KAAK,+BAA+B;AAAA,EAC/G;AAEA,QAAM,UAAU,MAAM,eAAeA,MAAK,MAAM;AAChD,kBAAgB,SAAS,MAAM;AAC/B,MAAI,QAAQ,WAAW,aAAa;AAClC,UAAM,IAAI,SAAS,0BAA0B,KAAK,8BAA8B;AAAA,EAClF;AAEA,QAAM,WAAW,gBAAgB,SAAS,cAAc;AACxD,QAAM,SAAS,aAAa,SAAS,SAAS,EAAE;AAChD,SAAO,gBAAgB;AACvB,SAAO,eAAc,oBAAI,KAAK,GAAE,YAAY;AAC5C,SAAO,sBAAsB,OAAO,MAAM,wBAAwB,WAC9D,KAAK,sBACL,OAAO,uBAAuB;AAClC,SAAO,aAAa;AAEpB,QAAM,YAAYA,MAAK,OAAO;AAE9B,SAAO,gBAAgB,GAAG;AAAA,IACxB,QAAQ,OAAO,QAAQ,MAAM;AAAA,IAC7B,YAAY,SAAS;AAAA,IACrB,OAAO;AAAA,EACT,CAAC;AACH,CAAC;AAED,gBAAgB,KAAK,yBAAyB,KAAK,GAAG,OAAO,MAAM;AACjE,QAAMA,OAAW,EAAE;AACnB,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,UAAU,MAAM,eAAeA,MAAK,MAAM;AAChD,kBAAgB,SAAS,MAAM;AAC/B,MAAI,QAAQ,WAAW,aAAa;AAClC,UAAM,IAAI,SAAS,0BAA0B,KAAK,8BAA8B;AAAA,EAClF;AAEA,QAAM,WAAW,MAAM,sBAAsB,GAAG,OAAO;AACvD,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,gBAAgB,KAAK,qBAAqB,KAAK,GAAG,OAAO,MAAM;AAC7D,QAAMA,OAAW,EAAE;AACnB,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,UAAU,MAAM,eAAeA,MAAK,MAAM;AAChD,kBAAgB,SAAS,MAAM;AAE/B,QAAM,SAAS,MAAM,gBAAgBA,MAAK,OAAO;AACjD,UAAQ,SAAS;AACjB,UAAQ,SAAS;AACjB,UAAQ,cAAc,OAAO;AAC7B,QAAM,YAAYA,MAAK,OAAO;AAE9B,SAAO,gBAAgB,GAAG;AAAA,IACxB,GAAG;AAAA,IACH,QAAQ,OAAO,OAAO,MAAM;AAAA,EAC9B,CAAC;AACH,CAAC;AAED,gBAAgB,IAAI,aAAa,KAAK,GAAG,OAAO,MAAM;AACpD,QAAMA,OAAW,EAAE;AACnB,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,UAAU,MAAM,eAAeA,MAAK,MAAM;AAChD,SAAO,gBAAgB,GAAG,QAAQ,IAAI,CAAC,WAAW;AAAA,IAChD,GAAG;AAAA,IACH,QAAQ,OAAO,MAAM,MAAM;AAAA,EAC7B,EAAE,CAAC;AACL,CAAC;AAED,gBAAgB,IAAI,YAAY,KAAK,GAAG,OAAO,MAAM;AACnD,QAAMA,OAAW,EAAE;AACnB,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,UAAU,MAAM,eAAeA,MAAK,MAAM;AAEhD,MAAI,QAAQ,WAAW,GAAG;AACxB,WAAO,gBAAgB,GAAG;AAAA,MACxB,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,aAAa;AAAA,MACb,mBAAmB;AAAA,IACrB,CAAC;AAAA,EACH;AAEA,QAAM,YAAY,QAAQ,OAAO,CAAC,SAAS,KAAK,WAAW,eAAe,OAAO,KAAK,iBAAiB,QAAQ;AAC/G,QAAM,eAAe,UAAU,SAAS,IACpC,KAAK,MAAM,UAAU,OAAO,CAAC,KAAK,SAAS,OAAO,KAAK,gBAAgB,IAAI,CAAC,IAAI,UAAU,MAAM,IAChG;AAEJ,QAAM,kBAAkB,UAAU,KAAK,CAAC,GAAG,OAAO,EAAE,cAAc,KAAK,MAAM,EAAE,WAAW,IAAI,MAAM,EAAE,cAAc,KAAK,MAAM,EAAE,WAAW,IAAI,EAAE,EAAE,CAAC;AAErJ,SAAO,gBAAgB,GAAG;AAAA,IACxB,YAAY,QAAQ;AAAA,IACpB,gBAAgB,UAAU;AAAA,IAC1B;AAAA,IACA,aAAa,iBAAiB,SAAS;AAAA,IACvC,mBAAmB,iBAAiB,eAAe;AAAA,EACrD,CAAC;AACH,CAAC;AAED,gBAAgB,IAAI,8BAA8B,KAAK,GAAG,OAAO,MAAM;AACrE,QAAMA,OAAW,EAAE;AACnB,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,aAAa,OAAO,SAAS,EAAE,IAAI,MAAM,YAAY,GAAG,EAAE;AAEhE,QAAM,UAAU,MAAM,eAAeA,MAAK,MAAM;AAChD,kBAAgB,SAAS,MAAM;AAE/B,QAAM,SAAS,QAAQ,QAAQ,KAAK,CAAC,SAAS,KAAK,eAAe,UAAU;AAC5E,MAAI,CAAC,QAAQ,UAAU;AACrB,UAAM,IAAI,SAAS,qCAAqC,KAAK,4BAA4B;AAAA,EAC3F;AAEA,QAAM,QAAQ,MAAM,UAAUA,KAAI,SAAS,OAAO,QAAQ;AAC1D,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,SAAS,mBAAmB,KAAK,4BAA4B;AAAA,EACzE;AAEA,SAAO,IAAI,SAAS,MAAM,MAAM;AAAA,IAC9B,SAAS;AAAA,MACP,gBAAgB,OAAO,aAAa,MAAM,cAAc,eAAe;AAAA,MACvE,iBAAiB;AAAA,IACnB;AAAA,EACF,CAAC;AACH,CAAC;AAED,gBAAgB,IAAI,YAAY,KAAK,GAAG,OAAO,MAAM;AACnD,QAAMA,OAAW,EAAE;AACnB,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,UAAU,MAAM,eAAeA,MAAK,MAAM;AAChD,kBAAgB,SAAS,MAAM;AAC/B,SAAO,gBAAgB,GAAG,gBAAgB,OAAO,CAAC;AACpD,CAAC;AAGD,gBAAgB,IAAI,wCAAwC,KAAK,GAAG,OAAO,MAAM;AAC/E,QAAMA,OAAW,EAAE;AACnB,QAAM,SAAS,iBAAiB,CAAC;AACjC,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,aAAa,EAAE,IAAI,MAAM,YAAY;AAE3C,QAAM,UAAU,MAAM,eAAeA,MAAK,MAAM;AAChD,kBAAgB,SAAS,MAAM;AAE/B,QAAM,SAAS,QAAQ,QAAQ,KAAK,OAAK,EAAE,eAAe,UAAU;AACpE,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,oBAAoB,KAAK,kBAAkB;AAAA,EAChE;AAGA,MAAI,OAAO,cAAc,uBAAuB,OAAO,YAAY;AACjE,WAAO,gBAAgB,GAAG;AAAA,MACxB;AAAA,MACA,eAAe,OAAO;AAAA,MACtB,YAAY,OAAO,WAAW;AAAA,IAChC,CAAC;AAAA,EACH;AAEA,QAAM,IAAI,SAAS,qCAAqC,KAAK,+BAA+B;AAC9F,CAAC;;;ASp4BD;AAAA;AAAA;AAAAM;;;ACAA;AAAA;AAAA;AAAAC;AAEA,IAAM,yBAAyB;AAC/B,IAAM,sBAAsB;AAE5B,eAAe,gBAAgB,OAA+C;AAC5E,MAAI,CAAC,MAAO,QAAO,CAAC;AACpB,QAAMC,OAAM,MAAM,MAAM,IAAI,sBAAsB;AAClD,MAAI,CAACA,KAAK,QAAO,CAAC;AAClB,MAAI;AACF,UAAM,SAAS,KAAK,MAAMA,IAAG;AAC7B,QAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,aAAO;AAAA,IACT;AACA,WAAO,CAAC;AAAA,EACV,SAASC,SAAO;AACd,YAAQ,MAAM,sCAAsCA,OAAK;AACzD,WAAO,CAAC;AAAA,EACV;AACF;AAde;AAgBf,eAAe,iBAAiB,OAAoB,OAAwC;AAC1F,MAAI,CAAC,MAAO;AACZ,QAAM,MAAM;AAAA,IACV;AAAA,IACA,KAAK,UAAU,KAAK;AAAA,IACpB,EAAE,eAAe,oBAAoB;AAAA,EACvC;AACF;AAPe;AASf,eAAsB,eAAe,OAA+C;AAClF,SAAO,gBAAgB,KAAK;AAC9B;AAFsB;AAItB,eAAsB,iBAAiB,OAAoB,MAAqC;AAC9F,MAAI,CAAC,MAAO;AACZ,QAAM,QAAQ,MAAM,gBAAgB,KAAK;AACzC,QAAM,QAAQ,MAAM,UAAU,CAAC,SAAS,KAAK,WAAW,KAAK,MAAM;AACnE,QAAM,WAA2B;AAAA,IAC/B,GAAG;AAAA,IACH,WAAW,KAAK,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,EACtD;AACA,MAAI,SAAS,GAAG;AACd,UAAM,KAAK,IAAI;AAAA,EACjB,OAAO;AACL,UAAM,KAAK,QAAQ;AAAA,EACrB;AACA,QAAM,iBAAiB,OAAO,KAAK;AACrC;AAdsB;AAgBtB,eAAsB,iBAAiB,OAAoB,QAA+B;AACxF,MAAI,CAAC,MAAO;AACZ,QAAM,QAAQ,MAAM,gBAAgB,KAAK;AACzC,QAAM,WAAW,MAAM,OAAO,CAAC,SAAS,KAAK,WAAW,MAAM;AAC9D,MAAI,SAAS,WAAW,MAAM,QAAQ;AACpC;AAAA,EACF;AACA,QAAM,iBAAiB,OAAO,QAAQ;AACxC;AARsB;;;ADzCf,IAAM,eAAe,IAAIC,MAA8C;AAG9E,aAAa,KAAK,WAAW,KAAK,EAAE,UAAU,KAAK,CAAC,GAAG,OAAO,MAAM;AAClE,QAAM,EAAE,WAAW,SAAS,kBAAkB,GAAG,WAAW,CAAC,EAAE,IAAI,MAAM,EAAE,IAAI,KAAK;AAGpF,MAAI,CAAC,CAAC,SAAS,OAAO,EAAE,SAAS,QAAQ,GAAG;AAC1C,UAAM,gBAAgB,+CAA+C;AAAA,EACvE;AAGA,MAAI,kBAAkB,KAAK,kBAAkB,IAAI;AAC/C,UAAM,gBAAgB,2CAA2C;AAAA,EACnE;AAGA,QAAM,SAAS,OAAO,WAAW;AAGjC,QAAM,KAAK,EAAE,IAAI,KAAK,WAAW,MAAM;AACvC,QAAM,OAAO,EAAE,IAAI,KAAK,IAAI,EAAE;AAG9B,QAAM,WAAW,MAAM,KAAK,MAAM,IAAI,QAAQ,oBAAoB;AAAA,IAChE,QAAQ;AAAA,IACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAC9C,MAAM,KAAK,UAAU,EAAE,UAAU,iBAAiB,SAAS,CAAC;AAAA,EAC9D,CAAC,CAAC;AAEF,MAAI,CAAC,SAAS,IAAI;AAChB,UAAMC,UAAQ,MAAM,SAAS,KAAK;AAClC,UAAM,IAAI,MAAM,OAAOA,SAAO,OAAO,KAAK,2BAA2B;AAAA,EACvE;AAEA,QAAM,OAAO;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,cAAc,gBAAgB,MAAM;AAAA,IACpC,SAAS,gBAAgB,MAAM;AAAA,IAC/B,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,EACpC;AAGA,QAAM,EAAE,IAAI,MAAM;AAAA,IAChB,QAAQ,MAAM;AAAA,IACd,KAAK,UAAU,IAAI;AAAA,IACnB,EAAE,eAAe,KAAK;AAAA;AAAA,EACxB;AAEA,SAAO,gBAAgB,GAAG,MAAM,gBAAgB,MAAM,EAAE;AAC1D,CAAC;AAGD,aAAa,IAAI,WAAW,OAAO,MAAM;AACvC,QAAM,QAAQ,MAAM,eAAe,EAAE,IAAI,KAAK;AAC9C,SAAO,gBAAgB,GAAG,KAAK;AACjC,CAAC;AAGD,aAAa,KAAK,iBAAiB,KAAK,EAAE,UAAU,KAAK,CAAC,GAAG,OAAO,MAAM;AACxE,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,EAAE,QAAQ,UAAU,eAAe,CAAC,EAAE,IAAI,MAAM,EAAE,IAAI,KAAK;AAEjE,MAAI,CAAC,UAAU,CAAC,UAAU;AACxB,UAAM,gBAAgB,kCAAkC;AAAA,EAC1D;AAGA,QAAM,aAAa,MAAM,EAAE,IAAI,MAAM,IAAI,QAAQ,MAAM,EAAE;AACzD,MAAI,CAAC,YAAY;AAEf,UAAMC,MAAK,EAAE,IAAI,KAAK,WAAW,MAAM;AACvC,UAAMC,QAAO,EAAE,IAAI,KAAK,IAAID,GAAE;AAE9B,UAAM,eAAe,MAAMC,MAAK,MAAM,IAAI,QAAQ,kBAAkB,CAAC;AACrE,QAAI,CAAC,aAAa,IAAI;AACpB,YAAM,cAAc,MAAM;AAAA,IAC5B;AAAA,EACF;AAGA,QAAM,KAAK,EAAE,IAAI,KAAK,WAAW,MAAM;AACvC,QAAM,OAAO,EAAE,IAAI,KAAK,IAAI,EAAE;AAG9B,QAAM,WAAW,MAAM,KAAK,MAAM,IAAI,QAAQ,oBAAoB;AAAA,IAChE,QAAQ;AAAA,IACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAC9C,MAAM,KAAK,UAAU,EAAE,QAAQ,UAAU,aAAa,CAAC;AAAA,EACzD,CAAC,CAAC;AAEF,MAAI,CAAC,SAAS,IAAI;AAChB,UAAMF,UAAQ,MAAM,SAAS,KAAK;AAClC,QAAI,SAAS,WAAW,KAAK;AAC3B,YAAM,cAAc,OAAOA,SAAO,OAAO,KAAK,cAAc;AAAA,IAC9D;AACA,UAAM,IAAI,MAAM,OAAOA,SAAO,OAAO,KAAK,qBAAqB;AAAA,EACjE;AAEA,QAAM,SAAS,MAAM,SAAS,KAAK;AAEnC,SAAO,gBAAgB,GAAG;AAAA,IACxB,GAAI,UAAU,CAAC;AAAA,IACf,cAAc,gBAAgB,MAAM,cAAc,MAAM,aAAa,mBAAmB,QAAQ,CAAC;AAAA,EACnG,CAAC;AACH,CAAC;AAGD,aAAa,KAAK,kBAAkB,KAAK,EAAE,UAAU,KAAK,CAAC,GAAG,OAAO,MAAM;AACzE,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,EAAE,OAAO,IAAI,MAAM,EAAE,IAAI,KAAK;AAEpC,MAAI,CAAC,QAAQ;AACX,UAAM,gBAAgB,oBAAoB;AAAA,EAC5C;AAEA,QAAM,KAAK,EAAE,IAAI,KAAK,WAAW,MAAM;AACvC,QAAM,OAAO,EAAE,IAAI,KAAK,IAAI,EAAE;AAE9B,QAAM,WAAW,MAAM,KAAK,MAAM,IAAI,QAAQ,qBAAqB;AAAA,IACjE,QAAQ;AAAA,IACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAC9C,MAAM,KAAK,UAAU,EAAE,OAAO,CAAC;AAAA,EACjC,CAAC,CAAC;AAEF,MAAI,CAAC,SAAS,IAAI;AAChB,UAAMA,UAAQ,MAAM,SAAS,KAAK;AAClC,UAAM,IAAI,MAAM,OAAOA,SAAO,OAAO,KAAK,sBAAsB;AAAA,EAClE;AAEA,SAAO,gBAAgB,GAAG,MAAM,SAAS,KAAK,CAAC;AACjD,CAAC;AAGD,aAAa,IAAI,eAAe,OAAO,MAAM;AAC3C,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU,KAAK;AAC5C,QAAM,UAAU,EAAE,IAAI,OAAO,SAAS;AAEtC,MAAI,CAAC,WAAW,YAAY,aAAa;AACvC,UAAM,gBAAgB,mCAAmC;AAAA,EAC3D;AAEA,MAAI,CAAC,QAAQ;AACX,UAAM,gBAAgB,8BAA8B;AAAA,EACtD;AAEA,QAAM,KAAK,EAAE,IAAI,KAAK,WAAW,MAAM;AACvC,QAAM,OAAO,EAAE,IAAI,KAAK,IAAI,EAAE;AAG9B,QAAM,QAAQ,gCAAgC,MAAM,aAAa,mBAAmB,QAAQ,CAAC;AAE7F,SAAO,KAAK,MAAM,IAAI,QAAQ,OAAO;AAAA,IACnC,SAAS,EAAE,IAAI,IAAI;AAAA,EACrB,CAAC,CAAC;AACJ,CAAC;AAGD,aAAa,MAAM,qBAAqB,KAAK,EAAE,UAAU,KAAK,CAAC,GAAG,OAAO,MAAM;AAC7E,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,WAAW,MAAM,EAAE,IAAI,KAAK;AAElC,QAAM,KAAK,EAAE,IAAI,KAAK,WAAW,MAAM;AACvC,QAAM,OAAO,EAAE,IAAI,KAAK,IAAI,EAAE;AAE9B,QAAM,WAAW,MAAM,KAAK,MAAM,IAAI,QAAQ,wBAAwB;AAAA,IACpE,QAAQ;AAAA,IACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAC9C,MAAM,KAAK,UAAU,QAAQ;AAAA,EAC/B,CAAC,CAAC;AAEF,MAAI,CAAC,SAAS,IAAI;AAChB,UAAMA,UAAQ,MAAM,SAAS,KAAK;AAClC,UAAM,IAAI,MAAM,OAAOA,SAAO,OAAO,KAAK,2BAA2B;AAAA,EACvE;AAGA,QAAM,aAAa,MAAM,EAAE,IAAI,MAAM,IAAI,QAAQ,MAAM,EAAE;AACzD,MAAI,YAAY;AACd,UAAM,WAAW,KAAK,MAAM,UAAU;AACtC,UAAM,EAAE,IAAI,MAAM;AAAA,MAChB,QAAQ,MAAM;AAAA,MACd,KAAK,UAAU,EAAE,GAAG,UAAU,GAAG,SAAS,CAAC;AAAA,MAC3C,EAAE,eAAe,KAAK;AAAA,IACxB;AAAA,EACF;AAEA,SAAO,gBAAgB,GAAG,MAAM,SAAS,KAAK,CAAC;AACjD,CAAC;AAGD,aAAa,IAAI,iBAAiB,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AAGnC,QAAM,aAAa,MAAM,EAAE,IAAI,MAAM,IAAI,QAAQ,MAAM,EAAE;AACzD,MAAI,YAAY;AACd,WAAO,gBAAgB,GAAG,KAAK,MAAM,UAAU,CAAC;AAAA,EAClD;AAEA,QAAM,KAAK,EAAE,IAAI,KAAK,WAAW,MAAM;AACvC,QAAM,OAAO,EAAE,IAAI,KAAK,IAAI,EAAE;AAE9B,QAAM,WAAW,MAAM,KAAK,MAAM,IAAI,QAAQ,kBAAkB,CAAC;AAEjE,MAAI,CAAC,SAAS,IAAI;AAChB,QAAI,SAAS,WAAW,KAAK;AAC3B,YAAM,cAAc,MAAM;AAAA,IAC5B;AACA,UAAMA,UAAQ,MAAM,SAAS,KAAK;AAClC,UAAM,IAAI,MAAM,OAAOA,SAAO,OAAO,KAAK,yBAAyB;AAAA,EACrE;AAEA,QAAM,OAAO,MAAM,SAAS,KAAK;AAGjC,QAAM,EAAE,IAAI,MAAM;AAAA,IAChB,QAAQ,MAAM;AAAA,IACd,KAAK,UAAU,IAAI;AAAA,IACnB,EAAE,eAAe,KAAK;AAAA,EACxB;AAEA,SAAO,gBAAgB,GAAG,IAAI;AAChC,CAAC;AAGD,aAAa,IAAI,wBAAwB,OAAO,MAAM;AACpD,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AAEnC,QAAM,KAAK,EAAE,IAAI,KAAK,WAAW,MAAM;AACvC,QAAM,OAAO,EAAE,IAAI,KAAK,IAAI,EAAE;AAE9B,QAAM,WAAW,MAAM,KAAK,MAAM,IAAI,QAAQ,yBAAyB,CAAC;AAExE,MAAI,CAAC,SAAS,IAAI;AAChB,UAAMA,UAAQ,MAAM,SAAS,KAAK;AAClC,UAAM,IAAI,MAAM,OAAOA,SAAO,OAAO,KAAK,2BAA2B;AAAA,EACvE;AAEA,SAAO,gBAAgB,GAAG,MAAM,SAAS,KAAK,CAAC;AACjD,CAAC;AAGD,aAAa,IAAI,oBAAoB,KAAK,EAAE,UAAU,KAAK,CAAC,GAAG,OAAO,MAAM;AAC1E,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AAEnC,QAAM,KAAK,EAAE,IAAI,KAAK,WAAW,MAAM;AACvC,QAAM,OAAO,EAAE,IAAI,KAAK,IAAI,EAAE;AAE9B,QAAM,WAAW,MAAM,KAAK,MAAM,IAAI,QAAQ,qBAAqB,CAAC;AAEpE,MAAI,CAAC,SAAS,IAAI;AAChB,QAAI,SAAS,WAAW,KAAK;AAC3B,YAAM,cAAc,MAAM;AAAA,IAC5B;AACA,UAAMA,UAAQ,MAAM,SAAS,KAAK;AAClC,UAAM,IAAI,MAAM,OAAOA,SAAO,OAAO,KAAK,4BAA4B;AAAA,EACxE;AAEA,QAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,SAAO,gBAAgB,GAAG;AAAA,IACxB,GAAI,QAAQ,CAAC;AAAA,IACb,WAAW;AAAA,MACT,aAAa,KAAK,OAAO,MAAM,SAAS,mBAAmB,KAAK,IAAI;AAAA,MACpE,sBAAsB,MAAM,SAAS,qBAAqB,KAAK,KAC5D,MAAM,SAAS,oBAAoB,KAAK,KAAK,IAAI,GAAG,MAAM,uBAAuB,CAAC,IAAI;AAAA,MACzF,oBAAoB,MAAM,SAAS,mBAAmB,KAAK,KACvD,MAAM,SAAS,qBAAqB,OAAO,MAAM,SAAS,mBAAmB,KAAK,MAAO;AAAA,IAC/F;AAAA,EACF,CAAC;AACH,CAAC;AAGD,aAAa,KAAK,6BAA6B,KAAK,EAAE,UAAU,KAAK,CAAC,GAAG,OAAO,MAAM;AACpF,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,WAAW,MAAM,EAAE,IAAI,SAAS;AAEtC,QAAMG,QAAO,SAAS,IAAI,WAAW;AACrC,QAAM,SAAS,SAAS,IAAI,QAAQ;AACpC,QAAM,WAAW,SAAS,IAAI,UAAU;AAExC,MAAI,CAACA,SAAQ,CAAC,UAAU,CAAC,UAAU;AACjC,UAAM,gBAAgB,8CAA8C;AAAA,EACtE;AAGA,QAAM,YAAY,KAAK,IAAI;AAC3B,QAAM,YAAY,SAAS,MAAM,GAAG,EAAE,IAAI,KAAK;AAC/C,QAAM,aAAa,cAAc,MAAM,IAAI,MAAM,IAAI,SAAS,IAAI,QAAQ;AAE1E,MAAI;AAEF,UAAM,EAAE,IAAI,QAAQ,IAAI,YAAYA,MAAK,OAAO,GAAG;AAAA,MACjD,cAAc;AAAA,QACZ,aAAaA,MAAK,QAAQ;AAAA,MAC5B;AAAA,IACF,CAAC;AAGD,UAAM,KAAK,EAAE,IAAI,KAAK,WAAW,MAAM;AACvC,UAAM,OAAO,EAAE,IAAI,KAAK,IAAI,EAAE;AAG9B,UAAM,KAAK,MAAM,IAAI,QAAQ,yBAAyB;AAAA,MACpD,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAC9C,MAAM,KAAK,UAAU;AAAA,QACnB,MAAM;AAAA,QACN;AAAA,QACA,MAAM;AAAA,UACJ,UAAU;AAAA,UACV,kBAAkB;AAAA,UAClB,MAAMA,MAAK;AAAA,UACX,UAAU,SAAS,IAAI,UAAU,KAAK;AAAA,UACtC,aAAaA,MAAK;AAAA,QACpB;AAAA,MACF,CAAC;AAAA,IACH,CAAC,CAAC;AAEF,WAAO,gBAAgB,GAAG;AAAA,MACxB,YAAY;AAAA,MACZ,MAAMA,MAAK;AAAA,MACX,aAAaA,MAAK;AAAA,MAClB,aAAY,oBAAI,KAAK,GAAE,YAAY;AAAA,IACrC,CAAC;AAAA,EAEH,SAASH,SAAO;AACd,YAAQ,MAAM,2BAA2BA,OAAK;AAC9C,UAAM,IAAI,MAAM,4BAA4B;AAAA,EAC9C;AACF,CAAC;AAGD,aAAa,IAAI,SAAS,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,OAAO,MAAM;AAGjE,SAAO,gBAAgB,GAAG;AAAA,IACxB,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,IACP,SAAS;AAAA,EACX,CAAC;AACH,CAAC;;;AEpWD;AAAA;AAAA;AAAAI;;;ACAA;AAAA;AAAA;AAAAC;AAyIO,SAAS,cAAc,UAAkB,KAAK,OAAO,MAAM;AAC9D,SAAO,OAAO,GAAY,SAAe;AACrC,UAAM,gBAAgB,EAAE,IAAI,OAAO,gBAAgB;AAEnD,QAAI,iBAAiB,SAAS,aAAa,IAAI,SAAS;AACpD,YAAM,IAAI,SAAS,KAAK,qBAAqB,yCAAyC,OAAO,QAAQ;AAAA,IACzG;AAEA,UAAM,KAAK;AAAA,EACf;AACJ;AAVgB;;;ADhIT,IAAM,eAAe,IAAIC,MAA8C;AAY9E,IAAM,cAAc;AAAA,EAClB,OAAO;AAAA,IACL,OAAO,CAAC,cAAc,aAAa,aAAa,aAAa,WAAW;AAAA,IACxE,SAAS,KAAK,OAAO;AAAA;AAAA,EACvB;AAAA,EACA,OAAO;AAAA,IACL,OAAO,CAAC,cAAc,aAAa,cAAc,aAAa,YAAY;AAAA,IAC1E,SAAS,KAAK,OAAO;AAAA;AAAA,EACvB;AAAA,EACA,OAAO;AAAA,IACL,OAAO,CAAC,aAAa,cAAc,iBAAiB;AAAA,IACpD,SAAS,MAAM,OAAO;AAAA;AAAA,EACxB;AAAA,EACA,UAAU;AAAA,IACR,OAAO,CAAC,mBAAmB,sBAAsB,yEAAyE;AAAA,IAC1H,SAAS,KAAK,OAAO;AAAA;AAAA,EACvB;AACF;AAGA,SAAS,aAAaC,OAAY,MAAsC;AACtE,QAAM,SAAS,YAAY,IAAI;AAE/B,MAAI,CAAC,OAAO,MAAM,SAASA,MAAK,IAAI,GAAG;AACrC,UAAM,gBAAgB,qCAAqC,OAAO,MAAM,KAAK,IAAI,CAAC,EAAE;AAAA,EACtF;AAEA,MAAIA,MAAK,OAAO,OAAO,SAAS;AAC9B,UAAM,YAAY,OAAO,WAAW,OAAO;AAC3C,UAAM,gBAAgB,iCAAiC,SAAS,IAAI;AAAA,EACtE;AACF;AAXS;AAcT,SAAS,gBAAgB,MAAc,QAAgB,UAAkB,QAAyB;AAChG,QAAM,YAAY,KAAK,IAAI;AAC3B,QAAM,eAAe,SAAS,QAAQ,mBAAmB,GAAG;AAC5D,QAAM,QAAQ,CAAC,IAAI;AAEnB,MAAI,QAAQ;AACV,UAAM,KAAK,MAAM;AAAA,EACnB;AAEA,QAAM,KAAK,QAAQ,GAAG,SAAS,IAAI,YAAY,EAAE;AAEjD,SAAO,MAAM,KAAK,GAAG;AACvB;AAZS;AAeT,aAAa,KAAK,UAAU,KAAK,GAAG,cAAc,KAAK,OAAO,IAAI,GAAG,OAAO,MAAM;AAChF,QAAM,WAAW,MAAM,EAAE,IAAI,SAAS;AACtC,QAAMA,QAAO,SAAS,IAAI,MAAM;AAChC,QAAM,SAAS,SAAS,IAAI,QAAQ;AACpC,QAAM,WAAW,SAAS,IAAI,UAAU;AAExC,MAAI,CAACA,OAAM;AACT,UAAM,gBAAgB,kBAAkB;AAAA,EAC1C;AAEA,QAAM,OAAO,eAAe,CAAC;AAC7B,eAAaA,OAAM,OAAO;AAE1B,QAAM,SAAS,MAAMA,MAAK,YAAY;AACtC,QAAM,MAAM,gBAAgB,SAAS,KAAK,IAAIA,MAAK,MAAM,MAAM;AAG/D,QAAM,iBAAiB,WAAW,KAAK,MAAM,QAAQ,IAAI,CAAC;AAC1D,QAAM,SAAS,EAAE,IAAI,SAAS,KAAK,QAAQA,MAAK,MAAM;AAAA,IACpD,QAAQ,KAAK;AAAA,IACb,cAAcA,MAAK;AAAA,IACnB,GAAG;AAAA,EACL,CAAC;AAED,QAAM,WAA2B;AAAA,IAC/B;AAAA,IACA,KAAK,uBAAuB,GAAG;AAAA,IAC/B,MAAMA,MAAK;AAAA,IACX,MAAMA,MAAK;AAAA,IACX,UAAU;AAAA,EACZ;AAEA,SAAO,gBAAgB,GAAG,UAAU,SAAS,GAAG;AAClD,CAAC;AAGD,aAAa,KAAK,UAAU,KAAK,GAAG,cAAc,KAAK,OAAO,IAAI,GAAG,OAAO,MAAM;AAChF,QAAM,WAAW,MAAM,EAAE,IAAI,SAAS;AACtC,QAAMA,QAAO,SAAS,IAAI,MAAM;AAChC,QAAM,OAAO,SAAS,IAAI,MAAM;AAChC,QAAM,WAAW,SAAS,IAAI,UAAU;AAExC,MAAI,CAACA,OAAM;AACT,UAAM,gBAAgB,kBAAkB;AAAA,EAC1C;AAEA,QAAM,OAAO,eAAe,CAAC;AAC7B,eAAaA,OAAM,OAAO;AAE1B,QAAM,SAAS,MAAMA,MAAK,YAAY;AACtC,QAAM,MAAM,gBAAgB,UAAU,KAAK,IAAIA,MAAK,MAAM,QAAQ,SAAS;AAG3E,QAAM,iBAAiB,WAAW,KAAK,MAAM,QAAQ,IAAI,CAAC;AAC1D,QAAM,SAAS,EAAE,IAAI,SAAS,KAAK,QAAQA,MAAK,MAAM;AAAA,IACpD,QAAQ,KAAK;AAAA,IACb,cAAcA,MAAK;AAAA,IACnB,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAC;AAGD,MAAI,WAAmC,CAAC;AACxC,MAAI,SAAS,WAAW;AACtB,eAAW;AAAA,MACT,WAAW,uBAAuB,GAAG;AAAA,MACrC,QAAQ,uBAAuB,GAAG;AAAA,MAClC,OAAO,uBAAuB,GAAG;AAAA,IACnC;AAAA,EACF;AAEA,QAAM,WAA2B;AAAA,IAC/B;AAAA,IACA,KAAK,uBAAuB,GAAG;AAAA,IAC/B,MAAMA,MAAK;AAAA,IACX,MAAMA,MAAK;AAAA,IACX;AAAA,IACA,UAAU;AAAA,EACZ;AAGA,MAAI,SAAS,WAAW;AACtB,UAAM,EAAE,IAAI,MAAM;AAAA,MAChB,iBAAiB,KAAK,EAAE;AAAA,MACxB,KAAK,UAAU,QAAQ;AAAA,MACvB,EAAE,eAAe,MAAM;AAAA;AAAA,IACzB;AAAA,EACF;AAEA,SAAO,gBAAgB,GAAG,UAAU,SAAS,GAAG;AAClD,CAAC;AAGD,aAAa,KAAK,UAAU,KAAK,GAAG,cAAc,MAAM,OAAO,IAAI,GAAG,OAAO,MAAM;AACjF,QAAM,WAAW,MAAM,EAAE,IAAI,SAAS;AACtC,QAAMA,QAAO,SAAS,IAAI,MAAM;AAChC,QAAM,WAAW,SAAS,IAAI,UAAU;AAExC,MAAI,CAACA,OAAM;AACT,UAAM,gBAAgB,kBAAkB;AAAA,EAC1C;AAEA,QAAM,OAAO,eAAe,CAAC;AAC7B,eAAaA,OAAM,OAAO;AAI1B,QAAM,SAAS,MAAMA,MAAK,YAAY;AACtC,QAAM,MAAM,gBAAgB,UAAU,KAAK,IAAIA,MAAK,IAAI;AAExD,QAAM,iBAAiB,WAAW,KAAK,MAAM,QAAQ,IAAI,CAAC;AAC1D,QAAM,SAAS,EAAE,IAAI,SAAS,KAAK,QAAQA,MAAK,MAAM;AAAA,IACpD,QAAQ,KAAK;AAAA,IACb,cAAcA,MAAK;AAAA,IACnB,GAAG;AAAA,EACL,CAAC;AAED,QAAM,WAA2B;AAAA,IAC/B;AAAA,IACA,KAAK,uBAAuB,GAAG;AAAA,IAC/B,MAAMA,MAAK;AAAA,IACX,MAAMA,MAAK;AAAA,IACX,UAAU;AAAA,EACZ;AAEA,SAAO,gBAAgB,GAAG,UAAU,SAAS,GAAG;AAClD,CAAC;AAGD,aAAa,IAAI,WAAW,OAAO,MAAM;AACvC,QAAM,OAAO,EAAE,IAAI,KAAK,QAAQ,wBAAwB,EAAE;AAC1D,QAAM,UAAU,EAAE,IAAI,MAAM,SAAS;AACrC,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU,MAAM;AAE7C,MAAI,CAAC,MAAM;AACT,UAAM,gBAAgB,mBAAmB;AAAA,EAC3C;AAGA,QAAM,WAAW,QAAQ,IAAI,GAAG,UAAU,IAAI,OAAO,KAAK,EAAE;AAC5D,QAAMC,UAAS,MAAM,EAAE,IAAI,MAAM,IAAI,UAAU,EAAE,MAAM,SAAS,CAAC;AACjE,MAAIA,SAAQ;AACV,oBAAgB,GAAG,EAAE,QAAQ,MAAM,SAAS,MAAM,CAAC;AACnD,WAAO,IAAI,SAASA,SAAQ;AAAA,MAC1B,SAAS,EAAE,IAAI;AAAA,IACjB,CAAC;AAAA,EACH;AAEA,QAAMD,QAAO,MAAM,UAAU,EAAE,IAAI,SAAS,IAAI;AAEhD,MAAI,CAACA,OAAM;AACT,UAAM,cAAc,MAAM;AAAA,EAC5B;AAGA,QAAM,UAAU,IAAI,QAAQ;AAC5B,UAAQ,IAAI,gBAAgBA,MAAK,cAAc,eAAe,0BAA0B;AAExF,MAAI,YAAYA,MAAK,cAAc,oBAAoB;AACrD,UAAM,WAAWA,MAAK,gBAAgB,gBAAgB,KAAK,MAAM,GAAG,EAAE,IAAI;AAC1E,YAAQ,IAAI,uBAAuB,yBAAyB,QAAQ,GAAG;AAAA,EACzE,OAAO;AACL,YAAQ,IAAI,uBAAuB,QAAQ;AAAA,EAC7C;AAGA,kBAAgB,GAAG;AAAA,IACjB,QAAQ;AAAA;AAAA,IACR,SAAS;AAAA;AAAA,IACT,SAAS;AAAA,EACX,CAAC;AAED,SAAO,QAAQ,EAAE,IAAI,OAAO,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AACtD,YAAQ,IAAI,KAAK,KAAe;AAAA,EAClC,CAAC;AAGD,MAAI,CAAC,YAAYA,MAAK,OAAO,OAAO,MAAM;AACxC,UAAM,EAAE,IAAI,MAAM;AAAA,MAChB;AAAA,MACAA,MAAK;AAAA,MACL,EAAE,eAAe,KAAK;AAAA,IACxB;AAAA,EACF;AAEA,SAAO,IAAI,SAASA,MAAK,MAAM,EAAE,QAAQ,CAAC;AAC5C,CAAC;AAGD,aAAa,OAAO,WAAW,KAAK,GAAG,OAAO,MAAM;AAClD,QAAM,OAAO,EAAE,IAAI,KAAK,QAAQ,wBAAwB,EAAE;AAC1D,QAAM,OAAO,eAAe,CAAC;AAE7B,MAAI,CAAC,MAAM;AACT,UAAM,gBAAgB,mBAAmB;AAAA,EAC3C;AAGA,QAAMA,QAAO,MAAM,UAAU,EAAE,IAAI,SAAS,IAAI;AAChD,MAAI,CAACA,OAAM;AACT,UAAM,cAAc,MAAM;AAAA,EAC5B;AAGA,QAAM,aAAaA,MAAK,gBAAgB;AACxC,MAAI,eAAe,KAAK,MAAM,KAAK,SAAS,SAAS;AACnD,UAAM,eAAe,gDAAgD;AAAA,EACvE;AAEA,QAAM,aAAa,EAAE,IAAI,SAAS,IAAI;AAGtC,QAAM,EAAE,IAAI,MAAM,OAAO,QAAQ,IAAI,EAAE;AACvC,MAAI,KAAK,SAAS,SAAS,GAAG;AAC5B,UAAM,EAAE,IAAI,MAAM,OAAO,iBAAiB,KAAK,EAAE,EAAE;AAAA,EACrD;AAEA,SAAO,kBAAkB,CAAC;AAC5B,CAAC;AAGD,aAAa,KAAK,kBAAkB,KAAK,GAAG,OAAO,MAAM;AACvD,QAAM,EAAE,UAAU,UAAU,OAAO,UAAU,IAAI,MAAM,EAAE,IAAI,KAAK;AAElE,MAAI,CAAC,YAAY,CAAC,UAAU;AAC1B,UAAM,gBAAgB,oCAAoC;AAAA,EAC5D;AAEA,QAAM,OAAO,eAAe,CAAC;AAC7B,QAAM,MAAM,gBAAgB,MAAM,KAAK,IAAI,QAAQ;AAGnD,MAAI;AAGF,UAAM,YAAY,kBAAkB,IAAI;AAExC,WAAO,gBAAgB,GAAG;AAAA,MACxB;AAAA,MACA;AAAA,MACA,QAAQ;AAAA;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,MAClB;AAAA,MACA,QAAQ;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,WAAW,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,GAAI,EAAE,YAAY;AAAA,IAC5D,CAAC;AAAA,EACH,SAASE,SAAO;AACd,YAAQ,MAAM,iCAAiCA,OAAK;AACpD,UAAM,gBAAgB,+BAA+B;AAAA,EACvD;AACF,CAAC;;;AEtUD;AAAA;AAAA;AAAAC;AAOA,IAAM,MAAM,IAAIC,MAAwB;AAGxC,IAAI,IAAI,MAAM,KAAK,CAAC;AAGpB,IAAI,KAAK,eAAe,OAAO,MAAM;AACjC,MAAI;AACA,UAAM,cAAc,EAAE,IAAI,OAAO,cAAc;AAC/C,QAAI;AACJ,QAAI,UAA0B,CAAC;AAE/B,QAAI,aAAa,SAAS,qBAAqB,GAAG;AAE9C,YAAM,WAAW,MAAM,EAAE,IAAI,SAAS;AACtC,YAAM,YAAY,SAAS,IAAI,OAAO;AAEtC,UAAI,CAAC,WAAW;AACZ,eAAO,EAAE,KAAK,EAAE,OAAO,yBAAyB,GAAG,GAAG;AAAA,MAC1D;AAEA,oBAAc,MAAM,UAAU,YAAY;AAG1C,YAAM,OAAO,SAAS,IAAI,MAAM;AAChC,YAAM,WAAW,SAAS,IAAI,UAAU;AACxC,YAAM,YAAY,SAAS,IAAI,YAAY;AAC3C,YAAM,gBAAgB,SAAS,IAAI,gBAAgB;AACnD,YAAM,SAAS,SAAS,IAAI,QAAQ;AAEpC,gBAAU;AAAA,QACN,MAAM,QAAsC;AAAA,QAC5C,UAAU,YAAY;AAAA,QACtB,YAAY,cAAc;AAAA,QAC1B,gBAAgB;AAAA,QAChB;AAAA,MACJ;AAAA,IACJ,WAAW,aAAa,SAAS,kBAAkB,GAAG;AAElD,YAAM,OAAO,MAAM,EAAE,IAAI,KAGtB;AAEH,UAAI,CAAC,KAAK,OAAO;AACb,eAAO,EAAE,KAAK,EAAE,OAAO,yBAAyB,GAAG,GAAG;AAAA,MAC1D;AAGA,YAAM,eAAe,KAAK,KAAK,KAAK;AACpC,YAAM,QAAQ,IAAI,WAAW,aAAa,MAAM;AAChD,eAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,cAAM,CAAC,IAAI,aAAa,WAAW,CAAC;AAAA,MACxC;AACA,oBAAc,MAAM;AACpB,gBAAU,KAAK,WAAW,CAAC;AAAA,IAC/B,OAAO;AAEH,oBAAc,MAAM,EAAE,IAAI,YAAY;AAAA,IAC1C;AAGA,QAAI,YAAY,aAAa,KAAK,OAAO,MAAM;AAC3C,aAAO,EAAE,KAAK,EAAE,OAAO,6CAA6C,GAAG,GAAG;AAAA,IAC9E;AAGA,UAAM,SAAS,MAAM,aAAa,EAAE,IAAI,IAAI,aAAa,OAAO;AAGhE,WAAO,EAAE,KAAK;AAAA,MACV,SAAS;AAAA,MACT,eAAe,OAAO;AAAA,MACtB,YAAY,OAAO;AAAA,MACnB,OAAO,OAAO;AAAA,MACd,kBAAkB,OAAO;AAAA,MACzB,UAAU,QAAQ,YAAY;AAAA,MAC9B,MAAM,QAAQ,QAAQ;AAAA,IAC1B,CAAC;AAAA,EAEL,SAASC,SAAO;AACZ,IAAAC,KAAI,MAAM,uBAAuBD,SAAgB,EAAE,WAAW,kBAAkB,CAAC;AACjF,WAAO,EAAE,KAAK;AAAA,MACV,OAAO;AAAA,MACP,SAASA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,IACtD,GAAG,GAAG;AAAA,EACV;AACJ,CAAC;AAGD,IAAI,IAAI,cAAc,CAAC,MAAM;AACzB,SAAO,EAAE,KAAK;AAAA,IACV,qBAAqB;AAAA,MACjB,EAAE,MAAM,QAAQ,MAAM,cAAc;AAAA,MACpC,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,WAAW;AAAA,MAC/B,EAAE,MAAM,MAAM,MAAM,aAAa;AAAA,MACjC,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,aAAa;AAAA,MACjC,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,aAAa;AAAA,MACjC,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,YAAY;AAAA,MAChC,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,WAAW;AAAA,MAC/B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,YAAY;AAAA,MAChC,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,YAAY;AAAA,MAChC,EAAE,MAAM,MAAM,MAAM,OAAO;AAAA,MAC3B,EAAE,MAAM,MAAM,MAAM,OAAO;AAAA,MAC3B,EAAE,MAAM,MAAM,MAAM,WAAW;AAAA,MAC/B,EAAE,MAAM,MAAM,MAAM,YAAY;AAAA,MAChC,EAAE,MAAM,MAAM,MAAM,aAAa;AAAA,MACjC,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,YAAY;AAAA,MAChC,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,cAAc;AAAA,MAClC,EAAE,MAAM,MAAM,MAAM,YAAY;AAAA,MAChC,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,WAAW;AAAA,MAC/B,EAAE,MAAM,MAAM,MAAM,aAAa;AAAA,MACjC,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,YAAY;AAAA,MAChC,EAAE,MAAM,MAAM,MAAM,WAAW;AAAA,MAC/B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,YAAY;AAAA,MAChC,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,WAAW;AAAA,MAC/B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,WAAW;AAAA,MAC/B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,YAAY;AAAA,MAChC,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,WAAW;AAAA,MAC/B,EAAE,MAAM,MAAM,MAAM,aAAa;AAAA,MACjC,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,WAAW;AAAA,MAC/B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,MAAM;AAAA,MAC1B,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,iBAAiB;AAAA,MACrC,EAAE,MAAM,MAAM,MAAM,SAAS;AAAA,MAC7B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,WAAW;AAAA,MAC/B,EAAE,MAAM,MAAM,MAAM,gBAAgB;AAAA,MACpC,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,WAAW;AAAA,MAC/B,EAAE,MAAM,MAAM,MAAM,WAAW;AAAA,MAC/B,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,OAAO,MAAM,WAAW;AAAA,MAChC,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC5B,EAAE,MAAM,MAAM,MAAM,UAAU;AAAA,MAC9B,EAAE,MAAM,MAAM,MAAM,WAAW;AAAA,MAC/B,EAAE,MAAM,MAAM,MAAM,YAAY;AAAA,IACpC;AAAA,EACJ,CAAC;AACL,CAAC;AAGD,IAAI,IAAI,WAAW,CAAC,MAAM;AACtB,SAAO,EAAE,KAAK;AAAA,IACV,kBAAkB;AAAA,MACd;AAAA,QACI,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,aAAa;AAAA,QACb,WAAW;AAAA,QACX,cAAc;AAAA,QACd,SAAS;AAAA,MACb;AAAA,MACA;AAAA,QACI,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,aAAa;AAAA,QACb,WAAW;AAAA,QACX,cAAc;AAAA,QACd,SAAS;AAAA,QACT,aAAa;AAAA,MACjB;AAAA,MACA;AAAA,QACI,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,aAAa;AAAA,QACb,WAAW;AAAA,QACX,cAAc;AAAA,QACd,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ,CAAC;AACL,CAAC;AAED,IAAO,kBAAQ;;;AC9Of;AAAA;AAAA;AAAAE;AAKA,IAAMC,OAAM,IAAIC,MAAK;AAGrBD,KAAI,IAAI,MAAM,KAAK,CAAC;AAGpBA,KAAI,KAAK,aAAa,OAAO,MAAM;AACjC,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAQtB;AAEH,UAAM,QAAQ,KAAK,SAAS;AAG5B,QAAI;AACJ,QAAI,KAAK,UAAU;AACjB,iBAAW,KAAK;AAAA,IAClB,WAAW,KAAK,QAAQ;AACtB,iBAAW;AAAA,QACT,EAAE,MAAM,UAAU,SAAS,KAAK,UAAU,+BAA+B;AAAA,QACzE,EAAE,MAAM,QAAQ,SAAS,KAAK,OAAO;AAAA,MACvC;AAAA,IACF,OAAO;AACL,aAAO,EAAE,KAAK,EAAE,OAAO,qCAAqC,GAAG,GAAG;AAAA,IACpE;AAGA,UAAM,KAAM,EAAU,IAAI;AAE1B,QAAI,KAAK,QAAQ;AACf,YAAM,SAAS,MAAM,GAAG,IAAI,OAAO;AAAA,QACjC;AAAA,QACA,QAAQ;AAAA,QACR,aAAa,KAAK,eAAe;AAAA,QACjC,YAAY,KAAK,cAAc;AAAA,MACjC,CAAC;AAED,aAAO,IAAI,SAAS,QAAQ;AAAA,QAC1B,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,iBAAiB;AAAA,UACjB,cAAc;AAAA,QAChB;AAAA,MACF,CAAC;AAAA,IACH;AAGA,UAAM,WAAW,MAAM,GAAG,IAAI,OAAO;AAAA,MACnC;AAAA,MACA,aAAa,KAAK,eAAe;AAAA,MACjC,YAAY,KAAK,cAAc;AAAA,IACjC,CAAC;AAED,WAAO,gBAAgB,GAAG;AAAA,MACxB,UAAU,SAAS;AAAA,MACnB,OAAO,SAAS;AAAA,MAChB;AAAA,IACF,CAAC;AAAA,EAEH,SAASE,SAAY;AACnB,YAAQ,MAAM,yBAAyBA,OAAK;AAC5C,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,WAAW,yBAAyB,GAAG,GAAG;AAAA,EACzE;AACF,CAAC;AAGDF,KAAI,KAAK,qBAAqB,OAAO,MAAM;AACzC,MAAI;AACF,UAAM,EAAE,MAAM,SAAAG,SAAQ,IAAI,MAAM,EAAE,IAAI,KAGnC;AAEH,QAAI,CAAC,MAAM;AACT,aAAO,EAAE,KAAK,EAAE,OAAO,mBAAmB,GAAG,GAAG;AAAA,IAClD;AAEA,UAAM,SAAS;AAAA;AAAA,EAEjBA,WAAU,YAAYA,QAAO;AAAA,IAAO,EAAE;AAAA,qBACnB,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCrB,UAAM,KAAM,EAAU,IAAI;AAC1B,UAAM,WAAW,MAAM,GAAG,IAAI,4CAA4C;AAAA,MACxE,UAAU;AAAA,QACR;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,QACX;AAAA,QACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,MAClC;AAAA,MACA,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,QAAI;AACF,YAAM,aAAa,KAAK,MAAM,SAAS,QAAQ;AAC/C,aAAO,gBAAgB,GAAG;AAAA,QACxB;AAAA,QACA,eAAe;AAAA,MACjB,CAAC;AAAA,IACH,SAAS,YAAY;AAEnB,aAAO,gBAAgB,GAAG;AAAA,QACxB,YAAY;AAAA,UACV,cAAc,SAAS;AAAA,UACvB,QAAQ;AAAA,YACN,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,SAAS;AAAA,YACT,eAAe;AAAA,YACf,iBAAiB;AAAA,YACjB,aAAa;AAAA,UACf;AAAA,UACA,cAAc;AAAA,UACd,WAAW;AAAA,QACb;AAAA,QACA,eAAe;AAAA,MACjB,CAAC;AAAA,IACH;AAAA,EAEF,SAASD,SAAY;AACnB,YAAQ,MAAM,6BAA6BA,OAAK;AAChD,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,WAAW,oBAAoB,GAAG,GAAG;AAAA,EACpE;AACF,CAAC;AAGDF,KAAI,KAAK,kBAAkB,OAAO,MAAM;AACtC,MAAI;AACF,UAAM,EAAE,KAAK,IAAI,MAAM,EAAE,IAAI,KAAuB;AAEpD,QAAI,CAAC,MAAM;AACT,aAAO,EAAE,KAAK,EAAE,OAAO,mBAAmB,GAAG,GAAG;AAAA,IAClD;AAEA,UAAM,SAAS;AAAA;AAAA,SAEV,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBT,UAAM,KAAM,EAAU,IAAI;AAC1B,UAAM,WAAW,MAAM,GAAG,IAAI,4CAA4C;AAAA,MACxE,UAAU;AAAA,QACR;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,QACX;AAAA,QACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,MAClC;AAAA,MACA,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,QAAI;AACF,YAAM,SAAS,KAAK,MAAM,SAAS,QAAQ;AAC3C,aAAO,gBAAgB,GAAG,MAAM;AAAA,IAClC,SAAS,YAAY;AACnB,aAAO,EAAE,KAAK;AAAA,QACZ,OAAO;AAAA,QACP,aAAa,SAAS;AAAA,MACxB,GAAG,GAAG;AAAA,IACR;AAAA,EAEF,SAASE,SAAY;AACnB,YAAQ,MAAM,wBAAwBA,OAAK;AAC3C,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,WAAW,uBAAuB,GAAG,GAAG;AAAA,EACvE;AACF,CAAC;AAGDF,KAAI,KAAK,0BAA0B,OAAO,MAAM;AAC9C,MAAI;AACF,UAAM,EAAE,cAAc,OAAO,MAAM,IAAI,MAAM,EAAE,IAAI,KAIhD;AAEH,QAAI,CAAC,gBAAgB,aAAa,WAAW,GAAG;AAC9C,aAAO,EAAE,KAAK,EAAE,OAAO,2BAA2B,GAAG,GAAG;AAAA,IAC1D;AAEA,UAAM,mBAAmB,aACtB,IAAI,UAAQ,GAAG,KAAK,OAAO,KAAK,KAAK,IAAI,EAAE,EAC3C,KAAK,IAAI;AAEZ,UAAM,SAAS;AAAA;AAAA,EAEjB,QAAQ,UAAU,KAAK,KAAK,EAAE;AAAA,EAC9B,QAAQ,mBAAmB,KAAK,KAAK,EAAE;AAAA;AAAA;AAAA,EAGvC,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBd,UAAM,KAAM,EAAU,IAAI;AAC1B,UAAM,WAAW,MAAM,GAAG,IAAI,4CAA4C;AAAA,MACxE,UAAU;AAAA,QACR;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,QACX;AAAA,QACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,MAClC;AAAA,MACA,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,QAAI;AACF,YAAM,WAAW,KAAK,MAAM,SAAS,QAAQ;AAC7C,aAAO,gBAAgB,GAAG;AAAA,QACxB;AAAA,QACA,oBAAoB,aAAa;AAAA,QACjC;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH,SAAS,YAAY;AACnB,aAAO,gBAAgB,GAAG;AAAA,QACxB,UAAU;AAAA,UACR,cAAc,SAAS;AAAA,QACzB;AAAA,QACA,oBAAoB,aAAa;AAAA,QACjC;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EAEF,SAASE,SAAY;AACnB,YAAQ,MAAM,gCAAgCA,OAAK;AACnD,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,WAAW,6BAA6B,GAAG,GAAG;AAAA,EAC7E;AACF,CAAC;AAGDF,KAAI,IAAI,WAAW,CAAC,MAAM;AACxB,SAAO,gBAAgB,GAAG;AAAA,IACxB,kBAAkB;AAAA,MAChB;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,aAAa;AAAA,QACb,gBAAgB;AAAA,QAChB,aAAa;AAAA,MACf;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,aAAa;AAAA,QACb,gBAAgB;AAAA,MAClB;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,aAAa;AAAA,QACb,gBAAgB;AAAA,MAClB;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,aAAa;AAAA,QACb,gBAAgB;AAAA,MAClB;AAAA,IACF;AAAA,IACA,UAAU;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF,CAAC;AACH,CAAC;AAED,IAAO,cAAQA;;;ACnWf;AAAA;AAAA;AAAAI;AAIA,IAAMC,OAAM,IAAIC,MAAwB;AAGxCD,KAAI,IAAI,MAAM,KAAK,CAAC;AAGpBA,KAAI,KAAK,WAAW,OAAO,MAAM;AAC/B,MAAI;AACF,UAAM,WAAW,MAAM,EAAE,IAAI,SAAS;AACtC,UAAME,QAAO,SAAS,IAAI,OAAO;AACjC,QAAI,CAACA,OAAM;AACP,aAAO,EAAE,KAAK,EAAE,OAAO,yBAAyB,GAAG,GAAG;AAAA,IAC1D;AACA,UAAM,SAAS,SAAS,IAAI,QAAQ;AACpC,UAAM,OAAO,SAAS,IAAI,MAAM,KAAe;AAE/C,QAAI,CAACA,SAAQ,CAAC,QAAQ;AACpB,aAAO,EAAE,KAAK,EAAE,OAAO,qCAAqC,GAAG,GAAG;AAAA,IACpE;AAGA,UAAM,eAAe,CAAC,cAAc,aAAa,cAAc,WAAW;AAC1E,QAAI,CAAC,aAAa,SAASA,MAAK,IAAI,GAAG;AACrC,aAAO,EAAE,KAAK,EAAE,OAAO,+DAA+D,GAAG,GAAG;AAAA,IAC9F;AAGA,UAAM,UAAU,KAAK,OAAO;AAC5B,QAAIA,MAAK,OAAO,SAAS;AACvB,aAAO,EAAE,KAAK,EAAE,OAAO,+BAA+B,GAAG,GAAG;AAAA,IAC9D;AAGA,UAAM,YAAY,KAAK,IAAI;AAC3B,UAAM,UAAUA,MAAK,KAAK,MAAM,GAAG,EAAE,IAAI;AACzC,UAAM,WAAW,GAAG,IAAI,IAAI,MAAM,IAAI,SAAS,IAAI,OAAO;AAG1D,UAAM,cAAc,MAAMA,MAAK,YAAY;AAC3C,UAAM,EAAE,IAAI,QAAQ,IAAI,UAAU,aAAa;AAAA,MAC7C,cAAc;AAAA,QACZ,aAAaA,MAAK;AAAA,MACpB;AAAA,MACA,gBAAgB;AAAA,QACd;AAAA,QACA;AAAA,QACA,cAAcA,MAAK;AAAA,QACnB,aAAY,oBAAI,KAAK,GAAE,YAAY;AAAA,MACrC;AAAA,IACF,CAAC;AAGD,UAAM,UAAU,WAAW,EAAE,IAAI,OAAO,MAAM,CAAC;AAC/C,UAAM,WAAW;AAAA,MACf,UAAU,GAAG,OAAO,wBAAwB,QAAQ;AAAA,MACpD,WAAW,GAAG,OAAO,4BAA4B,QAAQ;AAAA,MACzD,QAAQ,GAAG,OAAO,4BAA4B,QAAQ;AAAA,MACtD,OAAO,GAAG,OAAO,4BAA4B,QAAQ;AAAA,IACvD;AAGA,UAAM,EAAE,IAAI,MAAM;AAAA,MAChB,SAAS,QAAQ;AAAA,MACjB,KAAK,UAAU;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,QACA,cAAcA,MAAK;AAAA,QACnB,MAAMA,MAAK;AAAA,QACX,aAAaA,MAAK;AAAA,QAClB,aAAY,oBAAI,KAAK,GAAE,YAAY;AAAA,QACnC;AAAA,MACF,CAAC;AAAA,MACD,EAAE,eAAe,QAAQ,GAAG;AAAA;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT;AAAA,MACA;AAAA,MACA,MAAMA,MAAK;AAAA,MACX,MAAMA,MAAK;AAAA,IACb,CAAC;AAAA,EAEH,SAASC,SAAY;AACnB,YAAQ,MAAM,uBAAuBA,OAAK;AAC1C,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,WAAW,yBAAyB,GAAG,GAAG;AAAA,EACzE;AACF,CAAC;AAGDH,KAAI,IAAI,gBAAgB,OAAO,MAAM;AACnC,MAAI;AACF,UAAM,OAAO,EAAE,IAAI,MAAM,GAAG;AAC5B,QAAI,CAAC,MAAM;AACT,aAAO,EAAE,KAAK,EAAE,OAAO,yBAAyB,GAAG,GAAG;AAAA,IACxD;AAGA,UAAM,EAAE,aAAa,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG;AAC1C,UAAM,QAAQ,SAAS,aAAa,IAAI,OAAO,KAAK,GAAG;AACvD,UAAM,SAAS,SAAS,aAAa,IAAI,QAAQ,KAAK,GAAG;AACzD,UAAM,UAAU,SAAS,aAAa,IAAI,SAAS,KAAK,IAAI;AAC5D,UAAM,MAAM,aAAa,IAAI,KAAK,KAAK;AACvC,UAAM,SAAS,aAAa,IAAI,QAAQ,KAAK;AAG7C,UAAMI,UAAS,MAAM,EAAE,IAAI,QAAQ,IAAI,IAAI;AAC3C,QAAI,CAACA,SAAQ;AACX,aAAO,EAAE,KAAK,EAAE,OAAO,kBAAkB,GAAG,GAAG;AAAA,IACjD;AAGA,UAAM,WAAW,eAAe,IAAI,KAAK,KAAK,KAAK,MAAM,KAAK,OAAO,IAAI,GAAG,IAAI,MAAM;AAGtF,UAAMC,UAAS,MAAM,EAAE,IAAI,MAAM,IAAI,UAAU,EAAE,MAAM,cAAc,CAAC;AACtE,QAAIA,SAAQ;AACV,aAAO,IAAI,SAASA,SAAQ;AAAA,QAC1B,SAAS;AAAA,UACP,gBAAgB,WAAW,SAAS,eAAe,SAAS,MAAM;AAAA,UAClE,iBAAiB;AAAA,UACjB,WAAW;AAAA,QACb;AAAA,MACF,CAAC;AAAA,IACH;AAGA,UAAM,cAAc,MAAMD,QAAO,YAAY;AAG7C,QAAI,oBAAoB;AACxB,QAAI,cAAcA,QAAO,cAAc,eAAe;AAGtD,QAAI,WAAW,UAAU,WAAWA,QAAO,cAAc,aAAa,MAAM,GAAG,EAAE,CAAC,GAAG;AAGnF,oBAAc,SAAS,MAAM;AAAA,IAC/B,WAAW,WAAW,QAAQ;AAC5B,oBAAc;AAAA,IAChB;AAEA,WAAO,IAAI,SAAS,mBAAmB;AAAA,MACrC,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,iBAAiB;AAAA,QACjB,WAAW;AAAA,QACX,kBAAkB,UAAU;AAAA,MAC9B;AAAA,IACF,CAAC;AAAA,EAEH,SAASD,SAAY;AACnB,YAAQ,MAAM,0BAA0BA,OAAK;AAC7C,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,WAAW,4BAA4B,GAAG,GAAG;AAAA,EAC5E;AACF,CAAC;AAGDH,KAAI,IAAI,YAAY,OAAO,MAAM;AAC/B,MAAI;AACF,UAAM,OAAO,EAAE,IAAI,MAAM,GAAG;AAC5B,QAAI,CAAC,MAAM;AACT,aAAO,EAAE,KAAK,EAAE,OAAO,yBAAyB,GAAG,GAAG;AAAA,IACxD;AAGA,UAAMI,UAAS,MAAM,EAAE,IAAI,QAAQ,IAAI,IAAI;AAC3C,QAAI,CAACA,SAAQ;AACX,aAAO,EAAE,KAAK,EAAE,OAAO,kBAAkB,GAAG,GAAG;AAAA,IACjD;AAEA,UAAM,UAAU,IAAI,QAAQ;AAC5B,IAAAA,QAAO,kBAAkB,OAAO;AAChC,YAAQ,IAAI,iBAAiB,0BAA0B;AAGvD,YAAQ,IAAI,2BAA2B,qCAAqC;AAC5E,YAAQ,IAAI,0BAA0B,SAAS;AAE/C,WAAO,IAAI,SAASA,QAAO,MAAM,EAAE,QAAQ,CAAC;AAAA,EAE9C,SAASD,SAAY;AACnB,YAAQ,MAAM,sBAAsBA,OAAK;AACzC,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,WAAW,wBAAwB,GAAG,GAAG;AAAA,EACxE;AACF,CAAC;AAGDH,KAAI,OAAO,cAAc,OAAO,MAAM;AACpC,MAAI;AACF,UAAM,WAAW,EAAE,IAAI,MAAM,UAAU;AACvC,UAAM,SAAS,EAAE,IAAI,OAAO,WAAW;AAEvC,QAAI,CAAC,YAAY,CAAC,QAAQ;AACxB,aAAO,EAAE,KAAK,EAAE,OAAO,mCAAmC,GAAG,GAAG;AAAA,IAClE;AAGA,UAAM,WAAW,MAAM,EAAE,IAAI,MAAM,IAAI,SAAS,QAAQ,IAAI,EAAE,MAAM,OAAO,CAAC;AAC5E,QAAI,CAAC,YAAa,SAAiB,WAAW,QAAQ;AACpD,aAAO,EAAE,KAAK,EAAE,OAAO,eAAe,GAAG,GAAG;AAAA,IAC9C;AAGA,UAAM,EAAE,IAAI,QAAQ,OAAO,QAAQ;AAGnC,UAAM,EAAE,IAAI,MAAM,OAAO,SAAS,QAAQ,EAAE;AAE5C,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,SAAS;AAAA,IACX,CAAC;AAAA,EAEH,SAASG,SAAY;AACnB,YAAQ,MAAM,uBAAuBA,OAAK;AAC1C,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,WAAW,yBAAyB,GAAG,GAAG;AAAA,EACzE;AACF,CAAC;AAGDH,KAAI,IAAI,iBAAiB,OAAO,MAAM;AACpC,MAAI;AACF,UAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,UAAM,OAAO,EAAE,IAAI,MAAM,MAAM;AAE/B,QAAI,CAAC,QAAQ;AACX,aAAO,EAAE,KAAK,EAAE,OAAO,qBAAqB,GAAG,GAAG;AAAA,IACpD;AAGA,UAAM,SAAS,OAAO,GAAG,IAAI,IAAI,MAAM,MAAM;AAC7C,UAAM,OAAO,MAAM,EAAE,IAAI,QAAQ,KAAK,EAAE,QAAQ,OAAO,IAAK,CAAC;AAE7D,UAAM,SAAS,MAAM,QAAQ;AAAA,MAC3B,KAAK,QAAQ,IAAI,OAAO,QAAa;AAEnC,cAAM,WAAW,MAAM,EAAE,IAAI,MAAM,IAAI,SAAS,IAAI,GAAG,IAAI,EAAE,MAAM,OAAO,CAAC;AAE3E,eAAO;AAAA,UACL,KAAK,IAAI;AAAA,UACT,MAAM,IAAI;AAAA,UACV,YAAY,IAAI,SAAS,YAAY;AAAA,UACrC,UAAU,YAAY;AAAA,YACpB,UAAU,IAAI;AAAA,YACd,aAAa,IAAI,cAAc;AAAA,UACjC;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAEA,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT;AAAA,MACA,OAAO,OAAO;AAAA,IAChB,CAAC;AAAA,EAEH,SAASG,SAAY;AACnB,YAAQ,MAAM,qBAAqBA,OAAK;AACxC,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,WAAW,wBAAwB,GAAG,GAAG;AAAA,EACxE;AACF,CAAC;AAGDH,KAAI,IAAI,mBAAmB,OAAO,MAAM;AACtC,MAAI;AACF,UAAM,WAAW,EAAE,IAAI,MAAM,UAAU;AAEvC,QAAI,CAAC,UAAU;AACb,aAAO,EAAE,KAAK,EAAE,OAAO,uBAAuB,GAAG,GAAG;AAAA,IACtD;AAGA,UAAM,WAAW,MAAM,EAAE,IAAI,MAAM,IAAI,SAAS,QAAQ,IAAI,EAAE,MAAM,OAAO,CAAC;AAC5E,QAAI,CAAC,UAAU;AAEb,YAAMI,UAAS,MAAM,EAAE,IAAI,QAAQ,KAAK,QAAQ;AAChD,UAAI,CAACA,SAAQ;AACX,eAAO,EAAE,KAAK,EAAE,OAAO,kBAAkB,GAAG,GAAG;AAAA,MACjD;AAEA,aAAO,EAAE,KAAK;AAAA,QACZ;AAAA,QACA,MAAMA,QAAO;AAAA,QACb,YAAYA,QAAO,SAAS,YAAY;AAAA,QACxC,aAAaA,QAAO,cAAc;AAAA,QAClC,gBAAgBA,QAAO;AAAA,MACzB,CAAC;AAAA,IACH;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EAExB,SAASD,SAAY;AACnB,YAAQ,MAAM,qBAAqBA,OAAK;AACxC,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,WAAW,2BAA2B,GAAG,GAAG;AAAA,EAC3E;AACF,CAAC;AAED,IAAO,iBAAQH;;;AC/Sf;AAAA;AAAA;AAAAM;;;ACAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA;AAAA,gBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA;AAAA,cAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA;AAAA,cAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA;AAAA,cAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAAC;AAAA,EAAA;AAAA,aAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA;AAAA;AAAA,aAAAC;AAAA,EAAA;AAAA,eAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAAC;AAAA,EAAA;AAAA,iBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA;AAAA;AAAA;AAAA,eAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAAC;AAAA,EAAA;AAAA;AAAA;AAAA,cAAAC;AAAA,EAAA,WAAAC;AAAA;AAAA;AAAA;AAAA;AAAAC;;;ACAA,IAAAC,gBAAA;AAAA,SAAAA,egBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAAC;AAAA;AAAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;AACO,IAAM,QAAQ,OAAO,OAAO;AAAA,EAC/B,QAAQ;AACZ,CAAC;AAAA;AAC+B,SAAS,aAAa,MAAMC,cAAa,QAAQ;AAC7E,WAAS,KAAK,MAAM,KAAK;AACrB,QAAI;AACJ,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,OAAO,KAAK,QAAQ,CAAC;AAAA,MACrB,YAAY;AAAA,IAChB,CAAC;AACD,KAAC,KAAK,KAAK,MAAM,WAAW,GAAG,SAAS,oBAAI,IAAI;AAChD,SAAK,KAAK,OAAO,IAAI,IAAI;AACzB,IAAAA,aAAY,MAAM,GAAG;AAErB,eAAW,KAAK,EAAE,WAAW;AACzB,UAAI,EAAE,KAAK;AACP,eAAO,eAAe,MAAM,GAAG,EAAE,OAAO,EAAE,UAAU,CAAC,EAAE,KAAK,IAAI,EAAE,CAAC;AAAA,IAC3E;AACA,SAAK,KAAK,SAAS;AACnB,SAAK,KAAK,MAAM;AAAA,EACpB;AAhBS;AAkBT,QAAM,SAAS,QAAQ,UAAU;AAAA,EACjC,MAAM,mBAAmB,OAAO;AAAA,IAxBpC,OAwBoC;AAAA;AAAA;AAAA,EAChC;AACA,SAAO,eAAe,YAAY,QAAQ,EAAE,OAAO,KAAK,CAAC;AACzD,WAAS,EAAE,KAAK;AACZ,QAAI;AACJ,UAAM,OAAO,QAAQ,SAAS,IAAI,WAAW,IAAI;AACjD,SAAK,MAAM,GAAG;AACd,KAAC,KAAK,KAAK,MAAM,aAAa,GAAG,WAAW,CAAC;AAC7C,eAAW,MAAM,KAAK,KAAK,UAAU;AACjC,SAAG;AAAA,IACP;AACA,WAAO;AAAA,EACX;AATS;AAUT,SAAO,eAAe,GAAG,QAAQ,EAAE,OAAO,KAAK,CAAC;AAChD,SAAO,eAAe,GAAG,OAAO,aAAa;AAAA,IACzC,OAAO,wBAAC,SAAS;AACb,UAAI,QAAQ,UAAU,gBAAgB,OAAO;AACzC,eAAO;AACX,aAAO,MAAM,MAAM,QAAQ,IAAI,IAAI;AAAA,IACvC,GAJO;AAAA,EAKX,CAAC;AACD,SAAO,eAAe,GAAG,QAAQ,EAAE,OAAO,KAAK,CAAC;AAChD,SAAO;AACX;AA3CyC;AA6ClC,IAAM,SAAS,OAAO,WAAW;AACjC,IAAM,iBAAN,cAA6B,MAAM;AAAA,EAlD1C,OAkD0C;AAAA;AAAA;AAAA,EACtC,cAAc;AACV,UAAM,0EAA0E;AAAA,EACpF;AACJ;AACO,IAAM,kBAAN,cAA8B,MAAM;AAAA,EAvD3C,OAuD2C;AAAA;AAAA;AAAA,EACvC,YAAY,MAAM;AACd,UAAM,uDAAuD,IAAI,EAAE;AACnE,SAAK,OAAO;AAAA,EAChB;AACJ;AACO,IAAM,eAAe,CAAC;AACtB,SAASC,QAAO,WAAW;AAC9B,MAAI;AACA,WAAO,OAAO,cAAc,SAAS;AACzC,SAAO;AACX;AAJgB,OAAAA,SAAA;;;AC9DhB;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAAC;AACO,SAAS,YAAY,KAAK;AAC7B,SAAO;AACX;AAFgB;AAGT,SAAS,eAAe,KAAK;AAChC,SAAO;AACX;AAFgB;AAGT,SAAS,SAAS,MAAM;AAAE;AAAjB;AACT,SAAS,YAAY,IAAI;AAC5B,QAAM,IAAI,MAAM;AACpB;AAFgB;AAGT,SAASC,QAAO,GAAG;AAAE;AAAZ,OAAAA,SAAA;AACT,SAAS,cAAc,SAAS;AACnC,QAAM,gBAAgB,OAAO,OAAO,OAAO,EAAE,OAAO,CAAC,MAAM,OAAO,MAAM,QAAQ;AAChF,QAAM,SAAS,OAAO,QAAQ,OAAO,EAChC,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,cAAc,QAAQ,CAAC,CAAC,MAAM,EAAE,EACnD,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;AACtB,SAAO;AACX;AANgB;AAOT,SAAS,WAAWC,QAAO,YAAY,KAAK;AAC/C,SAAOA,OAAM,IAAI,CAAC,QAAQ,mBAAmB,GAAG,CAAC,EAAE,KAAK,SAAS;AACrE;AAFgB;AAGT,SAAS,sBAAsB,GAAG,OAAO;AAC5C,MAAI,OAAO,UAAU;AACjB,WAAO,MAAM,SAAS;AAC1B,SAAO;AACX;AAJgB;AAKT,SAAS,OAAO,QAAQ;AAC3B,QAAMC,OAAM;AACZ,SAAO;AAAA,IACH,IAAI,QAAQ;AACR,UAAI,CAACA,MAAK;AACN,cAAM,QAAQ,OAAO;AACrB,eAAO,eAAe,MAAM,SAAS,EAAE,MAAM,CAAC;AAC9C,eAAO;AAAA,MACX;AACA,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC9C;AAAA,EACJ;AACJ;AAZgB;AAaT,SAAS,QAAQ,OAAO;AAC3B,SAAO,UAAU,QAAQ,UAAU;AACvC;AAFgB;AAGT,SAAS,WAAW,QAAQ;AAC/B,QAAM,QAAQ,OAAO,WAAW,GAAG,IAAI,IAAI;AAC3C,QAAM,MAAM,OAAO,SAAS,GAAG,IAAI,OAAO,SAAS,IAAI,OAAO;AAC9D,SAAO,OAAO,MAAM,OAAO,GAAG;AAClC;AAJgB;AAKT,SAAS,mBAAmB,KAAK,MAAM;AAC1C,QAAM,eAAe,IAAI,SAAS,EAAE,MAAM,GAAG,EAAE,CAAC,KAAK,IAAI;AACzD,QAAM,aAAa,KAAK,SAAS;AACjC,MAAI,gBAAgB,WAAW,MAAM,GAAG,EAAE,CAAC,KAAK,IAAI;AACpD,MAAI,iBAAiB,KAAK,WAAW,KAAK,UAAU,GAAG;AACnD,UAAM,QAAQ,WAAW,MAAM,YAAY;AAC3C,QAAI,QAAQ,CAAC,GAAG;AACZ,qBAAe,OAAO,SAAS,MAAM,CAAC,CAAC;AAAA,IAC3C;AAAA,EACJ;AACA,QAAM,WAAW,cAAc,eAAe,cAAc;AAC5D,QAAM,SAAS,OAAO,SAAS,IAAI,QAAQ,QAAQ,EAAE,QAAQ,KAAK,EAAE,CAAC;AACrE,QAAM,UAAU,OAAO,SAAS,KAAK,QAAQ,QAAQ,EAAE,QAAQ,KAAK,EAAE,CAAC;AACvE,SAAQ,SAAS,UAAW,MAAM;AACtC;AAdgB;AAehB,IAAM,aAAa,OAAO,YAAY;AAC/B,SAAS,WAAWC,SAAQ,KAAK,QAAQ;AAC5C,MAAI,QAAQ;AACZ,SAAO,eAAeA,SAAQ,KAAK;AAAA,IAC/B,MAAM;AACF,UAAI,UAAU,YAAY;AAEtB,eAAO;AAAA,MACX;AACA,UAAI,UAAU,QAAW;AACrB,gBAAQ;AACR,gBAAQ,OAAO;AAAA,MACnB;AACA,aAAO;AAAA,IACX;AAAA,IACA,IAAI,GAAG;AACH,aAAO,eAAeA,SAAQ,KAAK;AAAA,QAC/B,OAAO;AAAA;AAAA,MAEX,CAAC;AAAA,IAEL;AAAA,IACA,cAAc;AAAA,EAClB,CAAC;AACL;AAvBgB;AAwBT,SAAS,YAAY,KAAK;AAC7B,SAAO,OAAO,OAAO,OAAO,eAAe,GAAG,GAAG,OAAO,0BAA0B,GAAG,CAAC;AAC1F;AAFgB;AAGT,SAAS,WAAW,QAAQ,MAAM,OAAO;AAC5C,SAAO,eAAe,QAAQ,MAAM;AAAA,IAChC;AAAA,IACA,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,cAAc;AAAA,EAClB,CAAC;AACL;AAPgB;AAQT,SAAS,aAAa,MAAM;AAC/B,QAAM,oBAAoB,CAAC;AAC3B,aAAW,OAAO,MAAM;AACpB,UAAM,cAAc,OAAO,0BAA0B,GAAG;AACxD,WAAO,OAAO,mBAAmB,WAAW;AAAA,EAChD;AACA,SAAO,OAAO,iBAAiB,CAAC,GAAG,iBAAiB;AACxD;AAPgB;AAQT,SAAS,SAAS,QAAQ;AAC7B,SAAO,UAAU,OAAO,KAAK,GAAG;AACpC;AAFgB;AAGT,SAAS,iBAAiB,KAAK,MAAM;AACxC,MAAI,CAAC;AACD,WAAO;AACX,SAAO,KAAK,OAAO,CAAC,KAAK,QAAQ,MAAM,GAAG,GAAG,GAAG;AACpD;AAJgB;AAKT,SAAS,iBAAiB,aAAa;AAC1C,QAAM,OAAO,OAAO,KAAK,WAAW;AACpC,QAAM,WAAW,KAAK,IAAI,CAAC,QAAQ,YAAY,GAAG,CAAC;AACnD,SAAO,QAAQ,IAAI,QAAQ,EAAE,KAAK,CAAC,YAAY;AAC3C,UAAM,cAAc,CAAC;AACrB,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,kBAAY,KAAK,CAAC,CAAC,IAAI,QAAQ,CAAC;AAAA,IACpC;AACA,WAAO;AAAA,EACX,CAAC;AACL;AAVgB;AAWT,SAAS,aAAa,SAAS,IAAI;AACtC,QAAM,QAAQ;AACd,MAAI,MAAM;AACV,WAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC7B,WAAO,MAAM,KAAK,MAAM,KAAK,OAAO,IAAI,MAAM,MAAM,CAAC;AAAA,EACzD;AACA,SAAO;AACX;AAPgB;AAQT,SAAS,IAAI,KAAK;AACrB,SAAO,KAAK,UAAU,GAAG;AAC7B;AAFgB;AAGT,IAAM,oBAAqB,uBAAuB,QAAQ,MAAM,oBAAoB,IAAI,UAAU;AAAE;AACpG,SAAS,SAAS,MAAM;AAC3B,SAAO,OAAO,SAAS,YAAY,SAAS,QAAQ,CAAC,MAAM,QAAQ,IAAI;AAC3E;AAFgB;AAGT,IAAM,aAAa,OAAO,MAAM;AAEnC,MAAI,OAAO,cAAc,eAAe,sBAAsB,SAAS,YAAY,GAAG;AAClF,WAAO;AAAA,EACX;AACA,MAAI;AACA,UAAM,IAAI;AACV,QAAI,EAAE,EAAE;AACR,WAAO;AAAA,EACX,SACO,GAAG;AACN,WAAO;AAAA,EACX;AACJ,CAAC;AACM,SAAS,cAAc,GAAG;AAC7B,MAAI,SAAS,CAAC,MAAM;AAChB,WAAO;AAEX,QAAM,OAAO,EAAE;AACf,MAAI,SAAS;AACT,WAAO;AAEX,QAAM,OAAO,KAAK;AAClB,MAAI,SAAS,IAAI,MAAM;AACnB,WAAO;AAEX,MAAI,OAAO,UAAU,eAAe,KAAK,MAAM,eAAe,MAAM,OAAO;AACvE,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAhBgB;AAiBT,SAAS,aAAa,GAAG;AAC5B,MAAI,cAAc,CAAC;AACf,WAAO,EAAE,GAAG,EAAE;AAClB,MAAI,MAAM,QAAQ,CAAC;AACf,WAAO,CAAC,GAAG,CAAC;AAChB,SAAO;AACX;AANgB;AAOT,SAAS,QAAQ,MAAM;AAC1B,MAAI,WAAW;AACf,aAAW,OAAO,MAAM;AACpB,QAAI,OAAO,UAAU,eAAe,KAAK,MAAM,GAAG,GAAG;AACjD;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AARgB;AAST,IAAM,gBAAgB,wBAAC,SAAS;AACnC,QAAM,IAAI,OAAO;AACjB,UAAQ,GAAG;AAAA,IACP,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,IACxC,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,UAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,eAAO;AAAA,MACX;AACA,UAAI,SAAS,MAAM;AACf,eAAO;AAAA,MACX;AACA,UAAI,KAAK,QAAQ,OAAO,KAAK,SAAS,cAAc,KAAK,SAAS,OAAO,KAAK,UAAU,YAAY;AAChG,eAAO;AAAA,MACX;AACA,UAAI,OAAO,QAAQ,eAAe,gBAAgB,KAAK;AACnD,eAAO;AAAA,MACX;AACA,UAAI,OAAO,QAAQ,eAAe,gBAAgB,KAAK;AACnD,eAAO;AAAA,MACX;AACA,UAAI,OAAO,SAAS,eAAe,gBAAgB,MAAM;AACrD,eAAO;AAAA,MACX;AAEA,UAAI,OAAO,SAAS,eAAe,gBAAgB,MAAM;AACrD,eAAO;AAAA,MACX;AACA,aAAO;AAAA,IACX;AACI,YAAM,IAAI,MAAM,sBAAsB,CAAC,EAAE;AAAA,EACjD;AACJ,GA5C6B;AA6CtB,IAAM,mBAAmB,oBAAI,IAAI,CAAC,UAAU,UAAU,QAAQ,CAAC;AAC/D,IAAM,iBAAiB,oBAAI,IAAI,CAAC,UAAU,UAAU,UAAU,WAAW,UAAU,WAAW,CAAC;AAC/F,SAAS,YAAY,KAAK;AAC7B,SAAO,IAAI,QAAQ,uBAAuB,MAAM;AACpD;AAFgB;AAIT,SAAS,MAAM,MAAM,KAAK,QAAQ;AACrC,QAAM,KAAK,IAAI,KAAK,KAAK,OAAO,OAAO,KAAK,KAAK,GAAG;AACpD,MAAI,CAAC,OAAO,QAAQ;AAChB,OAAG,KAAK,SAAS;AACrB,SAAO;AACX;AALgB;AAMT,SAAS,gBAAgB,SAAS;AACrC,QAAM,SAAS;AACf,MAAI,CAAC;AACD,WAAO,CAAC;AACZ,MAAI,OAAO,WAAW;AAClB,WAAO,EAAE,OAAO,6BAAM,QAAN,SAAa;AACjC,MAAI,QAAQ,YAAY,QAAW;AAC/B,QAAI,QAAQ,UAAU;AAClB,YAAM,IAAI,MAAM,kDAAkD;AACtE,WAAO,QAAQ,OAAO;AAAA,EAC1B;AACA,SAAO,OAAO;AACd,MAAI,OAAO,OAAO,UAAU;AACxB,WAAO,EAAE,GAAG,QAAQ,OAAO,6BAAM,OAAO,OAAb,SAAmB;AAClD,SAAO;AACX;AAfgB;AAgBT,SAAS,uBAAuB,QAAQ;AAC3C,MAAI;AACJ,SAAO,IAAI,MAAM,CAAC,GAAG;AAAA,IACjB,IAAI,GAAG,MAAM,UAAU;AACnB,iBAAW,SAAS,OAAO;AAC3B,aAAO,QAAQ,IAAI,QAAQ,MAAM,QAAQ;AAAA,IAC7C;AAAA,IACA,IAAI,GAAG,MAAM,OAAO,UAAU;AAC1B,iBAAW,SAAS,OAAO;AAC3B,aAAO,QAAQ,IAAI,QAAQ,MAAM,OAAO,QAAQ;AAAA,IACpD;AAAA,IACA,IAAI,GAAG,MAAM;AACT,iBAAW,SAAS,OAAO;AAC3B,aAAO,QAAQ,IAAI,QAAQ,IAAI;AAAA,IACnC;AAAA,IACA,eAAe,GAAG,MAAM;AACpB,iBAAW,SAAS,OAAO;AAC3B,aAAO,QAAQ,eAAe,QAAQ,IAAI;AAAA,IAC9C;AAAA,IACA,QAAQ,GAAG;AACP,iBAAW,SAAS,OAAO;AAC3B,aAAO,QAAQ,QAAQ,MAAM;AAAA,IACjC;AAAA,IACA,yBAAyB,GAAG,MAAM;AAC9B,iBAAW,SAAS,OAAO;AAC3B,aAAO,QAAQ,yBAAyB,QAAQ,IAAI;AAAA,IACxD;AAAA,IACA,eAAe,GAAG,MAAM,YAAY;AAChC,iBAAW,SAAS,OAAO;AAC3B,aAAO,QAAQ,eAAe,QAAQ,MAAM,UAAU;AAAA,IAC1D;AAAA,EACJ,CAAC;AACL;AAhCgB;AAiCT,SAAS,mBAAmB,OAAO;AACtC,MAAI,OAAO,UAAU;AACjB,WAAO,MAAM,SAAS,IAAI;AAC9B,MAAI,OAAO,UAAU;AACjB,WAAO,IAAI,KAAK;AACpB,SAAO,GAAG,KAAK;AACnB;AANgB;AAOT,SAAS,aAAa,OAAO;AAChC,SAAO,OAAO,KAAK,KAAK,EAAE,OAAO,CAAC,MAAM;AACpC,WAAO,MAAM,CAAC,EAAE,KAAK,UAAU,cAAc,MAAM,CAAC,EAAE,KAAK,WAAW;AAAA,EAC1E,CAAC;AACL;AAJgB;AAKT,IAAM,uBAAuB;AAAA,EAChC,SAAS,CAAC,OAAO,kBAAkB,OAAO,gBAAgB;AAAA,EAC1D,OAAO,CAAC,aAAa,UAAU;AAAA,EAC/B,QAAQ,CAAC,GAAG,UAAU;AAAA,EACtB,SAAS,CAAC,uBAAwB,oBAAqB;AAAA,EACvD,SAAS,CAAC,CAAC,OAAO,WAAW,OAAO,SAAS;AACjD;AACO,IAAM,uBAAuB;AAAA,EAChC,OAAO,CAAgB,uBAAO,sBAAsB,GAAkB,uBAAO,qBAAqB,CAAC;AAAA,EACnG,QAAQ,CAAgB,uBAAO,CAAC,GAAkB,uBAAO,sBAAsB,CAAC;AACpF;AACO,SAAS,KAAK,QAAQ,MAAM;AAC/B,QAAM,UAAU,OAAO,KAAK;AAC5B,QAAM,MAAM,UAAU,OAAO,KAAK,KAAK;AAAA,IACnC,IAAI,QAAQ;AACR,YAAM,WAAW,CAAC;AAClB,iBAAW,OAAO,MAAM;AACpB,YAAI,EAAE,OAAO,QAAQ,QAAQ;AACzB,gBAAM,IAAI,MAAM,sBAAsB,GAAG,GAAG;AAAA,QAChD;AACA,YAAI,CAAC,KAAK,GAAG;AACT;AACJ,iBAAS,GAAG,IAAI,QAAQ,MAAM,GAAG;AAAA,MACrC;AACA,iBAAW,MAAM,SAAS,QAAQ;AAClC,aAAO;AAAA,IACX;AAAA,IACA,QAAQ,CAAC;AAAA,EACb,CAAC;AACD,SAAO,MAAM,QAAQ,GAAG;AAC5B;AAnBgB;AAoBT,SAAS,KAAK,QAAQ,MAAM;AAC/B,QAAM,UAAU,OAAO,KAAK;AAC5B,QAAM,MAAM,UAAU,OAAO,KAAK,KAAK;AAAA,IACnC,IAAI,QAAQ;AACR,YAAM,WAAW,EAAE,GAAG,OAAO,KAAK,IAAI,MAAM;AAC5C,iBAAW,OAAO,MAAM;AACpB,YAAI,EAAE,OAAO,QAAQ,QAAQ;AACzB,gBAAM,IAAI,MAAM,sBAAsB,GAAG,GAAG;AAAA,QAChD;AACA,YAAI,CAAC,KAAK,GAAG;AACT;AACJ,eAAO,SAAS,GAAG;AAAA,MACvB;AACA,iBAAW,MAAM,SAAS,QAAQ;AAClC,aAAO;AAAA,IACX;AAAA,IACA,QAAQ,CAAC;AAAA,EACb,CAAC;AACD,SAAO,MAAM,QAAQ,GAAG;AAC5B;AAnBgB;AAoBT,SAAS,OAAO,QAAQ,OAAO;AAClC,MAAI,CAAC,cAAc,KAAK,GAAG;AACvB,UAAM,IAAI,MAAM,kDAAkD;AAAA,EACtE;AACA,QAAM,SAAS,OAAO,KAAK,IAAI;AAC/B,QAAM,YAAY,UAAU,OAAO,SAAS;AAC5C,MAAI,WAAW;AACX,UAAM,IAAI,MAAM,wFAAwF;AAAA,EAC5G;AACA,QAAM,MAAM,UAAU,OAAO,KAAK,KAAK;AAAA,IACnC,IAAI,QAAQ;AACR,YAAM,SAAS,EAAE,GAAG,OAAO,KAAK,IAAI,OAAO,GAAG,MAAM;AACpD,iBAAW,MAAM,SAAS,MAAM;AAChC,aAAO;AAAA,IACX;AAAA,IACA,QAAQ,CAAC;AAAA,EACb,CAAC;AACD,SAAO,MAAM,QAAQ,GAAG;AAC5B;AAlBgB;AAmBT,SAAS,WAAW,QAAQ,OAAO;AACtC,MAAI,CAAC,cAAc,KAAK,GAAG;AACvB,UAAM,IAAI,MAAM,sDAAsD;AAAA,EAC1E;AACA,QAAM,MAAM;AAAA,IACR,GAAG,OAAO,KAAK;AAAA,IACf,IAAI,QAAQ;AACR,YAAM,SAAS,EAAE,GAAG,OAAO,KAAK,IAAI,OAAO,GAAG,MAAM;AACpD,iBAAW,MAAM,SAAS,MAAM;AAChC,aAAO;AAAA,IACX;AAAA,IACA,QAAQ,OAAO,KAAK,IAAI;AAAA,EAC5B;AACA,SAAO,MAAM,QAAQ,GAAG;AAC5B;AAdgB;AAeT,SAAS,MAAM,GAAG,GAAG;AACxB,QAAM,MAAM,UAAU,EAAE,KAAK,KAAK;AAAA,IAC9B,IAAI,QAAQ;AACR,YAAM,SAAS,EAAE,GAAG,EAAE,KAAK,IAAI,OAAO,GAAG,EAAE,KAAK,IAAI,MAAM;AAC1D,iBAAW,MAAM,SAAS,MAAM;AAChC,aAAO;AAAA,IACX;AAAA,IACA,IAAI,WAAW;AACX,aAAO,EAAE,KAAK,IAAI;AAAA,IACtB;AAAA,IACA,QAAQ,CAAC;AAAA;AAAA,EACb,CAAC;AACD,SAAO,MAAM,GAAG,GAAG;AACvB;AAbgB;AAcT,SAAS,QAAQC,QAAO,QAAQ,MAAM;AACzC,QAAM,MAAM,UAAU,OAAO,KAAK,KAAK;AAAA,IACnC,IAAI,QAAQ;AACR,YAAM,WAAW,OAAO,KAAK,IAAI;AACjC,YAAM,QAAQ,EAAE,GAAG,SAAS;AAC5B,UAAI,MAAM;AACN,mBAAW,OAAO,MAAM;AACpB,cAAI,EAAE,OAAO,WAAW;AACpB,kBAAM,IAAI,MAAM,sBAAsB,GAAG,GAAG;AAAA,UAChD;AACA,cAAI,CAAC,KAAK,GAAG;AACT;AAEJ,gBAAM,GAAG,IAAIA,SACP,IAAIA,OAAM;AAAA,YACR,MAAM;AAAA,YACN,WAAW,SAAS,GAAG;AAAA,UAC3B,CAAC,IACC,SAAS,GAAG;AAAA,QACtB;AAAA,MACJ,OACK;AACD,mBAAW,OAAO,UAAU;AAExB,gBAAM,GAAG,IAAIA,SACP,IAAIA,OAAM;AAAA,YACR,MAAM;AAAA,YACN,WAAW,SAAS,GAAG;AAAA,UAC3B,CAAC,IACC,SAAS,GAAG;AAAA,QACtB;AAAA,MACJ;AACA,iBAAW,MAAM,SAAS,KAAK;AAC/B,aAAO;AAAA,IACX;AAAA,IACA,QAAQ,CAAC;AAAA,EACb,CAAC;AACD,SAAO,MAAM,QAAQ,GAAG;AAC5B;AAtCgB;AAuCT,SAAS,SAASA,QAAO,QAAQ,MAAM;AAC1C,QAAM,MAAM,UAAU,OAAO,KAAK,KAAK;AAAA,IACnC,IAAI,QAAQ;AACR,YAAM,WAAW,OAAO,KAAK,IAAI;AACjC,YAAM,QAAQ,EAAE,GAAG,SAAS;AAC5B,UAAI,MAAM;AACN,mBAAW,OAAO,MAAM;AACpB,cAAI,EAAE,OAAO,QAAQ;AACjB,kBAAM,IAAI,MAAM,sBAAsB,GAAG,GAAG;AAAA,UAChD;AACA,cAAI,CAAC,KAAK,GAAG;AACT;AAEJ,gBAAM,GAAG,IAAI,IAAIA,OAAM;AAAA,YACnB,MAAM;AAAA,YACN,WAAW,SAAS,GAAG;AAAA,UAC3B,CAAC;AAAA,QACL;AAAA,MACJ,OACK;AACD,mBAAW,OAAO,UAAU;AAExB,gBAAM,GAAG,IAAI,IAAIA,OAAM;AAAA,YACnB,MAAM;AAAA,YACN,WAAW,SAAS,GAAG;AAAA,UAC3B,CAAC;AAAA,QACL;AAAA,MACJ;AACA,iBAAW,MAAM,SAAS,KAAK;AAC/B,aAAO;AAAA,IACX;AAAA,IACA,QAAQ,CAAC;AAAA,EACb,CAAC;AACD,SAAO,MAAM,QAAQ,GAAG;AAC5B;AAlCgB;AAoCT,SAAS,QAAQ,GAAG,aAAa,GAAG;AACvC,MAAI,EAAE,YAAY;AACd,WAAO;AACX,WAAS,IAAI,YAAY,IAAI,EAAE,OAAO,QAAQ,KAAK;AAC/C,QAAI,EAAE,OAAO,CAAC,GAAG,aAAa,MAAM;AAChC,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AATgB;AAUT,SAAS,aAAa,MAAM,QAAQ;AACvC,SAAO,OAAO,IAAI,CAAC,QAAQ;AACvB,QAAI;AACJ,KAAC,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC;AAC/B,QAAI,KAAK,QAAQ,IAAI;AACrB,WAAO;AAAA,EACX,CAAC;AACL;AAPgB;AAQT,SAAS,cAAc,SAAS;AACnC,SAAO,OAAO,YAAY,WAAW,UAAU,SAAS;AAC5D;AAFgB;AAGT,SAAS,cAAc,KAAK,KAAKC,SAAQ;AAC5C,QAAM,OAAO,EAAE,GAAG,KAAK,MAAM,IAAI,QAAQ,CAAC,EAAE;AAE5C,MAAI,CAAC,IAAI,SAAS;AACd,UAAM,UAAU,cAAc,IAAI,MAAM,KAAK,KAAK,QAAQ,GAAG,CAAC,KAC1D,cAAc,KAAK,QAAQ,GAAG,CAAC,KAC/B,cAAcA,QAAO,cAAc,GAAG,CAAC,KACvC,cAAcA,QAAO,cAAc,GAAG,CAAC,KACvC;AACJ,SAAK,UAAU;AAAA,EACnB;AAEA,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,MAAI,CAAC,KAAK,aAAa;AACnB,WAAO,KAAK;AAAA,EAChB;AACA,SAAO;AACX;AAlBgB;AAmBT,SAAS,iBAAiB,OAAO;AACpC,MAAI,iBAAiB;AACjB,WAAO;AACX,MAAI,iBAAiB;AACjB,WAAO;AAEX,MAAI,iBAAiB;AACjB,WAAO;AACX,SAAO;AACX;AATgB;AAUT,SAAS,oBAAoB,OAAO;AACvC,MAAI,MAAM,QAAQ,KAAK;AACnB,WAAO;AACX,MAAI,OAAO,UAAU;AACjB,WAAO;AACX,SAAO;AACX;AANgB;AAOT,SAAS,SAAS,MAAM;AAC3B,QAAM,CAAC,KAAK,OAAO,IAAI,IAAI;AAC3B,MAAI,OAAO,QAAQ,UAAU;AACzB,WAAO;AAAA,MACH,SAAS;AAAA,MACT,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AACA,SAAO,EAAE,GAAG,IAAI;AACpB;AAXgB;AAYT,SAAS,UAAU,KAAK;AAC3B,SAAO,OAAO,QAAQ,GAAG,EACpB,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM;AAEpB,WAAO,OAAO,MAAM,OAAO,SAAS,GAAG,EAAE,CAAC;AAAA,EAC9C,CAAC,EACI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AAC1B;AAPgB;AAST,SAAS,mBAAmBC,SAAQ;AACvC,QAAM,eAAe,KAAKA,OAAM;AAChC,QAAM,QAAQ,IAAI,WAAW,aAAa,MAAM;AAChD,WAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,UAAM,CAAC,IAAI,aAAa,WAAW,CAAC;AAAA,EACxC;AACA,SAAO;AACX;AAPgB;AAQT,SAAS,mBAAmB,OAAO;AACtC,MAAI,eAAe;AACnB,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,oBAAgB,OAAO,aAAa,MAAM,CAAC,CAAC;AAAA,EAChD;AACA,SAAO,KAAK,YAAY;AAC5B;AANgB;AAOT,SAAS,sBAAsBC,YAAW;AAC7C,QAAMD,UAASC,WAAU,QAAQ,MAAM,GAAG,EAAE,QAAQ,MAAM,GAAG;AAC7D,QAAM,UAAU,IAAI,QAAQ,IAAKD,QAAO,SAAS,KAAM,CAAC;AACxD,SAAO,mBAAmBA,UAAS,OAAO;AAC9C;AAJgB;AAKT,SAAS,sBAAsB,OAAO;AACzC,SAAO,mBAAmB,KAAK,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,MAAM,EAAE;AAC7F;AAFgB;AAGT,SAAS,gBAAgBE,MAAK;AACjC,QAAM,WAAWA,KAAI,QAAQ,OAAO,EAAE;AACtC,MAAI,SAAS,SAAS,MAAM,GAAG;AAC3B,UAAM,IAAI,MAAM,2BAA2B;AAAA,EAC/C;AACA,QAAM,QAAQ,IAAI,WAAW,SAAS,SAAS,CAAC;AAChD,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK,GAAG;AACzC,UAAM,IAAI,CAAC,IAAI,OAAO,SAAS,SAAS,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE;AAAA,EAC/D;AACA,SAAO;AACX;AAVgB;AAWT,SAAS,gBAAgB,OAAO;AACnC,SAAO,MAAM,KAAK,KAAK,EAClB,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAC1C,KAAK,EAAE;AAChB;AAJgB;AAMT,IAAM,QAAN,MAAY;AAAA,EAtlBnB,OAslBmB;AAAA;AAAA;AAAA,EACf,eAAe,OAAO;AAAA,EAAE;AAC5B;;;ADtlBA,IAAM,cAAc,wBAAC,MAAM,QAAQ;AAC/B,OAAK,OAAO;AACZ,SAAO,eAAe,MAAM,QAAQ;AAAA,IAChC,OAAO,KAAK;AAAA,IACZ,YAAY;AAAA,EAChB,CAAC;AACD,SAAO,eAAe,MAAM,UAAU;AAAA,IAClC,OAAO;AAAA,IACP,YAAY;AAAA,EAChB,CAAC;AACD,OAAK,UAAU,KAAK,UAAU,KAAU,uBAAuB,CAAC;AAChE,SAAO,eAAe,MAAM,YAAY;AAAA,IACpC,OAAO,6BAAM,KAAK,SAAX;AAAA,IACP,YAAY;AAAA,EAChB,CAAC;AACL,GAfoB;AAgBb,IAAM,YAAY,aAAa,aAAa,WAAW;AACvD,IAAM,gBAAgB,aAAa,aAAa,aAAa,EAAE,QAAQ,MAAM,CAAC;AAC9E,SAAS,aAAaC,SAAO,SAAS,CAACC,WAAUA,OAAM,SAAS;AACnE,QAAM,cAAc,CAAC;AACrB,QAAM,aAAa,CAAC;AACpB,aAAW,OAAOD,QAAM,QAAQ;AAC5B,QAAI,IAAI,KAAK,SAAS,GAAG;AACrB,kBAAY,IAAI,KAAK,CAAC,CAAC,IAAI,YAAY,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC;AACxD,kBAAY,IAAI,KAAK,CAAC,CAAC,EAAE,KAAK,OAAO,GAAG,CAAC;AAAA,IAC7C,OACK;AACD,iBAAW,KAAK,OAAO,GAAG,CAAC;AAAA,IAC/B;AAAA,EACJ;AACA,SAAO,EAAE,YAAY,YAAY;AACrC;AAbgB;AAcT,SAAS,YAAYA,SAAO,SAAS,CAACC,WAAUA,OAAM,SAAS;AAClE,QAAM,cAAc,EAAE,SAAS,CAAC,EAAE;AAClC,QAAM,eAAe,wBAACD,YAAU;AAC5B,eAAWC,UAASD,QAAM,QAAQ;AAC9B,UAAIC,OAAM,SAAS,mBAAmBA,OAAM,OAAO,QAAQ;AACvD,QAAAA,OAAM,OAAO,IAAI,CAAC,WAAW,aAAa,EAAE,OAAO,CAAC,CAAC;AAAA,MACzD,WACSA,OAAM,SAAS,eAAe;AACnC,qBAAa,EAAE,QAAQA,OAAM,OAAO,CAAC;AAAA,MACzC,WACSA,OAAM,SAAS,mBAAmB;AACvC,qBAAa,EAAE,QAAQA,OAAM,OAAO,CAAC;AAAA,MACzC,WACSA,OAAM,KAAK,WAAW,GAAG;AAC9B,oBAAY,QAAQ,KAAK,OAAOA,MAAK,CAAC;AAAA,MAC1C,OACK;AACD,YAAI,OAAO;AACX,YAAI,IAAI;AACR,eAAO,IAAIA,OAAM,KAAK,QAAQ;AAC1B,gBAAM,KAAKA,OAAM,KAAK,CAAC;AACvB,gBAAM,WAAW,MAAMA,OAAM,KAAK,SAAS;AAC3C,cAAI,CAAC,UAAU;AACX,iBAAK,EAAE,IAAI,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,EAAE;AAAA,UACzC,OACK;AACD,iBAAK,EAAE,IAAI,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,EAAE;AACrC,iBAAK,EAAE,EAAE,QAAQ,KAAK,OAAOA,MAAK,CAAC;AAAA,UACvC;AACA,iBAAO,KAAK,EAAE;AACd;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ,GAhCqB;AAiCrB,eAAaD,OAAK;AAClB,SAAO;AACX;AArCgB;AAsCT,SAAS,aAAaA,SAAO,SAAS,CAACC,WAAUA,OAAM,SAAS;AACnE,QAAM,SAAS,EAAE,QAAQ,CAAC,EAAE;AAC5B,QAAM,eAAe,wBAACD,SAAO,OAAO,CAAC,MAAM;AACvC,QAAI,IAAI;AACR,eAAWC,UAASD,QAAM,QAAQ;AAC9B,UAAIC,OAAM,SAAS,mBAAmBA,OAAM,OAAO,QAAQ;AAEvD,QAAAA,OAAM,OAAO,IAAI,CAAC,WAAW,aAAa,EAAE,OAAO,GAAGA,OAAM,IAAI,CAAC;AAAA,MACrE,WACSA,OAAM,SAAS,eAAe;AACnC,qBAAa,EAAE,QAAQA,OAAM,OAAO,GAAGA,OAAM,IAAI;AAAA,MACrD,WACSA,OAAM,SAAS,mBAAmB;AACvC,qBAAa,EAAE,QAAQA,OAAM,OAAO,GAAGA,OAAM,IAAI;AAAA,MACrD,OACK;AACD,cAAM,WAAW,CAAC,GAAG,MAAM,GAAGA,OAAM,IAAI;AACxC,YAAI,SAAS,WAAW,GAAG;AACvB,iBAAO,OAAO,KAAK,OAAOA,MAAK,CAAC;AAChC;AAAA,QACJ;AACA,YAAI,OAAO;AACX,YAAI,IAAI;AACR,eAAO,IAAI,SAAS,QAAQ;AACxB,gBAAM,KAAK,SAAS,CAAC;AACrB,gBAAM,WAAW,MAAM,SAAS,SAAS;AACzC,cAAI,OAAO,OAAO,UAAU;AACxB,iBAAK,eAAe,KAAK,aAAa,CAAC;AACvC,aAAC,KAAK,KAAK,YAAY,EAAE,MAAM,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,EAAE;AACrD,mBAAO,KAAK,WAAW,EAAE;AAAA,UAC7B,OACK;AACD,iBAAK,UAAU,KAAK,QAAQ,CAAC;AAC7B,aAAC,KAAK,KAAK,OAAO,EAAE,MAAM,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,EAAE;AAChD,mBAAO,KAAK,MAAM,EAAE;AAAA,UACxB;AACA,cAAI,UAAU;AACV,iBAAK,OAAO,KAAK,OAAOA,MAAK,CAAC;AAAA,UAClC;AACA;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ,GAzCqB;AA0CrB,eAAaD,OAAK;AAClB,SAAO;AACX;AA9CgB;AA+ET,SAAS,UAAU,OAAO;AAC7B,QAAM,OAAO,CAAC;AACd,QAAM,OAAO,MAAM,IAAI,CAAC,QAAS,OAAO,QAAQ,WAAW,IAAI,MAAM,GAAI;AACzE,aAAW,OAAO,MAAM;AACpB,QAAI,OAAO,QAAQ;AACf,WAAK,KAAK,IAAI,GAAG,GAAG;AAAA,aACf,OAAO,QAAQ;AACpB,WAAK,KAAK,IAAI,KAAK,UAAU,OAAO,GAAG,CAAC,CAAC,GAAG;AAAA,aACvC,SAAS,KAAK,GAAG;AACtB,WAAK,KAAK,IAAI,KAAK,UAAU,GAAG,CAAC,GAAG;AAAA,SACnC;AACD,UAAI,KAAK;AACL,aAAK,KAAK,GAAG;AACjB,WAAK,KAAK,GAAG;AAAA,IACjB;AAAA,EACJ;AACA,SAAO,KAAK,KAAK,EAAE;AACvB;AAjBgB;AAkBT,SAAS,cAAcA,SAAO;AACjC,QAAM,QAAQ,CAAC;AAEf,QAAM,SAAS,CAAC,GAAGA,QAAM,MAAM,EAAE,KAAK,CAAC,GAAG,OAAO,EAAE,QAAQ,CAAC,GAAG,UAAU,EAAE,QAAQ,CAAC,GAAG,MAAM;AAE7F,aAAWC,UAAS,QAAQ;AACxB,UAAM,KAAK,UAAKA,OAAM,OAAO,EAAE;AAC/B,QAAIA,OAAM,MAAM;AACZ,YAAM,KAAK,eAAU,UAAUA,OAAM,IAAI,CAAC,EAAE;AAAA,EACpD;AAEA,SAAO,MAAM,KAAK,IAAI;AAC1B;AAZgB;;;ADtKT,IAAM,SAAS,wBAAC,SAAS,CAAC,QAAQ,OAAO,MAAM,YAAY;AAC9D,QAAM,MAAM,OAAO,OAAO,OAAO,MAAM,EAAE,OAAO,MAAM,CAAC,IAAI,EAAE,OAAO,MAAM;AAC1E,QAAM,SAAS,OAAO,KAAK,IAAI,EAAE,OAAO,QAAQ,CAAC,EAAE,GAAG,GAAG;AACzD,MAAI,kBAAkB,SAAS;AAC3B,UAAM,IAAS,eAAe;AAAA,EAClC;AACA,MAAI,OAAO,OAAO,QAAQ;AACtB,UAAM,IAAI,KAAK,SAAS,OAAO,MAAM,OAAO,OAAO,IAAI,CAAC,QAAa,cAAc,KAAK,KAAUC,QAAO,CAAC,CAAC,CAAC;AAC5G,IAAK,kBAAkB,GAAG,SAAS,MAAM;AACzC,UAAM;AAAA,EACV;AACA,SAAO,OAAO;AAClB,GAZsB;AAaf,IAAMC,SAAuB,uBAAc,aAAa;AACxD,IAAM,cAAc,wBAAC,SAAS,OAAO,QAAQ,OAAO,MAAM,WAAW;AACxE,QAAM,MAAM,OAAO,OAAO,OAAO,MAAM,EAAE,OAAO,KAAK,CAAC,IAAI,EAAE,OAAO,KAAK;AACxE,MAAI,SAAS,OAAO,KAAK,IAAI,EAAE,OAAO,QAAQ,CAAC,EAAE,GAAG,GAAG;AACvD,MAAI,kBAAkB;AAClB,aAAS,MAAM;AACnB,MAAI,OAAO,OAAO,QAAQ;AACtB,UAAM,IAAI,KAAK,QAAQ,OAAO,MAAM,OAAO,OAAO,IAAI,CAAC,QAAa,cAAc,KAAK,KAAUD,QAAO,CAAC,CAAC,CAAC;AAC3G,IAAK,kBAAkB,GAAG,QAAQ,MAAM;AACxC,UAAM;AAAA,EACV;AACA,SAAO,OAAO;AAClB,GAX2B;AAYpB,IAAM,aAA4B,4BAAmB,aAAa;AAClE,IAAM,aAAa,wBAAC,SAAS,CAAC,QAAQ,OAAO,SAAS;AACzD,QAAM,MAAM,OAAO,EAAE,GAAG,MAAM,OAAO,MAAM,IAAI,EAAE,OAAO,MAAM;AAC9D,QAAM,SAAS,OAAO,KAAK,IAAI,EAAE,OAAO,QAAQ,CAAC,EAAE,GAAG,GAAG;AACzD,MAAI,kBAAkB,SAAS;AAC3B,UAAM,IAAS,eAAe;AAAA,EAClC;AACA,SAAO,OAAO,OAAO,SACf;AAAA,IACE,SAAS;AAAA,IACT,OAAO,KAAK,QAAe,WAAW,OAAO,OAAO,IAAI,CAAC,QAAa,cAAc,KAAK,KAAUA,QAAO,CAAC,CAAC,CAAC;AAAA,EACjH,IACE,EAAE,SAAS,MAAM,MAAM,OAAO,MAAM;AAC9C,GAZ0B;AAanB,IAAM,YAA2B,2BAAkB,aAAa;AAChE,IAAM,kBAAkB,wBAAC,SAAS,OAAO,QAAQ,OAAO,SAAS;AACpE,QAAM,MAAM,OAAO,OAAO,OAAO,MAAM,EAAE,OAAO,KAAK,CAAC,IAAI,EAAE,OAAO,KAAK;AACxE,MAAI,SAAS,OAAO,KAAK,IAAI,EAAE,OAAO,QAAQ,CAAC,EAAE,GAAG,GAAG;AACvD,MAAI,kBAAkB;AAClB,aAAS,MAAM;AACnB,SAAO,OAAO,OAAO,SACf;AAAA,IACE,SAAS;AAAA,IACT,OAAO,IAAI,KAAK,OAAO,OAAO,IAAI,CAAC,QAAa,cAAc,KAAK,KAAUA,QAAO,CAAC,CAAC,CAAC;AAAA,EAC3F,IACE,EAAE,SAAS,MAAM,MAAM,OAAO,MAAM;AAC9C,GAX+B;AAYxB,IAAM,iBAAgC,gCAAuB,aAAa;AAC1E,IAAM,UAAU,wBAAC,SAAS,CAAC,QAAQ,OAAO,SAAS;AACtD,QAAM,MAAM,OAAO,OAAO,OAAO,MAAM,EAAE,WAAW,WAAW,CAAC,IAAI,EAAE,WAAW,WAAW;AAC5F,SAAO,OAAO,IAAI,EAAE,QAAQ,OAAO,GAAG;AAC1C,GAHuB;AAIhB,IAAM,SAAwB,wBAAe,aAAa;AAC1D,IAAM,UAAU,wBAAC,SAAS,CAAC,QAAQ,OAAO,SAAS;AACtD,SAAO,OAAO,IAAI,EAAE,QAAQ,OAAO,IAAI;AAC3C,GAFuB;AAGhB,IAAME,UAAwB,wBAAe,aAAa;AAC1D,IAAM,eAAe,wBAAC,SAAS,OAAO,QAAQ,OAAO,SAAS;AACjE,QAAM,MAAM,OAAO,OAAO,OAAO,MAAM,EAAE,WAAW,WAAW,CAAC,IAAI,EAAE,WAAW,WAAW;AAC5F,SAAO,YAAY,IAAI,EAAE,QAAQ,OAAO,GAAG;AAC/C,GAH4B;AAIrB,IAAM,cAA6B,6BAAoB,aAAa;AACpE,IAAM,eAAe,wBAAC,SAAS,OAAO,QAAQ,OAAO,SAAS;AACjE,SAAO,YAAY,IAAI,EAAE,QAAQ,OAAO,IAAI;AAChD,GAF4B;AAGrB,IAAM,cAA6B,6BAAoB,aAAa;AACpE,IAAM,cAAc,wBAAC,SAAS,CAAC,QAAQ,OAAO,SAAS;AAC1D,QAAM,MAAM,OAAO,OAAO,OAAO,MAAM,EAAE,WAAW,WAAW,CAAC,IAAI,EAAE,WAAW,WAAW;AAC5F,SAAO,WAAW,IAAI,EAAE,QAAQ,OAAO,GAAG;AAC9C,GAH2B;AAIpB,IAAM,aAA4B,4BAAmB,aAAa;AAClE,IAAM,cAAc,wBAAC,SAAS,CAAC,QAAQ,OAAO,SAAS;AAC1D,SAAO,WAAW,IAAI,EAAE,QAAQ,OAAO,IAAI;AAC/C,GAF2B;AAGpB,IAAM,aAA4B,4BAAmB,aAAa;AAClE,IAAM,mBAAmB,wBAAC,SAAS,OAAO,QAAQ,OAAO,SAAS;AACrE,QAAM,MAAM,OAAO,OAAO,OAAO,MAAM,EAAE,WAAW,WAAW,CAAC,IAAI,EAAE,WAAW,WAAW;AAC5F,SAAO,gBAAgB,IAAI,EAAE,QAAQ,OAAO,GAAG;AACnD,GAHgC;AAIzB,IAAM,kBAAiC,iCAAwB,aAAa;AAC5E,IAAM,mBAAmB,wBAAC,SAAS,OAAO,QAAQ,OAAO,SAAS;AACrE,SAAO,gBAAgB,IAAI,EAAE,QAAQ,OAAO,IAAI;AACpD,GAFgC;AAGzB,IAAM,kBAAiC,iCAAwB,aAAa;;;AG5FnF;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAAC;AAAO,IAAM,OAAO;AACb,IAAM,QAAQ;AACd,IAAM,OAAO;AACb,IAAM,MAAM;AACZ,IAAM,QAAQ;AACd,IAAM,SAAS;AAEf,IAAM,WAAW;AAEjB,IAAM,mBAAmB;AAEzB,IAAM,OAAO;AAIb,IAAM,OAAO,wBAACC,aAAY;AAC7B,MAAI,CAACA;AACD,WAAO;AACX,SAAO,IAAI,OAAO,mCAAmCA,QAAO,yDAAyD;AACzH,GAJoB;AAKb,IAAM,QAAsB,qBAAK,CAAC;AAClC,IAAM,QAAsB,qBAAK,CAAC;AAClC,IAAM,QAAsB,qBAAK,CAAC;AAElC,IAAM,QAAQ;AAEd,IAAM,aAAa;AAEnB,IAAM,eAAe;AAErB,IAAM,eAAe;AACrB,IAAM,WAAW;AACjB,IAAM,eAAe;AAE5B,IAAM,SAAS;AACR,SAAS,QAAQ;AACpB,SAAO,IAAI,OAAO,QAAQ,GAAG;AACjC;AAFgB;AAGT,IAAM,OAAO;AACb,IAAM,OAAO;AACb,IAAM,SAAS;AACf,IAAM,SAAS;AAEf,IAAM,SAAS;AACf,IAAM,YAAY;AAGlB,IAAM,WAAW;AACjB,IAAMC,UAAS;AAEf,IAAM,OAAO;AAEpB,IAAM,aAAa;AACZ,IAAM,OAAqB,oBAAI,OAAO,IAAI,UAAU,GAAG;AAC9D,SAAS,WAAW,MAAM;AACtB,QAAM,OAAO;AACb,QAAM,QAAQ,OAAO,KAAK,cAAc,WAClC,KAAK,cAAc,KACf,GAAG,IAAI,KACP,KAAK,cAAc,IACf,GAAG,IAAI,cACP,GAAG,IAAI,mBAAmB,KAAK,SAAS,MAChD,GAAG,IAAI;AACb,SAAO;AACX;AAVS;AAWF,SAASC,MAAK,MAAM;AACvB,SAAO,IAAI,OAAO,IAAI,WAAW,IAAI,CAAC,GAAG;AAC7C;AAFgB,OAAAA,OAAA;AAIT,SAAS,SAAS,MAAM;AAC3B,QAAMA,QAAO,WAAW,EAAE,WAAW,KAAK,UAAU,CAAC;AACrD,QAAM,OAAO,CAAC,GAAG;AACjB,MAAI,KAAK;AACL,SAAK,KAAK,EAAE;AAEhB,MAAI,KAAK;AACL,SAAK,KAAK,mCAAmC;AACjD,QAAM,YAAY,GAAGA,KAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAC7C,SAAO,IAAI,OAAO,IAAI,UAAU,OAAO,SAAS,IAAI;AACxD;AAVgB;AAWT,IAAM,SAAS,wBAAC,WAAW;AAC9B,QAAM,QAAQ,SAAS,YAAY,QAAQ,WAAW,CAAC,IAAI,QAAQ,WAAW,EAAE,MAAM;AACtF,SAAO,IAAI,OAAO,IAAI,KAAK,GAAG;AAClC,GAHsB;AAIf,IAAMC,UAAS;AACf,IAAM,UAAU;AAChB,IAAM,SAAS;AACf,IAAM,UAAU;AACvB,IAAM,QAAQ;AAEd,IAAM,aAAa;AAGZ,IAAM,YAAY;AAElB,IAAM,YAAY;AAElB,IAAM,MAAM;AAGnB,SAAS,YAAY,YAAY,SAAS;AACtC,SAAO,IAAI,OAAO,kBAAkB,UAAU,IAAI,OAAO,GAAG;AAChE;AAFS;AAIT,SAAS,eAAe,QAAQ;AAC5B,SAAO,IAAI,OAAO,kBAAkB,MAAM,IAAI;AAClD;AAFS;AAIF,IAAM,UAAU;AAChB,IAAM,aAA2B,4BAAY,IAAI,IAAI;AACrD,IAAM,gBAA8B,+BAAe,EAAE;AAErD,IAAM,WAAW;AACjB,IAAM,cAA4B,4BAAY,IAAI,GAAG;AACrD,IAAM,iBAA+B,+BAAe,EAAE;AAEtD,IAAM,aAAa;AACnB,IAAM,gBAA8B,4BAAY,IAAI,GAAG;AACvD,IAAM,mBAAiC,+BAAe,EAAE;AAExD,IAAM,aAAa;AACnB,IAAM,gBAA8B,4BAAY,IAAI,EAAE;AACtD,IAAM,mBAAiC,+BAAe,EAAE;AAExD,IAAM,aAAa;AACnB,IAAM,gBAA8B,4BAAY,IAAI,IAAI;AACxD,IAAM,mBAAiC,+BAAe,EAAE;;;AD1HxD,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,MAAI;AACJ,OAAK,SAAS,KAAK,OAAO,CAAC;AAC3B,OAAK,KAAK,MAAM;AAChB,GAAC,KAAK,KAAK,MAAM,aAAa,GAAG,WAAW,CAAC;AACjD,CAAC;AACD,IAAM,mBAAmB;AAAA,EACrB,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AACZ;AACO,IAAM,oBAAkC,gBAAK,aAAa,qBAAqB,CAAC,MAAM,QAAQ;AACjG,YAAU,KAAK,MAAM,GAAG;AACxB,QAAM,SAAS,iBAAiB,OAAO,IAAI,KAAK;AAChD,OAAK,KAAK,SAAS,KAAK,CAACC,UAAS;AAC9B,UAAM,MAAMA,MAAK,KAAK;AACtB,UAAM,QAAQ,IAAI,YAAY,IAAI,UAAU,IAAI,qBAAqB,OAAO;AAC5E,QAAI,IAAI,QAAQ,MAAM;AAClB,UAAI,IAAI;AACJ,YAAI,UAAU,IAAI;AAAA;AAElB,YAAI,mBAAmB,IAAI;AAAA,IACnC;AAAA,EACJ,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI,IAAI,YAAY,QAAQ,SAAS,IAAI,QAAQ,QAAQ,QAAQ,IAAI,OAAO;AACxE;AAAA,IACJ;AACA,YAAQ,OAAO,KAAK;AAAA,MAChB;AAAA,MACA,MAAM;AAAA,MACN,SAAS,IAAI;AAAA,MACb,OAAO,QAAQ;AAAA,MACf,WAAW,IAAI;AAAA,MACf;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,uBAAqC,gBAAK,aAAa,wBAAwB,CAAC,MAAM,QAAQ;AACvG,YAAU,KAAK,MAAM,GAAG;AACxB,QAAM,SAAS,iBAAiB,OAAO,IAAI,KAAK;AAChD,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,MAAMA,MAAK,KAAK;AACtB,UAAM,QAAQ,IAAI,YAAY,IAAI,UAAU,IAAI,qBAAqB,OAAO;AAC5E,QAAI,IAAI,QAAQ,MAAM;AAClB,UAAI,IAAI;AACJ,YAAI,UAAU,IAAI;AAAA;AAElB,YAAI,mBAAmB,IAAI;AAAA,IACnC;AAAA,EACJ,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI,IAAI,YAAY,QAAQ,SAAS,IAAI,QAAQ,QAAQ,QAAQ,IAAI,OAAO;AACxE;AAAA,IACJ;AACA,YAAQ,OAAO,KAAK;AAAA,MAChB;AAAA,MACA,MAAM;AAAA,MACN,SAAS,IAAI;AAAA,MACb,OAAO,QAAQ;AAAA,MACf,WAAW,IAAI;AAAA,MACf;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,sBACC,gBAAK,aAAa,uBAAuB,CAAC,MAAM,QAAQ;AAClE,YAAU,KAAK,MAAM,GAAG;AACxB,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,QAAI;AACJ,KAAC,KAAKA,MAAK,KAAK,KAAK,eAAe,GAAG,aAAa,IAAI;AAAA,EAC5D,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI,OAAO,QAAQ,UAAU,OAAO,IAAI;AACpC,YAAM,IAAI,MAAM,oDAAoD;AACxE,UAAM,aAAa,OAAO,QAAQ,UAAU,WACtC,QAAQ,QAAQ,IAAI,UAAU,OAAO,CAAC,IACjC,mBAAmB,QAAQ,OAAO,IAAI,KAAK,MAAM;AAC5D,QAAI;AACA;AACJ,YAAQ,OAAO,KAAK;AAAA,MAChB,QAAQ,OAAO,QAAQ;AAAA,MACvB,MAAM;AAAA,MACN,SAAS,IAAI;AAAA,MACb,OAAO,QAAQ;AAAA,MACf;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,wBAAsC,gBAAK,aAAa,yBAAyB,CAAC,MAAM,QAAQ;AACzG,YAAU,KAAK,MAAM,GAAG;AACxB,MAAI,SAAS,IAAI,UAAU;AAC3B,QAAM,QAAQ,IAAI,QAAQ,SAAS,KAAK;AACxC,QAAM,SAAS,QAAQ,QAAQ;AAC/B,QAAM,CAAC,SAAS,OAAO,IAAS,qBAAqB,IAAI,MAAM;AAC/D,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,MAAMA,MAAK,KAAK;AACtB,QAAI,SAAS,IAAI;AACjB,QAAI,UAAU;AACd,QAAI,UAAU;AACd,QAAI;AACA,UAAI,UAAkB;AAAA,EAC9B,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,UAAM,QAAQ,QAAQ;AACtB,QAAI,OAAO;AACP,UAAI,CAAC,OAAO,UAAU,KAAK,GAAG;AAU1B,gBAAQ,OAAO,KAAK;AAAA,UAChB,UAAU;AAAA,UACV,QAAQ,IAAI;AAAA,UACZ,MAAM;AAAA,UACN,UAAU;AAAA,UACV;AAAA,UACA;AAAA,QACJ,CAAC;AACD;AAAA,MASJ;AACA,UAAI,CAAC,OAAO,cAAc,KAAK,GAAG;AAC9B,YAAI,QAAQ,GAAG;AAEX,kBAAQ,OAAO,KAAK;AAAA,YAChB;AAAA,YACA,MAAM;AAAA,YACN,SAAS,OAAO;AAAA,YAChB,MAAM;AAAA,YACN;AAAA,YACA;AAAA,YACA,UAAU,CAAC,IAAI;AAAA,UACnB,CAAC;AAAA,QACL,OACK;AAED,kBAAQ,OAAO,KAAK;AAAA,YAChB;AAAA,YACA,MAAM;AAAA,YACN,SAAS,OAAO;AAAA,YAChB,MAAM;AAAA,YACN;AAAA,YACA;AAAA,YACA,UAAU,CAAC,IAAI;AAAA,UACnB,CAAC;AAAA,QACL;AACA;AAAA,MACJ;AAAA,IACJ;AACA,QAAI,QAAQ,SAAS;AACjB,cAAQ,OAAO,KAAK;AAAA,QAChB,QAAQ;AAAA,QACR;AAAA,QACA,MAAM;AAAA,QACN;AAAA,QACA,WAAW;AAAA,QACX;AAAA,QACA,UAAU,CAAC,IAAI;AAAA,MACnB,CAAC;AAAA,IACL;AACA,QAAI,QAAQ,SAAS;AACjB,cAAQ,OAAO,KAAK;AAAA,QAChB,QAAQ;AAAA,QACR;AAAA,QACA,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AACJ,CAAC;AACM,IAAM,wBAAsC,gBAAK,aAAa,yBAAyB,CAAC,MAAM,QAAQ;AACzG,YAAU,KAAK,MAAM,GAAG;AACxB,QAAM,CAAC,SAAS,OAAO,IAAS,qBAAqB,IAAI,MAAM;AAC/D,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,MAAMA,MAAK,KAAK;AACtB,QAAI,SAAS,IAAI;AACjB,QAAI,UAAU;AACd,QAAI,UAAU;AAAA,EAClB,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,UAAM,QAAQ,QAAQ;AACtB,QAAI,QAAQ,SAAS;AACjB,cAAQ,OAAO,KAAK;AAAA,QAChB,QAAQ;AAAA,QACR;AAAA,QACA,MAAM;AAAA,QACN;AAAA,QACA,WAAW;AAAA,QACX;AAAA,QACA,UAAU,CAAC,IAAI;AAAA,MACnB,CAAC;AAAA,IACL;AACA,QAAI,QAAQ,SAAS;AACjB,cAAQ,OAAO,KAAK;AAAA,QAChB,QAAQ;AAAA,QACR;AAAA,QACA,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AACJ,CAAC;AACM,IAAM,mBAAiC,gBAAK,aAAa,oBAAoB,CAAC,MAAM,QAAQ;AAC/F,MAAI;AACJ,YAAU,KAAK,MAAM,GAAG;AACxB,GAAC,KAAK,KAAK,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,YAAY;AACjD,UAAM,MAAM,QAAQ;AACpB,WAAO,CAAM,QAAQ,GAAG,KAAK,IAAI,SAAS;AAAA,EAC9C;AACA,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,OAAQA,MAAK,KAAK,IAAI,WAAW,OAAO;AAC9C,QAAI,IAAI,UAAU;AACd,MAAAA,MAAK,KAAK,IAAI,UAAU,IAAI;AAAA,EACpC,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,UAAM,QAAQ,QAAQ;AACtB,UAAM,OAAO,MAAM;AACnB,QAAI,QAAQ,IAAI;AACZ;AACJ,YAAQ,OAAO,KAAK;AAAA,MAChB,QAAa,iBAAiB,KAAK;AAAA,MACnC,MAAM;AAAA,MACN,SAAS,IAAI;AAAA,MACb,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,mBAAiC,gBAAK,aAAa,oBAAoB,CAAC,MAAM,QAAQ;AAC/F,MAAI;AACJ,YAAU,KAAK,MAAM,GAAG;AACxB,GAAC,KAAK,KAAK,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,YAAY;AACjD,UAAM,MAAM,QAAQ;AACpB,WAAO,CAAM,QAAQ,GAAG,KAAK,IAAI,SAAS;AAAA,EAC9C;AACA,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,OAAQA,MAAK,KAAK,IAAI,WAAW,OAAO;AAC9C,QAAI,IAAI,UAAU;AACd,MAAAA,MAAK,KAAK,IAAI,UAAU,IAAI;AAAA,EACpC,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,UAAM,QAAQ,QAAQ;AACtB,UAAM,OAAO,MAAM;AACnB,QAAI,QAAQ,IAAI;AACZ;AACJ,YAAQ,OAAO,KAAK;AAAA,MAChB,QAAa,iBAAiB,KAAK;AAAA,MACnC,MAAM;AAAA,MACN,SAAS,IAAI;AAAA,MACb,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,sBAAoC,gBAAK,aAAa,uBAAuB,CAAC,MAAM,QAAQ;AACrG,MAAI;AACJ,YAAU,KAAK,MAAM,GAAG;AACxB,GAAC,KAAK,KAAK,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,YAAY;AACjD,UAAM,MAAM,QAAQ;AACpB,WAAO,CAAM,QAAQ,GAAG,KAAK,IAAI,SAAS;AAAA,EAC9C;AACA,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,MAAMA,MAAK,KAAK;AACtB,QAAI,UAAU,IAAI;AAClB,QAAI,UAAU,IAAI;AAClB,QAAI,OAAO,IAAI;AAAA,EACnB,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,UAAM,QAAQ,QAAQ;AACtB,UAAM,OAAO,MAAM;AACnB,QAAI,SAAS,IAAI;AACb;AACJ,UAAM,SAAS,OAAO,IAAI;AAC1B,YAAQ,OAAO,KAAK;AAAA,MAChB,QAAa,iBAAiB,KAAK;AAAA,MACnC,GAAI,SAAS,EAAE,MAAM,WAAW,SAAS,IAAI,KAAK,IAAI,EAAE,MAAM,aAAa,SAAS,IAAI,KAAK;AAAA,MAC7F,WAAW;AAAA,MACX,OAAO;AAAA,MACP,OAAO,QAAQ;AAAA,MACf;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,qBAAmC,gBAAK,aAAa,sBAAsB,CAAC,MAAM,QAAQ;AACnG,MAAI;AACJ,YAAU,KAAK,MAAM,GAAG;AACxB,GAAC,KAAK,KAAK,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,YAAY;AACjD,UAAM,MAAM,QAAQ;AACpB,WAAO,CAAM,QAAQ,GAAG,KAAK,IAAI,WAAW;AAAA,EAChD;AACA,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,OAAQA,MAAK,KAAK,IAAI,WAAW,OAAO;AAC9C,QAAI,IAAI,UAAU;AACd,MAAAA,MAAK,KAAK,IAAI,UAAU,IAAI;AAAA,EACpC,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,UAAM,QAAQ,QAAQ;AACtB,UAAM,SAAS,MAAM;AACrB,QAAI,UAAU,IAAI;AACd;AACJ,UAAM,SAAc,oBAAoB,KAAK;AAC7C,YAAQ,OAAO,KAAK;AAAA,MAChB;AAAA,MACA,MAAM;AAAA,MACN,SAAS,IAAI;AAAA,MACb,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,qBAAmC,gBAAK,aAAa,sBAAsB,CAAC,MAAM,QAAQ;AACnG,MAAI;AACJ,YAAU,KAAK,MAAM,GAAG;AACxB,GAAC,KAAK,KAAK,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,YAAY;AACjD,UAAM,MAAM,QAAQ;AACpB,WAAO,CAAM,QAAQ,GAAG,KAAK,IAAI,WAAW;AAAA,EAChD;AACA,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,OAAQA,MAAK,KAAK,IAAI,WAAW,OAAO;AAC9C,QAAI,IAAI,UAAU;AACd,MAAAA,MAAK,KAAK,IAAI,UAAU,IAAI;AAAA,EACpC,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,UAAM,QAAQ,QAAQ;AACtB,UAAM,SAAS,MAAM;AACrB,QAAI,UAAU,IAAI;AACd;AACJ,UAAM,SAAc,oBAAoB,KAAK;AAC7C,YAAQ,OAAO,KAAK;AAAA,MAChB;AAAA,MACA,MAAM;AAAA,MACN,SAAS,IAAI;AAAA,MACb,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,wBAAsC,gBAAK,aAAa,yBAAyB,CAAC,MAAM,QAAQ;AACzG,MAAI;AACJ,YAAU,KAAK,MAAM,GAAG;AACxB,GAAC,KAAK,KAAK,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,YAAY;AACjD,UAAM,MAAM,QAAQ;AACpB,WAAO,CAAM,QAAQ,GAAG,KAAK,IAAI,WAAW;AAAA,EAChD;AACA,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,MAAMA,MAAK,KAAK;AACtB,QAAI,UAAU,IAAI;AAClB,QAAI,UAAU,IAAI;AAClB,QAAI,SAAS,IAAI;AAAA,EACrB,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,UAAM,QAAQ,QAAQ;AACtB,UAAM,SAAS,MAAM;AACrB,QAAI,WAAW,IAAI;AACf;AACJ,UAAM,SAAc,oBAAoB,KAAK;AAC7C,UAAM,SAAS,SAAS,IAAI;AAC5B,YAAQ,OAAO,KAAK;AAAA,MAChB;AAAA,MACA,GAAI,SAAS,EAAE,MAAM,WAAW,SAAS,IAAI,OAAO,IAAI,EAAE,MAAM,aAAa,SAAS,IAAI,OAAO;AAAA,MACjG,WAAW;AAAA,MACX,OAAO;AAAA,MACP,OAAO,QAAQ;AAAA,MACf;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,wBAAsC,gBAAK,aAAa,yBAAyB,CAAC,MAAM,QAAQ;AACzG,MAAI,IAAI;AACR,YAAU,KAAK,MAAM,GAAG;AACxB,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,MAAMA,MAAK,KAAK;AACtB,QAAI,SAAS,IAAI;AACjB,QAAI,IAAI,SAAS;AACb,UAAI,aAAa,IAAI,WAAW,oBAAI,IAAI;AACxC,UAAI,SAAS,IAAI,IAAI,OAAO;AAAA,IAChC;AAAA,EACJ,CAAC;AACD,MAAI,IAAI;AACJ,KAAC,KAAK,KAAK,MAAM,UAAU,GAAG,QAAQ,CAAC,YAAY;AAC/C,UAAI,QAAQ,YAAY;AACxB,UAAI,IAAI,QAAQ,KAAK,QAAQ,KAAK;AAC9B;AACJ,cAAQ,OAAO,KAAK;AAAA,QAChB,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,QAAQ,IAAI;AAAA,QACZ,OAAO,QAAQ;AAAA,QACf,GAAI,IAAI,UAAU,EAAE,SAAS,IAAI,QAAQ,SAAS,EAAE,IAAI,CAAC;AAAA,QACzD;AAAA,QACA,UAAU,CAAC,IAAI;AAAA,MACnB,CAAC;AAAA,IACL;AAAA;AAEA,KAAC,KAAK,KAAK,MAAM,UAAU,GAAG,QAAQ,MAAM;AAAA,IAAE;AACtD,CAAC;AACM,IAAM,iBAA+B,gBAAK,aAAa,kBAAkB,CAAC,MAAM,QAAQ;AAC3F,wBAAsB,KAAK,MAAM,GAAG;AACpC,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI,QAAQ,YAAY;AACxB,QAAI,IAAI,QAAQ,KAAK,QAAQ,KAAK;AAC9B;AACJ,YAAQ,OAAO,KAAK;AAAA,MAChB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,OAAO,QAAQ;AAAA,MACf,SAAS,IAAI,QAAQ,SAAS;AAAA,MAC9B;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,qBAAmC,gBAAK,aAAa,sBAAsB,CAAC,MAAM,QAAQ;AACnG,MAAI,YAAY,IAAI,UAAkB;AACtC,wBAAsB,KAAK,MAAM,GAAG;AACxC,CAAC;AACM,IAAM,qBAAmC,gBAAK,aAAa,sBAAsB,CAAC,MAAM,QAAQ;AACnG,MAAI,YAAY,IAAI,UAAkB;AACtC,wBAAsB,KAAK,MAAM,GAAG;AACxC,CAAC;AACM,IAAM,oBAAkC,gBAAK,aAAa,qBAAqB,CAAC,MAAM,QAAQ;AACjG,YAAU,KAAK,MAAM,GAAG;AACxB,QAAM,eAAoB,YAAY,IAAI,QAAQ;AAClD,QAAM,UAAU,IAAI,OAAO,OAAO,IAAI,aAAa,WAAW,MAAM,IAAI,QAAQ,IAAI,YAAY,KAAK,YAAY;AACjH,MAAI,UAAU;AACd,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,MAAMA,MAAK,KAAK;AACtB,QAAI,aAAa,IAAI,WAAW,oBAAI,IAAI;AACxC,QAAI,SAAS,IAAI,OAAO;AAAA,EAC5B,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI,QAAQ,MAAM,SAAS,IAAI,UAAU,IAAI,QAAQ;AACjD;AACJ,YAAQ,OAAO,KAAK;AAAA,MAChB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,UAAU,IAAI;AAAA,MACd,OAAO,QAAQ;AAAA,MACf;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,sBAAoC,gBAAK,aAAa,uBAAuB,CAAC,MAAM,QAAQ;AACrG,YAAU,KAAK,MAAM,GAAG;AACxB,QAAM,UAAU,IAAI,OAAO,IAAS,YAAY,IAAI,MAAM,CAAC,IAAI;AAC/D,MAAI,YAAY,IAAI,UAAU;AAC9B,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,MAAMA,MAAK,KAAK;AACtB,QAAI,aAAa,IAAI,WAAW,oBAAI,IAAI;AACxC,QAAI,SAAS,IAAI,OAAO;AAAA,EAC5B,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI,QAAQ,MAAM,WAAW,IAAI,MAAM;AACnC;AACJ,YAAQ,OAAO,KAAK;AAAA,MAChB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ,IAAI;AAAA,MACZ,OAAO,QAAQ;AAAA,MACf;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,oBAAkC,gBAAK,aAAa,qBAAqB,CAAC,MAAM,QAAQ;AACjG,YAAU,KAAK,MAAM,GAAG;AACxB,QAAM,UAAU,IAAI,OAAO,KAAU,YAAY,IAAI,MAAM,CAAC,GAAG;AAC/D,MAAI,YAAY,IAAI,UAAU;AAC9B,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,MAAMA,MAAK,KAAK;AACtB,QAAI,aAAa,IAAI,WAAW,oBAAI,IAAI;AACxC,QAAI,SAAS,IAAI,OAAO;AAAA,EAC5B,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI,QAAQ,MAAM,SAAS,IAAI,MAAM;AACjC;AACJ,YAAQ,OAAO,KAAK;AAAA,MAChB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ,IAAI;AAAA,MACZ,OAAO,QAAQ;AAAA,MACf;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AAID,SAAS,0BAA0B,QAAQ,SAAS,UAAU;AAC1D,MAAI,OAAO,OAAO,QAAQ;AACtB,YAAQ,OAAO,KAAK,GAAQ,aAAa,UAAU,OAAO,MAAM,CAAC;AAAA,EACrE;AACJ;AAJS;AAKF,IAAM,oBAAkC,gBAAK,aAAa,qBAAqB,CAAC,MAAM,QAAQ;AACjG,YAAU,KAAK,MAAM,GAAG;AACxB,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,UAAM,SAAS,IAAI,OAAO,KAAK,IAAI;AAAA,MAC/B,OAAO,QAAQ,MAAM,IAAI,QAAQ;AAAA,MACjC,QAAQ,CAAC;AAAA,IACb,GAAG,CAAC,CAAC;AACL,QAAI,kBAAkB,SAAS;AAC3B,aAAO,OAAO,KAAK,CAACC,YAAW,0BAA0BA,SAAQ,SAAS,IAAI,QAAQ,CAAC;AAAA,IAC3F;AACA,8BAA0B,QAAQ,SAAS,IAAI,QAAQ;AACvD;AAAA,EACJ;AACJ,CAAC;AACM,IAAM,oBAAkC,gBAAK,aAAa,qBAAqB,CAAC,MAAM,QAAQ;AACjG,YAAU,KAAK,MAAM,GAAG;AACxB,QAAM,UAAU,IAAI,IAAI,IAAI,IAAI;AAChC,OAAK,KAAK,SAAS,KAAK,CAACD,UAAS;AAC9B,IAAAA,MAAK,KAAK,IAAI,OAAO,IAAI;AAAA,EAC7B,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI,QAAQ,IAAI,QAAQ,MAAM,IAAI;AAC9B;AACJ,YAAQ,OAAO,KAAK;AAAA,MAChB,MAAM;AAAA,MACN,QAAQ,IAAI;AAAA,MACZ,OAAO,QAAQ,MAAM;AAAA,MACrB;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,qBAAmC,gBAAK,aAAa,sBAAsB,CAAC,MAAM,QAAQ;AACnG,YAAU,KAAK,MAAM,GAAG;AACxB,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,YAAQ,QAAQ,IAAI,GAAG,QAAQ,KAAK;AAAA,EACxC;AACJ,CAAC;;;AExjBD;AAAA;AAAA;AAAAE;AAAO,IAAM,MAAN,MAAU;AAAA,EAAjB,OAAiB;AAAA;AAAA;AAAA,EACb,YAAY,OAAO,CAAC,GAAG;AACnB,SAAK,UAAU,CAAC;AAChB,SAAK,SAAS;AACd,QAAI;AACA,WAAK,OAAO;AAAA,EACpB;AAAA,EACA,SAAS,IAAI;AACT,SAAK,UAAU;AACf,OAAG,IAAI;AACP,SAAK,UAAU;AAAA,EACnB;AAAA,EACA,MAAM,KAAK;AACP,QAAI,OAAO,QAAQ,YAAY;AAC3B,UAAI,MAAM,EAAE,WAAW,OAAO,CAAC;AAC/B,UAAI,MAAM,EAAE,WAAW,QAAQ,CAAC;AAChC;AAAA,IACJ;AACA,UAAM,UAAU;AAChB,UAAM,QAAQ,QAAQ,MAAM,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC;AACjD,UAAM,YAAY,KAAK,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,CAAC;AAC/E,UAAM,WAAW,MAAM,IAAI,CAAC,MAAM,EAAE,MAAM,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,IAAI,OAAO,KAAK,SAAS,CAAC,IAAI,CAAC;AAChG,eAAW,QAAQ,UAAU;AACzB,WAAK,QAAQ,KAAK,IAAI;AAAA,IAC1B;AAAA,EACJ;AAAA,EACA,UAAU;AACN,UAAM,IAAI;AACV,UAAM,OAAO,MAAM;AACnB,UAAM,UAAU,MAAM,WAAW,CAAC,EAAE;AACpC,UAAM,QAAQ,CAAC,GAAG,QAAQ,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;AAE9C,WAAO,IAAI,EAAE,GAAG,MAAM,MAAM,KAAK,IAAI,CAAC;AAAA,EAC1C;AACJ;;;AClCA;AAAA;AAAA;AAAAC;AAAO,IAAMC,WAAU;AAAA,EACnB,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AACX;;;AJGO,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,MAAI;AACJ,WAAS,OAAO,CAAC;AACjB,OAAK,KAAK,MAAM;AAChB,OAAK,KAAK,MAAM,KAAK,KAAK,OAAO,CAAC;AAClC,OAAK,KAAK,UAAUC;AACpB,QAAM,SAAS,CAAC,GAAI,KAAK,KAAK,IAAI,UAAU,CAAC,CAAE;AAE/C,MAAI,KAAK,KAAK,OAAO,IAAI,WAAW,GAAG;AACnC,WAAO,QAAQ,IAAI;AAAA,EACvB;AACA,aAAW,MAAM,QAAQ;AACrB,eAAW,MAAM,GAAG,KAAK,UAAU;AAC/B,SAAG,IAAI;AAAA,IACX;AAAA,EACJ;AACA,MAAI,OAAO,WAAW,GAAG;AAGrB,KAAC,KAAK,KAAK,MAAM,aAAa,GAAG,WAAW,CAAC;AAC7C,SAAK,KAAK,UAAU,KAAK,MAAM;AAC3B,WAAK,KAAK,MAAM,KAAK,KAAK;AAAA,IAC9B,CAAC;AAAA,EACL,OACK;AACD,UAAM,YAAY,wBAAC,SAASC,SAAQ,QAAQ;AACxC,UAAI,YAAiB,QAAQ,OAAO;AACpC,UAAI;AACJ,iBAAW,MAAMA,SAAQ;AACrB,YAAI,GAAG,KAAK,IAAI,MAAM;AAClB,gBAAM,YAAY,GAAG,KAAK,IAAI,KAAK,OAAO;AAC1C,cAAI,CAAC;AACD;AAAA,QACR,WACS,WAAW;AAChB;AAAA,QACJ;AACA,cAAM,UAAU,QAAQ,OAAO;AAC/B,cAAM,IAAI,GAAG,KAAK,MAAM,OAAO;AAC/B,YAAI,aAAa,WAAW,KAAK,UAAU,OAAO;AAC9C,gBAAM,IAAS,eAAe;AAAA,QAClC;AACA,YAAI,eAAe,aAAa,SAAS;AACrC,yBAAe,eAAe,QAAQ,QAAQ,GAAG,KAAK,YAAY;AAC9D,kBAAM;AACN,kBAAM,UAAU,QAAQ,OAAO;AAC/B,gBAAI,YAAY;AACZ;AACJ,gBAAI,CAAC;AACD,0BAAiB,QAAQ,SAAS,OAAO;AAAA,UACjD,CAAC;AAAA,QACL,OACK;AACD,gBAAM,UAAU,QAAQ,OAAO;AAC/B,cAAI,YAAY;AACZ;AACJ,cAAI,CAAC;AACD,wBAAiB,QAAQ,SAAS,OAAO;AAAA,QACjD;AAAA,MACJ;AACA,UAAI,aAAa;AACb,eAAO,YAAY,KAAK,MAAM;AAC1B,iBAAO;AAAA,QACX,CAAC;AAAA,MACL;AACA,aAAO;AAAA,IACX,GAzCkB;AAoDlB,UAAM,qBAAqB,wBAAC,QAAQ,SAAS,QAAQ;AAEjD,UAAS,QAAQ,MAAM,GAAG;AACtB,eAAO,UAAU;AACjB,eAAO;AAAA,MACX;AAEA,YAAM,cAAc,UAAU,SAAS,QAAQ,GAAG;AAClD,UAAI,uBAAuB,SAAS;AAChC,YAAI,IAAI,UAAU;AACd,gBAAM,IAAS,eAAe;AAClC,eAAO,YAAY,KAAK,CAACC,iBAAgB,KAAK,KAAK,MAAMA,cAAa,GAAG,CAAC;AAAA,MAC9E;AACA,aAAO,KAAK,KAAK,MAAM,aAAa,GAAG;AAAA,IAC3C,GAd2B;AAe3B,SAAK,KAAK,MAAM,CAAC,SAAS,QAAQ;AAC9B,UAAI,IAAI,YAAY;AAChB,eAAO,KAAK,KAAK,MAAM,SAAS,GAAG;AAAA,MACvC;AACA,UAAI,IAAI,cAAc,YAAY;AAG9B,cAAM,SAAS,KAAK,KAAK,MAAM,EAAE,OAAO,QAAQ,OAAO,QAAQ,CAAC,EAAE,GAAG,EAAE,GAAG,KAAK,YAAY,KAAK,CAAC;AACjG,YAAI,kBAAkB,SAAS;AAC3B,iBAAO,OAAO,KAAK,CAACC,YAAW;AAC3B,mBAAO,mBAAmBA,SAAQ,SAAS,GAAG;AAAA,UAClD,CAAC;AAAA,QACL;AACA,eAAO,mBAAmB,QAAQ,SAAS,GAAG;AAAA,MAClD;AAEA,YAAM,SAAS,KAAK,KAAK,MAAM,SAAS,GAAG;AAC3C,UAAI,kBAAkB,SAAS;AAC3B,YAAI,IAAI,UAAU;AACd,gBAAM,IAAS,eAAe;AAClC,eAAO,OAAO,KAAK,CAACC,YAAW,UAAUA,SAAQ,QAAQ,GAAG,CAAC;AAAA,MACjE;AACA,aAAO,UAAU,QAAQ,QAAQ,GAAG;AAAA,IACxC;AAAA,EACJ;AACA,OAAK,WAAW,IAAI;AAAA,IAChB,UAAU,wBAAC,UAAU;AACjB,UAAI;AACA,cAAM,IAAI,UAAU,MAAM,KAAK;AAC/B,eAAO,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,IAAI,EAAE,QAAQ,EAAE,OAAO,OAAO;AAAA,MACrE,SACO,GAAG;AACN,eAAO,eAAe,MAAM,KAAK,EAAE,KAAK,CAAC,MAAO,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,IAAI,EAAE,QAAQ,EAAE,OAAO,OAAO,CAAE;AAAA,MAChH;AAAA,IACJ,GARU;AAAA,IASV,QAAQ;AAAA,IACR,SAAS;AAAA,EACb;AACJ,CAAC;AAEM,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,UAAU,CAAC,GAAI,MAAM,KAAK,KAAK,YAAY,CAAC,CAAE,EAAE,IAAI,KAAa,OAAO,KAAK,KAAK,GAAG;AAC/F,OAAK,KAAK,QAAQ,CAAC,SAAS,MAAM;AAC9B,QAAI,IAAI;AACJ,UAAI;AACA,gBAAQ,QAAQ,OAAO,QAAQ,KAAK;AAAA,MACxC,SACOC,IAAG;AAAA,MAAE;AAChB,QAAI,OAAO,QAAQ,UAAU;AACzB,aAAO;AACX,YAAQ,OAAO,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,MAAM;AAAA,MACN,OAAO,QAAQ;AAAA,MACf;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,mBAAiC,gBAAK,aAAa,oBAAoB,CAAC,MAAM,QAAQ;AAE/F,EAAO,sBAAsB,KAAK,MAAM,GAAG;AAC3C,aAAW,KAAK,MAAM,GAAG;AAC7B,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,MAAI,IAAI,SAAS;AACb,UAAM,aAAa;AAAA,MACf,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IACR;AACA,UAAM,IAAI,WAAW,IAAI,OAAO;AAChC,QAAI,MAAM;AACN,YAAM,IAAI,MAAM,0BAA0B,IAAI,OAAO,GAAG;AAC5D,QAAI,YAAY,IAAI,UAAkB,KAAK,CAAC;AAAA,EAChD;AAEI,QAAI,YAAY,IAAI,UAAkB,KAAK;AAC/C,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,mBAAiB,KAAK,MAAM,GAAG;AAC/B,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI;AAEA,YAAM,UAAU,QAAQ,MAAM,KAAK;AAEnC,YAAMC,OAAM,IAAI,IAAI,OAAO;AAC3B,UAAI,IAAI,UAAU;AACd,YAAI,SAAS,YAAY;AACzB,YAAI,CAAC,IAAI,SAAS,KAAKA,KAAI,QAAQ,GAAG;AAClC,kBAAQ,OAAO,KAAK;AAAA,YAChB,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,MAAM;AAAA,YACN,SAAiB,SAAS;AAAA,YAC1B,OAAO,QAAQ;AAAA,YACf;AAAA,YACA,UAAU,CAAC,IAAI;AAAA,UACnB,CAAC;AAAA,QACL;AAAA,MACJ;AACA,UAAI,IAAI,UAAU;AACd,YAAI,SAAS,YAAY;AACzB,YAAI,CAAC,IAAI,SAAS,KAAKA,KAAI,SAAS,SAAS,GAAG,IAAIA,KAAI,SAAS,MAAM,GAAG,EAAE,IAAIA,KAAI,QAAQ,GAAG;AAC3F,kBAAQ,OAAO,KAAK;AAAA,YAChB,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,MAAM;AAAA,YACN,SAAS,IAAI,SAAS;AAAA,YACtB,OAAO,QAAQ;AAAA,YACf;AAAA,YACA,UAAU,CAAC,IAAI;AAAA,UACnB,CAAC;AAAA,QACL;AAAA,MACJ;AAEA,UAAI,IAAI,WAAW;AAEf,gBAAQ,QAAQA,KAAI;AAAA,MACxB,OACK;AAED,gBAAQ,QAAQ;AAAA,MACpB;AACA;AAAA,IACJ,SACO,GAAG;AACN,cAAQ,OAAO,KAAK;AAAA,QAChB,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,OAAO,QAAQ;AAAA,QACf;AAAA,QACA,UAAU,CAAC,IAAI;AAAA,MACnB,CAAC;AAAA,IACL;AAAA,EACJ;AACJ,CAAC;AACM,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,MAAI,YAAY,IAAI,UAAkB,MAAM;AAC5C,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,kBAAgC,gBAAK,aAAa,mBAAmB,CAAC,MAAM,QAAQ;AAC7F,MAAI,YAAY,IAAI,UAAkB,SAAS,GAAG;AAClD,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,cAA4B,gBAAK,aAAa,eAAe,CAAC,MAAM,QAAQ;AACrF,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,cAA4B,gBAAK,aAAa,eAAe,CAAC,MAAM,QAAQ;AACrF,MAAI,YAAY,IAAI,UAAkBC,MAAK,GAAG;AAC9C,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,kBAAgC,gBAAK,aAAa,mBAAmB,CAAC,MAAM,QAAQ;AAC7F,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AAC/B,OAAK,KAAK,SAAS,KAAK,CAACC,UAAS;AAC9B,UAAM,MAAMA,MAAK,KAAK;AACtB,QAAI,SAAS;AAAA,EACjB,CAAC;AACL,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AAC/B,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,UAAM,MAAMA,MAAK,KAAK;AACtB,QAAI,SAAS;AAAA,EACjB,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI;AAEA,UAAI,IAAI,WAAW,QAAQ,KAAK,GAAG;AAAA,IAEvC,QACM;AACF,cAAQ,OAAO,KAAK;AAAA,QAChB,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,OAAO,QAAQ;AAAA,QACf;AAAA,QACA,UAAU,CAAC,IAAI;AAAA,MACnB,CAAC;AAAA,IACL;AAAA,EACJ;AACJ,CAAC;AACM,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AACM,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AAC/B,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,UAAM,QAAQ,QAAQ,MAAM,MAAM,GAAG;AACrC,QAAI;AACA,UAAI,MAAM,WAAW;AACjB,cAAM,IAAI,MAAM;AACpB,YAAM,CAAC,SAAS,MAAM,IAAI;AAC1B,UAAI,CAAC;AACD,cAAM,IAAI,MAAM;AACpB,YAAM,YAAY,OAAO,MAAM;AAC/B,UAAI,GAAG,SAAS,OAAO;AACnB,cAAM,IAAI,MAAM;AACpB,UAAI,YAAY,KAAK,YAAY;AAC7B,cAAM,IAAI,MAAM;AAEpB,UAAI,IAAI,WAAW,OAAO,GAAG;AAAA,IACjC,QACM;AACF,cAAQ,OAAO,KAAK;AAAA,QAChB,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,OAAO,QAAQ;AAAA,QACf;AAAA,QACA,UAAU,CAAC,IAAI;AAAA,MACnB,CAAC;AAAA,IACL;AAAA,EACJ;AACJ,CAAC;AAEM,SAAS,cAAc,MAAM;AAChC,MAAI,SAAS;AACT,WAAO;AACX,MAAI,KAAK,SAAS,MAAM;AACpB,WAAO;AACX,MAAI;AAEA,SAAK,IAAI;AACT,WAAO;AAAA,EACX,QACM;AACF,WAAO;AAAA,EACX;AACJ;AAbgB;AAcT,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AAC/B,OAAK,KAAK,SAAS,KAAK,CAACA,UAAS;AAC9B,IAAAA,MAAK,KAAK,IAAI,kBAAkB;AAAA,EACpC,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI,cAAc,QAAQ,KAAK;AAC3B;AACJ,YAAQ,OAAO,KAAK;AAAA,MAChB,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,OAAO,QAAQ;AAAA,MACf;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AAEM,SAAS,iBAAiB,MAAM;AACnC,MAAI,CAAS,UAAU,KAAK,IAAI;AAC5B,WAAO;AACX,QAAMC,UAAS,KAAK,QAAQ,SAAS,CAAC,MAAO,MAAM,MAAM,MAAM,GAAI;AACnE,QAAM,SAASA,QAAO,OAAO,KAAK,KAAKA,QAAO,SAAS,CAAC,IAAI,GAAG,GAAG;AAClE,SAAO,cAAc,MAAM;AAC/B;AANgB;AAOT,IAAM,gBAA8B,gBAAK,aAAa,iBAAiB,CAAC,MAAM,QAAQ;AACzF,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AAC/B,OAAK,KAAK,SAAS,KAAK,CAACD,UAAS;AAC9B,IAAAA,MAAK,KAAK,IAAI,kBAAkB;AAAA,EACpC,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI,iBAAiB,QAAQ,KAAK;AAC9B;AACJ,YAAQ,OAAO,KAAK;AAAA,MAChB,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,OAAO,QAAQ;AAAA,MACf;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,MAAI,YAAY,IAAI,UAAkB;AACtC,mBAAiB,KAAK,MAAM,GAAG;AACnC,CAAC;AAEM,SAAS,WAAW,OAAO,YAAY,MAAM;AAChD,MAAI;AACA,UAAM,cAAc,MAAM,MAAM,GAAG;AACnC,QAAI,YAAY,WAAW;AACvB,aAAO;AACX,UAAM,CAAC,MAAM,IAAI;AACjB,QAAI,CAAC;AACD,aAAO;AAEX,UAAM,eAAe,KAAK,MAAM,KAAK,MAAM,CAAC;AAC5C,QAAI,SAAS,gBAAgB,cAAc,QAAQ;AAC/C,aAAO;AACX,QAAI,CAAC,aAAa;AACd,aAAO;AACX,QAAI,cAAc,EAAE,SAAS,iBAAiB,aAAa,QAAQ;AAC/D,aAAO;AACX,WAAO;AAAA,EACX,QACM;AACF,WAAO;AAAA,EACX;AACJ;AArBgB;AAsBT,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,mBAAiB,KAAK,MAAM,GAAG;AAC/B,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI,WAAW,QAAQ,OAAO,IAAI,GAAG;AACjC;AACJ,YAAQ,OAAO,KAAK;AAAA,MAChB,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,OAAO,QAAQ;AAAA,MACf;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,yBAAuC,gBAAK,aAAa,0BAA0B,CAAC,MAAM,QAAQ;AAC3G,mBAAiB,KAAK,MAAM,GAAG;AAC/B,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,QAAI,IAAI,GAAG,QAAQ,KAAK;AACpB;AACJ,YAAQ,OAAO,KAAK;AAAA,MAChB,MAAM;AAAA,MACN,QAAQ,IAAI;AAAA,MACZ,OAAO,QAAQ;AAAA,MACf;AAAA,MACA,UAAU,CAAC,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,UAAU,KAAK,KAAK,IAAI,WAAmB;AACrD,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,QAAI,IAAI;AACJ,UAAI;AACA,gBAAQ,QAAQ,OAAO,QAAQ,KAAK;AAAA,MACxC,SACO,GAAG;AAAA,MAAE;AAChB,UAAM,QAAQ,QAAQ;AACtB,QAAI,OAAO,UAAU,YAAY,CAAC,OAAO,MAAM,KAAK,KAAK,OAAO,SAAS,KAAK,GAAG;AAC7E,aAAO;AAAA,IACX;AACA,UAAM,WAAW,OAAO,UAAU,WAC5B,OAAO,MAAM,KAAK,IACd,QACA,CAAC,OAAO,SAAS,KAAK,IAClB,aACA,SACR;AACN,YAAQ,OAAO,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,MAAM;AAAA,MACN;AAAA,MACA;AAAA,MACA,GAAI,WAAW,EAAE,SAAS,IAAI,CAAC;AAAA,IACnC,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,mBAAiC,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACzF,EAAO,sBAAsB,KAAK,MAAM,GAAG;AAC3C,aAAW,KAAK,MAAM,GAAG;AAC7B,CAAC;AACM,IAAM,cAA4B,gBAAK,aAAa,eAAe,CAAC,MAAM,QAAQ;AACrF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,UAAkB;AAC5B,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,QAAI,IAAI;AACJ,UAAI;AACA,gBAAQ,QAAQ,QAAQ,QAAQ,KAAK;AAAA,MACzC,SACO,GAAG;AAAA,MAAE;AAChB,UAAM,QAAQ,QAAQ;AACtB,QAAI,OAAO,UAAU;AACjB,aAAO;AACX,YAAQ,OAAO,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,UAAkBE;AAC5B,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,QAAI,IAAI;AACJ,UAAI;AACA,gBAAQ,QAAQ,OAAO,QAAQ,KAAK;AAAA,MACxC,SACO,GAAG;AAAA,MAAE;AAChB,QAAI,OAAO,QAAQ,UAAU;AACzB,aAAO;AACX,YAAQ,OAAO,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,MAAM;AAAA,MACN,OAAO,QAAQ;AAAA,MACf;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,mBAAiC,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACzF,EAAO,sBAAsB,KAAK,MAAM,GAAG;AAC3C,aAAW,KAAK,MAAM,GAAG;AAC7B,CAAC;AACM,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,UAAM,QAAQ,QAAQ;AACtB,QAAI,OAAO,UAAU;AACjB,aAAO;AACX,YAAQ,OAAO,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,gBAA8B,gBAAK,aAAa,iBAAiB,CAAC,MAAM,QAAQ;AACzF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,UAAkB;AAC5B,OAAK,KAAK,SAAS,oBAAI,IAAI,CAAC,MAAS,CAAC;AACtC,OAAK,KAAK,QAAQ;AAClB,OAAK,KAAK,SAAS;AACnB,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,UAAM,QAAQ,QAAQ;AACtB,QAAI,OAAO,UAAU;AACjB,aAAO;AACX,YAAQ,OAAO,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,UAAkB;AAC5B,OAAK,KAAK,SAAS,oBAAI,IAAI,CAAC,IAAI,CAAC;AACjC,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,UAAM,QAAQ,QAAQ;AACtB,QAAI,UAAU;AACV,aAAO;AACX,YAAQ,OAAO,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,YAAY;AACnC,CAAC;AACM,IAAM,cAA4B,gBAAK,aAAa,eAAe,CAAC,MAAM,QAAQ;AACrF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,YAAY;AACnC,CAAC;AACM,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,YAAQ,OAAO,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,MAAM;AAAA,MACN,OAAO,QAAQ;AAAA,MACf;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,UAAM,QAAQ,QAAQ;AACtB,QAAI,OAAO,UAAU;AACjB,aAAO;AACX,YAAQ,OAAO,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,QAAI,IAAI,QAAQ;AACZ,UAAI;AACA,gBAAQ,QAAQ,IAAI,KAAK,QAAQ,KAAK;AAAA,MAC1C,SACO,MAAM;AAAA,MAAE;AAAA,IACnB;AACA,UAAM,QAAQ,QAAQ;AACtB,UAAM,SAAS,iBAAiB;AAChC,UAAM,cAAc,UAAU,CAAC,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC3D,QAAI;AACA,aAAO;AACX,YAAQ,OAAO,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,MAAM;AAAA,MACN;AAAA,MACA,GAAI,SAAS,EAAE,UAAU,eAAe,IAAI,CAAC;AAAA,MAC7C;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACD,SAAS,kBAAkB,QAAQ,OAAO,OAAO;AAC7C,MAAI,OAAO,OAAO,QAAQ;AACtB,UAAM,OAAO,KAAK,GAAQ,aAAa,OAAO,OAAO,MAAM,CAAC;AAAA,EAChE;AACA,QAAM,MAAM,KAAK,IAAI,OAAO;AAChC;AALS;AAMF,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,UAAM,QAAQ,QAAQ;AACtB,QAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACvB,cAAQ,OAAO,KAAK;AAAA,QAChB,UAAU;AAAA,QACV,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX;AACA,YAAQ,QAAQ,MAAM,MAAM,MAAM;AAClC,UAAM,QAAQ,CAAC;AACf,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,YAAM,OAAO,MAAM,CAAC;AACpB,YAAM,SAAS,IAAI,QAAQ,KAAK,IAAI;AAAA,QAChC,OAAO;AAAA,QACP,QAAQ,CAAC;AAAA,MACb,GAAG,GAAG;AACN,UAAI,kBAAkB,SAAS;AAC3B,cAAM,KAAK,OAAO,KAAK,CAACN,YAAW,kBAAkBA,SAAQ,SAAS,CAAC,CAAC,CAAC;AAAA,MAC7E,OACK;AACD,0BAAkB,QAAQ,SAAS,CAAC;AAAA,MACxC;AAAA,IACJ;AACA,QAAI,MAAM,QAAQ;AACd,aAAO,QAAQ,IAAI,KAAK,EAAE,KAAK,MAAM,OAAO;AAAA,IAChD;AACA,WAAO;AAAA,EACX;AACJ,CAAC;AACD,SAAS,qBAAqB,QAAQ,OAAO,KAAK,OAAO;AACrD,MAAI,OAAO,OAAO,QAAQ;AACtB,UAAM,OAAO,KAAK,GAAQ,aAAa,KAAK,OAAO,MAAM,CAAC;AAAA,EAC9D;AACA,MAAI,OAAO,UAAU,QAAW;AAC5B,QAAI,OAAO,OAAO;AACd,YAAM,MAAM,GAAG,IAAI;AAAA,IACvB;AAAA,EACJ,OACK;AACD,UAAM,MAAM,GAAG,IAAI,OAAO;AAAA,EAC9B;AACJ;AAZS;AAaT,SAAS,aAAa,KAAK;AACvB,QAAM,OAAO,OAAO,KAAK,IAAI,KAAK;AAClC,aAAW,KAAK,MAAM;AAClB,QAAI,CAAC,IAAI,QAAQ,CAAC,GAAG,MAAM,QAAQ,IAAI,UAAU,GAAG;AAChD,YAAM,IAAI,MAAM,2BAA2B,CAAC,0BAA0B;AAAA,IAC1E;AAAA,EACJ;AACA,QAAM,QAAa,aAAa,IAAI,KAAK;AACzC,SAAO;AAAA,IACH,GAAG;AAAA,IACH;AAAA,IACA,QAAQ,IAAI,IAAI,IAAI;AAAA,IACpB,SAAS,KAAK;AAAA,IACd,cAAc,IAAI,IAAI,KAAK;AAAA,EAC/B;AACJ;AAfS;AAgBT,SAAS,eAAe,OAAO,OAAO,SAAS,KAAK,KAAK,MAAM;AAC3D,QAAM,eAAe,CAAC;AAEtB,QAAM,SAAS,IAAI;AACnB,QAAM,YAAY,IAAI,SAAS;AAC/B,QAAM,IAAI,UAAU,IAAI;AACxB,aAAW,OAAO,OAAO,KAAK,KAAK,GAAG;AAClC,QAAI,OAAO,IAAI,GAAG;AACd;AACJ,QAAI,MAAM,SAAS;AACf,mBAAa,KAAK,GAAG;AACrB;AAAA,IACJ;AACA,UAAM,IAAI,UAAU,IAAI,EAAE,OAAO,MAAM,GAAG,GAAG,QAAQ,CAAC,EAAE,GAAG,GAAG;AAC9D,QAAI,aAAa,SAAS;AACtB,YAAM,KAAK,EAAE,KAAK,CAACO,OAAM,qBAAqBA,IAAG,SAAS,KAAK,KAAK,CAAC,CAAC;AAAA,IAC1E,OACK;AACD,2BAAqB,GAAG,SAAS,KAAK,KAAK;AAAA,IAC/C;AAAA,EACJ;AACA,MAAI,aAAa,QAAQ;AACrB,YAAQ,OAAO,KAAK;AAAA,MAChB,MAAM;AAAA,MACN,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AACA,MAAI,CAAC,MAAM;AACP,WAAO;AACX,SAAO,QAAQ,IAAI,KAAK,EAAE,KAAK,MAAM;AACjC,WAAO;AAAA,EACX,CAAC;AACL;AAlCS;AAmCF,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AAEnF,WAAS,KAAK,MAAM,GAAG;AAEvB,QAAM,OAAO,OAAO,yBAAyB,KAAK,OAAO;AACzD,MAAI,CAAC,MAAM,KAAK;AACZ,UAAM,KAAK,IAAI;AACf,WAAO,eAAe,KAAK,SAAS;AAAA,MAChC,KAAK,6BAAM;AACP,cAAM,QAAQ,EAAE,GAAG,GAAG;AACtB,eAAO,eAAe,KAAK,SAAS;AAAA,UAChC,OAAO;AAAA,QACX,CAAC;AACD,eAAO;AAAA,MACX,GANK;AAAA,IAOT,CAAC;AAAA,EACL;AACA,QAAM,cAAmB,OAAO,MAAM,aAAa,GAAG,CAAC;AACvD,EAAK,WAAW,KAAK,MAAM,cAAc,MAAM;AAC3C,UAAM,QAAQ,IAAI;AAClB,UAAM,aAAa,CAAC;AACpB,eAAW,OAAO,OAAO;AACrB,YAAM,QAAQ,MAAM,GAAG,EAAE;AACzB,UAAI,MAAM,QAAQ;AACd,mBAAW,GAAG,MAAM,WAAW,GAAG,IAAI,oBAAI,IAAI;AAC9C,mBAAW,KAAK,MAAM;AAClB,qBAAW,GAAG,EAAE,IAAI,CAAC;AAAA,MAC7B;AAAA,IACJ;AACA,WAAO;AAAA,EACX,CAAC;AACD,QAAMC,YAAgB;AACtB,QAAM,WAAW,IAAI;AACrB,MAAI;AACJ,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,cAAU,QAAQ,YAAY;AAC9B,UAAM,QAAQ,QAAQ;AACtB,QAAI,CAACA,UAAS,KAAK,GAAG;AAClB,cAAQ,OAAO,KAAK;AAAA,QAChB,UAAU;AAAA,QACV,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX;AACA,YAAQ,QAAQ,CAAC;AACjB,UAAM,QAAQ,CAAC;AACf,UAAM,QAAQ,MAAM;AACpB,eAAW,OAAO,MAAM,MAAM;AAC1B,YAAM,KAAK,MAAM,GAAG;AACpB,YAAM,IAAI,GAAG,KAAK,IAAI,EAAE,OAAO,MAAM,GAAG,GAAG,QAAQ,CAAC,EAAE,GAAG,GAAG;AAC5D,UAAI,aAAa,SAAS;AACtB,cAAM,KAAK,EAAE,KAAK,CAACD,OAAM,qBAAqBA,IAAG,SAAS,KAAK,KAAK,CAAC,CAAC;AAAA,MAC1E,OACK;AACD,6BAAqB,GAAG,SAAS,KAAK,KAAK;AAAA,MAC/C;AAAA,IACJ;AACA,QAAI,CAAC,UAAU;AACX,aAAO,MAAM,SAAS,QAAQ,IAAI,KAAK,EAAE,KAAK,MAAM,OAAO,IAAI;AAAA,IACnE;AACA,WAAO,eAAe,OAAO,OAAO,SAAS,KAAK,YAAY,OAAO,IAAI;AAAA,EAC7E;AACJ,CAAC;AACM,IAAM,gBAA8B,gBAAK,aAAa,iBAAiB,CAAC,MAAM,QAAQ;AAEzF,aAAW,KAAK,MAAM,GAAG;AACzB,QAAM,aAAa,KAAK,KAAK;AAC7B,QAAM,cAAmB,OAAO,MAAM,aAAa,GAAG,CAAC;AACvD,QAAM,mBAAmB,wBAAC,UAAU;AAChC,UAAM,MAAM,IAAI,IAAI,CAAC,SAAS,WAAW,KAAK,CAAC;AAC/C,UAAM,aAAa,YAAY;AAC/B,UAAM,WAAW,wBAAC,QAAQ;AACtB,YAAM,IAAS,IAAI,GAAG;AACtB,aAAO,SAAS,CAAC,6BAA6B,CAAC;AAAA,IACnD,GAHiB;AAIjB,QAAI,MAAM,8BAA8B;AACxC,UAAM,MAAM,uBAAO,OAAO,IAAI;AAC9B,QAAI,UAAU;AACd,eAAW,OAAO,WAAW,MAAM;AAC/B,UAAI,GAAG,IAAI,OAAO,SAAS;AAAA,IAC/B;AAEA,QAAI,MAAM,uBAAuB;AACjC,eAAW,OAAO,WAAW,MAAM;AAC/B,YAAM,KAAK,IAAI,GAAG;AAClB,YAAM,IAAS,IAAI,GAAG;AACtB,UAAI,MAAM,SAAS,EAAE,MAAM,SAAS,GAAG,CAAC,GAAG;AAC3C,UAAI,MAAM;AAAA,cACR,EAAE;AAAA,mDACmC,EAAE;AAAA;AAAA,gCAErB,CAAC,qBAAqB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,cAKzC,EAAE;AAAA,gBACA,CAAC;AAAA,wBACO,CAAC;AAAA;AAAA;AAAA,sBAGH,CAAC,OAAO,EAAE;AAAA;AAAA;AAAA,OAGzB;AAAA,IACC;AACA,QAAI,MAAM,4BAA4B;AACtC,QAAI,MAAM,iBAAiB;AAC3B,UAAM,KAAK,IAAI,QAAQ;AACvB,WAAO,CAAC,SAAS,QAAQ,GAAG,OAAO,SAAS,GAAG;AAAA,EACnD,GA1CyB;AA2CzB,MAAI;AACJ,QAAMC,YAAgB;AACtB,QAAM,MAAM,CAAM,aAAa;AAC/B,QAAMC,cAAkB;AACxB,QAAM,cAAc,OAAOA,YAAW;AACtC,QAAM,WAAW,IAAI;AACrB,MAAI;AACJ,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,cAAU,QAAQ,YAAY;AAC9B,UAAM,QAAQ,QAAQ;AACtB,QAAI,CAACD,UAAS,KAAK,GAAG;AAClB,cAAQ,OAAO,KAAK;AAAA,QAChB,UAAU;AAAA,QACV,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX;AACA,QAAI,OAAO,eAAe,KAAK,UAAU,SAAS,IAAI,YAAY,MAAM;AAEpE,UAAI,CAAC;AACD,mBAAW,iBAAiB,IAAI,KAAK;AACzC,gBAAU,SAAS,SAAS,GAAG;AAC/B,UAAI,CAAC;AACD,eAAO;AACX,aAAO,eAAe,CAAC,GAAG,OAAO,SAAS,KAAK,OAAO,IAAI;AAAA,IAC9D;AACA,WAAO,WAAW,SAAS,GAAG;AAAA,EAClC;AACJ,CAAC;AACD,SAAS,mBAAmB,SAAS,OAAO,MAAM,KAAK;AACnD,aAAW,UAAU,SAAS;AAC1B,QAAI,OAAO,OAAO,WAAW,GAAG;AAC5B,YAAM,QAAQ,OAAO;AACrB,aAAO;AAAA,IACX;AAAA,EACJ;AACA,QAAM,aAAa,QAAQ,OAAO,CAAC,MAAM,CAAM,QAAQ,CAAC,CAAC;AACzD,MAAI,WAAW,WAAW,GAAG;AACzB,UAAM,QAAQ,WAAW,CAAC,EAAE;AAC5B,WAAO,WAAW,CAAC;AAAA,EACvB;AACA,QAAM,OAAO,KAAK;AAAA,IACd,MAAM;AAAA,IACN,OAAO,MAAM;AAAA,IACb;AAAA,IACA,QAAQ,QAAQ,IAAI,CAAC,WAAW,OAAO,OAAO,IAAI,CAAC,QAAa,cAAc,KAAK,KAAUE,QAAO,CAAC,CAAC,CAAC;AAAA,EAC3G,CAAC;AACD,SAAO;AACX;AAnBS;AAoBF,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,WAAS,KAAK,MAAM,GAAG;AACvB,EAAK,WAAW,KAAK,MAAM,SAAS,MAAM,IAAI,QAAQ,KAAK,CAAC,MAAM,EAAE,KAAK,UAAU,UAAU,IAAI,aAAa,MAAS;AACvH,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM,IAAI,QAAQ,KAAK,CAAC,MAAM,EAAE,KAAK,WAAW,UAAU,IAAI,aAAa,MAAS;AACzH,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM;AACvC,QAAI,IAAI,QAAQ,MAAM,CAAC,MAAM,EAAE,KAAK,MAAM,GAAG;AACzC,aAAO,IAAI,IAAI,IAAI,QAAQ,QAAQ,CAAC,WAAW,MAAM,KAAK,OAAO,KAAK,MAAM,CAAC,CAAC;AAAA,IAClF;AACA,WAAO;AAAA,EACX,CAAC;AACD,EAAK,WAAW,KAAK,MAAM,WAAW,MAAM;AACxC,QAAI,IAAI,QAAQ,MAAM,CAAC,MAAM,EAAE,KAAK,OAAO,GAAG;AAC1C,YAAM,WAAW,IAAI,QAAQ,IAAI,CAAC,MAAM,EAAE,KAAK,OAAO;AACtD,aAAO,IAAI,OAAO,KAAK,SAAS,IAAI,CAAC,MAAW,WAAW,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG,CAAC,IAAI;AAAA,IACvF;AACA,WAAO;AAAA,EACX,CAAC;AACD,QAAM,SAAS,IAAI,QAAQ,WAAW;AACtC,QAAM,QAAQ,IAAI,QAAQ,CAAC,EAAE,KAAK;AAClC,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,QAAI,QAAQ;AACR,aAAO,MAAM,SAAS,GAAG;AAAA,IAC7B;AACA,QAAI,QAAQ;AACZ,UAAM,UAAU,CAAC;AACjB,eAAW,UAAU,IAAI,SAAS;AAC9B,YAAM,SAAS,OAAO,KAAK,IAAI;AAAA,QAC3B,OAAO,QAAQ;AAAA,QACf,QAAQ,CAAC;AAAA,MACb,GAAG,GAAG;AACN,UAAI,kBAAkB,SAAS;AAC3B,gBAAQ,KAAK,MAAM;AACnB,gBAAQ;AAAA,MACZ,OACK;AACD,YAAI,OAAO,OAAO,WAAW;AACzB,iBAAO;AACX,gBAAQ,KAAK,MAAM;AAAA,MACvB;AAAA,IACJ;AACA,QAAI,CAAC;AACD,aAAO,mBAAmB,SAAS,SAAS,MAAM,GAAG;AACzD,WAAO,QAAQ,IAAI,OAAO,EAAE,KAAK,CAACC,aAAY;AAC1C,aAAO,mBAAmBA,UAAS,SAAS,MAAM,GAAG;AAAA,IACzD,CAAC;AAAA,EACL;AACJ,CAAC;AACM,IAAM,yBAEb,gBAAK,aAAa,0BAA0B,CAAC,MAAM,QAAQ;AACvD,YAAU,KAAK,MAAM,GAAG;AACxB,QAAM,SAAS,KAAK,KAAK;AACzB,EAAK,WAAW,KAAK,MAAM,cAAc,MAAM;AAC3C,UAAM,aAAa,CAAC;AACpB,eAAW,UAAU,IAAI,SAAS;AAC9B,YAAM,KAAK,OAAO,KAAK;AACvB,UAAI,CAAC,MAAM,OAAO,KAAK,EAAE,EAAE,WAAW;AAClC,cAAM,IAAI,MAAM,gDAAgD,IAAI,QAAQ,QAAQ,MAAM,CAAC,GAAG;AAClG,iBAAW,CAAC,GAAG,CAAC,KAAK,OAAO,QAAQ,EAAE,GAAG;AACrC,YAAI,CAAC,WAAW,CAAC;AACb,qBAAW,CAAC,IAAI,oBAAI,IAAI;AAC5B,mBAAW,OAAO,GAAG;AACjB,qBAAW,CAAC,EAAE,IAAI,GAAG;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,CAAC;AACD,QAAM,OAAY,OAAO,MAAM;AAC3B,UAAM,OAAO,IAAI;AACjB,UAAMC,OAAM,oBAAI,IAAI;AACpB,eAAW,KAAK,MAAM;AAClB,YAAM,SAAS,EAAE,KAAK,aAAa,IAAI,aAAa;AACpD,UAAI,CAAC,UAAU,OAAO,SAAS;AAC3B,cAAM,IAAI,MAAM,gDAAgD,IAAI,QAAQ,QAAQ,CAAC,CAAC,GAAG;AAC7F,iBAAW,KAAK,QAAQ;AACpB,YAAIA,KAAI,IAAI,CAAC,GAAG;AACZ,gBAAM,IAAI,MAAM,kCAAkC,OAAO,CAAC,CAAC,GAAG;AAAA,QAClE;AACA,QAAAA,KAAI,IAAI,GAAG,CAAC;AAAA,MAChB;AAAA,IACJ;AACA,WAAOA;AAAA,EACX,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,UAAM,QAAQ,QAAQ;AACtB,QAAI,CAAM,SAAS,KAAK,GAAG;AACvB,cAAQ,OAAO,KAAK;AAAA,QAChB,MAAM;AAAA,QACN,UAAU;AAAA,QACV;AAAA,QACA;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX;AACA,UAAM,MAAM,KAAK,MAAM,IAAI,QAAQ,IAAI,aAAa,CAAC;AACrD,QAAI,KAAK;AACL,aAAO,IAAI,KAAK,IAAI,SAAS,GAAG;AAAA,IACpC;AACA,QAAI,IAAI,eAAe;AACnB,aAAO,OAAO,SAAS,GAAG;AAAA,IAC9B;AAEA,YAAQ,OAAO,KAAK;AAAA,MAChB,MAAM;AAAA,MACN,QAAQ,CAAC;AAAA,MACT,MAAM;AAAA,MACN,eAAe,IAAI;AAAA,MACnB;AAAA,MACA,MAAM,CAAC,IAAI,aAAa;AAAA,MACxB;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,mBAAiC,gBAAK,aAAa,oBAAoB,CAAC,MAAM,QAAQ;AAC/F,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,UAAM,QAAQ,QAAQ;AACtB,UAAM,OAAO,IAAI,KAAK,KAAK,IAAI,EAAE,OAAO,OAAO,QAAQ,CAAC,EAAE,GAAG,GAAG;AAChE,UAAM,QAAQ,IAAI,MAAM,KAAK,IAAI,EAAE,OAAO,OAAO,QAAQ,CAAC,EAAE,GAAG,GAAG;AAClE,UAAM,QAAQ,gBAAgB,WAAW,iBAAiB;AAC1D,QAAI,OAAO;AACP,aAAO,QAAQ,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,KAAK,CAAC,CAACC,OAAMC,MAAK,MAAM;AACtD,eAAO,0BAA0B,SAASD,OAAMC,MAAK;AAAA,MACzD,CAAC;AAAA,IACL;AACA,WAAO,0BAA0B,SAAS,MAAM,KAAK;AAAA,EACzD;AACJ,CAAC;AACD,SAAS,YAAY,GAAG,GAAG;AAGvB,MAAI,MAAM,GAAG;AACT,WAAO,EAAE,OAAO,MAAM,MAAM,EAAE;AAAA,EAClC;AACA,MAAI,aAAa,QAAQ,aAAa,QAAQ,CAAC,MAAM,CAAC,GAAG;AACrD,WAAO,EAAE,OAAO,MAAM,MAAM,EAAE;AAAA,EAClC;AACA,MAAS,cAAc,CAAC,KAAU,cAAc,CAAC,GAAG;AAChD,UAAM,QAAQ,OAAO,KAAK,CAAC;AAC3B,UAAM,aAAa,OAAO,KAAK,CAAC,EAAE,OAAO,CAAC,QAAQ,MAAM,QAAQ,GAAG,MAAM,EAAE;AAC3E,UAAM,SAAS,EAAE,GAAG,GAAG,GAAG,EAAE;AAC5B,eAAW,OAAO,YAAY;AAC1B,YAAM,cAAc,YAAY,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC;AAC9C,UAAI,CAAC,YAAY,OAAO;AACpB,eAAO;AAAA,UACH,OAAO;AAAA,UACP,gBAAgB,CAAC,KAAK,GAAG,YAAY,cAAc;AAAA,QACvD;AAAA,MACJ;AACA,aAAO,GAAG,IAAI,YAAY;AAAA,IAC9B;AACA,WAAO,EAAE,OAAO,MAAM,MAAM,OAAO;AAAA,EACvC;AACA,MAAI,MAAM,QAAQ,CAAC,KAAK,MAAM,QAAQ,CAAC,GAAG;AACtC,QAAI,EAAE,WAAW,EAAE,QAAQ;AACvB,aAAO,EAAE,OAAO,OAAO,gBAAgB,CAAC,EAAE;AAAA,IAC9C;AACA,UAAM,WAAW,CAAC;AAClB,aAAS,QAAQ,GAAG,QAAQ,EAAE,QAAQ,SAAS;AAC3C,YAAM,QAAQ,EAAE,KAAK;AACrB,YAAM,QAAQ,EAAE,KAAK;AACrB,YAAM,cAAc,YAAY,OAAO,KAAK;AAC5C,UAAI,CAAC,YAAY,OAAO;AACpB,eAAO;AAAA,UACH,OAAO;AAAA,UACP,gBAAgB,CAAC,OAAO,GAAG,YAAY,cAAc;AAAA,QACzD;AAAA,MACJ;AACA,eAAS,KAAK,YAAY,IAAI;AAAA,IAClC;AACA,WAAO,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EACzC;AACA,SAAO,EAAE,OAAO,OAAO,gBAAgB,CAAC,EAAE;AAC9C;AA7CS;AA8CT,SAAS,0BAA0B,QAAQ,MAAM,OAAO;AACpD,MAAI,KAAK,OAAO,QAAQ;AACpB,WAAO,OAAO,KAAK,GAAG,KAAK,MAAM;AAAA,EACrC;AACA,MAAI,MAAM,OAAO,QAAQ;AACrB,WAAO,OAAO,KAAK,GAAG,MAAM,MAAM;AAAA,EACtC;AACA,MAAS,QAAQ,MAAM;AACnB,WAAO;AACX,QAAM,SAAS,YAAY,KAAK,OAAO,MAAM,KAAK;AAClD,MAAI,CAAC,OAAO,OAAO;AACf,UAAM,IAAI,MAAM,wCAA6C,KAAK,UAAU,OAAO,cAAc,CAAC,EAAE;AAAA,EACxG;AACA,SAAO,QAAQ,OAAO;AACtB,SAAO;AACX;AAfS;AAgBF,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,WAAS,KAAK,MAAM,GAAG;AACvB,QAAM,QAAQ,IAAI;AAClB,QAAM,WAAW,MAAM,SAAS,CAAC,GAAG,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAS,KAAK,KAAK,UAAU,UAAU;AACvG,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,UAAM,QAAQ,QAAQ;AACtB,QAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACvB,cAAQ,OAAO,KAAK;AAAA,QAChB;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV,MAAM;AAAA,MACV,CAAC;AACD,aAAO;AAAA,IACX;AACA,YAAQ,QAAQ,CAAC;AACjB,UAAM,QAAQ,CAAC;AACf,QAAI,CAAC,IAAI,MAAM;AACX,YAAM,SAAS,MAAM,SAAS,MAAM;AACpC,YAAM,WAAW,MAAM,SAAS,WAAW;AAC3C,UAAI,UAAU,UAAU;AACpB,gBAAQ,OAAO,KAAK;AAAA,UAChB,GAAI,SAAS,EAAE,MAAM,WAAW,SAAS,MAAM,OAAO,IAAI,EAAE,MAAM,aAAa,SAAS,MAAM,OAAO;AAAA,UACrG;AAAA,UACA;AAAA,UACA,QAAQ;AAAA,QACZ,CAAC;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AACA,QAAI,IAAI;AACR,eAAW,QAAQ,OAAO;AACtB;AACA,UAAI,KAAK,MAAM;AACX,YAAI,KAAK;AACL;AAAA;AACR,YAAM,SAAS,KAAK,KAAK,IAAI;AAAA,QACzB,OAAO,MAAM,CAAC;AAAA,QACd,QAAQ,CAAC;AAAA,MACb,GAAG,GAAG;AACN,UAAI,kBAAkB,SAAS;AAC3B,cAAM,KAAK,OAAO,KAAK,CAACd,YAAW,kBAAkBA,SAAQ,SAAS,CAAC,CAAC,CAAC;AAAA,MAC7E,OACK;AACD,0BAAkB,QAAQ,SAAS,CAAC;AAAA,MACxC;AAAA,IACJ;AACA,QAAI,IAAI,MAAM;AACV,YAAM,OAAO,MAAM,MAAM,MAAM,MAAM;AACrC,iBAAW,MAAM,MAAM;AACnB;AACA,cAAM,SAAS,IAAI,KAAK,KAAK,IAAI;AAAA,UAC7B,OAAO;AAAA,UACP,QAAQ,CAAC;AAAA,QACb,GAAG,GAAG;AACN,YAAI,kBAAkB,SAAS;AAC3B,gBAAM,KAAK,OAAO,KAAK,CAACA,YAAW,kBAAkBA,SAAQ,SAAS,CAAC,CAAC,CAAC;AAAA,QAC7E,OACK;AACD,4BAAkB,QAAQ,SAAS,CAAC;AAAA,QACxC;AAAA,MACJ;AAAA,IACJ;AACA,QAAI,MAAM;AACN,aAAO,QAAQ,IAAI,KAAK,EAAE,KAAK,MAAM,OAAO;AAChD,WAAO;AAAA,EACX;AACJ,CAAC;AACD,SAAS,kBAAkB,QAAQ,OAAO,OAAO;AAC7C,MAAI,OAAO,OAAO,QAAQ;AACtB,UAAM,OAAO,KAAK,GAAQ,aAAa,OAAO,OAAO,MAAM,CAAC;AAAA,EAChE;AACA,QAAM,MAAM,KAAK,IAAI,OAAO;AAChC;AALS;AAMF,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,UAAM,QAAQ,QAAQ;AACtB,QAAI,CAAM,cAAc,KAAK,GAAG;AAC5B,cAAQ,OAAO,KAAK;AAAA,QAChB,UAAU;AAAA,QACV,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX;AACA,UAAM,QAAQ,CAAC;AACf,QAAI,IAAI,QAAQ,KAAK,QAAQ;AACzB,YAAM,SAAS,IAAI,QAAQ,KAAK;AAChC,cAAQ,QAAQ,CAAC;AACjB,iBAAW,OAAO,QAAQ;AACtB,YAAI,OAAO,QAAQ,YAAY,OAAO,QAAQ,YAAY,OAAO,QAAQ,UAAU;AAC/E,gBAAM,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE,OAAO,MAAM,GAAG,GAAG,QAAQ,CAAC,EAAE,GAAG,GAAG;AAC5E,cAAI,kBAAkB,SAAS;AAC3B,kBAAM,KAAK,OAAO,KAAK,CAACA,YAAW;AAC/B,kBAAIA,QAAO,OAAO,QAAQ;AACtB,wBAAQ,OAAO,KAAK,GAAQ,aAAa,KAAKA,QAAO,MAAM,CAAC;AAAA,cAChE;AACA,sBAAQ,MAAM,GAAG,IAAIA,QAAO;AAAA,YAChC,CAAC,CAAC;AAAA,UACN,OACK;AACD,gBAAI,OAAO,OAAO,QAAQ;AACtB,sBAAQ,OAAO,KAAK,GAAQ,aAAa,KAAK,OAAO,MAAM,CAAC;AAAA,YAChE;AACA,oBAAQ,MAAM,GAAG,IAAI,OAAO;AAAA,UAChC;AAAA,QACJ;AAAA,MACJ;AACA,UAAI;AACJ,iBAAW,OAAO,OAAO;AACrB,YAAI,CAAC,OAAO,IAAI,GAAG,GAAG;AAClB,yBAAe,gBAAgB,CAAC;AAChC,uBAAa,KAAK,GAAG;AAAA,QACzB;AAAA,MACJ;AACA,UAAI,gBAAgB,aAAa,SAAS,GAAG;AACzC,gBAAQ,OAAO,KAAK;AAAA,UAChB,MAAM;AAAA,UACN;AAAA,UACA;AAAA,UACA,MAAM;AAAA,QACV,CAAC;AAAA,MACL;AAAA,IACJ,OACK;AACD,cAAQ,QAAQ,CAAC;AACjB,iBAAW,OAAO,QAAQ,QAAQ,KAAK,GAAG;AACtC,YAAI,QAAQ;AACR;AACJ,cAAM,YAAY,IAAI,QAAQ,KAAK,IAAI,EAAE,OAAO,KAAK,QAAQ,CAAC,EAAE,GAAG,GAAG;AACtE,YAAI,qBAAqB,SAAS;AAC9B,gBAAM,IAAI,MAAM,sDAAsD;AAAA,QAC1E;AACA,YAAI,UAAU,OAAO,QAAQ;AACzB,kBAAQ,OAAO,KAAK;AAAA,YAChB,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,QAAQ,UAAU,OAAO,IAAI,CAAC,QAAa,cAAc,KAAK,KAAUU,QAAO,CAAC,CAAC;AAAA,YACjF,OAAO;AAAA,YACP,MAAM,CAAC,GAAG;AAAA,YACV;AAAA,UACJ,CAAC;AACD,kBAAQ,MAAM,UAAU,KAAK,IAAI,UAAU;AAC3C;AAAA,QACJ;AACA,cAAM,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE,OAAO,MAAM,GAAG,GAAG,QAAQ,CAAC,EAAE,GAAG,GAAG;AAC5E,YAAI,kBAAkB,SAAS;AAC3B,gBAAM,KAAK,OAAO,KAAK,CAACV,YAAW;AAC/B,gBAAIA,QAAO,OAAO,QAAQ;AACtB,sBAAQ,OAAO,KAAK,GAAQ,aAAa,KAAKA,QAAO,MAAM,CAAC;AAAA,YAChE;AACA,oBAAQ,MAAM,UAAU,KAAK,IAAIA,QAAO;AAAA,UAC5C,CAAC,CAAC;AAAA,QACN,OACK;AACD,cAAI,OAAO,OAAO,QAAQ;AACtB,oBAAQ,OAAO,KAAK,GAAQ,aAAa,KAAK,OAAO,MAAM,CAAC;AAAA,UAChE;AACA,kBAAQ,MAAM,UAAU,KAAK,IAAI,OAAO;AAAA,QAC5C;AAAA,MACJ;AAAA,IACJ;AACA,QAAI,MAAM,QAAQ;AACd,aAAO,QAAQ,IAAI,KAAK,EAAE,KAAK,MAAM,OAAO;AAAA,IAChD;AACA,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,UAAM,QAAQ,QAAQ;AACtB,QAAI,EAAE,iBAAiB,MAAM;AACzB,cAAQ,OAAO,KAAK;AAAA,QAChB,UAAU;AAAA,QACV,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX;AACA,UAAM,QAAQ,CAAC;AACf,YAAQ,QAAQ,oBAAI,IAAI;AACxB,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO;AAC9B,YAAM,YAAY,IAAI,QAAQ,KAAK,IAAI,EAAE,OAAO,KAAK,QAAQ,CAAC,EAAE,GAAG,GAAG;AACtE,YAAM,cAAc,IAAI,UAAU,KAAK,IAAI,EAAE,OAAc,QAAQ,CAAC,EAAE,GAAG,GAAG;AAC5E,UAAI,qBAAqB,WAAW,uBAAuB,SAAS;AAChE,cAAM,KAAK,QAAQ,IAAI,CAAC,WAAW,WAAW,CAAC,EAAE,KAAK,CAAC,CAACe,YAAWC,YAAW,MAAM;AAChF,0BAAgBD,YAAWC,cAAa,SAAS,KAAK,OAAO,MAAM,GAAG;AAAA,QAC1E,CAAC,CAAC;AAAA,MACN,OACK;AACD,wBAAgB,WAAW,aAAa,SAAS,KAAK,OAAO,MAAM,GAAG;AAAA,MAC1E;AAAA,IACJ;AACA,QAAI,MAAM;AACN,aAAO,QAAQ,IAAI,KAAK,EAAE,KAAK,MAAM,OAAO;AAChD,WAAO;AAAA,EACX;AACJ,CAAC;AACD,SAAS,gBAAgB,WAAW,aAAa,OAAO,KAAK,OAAO,MAAM,KAAK;AAC3E,MAAI,UAAU,OAAO,QAAQ;AACzB,QAAS,iBAAiB,IAAI,OAAO,GAAG,GAAG;AACvC,YAAM,OAAO,KAAK,GAAQ,aAAa,KAAK,UAAU,MAAM,CAAC;AAAA,IACjE,OACK;AACD,YAAM,OAAO,KAAK;AAAA,QACd,MAAM;AAAA,QACN,QAAQ;AAAA,QACR;AAAA,QACA;AAAA,QACA,QAAQ,UAAU,OAAO,IAAI,CAAC,QAAa,cAAc,KAAK,KAAUN,QAAO,CAAC,CAAC;AAAA,MACrF,CAAC;AAAA,IACL;AAAA,EACJ;AACA,MAAI,YAAY,OAAO,QAAQ;AAC3B,QAAS,iBAAiB,IAAI,OAAO,GAAG,GAAG;AACvC,YAAM,OAAO,KAAK,GAAQ,aAAa,KAAK,YAAY,MAAM,CAAC;AAAA,IACnE,OACK;AACD,YAAM,OAAO,KAAK;AAAA,QACd,QAAQ;AAAA,QACR,MAAM;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,QACA,QAAQ,YAAY,OAAO,IAAI,CAAC,QAAa,cAAc,KAAK,KAAUA,QAAO,CAAC,CAAC;AAAA,MACvF,CAAC;AAAA,IACL;AAAA,EACJ;AACA,QAAM,MAAM,IAAI,UAAU,OAAO,YAAY,KAAK;AACtD;AA/BS;AAgCF,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,UAAM,QAAQ,QAAQ;AACtB,QAAI,EAAE,iBAAiB,MAAM;AACzB,cAAQ,OAAO,KAAK;AAAA,QAChB;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV,MAAM;AAAA,MACV,CAAC;AACD,aAAO;AAAA,IACX;AACA,UAAM,QAAQ,CAAC;AACf,YAAQ,QAAQ,oBAAI,IAAI;AACxB,eAAW,QAAQ,OAAO;AACtB,YAAM,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE,OAAO,MAAM,QAAQ,CAAC,EAAE,GAAG,GAAG;AACtE,UAAI,kBAAkB,SAAS;AAC3B,cAAM,KAAK,OAAO,KAAK,CAACV,YAAW,gBAAgBA,SAAQ,OAAO,CAAC,CAAC;AAAA,MACxE;AAEI,wBAAgB,QAAQ,OAAO;AAAA,IACvC;AACA,QAAI,MAAM;AACN,aAAO,QAAQ,IAAI,KAAK,EAAE,KAAK,MAAM,OAAO;AAChD,WAAO;AAAA,EACX;AACJ,CAAC;AACD,SAAS,gBAAgB,QAAQ,OAAO;AACpC,MAAI,OAAO,OAAO,QAAQ;AACtB,UAAM,OAAO,KAAK,GAAG,OAAO,MAAM;AAAA,EACtC;AACA,QAAM,MAAM,IAAI,OAAO,KAAK;AAChC;AALS;AAMF,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,WAAS,KAAK,MAAM,GAAG;AACvB,QAAM,SAAc,cAAc,IAAI,OAAO;AAC7C,QAAM,YAAY,IAAI,IAAI,MAAM;AAChC,OAAK,KAAK,SAAS;AACnB,OAAK,KAAK,UAAU,IAAI,OAAO,KAAK,OAC/B,OAAO,CAAC,MAAW,iBAAiB,IAAI,OAAO,CAAC,CAAC,EACjD,IAAI,CAAC,MAAO,OAAO,MAAM,WAAgB,YAAY,CAAC,IAAI,EAAE,SAAS,CAAE,EACvE,KAAK,GAAG,CAAC,IAAI;AAClB,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,UAAM,QAAQ,QAAQ;AACtB,QAAI,UAAU,IAAI,KAAK,GAAG;AACtB,aAAO;AAAA,IACX;AACA,YAAQ,OAAO,KAAK;AAAA,MAChB,MAAM;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,cAA4B,gBAAK,aAAa,eAAe,CAAC,MAAM,QAAQ;AACrF,WAAS,KAAK,MAAM,GAAG;AACvB,MAAI,IAAI,OAAO,WAAW,GAAG;AACzB,UAAM,IAAI,MAAM,mDAAmD;AAAA,EACvE;AACA,OAAK,KAAK,SAAS,IAAI,IAAI,IAAI,MAAM;AACrC,OAAK,KAAK,UAAU,IAAI,OAAO,KAAK,IAAI,OACnC,IAAI,CAAC,MAAO,OAAO,MAAM,WAAgB,YAAY,CAAC,IAAI,IAAS,YAAY,EAAE,SAAS,CAAC,IAAI,OAAO,CAAC,CAAE,EACzG,KAAK,GAAG,CAAC,IAAI;AAClB,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,UAAM,QAAQ,QAAQ;AACtB,QAAI,KAAK,KAAK,OAAO,IAAI,KAAK,GAAG;AAC7B,aAAO;AAAA,IACX;AACA,YAAQ,OAAO,KAAK;AAAA,MAChB,MAAM;AAAA,MACN,QAAQ,IAAI;AAAA,MACZ;AAAA,MACA;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,UAAM,QAAQ,QAAQ;AAEtB,QAAI,iBAAiB;AACjB,aAAO;AACX,YAAQ,OAAO,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,gBAA8B,gBAAK,aAAa,iBAAiB,CAAC,MAAM,QAAQ;AACzF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,QAAI,IAAI,cAAc,YAAY;AAC9B,YAAM,IAAS,gBAAgB,KAAK,YAAY,IAAI;AAAA,IACxD;AACA,UAAM,OAAO,IAAI,UAAU,QAAQ,OAAO,OAAO;AACjD,QAAI,IAAI,OAAO;AACX,YAAM,SAAS,gBAAgB,UAAU,OAAO,QAAQ,QAAQ,IAAI;AACpE,aAAO,OAAO,KAAK,CAACiB,YAAW;AAC3B,gBAAQ,QAAQA;AAChB,eAAO;AAAA,MACX,CAAC;AAAA,IACL;AACA,QAAI,gBAAgB,SAAS;AACzB,YAAM,IAAS,eAAe;AAAA,IAClC;AACA,YAAQ,QAAQ;AAChB,WAAO;AAAA,EACX;AACJ,CAAC;AACD,SAAS,qBAAqB,QAAQ,OAAO;AACzC,MAAI,OAAO,OAAO,UAAU,UAAU,QAAW;AAC7C,WAAO,EAAE,QAAQ,CAAC,GAAG,OAAO,OAAU;AAAA,EAC1C;AACA,SAAO;AACX;AALS;AAMF,IAAM,eAA6B,gBAAK,aAAa,gBAAgB,CAAC,MAAM,QAAQ;AACvF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ;AAClB,OAAK,KAAK,SAAS;AACnB,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM;AACvC,WAAO,IAAI,UAAU,KAAK,SAAS,oBAAI,IAAI,CAAC,GAAG,IAAI,UAAU,KAAK,QAAQ,MAAS,CAAC,IAAI;AAAA,EAC5F,CAAC;AACD,EAAK,WAAW,KAAK,MAAM,WAAW,MAAM;AACxC,UAAM,UAAU,IAAI,UAAU,KAAK;AACnC,WAAO,UAAU,IAAI,OAAO,KAAU,WAAW,QAAQ,MAAM,CAAC,KAAK,IAAI;AAAA,EAC7E,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,QAAI,IAAI,UAAU,KAAK,UAAU,YAAY;AACzC,YAAM,SAAS,IAAI,UAAU,KAAK,IAAI,SAAS,GAAG;AAClD,UAAI,kBAAkB;AAClB,eAAO,OAAO,KAAK,CAAC,MAAM,qBAAqB,GAAG,QAAQ,KAAK,CAAC;AACpE,aAAO,qBAAqB,QAAQ,QAAQ,KAAK;AAAA,IACrD;AACA,QAAI,QAAQ,UAAU,QAAW;AAC7B,aAAO;AAAA,IACX;AACA,WAAO,IAAI,UAAU,KAAK,IAAI,SAAS,GAAG;AAAA,EAC9C;AACJ,CAAC;AACM,IAAM,eAA6B,gBAAK,aAAa,gBAAgB,CAAC,MAAM,QAAQ;AACvF,WAAS,KAAK,MAAM,GAAG;AACvB,EAAK,WAAW,KAAK,MAAM,SAAS,MAAM,IAAI,UAAU,KAAK,KAAK;AAClE,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM,IAAI,UAAU,KAAK,MAAM;AACpE,EAAK,WAAW,KAAK,MAAM,WAAW,MAAM;AACxC,UAAM,UAAU,IAAI,UAAU,KAAK;AACnC,WAAO,UAAU,IAAI,OAAO,KAAU,WAAW,QAAQ,MAAM,CAAC,SAAS,IAAI;AAAA,EACjF,CAAC;AACD,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM;AACvC,WAAO,IAAI,UAAU,KAAK,SAAS,oBAAI,IAAI,CAAC,GAAG,IAAI,UAAU,KAAK,QAAQ,IAAI,CAAC,IAAI;AAAA,EACvF,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAEhC,QAAI,QAAQ,UAAU;AAClB,aAAO;AACX,WAAO,IAAI,UAAU,KAAK,IAAI,SAAS,GAAG;AAAA,EAC9C;AACJ,CAAC;AACM,IAAM,cAA4B,gBAAK,aAAa,eAAe,CAAC,MAAM,QAAQ;AACrF,WAAS,KAAK,MAAM,GAAG;AAEvB,OAAK,KAAK,QAAQ;AAClB,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM,IAAI,UAAU,KAAK,MAAM;AACpE,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,QAAI,IAAI,cAAc,YAAY;AAC9B,aAAO,IAAI,UAAU,KAAK,IAAI,SAAS,GAAG;AAAA,IAC9C;AAEA,QAAI,QAAQ,UAAU,QAAW;AAC7B,cAAQ,QAAQ,IAAI;AAIpB,aAAO;AAAA,IACX;AAEA,UAAM,SAAS,IAAI,UAAU,KAAK,IAAI,SAAS,GAAG;AAClD,QAAI,kBAAkB,SAAS;AAC3B,aAAO,OAAO,KAAK,CAACjB,YAAW,oBAAoBA,SAAQ,GAAG,CAAC;AAAA,IACnE;AACA,WAAO,oBAAoB,QAAQ,GAAG;AAAA,EAC1C;AACJ,CAAC;AACD,SAAS,oBAAoB,SAAS,KAAK;AACvC,MAAI,QAAQ,UAAU,QAAW;AAC7B,YAAQ,QAAQ,IAAI;AAAA,EACxB;AACA,SAAO;AACX;AALS;AAMF,IAAM,eAA6B,gBAAK,aAAa,gBAAgB,CAAC,MAAM,QAAQ;AACvF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ;AAClB,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM,IAAI,UAAU,KAAK,MAAM;AACpE,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,QAAI,IAAI,cAAc,YAAY;AAC9B,aAAO,IAAI,UAAU,KAAK,IAAI,SAAS,GAAG;AAAA,IAC9C;AAEA,QAAI,QAAQ,UAAU,QAAW;AAC7B,cAAQ,QAAQ,IAAI;AAAA,IACxB;AACA,WAAO,IAAI,UAAU,KAAK,IAAI,SAAS,GAAG;AAAA,EAC9C;AACJ,CAAC;AACM,IAAM,kBAAgC,gBAAK,aAAa,mBAAmB,CAAC,MAAM,QAAQ;AAC7F,WAAS,KAAK,MAAM,GAAG;AACvB,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM;AACvC,UAAM,IAAI,IAAI,UAAU,KAAK;AAC7B,WAAO,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,MAAM,MAAM,MAAS,CAAC,IAAI;AAAA,EAChE,CAAC;AACD,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,UAAM,SAAS,IAAI,UAAU,KAAK,IAAI,SAAS,GAAG;AAClD,QAAI,kBAAkB,SAAS;AAC3B,aAAO,OAAO,KAAK,CAACA,YAAW,wBAAwBA,SAAQ,IAAI,CAAC;AAAA,IACxE;AACA,WAAO,wBAAwB,QAAQ,IAAI;AAAA,EAC/C;AACJ,CAAC;AACD,SAAS,wBAAwB,SAAS,MAAM;AAC5C,MAAI,CAAC,QAAQ,OAAO,UAAU,QAAQ,UAAU,QAAW;AACvD,YAAQ,OAAO,KAAK;AAAA,MAChB,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO,QAAQ;AAAA,MACf;AAAA,IACJ,CAAC;AAAA,EACL;AACA,SAAO;AACX;AAVS;AAWF,IAAM,cAA4B,gBAAK,aAAa,eAAe,CAAC,MAAM,QAAQ;AACrF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,QAAI,IAAI,cAAc,YAAY;AAC9B,YAAM,IAAS,gBAAgB,YAAY;AAAA,IAC/C;AACA,UAAM,SAAS,IAAI,UAAU,KAAK,IAAI,SAAS,GAAG;AAClD,QAAI,kBAAkB,SAAS;AAC3B,aAAO,OAAO,KAAK,CAACA,YAAW;AAC3B,gBAAQ,QAAQA,QAAO,OAAO,WAAW;AACzC,eAAO;AAAA,MACX,CAAC;AAAA,IACL;AACA,YAAQ,QAAQ,OAAO,OAAO,WAAW;AACzC,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,WAAS,KAAK,MAAM,GAAG;AACvB,EAAK,WAAW,KAAK,MAAM,SAAS,MAAM,IAAI,UAAU,KAAK,KAAK;AAClE,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM,IAAI,UAAU,KAAK,MAAM;AACpE,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM,IAAI,UAAU,KAAK,MAAM;AACpE,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,QAAI,IAAI,cAAc,YAAY;AAC9B,aAAO,IAAI,UAAU,KAAK,IAAI,SAAS,GAAG;AAAA,IAC9C;AAEA,UAAM,SAAS,IAAI,UAAU,KAAK,IAAI,SAAS,GAAG;AAClD,QAAI,kBAAkB,SAAS;AAC3B,aAAO,OAAO,KAAK,CAACA,YAAW;AAC3B,gBAAQ,QAAQA,QAAO;AACvB,YAAIA,QAAO,OAAO,QAAQ;AACtB,kBAAQ,QAAQ,IAAI,WAAW;AAAA,YAC3B,GAAG;AAAA,YACH,OAAO;AAAA,cACH,QAAQA,QAAO,OAAO,IAAI,CAAC,QAAa,cAAc,KAAK,KAAUU,QAAO,CAAC,CAAC;AAAA,YAClF;AAAA,YACA,OAAO,QAAQ;AAAA,UACnB,CAAC;AACD,kBAAQ,SAAS,CAAC;AAAA,QACtB;AACA,eAAO;AAAA,MACX,CAAC;AAAA,IACL;AACA,YAAQ,QAAQ,OAAO;AACvB,QAAI,OAAO,OAAO,QAAQ;AACtB,cAAQ,QAAQ,IAAI,WAAW;AAAA,QAC3B,GAAG;AAAA,QACH,OAAO;AAAA,UACH,QAAQ,OAAO,OAAO,IAAI,CAAC,QAAa,cAAc,KAAK,KAAUA,QAAO,CAAC,CAAC;AAAA,QAClF;AAAA,QACA,OAAO,QAAQ;AAAA,MACnB,CAAC;AACD,cAAQ,SAAS,CAAC;AAAA,IACtB;AACA,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,QAAI,OAAO,QAAQ,UAAU,YAAY,CAAC,OAAO,MAAM,QAAQ,KAAK,GAAG;AACnE,cAAQ,OAAO,KAAK;AAAA,QAChB,OAAO,QAAQ;AAAA,QACf;AAAA,QACA,UAAU;AAAA,QACV,MAAM;AAAA,MACV,CAAC;AACD,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,WAAS,KAAK,MAAM,GAAG;AACvB,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM,IAAI,GAAG,KAAK,MAAM;AAC7D,EAAK,WAAW,KAAK,MAAM,SAAS,MAAM,IAAI,GAAG,KAAK,KAAK;AAC3D,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM,IAAI,IAAI,KAAK,MAAM;AAC9D,EAAK,WAAW,KAAK,MAAM,cAAc,MAAM,IAAI,GAAG,KAAK,UAAU;AACrE,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,QAAI,IAAI,cAAc,YAAY;AAC9B,YAAM,QAAQ,IAAI,IAAI,KAAK,IAAI,SAAS,GAAG;AAC3C,UAAI,iBAAiB,SAAS;AAC1B,eAAO,MAAM,KAAK,CAACI,WAAU,iBAAiBA,QAAO,IAAI,IAAI,GAAG,CAAC;AAAA,MACrE;AACA,aAAO,iBAAiB,OAAO,IAAI,IAAI,GAAG;AAAA,IAC9C;AACA,UAAM,OAAO,IAAI,GAAG,KAAK,IAAI,SAAS,GAAG;AACzC,QAAI,gBAAgB,SAAS;AACzB,aAAO,KAAK,KAAK,CAACD,UAAS,iBAAiBA,OAAM,IAAI,KAAK,GAAG,CAAC;AAAA,IACnE;AACA,WAAO,iBAAiB,MAAM,IAAI,KAAK,GAAG;AAAA,EAC9C;AACJ,CAAC;AACD,SAAS,iBAAiB,MAAM,MAAM,KAAK;AACvC,MAAI,KAAK,OAAO,QAAQ;AAEpB,SAAK,UAAU;AACf,WAAO;AAAA,EACX;AACA,SAAO,KAAK,KAAK,IAAI,EAAE,OAAO,KAAK,OAAO,QAAQ,KAAK,OAAO,GAAG,GAAG;AACxE;AAPS;AAQF,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,WAAS,KAAK,MAAM,GAAG;AACvB,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM,IAAI,GAAG,KAAK,MAAM;AAC7D,EAAK,WAAW,KAAK,MAAM,SAAS,MAAM,IAAI,GAAG,KAAK,KAAK;AAC3D,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM,IAAI,IAAI,KAAK,MAAM;AAC9D,EAAK,WAAW,KAAK,MAAM,cAAc,MAAM,IAAI,GAAG,KAAK,UAAU;AACrE,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,UAAM,YAAY,IAAI,aAAa;AACnC,QAAI,cAAc,WAAW;AACzB,YAAM,OAAO,IAAI,GAAG,KAAK,IAAI,SAAS,GAAG;AACzC,UAAI,gBAAgB,SAAS;AACzB,eAAO,KAAK,KAAK,CAACA,UAAS,mBAAmBA,OAAM,KAAK,GAAG,CAAC;AAAA,MACjE;AACA,aAAO,mBAAmB,MAAM,KAAK,GAAG;AAAA,IAC5C,OACK;AACD,YAAM,QAAQ,IAAI,IAAI,KAAK,IAAI,SAAS,GAAG;AAC3C,UAAI,iBAAiB,SAAS;AAC1B,eAAO,MAAM,KAAK,CAACC,WAAU,mBAAmBA,QAAO,KAAK,GAAG,CAAC;AAAA,MACpE;AACA,aAAO,mBAAmB,OAAO,KAAK,GAAG;AAAA,IAC7C;AAAA,EACJ;AACJ,CAAC;AACD,SAAS,mBAAmB,QAAQ,KAAK,KAAK;AAC1C,MAAI,OAAO,OAAO,QAAQ;AAEtB,WAAO,UAAU;AACjB,WAAO;AAAA,EACX;AACA,QAAM,YAAY,IAAI,aAAa;AACnC,MAAI,cAAc,WAAW;AACzB,UAAM,cAAc,IAAI,UAAU,OAAO,OAAO,MAAM;AACtD,QAAI,uBAAuB,SAAS;AAChC,aAAO,YAAY,KAAK,CAAC,UAAU,oBAAoB,QAAQ,OAAO,IAAI,KAAK,GAAG,CAAC;AAAA,IACvF;AACA,WAAO,oBAAoB,QAAQ,aAAa,IAAI,KAAK,GAAG;AAAA,EAChE,OACK;AACD,UAAM,cAAc,IAAI,iBAAiB,OAAO,OAAO,MAAM;AAC7D,QAAI,uBAAuB,SAAS;AAChC,aAAO,YAAY,KAAK,CAAC,UAAU,oBAAoB,QAAQ,OAAO,IAAI,IAAI,GAAG,CAAC;AAAA,IACtF;AACA,WAAO,oBAAoB,QAAQ,aAAa,IAAI,IAAI,GAAG;AAAA,EAC/D;AACJ;AArBS;AAsBT,SAAS,oBAAoB,MAAM,OAAO,YAAY,KAAK;AAEvD,MAAI,KAAK,OAAO,QAAQ;AACpB,SAAK,UAAU;AACf,WAAO;AAAA,EACX;AACA,SAAO,WAAW,KAAK,IAAI,EAAE,OAAO,QAAQ,KAAK,OAAO,GAAG,GAAG;AAClE;AAPS;AAQF,IAAM,eAA6B,gBAAK,aAAa,gBAAgB,CAAC,MAAM,QAAQ;AACvF,WAAS,KAAK,MAAM,GAAG;AACvB,EAAK,WAAW,KAAK,MAAM,cAAc,MAAM,IAAI,UAAU,KAAK,UAAU;AAC5E,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM,IAAI,UAAU,KAAK,MAAM;AACpE,EAAK,WAAW,KAAK,MAAM,SAAS,MAAM,IAAI,UAAU,KAAK,KAAK;AAClE,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM,IAAI,UAAU,KAAK,MAAM;AACpE,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,QAAI,IAAI,cAAc,YAAY;AAC9B,aAAO,IAAI,UAAU,KAAK,IAAI,SAAS,GAAG;AAAA,IAC9C;AACA,UAAM,SAAS,IAAI,UAAU,KAAK,IAAI,SAAS,GAAG;AAClD,QAAI,kBAAkB,SAAS;AAC3B,aAAO,OAAO,KAAK,oBAAoB;AAAA,IAC3C;AACA,WAAO,qBAAqB,MAAM;AAAA,EACtC;AACJ,CAAC;AACD,SAAS,qBAAqB,SAAS;AACnC,UAAQ,QAAQ,OAAO,OAAO,QAAQ,KAAK;AAC3C,SAAO;AACX;AAHS;AAIF,IAAM,sBAAoC,gBAAK,aAAa,uBAAuB,CAAC,MAAM,QAAQ;AACrG,WAAS,KAAK,MAAM,GAAG;AACvB,QAAM,aAAa,CAAC;AACpB,aAAW,QAAQ,IAAI,OAAO;AAC1B,QAAI,OAAO,SAAS,YAAY,SAAS,MAAM;AAE3C,UAAI,CAAC,KAAK,KAAK,SAAS;AAEpB,cAAM,IAAI,MAAM,oDAAoD,CAAC,GAAG,KAAK,KAAK,MAAM,EAAE,MAAM,CAAC,EAAE;AAAA,MACvG;AACA,YAAM,SAAS,KAAK,KAAK,mBAAmB,SAAS,KAAK,KAAK,QAAQ,SAAS,KAAK,KAAK;AAC1F,UAAI,CAAC;AACD,cAAM,IAAI,MAAM,kCAAkC,KAAK,KAAK,MAAM,EAAE;AACxE,YAAM,QAAQ,OAAO,WAAW,GAAG,IAAI,IAAI;AAC3C,YAAM,MAAM,OAAO,SAAS,GAAG,IAAI,OAAO,SAAS,IAAI,OAAO;AAC9D,iBAAW,KAAK,OAAO,MAAM,OAAO,GAAG,CAAC;AAAA,IAC5C,WACS,SAAS,QAAa,eAAe,IAAI,OAAO,IAAI,GAAG;AAC5D,iBAAW,KAAU,YAAY,GAAG,IAAI,EAAE,CAAC;AAAA,IAC/C,OACK;AACD,YAAM,IAAI,MAAM,kCAAkC,IAAI,EAAE;AAAA,IAC5D;AAAA,EACJ;AACA,OAAK,KAAK,UAAU,IAAI,OAAO,IAAI,WAAW,KAAK,EAAE,CAAC,GAAG;AACzD,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,QAAI,OAAO,QAAQ,UAAU,UAAU;AACnC,cAAQ,OAAO,KAAK;AAAA,QAChB,OAAO,QAAQ;AAAA,QACf;AAAA,QACA,UAAU;AAAA,QACV,MAAM;AAAA,MACV,CAAC;AACD,aAAO;AAAA,IACX;AACA,SAAK,KAAK,QAAQ,YAAY;AAC9B,QAAI,CAAC,KAAK,KAAK,QAAQ,KAAK,QAAQ,KAAK,GAAG;AACxC,cAAQ,OAAO,KAAK;AAAA,QAChB,OAAO,QAAQ;AAAA,QACf;AAAA,QACA,MAAM;AAAA,QACN,QAAQ,IAAI,UAAU;AAAA,QACtB,SAAS,KAAK,KAAK,QAAQ;AAAA,MAC/B,CAAC;AACD,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AACJ,CAAC;AACM,IAAM,eAA6B,gBAAK,aAAa,gBAAgB,CAAC,MAAM,QAAQ;AACvF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,OAAO;AACZ,OAAK,KAAK,MAAM;AAChB,OAAK,YAAY,CAAC,SAAS;AACvB,QAAI,OAAO,SAAS,YAAY;AAC5B,YAAM,IAAI,MAAM,4CAA4C;AAAA,IAChE;AACA,WAAO,YAAa,MAAM;AACtB,YAAM,aAAa,KAAK,KAAK,QAAQI,OAAM,KAAK,KAAK,OAAO,IAAI,IAAI;AACpE,YAAM,SAAS,QAAQ,MAAM,MAAM,MAAM,UAAU;AACnD,UAAI,KAAK,KAAK,QAAQ;AAClB,eAAOA,OAAM,KAAK,KAAK,QAAQ,MAAM;AAAA,MACzC;AACA,aAAO;AAAA,IACX;AAAA,EACJ;AACA,OAAK,iBAAiB,CAAC,SAAS;AAC5B,QAAI,OAAO,SAAS,YAAY;AAC5B,YAAM,IAAI,MAAM,iDAAiD;AAAA,IACrE;AACA,WAAO,kBAAmB,MAAM;AAC5B,YAAM,aAAa,KAAK,KAAK,QAAQ,MAAM,WAAW,KAAK,KAAK,OAAO,IAAI,IAAI;AAC/E,YAAM,SAAS,MAAM,QAAQ,MAAM,MAAM,MAAM,UAAU;AACzD,UAAI,KAAK,KAAK,QAAQ;AAClB,eAAO,MAAM,WAAW,KAAK,KAAK,QAAQ,MAAM;AAAA,MACpD;AACA,aAAO;AAAA,IACX;AAAA,EACJ;AACA,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,QAAI,OAAO,QAAQ,UAAU,YAAY;AACrC,cAAQ,OAAO,KAAK;AAAA,QAChB,MAAM;AAAA,QACN,UAAU;AAAA,QACV,OAAO,QAAQ;AAAA,QACf;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX;AAEA,UAAM,mBAAmB,KAAK,KAAK,UAAU,KAAK,KAAK,OAAO,KAAK,IAAI,SAAS;AAChF,QAAI,kBAAkB;AAClB,cAAQ,QAAQ,KAAK,eAAe,QAAQ,KAAK;AAAA,IACrD,OACK;AACD,cAAQ,QAAQ,KAAK,UAAU,QAAQ,KAAK;AAAA,IAChD;AACA,WAAO;AAAA,EACX;AACA,OAAK,QAAQ,IAAI,SAAS;AACtB,UAAM,IAAI,KAAK;AACf,QAAI,MAAM,QAAQ,KAAK,CAAC,CAAC,GAAG;AACxB,aAAO,IAAI,EAAE;AAAA,QACT,MAAM;AAAA,QACN,OAAO,IAAI,UAAU;AAAA,UACjB,MAAM;AAAA,UACN,OAAO,KAAK,CAAC;AAAA,UACb,MAAM,KAAK,CAAC;AAAA,QAChB,CAAC;AAAA,QACD,QAAQ,KAAK,KAAK;AAAA,MACtB,CAAC;AAAA,IACL;AACA,WAAO,IAAI,EAAE;AAAA,MACT,MAAM;AAAA,MACN,OAAO,KAAK,CAAC;AAAA,MACb,QAAQ,KAAK,KAAK;AAAA,IACtB,CAAC;AAAA,EACL;AACA,OAAK,SAAS,CAAC,WAAW;AACtB,UAAM,IAAI,KAAK;AACf,WAAO,IAAI,EAAE;AAAA,MACT,MAAM;AAAA,MACN,OAAO,KAAK,KAAK;AAAA,MACjB;AAAA,IACJ,CAAC;AAAA,EACL;AACA,SAAO;AACX,CAAC;AACM,IAAM,cAA4B,gBAAK,aAAa,eAAe,CAAC,MAAM,QAAQ;AACrF,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,WAAO,QAAQ,QAAQ,QAAQ,KAAK,EAAE,KAAK,CAAC,UAAU,IAAI,UAAU,KAAK,IAAI,EAAE,OAAO,OAAO,QAAQ,CAAC,EAAE,GAAG,GAAG,CAAC;AAAA,EACnH;AACJ,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,WAAS,KAAK,MAAM,GAAG;AAQvB,EAAK,WAAW,KAAK,MAAM,aAAa,MAAM,IAAI,OAAO,CAAC;AAC1D,EAAK,WAAW,KAAK,MAAM,WAAW,MAAM,KAAK,KAAK,UAAU,KAAK,OAAO;AAC5E,EAAK,WAAW,KAAK,MAAM,cAAc,MAAM,KAAK,KAAK,UAAU,KAAK,UAAU;AAClF,EAAK,WAAW,KAAK,MAAM,SAAS,MAAM,KAAK,KAAK,UAAU,KAAK,SAAS,MAAS;AACrF,EAAK,WAAW,KAAK,MAAM,UAAU,MAAM,KAAK,KAAK,UAAU,KAAK,UAAU,MAAS;AACvF,OAAK,KAAK,QAAQ,CAAC,SAAS,QAAQ;AAChC,UAAM,QAAQ,KAAK,KAAK;AACxB,WAAO,MAAM,KAAK,IAAI,SAAS,GAAG;AAAA,EACtC;AACJ,CAAC;AACM,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,EAAO,UAAU,KAAK,MAAM,GAAG;AAC/B,WAAS,KAAK,MAAM,GAAG;AACvB,OAAK,KAAK,QAAQ,CAAC,SAAS,MAAM;AAC9B,WAAO;AAAA,EACX;AACA,OAAK,KAAK,QAAQ,CAAC,YAAY;AAC3B,UAAM,QAAQ,QAAQ;AACtB,UAAM,IAAI,IAAI,GAAG,KAAK;AACtB,QAAI,aAAa,SAAS;AACtB,aAAO,EAAE,KAAK,CAACX,OAAM,mBAAmBA,IAAG,SAAS,OAAO,IAAI,CAAC;AAAA,IACpE;AACA,uBAAmB,GAAG,SAAS,OAAO,IAAI;AAC1C;AAAA,EACJ;AACJ,CAAC;AACD,SAAS,mBAAmB,QAAQ,SAAS,OAAO,MAAM;AACtD,MAAI,CAAC,QAAQ;AACT,UAAM,OAAO;AAAA,MACT,MAAM;AAAA,MACN;AAAA,MACA;AAAA;AAAA,MACA,MAAM,CAAC,GAAI,KAAK,KAAK,IAAI,QAAQ,CAAC,CAAE;AAAA;AAAA,MACpC,UAAU,CAAC,KAAK,KAAK,IAAI;AAAA;AAAA,IAE7B;AACA,QAAI,KAAK,KAAK,IAAI;AACd,WAAK,SAAS,KAAK,KAAK,IAAI;AAChC,YAAQ,OAAO,KAAU,MAAM,IAAI,CAAC;AAAA,EACxC;AACJ;AAdS;;;AKp5DT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAAY;;;ACAA;AAAA;AAAA;AAAAC;AACA,IAAMC,SAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,sBAAO,MAAM,wCAAU;AAAA,IACvC,MAAM,EAAE,MAAM,4BAAQ,MAAM,wCAAU;AAAA,IACtC,OAAO,EAAE,MAAM,4BAAQ,MAAM,wCAAU;AAAA,IACvC,KAAK,EAAE,MAAM,4BAAQ,MAAM,wCAAU;AAAA,EACzC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,+JAAkCA,OAAM,QAAQ,+EAAmBD,YAAWC,OAAM,KAAK,CAAC;AAAA,MACrG,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,+JAAuC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACrF,eAAO,uPAAyD,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACjG,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,qJAAkCA,OAAM,UAAU,sCAAQ,IAAI,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,0BAAM;AACjI,eAAO,oJAAiCA,OAAM,UAAU,sCAAQ,IAAI,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACvG;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,2HAA4BA,OAAM,MAAM,0CAAY,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC7G;AACA,eAAO,2HAA4BA,OAAM,MAAM,0CAAY,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC9F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,gJAAkCA,OAAM,MAAM;AACzD,YAAI,OAAO,WAAW;AAClB,iBAAO,sJAAmC,OAAO,MAAM;AAC3D,YAAI,OAAO,WAAW;AAClB,iBAAO,qJAAkC,OAAO,QAAQ;AAC5D,YAAI,OAAO,WAAW;AAClB,iBAAO,uKAAqC,OAAO,OAAO;AAC9D,eAAO,GAAG,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAClD;AAAA,MACA,KAAK;AACD,eAAO,0LAAyCA,OAAM,OAAO;AAAA,MACjE,KAAK;AACD,eAAO,2BAAOA,OAAM,KAAK,SAAS,IAAI,iBAAO,EAAE,4BAAQA,OAAM,KAAK,SAAS,IAAI,WAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,SAAI,CAAC;AAAA,MACjI,KAAK;AACD,eAAO,2FAAqBA,OAAM,MAAM;AAAA,MAC5C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,2FAAqBA,OAAM,MAAM;AAAA,MAC5C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA7Gc;AA8GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,OAAM;AAAA,EACvB;AACJ;AAJO;;;AC/GP;AAAA;AAAA;AAAAG;AACA,IAAMC,SAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,UAAU,MAAM,sBAAY;AAAA,IAC5C,MAAM,EAAE,MAAM,QAAQ,MAAM,sBAAY;AAAA,IACxC,OAAO,EAAE,MAAM,WAAW,MAAM,sBAAY;AAAA,IAC5C,KAAK,EAAE,MAAM,WAAW,MAAM,sBAAY;AAAA,EAC9C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,6DAA4BA,OAAM,QAAQ,gBAAgBD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC5F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,6DAAiC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC/E,eAAO,4FAAsD,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAC9F,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,+CAAyBA,OAAM,UAAU,iBAAO,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,SAAS;AACzH,eAAO,+CAAyBA,OAAM,UAAU,iBAAO,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC7F;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,4CAAyBA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AACjG,eAAO,4CAAyBA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAClF;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,gCAAiB,OAAO,MAAM;AACzC,YAAI,OAAO,WAAW;AAClB,iBAAO,gCAAiB,OAAO,MAAM;AACzC,YAAI,OAAO,WAAW;AAClB,iBAAO,gCAAiB,OAAO,QAAQ;AAC3C,YAAI,OAAO,WAAW;AAClB,iBAAO,+BAAgB,OAAO,OAAO;AACzC,eAAO,oBAAU,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACzD;AAAA,MACA,KAAK;AACD,eAAO,oCAAgBA,OAAM,OAAO;AAAA,MACxC,KAAK;AACD,eAAO,0BAAkBA,OAAM,KAAK,SAAS,IAAI,QAAQ,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACrG,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA5Gc;AA6GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,OAAM;AAAA,EACvB;AACJ;AAJO;;;AC9GP;AAAA;AAAA;AAAAG;AACA,SAAS,oBAAoBC,QAAO,KAAK,KAAK,MAAM;AAChD,QAAM,WAAW,KAAK,IAAIA,MAAK;AAC/B,QAAM,YAAY,WAAW;AAC7B,QAAM,gBAAgB,WAAW;AACjC,MAAI,iBAAiB,MAAM,iBAAiB,IAAI;AAC5C,WAAO;AAAA,EACX;AACA,MAAI,cAAc,GAAG;AACjB,WAAO;AAAA,EACX;AACA,MAAI,aAAa,KAAK,aAAa,GAAG;AAClC,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAdS;AAeT,IAAMC,SAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,MACA,MAAM;AAAA,IACV;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,MACA,MAAM;AAAA,IACV;AAAA,IACA,KAAK;AAAA,MACD,MAAM;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,MACA,MAAM;AAAA,IACV;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,MACA,MAAM;AAAA,IACV;AAAA,EACJ;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,2IAA6BA,OAAM,QAAQ,sDAAcD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC3F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,iJAAmC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACjF,eAAO,mMAA6C,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACrF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,gBAAM,WAAW,OAAOA,OAAM,OAAO;AACrC,gBAAM,OAAO,oBAAoB,UAAU,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK,OAAO,KAAK,IAAI;AAC7F,iBAAO,yJAAiCA,OAAM,UAAU,kDAAU,+CAAY,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,IAAI;AAAA,QACvI;AACA,eAAO,yJAAiCA,OAAM,UAAU,kDAAU,wEAAiB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACrH;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,gBAAM,WAAW,OAAOA,OAAM,OAAO;AACrC,gBAAM,OAAO,oBAAoB,UAAU,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK,OAAO,KAAK,IAAI;AAC7F,iBAAO,6IAA+BA,OAAM,MAAM,+CAAY,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,IAAI;AAAA,QACvH;AACA,eAAO,6IAA+BA,OAAM,MAAM,wEAAiB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACrG;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,gNAA2C,OAAO,MAAM;AACnE,YAAI,OAAO,WAAW;AAClB,iBAAO,kOAA8C,OAAO,MAAM;AACtE,YAAI,OAAO,WAAW;AAClB,iBAAO,mMAAwC,OAAO,QAAQ;AAClE,YAAI,OAAO,WAAW;AAClB,iBAAO,yPAAiD,OAAO,OAAO;AAC1E,eAAO,sEAAe,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC9D;AAAA,MACA,KAAK;AACD,eAAO,yMAAyCA,OAAM,OAAO;AAAA,MACjE,KAAK;AACD,eAAO,4EAAgBA,OAAM,KAAK,SAAS,IAAI,mCAAU,0BAAM,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACzG,KAAK;AACD,eAAO,sGAAsBA,OAAM,MAAM;AAAA,MAC7C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,oIAA2BA,OAAM,MAAM;AAAA,MAClD;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Ic;AA+IC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,OAAM;AAAA,EACvB;AACJ;AAJO;;;AC/JP;AAAA;AAAA;AAAAG;AACO,IAAM,aAAa,wBAAC,SAAS;AAChC,QAAM,IAAI,OAAO;AACjB,UAAQ,GAAG;AAAA,IACP,KAAK,UAAU;AACX,aAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,IACxC;AAAA,IACA,KAAK,UAAU;AACX,UAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,eAAO;AAAA,MACX;AACA,UAAI,SAAS,MAAM;AACf,eAAO;AAAA,MACX;AACA,UAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,eAAO,KAAK,YAAY;AAAA,MAC5B;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX,GAnB0B;AAoB1B,IAAMC,SAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,8CAAW,MAAM,0DAAa;AAAA,IAC9C,MAAM,EAAE,MAAM,kCAAS,MAAM,0DAAa;AAAA,IAC1C,OAAO,EAAE,MAAM,oDAAY,MAAM,0DAAa;AAAA,IAC9C,KAAK,EAAE,MAAM,oDAAY,MAAM,0DAAa;AAAA,EAChD;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,+HAA2BA,OAAM,QAAQ,gDAAa,WAAWA,OAAM,KAAK,CAAC;AAAA,MACxF,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,+HAAgC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC9E,eAAO,iLAA0C,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAClF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,gIAA4BA,OAAM,UAAU,kDAAU,4DAAe,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,kDAAU;AAC3I,eAAO,gIAA4BA,OAAM,UAAU,kDAAU,0CAAY,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC3G;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,0HAA2BA,OAAM,MAAM,4DAAe,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC9G;AACA,eAAO,0HAA2BA,OAAM,MAAM,0CAAY,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC5F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,mLAAuC,OAAO,MAAM;AAAA,QAC/D;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,yLAAwC,OAAO,MAAM;AAChE,YAAI,OAAO,WAAW;AAClB,iBAAO,4KAAqC,OAAO,QAAQ;AAC/D,YAAI,OAAO,WAAW;AAClB,iBAAO,kLAAsC,OAAO,OAAO;AAC/D,YAAI,cAAc;AAClB,YAAI,OAAO,WAAW;AAClB,wBAAc;AAClB,YAAI,OAAO,WAAW;AAClB,wBAAc;AAClB,YAAI,OAAO,WAAW;AAClB,wBAAc;AAClB,YAAI,OAAO,WAAW;AAClB,wBAAc;AAClB,YAAI,OAAO,WAAW;AAClB,wBAAc;AAClB,eAAO,GAAG,WAAW,IAAI,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACjE;AAAA,MACA,KAAK;AACD,eAAO,uNAA6CA,OAAM,OAAO;AAAA,MACrE,KAAK;AACD,eAAO,qEAAcA,OAAM,KAAK,SAAS,IAAI,WAAM,EAAE,4BAAQA,OAAM,KAAK,SAAS,IAAI,uBAAQ,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACzI,KAAK;AACD,eAAO,0FAAoBA,OAAM,MAAM;AAAA,MAC3C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,kHAAwBA,OAAM,MAAM;AAAA,MAC/C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GArGc;AAsGC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaD,OAAM;AAAA,EACvB;AACJ;AAJO;;;AC3HP;AAAA;AAAA;AAAAE;AACA,IAAMC,SAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,gBAAa,MAAM,WAAW;AAAA,IAC9C,MAAM,EAAE,MAAM,SAAS,MAAM,WAAW;AAAA,IACxC,OAAO,EAAE,MAAM,YAAY,MAAM,WAAW;AAAA,IAC5C,KAAK,EAAE,MAAM,YAAY,MAAM,WAAW;AAAA,EAC9C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,gCAA6BA,OAAM,QAAQ,gBAAgBD,YAAWC,OAAM,KAAK,CAAC;AAAA;AAAA,MAE7F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,gCAAkC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAChF,eAAO,2CAA0C,WAAWA,OAAM,QAAQ,KAAK,CAAC;AAAA,MACpF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,mBAAgB;AAC9C,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,8BAA8BA,OAAM,UAAU,UAAU,kBAAe,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,UAAU;AAC9I,eAAO,8BAA8BA,OAAM,UAAU,UAAU,QAAQ,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC1G;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,mBAAgB;AAC9C,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,+BAA+BA,OAAM,MAAM,kBAAe,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACnH;AACA,eAAO,+BAA+BA,OAAM,MAAM,QAAQ,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC7F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,6CAAuC,OAAO,MAAM;AAAA,QAC/D;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,uCAAoC,OAAO,MAAM;AAC5D,YAAI,OAAO,WAAW;AAClB,iBAAO,qCAAkC,OAAO,QAAQ;AAC5D,YAAI,OAAO,WAAW;AAClB,iBAAO,sDAAgD,OAAO,OAAO;AACzE,eAAO,2BAAwB,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACvE;AAAA,MACA,KAAK;AACD,eAAO,kDAAyCA,OAAM,OAAO;AAAA,MACjE,KAAK;AACD,eAAO,OAAOA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,iBAAiBA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACzI,KAAK;AACD,eAAO,sBAAmBA,OAAM,MAAM;AAAA,MAC1C,KAAK;AACD,eAAO;AAAA;AAAA,MACX,KAAK;AACD,eAAO,wBAAqBA,OAAM,MAAM;AAAA,MAC5C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA/Gc;AAgHC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,OAAM;AAAA,EACvB;AACJ;AAJO;;;ACjHP;AAAA;AAAA;AAAAG;AACA,IAAMC,SAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,cAAS,MAAM,SAAM;AAAA,IACrC,MAAM,EAAE,MAAM,cAAS,MAAM,SAAM;AAAA,IACnC,OAAO,EAAE,MAAM,cAAS,MAAM,SAAM;AAAA,IACpC,KAAK,EAAE,MAAM,cAAS,MAAM,SAAM;AAAA,EACtC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,eAAO;AAAA,MACX;AAAA,MACA,KAAK,WAAW;AACZ,eAAO;AAAA,MACX;AAAA,MACA,KAAK,UAAU;AACX,eAAO;AAAA,MACX;AAAA,MACA,KAAK,YAAY;AACb,eAAO;AAAA,MACX;AAAA,MACA,KAAK,UAAU;AACX,eAAO;AAAA,MACX;AAAA,MACA,KAAK,aAAa;AACd,eAAO;AAAA,MACX;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GArCmB;AAsCnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,2CAA6BA,OAAM,QAAQ,mBAAcD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC3F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,2CAAkC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAChF,eAAO,iEAAmD,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAC3F,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,4CAA4BA,OAAM,UAAU,SAAS,mBAAa,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,YAAO;AAAA,QACrI;AACA,eAAO,4CAA4BA,OAAM,UAAU,SAAS,mBAAa,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC3G;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,2CAA2BA,OAAM,UAAU,SAAS,mBAAa,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,YAAO;AAAA,QACpI;AACA,eAAO,2CAA2BA,OAAM,UAAU,SAAS,mBAAa,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC1G;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,8DAAsC,OAAO,MAAM;AAC9D,YAAI,OAAO,WAAW;AAClB,iBAAO,0DAAqC,OAAO,MAAM;AAC7D,YAAI,OAAO,WAAW;AAClB,iBAAO,qDAAqC,OAAO,QAAQ;AAC/D,YAAI,OAAO,WAAW;AAClB,iBAAO,6DAA0C,OAAO,OAAO;AACnE,eAAO,yBAAmB,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAClE;AAAA,MACA,KAAK;AACD,eAAO,yDAAqCA,OAAM,OAAO;AAAA,MAC7D,KAAK;AACD,eAAO,gCAAuB,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC9D,KAAK;AACD,eAAO,8BAAmBA,OAAM,MAAM;AAAA,MAC1C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,yBAAsBA,OAAM,MAAM;AAAA,MAC7C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GAhIc;AAiIC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,OAAM;AAAA,EACvB;AACJ;AAJO;;;AClIP;AAAA;AAAA;AAAAG;AACA,IAAMC,SAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,QAAQ,MAAM,QAAQ;AAAA,IACtC,MAAM,EAAE,MAAM,SAAS,MAAM,QAAQ;AAAA,IACrC,OAAO,EAAE,MAAM,aAAa,MAAM,YAAY;AAAA,IAC9C,KAAK,EAAE,MAAM,aAAa,MAAM,YAAY;AAAA,EAChD;AACA,QAAM,YAAY;AAAA,IACd,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM;AAAA,EACV;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,WAAS,YAAY,MAAM;AACvB,WAAO,UAAU,IAAI,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AACA,eAAO;AAAA,MACX;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GApBmB;AAqBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,8BAA8B,YAAYA,OAAM,QAAQ,CAAC,SAAS,YAAYD,YAAWC,OAAM,KAAK,CAAC,CAAC;AAAA,MACjH,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,gCAAkC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAChF,eAAO,+CAAiD,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACzF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,cAAM,SAAS,YAAYA,OAAM,MAAM;AACvC,YAAI;AACA,iBAAO,wBAAwB,UAAU,OAAO,IAAI,OAAO,IAAI,IAAI,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,WAAW;AACpI,eAAO,wBAAwB,UAAU,OAAO,UAAU,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC7F;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,cAAM,SAAS,YAAYA,OAAM,MAAM;AACvC,YAAI,QAAQ;AACR,iBAAO,yBAAyB,MAAM,IAAI,OAAO,IAAI,IAAI,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC3G;AACA,eAAO,yBAAyB,MAAM,UAAU,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACnF;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,oCAAoC,OAAO,MAAM;AAC5D,YAAI,OAAO,WAAW;AAClB,iBAAO,kCAAkC,OAAO,MAAM;AAC1D,YAAI,OAAO,WAAW;AAClB,iBAAO,mCAAmC,OAAO,QAAQ;AAC7D,YAAI,OAAO,WAAW;AAClB,iBAAO,4CAAyC,OAAO,OAAO;AAClE,eAAO,WAAW,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC1D;AAAA,MACA,KAAK;AACD,eAAO,2CAAwCA,OAAM,OAAO;AAAA,MAChE,KAAK;AACD,eAAO,GAAGA,OAAM,KAAK,SAAS,IAAI,sBAAmB,iBAAc,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC7G,KAAK;AACD,eAAO,sBAAmBA,OAAM,MAAM;AAAA,MAC1C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,sBAAmBA,OAAM,MAAM;AAAA,MAC1C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA5Hc;AA6HC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,OAAM;AAAA,EACvB;AACJ;AAJO;;;AC9HP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,WAAW,MAAM,WAAW;AAAA,IAC5C,MAAM,EAAE,MAAM,SAAS,MAAM,WAAW;AAAA,IACxC,OAAO,EAAE,MAAM,YAAY,MAAM,WAAW;AAAA,IAC5C,KAAK,EAAE,MAAM,YAAY,MAAM,WAAW;AAAA,EAC9C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,kCAA+BA,OAAM,QAAQ,cAAcD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC7F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,kCAAoC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAClF,eAAO,0CAA4C,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACpF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,8BAA2BA,OAAM,UAAU,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,UAAU;AAC3H,eAAO,8BAA2BA,OAAM,UAAU,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC9F;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,4BAA4BA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACpG;AACA,eAAO,4BAA4BA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACrF;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,mCAAgC,OAAO,MAAM;AACxD,YAAI,OAAO,WAAW;AAClB,iBAAO,mCAAgC,OAAO,MAAM;AACxD,YAAI,OAAO,WAAW;AAClB,iBAAO,+BAA4B,OAAO,QAAQ;AACtD,YAAI,OAAO,WAAW;AAClB,iBAAO,yCAAsC,OAAO,OAAO;AAC/D,eAAO,gBAAa,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC5D;AAAA,MACA,KAAK;AACD,eAAO,8CAA2CA,OAAM,OAAO;AAAA,MACnE,KAAK;AACD,eAAO,GAAGA,OAAM,KAAK,SAAS,IAAI,4BAAyB,0BAAuB,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC5H,KAAK;AACD,eAAO,iCAA2BA,OAAM,MAAM;AAAA,MAClD,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,yBAAsBA,OAAM,MAAM;AAAA,MAC7C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA7Gc;AA8GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AC/GP;AAAA;AAAA;AAAAG;AACO,IAAMC,cAAa,wBAAC,SAAS;AAChC,QAAM,IAAI,OAAO;AACjB,UAAQ,GAAG;AAAA,IACP,KAAK,UAAU;AACX,aAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,IACxC;AAAA,IACA,KAAK,UAAU;AACX,UAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,eAAO;AAAA,MACX;AACA,UAAI,SAAS,MAAM;AACf,eAAO;AAAA,MACX;AACA,UAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,eAAO,KAAK,YAAY;AAAA,MAC5B;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX,GAnB0B;AAoB1B,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,cAAc,MAAM,UAAU;AAAA,IAC9C,MAAM,EAAE,MAAM,SAAS,MAAM,UAAU;AAAA,IACvC,OAAO,EAAE,MAAM,SAAS,MAAM,UAAU;AAAA,IACxC,KAAK,EAAE,MAAM,SAAS,MAAM,UAAU;AAAA,EAC1C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,2BAA2BA,OAAM,QAAQ,cAAcF,YAAWE,OAAM,KAAK,CAAC;AAAA,MACzF,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,2BAAgC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC9E,eAAO,mCAAwC,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAChF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,qBAAqBA,OAAM,UAAU,OAAO,YAAY,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,UAAU;AAC9H,eAAO,qBAAqBA,OAAM,UAAU,OAAO,UAAU,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC/F;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,uBAAuBA,OAAM,MAAM,YAAY,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACvG;AACA,eAAO,uBAAuBA,OAAM,MAAM,UAAU,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACtF;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,oCAAoC,OAAO,MAAM;AAAA,QAC5D;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,kCAAkC,OAAO,MAAM;AAC1D,YAAI,OAAO,WAAW;AAClB,iBAAO,iCAAiC,OAAO,QAAQ;AAC3D,YAAI,OAAO,WAAW;AAClB,iBAAO,sCAAsC,OAAO,OAAO;AAC/D,eAAO,WAAW,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC1D;AAAA,MACA,KAAK;AACD,eAAO,yCAAyCA,OAAM,OAAO;AAAA,MACjE,KAAK;AACD,eAAO,mBAAmBA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACpG,KAAK;AACD,eAAO,kBAAkBA,OAAM,MAAM;AAAA,MACzC,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,oBAAoBA,OAAM,MAAM;AAAA,MAC3C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA1Fc;AA2FC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaD,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAE;AACO,IAAMC,cAAa,wBAAC,SAAS;AAChC,QAAM,IAAI,OAAO;AACjB,UAAQ,GAAG;AAAA,IACP,KAAK,UAAU;AACX,aAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,IACxC;AAAA,IACA,KAAK,UAAU;AACX,UAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,eAAO;AAAA,MACX;AACA,UAAI,SAAS,MAAM;AACf,eAAO;AAAA,MACX;AACA,UAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,eAAO,KAAK,YAAY;AAAA,MAC5B;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX,GAnB0B;AAoB1B,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,cAAc,MAAM,OAAO;AAAA,IAC3C,MAAM,EAAE,MAAM,WAAW,MAAM,OAAO;AAAA,IACtC,OAAO,EAAE,MAAM,cAAc,MAAM,OAAO;AAAA,IAC1C,KAAK,EAAE,MAAM,cAAc,MAAM,OAAO;AAAA,EAC5C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,kCAA6BA,OAAM,QAAQ,oBAAeF,YAAWE,OAAM,KAAK,CAAC;AAAA,MAC5F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,kCAAkC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAChF,eAAO,yCAAyC,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACjF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,iCAA4BA,OAAM,UAAU,QAAQ,SAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,YAAY;AACrI,eAAO,iCAA4BA,OAAM,UAAU,QAAQ,SAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACtG;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,oCAA+BA,OAAM,MAAM,SAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC5G;AACA,eAAO,oCAA+BA,OAAM,MAAM,SAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC7F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,kDAA6C,OAAO,MAAM;AACrE,YAAI,OAAO,WAAW;AAClB,iBAAO,+CAA0C,OAAO,MAAM;AAClE,YAAI,OAAO,WAAW;AAClB,iBAAO,yCAAyC,OAAO,QAAQ;AACnE,YAAI,OAAO,WAAW;AAClB,iBAAO,oDAAoD,OAAO,OAAO;AAC7E,eAAO,YAAY,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC3D;AAAA,MACA,KAAK;AACD,eAAO,uCAAuCA,OAAM,OAAO;AAAA,MAC/D,KAAK;AACD,eAAO,WAAWA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,gBAAWA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACvI,KAAK;AACD,eAAO,4BAAuBA,OAAM,MAAM;AAAA,MAC9C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,sBAAsBA,OAAM,MAAM;AAAA,MAC7C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GAzFc;AA0FC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaD,QAAM;AAAA,EACvB;AACJ;AAJO;;;AC/GP;AAAA;AAAA;AAAAE;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,cAAc,MAAM,QAAQ;AAAA,IAC5C,MAAM,EAAE,MAAM,SAAS,MAAM,QAAQ;AAAA,IACrC,OAAO,EAAE,MAAM,aAAa,MAAM,QAAQ;AAAA,IAC1C,KAAK,EAAE,MAAM,aAAa,MAAM,QAAQ;AAAA,EAC5C;AACA,QAAM,YAAY;AAAA,IACd,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,MAAM;AAAA,IACN,UAAU;AAAA,IACV,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,IACT,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,IACT,KAAK;AAAA,EACT;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,WAAS,YAAY,MAAM;AACvB,WAAO,UAAU,IAAI,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,WAAW;AAClD,iBAAO,KAAK,YAAY;AAAA,QAC5B;AACA,eAAO;AAAA,MACX;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GApBmB;AAqBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,oCAAiC,YAAYA,OAAM,QAAQ,CAAC,cAAc,YAAYD,YAAWC,OAAM,KAAK,CAAC,CAAC;AAAA;AAAA,MAEzH,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,oCAAsC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACpF,eAAO,6CAA4C,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACpF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,cAAM,SAAS,YAAYA,OAAM,MAAM;AACvC,YAAI;AACA,iBAAO,qCAAqC,UAAU,OAAO,YAAY,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,WAAW;AACzI,eAAO,qCAAqC,UAAU,OAAO,UAAU,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACzG;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,cAAM,SAAS,YAAYA,OAAM,MAAM;AACvC,YAAI,QAAQ;AACR,iBAAO,yCAAsC,MAAM,YAAY,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAChH;AACA,eAAO,yCAAsC,MAAM,UAAU,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC/F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,0CAAuC,OAAO,MAAM;AAC/D,YAAI,OAAO,WAAW;AAClB,iBAAO,yCAAsC,OAAO,MAAM;AAC9D,YAAI,OAAO,WAAW;AAClB,iBAAO,qCAAkC,OAAO,QAAQ;AAC5D,YAAI,OAAO,WAAW;AAClB,iBAAO,uDAAiD,OAAO,OAAO;AAC1E,eAAO,eAAY,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC3D;AAAA,MACA,KAAK;AACD,eAAO,kDAAyCA,OAAM,OAAO;AAAA,MACjE,KAAK;AACD,eAAO,QAAQA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,eAAeA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACxI,KAAK;AACD,eAAO,wBAAqB,YAAYA,OAAM,MAAM,CAAC;AAAA,MACzD,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,wBAAqB,YAAYA,OAAM,MAAM,CAAC;AAAA,MACzD;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Ic;AA+IC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChJP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,8CAAW,MAAM,0DAAa;AAAA,IAC9C,MAAM,EAAE,MAAM,4BAAQ,MAAM,0DAAa;AAAA,IACzC,OAAO,EAAE,MAAM,4BAAQ,MAAM,0DAAa;AAAA,IAC1C,KAAK,EAAE,MAAM,4BAAQ,MAAM,0DAAa;AAAA,EAC5C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,+HAA2BA,OAAM,QAAQ,+CAAYD,YAAWC,OAAM,KAAK,CAAC;AAAA,MACvF,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW,GAAG;AAC3B,iBAAO,+HAAgC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAAA,QAC9E;AACA,eAAO,+JAAuC,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAC/E,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,sDAAcA,OAAM,UAAU,gCAAO,6BAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,0BAAM;AAAA,QAChH;AACA,eAAO,sDAAcA,OAAM,UAAU,gCAAO,6BAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACvF;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,sDAAcA,OAAM,MAAM,6BAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC3F;AACA,eAAO,sDAAcA,OAAM,MAAM,6BAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC5E;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,+GAA0B,OAAO,MAAM;AAAA,QAClD;AACA,YAAI,OAAO,WAAW,aAAa;AAC/B,iBAAO,+GAA0B,OAAO,MAAM;AAAA,QAClD;AACA,YAAI,OAAO,WAAW,YAAY;AAC9B,iBAAO,2HAA4B,OAAO,QAAQ;AAAA,QACtD;AACA,YAAI,OAAO,WAAW,SAAS;AAC3B,iBAAO,6IAA+B,OAAO,OAAO;AAAA,QACxD;AACA,eAAO,GAAG,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAClD;AAAA,MACA,KAAK;AACD,eAAO,oHAA0BA,OAAM,OAAO;AAAA,MAClD,KAAK;AACD,eAAO,2BAAOA,OAAM,KAAK,SAAS,IAAI,uBAAQ,EAAE,0CAAiB,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACjG,KAAK;AACD,eAAO,8EAAkBA,OAAM,MAAM;AAAA,MACzC,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,0FAAoBA,OAAM,MAAM;AAAA,MAC3C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GAnHc;AAoHC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;ACrHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,cAAW,SAAS,cAAc;AAAA,IAClD,MAAM,EAAE,MAAM,SAAS,SAAS,YAAY;AAAA,IAC5C,OAAO,EAAE,MAAM,WAAW,SAAS,SAAS;AAAA,IAC5C,KAAK,EAAE,MAAM,WAAW,SAAS,SAAS;AAAA,IAC1C,QAAQ,EAAE,MAAM,IAAI,SAAS,QAAQ;AAAA,IACrC,QAAQ,EAAE,MAAM,IAAI,SAAS,uBAAuB;AAAA,IACpD,KAAK,EAAE,MAAM,IAAI,SAAS,gBAAgB;AAAA,IAC1C,MAAM,EAAE,MAAM,IAAI,SAAS,6BAAc;AAAA,EAC7C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,mCAAmCA,OAAM,QAAQ,SAASD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC5F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,yCAAwC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACtF,eAAO,0DAA4D,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACpG,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,gBAAgB,OAAO,OAAO,mBAAgB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI,GAAG,KAAK;AAAA,QAC9G;AACA,eAAO,qCAAkC,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC3E;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,gBAAgB,OAAO,OAAO,mBAAgB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI,GAAG,KAAK;AAAA,QAC9G;AACA,eAAO,qCAAkC,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC3E;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,2CAAqC,OAAO,MAAM;AAC7D,YAAI,OAAO,WAAW;AAClB,iBAAO,4CAAsC,OAAO,MAAM;AAC9D,YAAI,OAAO,WAAW;AAClB,iBAAO,uDAAwC,OAAO,QAAQ;AAClE,YAAI,OAAO,WAAW,SAAS;AAC3B,iBAAO,gFAA8D,OAAO,OAAO;AAAA,QACvF;AACA,eAAO,gBAAgB,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC/D;AAAA,MACA,KAAK;AACD,eAAO,2CAAwCA,OAAM,OAAO;AAAA,MAChE,KAAK;AACD,eAAO,GAAGA,OAAM,KAAK,SAAS,IAAI,0BAA0B,kBAAkB,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACxH,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO;AAAA,MACX;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GAnHc;AAoHC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;ACrHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,iBAAc,MAAM,QAAQ;AAAA,IAC5C,MAAM,EAAE,MAAM,UAAU,MAAM,QAAQ;AAAA,IACtC,OAAO,EAAE,MAAM,kBAAY,MAAM,QAAQ;AAAA,IACzC,KAAK,EAAE,MAAM,kBAAY,MAAM,QAAQ;AAAA,EAC3C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,wBAAqBA,OAAM,QAAQ,aAAaD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAClF,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,wBAA0B,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACxE,eAAO,sCAA2C,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACnF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,gBAAgBA,OAAM,UAAU,QAAQ,SAAS,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,kBAAY;AACxI,eAAO,gBAAgBA,OAAM,UAAU,QAAQ,iBAAc,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC/F;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,gBAAgBA,OAAM,MAAM,SAAS,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC5G;AACA,eAAO,gBAAgBA,OAAM,MAAM,iBAAc,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACnF;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,4CAAyC,OAAO,MAAM;AACjE,YAAI,OAAO,WAAW;AAClB,iBAAO,8CAA2C,OAAO,MAAM;AACnE,YAAI,OAAO,WAAW;AAClB,iBAAO,sCAAmC,OAAO,QAAQ;AAC7D,YAAI,OAAO,WAAW;AAClB,iBAAO,uDAAiD,OAAO,OAAO;AAC1E,eAAO,GAAG,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAClD;AAAA,MACA,KAAK;AACD,eAAO,iDAA8CA,OAAM,OAAO;AAAA,MACtE,KAAK;AACD,eAAO,SAAMA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,gBAAgBA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,MAAW,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACxI,KAAK;AACD,eAAO,wBAAqBA,OAAM,MAAM;AAAA,MAC5C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,wBAAwBA,OAAM,MAAM;AAAA,MAC/C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA7Gc;AA8GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AC/GP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,iBAAc,MAAM,QAAQ;AAAA,IAC5C,MAAM,EAAE,MAAM,UAAU,MAAM,QAAQ;AAAA,IACtC,OAAO,EAAE,MAAM,kBAAY,MAAM,QAAQ;AAAA,IACzC,KAAK,EAAE,MAAM,kBAAY,MAAM,QAAQ;AAAA,EAC3C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,gCAA6BA,OAAM,QAAQ,aAAUD,YAAWC,OAAM,KAAK,CAAC;AAAA,MACvF,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,gCAAkC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAChF,eAAO,yDAA8D,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACtG,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,WAAM;AACpC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,4BAA4BA,OAAM,UAAU,WAAW,QAAQ,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AACvH,eAAO,4BAA4BA,OAAM,UAAU,WAAW,SAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACzG;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,WAAM;AACpC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,4BAA4BA,OAAM,MAAM,QAAQ,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACxG;AACA,eAAO,4BAA4BA,OAAM,MAAM,SAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC1F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,4CAAyC,OAAO,MAAM;AAAA,QACjE;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,8CAA2C,OAAO,MAAM;AACnE,YAAI,OAAO,WAAW;AAClB,iBAAO,sCAAmC,OAAO,QAAQ;AAC7D,YAAI,OAAO,WAAW;AAClB,iBAAO,mDAAgD,OAAO,OAAO;AACzE,eAAO,GAAG,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAClD;AAAA,MACA,KAAK;AACD,eAAO,iDAA8CA,OAAM,OAAO;AAAA,MACtE,KAAK;AACD,eAAO,SAAMA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,gBAAgBA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,MAAW,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACxI,KAAK;AACD,eAAO,wBAAqBA,OAAM,MAAM;AAAA,MAC5C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,wBAAwBA,OAAM,MAAM;AAAA,MAC/C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,gBAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,wCAAU,MAAM,iCAAQ;AAAA,IACxC,MAAM,EAAE,MAAM,wCAAU,MAAM,iCAAQ;AAAA,IACtC,OAAO,EAAE,MAAM,wCAAU,MAAM,iCAAQ;AAAA,IACvC,KAAK,EAAE,MAAM,wCAAU,MAAM,iCAAQ;AAAA,EACzC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,sFAAqBA,OAAM,QAAQ,oCAAWD,YAAWC,OAAM,KAAK,CAAC;AAAA;AAAA,MAEhF,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,sFAA0B,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACxE,eAAO,uKAA0C,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAClF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,gDAAaA,OAAM,UAAU,OAAO,4DAAe,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,UAAU;AACzH,eAAO,gDAAaA,OAAM,UAAU,OAAO,4DAAe,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC5F;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,0CAAYA,OAAM,MAAM,4DAAe,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC/F;AACA,eAAO,0CAAYA,OAAM,MAAM,4DAAe,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAChF;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,gKAAmC,OAAO,MAAM;AAC3D,YAAI,OAAO,WAAW;AAClB,iBAAO,uKAAqC,OAAO,MAAM;AAC7D,YAAI,OAAO,WAAW;AAClB,iBAAO,oJAAiC,OAAO,QAAQ;AAC3D,YAAI,OAAO,WAAW;AAClB,iBAAO,8LAAwC,OAAO,OAAO;AACjE,eAAO,GAAG,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAClD;AAAA,MACA,KAAK;AACD,eAAO,uKAAqCA,OAAM,OAAO;AAAA,MAC7D,KAAK;AACD,eAAO,2BAAOA,OAAM,KAAK,SAAS,IAAI,iBAAO,EAAE,yCAAWA,OAAM,KAAK,SAAS,IAAI,iBAAO,QAAG,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACtI,KAAK;AACD,eAAO,wEAAiBA,OAAM,MAAM;AAAA,MACxC,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,kEAAgBA,OAAM,MAAM;AAAA,MACvC;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,YAAY,MAAM,SAAS;AAAA,IAC3C,MAAM,EAAE,MAAM,QAAQ,MAAM,SAAS;AAAA,IACrC,OAAO,EAAE,MAAM,QAAQ,MAAM,SAAS;AAAA,IACtC,KAAK,EAAE,MAAM,QAAQ,MAAM,SAAS;AAAA,EACxC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,oDAAqCA,OAAM,QAAQ,0BAAoBD,YAAWC,OAAM,KAAK,CAAC;AAAA;AAAA,MAEzG,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,oDAA0C,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACxF,eAAO,8DAAiD,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACzF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,gBAAaA,OAAM,UAAU,aAAO,0BAAoB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,MAAM;AAC1H,eAAO,uCAA8BA,OAAM,UAAU,aAAO,iBAAc,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC5G;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,wCAA+BA,OAAM,MAAM,2BAAqB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACxH;AACA,eAAO,wCAA+BA,OAAM,MAAM,iBAAc,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAClG;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,8BAAwB,OAAO,MAAM;AAChD,YAAI,OAAO,WAAW;AAClB,iBAAO,8BAAwB,OAAO,MAAM;AAChD,YAAI,OAAO,WAAW;AAClB,iBAAO,8BAAwB,OAAO,QAAQ;AAClD,YAAI,OAAO,WAAW;AAClB,iBAAO,6BAAuB,OAAO,OAAO;AAChD,eAAO,qBAAe,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC9D;AAAA,MACA,KAAK;AACD,eAAO,8BAAqBA,OAAM,OAAO;AAAA,MAC7C,KAAK;AACD,eAAO,mBAAmBA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACpG,KAAK;AACD,eAAO,2BAAqBA,OAAM,MAAM;AAAA,MAC5C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,kCAAsBA,OAAM,MAAM;AAAA,MAC7C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,YAAY,MAAM,WAAW;AAAA,IAC7C,MAAM,EAAE,MAAM,QAAQ,MAAM,WAAW;AAAA,IACvC,OAAO,EAAE,MAAM,QAAQ,MAAM,WAAW;AAAA,IACxC,KAAK,EAAE,MAAM,QAAQ,MAAM,WAAW;AAAA,EAC1C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,iCAAiCA,OAAM,QAAQ,cAAcD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC/F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,iCAAsC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACpF,eAAO,mDAAwD,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAChG,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,6BAA6BA,OAAM,UAAU,OAAO,aAAa,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,QAAQ;AACrI,eAAO,6BAA6BA,OAAM,UAAU,OAAO,YAAY,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACzG;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,6BAA6BA,OAAM,MAAM,aAAa,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC9G;AACA,eAAO,6BAA6BA,OAAM,MAAM,YAAY,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC9F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,6CAA6C,OAAO,MAAM;AACrE,YAAI,OAAO,WAAW;AAClB,iBAAO,8CAA8C,OAAO,MAAM;AACtE,YAAI,OAAO,WAAW;AAClB,iBAAO,0CAA0C,OAAO,QAAQ;AACpE,YAAI,OAAO,WAAW;AAClB,iBAAO,yCAAyC,OAAO,OAAO;AAClE,eAAO,GAAG,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAClD;AAAA,MACA,KAAK;AACD,eAAO,2CAA2CA,OAAM,OAAO;AAAA,MACnE,KAAK;AACD,eAAO,wBAAwBA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACzG,KAAK;AACD,eAAO,wBAAwBA,OAAM,MAAM;AAAA,MAC/C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,wBAAwBA,OAAM,MAAM;AAAA,MAC/C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA7Gc;AA8GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AC/GP;AAAA;AAAA;AAAAG;AACO,IAAMC,cAAa,wBAAC,SAAS;AAChC,QAAM,IAAI,OAAO;AACjB,UAAQ,GAAG;AAAA,IACP,KAAK,UAAU;AACX,aAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,IACxC;AAAA,IACA,KAAK,UAAU;AACX,UAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,eAAO;AAAA,MACX;AACA,UAAI,SAAS,MAAM;AACf,eAAO;AAAA,MACX;AACA,UAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,eAAO,KAAK,YAAY;AAAA,MAC5B;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX,GAnB0B;AAoB1B,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,SAAS,MAAM,aAAU;AAAA,IACzC,MAAM,EAAE,MAAM,WAAQ,MAAM,aAAU;AAAA,IACtC,OAAO,EAAE,MAAM,SAAS,MAAM,aAAU;AAAA,IACxC,KAAK,EAAE,MAAM,SAAS,MAAM,aAAU;AAAA,EAC1C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,sCAA6BF,YAAWE,OAAM,KAAK,CAAC,+BAAsBA,OAAM,QAAQ;AAAA,MACnG,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,qCAAoC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAClF,eAAO,iDAAgD,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACxF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,8CAAkCA,OAAM,UAAU,OAAO,SAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,OAAO;AACrI,eAAO,8CAAkCA,OAAM,UAAU,OAAO,UAAO,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACzG;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,iDAAkCA,OAAM,MAAM,SAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC/G;AACA,eAAO,iDAAkCA,OAAM,MAAM,UAAO,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC9F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,oDAAwC,OAAO,MAAM;AAAA,QAChE;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,mDAAuC,OAAO,MAAM;AAC/D,YAAI,OAAO,WAAW;AAClB,iBAAO,mDAA0C,OAAO,QAAQ;AACpE,YAAI,OAAO,WAAW;AAClB,iBAAO,uDAA8C,OAAO,OAAO;AACvE,eAAO,SAAS,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACxD;AAAA,MACA,KAAK;AACD,eAAO,mDAA0CA,OAAM,OAAO;AAAA,MAClE,KAAK;AACD,eAAO,gBAAUA,OAAM,KAAK,SAAS,IAAI,cAAc,WAAW,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC5G,KAAK;AACD,eAAO,sBAAmBA,OAAM,MAAM;AAAA,MAC1C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,oBAAiBA,OAAM,MAAM;AAAA,MACxC;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA1Fc;AA2FC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaD,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAE;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,aAAa,MAAM,QAAQ;AAAA,IAC3C,MAAM,EAAE,MAAM,QAAQ,MAAM,QAAQ;AAAA,IACpC,OAAO,EAAE,MAAM,YAAY,MAAM,QAAQ;AAAA,IACzC,KAAK,EAAE,MAAM,YAAY,MAAM,QAAQ;AAAA,EAC3C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,4BAA4BA,OAAM,QAAQ,cAAcD,YAAWC,OAAM,KAAK,CAAC;AAAA;AAAA,MAE1F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,4BAAiC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC/E,eAAO,sCAA2C,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACnF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,kBAAkBA,OAAM,UAAU,QAAQ,eAAe,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,UAAU;AAC/H,eAAO,kBAAkBA,OAAM,UAAU,QAAQ,gBAAgB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACnG;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,mBAAmBA,OAAM,MAAM,eAAe,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACtG;AACA,eAAO,mBAAmBA,OAAM,MAAM,gBAAgB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACxF;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,0CAA0C,OAAO,MAAM;AAClE,YAAI,OAAO,WAAW;AAClB,iBAAO,2CAA2C,OAAO,MAAM;AACnE,YAAI,OAAO,WAAW;AAClB,iBAAO,uCAAuC,OAAO,QAAQ;AACjE,YAAI,OAAO,WAAW;AAClB,iBAAO,qDAAqD,OAAO,OAAO;AAC9E,eAAO,WAAW,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC1D;AAAA,MACA,KAAK;AACD,eAAO,iDAAiDA,OAAM,OAAO;AAAA,MACzE,KAAK;AACD,eAAO,QAAQA,OAAM,KAAK,SAAS,IAAI,MAAM,GAAG,mBAAmBA,OAAM,KAAK,SAAS,IAAI,MAAM,GAAG,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC9I,KAAK;AACD,eAAO,wBAAwBA,OAAM,MAAM;AAAA,MAC/C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,wBAAwBA,OAAM,MAAM;AAAA,MAC/C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,gBAAM,MAAM,qBAAM;AAAA,IAClC,MAAM,EAAE,MAAM,sBAAO,MAAM,qBAAM;AAAA,IACjC,OAAO,EAAE,MAAM,gBAAM,MAAM,qBAAM;AAAA,IACjC,KAAK,EAAE,MAAM,gBAAM,MAAM,qBAAM;AAAA,EACnC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,mCAAUA,OAAM,QAAQ,+DAAaD,YAAWC,OAAM,KAAK,CAAC;AAAA,MACvE,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,mCAAe,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC7D,eAAO,mCAAe,WAAWA,OAAM,QAAQ,QAAG,CAAC;AAAA,MACvD,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,mCAAU;AACxC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,yCAAWA,OAAM,UAAU,QAAG,SAAIA,OAAM,QAAQ,SAAS,CAAC,GAAG,OAAO,QAAQ,cAAI,GAAG,GAAG;AACjG,eAAO,yCAAWA,OAAM,UAAU,QAAG,SAAIA,OAAM,QAAQ,SAAS,CAAC,GAAG,GAAG;AAAA,MAC3E;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,mCAAU;AACxC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,yCAAWA,OAAM,MAAM,SAAIA,OAAM,QAAQ,SAAS,CAAC,GAAG,OAAO,IAAI,GAAG,GAAG;AAClF,eAAO,yCAAWA,OAAM,MAAM,SAAIA,OAAM,QAAQ,SAAS,CAAC,GAAG,GAAG;AAAA,MACpE;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,0CAAY,OAAO,MAAM;AACpC,YAAI,OAAO,WAAW;AAClB,iBAAO,0CAAY,OAAO,MAAM;AACpC,YAAI,OAAO,WAAW;AAClB,iBAAO,0CAAY,OAAO,QAAQ;AACtC,YAAI,OAAO,WAAW;AAClB,iBAAO,iEAAe,OAAO,OAAO;AACxC,eAAO,qBAAM,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACrD;AAAA,MACA,KAAK;AACD,eAAO,mCAAUA,OAAM,OAAO;AAAA,MAClC,KAAK;AACD,eAAO,+DAAaA,OAAM,KAAK,SAAS,IAAI,WAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,QAAG,CAAC;AAAA,MAC7F,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA5Gc;AA6GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AC9GP;AAAA;AAAA;AAAAG;AACO,IAAMC,cAAa,wBAAC,SAAS;AAChC,QAAM,IAAI,OAAO;AACjB,UAAQ,GAAG;AAAA,IACP,KAAK,UAAU;AACX,aAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,IACxC;AAAA,IACA,KAAK,UAAU;AACX,UAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,eAAO;AAAA,MACX;AACA,UAAI,SAAS,MAAM;AACf,eAAO;AAAA,MACX;AACA,UAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,eAAO,KAAK,YAAY;AAAA,MAC5B;AAAA,IACJ;AAAA,EACJ;AACA,QAAM,UAAU;AAAA,IACZ,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU;AAAA,EACd;AACA,SAAO,QAAQ,CAAC,KAAK;AACzB,GA3B0B;AA4B1B,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,8CAAW,MAAM,kFAAiB;AAAA,IAClD,MAAM,EAAE,MAAM,kCAAS,MAAM,kFAAiB;AAAA,IAC9C,OAAO,EAAE,MAAM,oDAAY,MAAM,kFAAiB;AAAA,IAClD,KAAK,EAAE,MAAM,oDAAY,MAAM,kFAAiB;AAAA,EACpD;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,mKAAiCA,OAAM,QAAQ,sDAAcF,YAAWE,OAAM,KAAK,CAAC;AAAA,MAC/F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,mKAAsC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACpF,eAAO,2NAAiD,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACzF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,iJAA8BA,OAAM,UAAU,oEAAa,IAAI,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AACtI,eAAO,iJAA8BA,OAAM,UAAU,oEAAa,6BAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC7G;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,6JAAgCA,OAAM,MAAM,IAAI,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACvH;AACA,eAAO,6JAAgCA,OAAM,MAAM,6BAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC9F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,iLAAqC,OAAO,MAAM;AAAA,QAC7D;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,mMAAwC,OAAO,MAAM;AAChE,YAAI,OAAO,WAAW;AAClB,iBAAO,iLAAqC,OAAO,QAAQ;AAC/D,YAAI,OAAO,WAAW;AAClB,iBAAO,yPAAiD,OAAO,OAAO;AAC1E,eAAO,oDAAY,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC3D;AAAA,MACA,KAAK;AACD,eAAO,4IAA8BA,OAAM,OAAO;AAAA,MACtD,KAAK;AACD,eAAO,kFAAiBA,OAAM,KAAK,SAAS,IAAI,uBAAQ,QAAG,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACrG,KAAK;AACD,eAAO,qGAAqBA,OAAM,MAAM;AAAA,MAC5C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,uHAAwBA,OAAM,MAAM;AAAA,MAC/C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA1Fc;AA2FC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaD,QAAM;AAAA,EACvB;AACJ;AAJO;;;ACxHP;AAAA;AAAA;AAAAE;;;ACAA;AAAA;AAAA;AAAAC;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,8CAAW,MAAM,uCAAS;AAAA,IAC1C,MAAM,EAAE,MAAM,gBAAM,MAAM,uCAAS;AAAA,IACnC,OAAO,EAAE,MAAM,4BAAQ,MAAM,uCAAS;AAAA,IACtC,KAAK,EAAE,MAAM,4BAAQ,MAAM,uCAAS;AAAA,EACxC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,6EAAsB;AAAA,MACtD;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,6NAAyCA,OAAM,QAAQ,yFAAmBD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC5G,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,6NAA8C,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC5F,eAAO,qPAAkD,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAC1F,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,yFAAmBA,OAAM,UAAU,gCAAO,IAAI,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,0BAAM;AACjH,eAAO,yFAAmBA,OAAM,UAAU,gCAAO,IAAI,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACxF;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,+FAAoBA,OAAM,MAAM,IAAI,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC7F;AACA,eAAO,+FAAoBA,OAAM,MAAM,IAAI,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC9E;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,sPAA8C,OAAO,MAAM;AAAA,QACtE;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,oOAA2C,OAAO,MAAM;AACnE,YAAI,OAAO,WAAW;AAClB,iBAAO,gMAAqC,OAAO,QAAQ;AAC/D,YAAI,OAAO,WAAW;AAClB,iBAAO,iWAA+D,OAAO,OAAO;AACxF,eAAO,wFAAkB,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACjE;AAAA,MACA,KAAK;AACD,eAAO,iNAAuCA,OAAM,OAAO;AAAA,MAC/D,KAAK;AACD,eAAO,0GAA0B,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACjE,KAAK;AACD,eAAO,wIAA0BA,OAAM,MAAM;AAAA,MACjD,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,4KAAgCA,OAAM,MAAM;AAAA,MACvD;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AD9GQ,SAAR,aAAoB;AACvB,SAAO,WAAG;AACd;AAFO;;;AEFP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,gBAAM,MAAM,UAAU;AAAA,IACtC,MAAM,EAAE,MAAM,sBAAO,MAAM,UAAU;AAAA,IACrC,OAAO,EAAE,MAAM,UAAK,MAAM,UAAU;AAAA,IACpC,KAAK,EAAE,MAAM,UAAK,MAAM,UAAU;AAAA,EACtC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,oEAAkBA,OAAM,QAAQ,qCAAYD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC9E,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,iDAAmB,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACjE,eAAO,oCAAgB,WAAWA,OAAM,QAAQ,eAAK,CAAC;AAAA,MAC1D,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,iBAAO;AACrC,cAAM,SAAS,QAAQ,iBAAO,0CAAY;AAC1C,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,cAAM,OAAO,QAAQ,QAAQ;AAC7B,YAAI;AACA,iBAAO,GAAGA,OAAM,UAAU,QAAG,2CAAaA,OAAM,QAAQ,SAAS,CAAC,GAAG,IAAI,IAAI,GAAG,GAAG,MAAM;AAC7F,eAAO,GAAGA,OAAM,UAAU,QAAG,2CAAaA,OAAM,QAAQ,SAAS,CAAC,IAAI,GAAG,GAAG,MAAM;AAAA,MACtF;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,iBAAO;AACrC,cAAM,SAAS,QAAQ,iBAAO,0CAAY;AAC1C,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,cAAM,OAAO,QAAQ,QAAQ;AAC7B,YAAI,QAAQ;AACR,iBAAO,GAAGA,OAAM,UAAU,QAAG,iDAAcA,OAAM,QAAQ,SAAS,CAAC,GAAG,IAAI,IAAI,GAAG,GAAG,MAAM;AAAA,QAC9F;AACA,eAAO,GAAGA,OAAM,UAAU,QAAG,iDAAcA,OAAM,QAAQ,SAAS,CAAC,IAAI,GAAG,GAAG,MAAM;AAAA,MACvF;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,2CAAa,OAAO,MAAM;AAAA,QACrC;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,2CAAa,OAAO,MAAM;AACrC,YAAI,OAAO,WAAW;AAClB,iBAAO,2CAAa,OAAO,QAAQ;AACvC,YAAI,OAAO,WAAW;AAClB,iBAAO,6DAAgB,OAAO,OAAO;AACzC,eAAO,sBAAO,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACtD;AAAA,MACA,KAAK;AACD,eAAO,oCAAWA,OAAM,OAAO;AAAA,MACnC,KAAK;AACD,eAAO,kDAAoB,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC3D,KAAK;AACD,eAAO,8BAAUA,OAAM,MAAM;AAAA,MACjC,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,8BAAUA,OAAM,MAAM;AAAA,MACjC;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GAlHc;AAmHC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;ACpHP;AAAA;AAAA;AAAAG;AACO,IAAMC,cAAa,wBAAC,SAAS;AAChC,QAAM,IAAI,OAAO;AACjB,SAAO,mBAAmB,GAAG,IAAI;AACrC,GAH0B;AAI1B,IAAM,qBAAqB,wBAAC,GAAG,OAAO,WAAc;AAChD,UAAQ,GAAG;AAAA,IACP,KAAK,UAAU;AACX,aAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,IACxC;AAAA,IACA,KAAK,UAAU;AACX,aAAO;AAAA,IACX;AAAA,IACA,KAAK,UAAU;AACX,aAAO;AAAA,IACX;AAAA,IACA,KAAK,WAAW;AACZ,aAAO;AAAA,IACX;AAAA,IACA,KAAK;AAAA,IACL,KAAK,QAAQ;AACT,aAAO;AAAA,IACX;AAAA,IACA,KAAK,YAAY;AACb,aAAO;AAAA,IACX;AAAA,IACA,KAAK,UAAU;AACX,aAAO;AAAA,IACX;AAAA,IACA,KAAK,UAAU;AACX,UAAI,SAAS;AACT,eAAO;AACX,UAAI,SAAS;AACT,eAAO;AACX,UAAI,MAAM,QAAQ,IAAI;AAClB,eAAO;AACX,UAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,eAAO,KAAK,YAAY;AAAA,MAC5B;AACA,aAAO;AAAA,IACX;AAAA;AAAA,IAEA,KAAK,QAAQ;AACT,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX,GA1C2B;AA2C3B,IAAM,2BAA2B,wBAAC,SAAS;AACvC,SAAO,KAAK,OAAO,CAAC,EAAE,YAAY,IAAI,KAAK,MAAM,CAAC;AACtD,GAFiC;AAGjC,SAAS,sBAAsBC,SAAQ;AACnC,QAAM,MAAM,KAAK,IAAIA,OAAM;AAC3B,QAAM,OAAO,MAAM;AACnB,QAAM,QAAQ,MAAM;AACpB,MAAK,SAAS,MAAM,SAAS,MAAO,SAAS;AACzC,WAAO;AACX,MAAI,SAAS;AACT,WAAO;AACX,SAAO;AACX;AATS;AAUT,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,MACA,MAAM;AAAA,QACF,SAAS;AAAA,UACL,WAAW;AAAA,UACX,cAAc;AAAA,QAClB;AAAA,QACA,QAAQ;AAAA,UACJ,WAAW;AAAA,UACX,cAAc;AAAA,QAClB;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,MACA,MAAM;AAAA,QACF,SAAS;AAAA,UACL,WAAW;AAAA,UACX,cAAc;AAAA,QAClB;AAAA,QACA,QAAQ;AAAA,UACJ,WAAW;AAAA,UACX,cAAc;AAAA,QAClB;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,MACA,MAAM;AAAA,QACF,SAAS;AAAA,UACL,WAAW;AAAA,UACX,cAAc;AAAA,QAClB;AAAA,QACA,QAAQ;AAAA,UACJ,WAAW;AAAA,UACX,cAAc;AAAA,QAClB;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,KAAK;AAAA,MACD,MAAM;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,MACA,MAAM;AAAA,QACF,SAAS;AAAA,UACL,WAAW;AAAA,UACX,cAAc;AAAA,QAClB;AAAA,QACA,QAAQ;AAAA,UACJ,WAAW;AAAA,UACX,cAAc;AAAA,QAClB;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,UAAU,QAAQ,UAAU,WAAW,gBAAgB;AAC5D,UAAM,SAAS,QAAQ,MAAM,KAAK;AAClC,QAAI,WAAW;AACX,aAAO;AACX,WAAO;AAAA,MACH,MAAM,OAAO,KAAK,QAAQ;AAAA,MAC1B,MAAM,OAAO,KAAK,cAAc,EAAE,YAAY,cAAc,cAAc;AAAA,IAC9E;AAAA,EACJ;AARS;AAST,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,gBAAgBH,YAAWG,OAAM,KAAK,CAAC,uBAAkB,mBAAmBA,OAAM,QAAQ,CAAC;AAAA,MACtG,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,qBAAqB,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACnE,eAAO,oCAA+B,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACvE,KAAK,WAAW;AACZ,cAAM,SAAS,mBAAmBA,OAAM,MAAM;AAC9C,cAAM,SAAS,UAAUA,OAAM,QAAQ,sBAAsB,OAAOA,OAAM,OAAO,CAAC,GAAGA,OAAM,aAAa,OAAO,SAAS;AACxH,YAAI,QAAQ;AACR,iBAAO,GAAG,yBAAyB,UAAUA,OAAM,UAAU,mBAAS,CAAC,IAAI,OAAO,IAAI,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,eAAU;AACnJ,cAAM,MAAMA,OAAM,YAAY,qBAAqB;AACnD,eAAO,GAAG,yBAAyB,UAAUA,OAAM,UAAU,mBAAS,CAAC,mBAAc,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,QAAQ,IAAI;AAAA,MACxI;AAAA,MACA,KAAK,aAAa;AACd,cAAM,SAAS,mBAAmBA,OAAM,MAAM;AAC9C,cAAM,SAAS,UAAUA,OAAM,QAAQ,sBAAsB,OAAOA,OAAM,OAAO,CAAC,GAAGA,OAAM,aAAa,OAAO,QAAQ;AACvH,YAAI,QAAQ;AACR,iBAAO,GAAG,yBAAyB,UAAUA,OAAM,UAAU,mBAAS,CAAC,IAAI,OAAO,IAAI,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,eAAU;AACnJ,cAAM,MAAMA,OAAM,YAAY,0BAAqB;AACnD,eAAO,GAAG,yBAAyB,UAAUA,OAAM,UAAU,mBAAS,CAAC,mBAAc,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,QAAQ,IAAI;AAAA,MACxI;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,uCAA6B,OAAO,MAAM;AAAA,QACrD;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,mCAA8B,OAAO,MAAM;AACtD,YAAI,OAAO,WAAW;AAClB,iBAAO,sCAA4B,OAAO,QAAQ;AACtD,YAAI,OAAO,WAAW;AAClB,iBAAO,gCAA2B,OAAO,OAAO;AACpD,eAAO,eAAe,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC9D;AAAA,MACA,KAAK;AACD,eAAO,mCAAyBA,OAAM,OAAO;AAAA,MACjD,KAAK;AACD,eAAO,kBAAaA,OAAM,KAAK,SAAS,IAAI,MAAM,IAAI,QAAQA,OAAM,KAAK,SAAS,IAAI,OAAO,IAAI,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC3I,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO;AAAA,MACX,KAAK,mBAAmB;AACpB,cAAM,SAAS,mBAAmBA,OAAM,MAAM;AAC9C,eAAO,GAAG,yBAAyB,UAAUA,OAAM,UAAU,mBAAS,CAAC;AAAA,MAC3E;AAAA,MACA;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GAnKc;AAoKC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaD,QAAM;AAAA,EACvB;AACJ;AAJO;;;ACjOP;AAAA;AAAA;AAAAE;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,kCAAS,MAAM,8CAAW;AAAA,IAC1C,MAAM,EAAE,MAAM,kCAAS,MAAM,8CAAW;AAAA,IACxC,OAAO,EAAE,MAAM,wCAAU,MAAM,8CAAW;AAAA,IAC1C,KAAK,EAAE,MAAM,wCAAU,MAAM,8CAAW;AAAA,EAC5C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,0HAA2BA,OAAM,QAAQ,gDAAaD,YAAWC,OAAM,KAAK,CAAC;AAAA;AAAA,MAExF,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,2BAAgC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC9E,eAAO,qKAAwC,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAChF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,4IAA8BA,OAAM,UAAU,wDAAW,oCAAW,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,kDAAU;AAC1I,eAAO,4IAA8BA,OAAM,UAAU,wDAAW,0CAAY,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC9G;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,gIAA4BA,OAAM,MAAM,oCAAW,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC3G;AACA,eAAO,gIAA4BA,OAAM,MAAM,0CAAY,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC7F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,+LAAyC,OAAO,MAAM;AAAA,QACjE;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,yLAAwC,OAAO,MAAM;AAChE,YAAI,OAAO,WAAW;AAClB,iBAAO,4KAAqC,OAAO,QAAQ;AAC/D,YAAI,OAAO,WAAW;AAClB,iBAAO,mOAA+C,OAAO,OAAO;AACxE,eAAO,WAAW,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC1D;AAAA,MACA,KAAK;AACD,eAAO,6KAAsCA,OAAM,OAAO;AAAA,MAC9D,KAAK;AACD,eAAO,GAAGA,OAAM,KAAK,SAAS,IAAI,8HAA0B,mGAAmB,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACzH,KAAK;AACD,eAAO,8EAAkBA,OAAM,MAAM;AAAA,MACzC,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,sGAAsBA,OAAM,MAAM;AAAA,MAC7C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA/Gc;AAgHC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;ACjHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,UAAU,MAAM,YAAY;AAAA,IAC5C,MAAM,EAAE,MAAM,QAAQ,MAAM,YAAY;AAAA,IACxC,OAAO,EAAE,MAAM,UAAU,MAAM,YAAY;AAAA,IAC3C,KAAK,EAAE,MAAM,UAAU,MAAM,YAAY;AAAA,EAC7C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,6BAA6BA,OAAM,QAAQ,cAAcD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC3F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,6BAAkC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAChF,eAAO,mDAAwD,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAChG,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,2BAA2BA,OAAM,UAAU,OAAO,IAAI,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,QAAQ;AACzI,eAAO,2BAA2BA,OAAM,UAAU,OAAO,WAAW,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACtG;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,2BAA2BA,OAAM,MAAM,IAAI,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAClH;AACA,eAAO,2BAA2BA,OAAM,MAAM,WAAW,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC3F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,2CAA2C,OAAO,MAAM;AACnE,YAAI,OAAO,WAAW;AAClB,iBAAO,4CAA4C,OAAO,MAAM;AACpE,YAAI,OAAO,WAAW;AAClB,iBAAO,wCAAwC,OAAO,QAAQ;AAClE,YAAI,OAAO,WAAW;AAClB,iBAAO,gDAAgD,OAAO,OAAO;AACzE,eAAO,GAAG,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAClD;AAAA,MACA,KAAK;AACD,eAAO,mCAAmCA,OAAM,OAAO;AAAA,MAC3D,KAAK;AACD,eAAO,yBAA8B,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACrE,KAAK;AACD,eAAO,yBAAyBA,OAAM,MAAM;AAAA,MAChD,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,yBAAyBA,OAAM,MAAM;AAAA,MAChD;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA7Gc;AA8GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AC/GP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,SAAS;AAAA,IACzB,MAAM,EAAE,MAAM,QAAQ;AAAA,IACtB,OAAO,EAAE,MAAM,YAAY;AAAA,IAC3B,KAAK,EAAE,MAAM,YAAY;AAAA,EAC7B;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,8BAA8BA,OAAM,QAAQ,aAAaD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC3F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,8BAAmC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACjF,eAAO,2CAA0C,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAClF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,yBAAyBA,OAAM,UAAU,QAAQ,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,WAAW;AAC5H,eAAO,yBAAyBA,OAAM,UAAU,QAAQ,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC9F;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,yBAAyBA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACjG;AACA,eAAO,yBAAyBA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAClF;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,8BAA8B,OAAO,MAAM;AAAA,QACtD;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,6BAA6B,OAAO,MAAM;AACrD,YAAI,OAAO,WAAW;AAClB,iBAAO,0BAA0B,OAAO,QAAQ;AACpD,YAAI,OAAO,WAAW;AAClB,iBAAO,kDAAkD,OAAO,OAAO;AAC3E,eAAO,aAAa,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC5D;AAAA,MACA,KAAK;AACD,eAAO,yCAAyCA,OAAM,OAAO;AAAA,MACjE,KAAK;AACD,eAAO,gBAAgBA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACjG,KAAK;AACD,eAAO,oBAAoBA,OAAM,MAAM;AAAA,MAC3C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,uBAAuBA,OAAM,MAAM;AAAA,MAC9C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,QAAQ,MAAM,UAAO;AAAA,IACrC,MAAM,EAAE,MAAM,SAAS,MAAM,UAAO;AAAA,IACpC,OAAO,EAAE,MAAM,aAAa,MAAM,iBAAc;AAAA,IAChD,KAAK,EAAE,MAAM,aAAa,MAAM,iBAAc;AAAA,EAClD;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,4BAA4BA,OAAM,QAAQ,UAAUD,YAAWC,OAAM,KAAK,CAAC;AAAA,MACtF,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,4BAAiC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC/E,eAAO,iCAAsC,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAC9E,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,0BAA0BA,OAAM,UAAU,OAAO,gBAAa,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,WAAW;AACrI,eAAO,0BAA0BA,OAAM,UAAU,OAAO,gBAAa,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACvG;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,0BAA0BA,OAAM,MAAM,gBAAa,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC3G;AACA,eAAO,0BAA0BA,OAAM,MAAM,gBAAa,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC5F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,qCAAkC,OAAO,MAAM;AAC1D,YAAI,OAAO,WAAW;AAClB,iBAAO,mCAAgC,OAAO,MAAM;AACxD,YAAI,OAAO,WAAW;AAClB,iBAAO,oCAAiC,OAAO,QAAQ;AAC3D,YAAI,OAAO,WAAW;AAClB,iBAAO,6CAAuC,OAAO,OAAO;AAChE,eAAO,WAAW,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC1D;AAAA,MACA,KAAK;AACD,eAAO,+CAAyCA,OAAM,OAAO;AAAA,MACjE,KAAK;AACD,eAAO,GAAGA,OAAM,KAAK,SAAS,IAAI,sBAAmB,kBAAe,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC9G,KAAK;AACD,eAAO,uBAAoBA,OAAM,MAAM;AAAA,MAC3C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,mBAAmBA,OAAM,MAAM;AAAA,MAC1C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA7Gc;AA8GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AC/GP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,QAAQ,MAAM,sBAAY;AAAA,IAC1C,MAAM,EAAE,MAAM,QAAQ,MAAM,sBAAY;AAAA,IACxC,OAAO,EAAE,MAAM,SAAS,MAAM,sBAAY;AAAA,IAC1C,KAAK,EAAE,MAAM,SAAS,MAAM,sBAAY;AAAA,EAC5C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,0BAAuBA,OAAM,QAAQ,iBAAYD,YAAWC,OAAM,KAAK,CAAC;AAAA;AAAA,MAEnF,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,0BAA4B,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC1E,eAAO,kCAAiC,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACzE,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,sBAAgBA,OAAM,UAAU,OAAO,KAAK,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,UAAU;AAClH,eAAO,sBAAgBA,OAAM,UAAU,OAAO,KAAK,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACrF;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,yBAAgBA,OAAM,MAAM,KAAK,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACzF;AACA,eAAO,yBAAgBA,OAAM,MAAM,KAAK,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC1E;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,oBAAiB,OAAO,MAAM;AACzC,YAAI,OAAO,WAAW;AAClB,iBAAO,oBAAiB,OAAO,MAAM;AACzC,YAAI,OAAO,WAAW;AAClB,iBAAO,oBAAiB,OAAO,QAAQ;AAC3C,YAAI,OAAO,WAAW;AAClB,iBAAO,mBAAgB,OAAO,OAAO;AACzC,eAAO,YAAS,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACxD;AAAA,MACA,KAAK;AACD,eAAO,uBAAeA,OAAM,OAAO;AAAA,MACvC,KAAK;AACD,eAAO,2BAAsBA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACvG,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,cAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,4BAAQ,MAAM,2BAAO;AAAA,IACrC,MAAM,EAAE,MAAM,kCAAS,MAAM,2BAAO;AAAA,IACpC,OAAO,EAAE,MAAM,4BAAQ,MAAM,2BAAO;AAAA,IACpC,KAAK,EAAE,MAAM,4BAAQ,MAAM,2BAAO;AAAA,EACtC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,qFAAoBA,OAAM,QAAQ,2CAAaD,YAAWC,OAAM,KAAK,CAAC;AAAA,MACjF,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW,GAAG;AAC3B,iBAAO,qFAAyB,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAAA,QACvE;AACA,eAAO,qHAAgC,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACxE,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,0CAAYA,OAAM,UAAU,gCAAO,6BAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,4CAAS;AAAA,QACjH;AACA,eAAO,0CAAYA,OAAM,UAAU,gCAAO,6BAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACrF;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,sDAAcA,OAAM,MAAM,6BAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC3F;AACA,eAAO,sDAAcA,OAAM,MAAM,6BAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC5E;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,iFAAqB,OAAO,MAAM;AAAA,QAC7C;AACA,YAAI,OAAO,WAAW,aAAa;AAC/B,iBAAO,iFAAqB,OAAO,MAAM;AAAA,QAC7C;AACA,YAAI,OAAO,WAAW,YAAY;AAC9B,iBAAO,0EAAmB,OAAO,QAAQ;AAAA,QAC7C;AACA,YAAI,OAAO,WAAW,SAAS;AAC3B,iBAAO,gFAAoB,OAAO,OAAO;AAAA,QAC7C;AACA,eAAO,GAAG,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAClD;AAAA,MACA,KAAK;AACD,eAAO,gFAAoBA,OAAM,OAAO;AAAA,MAC5C,KAAK;AACD,eAAO,4BAAQA,OAAM,KAAK,SAAS,IAAI,+CAAY,0BAAM,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACnG,KAAK;AACD,eAAO,kEAAgBA,OAAM,MAAM;AAAA,MACvC,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,kEAAgBA,OAAM,MAAM;AAAA,MACvC;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GAnHc;AAoHC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;ACrHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,aAAU,MAAM,YAAO;AAAA,IACvC,MAAM,EAAE,MAAM,aAAU,MAAM,YAAO;AAAA,IACrC,OAAO,EAAE,MAAM,gBAAa,MAAM,YAAO;AAAA,IACzC,KAAK,EAAE,MAAM,gBAAa,MAAM,YAAO;AAAA,EAC3C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,sDAA4CA,OAAM,QAAQ,eAAeD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC3G,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,sDAAiD,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC/F,eAAO,+DAA0D,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAClG,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,uDAAmCA,OAAM,UAAU,mBAAS,0BAAgB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,cAAW;AAAA,QACnJ;AACA,eAAO,6CAAmCA,OAAM,UAAU,mBAAS,6BAAmB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACxH;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,uDAAmCA,OAAM,UAAU,mBAAS,0BAAgB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,cAAW;AAAA,QACnJ;AACA,eAAO,6CAAmCA,OAAM,UAAU,mBAAS,6BAAmB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACxH;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,2EAAoD,OAAO,MAAM;AAC5E,YAAI,OAAO,WAAW;AAClB,iBAAO,+EAAmD,OAAO,MAAM;AAC3E,YAAI,OAAO,WAAW;AAClB,iBAAO,+DAA6C,OAAO,QAAQ;AACvE,YAAI,OAAO,WAAW;AAClB,iBAAO,yEAAuD,OAAO,OAAO;AAChF,eAAO,4BAAuB,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACtE;AAAA,MACA,KAAK;AACD,eAAO,sEAAkDA,OAAM,OAAO;AAAA,MAC1E,KAAK;AACD,eAAO,uBAAuBA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACxG,KAAK;AACD,eAAO,8BAAyBA,OAAM,MAAM;AAAA,MAChD,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,0CAA2BA,OAAM,MAAM;AAAA,MAClD;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,cAAc,MAAM,MAAM;AAAA,IAC1C,MAAM,EAAE,MAAM,SAAS,MAAM,MAAM;AAAA,IACnC,OAAO,EAAE,MAAM,SAAS,MAAM,MAAM;AAAA,IACpC,KAAK,EAAE,MAAM,SAAS,MAAM,MAAM;AAAA,EACtC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,8BAA2BA,OAAM,QAAQ,cAAcD,YAAWC,OAAM,KAAK,CAAC;AAAA,MACzF,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,iCAAmC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACjF,eAAO,6CAAyC,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACjF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,8BAA8BA,OAAM,UAAU,OAAO,YAAY,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,WAAW;AACxI,eAAO,8BAA8BA,OAAM,UAAU,OAAO,UAAU,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACxG;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,+BAA+BA,OAAM,MAAM,YAAY,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC/G;AACA,eAAO,+BAA+BA,OAAM,MAAM,UAAU,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC9F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,2CAAqC,OAAO,MAAM;AAC7D,YAAI,OAAO,WAAW;AAClB,iBAAO,yCAAsC,OAAO,MAAM;AAC9D,YAAI,OAAO,WAAW;AAClB,iBAAO,oCAAiC,OAAO,QAAQ;AAC3D,YAAI,OAAO,WAAW;AAClB,iBAAO,qDAA+C,OAAO,OAAO;AACxE,eAAO,GAAG,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAClD;AAAA,MACA,KAAK;AACD,eAAO,kDAAyCA,OAAM,OAAO;AAAA,MACjE,KAAK;AACD,eAAO,QAAQA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,gBAAgBA,OAAM,KAAK,SAAS,IAAI,MAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACzI,KAAK;AACD,eAAO,wBAAqBA,OAAM,MAAM;AAAA,MAC5C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,wBAAqBA,OAAM,MAAM;AAAA,MAC5C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA7Gc;AA8GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AC/GP;AAAA;AAAA;AAAAG;AACA,SAAS,iBAAiBC,QAAO,KAAK,KAAK,MAAM;AAC7C,QAAM,WAAW,KAAK,IAAIA,MAAK;AAC/B,QAAM,YAAY,WAAW;AAC7B,QAAM,gBAAgB,WAAW;AACjC,MAAI,iBAAiB,MAAM,iBAAiB,IAAI;AAC5C,WAAO;AAAA,EACX;AACA,MAAI,cAAc,GAAG;AACjB,WAAO;AAAA,EACX;AACA,MAAI,aAAa,KAAK,aAAa,GAAG;AAClC,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAdS;AAeT,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,MACA,MAAM;AAAA,IACV;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,MACA,MAAM;AAAA,IACV;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,MACA,MAAM;AAAA,IACV;AAAA,IACA,KAAK;AAAA,MACD,MAAM;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,MACA,MAAM;AAAA,IACV;AAAA,EACJ;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,qIAA4BA,OAAM,QAAQ,sDAAcD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC1F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,qIAAiC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC/E,eAAO,6LAA4C,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACpF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,gBAAM,WAAW,OAAOA,OAAM,OAAO;AACrC,gBAAM,OAAO,iBAAiB,UAAU,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK,OAAO,KAAK,IAAI;AAC1F,iBAAO,sNAA4CA,OAAM,UAAU,kDAAU,kEAAgB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,IAAI;AAAA,QACvI;AACA,eAAO,sNAA4CA,OAAM,UAAU,kDAAU,mCAAU,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACzH;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,gBAAM,WAAW,OAAOA,OAAM,OAAO;AACrC,gBAAM,OAAO,iBAAiB,UAAU,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK,OAAO,KAAK,IAAI;AAC1F,iBAAO,kOAA8CA,OAAM,MAAM,kEAAgB,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,IAAI;AAAA,QAC3H;AACA,eAAO,kOAA8CA,OAAM,MAAM,mCAAU,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC7G;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,oMAAyC,OAAO,MAAM;AACjE,YAAI,OAAO,WAAW;AAClB,iBAAO,4NAA6C,OAAO,MAAM;AACrE,YAAI,OAAO,WAAW;AAClB,iBAAO,uLAAsC,OAAO,QAAQ;AAChE,YAAI,OAAO,WAAW;AAClB,iBAAO,qQAAmD,OAAO,OAAO;AAC5E,eAAO,oDAAY,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC3D;AAAA,MACA,KAAK;AACD,eAAO,6LAAuCA,OAAM,OAAO;AAAA,MAC/D,KAAK;AACD,eAAO,2EAAeA,OAAM,KAAK,SAAS,IAAI,iBAAO,cAAI,4BAAQA,OAAM,KAAK,SAAS,IAAI,WAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC3I,KAAK;AACD,eAAO,oFAAmBA,OAAM,MAAM;AAAA,MAC1C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,4GAAuBA,OAAM,MAAM;AAAA,MAC9C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Ic;AA+IC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AC/JP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,UAAU,MAAM,QAAQ;AAAA,IACxC,MAAM,EAAE,MAAM,UAAU,MAAM,QAAQ;AAAA,IACtC,OAAO,EAAE,MAAM,aAAa,MAAM,QAAQ;AAAA,IAC1C,KAAK,EAAE,MAAM,aAAa,MAAM,QAAQ;AAAA,EAC5C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,qCAAgCA,OAAM,QAAQ,aAAaD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC7F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,qCAAqC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACnF,eAAO,uDAAkD,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAC1F,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,sCAAiCA,OAAM,UAAU,UAAU,UAAU,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,WAAW;AAC5I,eAAO,sCAAiCA,OAAM,UAAU,UAAU,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACxG;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,sCAAiCA,OAAM,MAAM,UAAU,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC/G;AACA,eAAO,sCAAiCA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC1F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,0CAAqC,OAAO,MAAM;AAAA,QAC7D;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,2CAAsC,OAAO,MAAM;AAC9D,YAAI,OAAO,WAAW;AAClB,iBAAO,mCAAmC,OAAO,QAAQ;AAC7D,YAAI,OAAO,WAAW;AAClB,iBAAO,yCAAyC,OAAO,OAAO;AAClE,eAAO,cAAc,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC7D;AAAA,MACA,KAAK;AACD,eAAO,sDAA4CA,OAAM,OAAO;AAAA,MACpE,KAAK;AACD,eAAO,cAAcA,OAAM,KAAK,SAAS,IAAI,kBAAa,aAAQ,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC5G,KAAK;AACD,eAAO,2BAAsBA,OAAM,MAAM;AAAA,MAC7C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,yBAAyBA,OAAM,MAAM;AAAA,MAChD;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,UAAU,MAAM,SAAS;AAAA,IACzC,MAAM,EAAE,MAAM,SAAS,MAAM,SAAS;AAAA,IACtC,OAAO,EAAE,MAAM,UAAU,MAAM,mBAAgB;AAAA,IAC/C,KAAK,EAAE,MAAM,UAAU,MAAM,mBAAgB;AAAA,EACjD;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,sCAAgCA,OAAM,QAAQ,UAAUD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC1F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,sCAAqC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACnF,eAAO,wCAAuC,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAC/E,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,oCAA2BA,OAAM,UAAU,WAAQ,WAAW,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,SAAS;AAAA,QACnI;AACA,eAAO,mCAA0BA,OAAM,UAAU,WAAQ,WAAW,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACtG;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,oCAA2BA,OAAM,UAAU,WAAQ,WAAW,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACtH;AACA,eAAO,oCAA2BA,OAAM,UAAU,WAAQ,WAAW,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACvG;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,6CAAoC,OAAO,MAAM;AAAA,QAC5D;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,0CAAoC,OAAO,MAAM;AAC5D,YAAI,OAAO,WAAW;AAClB,iBAAO,6CAAoC,OAAO,QAAQ;AAC9D,YAAI,OAAO,WAAW;AAClB,iBAAO,mDAA0C,OAAO,OAAO;AACnE,eAAO,cAAc,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC7D;AAAA,MACA,KAAK;AACD,eAAO,8CAA2CA,OAAM,OAAO;AAAA,MACnE,KAAK;AACD,eAAO,GAAGA,OAAM,KAAK,SAAS,IAAI,sBAAmB,iBAAc,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC7G,KAAK;AACD,eAAO,oBAAoBA,OAAM,UAAU,WAAQ;AAAA,MACvD,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,uBAAoBA,OAAM,UAAU,WAAQ;AAAA,MACvD;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA/Gc;AAgHC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;ACjHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,4EAAgB,MAAM,sHAAuB;AAAA,IAC7D,MAAM,EAAE,MAAM,0DAAa,MAAM,sHAAuB;AAAA,IACxD,OAAO,EAAE,MAAM,gEAAc,MAAM,sHAAuB;AAAA,IAC1D,KAAK,EAAE,MAAM,gEAAc,MAAM,sHAAuB;AAAA,EAC5D;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,wEAAiB;AAAA,MACjD;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,uMAAuCA,OAAM,QAAQ,wEAAiBD,YAAWC,OAAM,KAAK,CAAC;AAAA,MACxG,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,uMAA4C,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC1F,eAAO,mNAA8C,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACtF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,2LAAqCA,OAAM,UAAU,4CAAS,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,8DAAY;AAAA,QAC1I;AACA,eAAO,2LAAqCA,OAAM,UAAU,4CAAS,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC3G;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,uMAAuCA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC/G;AACA,eAAO,uMAAuCA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAChG;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,6DAAgB,OAAO,MAAM;AACxC,YAAI,OAAO,WAAW;AAClB,iBAAO,6DAAgB,OAAO,MAAM;AACxC,YAAI,OAAO,WAAW;AAClB,iBAAO,6DAAgB,OAAO,QAAQ;AAC1C,YAAI,OAAO,WAAW;AAClB,iBAAO,4DAAe,OAAO,OAAO;AACxC,eAAO,kCAAS,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACxD;AAAA,MACA,KAAK;AACD,eAAO,sDAAcA,OAAM,OAAO;AAAA,MACtC,KAAK;AACD,eAAO,uHAAwBA,OAAM,KAAK,SAAS,IAAI,uBAAQ,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC3G,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,oDAAY,MAAM,iCAAQ;AAAA,IAC1C,MAAM,EAAE,MAAM,4BAAQ,MAAM,iCAAQ;AAAA,IACpC,OAAO,EAAE,MAAM,wCAAU,MAAM,iCAAQ;AAAA,IACvC,KAAK,EAAE,MAAM,wCAAU,MAAM,iCAAQ;AAAA,EACzC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,mFAAuB;AAAA,MACvD;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,oLAAmCA,OAAM,QAAQ,2DAAcD,YAAWC,OAAM,KAAK,CAAC;AAAA,MACjG,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,8HAA+B,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC7E,eAAO,sMAA2C,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACnF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,+CAAY;AAC1C,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,2DAAcA,OAAM,UAAU,oBAAK,kCAAS,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,sCAAQ;AACjH,eAAO,2DAAcA,OAAM,UAAU,oBAAK,kCAAS,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACtF;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,2DAAc;AAC5C,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,mFAAkBA,OAAM,MAAM,kCAAS,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAChG;AACA,eAAO,mFAAkBA,OAAM,MAAM,kCAAS,GAAG,IAAIA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACjF;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,2OAA6C,OAAO,MAAM;AAAA,QACrE;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,qOAA4C,OAAO,MAAM;AACpE,YAAI,OAAO,WAAW;AAClB,iBAAO,qLAAoC,OAAO,QAAQ;AAC9D,YAAI,OAAO,WAAW;AAClB,iBAAO,sPAA8C,OAAO,OAAO;AACvE,eAAO,qGAAqB,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACpE;AAAA,MACA,KAAK;AACD,eAAO,gPAA6CA,OAAM,OAAO;AAAA,MACrE,KAAK;AACD,eAAO,iHAA4B,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACnE,KAAK;AACD,eAAO,oGAAoBA,OAAM,MAAM;AAAA,MAC3C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,gHAAsBA,OAAM,MAAM;AAAA,MAC7C;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAG;AACO,IAAMC,cAAa,wBAAC,SAAS;AAChC,QAAM,IAAI,OAAO;AACjB,UAAQ,GAAG;AAAA,IACP,KAAK,UAAU;AACX,aAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,IACxC;AAAA,IACA,KAAK,UAAU;AACX,UAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,eAAO;AAAA,MACX;AACA,UAAI,SAAS,MAAM;AACf,eAAO;AAAA,MACX;AACA,UAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,eAAO,KAAK,YAAY;AAAA,MAC5B;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX,GAnB0B;AAoB1B,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,YAAY,MAAM,cAAS;AAAA,IAC3C,MAAM,EAAE,MAAM,QAAQ,MAAM,cAAS;AAAA,IACrC,OAAO,EAAE,MAAM,eAAO,MAAM,cAAS;AAAA,IACrC,KAAK,EAAE,MAAM,eAAO,MAAM,cAAS;AAAA,EACvC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,oCAA4BA,OAAM,QAAQ,iBAAYF,YAAWE,OAAM,KAAK,CAAC;AAAA,MACxF,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,oCAAiC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC/E,eAAO,4EAAuD,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAC/F,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,gCAAuBA,OAAM,UAAU,YAAO,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,aAAK;AACnH,eAAO,gCAAuBA,OAAM,UAAU,YAAO,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC3F;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,mCAAuBA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAC/F,eAAO,mCAAuBA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAChF;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,uBAAoB,OAAO,MAAM;AAC5C,YAAI,OAAO,WAAW;AAClB,iBAAO,uBAAoB,OAAO,MAAM;AAC5C,YAAI,OAAO,WAAW;AAClB,iBAAO,uBAAoB,OAAO,QAAQ;AAC9C,YAAI,OAAO,WAAW;AAClB,iBAAO,sBAAmB,OAAO,OAAO;AAC5C,eAAO,eAAY,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC3D;AAAA,MACA,KAAK;AACD,eAAO,0BAAkBA,OAAM,OAAO;AAAA,MAC1C,KAAK;AACD,eAAO,0BAAqBA,OAAM,KAAK,SAAS,IAAI,QAAQ,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACxG,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GAxFc;AAyFC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaD,QAAM;AAAA,EACvB;AACJ;AAJO;;;AC9GP;AAAA;AAAA;AAAAE;;;ACAA;AAAA;AAAA;AAAAC;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,oDAAY,MAAM,uCAAS;AAAA,IAC3C,MAAM,EAAE,MAAM,wCAAU,MAAM,uCAAS;AAAA,IACvC,OAAO,EAAE,MAAM,0DAAa,MAAM,uCAAS;AAAA,IAC3C,KAAK,EAAE,MAAM,0DAAa,MAAM,uCAAS;AAAA,EAC7C;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,kMAAuCA,OAAM,QAAQ,sDAAcD,YAAWC,OAAM,KAAK,CAAC;AAAA;AAAA,MAErG,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,kMAA4C,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC1F,eAAO,mMAA6C,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACrF,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,+JAAkCA,OAAM,UAAU,kDAAU,IAAI,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,wDAAW;AACtJ,eAAO,+JAAkCA,OAAM,UAAU,kDAAU,6BAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC9G;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,mJAAgCA,OAAM,MAAM,IAAI,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACvH;AACA,eAAO,mJAAgCA,OAAM,MAAM,6BAAS,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC9F;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,4NAA6C,OAAO,MAAM;AACrE,YAAI,OAAO,WAAW;AAClB,iBAAO,oPAAiD,OAAO,MAAM;AACzE,YAAI,OAAO,WAAW;AAClB,iBAAO,mMAAwC,OAAO,QAAQ;AAClE,YAAI,OAAO,WAAW;AAClB,iBAAO,qQAAmD,OAAO,OAAO;AAC5E,eAAO,4EAAgB,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAC/D;AAAA,MACA,KAAK;AACD,eAAO,qNAA2CA,OAAM,OAAO;AAAA,MACnE,KAAK;AACD,eAAO,0GAAqBA,OAAM,KAAK,SAAS,IAAI,WAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MACtG,KAAK;AACD,eAAO,4GAAuBA,OAAM,MAAM;AAAA,MAC9C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,8HAA0BA,OAAM,MAAM;AAAA,MACjD;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AD9GQ,SAAR,aAAoB;AACvB,SAAO,WAAG;AACd;AAFO;;;AEFP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,4BAAQ,MAAM,2BAAO;AAAA,IACrC,MAAM,EAAE,MAAM,kCAAS,MAAM,2BAAO;AAAA,IACpC,OAAO,EAAE,MAAM,kCAAS,MAAM,2BAAO;AAAA,IACrC,KAAK,EAAE,MAAM,kCAAS,MAAM,2BAAO;AAAA,EACvC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,iDAAcA,OAAM,QAAQ,4DAAeD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC7E,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,iDAAmB,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACjE,eAAO,gDAAkB,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAC1D,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,0CAAYA,OAAM,UAAU,gCAAO,iBAAO,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,gCAAO;AAC7G,eAAO,0CAAYA,OAAM,UAAU,gCAAO,iBAAO,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACnF;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,sDAAcA,OAAM,MAAM,iBAAO,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACzF;AACA,eAAO,sDAAcA,OAAM,MAAM,iBAAO,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC1E;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,uDAAe,OAAO,MAAM;AAAA,QACvC;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,uDAAe,OAAO,MAAM;AACvC,YAAI,OAAO,WAAW;AAClB,iBAAO,uDAAe,OAAO,QAAQ;AACzC,YAAI,OAAO,WAAW;AAClB,iBAAO,qFAAoB,OAAO,OAAO;AAC7C,eAAO,sBAAO,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACtD;AAAA,MACA,KAAK;AACD,eAAO,gDAAaA,OAAM,OAAO;AAAA,MACrC,KAAK;AACD,eAAO,oFAAmBA,OAAM,KAAK,SAAS,IAAI,WAAM,EAAE,KAAU,WAAWA,OAAM,MAAM,SAAI,CAAC;AAAA,MACpG,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,iBAAS,MAAM,QAAK;AAAA,IACpC,MAAM,EAAE,MAAM,QAAQ,MAAM,QAAK;AAAA,IACjC,OAAO,EAAE,MAAM,qBAAW,MAAM,QAAK;AAAA,IACrC,KAAK,EAAE,MAAM,qBAAW,MAAM,QAAK;AAAA,EACvC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,sEAAkCA,OAAM,QAAQ,mCAAeD,YAAWC,OAAM,KAAK,CAAC;AAAA,MACjG,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,sEAAuC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACrF,eAAO,wGAA8D,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MACtG,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,uCAAqBA,OAAM,UAAU,iBAAS,IAAI,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,mBAAS;AACtI,eAAO,uCAAqBA,OAAM,UAAU,iBAAS,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC3F;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,uCAAqBA,OAAM,MAAM,IAAI,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QAC5G;AACA,eAAO,uCAAqBA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC9E;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,qFAA0C,OAAO,MAAM;AAClE,YAAI,OAAO,WAAW;AAClB,iBAAO,+EAA2C,OAAO,MAAM;AACnE,YAAI,OAAO,WAAW;AAClB,iBAAO,iEAAqC,OAAO,QAAQ;AAC/D,YAAI,OAAO,WAAW;AAClB,iBAAO,+EAAyC,OAAO,OAAO;AAClE,eAAO,GAAG,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MAClD;AAAA,MACA,KAAK;AACD,eAAO,gFAAuCA,OAAM,OAAO;AAAA,MAC/D,KAAK;AACD,eAAO,6DAAmC,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC1E,KAAK;AACD,eAAO,2CAA2BA,OAAM,MAAM;AAAA,MAClD,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,mDAA8BA,OAAM,MAAM;AAAA,MACrD;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA7Gc;AA8GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AC/GP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,gBAAM,MAAM,eAAK;AAAA,IACjC,MAAM,EAAE,MAAM,gBAAM,MAAM,eAAK;AAAA,IAC/B,OAAO,EAAE,MAAM,UAAK,MAAM,eAAK;AAAA,IAC/B,KAAK,EAAE,MAAM,UAAK,MAAM,eAAK;AAAA,EACjC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,4BAAa;AAAA,MAC7C;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,8CAAWA,OAAM,QAAQ,kCAASD,YAAWC,OAAM,KAAK,CAAC;AAAA,MACpE,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,8CAAgB,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAC9D,eAAO,sEAAoB,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAC5D,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,8CAAWA,OAAM,UAAU,QAAG,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,oBAAK;AACnG,eAAO,8CAAWA,OAAM,UAAU,QAAG,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC3E;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,8CAAWA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACnF;AACA,eAAO,8CAAWA,OAAM,MAAM,IAAI,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACpE;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,2DAAc,OAAO,MAAM;AACtC,YAAI,OAAO,WAAW;AAClB,iBAAO,2DAAc,OAAO,MAAM;AACtC,YAAI,OAAO,WAAW;AAClB,iBAAO,iEAAe,OAAO,QAAQ;AACzC,YAAI,OAAO,WAAW;AAClB,iBAAO,8FAAmB,OAAO,OAAO;AAC5C,eAAO,eAAK,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACpD;AAAA,MACA,KAAK;AACD,eAAO,oDAAYA,OAAM,OAAO;AAAA,MACpC,KAAK;AACD,eAAO,8CAAqB,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC5D,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA7Gc;AA8GC,SAAR,gBAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AC/GP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,gBAAM,MAAM,eAAK;AAAA,IACjC,MAAM,EAAE,MAAM,sBAAO,MAAM,eAAK;AAAA,IAChC,OAAO,EAAE,MAAM,gBAAM,MAAM,eAAK;AAAA,IAChC,KAAK,EAAE,MAAM,gBAAM,MAAM,eAAK;AAAA,EAClC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,gEAAcA,OAAM,QAAQ,4BAAQD,YAAWC,OAAM,KAAK,CAAC;AAAA,MACtE,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,gEAAmB,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AACjE,eAAO,8FAAwB,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAChE,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,8CAAWA,OAAM,UAAU,QAAG,iBAAO,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,QAAQ,oBAAK;AACtG,eAAO,8CAAWA,OAAM,UAAU,QAAG,iBAAO,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MAC9E;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI,QAAQ;AACR,iBAAO,8CAAWA,OAAM,MAAM,iBAAO,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC,IAAI,OAAO,IAAI;AAAA,QACtF;AACA,eAAO,8CAAWA,OAAM,MAAM,iBAAO,GAAG,GAAGA,OAAM,QAAQ,SAAS,CAAC;AAAA,MACvE;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW,eAAe;AACjC,iBAAO,2DAAc,OAAO,MAAM;AAAA,QACtC;AACA,YAAI,OAAO,WAAW;AAClB,iBAAO,2DAAc,OAAO,MAAM;AACtC,YAAI,OAAO,WAAW;AAClB,iBAAO,iEAAe,OAAO,QAAQ;AACzC,YAAI,OAAO,WAAW;AAClB,iBAAO,4EAAgB,OAAO,OAAO;AACzC,eAAO,sBAAO,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACtD;AAAA,MACA,KAAK;AACD,eAAO,0DAAaA,OAAM,OAAO;AAAA,MACrC,KAAK;AACD,eAAO,6CAAUA,OAAM,KAAK,SAAS,IAAI,WAAM,EAAE,SAAS,WAAWA,OAAM,MAAM,QAAG,CAAC;AAAA,MACzF,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,GAAGA,OAAM,MAAM;AAAA,MAC1B;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA9Gc;AA+GC,SAAR,gBAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AChHP;AAAA;AAAA;AAAAG;AACA,IAAMC,UAAQ,6BAAM;AAChB,QAAM,UAAU;AAAA,IACZ,QAAQ,EAAE,MAAM,UAAO,MAAM,QAAK;AAAA,IAClC,MAAM,EAAE,MAAM,SAAS,MAAM,QAAK;AAAA,IAClC,OAAO,EAAE,MAAM,QAAQ,MAAM,QAAK;AAAA,IAClC,KAAK,EAAE,MAAM,QAAQ,MAAM,QAAK;AAAA,EACpC;AACA,WAAS,UAAU,QAAQ;AACvB,WAAO,QAAQ,MAAM,KAAK;AAAA,EAC9B;AAFS;AAGT,QAAMC,cAAa,wBAAC,SAAS;AACzB,UAAM,IAAI,OAAO;AACjB,YAAQ,GAAG;AAAA,MACP,KAAK,UAAU;AACX,eAAO,OAAO,MAAM,IAAI,IAAI,QAAQ;AAAA,MACxC;AAAA,MACA,KAAK,UAAU;AACX,YAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,MAAM;AACf,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,eAAe,IAAI,MAAM,OAAO,aAAa,KAAK,aAAa;AACtE,iBAAO,KAAK,YAAY;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX,GAnBmB;AAoBnB,QAAM,QAAQ;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,kBAAkB;AAAA,EACtB;AACA,SAAO,CAACC,WAAU;AACd,YAAQA,OAAM,MAAM;AAAA,MAChB,KAAK;AACD,eAAO,gEAA+BA,OAAM,QAAQ,+BAAeD,YAAWC,OAAM,KAAK,CAAC;AAAA,MAC9F,KAAK;AACD,YAAIA,OAAM,OAAO,WAAW;AACxB,iBAAO,gEAAoC,mBAAmBA,OAAM,OAAO,CAAC,CAAC,CAAC;AAClF,eAAO,wEAAqC,WAAWA,OAAM,QAAQ,GAAG,CAAC;AAAA,MAC7E,KAAK,WAAW;AACZ,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,kEAA+BA,OAAM,UAAU,KAAK,IAAI,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,OAAO,IAAI,OAAO,IAAI;AACpH,eAAO,4DAA4B,GAAG,GAAGA,OAAM,OAAO;AAAA,MAC1D;AAAA,MACA,KAAK,aAAa;AACd,cAAM,MAAMA,OAAM,YAAY,OAAO;AACrC,cAAM,SAAS,UAAUA,OAAM,MAAM;AACrC,YAAI;AACA,iBAAO,sDAA6BA,OAAM,MAAM,IAAI,OAAO,IAAI,IAAI,GAAG,GAAGA,OAAM,OAAO,IAAI,OAAO,IAAI;AACzG,eAAO,gDAA0B,GAAG,GAAGA,OAAM,OAAO;AAAA,MACxD;AAAA,MACA,KAAK,kBAAkB;AACnB,cAAM,SAASA;AACf,YAAI,OAAO,WAAW;AAClB,iBAAO,4HAAsC,OAAO,MAAM;AAC9D,YAAI,OAAO,WAAW;AAClB,iBAAO,yGAAoC,OAAO,MAAM;AAC5D,YAAI,OAAO,WAAW;AAClB,iBAAO,oFAA4B,OAAO,QAAQ;AACtD,YAAI,OAAO,WAAW;AAClB,iBAAO,+GAAqC,OAAO,OAAO;AAC9D,eAAO,uBAAU,MAAM,OAAO,MAAM,KAAKA,OAAM,MAAM;AAAA,MACzD;AAAA,MACA,KAAK;AACD,eAAO,8GAA0CA,OAAM,OAAO;AAAA,MAClE,KAAK;AACD,eAAO,4CAAsB,WAAWA,OAAM,MAAM,IAAI,CAAC;AAAA,MAC7D,KAAK;AACD,eAAO,mDAAqBA,OAAM,MAAM;AAAA,MAC5C,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,qCAAkBA,OAAM,MAAM;AAAA,MACzC;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AACJ,GA5Gc;AA6GC,SAAR,aAAoB;AACvB,SAAO;AAAA,IACH,aAAaF,QAAM;AAAA,EACvB;AACJ;AAJO;;;AC9GP;AAAA;AAAA;AAAAG;AAAO,IAAM,UAAU,OAAO,WAAW;AAClC,IAAM,SAAS,OAAO,UAAU;AAChC,IAAM,eAAN,MAAmB;AAAA,EAF1B,OAE0B;AAAA;AAAA;AAAA,EACtB,cAAc;AACV,SAAK,OAAO,oBAAI,QAAQ;AACxB,SAAK,SAAS,oBAAI,IAAI;AAAA,EAC1B;AAAA,EACA,IAAI,WAAW,OAAO;AAClB,UAAM,OAAO,MAAM,CAAC;AACpB,SAAK,KAAK,IAAI,QAAQ,IAAI;AAC1B,QAAI,QAAQ,OAAO,SAAS,YAAY,QAAQ,MAAM;AAClD,UAAI,KAAK,OAAO,IAAI,KAAK,EAAE,GAAG;AAC1B,cAAM,IAAI,MAAM,MAAM,KAAK,EAAE,iCAAiC;AAAA,MAClE;AACA,WAAK,OAAO,IAAI,KAAK,IAAI,MAAM;AAAA,IACnC;AACA,WAAO;AAAA,EACX;AAAA,EACA,QAAQ;AACJ,SAAK,OAAO,oBAAI,QAAQ;AACxB,SAAK,SAAS,oBAAI,IAAI;AACtB,WAAO;AAAA,EACX;AAAA,EACA,OAAO,QAAQ;AACX,UAAM,OAAO,KAAK,KAAK,IAAI,MAAM;AACjC,QAAI,QAAQ,OAAO,SAAS,YAAY,QAAQ,MAAM;AAClD,WAAK,OAAO,OAAO,KAAK,EAAE;AAAA,IAC9B;AACA,SAAK,KAAK,OAAO,MAAM;AACvB,WAAO;AAAA,EACX;AAAA,EACA,IAAI,QAAQ;AAGR,UAAM,IAAI,OAAO,KAAK;AACtB,QAAI,GAAG;AACH,YAAM,KAAK,EAAE,GAAI,KAAK,IAAI,CAAC,KAAK,CAAC,EAAG;AACpC,aAAO,GAAG;AACV,YAAM,IAAI,EAAE,GAAG,IAAI,GAAG,KAAK,KAAK,IAAI,MAAM,EAAE;AAC5C,aAAO,OAAO,KAAK,CAAC,EAAE,SAAS,IAAI;AAAA,IACvC;AACA,WAAO,KAAK,KAAK,IAAI,MAAM;AAAA,EAC/B;AAAA,EACA,IAAI,QAAQ;AACR,WAAO,KAAK,KAAK,IAAI,MAAM;AAAA,EAC/B;AACJ;AAEO,SAAS,WAAW;AACvB,SAAO,IAAI,aAAa;AAC5B;AAFgB;AAGT,IAAM,iBAA+B,yBAAS;;;ACnDrD;AAAA;AAAA;AAAAC;AAGO,SAAS,QAAQC,QAAO,QAAQ;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AALgB;AAMT,SAAS,eAAeA,QAAO,QAAQ;AAC1C,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,OAAOA,QAAO,QAAQ;AAClC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,MAAMA,QAAO,QAAQ;AACjC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,MAAMA,QAAO,QAAQ;AACjC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,QAAQA,QAAO,QAAQ;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,SAAS;AAAA,IACT,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AATgB;AAUT,SAAS,QAAQA,QAAO,QAAQ;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,SAAS;AAAA,IACT,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AATgB;AAUT,SAAS,QAAQA,QAAO,QAAQ;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,SAAS;AAAA,IACT,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AATgB;AAUT,SAAS,KAAKA,QAAO,QAAQ;AAChC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAASC,QAAOD,QAAO,QAAQ;AAClC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB,OAAAC,SAAA;AAST,SAAS,QAAQD,QAAO,QAAQ;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,MAAMA,QAAO,QAAQ;AACjC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,OAAOA,QAAO,QAAQ;AAClC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,MAAMA,QAAO,QAAQ;AACjC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,KAAKA,QAAO,QAAQ;AAChC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,OAAOA,QAAO,QAAQ;AAClC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,MAAMA,QAAO,QAAQ;AACjC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,MAAMA,QAAO,QAAQ;AACjC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,QAAQA,QAAO,QAAQ;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,QAAQA,QAAO,QAAQ;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,QAAQA,QAAO,QAAQ;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,WAAWA,QAAO,QAAQ;AACtC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,MAAMA,QAAO,QAAQ;AACjC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,KAAKA,QAAO,QAAQ;AAChC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,IAAM,gBAAgB;AAAA,EACzB,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,aAAa;AAAA,EACb,aAAa;AACjB;AACO,SAAS,aAAaA,QAAO,QAAQ;AACxC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,WAAW;AAAA,IACX,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAVgB;AAWT,SAAS,SAASA,QAAO,QAAQ;AACpC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAPgB;AAQT,SAAS,SAASA,QAAO,QAAQ;AACpC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,WAAW;AAAA,IACX,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,aAAaA,QAAO,QAAQ;AACxC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAPgB;AAQT,SAAS,QAAQA,QAAO,QAAQ;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,eAAeA,QAAO,QAAQ;AAC1C,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ,CAAC;AAAA,IACT,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAPgB;AAQT,SAAS,KAAKA,QAAO,QAAQ;AAChC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,SAASA,QAAO,QAAQ;AACpC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,SAASA,QAAO,QAAQ;AACpC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,OAAOA,QAAO,QAAQ;AAClC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,QAAQA,QAAO,QAAQ;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,SAASA,QAAO,QAAQ;AACpC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AALgB;AAMT,SAAS,gBAAgBA,QAAO,QAAQ;AAC3C,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,QAAQA,QAAO,QAAQ;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AALgB;AAMT,SAAS,eAAeA,QAAO,QAAQ;AAC1C,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,OAAOA,QAAO,QAAQ;AAClC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,QAAQA,QAAO,QAAQ;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,SAAS,QAAQA,QAAO,QAAQ;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AALgB;AAMT,SAASE,YAAWF,QAAO,QAAQ;AACtC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AALgB,OAAAE,aAAA;AAMT,SAASC,OAAMH,QAAO,QAAQ;AACjC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AALgB,OAAAG,QAAA;AAMT,SAAS,KAAKH,QAAO;AACxB,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,EACV,CAAC;AACL;AAJgB;AAKT,SAAS,SAASA,QAAO;AAC5B,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,EACV,CAAC;AACL;AAJgB;AAKT,SAAS,OAAOA,QAAO,QAAQ;AAClC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AALgB;AAMT,SAAS,MAAMA,QAAO,QAAQ;AACjC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AALgB;AAMT,SAAS,MAAMA,QAAO,QAAQ;AACjC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AALgB;AAMT,SAAS,aAAaA,QAAO,QAAQ;AACxC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,KAAKA,QAAO,QAAQ;AAChC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AALgB;AAMT,SAAS,IAAI,OAAO,QAAQ;AAC/B,SAAO,IAAW,kBAAkB;AAAA,IAChC,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,IACA,WAAW;AAAA,EACf,CAAC;AACL;AAPgB;AAQT,SAAS,KAAK,OAAO,QAAQ;AAChC,SAAO,IAAW,kBAAkB;AAAA,IAChC,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,IACA,WAAW;AAAA,EACf,CAAC;AACL;AAPgB;AAWT,SAAS,IAAI,OAAO,QAAQ;AAC/B,SAAO,IAAW,qBAAqB;AAAA,IACnC,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,IACA,WAAW;AAAA,EACf,CAAC;AACL;AAPgB;AAQT,SAAS,KAAK,OAAO,QAAQ;AAChC,SAAO,IAAW,qBAAqB;AAAA,IACnC,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,IACA,WAAW;AAAA,EACf,CAAC;AACL;AAPgB;AAWT,SAAS,UAAU,QAAQ;AAC9B,SAAO,IAAI,GAAG,MAAM;AACxB;AAFgB;AAIT,SAAS,UAAU,QAAQ;AAC9B,SAAO,IAAI,GAAG,MAAM;AACxB;AAFgB;AAIT,SAAS,aAAa,QAAQ;AACjC,SAAO,KAAK,GAAG,MAAM;AACzB;AAFgB;AAIT,SAAS,aAAa,QAAQ;AACjC,SAAO,KAAK,GAAG,MAAM;AACzB;AAFgB;AAGT,SAAS,YAAY,OAAO,QAAQ;AACvC,SAAO,IAAW,oBAAoB;AAAA,IAClC,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,EACJ,CAAC;AACL;AANgB;AAOT,SAAS,SAAS,SAAS,QAAQ;AACtC,SAAO,IAAW,iBAAiB;AAAA,IAC/B,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,EACJ,CAAC;AACL;AANgB;AAOT,SAAS,SAAS,SAAS,QAAQ;AACtC,SAAO,IAAW,iBAAiB;AAAA,IAC/B,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,EACJ,CAAC;AACL;AANgB;AAOT,SAAS,MAAM,MAAM,QAAQ;AAChC,SAAO,IAAW,oBAAoB;AAAA,IAClC,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,EACJ,CAAC;AACL;AANgB;AAOT,SAAS,WAAW,SAAS,QAAQ;AACxC,QAAM,KAAK,IAAW,mBAAmB;AAAA,IACrC,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AAPgB;AAQT,SAAS,WAAW,SAAS,QAAQ;AACxC,SAAO,IAAW,mBAAmB;AAAA,IACjC,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,EACJ,CAAC;AACL;AANgB;AAOT,SAAS,QAAQ,QAAQ,QAAQ;AACpC,SAAO,IAAW,sBAAsB;AAAA,IACpC,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,EACJ,CAAC;AACL;AANgB;AAOT,SAAS,OAAO,SAAS,QAAQ;AACpC,SAAO,IAAW,eAAe;AAAA,IAC7B,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,EACJ,CAAC;AACL;AAPgB;AAQT,SAAS,WAAW,QAAQ;AAC/B,SAAO,IAAW,mBAAmB;AAAA,IACjC,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,WAAW,QAAQ;AAC/B,SAAO,IAAW,mBAAmB;AAAA,IACjC,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,UAAU,UAAU,QAAQ;AACxC,SAAO,IAAW,kBAAkB;AAAA,IAChC,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,EACJ,CAAC;AACL;AAPgB;AAQT,SAAS,YAAY,QAAQ,QAAQ;AACxC,SAAO,IAAW,oBAAoB;AAAA,IAClC,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,EACJ,CAAC;AACL;AAPgB;AAQT,SAAS,UAAU,QAAQ,QAAQ;AACtC,SAAO,IAAW,kBAAkB;AAAA,IAChC,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAQ,gBAAgB,MAAM;AAAA,IAC9B;AAAA,EACJ,CAAC;AACL;AAPgB;AAQT,SAAS,UAAU,UAAU,QAAQ,QAAQ;AAChD,SAAO,IAAW,kBAAkB;AAAA,IAChC,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAPgB;AAQT,SAAS,MAAM,OAAO,QAAQ;AACjC,SAAO,IAAW,kBAAkB;AAAA,IAChC,OAAO;AAAA,IACP,MAAM;AAAA,IACN,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,WAAW,IAAI;AAC3B,SAAO,IAAW,mBAAmB;AAAA,IACjC,OAAO;AAAA,IACP;AAAA,EACJ,CAAC;AACL;AALgB;AAOT,SAAS,WAAW,MAAM;AAC7B,SAAO,WAAW,CAAC,UAAU,MAAM,UAAU,IAAI,CAAC;AACtD;AAFgB;AAIT,SAAS,QAAQ;AACpB,SAAO,WAAW,CAAC,UAAU,MAAM,KAAK,CAAC;AAC7C;AAFgB;AAIT,SAAS,eAAe;AAC3B,SAAO,WAAW,CAAC,UAAU,MAAM,YAAY,CAAC;AACpD;AAFgB;AAIT,SAAS,eAAe;AAC3B,SAAO,WAAW,CAAC,UAAU,MAAM,YAAY,CAAC;AACpD;AAFgB;AAGT,SAAS,OAAOI,QAAO,SAAS,QAAQ;AAC3C,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA;AAAA;AAAA;AAAA,IAIA,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AATgB;AAUT,SAAS,OAAOA,QAAO,SAAS,QAAQ;AAC3C,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,IACA,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,oBAAoBA,QAAO,eAAe,SAAS,QAAQ;AACvE,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAPgB;AAQT,SAAS,cAAcA,QAAO,MAAM,OAAO;AAC9C,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,IACA;AAAA,EACJ,CAAC;AACL;AANgB;AAYT,SAAS,OAAOA,QAAO,OAAO,eAAe,SAAS;AACzD,QAAM,UAAU,yBAAiC;AACjD,QAAM,SAAS,UAAU,UAAU;AACnC,QAAM,OAAO,UAAU,gBAAgB;AACvC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAVgB;AAWT,SAAS,QAAQA,QAAO,SAAS,WAAW,QAAQ;AACvD,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAPgB;AAQT,SAAS,KAAKA,QAAO,SAAS,WAAW,QAAQ;AACpD,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAPgB;AAQT,SAAS,KAAKA,QAAO,WAAW,QAAQ;AAC3C,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,IACA,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,MAAMA,QAAO,QAAQ,QAAQ;AACzC,QAAM,UAAU,MAAM,QAAQ,MAAM,IAAI,OAAO,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI;AAYxF,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,IACA,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAlBgB;AA0BT,SAAS,YAAYA,QAAO,SAAS,QAAQ;AAChD,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,IACA,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,SAASA,QAAO,OAAO,QAAQ;AAC3C,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,QAAQ,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAAA,IAC7C,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,MAAMA,QAAO,QAAQ;AACjC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AALgB;AAMT,SAAS,WAAWA,QAAO,IAAI;AAClC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,WAAW;AAAA,EACf,CAAC;AACL;AALgB;AAMT,SAAS,UAAUA,QAAO,WAAW;AACxC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,EACJ,CAAC;AACL;AALgB;AAMT,SAAS,UAAUA,QAAO,WAAW;AACxC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,EACJ,CAAC;AACL;AALgB;AAMT,SAAS,SAASA,QAAO,WAAW,cAAc;AACrD,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,IACA,IAAI,eAAe;AACf,aAAO,OAAO,iBAAiB,aAAa,aAAa,IAAS,aAAa,YAAY;AAAA,IAC/F;AAAA,EACJ,CAAC;AACL;AARgB;AAST,SAAS,aAAaA,QAAO,WAAW,QAAQ;AACnD,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,IACA,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,SAASA,QAAO,WAAW;AACvC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,EACJ,CAAC;AACL;AALgB;AAMT,SAAS,OAAOA,QAAO,WAAW,YAAY;AACjD,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,IACA,YAAa,OAAO,eAAe,aAAa,aAAa,MAAM;AAAA,EACvE,CAAC;AACL;AANgB;AAOT,SAAS,MAAMA,QAAO,KAAK,KAAK;AACnC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN,IAAI;AAAA,IACJ;AAAA,EACJ,CAAC;AACL;AANgB;AAOT,SAAS,UAAUA,QAAO,WAAW;AACxC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,EACJ,CAAC;AACL;AALgB;AAMT,SAAS,iBAAiBA,QAAO,OAAO,QAAQ;AACnD,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,IACA,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,SAAS,MAAMA,QAAO,QAAQ;AACjC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,EACJ,CAAC;AACL;AALgB;AAMT,SAAS,SAASA,QAAO,WAAW;AACvC,SAAO,IAAIA,OAAM;AAAA,IACb,MAAM;AAAA,IACN;AAAA,EACJ,CAAC;AACL;AALgB;AAMT,SAAS,QAAQA,QAAO,IAAI,SAAS;AACxC,QAAM,OAAY,gBAAgB,OAAO;AACzC,OAAK,UAAU,KAAK,QAAQ;AAC5B,QAAM,SAAS,IAAIA,OAAM;AAAA,IACrB,MAAM;AAAA,IACN,OAAO;AAAA,IACP;AAAA,IACA,GAAG;AAAA,EACP,CAAC;AACD,SAAO;AACX;AAVgB;AAYT,SAAS,QAAQA,QAAO,IAAI,SAAS;AACxC,QAAM,SAAS,IAAIA,OAAM;AAAA,IACrB,MAAM;AAAA,IACN,OAAO;AAAA,IACP;AAAA,IACA,GAAQ,gBAAgB,OAAO;AAAA,EACnC,CAAC;AACD,SAAO;AACX;AARgB;AAST,SAAS,aAAa,IAAI;AAC7B,QAAM,KAAK,OAAO,CAAC,YAAY;AAC3B,YAAQ,WAAW,CAACC,WAAU;AAC1B,UAAI,OAAOA,WAAU,UAAU;AAC3B,gBAAQ,OAAO,KAAU,MAAMA,QAAO,QAAQ,OAAO,GAAG,KAAK,GAAG,CAAC;AAAA,MACrE,OACK;AAED,cAAM,SAASA;AACf,YAAI,OAAO;AACP,iBAAO,WAAW;AACtB,eAAO,SAAS,OAAO,OAAO;AAC9B,eAAO,UAAU,OAAO,QAAQ,QAAQ;AACxC,eAAO,SAAS,OAAO,OAAO;AAC9B,eAAO,aAAa,OAAO,WAAW,CAAC,GAAG,KAAK,IAAI;AACnD,gBAAQ,OAAO,KAAU,MAAM,MAAM,CAAC;AAAA,MAC1C;AAAA,IACJ;AACA,WAAO,GAAG,QAAQ,OAAO,OAAO;AAAA,EACpC,CAAC;AACD,SAAO;AACX;AArBgB;AAsBT,SAAS,OAAO,IAAI,QAAQ;AAC/B,QAAM,KAAK,IAAW,UAAU;AAAA,IAC5B,OAAO;AAAA,IACP,GAAQ,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACD,KAAG,KAAK,QAAQ;AAChB,SAAO;AACX;AAPgB;AAQT,SAAS,YAAY,SAAS,SAAS;AAC1C,QAAM,SAAc,gBAAgB,OAAO;AAC3C,MAAI,cAAc,OAAO,UAAU,CAAC,QAAQ,KAAK,OAAO,MAAM,KAAK,SAAS;AAC5E,MAAI,aAAa,OAAO,SAAS,CAAC,SAAS,KAAK,MAAM,OAAO,KAAK,UAAU;AAC5E,MAAI,OAAO,SAAS,aAAa;AAC7B,kBAAc,YAAY,IAAI,CAAC,MAAO,OAAO,MAAM,WAAW,EAAE,YAAY,IAAI,CAAE;AAClF,iBAAa,WAAW,IAAI,CAAC,MAAO,OAAO,MAAM,WAAW,EAAE,YAAY,IAAI,CAAE;AAAA,EACpF;AACA,QAAM,YAAY,IAAI,IAAI,WAAW;AACrC,QAAM,WAAW,IAAI,IAAI,UAAU;AACnC,QAAM,SAAS,QAAQ,SAAiB;AACxC,QAAM,WAAW,QAAQ,WAAmB;AAC5C,QAAM,UAAU,QAAQ,UAAkB;AAC1C,QAAM,eAAe,IAAI,QAAQ,EAAE,MAAM,UAAU,OAAO,OAAO,MAAM,CAAC;AACxE,QAAM,gBAAgB,IAAI,SAAS,EAAE,MAAM,WAAW,OAAO,OAAO,MAAM,CAAC;AAC3E,QAAMC,SAAQ,IAAI,OAAO;AAAA,IACrB,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,WAAY,wBAAC,OAAO,YAAY;AAC5B,UAAI,OAAO;AACX,UAAI,OAAO,SAAS;AAChB,eAAO,KAAK,YAAY;AAC5B,UAAI,UAAU,IAAI,IAAI,GAAG;AACrB,eAAO;AAAA,MACX,WACS,SAAS,IAAI,IAAI,GAAG;AACzB,eAAO;AAAA,MACX,OACK;AACD,gBAAQ,OAAO,KAAK;AAAA,UAChB,MAAM;AAAA,UACN,UAAU;AAAA,UACV,QAAQ,CAAC,GAAG,WAAW,GAAG,QAAQ;AAAA,UAClC,OAAO,QAAQ;AAAA,UACf,MAAMA;AAAA,UACN,UAAU;AAAA,QACd,CAAC;AACD,eAAO,CAAC;AAAA,MACZ;AAAA,IACJ,GArBY;AAAA,IAsBZ,kBAAmB,wBAAC,OAAO,aAAa;AACpC,UAAI,UAAU,MAAM;AAChB,eAAO,YAAY,CAAC,KAAK;AAAA,MAC7B,OACK;AACD,eAAO,WAAW,CAAC,KAAK;AAAA,MAC5B;AAAA,IACJ,GAPmB;AAAA,IAQnB,OAAO,OAAO;AAAA,EAClB,CAAC;AACD,SAAOA;AACX;AApDgB;AAqDT,SAAS,cAAcF,QAAO,QAAQ,WAAW,UAAU,CAAC,GAAG;AAClE,QAAM,SAAc,gBAAgB,OAAO;AAC3C,QAAM,MAAM;AAAA,IACR,GAAQ,gBAAgB,OAAO;AAAA,IAC/B,OAAO;AAAA,IACP,MAAM;AAAA,IACN;AAAA,IACA,IAAI,OAAO,cAAc,aAAa,YAAY,CAAC,QAAQ,UAAU,KAAK,GAAG;AAAA,IAC7E,GAAG;AAAA,EACP;AACA,MAAI,qBAAqB,QAAQ;AAC7B,QAAI,UAAU;AAAA,EAClB;AACA,QAAM,OAAO,IAAIA,OAAM,GAAG;AAC1B,SAAO;AACX;AAfgB;;;AC74BhB;AAAA;AAAA;AAAAG;AAEO,IAAM,sBAAN,MAA0B;AAAA,EAFjC,OAEiC;AAAA;AAAA;AAAA,EAC7B,YAAY,QAAQ;AAChB,SAAK,UAAU;AACf,SAAK,mBAAmB,QAAQ,YAAY;AAC5C,SAAK,SAAS,QAAQ,UAAU;AAChC,SAAK,kBAAkB,QAAQ,mBAAmB;AAClD,SAAK,WAAW,QAAQ,aAAa,MAAM;AAAA,IAAE;AAC7C,SAAK,KAAK,QAAQ,MAAM;AACxB,SAAK,OAAO,oBAAI,IAAI;AAAA,EACxB;AAAA,EACA,QAAQ,QAAQ,UAAU,EAAE,MAAM,CAAC,GAAG,YAAY,CAAC,EAAE,GAAG;AACpD,QAAI;AACJ,UAAM,MAAM,OAAO,KAAK;AACxB,UAAM,YAAY;AAAA,MACd,MAAM;AAAA,MACN,KAAK;AAAA,MACL,UAAU;AAAA,MACV,aAAa;AAAA,MACb,OAAO;AAAA;AAAA,IACX;AAEA,UAAM,OAAO,KAAK,KAAK,IAAI,MAAM;AACjC,QAAI,MAAM;AACN,WAAK;AAEL,YAAM,UAAU,QAAQ,WAAW,SAAS,MAAM;AAClD,UAAI,SAAS;AACT,aAAK,QAAQ,QAAQ;AAAA,MACzB;AACA,aAAO,KAAK;AAAA,IAChB;AAEA,UAAM,SAAS,EAAE,QAAQ,CAAC,GAAG,OAAO,GAAG,OAAO,QAAW,MAAM,QAAQ,KAAK;AAC5E,SAAK,KAAK,IAAI,QAAQ,MAAM;AAE5B,UAAM,iBAAiB,OAAO,KAAK,eAAe;AAClD,QAAI,gBAAgB;AAChB,aAAO,SAAS;AAAA,IACpB,OACK;AACD,YAAM,SAAS;AAAA,QACX,GAAG;AAAA,QACH,YAAY,CAAC,GAAG,QAAQ,YAAY,MAAM;AAAA,QAC1C,MAAM,QAAQ;AAAA,MAClB;AACA,YAAM,SAAS,OAAO,KAAK;AAC3B,UAAI,QAAQ;AAER,eAAO,MAAM;AACb,aAAK,QAAQ,QAAQ,MAAM;AAC3B,aAAK,KAAK,IAAI,MAAM,EAAE,WAAW;AAAA,MACrC,OACK;AACD,cAAM,QAAQ,OAAO;AACrB,gBAAQ,IAAI,MAAM;AAAA,UACd,KAAK,UAAU;AACX,kBAAMC,QAAO;AACb,YAAAA,MAAK,OAAO;AACZ,kBAAM,EAAE,SAAS,SAAS,QAAQ,UAAU,gBAAgB,IAAI,OAAO,KAClE;AACL,gBAAI,OAAO,YAAY;AACnB,cAAAA,MAAK,YAAY;AACrB,gBAAI,OAAO,YAAY;AACnB,cAAAA,MAAK,YAAY;AAErB,gBAAI,QAAQ;AACR,cAAAA,MAAK,SAAS,UAAU,MAAM,KAAK;AACnC,kBAAIA,MAAK,WAAW;AAChB,uBAAOA,MAAK;AAAA,YACpB;AACA,gBAAI;AACA,cAAAA,MAAK,kBAAkB;AAC3B,gBAAI,YAAY,SAAS,OAAO,GAAG;AAC/B,oBAAM,UAAU,CAAC,GAAG,QAAQ;AAC5B,kBAAI,QAAQ,WAAW;AACnB,gBAAAA,MAAK,UAAU,QAAQ,CAAC,EAAE;AAAA,uBACrB,QAAQ,SAAS,GAAG;AACzB,uBAAO,OAAO,QAAQ;AAAA,kBAClB,GAAG,QAAQ,IAAI,CAAC,WAAW;AAAA,oBACvB,GAAI,KAAK,WAAW,aAAa,KAAK,WAAW,aAAa,KAAK,WAAW,gBACxE,EAAE,MAAM,SAAS,IACjB,CAAC;AAAA,oBACP,SAAS,MAAM;AAAA,kBACnB,EAAE;AAAA,gBACN;AAAA,cACJ;AAAA,YACJ;AACA;AAAA,UACJ;AAAA,UACA,KAAK,UAAU;AACX,kBAAMA,QAAO;AACb,kBAAM,EAAE,SAAS,SAAS,QAAQ,YAAY,kBAAkB,iBAAiB,IAAI,OAAO,KAAK;AACjG,gBAAI,OAAO,WAAW,YAAY,OAAO,SAAS,KAAK;AACnD,cAAAA,MAAK,OAAO;AAAA;AAEZ,cAAAA,MAAK,OAAO;AAChB,gBAAI,OAAO,qBAAqB,UAAU;AACtC,kBAAI,KAAK,WAAW,aAAa,KAAK,WAAW,eAAe;AAC5D,gBAAAA,MAAK,UAAU;AACf,gBAAAA,MAAK,mBAAmB;AAAA,cAC5B,OACK;AACD,gBAAAA,MAAK,mBAAmB;AAAA,cAC5B;AAAA,YACJ;AACA,gBAAI,OAAO,YAAY,UAAU;AAC7B,cAAAA,MAAK,UAAU;AACf,kBAAI,OAAO,qBAAqB,YAAY,KAAK,WAAW,WAAW;AACnE,oBAAI,oBAAoB;AACpB,yBAAOA,MAAK;AAAA;AAEZ,yBAAOA,MAAK;AAAA,cACpB;AAAA,YACJ;AACA,gBAAI,OAAO,qBAAqB,UAAU;AACtC,kBAAI,KAAK,WAAW,aAAa,KAAK,WAAW,eAAe;AAC5D,gBAAAA,MAAK,UAAU;AACf,gBAAAA,MAAK,mBAAmB;AAAA,cAC5B,OACK;AACD,gBAAAA,MAAK,mBAAmB;AAAA,cAC5B;AAAA,YACJ;AACA,gBAAI,OAAO,YAAY,UAAU;AAC7B,cAAAA,MAAK,UAAU;AACf,kBAAI,OAAO,qBAAqB,YAAY,KAAK,WAAW,WAAW;AACnE,oBAAI,oBAAoB;AACpB,yBAAOA,MAAK;AAAA;AAEZ,yBAAOA,MAAK;AAAA,cACpB;AAAA,YACJ;AACA,gBAAI,OAAO,eAAe;AACtB,cAAAA,MAAK,aAAa;AACtB;AAAA,UACJ;AAAA,UACA,KAAK,WAAW;AACZ,kBAAMA,QAAO;AACb,YAAAA,MAAK,OAAO;AACZ;AAAA,UACJ;AAAA,UACA,KAAK,UAAU;AACX,gBAAI,KAAK,oBAAoB,SAAS;AAClC,oBAAM,IAAI,MAAM,6CAA6C;AAAA,YACjE;AACA;AAAA,UACJ;AAAA,UACA,KAAK,UAAU;AACX,gBAAI,KAAK,oBAAoB,SAAS;AAClC,oBAAM,IAAI,MAAM,8CAA8C;AAAA,YAClE;AACA;AAAA,UACJ;AAAA,UACA,KAAK,QAAQ;AACT,gBAAI,KAAK,WAAW,eAAe;AAC/B,oBAAM,OAAO;AACb,oBAAM,WAAW;AACjB,oBAAM,OAAO,CAAC,IAAI;AAAA,YACtB;AAEI,oBAAM,OAAO;AACjB;AAAA,UACJ;AAAA,UACA,KAAK,OAAO;AACR;AAAA,UACJ;AAAA,UACA,KAAK,WAAW;AACZ;AAAA,UACJ;AAAA,UACA,KAAK,aAAa;AACd,gBAAI,KAAK,oBAAoB,SAAS;AAClC,oBAAM,IAAI,MAAM,gDAAgD;AAAA,YACpE;AACA;AAAA,UACJ;AAAA,UACA,KAAK,QAAQ;AACT,gBAAI,KAAK,oBAAoB,SAAS;AAClC,oBAAM,IAAI,MAAM,2CAA2C;AAAA,YAC/D;AACA;AAAA,UACJ;AAAA,UACA,KAAK,SAAS;AACV,kBAAM,MAAM,CAAC;AACb;AAAA,UACJ;AAAA,UACA,KAAK,QAAQ;AACT,gBAAI,KAAK,oBAAoB,SAAS;AAClC,oBAAM,IAAI,MAAM,2CAA2C;AAAA,YAC/D;AACA;AAAA,UACJ;AAAA,UACA,KAAK,SAAS;AACV,kBAAMA,QAAO;AACb,kBAAM,EAAE,SAAS,QAAQ,IAAI,OAAO,KAAK;AACzC,gBAAI,OAAO,YAAY;AACnB,cAAAA,MAAK,WAAW;AACpB,gBAAI,OAAO,YAAY;AACnB,cAAAA,MAAK,WAAW;AACpB,YAAAA,MAAK,OAAO;AACZ,YAAAA,MAAK,QAAQ,KAAK,QAAQ,IAAI,SAAS,EAAE,GAAG,QAAQ,MAAM,CAAC,GAAG,OAAO,MAAM,OAAO,EAAE,CAAC;AACrF;AAAA,UACJ;AAAA,UACA,KAAK,UAAU;AACX,kBAAMA,QAAO;AACb,YAAAA,MAAK,OAAO;AACZ,YAAAA,MAAK,aAAa,CAAC;AACnB,kBAAM,QAAQ,IAAI;AAClB,uBAAW,OAAO,OAAO;AACrB,cAAAA,MAAK,WAAW,GAAG,IAAI,KAAK,QAAQ,MAAM,GAAG,GAAG;AAAA,gBAC5C,GAAG;AAAA,gBACH,MAAM,CAAC,GAAG,OAAO,MAAM,cAAc,GAAG;AAAA,cAC5C,CAAC;AAAA,YACL;AAEA,kBAAM,UAAU,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC;AAE1C,kBAAM,eAAe,IAAI,IAAI,CAAC,GAAG,OAAO,EAAE,OAAO,CAAC,QAAQ;AACtD,oBAAM,IAAI,IAAI,MAAM,GAAG,EAAE;AACzB,kBAAI,KAAK,OAAO,SAAS;AACrB,uBAAO,EAAE,UAAU;AAAA,cACvB,OACK;AACD,uBAAO,EAAE,WAAW;AAAA,cACxB;AAAA,YACJ,CAAC,CAAC;AACF,gBAAI,aAAa,OAAO,GAAG;AACvB,cAAAA,MAAK,WAAW,MAAM,KAAK,YAAY;AAAA,YAC3C;AAEA,gBAAI,IAAI,UAAU,KAAK,IAAI,SAAS,SAAS;AAEzC,cAAAA,MAAK,uBAAuB;AAAA,YAChC,WACS,CAAC,IAAI,UAAU;AAEpB,kBAAI,KAAK,OAAO;AACZ,gBAAAA,MAAK,uBAAuB;AAAA,YACpC,WACS,IAAI,UAAU;AACnB,cAAAA,MAAK,uBAAuB,KAAK,QAAQ,IAAI,UAAU;AAAA,gBACnD,GAAG;AAAA,gBACH,MAAM,CAAC,GAAG,OAAO,MAAM,sBAAsB;AAAA,cACjD,CAAC;AAAA,YACL;AACA;AAAA,UACJ;AAAA,UACA,KAAK,SAAS;AACV,kBAAMA,QAAO;AACb,kBAAM,UAAU,IAAI,QAAQ,IAAI,CAAC,GAAG,MAAM,KAAK,QAAQ,GAAG;AAAA,cACtD,GAAG;AAAA,cACH,MAAM,CAAC,GAAG,OAAO,MAAM,SAAS,CAAC;AAAA,YACrC,CAAC,CAAC;AACF,YAAAA,MAAK,QAAQ;AACb;AAAA,UACJ;AAAA,UACA,KAAK,gBAAgB;AACjB,kBAAMA,QAAO;AACb,kBAAM,IAAI,KAAK,QAAQ,IAAI,MAAM;AAAA,cAC7B,GAAG;AAAA,cACH,MAAM,CAAC,GAAG,OAAO,MAAM,SAAS,CAAC;AAAA,YACrC,CAAC;AACD,kBAAM,IAAI,KAAK,QAAQ,IAAI,OAAO;AAAA,cAC9B,GAAG;AAAA,cACH,MAAM,CAAC,GAAG,OAAO,MAAM,SAAS,CAAC;AAAA,YACrC,CAAC;AACD,kBAAM,uBAAuB,wBAAC,QAAQ,WAAW,OAAO,OAAO,KAAK,GAAG,EAAE,WAAW,GAAvD;AAC7B,kBAAM,QAAQ;AAAA,cACV,GAAI,qBAAqB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAAA,cAC1C,GAAI,qBAAqB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAAA,YAC9C;AACA,YAAAA,MAAK,QAAQ;AACb;AAAA,UACJ;AAAA,UACA,KAAK,SAAS;AACV,kBAAMA,QAAO;AACb,YAAAA,MAAK,OAAO;AACZ,kBAAM,aAAa,KAAK,WAAW,kBAAkB,gBAAgB;AACrE,kBAAM,WAAW,KAAK,WAAW,kBAAkB,UAAU,KAAK,WAAW,gBAAgB,UAAU;AACvG,kBAAM,cAAc,IAAI,MAAM,IAAI,CAAC,GAAG,MAAM,KAAK,QAAQ,GAAG;AAAA,cACxD,GAAG;AAAA,cACH,MAAM,CAAC,GAAG,OAAO,MAAM,YAAY,CAAC;AAAA,YACxC,CAAC,CAAC;AACF,kBAAM,OAAO,IAAI,OACX,KAAK,QAAQ,IAAI,MAAM;AAAA,cACrB,GAAG;AAAA,cACH,MAAM,CAAC,GAAG,OAAO,MAAM,UAAU,GAAI,KAAK,WAAW,gBAAgB,CAAC,IAAI,MAAM,MAAM,IAAI,CAAC,CAAE;AAAA,YACjG,CAAC,IACC;AACN,gBAAI,KAAK,WAAW,iBAAiB;AACjC,cAAAA,MAAK,cAAc;AACnB,kBAAI,MAAM;AACN,gBAAAA,MAAK,QAAQ;AAAA,cACjB;AAAA,YACJ,WACS,KAAK,WAAW,eAAe;AACpC,cAAAA,MAAK,QAAQ;AAAA,gBACT,OAAO;AAAA,cACX;AACA,kBAAI,MAAM;AACN,gBAAAA,MAAK,MAAM,MAAM,KAAK,IAAI;AAAA,cAC9B;AACA,cAAAA,MAAK,WAAW,YAAY;AAC5B,kBAAI,CAAC,MAAM;AACP,gBAAAA,MAAK,WAAW,YAAY;AAAA,cAChC;AAAA,YACJ,OACK;AACD,cAAAA,MAAK,QAAQ;AACb,kBAAI,MAAM;AACN,gBAAAA,MAAK,kBAAkB;AAAA,cAC3B;AAAA,YACJ;AAEA,kBAAM,EAAE,SAAS,QAAQ,IAAI,OAAO,KAAK;AACzC,gBAAI,OAAO,YAAY;AACnB,cAAAA,MAAK,WAAW;AACpB,gBAAI,OAAO,YAAY;AACnB,cAAAA,MAAK,WAAW;AACpB;AAAA,UACJ;AAAA,UACA,KAAK,UAAU;AACX,kBAAMA,QAAO;AACb,YAAAA,MAAK,OAAO;AACZ,gBAAI,KAAK,WAAW,aAAa,KAAK,WAAW,iBAAiB;AAC9D,cAAAA,MAAK,gBAAgB,KAAK,QAAQ,IAAI,SAAS;AAAA,gBAC3C,GAAG;AAAA,gBACH,MAAM,CAAC,GAAG,OAAO,MAAM,eAAe;AAAA,cAC1C,CAAC;AAAA,YACL;AACA,YAAAA,MAAK,uBAAuB,KAAK,QAAQ,IAAI,WAAW;AAAA,cACpD,GAAG;AAAA,cACH,MAAM,CAAC,GAAG,OAAO,MAAM,sBAAsB;AAAA,YACjD,CAAC;AACD;AAAA,UACJ;AAAA,UACA,KAAK,OAAO;AACR,gBAAI,KAAK,oBAAoB,SAAS;AAClC,oBAAM,IAAI,MAAM,0CAA0C;AAAA,YAC9D;AACA;AAAA,UACJ;AAAA,UACA,KAAK,OAAO;AACR,gBAAI,KAAK,oBAAoB,SAAS;AAClC,oBAAM,IAAI,MAAM,0CAA0C;AAAA,YAC9D;AACA;AAAA,UACJ;AAAA,UACA,KAAK,QAAQ;AACT,kBAAMA,QAAO;AACb,kBAAM,SAAS,cAAc,IAAI,OAAO;AAExC,gBAAI,OAAO,MAAM,CAAC,MAAM,OAAO,MAAM,QAAQ;AACzC,cAAAA,MAAK,OAAO;AAChB,gBAAI,OAAO,MAAM,CAAC,MAAM,OAAO,MAAM,QAAQ;AACzC,cAAAA,MAAK,OAAO;AAChB,YAAAA,MAAK,OAAO;AACZ;AAAA,UACJ;AAAA,UACA,KAAK,WAAW;AACZ,kBAAMA,QAAO;AACb,kBAAM,OAAO,CAAC;AACd,uBAAW,OAAO,IAAI,QAAQ;AAC1B,kBAAI,QAAQ,QAAW;AACnB,oBAAI,KAAK,oBAAoB,SAAS;AAClC,wBAAM,IAAI,MAAM,0DAA0D;AAAA,gBAC9E,OACK;AAAA,gBAEL;AAAA,cACJ,WACS,OAAO,QAAQ,UAAU;AAC9B,oBAAI,KAAK,oBAAoB,SAAS;AAClC,wBAAM,IAAI,MAAM,sDAAsD;AAAA,gBAC1E,OACK;AACD,uBAAK,KAAK,OAAO,GAAG,CAAC;AAAA,gBACzB;AAAA,cACJ,OACK;AACD,qBAAK,KAAK,GAAG;AAAA,cACjB;AAAA,YACJ;AACA,gBAAI,KAAK,WAAW,GAAG;AAAA,YAEvB,WACS,KAAK,WAAW,GAAG;AACxB,oBAAM,MAAM,KAAK,CAAC;AAClB,cAAAA,MAAK,OAAO,QAAQ,OAAO,SAAS,OAAO;AAC3C,kBAAI,KAAK,WAAW,aAAa,KAAK,WAAW,eAAe;AAC5D,gBAAAA,MAAK,OAAO,CAAC,GAAG;AAAA,cACpB,OACK;AACD,gBAAAA,MAAK,QAAQ;AAAA,cACjB;AAAA,YACJ,OACK;AACD,kBAAI,KAAK,MAAM,CAAC,MAAM,OAAO,MAAM,QAAQ;AACvC,gBAAAA,MAAK,OAAO;AAChB,kBAAI,KAAK,MAAM,CAAC,MAAM,OAAO,MAAM,QAAQ;AACvC,gBAAAA,MAAK,OAAO;AAChB,kBAAI,KAAK,MAAM,CAAC,MAAM,OAAO,MAAM,SAAS;AACxC,gBAAAA,MAAK,OAAO;AAChB,kBAAI,KAAK,MAAM,CAAC,MAAM,MAAM,IAAI;AAC5B,gBAAAA,MAAK,OAAO;AAChB,cAAAA,MAAK,OAAO;AAAA,YAChB;AACA;AAAA,UACJ;AAAA,UACA,KAAK,QAAQ;AACT,kBAAMA,QAAO;AACb,kBAAMC,QAAO;AAAA,cACT,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,iBAAiB;AAAA,YACrB;AACA,kBAAM,EAAE,SAAS,SAAS,KAAK,IAAI,OAAO,KAAK;AAC/C,gBAAI,YAAY;AACZ,cAAAA,MAAK,YAAY;AACrB,gBAAI,YAAY;AACZ,cAAAA,MAAK,YAAY;AACrB,gBAAI,MAAM;AACN,kBAAI,KAAK,WAAW,GAAG;AACnB,gBAAAA,MAAK,mBAAmB,KAAK,CAAC;AAC9B,uBAAO,OAAOD,OAAMC,KAAI;AAAA,cAC5B,OACK;AACD,gBAAAD,MAAK,QAAQ,KAAK,IAAI,CAAC,MAAM;AACzB,wBAAM,QAAQ,EAAE,GAAGC,OAAM,kBAAkB,EAAE;AAC7C,yBAAO;AAAA,gBACX,CAAC;AAAA,cACL;AAAA,YACJ,OACK;AACD,qBAAO,OAAOD,OAAMC,KAAI;AAAA,YAC5B;AAIA;AAAA,UACJ;AAAA,UACA,KAAK,aAAa;AACd,gBAAI,KAAK,oBAAoB,SAAS;AAClC,oBAAM,IAAI,MAAM,iDAAiD;AAAA,YACrE;AACA;AAAA,UACJ;AAAA,UACA,KAAK,YAAY;AACb,kBAAM,QAAQ,KAAK,QAAQ,IAAI,WAAW,MAAM;AAChD,gBAAI,KAAK,WAAW,eAAe;AAC/B,qBAAO,MAAM,IAAI;AACjB,oBAAM,WAAW;AAAA,YACrB,OACK;AACD,oBAAM,QAAQ,CAAC,OAAO,EAAE,MAAM,OAAO,CAAC;AAAA,YAC1C;AACA;AAAA,UACJ;AAAA,UACA,KAAK,eAAe;AAChB,iBAAK,QAAQ,IAAI,WAAW,MAAM;AAClC,mBAAO,MAAM,IAAI;AACjB;AAAA,UACJ;AAAA,UACA,KAAK,WAAW;AACZ,kBAAMD,QAAO;AACb,YAAAA,MAAK,OAAO;AACZ;AAAA,UACJ;AAAA,UACA,KAAK,WAAW;AACZ,iBAAK,QAAQ,IAAI,WAAW,MAAM;AAClC,mBAAO,MAAM,IAAI;AACjB,kBAAM,UAAU,KAAK,MAAM,KAAK,UAAU,IAAI,YAAY,CAAC;AAC3D;AAAA,UACJ;AAAA,UACA,KAAK,YAAY;AACb,iBAAK,QAAQ,IAAI,WAAW,MAAM;AAClC,mBAAO,MAAM,IAAI;AACjB,gBAAI,KAAK,OAAO;AACZ,oBAAM,YAAY,KAAK,MAAM,KAAK,UAAU,IAAI,YAAY,CAAC;AACjE;AAAA,UACJ;AAAA,UACA,KAAK,SAAS;AAEV,iBAAK,QAAQ,IAAI,WAAW,MAAM;AAClC,mBAAO,MAAM,IAAI;AACjB,gBAAI;AACJ,gBAAI;AACA,2BAAa,IAAI,WAAW,MAAS;AAAA,YACzC,QACM;AACF,oBAAM,IAAI,MAAM,uDAAuD;AAAA,YAC3E;AACA,kBAAM,UAAU;AAChB;AAAA,UACJ;AAAA,UACA,KAAK,OAAO;AACR,gBAAI,KAAK,oBAAoB,SAAS;AAClC,oBAAM,IAAI,MAAM,0CAA0C;AAAA,YAC9D;AACA;AAAA,UACJ;AAAA,UACA,KAAK,oBAAoB;AACrB,kBAAMA,QAAO;AACb,kBAAM,UAAU,OAAO,KAAK;AAC5B,gBAAI,CAAC;AACD,oBAAM,IAAI,MAAM,uCAAuC;AAC3D,YAAAA,MAAK,OAAO;AACZ,YAAAA,MAAK,UAAU,QAAQ;AACvB;AAAA,UACJ;AAAA,UACA,KAAK,QAAQ;AACT,kBAAM,YAAY,KAAK,OAAO,UAAW,IAAI,GAAG,KAAK,IAAI,SAAS,cAAc,IAAI,MAAM,IAAI,KAAM,IAAI;AACxG,iBAAK,QAAQ,WAAW,MAAM;AAC9B,mBAAO,MAAM;AACb;AAAA,UACJ;AAAA,UACA,KAAK,YAAY;AACb,iBAAK,QAAQ,IAAI,WAAW,MAAM;AAClC,mBAAO,MAAM,IAAI;AACjB,kBAAM,WAAW;AACjB;AAAA,UACJ;AAAA;AAAA,UAEA,KAAK,WAAW;AACZ,iBAAK,QAAQ,IAAI,WAAW,MAAM;AAClC,mBAAO,MAAM,IAAI;AACjB;AAAA,UACJ;AAAA,UACA,KAAK,YAAY;AACb,iBAAK,QAAQ,IAAI,WAAW,MAAM;AAClC,mBAAO,MAAM,IAAI;AACjB;AAAA,UACJ;AAAA,UACA,KAAK,QAAQ;AACT,kBAAM,YAAY,OAAO,KAAK;AAC9B,iBAAK,QAAQ,WAAW,MAAM;AAC9B,mBAAO,MAAM;AACb;AAAA,UACJ;AAAA,UACA,KAAK,UAAU;AACX,gBAAI,KAAK,oBAAoB,SAAS;AAClC,oBAAM,IAAI,MAAM,mDAAmD;AAAA,YACvE;AACA;AAAA,UACJ;AAAA,UACA,KAAK,YAAY;AACb,gBAAI,KAAK,oBAAoB,SAAS;AAClC,oBAAM,IAAI,MAAM,qDAAqD;AAAA,YACzE;AACA;AAAA,UACJ;AAAA,UACA,SAAS;AACL;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,UAAM,OAAO,KAAK,iBAAiB,IAAI,MAAM;AAC7C,QAAI;AACA,aAAO,OAAO,OAAO,QAAQ,IAAI;AACrC,QAAI,KAAK,OAAO,WAAW,eAAe,MAAM,GAAG;AAE/C,aAAO,OAAO,OAAO;AACrB,aAAO,OAAO,OAAO;AAAA,IACzB;AAEA,QAAI,KAAK,OAAO,WAAW,OAAO,OAAO;AACrC,OAAC,KAAK,OAAO,QAAQ,YAAY,GAAG,UAAU,OAAO,OAAO;AAChE,WAAO,OAAO,OAAO;AAErB,UAAM,UAAU,KAAK,KAAK,IAAI,MAAM;AACpC,WAAO,QAAQ;AAAA,EACnB;AAAA,EACA,KAAK,QAAQ,SAAS;AAClB,UAAM,SAAS;AAAA,MACX,QAAQ,SAAS,UAAU;AAAA,MAC3B,QAAQ,SAAS,UAAU;AAAA;AAAA;AAAA,MAG3B,UAAU,SAAS,YAAY;AAAA,IACnC;AAEA,UAAM,OAAO,KAAK,KAAK,IAAI,MAAM;AACjC,QAAI,CAAC;AACD,YAAM,IAAI,MAAM,2CAA2C;AAK/D,UAAM,UAAU,wBAAC,UAAU;AAKvB,YAAM,cAAc,KAAK,WAAW,kBAAkB,UAAU;AAChE,UAAI,OAAO,UAAU;AACjB,cAAM,aAAa,OAAO,SAAS,SAAS,IAAI,MAAM,CAAC,CAAC,GAAG;AAE3D,cAAM,eAAe,OAAO,SAAS,QAAQ,CAACE,QAAOA;AACrD,YAAI,YAAY;AACZ,iBAAO,EAAE,KAAK,aAAa,UAAU,EAAE;AAAA,QAC3C;AAEA,cAAM,KAAK,MAAM,CAAC,EAAE,SAAS,MAAM,CAAC,EAAE,OAAO,MAAM,SAAS,KAAK,SAAS;AAC1E,cAAM,CAAC,EAAE,QAAQ;AACjB,eAAO,EAAE,OAAO,IAAI,KAAK,GAAG,aAAa,UAAU,CAAC,KAAK,WAAW,IAAI,EAAE,GAAG;AAAA,MACjF;AACA,UAAI,MAAM,CAAC,MAAM,MAAM;AACnB,eAAO,EAAE,KAAK,IAAI;AAAA,MACtB;AAEA,YAAM,YAAY;AAClB,YAAM,eAAe,GAAG,SAAS,IAAI,WAAW;AAChD,YAAM,QAAQ,MAAM,CAAC,EAAE,OAAO,MAAM,WAAW,KAAK,SAAS;AAC7D,aAAO,EAAE,OAAO,KAAK,eAAe,MAAM;AAAA,IAC9C,GA1BgB;AA6BhB,UAAM,eAAe,wBAAC,UAAU;AAE5B,UAAI,MAAM,CAAC,EAAE,OAAO,MAAM;AACtB;AAAA,MACJ;AACA,YAAM,OAAO,MAAM,CAAC;AACpB,YAAM,EAAE,KAAAC,MAAK,MAAM,IAAI,QAAQ,KAAK;AACpC,WAAK,MAAM,EAAE,GAAG,KAAK,OAAO;AAE5B,UAAI;AACA,aAAK,QAAQ;AAEjB,YAAMC,UAAS,KAAK;AACpB,iBAAW,OAAOA,SAAQ;AACtB,eAAOA,QAAO,GAAG;AAAA,MACrB;AACA,MAAAA,QAAO,OAAOD;AAAA,IAClB,GAjBqB;AAoBrB,QAAI,OAAO,WAAW,SAAS;AAC3B,iBAAW,SAAS,KAAK,KAAK,QAAQ,GAAG;AACrC,cAAM,OAAO,MAAM,CAAC;AACpB,YAAI,KAAK,OAAO;AACZ,gBAAM,IAAI,MAAM,qBACP,KAAK,OAAO,KAAK,GAAG,CAAC;AAAA;AAAA,iFACwD;AAAA,QAC1F;AAAA,MACJ;AAAA,IACJ;AAEA,eAAW,SAAS,KAAK,KAAK,QAAQ,GAAG;AACrC,YAAM,OAAO,MAAM,CAAC;AAEpB,UAAI,WAAW,MAAM,CAAC,GAAG;AACrB,qBAAa,KAAK;AAClB;AAAA,MACJ;AAEA,UAAI,OAAO,UAAU;AACjB,cAAM,MAAM,OAAO,SAAS,SAAS,IAAI,MAAM,CAAC,CAAC,GAAG;AACpD,YAAI,WAAW,MAAM,CAAC,KAAK,KAAK;AAC5B,uBAAa,KAAK;AAClB;AAAA,QACJ;AAAA,MACJ;AAEA,YAAM,KAAK,KAAK,iBAAiB,IAAI,MAAM,CAAC,CAAC,GAAG;AAChD,UAAI,IAAI;AACJ,qBAAa,KAAK;AAClB;AAAA,MACJ;AAEA,UAAI,KAAK,OAAO;AAEZ,qBAAa,KAAK;AAClB;AAAA,MACJ;AAEA,UAAI,KAAK,QAAQ,GAAG;AAChB,YAAI,OAAO,WAAW,OAAO;AACzB,uBAAa,KAAK;AAElB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,UAAM,aAAa,wBAAC,WAAWE,YAAW;AACtC,YAAM,OAAO,KAAK,KAAK,IAAI,SAAS;AACpC,YAAMD,UAAS,KAAK,OAAO,KAAK;AAChC,YAAM,UAAU,EAAE,GAAGA,QAAO;AAE5B,UAAI,KAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAEA,YAAMD,OAAM,KAAK;AACjB,WAAK,MAAM;AACX,UAAIA,MAAK;AACL,mBAAWA,MAAKE,OAAM;AAEtB,cAAM,YAAY,KAAK,KAAK,IAAIF,IAAG,EAAE;AACrC,YAAI,UAAU,SACTE,QAAO,WAAW,aAAaA,QAAO,WAAW,aAAaA,QAAO,WAAW,gBAAgB;AACjG,UAAAD,QAAO,QAAQA,QAAO,SAAS,CAAC;AAChC,UAAAA,QAAO,MAAM,KAAK,SAAS;AAAA,QAC/B,OACK;AACD,iBAAO,OAAOA,SAAQ,SAAS;AAC/B,iBAAO,OAAOA,SAAQ,OAAO;AAAA,QACjC;AAAA,MACJ;AAEA,UAAI,CAAC,KAAK;AACN,aAAK,SAAS;AAAA,UACV;AAAA,UACA,YAAYA;AAAA,UACZ,MAAM,KAAK,QAAQ,CAAC;AAAA,QACxB,CAAC;AAAA,IACT,GAhCmB;AAiCnB,eAAW,SAAS,CAAC,GAAG,KAAK,KAAK,QAAQ,CAAC,EAAE,QAAQ,GAAG;AACpD,iBAAW,MAAM,CAAC,GAAG,EAAE,QAAQ,KAAK,OAAO,CAAC;AAAA,IAChD;AACA,UAAM,SAAS,CAAC;AAChB,QAAI,KAAK,WAAW,iBAAiB;AACjC,aAAO,UAAU;AAAA,IACrB,WACS,KAAK,WAAW,WAAW;AAChC,aAAO,UAAU;AAAA,IACrB,WACS,KAAK,WAAW,WAAW;AAChC,aAAO,UAAU;AAAA,IACrB,WACS,KAAK,WAAW,eAAe;AAAA,IAExC,OACK;AAED,cAAQ,KAAK,mBAAmB,KAAK,MAAM,EAAE;AAAA,IACjD;AACA,QAAI,OAAO,UAAU,KAAK;AACtB,YAAM,KAAK,OAAO,SAAS,SAAS,IAAI,MAAM,GAAG;AACjD,UAAI,CAAC;AACD,cAAM,IAAI,MAAM,oCAAoC;AACxD,aAAO,MAAM,OAAO,SAAS,IAAI,EAAE;AAAA,IACvC;AACA,WAAO,OAAO,QAAQ,KAAK,GAAG;AAE9B,UAAM,OAAO,OAAO,UAAU,QAAQ,CAAC;AACvC,eAAW,SAAS,KAAK,KAAK,QAAQ,GAAG;AACrC,YAAM,OAAO,MAAM,CAAC;AACpB,UAAI,KAAK,OAAO,KAAK,OAAO;AACxB,aAAK,KAAK,KAAK,IAAI,KAAK;AAAA,MAC5B;AAAA,IACJ;AAEA,QAAI,OAAO,UAAU;AAAA,IACrB,OACK;AACD,UAAI,OAAO,KAAK,IAAI,EAAE,SAAS,GAAG;AAC9B,YAAI,KAAK,WAAW,iBAAiB;AACjC,iBAAO,QAAQ;AAAA,QACnB,OACK;AACD,iBAAO,cAAc;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AACA,QAAI;AAIA,aAAO,KAAK,MAAM,KAAK,UAAU,MAAM,CAAC;AAAA,IAC5C,SACO,MAAM;AACT,YAAM,IAAI,MAAM,kCAAkC;AAAA,IACtD;AAAA,EACJ;AACJ;AACO,SAAS,aAAa,OAAO,SAAS;AACzC,MAAI,iBAAiB,cAAc;AAC/B,UAAME,OAAM,IAAI,oBAAoB,OAAO;AAC3C,UAAM,OAAO,CAAC;AACd,eAAW,SAAS,MAAM,OAAO,QAAQ,GAAG;AACxC,YAAM,CAAC,GAAG,MAAM,IAAI;AACpB,MAAAA,KAAI,QAAQ,MAAM;AAAA,IACtB;AACA,UAAM,UAAU,CAAC;AACjB,UAAM,WAAW;AAAA,MACb,UAAU;AAAA,MACV,KAAK,SAAS;AAAA,MACd;AAAA,IACJ;AACA,eAAW,SAAS,MAAM,OAAO,QAAQ,GAAG;AACxC,YAAM,CAAC,KAAK,MAAM,IAAI;AACtB,cAAQ,GAAG,IAAIA,KAAI,KAAK,QAAQ;AAAA,QAC5B,GAAG;AAAA,QACH;AAAA,MACJ,CAAC;AAAA,IACL;AACA,QAAI,OAAO,KAAK,IAAI,EAAE,SAAS,GAAG;AAC9B,YAAM,cAAcA,KAAI,WAAW,kBAAkB,UAAU;AAC/D,cAAQ,WAAW;AAAA,QACf,CAAC,WAAW,GAAG;AAAA,MACnB;AAAA,IACJ;AACA,WAAO,EAAE,QAAQ;AAAA,EACrB;AACA,QAAM,MAAM,IAAI,oBAAoB,OAAO;AAC3C,MAAI,QAAQ,KAAK;AACjB,SAAO,IAAI,KAAK,OAAO,OAAO;AAClC;AAhCgB;AAiChB,SAAS,eAAe,SAAS,MAAM;AACnC,QAAM,MAAM,QAAQ,EAAE,MAAM,oBAAI,IAAI,EAAE;AACtC,MAAI,IAAI,KAAK,IAAI,OAAO;AACpB,WAAO;AACX,MAAI,KAAK,IAAI,OAAO;AACpB,QAAM,SAAS;AACf,QAAM,MAAM,OAAO,KAAK;AACxB,UAAQ,IAAI,MAAM;AAAA,IACd,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,aAAO;AAAA,IACX,KAAK,SAAS;AACV,aAAO,eAAe,IAAI,SAAS,GAAG;AAAA,IAC1C;AAAA,IACA,KAAK,UAAU;AACX,iBAAW,OAAO,IAAI,OAAO;AACzB,YAAI,eAAe,IAAI,MAAM,GAAG,GAAG,GAAG;AAClC,iBAAO;AAAA,MACf;AACA,aAAO;AAAA,IACX;AAAA,IACA,KAAK,SAAS;AACV,iBAAW,UAAU,IAAI,SAAS;AAC9B,YAAI,eAAe,QAAQ,GAAG;AAC1B,iBAAO;AAAA,MACf;AACA,aAAO;AAAA,IACX;AAAA,IACA,KAAK,gBAAgB;AACjB,aAAO,eAAe,IAAI,MAAM,GAAG,KAAK,eAAe,IAAI,OAAO,GAAG;AAAA,IACzE;AAAA,IACA,KAAK,SAAS;AACV,iBAAW,QAAQ,IAAI,OAAO;AAC1B,YAAI,eAAe,MAAM,GAAG;AACxB,iBAAO;AAAA,MACf;AACA,UAAI,IAAI,QAAQ,eAAe,IAAI,MAAM,GAAG;AACxC,eAAO;AACX,aAAO;AAAA,IACX;AAAA,IACA,KAAK,UAAU;AACX,aAAO,eAAe,IAAI,SAAS,GAAG,KAAK,eAAe,IAAI,WAAW,GAAG;AAAA,IAChF;AAAA,IACA,KAAK,OAAO;AACR,aAAO,eAAe,IAAI,SAAS,GAAG,KAAK,eAAe,IAAI,WAAW,GAAG;AAAA,IAChF;AAAA,IACA,KAAK,OAAO;AACR,aAAO,eAAe,IAAI,WAAW,GAAG;AAAA,IAC5C;AAAA;AAAA,IAEA,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,aAAO,eAAe,IAAI,WAAW,GAAG;AAAA,IAC5C,KAAK;AACD,aAAO,eAAe,IAAI,OAAO,GAAG,GAAG;AAAA,IAC3C,KAAK,WAAW;AACZ,aAAO,eAAe,IAAI,WAAW,GAAG;AAAA,IAC5C;AAAA,IACA,KAAK,YAAY;AACb,aAAO,eAAe,IAAI,WAAW,GAAG;AAAA,IAC5C;AAAA,IACA,KAAK,UAAU;AACX,aAAO;AAAA,IACX;AAAA,IACA,KAAK,aAAa;AACd,aAAO;AAAA,IACX;AAAA,IACA,KAAK,QAAQ;AACT,aAAO,eAAe,IAAI,IAAI,GAAG,KAAK,eAAe,IAAI,KAAK,GAAG;AAAA,IACrE;AAAA,IACA,KAAK,WAAW;AACZ,aAAO;AAAA,IACX;AAAA,IACA,KAAK,SAAS;AACV,aAAO;AAAA,IACX;AAAA,IACA,KAAK,YAAY;AACb,aAAO;AAAA,IACX;AAAA,IACA;AACI;AAAA,EACR;AACA,QAAM,IAAI,MAAM,wBAAwB,IAAI,IAAI,EAAE;AACtD;AArGS;;;AC7yBT;AAAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,YAAAC;AAAA;AAAA;AAAA;AAAA;AAAAC;AAEO,IAAM,iBAA+B,gBAAK,aAAa,kBAAkB,CAAC,MAAM,QAAQ;AAC3F,EAAK,gBAAgB,KAAK,MAAM,GAAG;AACnC,EAAQ,gBAAgB,KAAK,MAAM,GAAG;AAC1C,CAAC;AACM,SAASC,UAAS,QAAQ;AAC7B,SAAY,aAAa,gBAAgB,MAAM;AACnD;AAFgB,OAAAA,WAAA;AAGT,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,EAAK,YAAY,KAAK,MAAM,GAAG;AAC/B,EAAQ,gBAAgB,KAAK,MAAM,GAAG;AAC1C,CAAC;AACM,SAASC,MAAK,QAAQ;AACzB,SAAY,SAAS,YAAY,MAAM;AAC3C;AAFgB,OAAAA,OAAA;AAGT,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,EAAK,YAAY,KAAK,MAAM,GAAG;AAC/B,EAAQ,gBAAgB,KAAK,MAAM,GAAG;AAC1C,CAAC;AACM,SAASC,MAAK,QAAQ;AACzB,SAAY,SAAS,YAAY,MAAM;AAC3C;AAFgB,OAAAA,OAAA;AAGT,IAAM,iBAA+B,gBAAK,aAAa,kBAAkB,CAAC,MAAM,QAAQ;AAC3F,EAAK,gBAAgB,KAAK,MAAM,GAAG;AACnC,EAAQ,gBAAgB,KAAK,MAAM,GAAG;AAC1C,CAAC;AACM,SAASC,UAAS,QAAQ;AAC7B,SAAY,aAAa,gBAAgB,MAAM;AACnD;AAFgB,OAAAA,WAAA;;;AC3BhB;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;AAGA,IAAMC,eAAc,wBAAC,MAAM,WAAW;AAClC,YAAU,KAAK,MAAM,MAAM;AAC3B,OAAK,OAAO;AACZ,SAAO,iBAAiB,MAAM;AAAA,IAC1B,QAAQ;AAAA,MACJ,OAAO,wBAAC,WAAgB,YAAY,MAAM,MAAM,GAAzC;AAAA;AAAA,IAEX;AAAA,IACA,SAAS;AAAA,MACL,OAAO,wBAAC,WAAgB,aAAa,MAAM,MAAM,GAA1C;AAAA;AAAA,IAEX;AAAA,IACA,UAAU;AAAA,MACN,OAAO,wBAACC,WAAU;AACd,aAAK,OAAO,KAAKA,MAAK;AACtB,aAAK,UAAU,KAAK,UAAU,KAAK,QAAa,uBAAuB,CAAC;AAAA,MAC5E,GAHO;AAAA;AAAA,IAKX;AAAA,IACA,WAAW;AAAA,MACP,OAAO,wBAACC,YAAW;AACf,aAAK,OAAO,KAAK,GAAGA,OAAM;AAC1B,aAAK,UAAU,KAAK,UAAU,KAAK,QAAa,uBAAuB,CAAC;AAAA,MAC5E,GAHO;AAAA;AAAA,IAKX;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AACF,eAAO,KAAK,OAAO,WAAW;AAAA,MAClC;AAAA;AAAA,IAEJ;AAAA,EACJ,CAAC;AAML,GAtCoB;AAuCb,IAAM,WAAgB,aAAa,YAAYF,YAAW;AAC1D,IAAM,eAAoB,aAAa,YAAYA,cAAa;AAAA,EACnE,QAAQ;AACZ,CAAC;;;AD3CM,IAAMG,SAAwB,gBAAK,OAAO,YAAY;AACtD,IAAMC,cAA6B,gBAAK,YAAY,YAAY;AAChE,IAAMC,aAA4B,gBAAK,WAAW,YAAY;AAC9D,IAAMC,kBAAiC,gBAAK,gBAAgB,YAAY;AAExE,IAAMC,UAAyB,gBAAK,QAAQ,YAAY;AACxD,IAAMC,UAAyB,gBAAK,QAAQ,YAAY;AACxD,IAAMC,eAA8B,gBAAK,aAAa,YAAY;AAClE,IAAMC,eAA8B,gBAAK,aAAa,YAAY;AAClE,IAAMC,cAA6B,gBAAK,YAAY,YAAY;AAChE,IAAMC,cAA6B,gBAAK,YAAY,YAAY;AAChE,IAAMC,mBAAkC,gBAAK,iBAAiB,YAAY;AAC1E,IAAMC,mBAAkC,gBAAK,iBAAiB,YAAY;;;AHT1E,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,OAAK,MAAM;AACX,OAAK,OAAO,IAAI;AAChB,SAAO,eAAe,MAAM,QAAQ,EAAE,OAAO,IAAI,CAAC;AAElD,OAAK,QAAQ,IAAI,WAAW;AACxB,WAAO,KAAK,MAAM,aAAK,UAAU,KAAK;AAAA,MAClC,QAAQ;AAAA,QACJ,GAAI,IAAI,UAAU,CAAC;AAAA,QACnB,GAAG,OAAO,IAAI,CAAC,OAAO,OAAO,OAAO,aAAa,EAAE,MAAM,EAAE,OAAO,IAAI,KAAK,EAAE,OAAO,SAAS,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE;AAAA,MACzH;AAAA,IACJ,CAAC,CAAC;AAAA,EACN;AACA,OAAK,QAAQ,CAACC,MAAK,WAAgB,MAAM,MAAMA,MAAK,MAAM;AAC1D,OAAK,QAAQ,MAAM;AACnB,OAAK,WAAY,CAAC,KAAK,SAAS;AAC5B,QAAI,IAAI,MAAM,IAAI;AAClB,WAAO;AAAA,EACX;AAEA,OAAK,QAAQ,CAAC,MAAM,WAAiBC,OAAM,MAAM,MAAM,QAAQ,EAAE,QAAQ,KAAK,MAAM,CAAC;AACrF,OAAK,YAAY,CAAC,MAAM,WAAiBC,WAAU,MAAM,MAAM,MAAM;AACrE,OAAK,aAAa,OAAO,MAAM,WAAiBC,YAAW,MAAM,MAAM,QAAQ,EAAE,QAAQ,KAAK,WAAW,CAAC;AAC1G,OAAK,iBAAiB,OAAO,MAAM,WAAiBC,gBAAe,MAAM,MAAM,MAAM;AACrF,OAAK,MAAM,KAAK;AAEhB,OAAK,SAAS,CAAC,MAAM,WAAiBC,QAAO,MAAM,MAAM,MAAM;AAC/D,OAAK,SAAS,CAAC,MAAM,WAAiBC,QAAO,MAAM,MAAM,MAAM;AAC/D,OAAK,cAAc,OAAO,MAAM,WAAiBC,aAAY,MAAM,MAAM,MAAM;AAC/E,OAAK,cAAc,OAAO,MAAM,WAAiBC,aAAY,MAAM,MAAM,MAAM;AAC/E,OAAK,aAAa,CAAC,MAAM,WAAiBC,YAAW,MAAM,MAAM,MAAM;AACvE,OAAK,aAAa,CAAC,MAAM,WAAiBC,YAAW,MAAM,MAAM,MAAM;AACvE,OAAK,kBAAkB,OAAO,MAAM,WAAiBC,iBAAgB,MAAM,MAAM,MAAM;AACvF,OAAK,kBAAkB,OAAO,MAAM,WAAiBC,iBAAgB,MAAM,MAAM,MAAM;AAEvF,OAAK,SAAS,CAACC,QAAO,WAAW,KAAK,MAAM,OAAOA,QAAO,MAAM,CAAC;AACjE,OAAK,cAAc,CAAC,eAAe,KAAK,MAAM,YAAY,UAAU,CAAC;AACrE,OAAK,YAAY,CAAC,OAAO,KAAK,MAAa,WAAU,EAAE,CAAC;AAExD,OAAK,WAAW,MAAM,SAAS,IAAI;AACnC,OAAK,WAAW,MAAM,SAAS,IAAI;AACnC,OAAK,UAAU,MAAM,SAAS,SAAS,IAAI,CAAC;AAC5C,OAAK,cAAc,CAAC,WAAW,YAAY,MAAM,MAAM;AACvD,OAAK,QAAQ,MAAM,MAAM,IAAI;AAC7B,OAAK,KAAK,CAAC,QAAQ,MAAM,CAAC,MAAM,GAAG,CAAC;AACpC,OAAK,MAAM,CAAC,QAAQ,aAAa,MAAM,GAAG;AAC1C,OAAK,YAAY,CAAC,OAAO,KAAK,MAAM,UAAU,EAAE,CAAC;AACjD,OAAK,UAAU,CAACb,SAAQc,UAAS,MAAMd,IAAG;AAC1C,OAAK,WAAW,CAACA,SAAQ,SAAS,MAAMA,IAAG;AAE3C,OAAK,QAAQ,CAAC,WAAWe,QAAO,MAAM,MAAM;AAC5C,OAAK,OAAO,CAAC,WAAW,KAAK,MAAM,MAAM;AACzC,OAAK,WAAW,MAAM,SAAS,IAAI;AAEnC,OAAK,WAAW,CAAC,gBAAgB;AAC7B,UAAM,KAAK,KAAK,MAAM;AACtB,IAAK,eAAe,IAAI,IAAI,EAAE,YAAY,CAAC;AAC3C,WAAO;AAAA,EACX;AACA,SAAO,eAAe,MAAM,eAAe;AAAA,IACvC,MAAM;AACF,aAAY,eAAe,IAAI,IAAI,GAAG;AAAA,IAC1C;AAAA,IACA,cAAc;AAAA,EAClB,CAAC;AACD,OAAK,OAAO,IAAI,SAAS;AACrB,QAAI,KAAK,WAAW,GAAG;AACnB,aAAY,eAAe,IAAI,IAAI;AAAA,IACvC;AACA,UAAM,KAAK,KAAK,MAAM;AACtB,IAAK,eAAe,IAAI,IAAI,KAAK,CAAC,CAAC;AACnC,WAAO;AAAA,EACX;AAEA,OAAK,aAAa,MAAM,KAAK,UAAU,MAAS,EAAE;AAClD,OAAK,aAAa,MAAM,KAAK,UAAU,IAAI,EAAE;AAC7C,SAAO;AACX,CAAC;AAEM,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,EAAK,WAAW,KAAK,MAAM,GAAG;AAC9B,UAAQ,KAAK,MAAM,GAAG;AACtB,QAAM,MAAM,KAAK,KAAK;AACtB,OAAK,SAAS,IAAI,UAAU;AAC5B,OAAK,YAAY,IAAI,WAAW;AAChC,OAAK,YAAY,IAAI,WAAW;AAEhC,OAAK,QAAQ,IAAI,SAAS,KAAK,MAAa,OAAM,GAAG,IAAI,CAAC;AAC1D,OAAK,WAAW,IAAI,SAAS,KAAK,MAAa,UAAS,GAAG,IAAI,CAAC;AAChE,OAAK,aAAa,IAAI,SAAS,KAAK,MAAa,YAAW,GAAG,IAAI,CAAC;AACpE,OAAK,WAAW,IAAI,SAAS,KAAK,MAAa,UAAS,GAAG,IAAI,CAAC;AAChE,OAAK,MAAM,IAAI,SAAS,KAAK,MAAa,WAAU,GAAG,IAAI,CAAC;AAC5D,OAAK,MAAM,IAAI,SAAS,KAAK,MAAa,WAAU,GAAG,IAAI,CAAC;AAC5D,OAAK,SAAS,IAAI,SAAS,KAAK,MAAa,QAAO,GAAG,IAAI,CAAC;AAC5D,OAAK,WAAW,IAAI,SAAS,KAAK,MAAa,WAAU,GAAG,GAAG,IAAI,CAAC;AACpE,OAAK,YAAY,CAAC,WAAW,KAAK,MAAa,WAAU,MAAM,CAAC;AAChE,OAAK,YAAY,CAAC,WAAW,KAAK,MAAa,WAAU,MAAM,CAAC;AAEhE,OAAK,OAAO,MAAM,KAAK,MAAa,MAAK,CAAC;AAC1C,OAAK,YAAY,IAAI,SAAS,KAAK,MAAa,WAAU,GAAG,IAAI,CAAC;AAClE,OAAK,cAAc,MAAM,KAAK,MAAa,aAAY,CAAC;AACxD,OAAK,cAAc,MAAM,KAAK,MAAa,aAAY,CAAC;AAC5D,CAAC;AACM,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,EAAK,WAAW,KAAK,MAAM,GAAG;AAC9B,aAAW,KAAK,MAAM,GAAG;AACzB,OAAK,QAAQ,CAAC,WAAW,KAAK,MAAW,OAAO,UAAU,MAAM,CAAC;AACjE,OAAK,MAAM,CAAC,WAAW,KAAK,MAAW,KAAK,QAAQ,MAAM,CAAC;AAC3D,OAAK,MAAM,CAAC,WAAW,KAAK,MAAW,KAAK,QAAQ,MAAM,CAAC;AAC3D,OAAK,QAAQ,CAAC,WAAW,KAAK,MAAWC,QAAO,UAAU,MAAM,CAAC;AACjE,OAAK,OAAO,CAAC,WAAW,KAAK,MAAW,MAAM,SAAS,MAAM,CAAC;AAC9D,OAAK,OAAO,CAAC,WAAW,KAAK,MAAW,MAAM,SAAS,MAAM,CAAC;AAC9D,OAAK,SAAS,CAAC,WAAW,KAAK,MAAW,QAAQ,SAAS,MAAM,CAAC;AAClE,OAAK,SAAS,CAAC,WAAW,KAAK,MAAW,QAAQ,SAAS,MAAM,CAAC;AAClE,OAAK,SAAS,CAAC,WAAW,KAAK,MAAW,QAAQ,SAAS,MAAM,CAAC;AAClE,OAAK,SAAS,CAAC,WAAW,KAAK,MAAW,QAAQ,WAAW,MAAM,CAAC;AACpE,OAAK,OAAO,CAAC,WAAW,KAAK,MAAW,MAAM,SAAS,MAAM,CAAC;AAC9D,OAAK,OAAO,CAAC,WAAW,KAAK,MAAW,MAAM,SAAS,MAAM,CAAC;AAC9D,OAAK,QAAQ,CAAC,WAAW,KAAK,MAAW,OAAO,UAAU,MAAM,CAAC;AACjE,OAAK,OAAO,CAAC,WAAW,KAAK,MAAW,MAAM,SAAS,MAAM,CAAC;AAC9D,OAAK,SAAS,CAAC,WAAW,KAAK,MAAW,QAAQ,WAAW,MAAM,CAAC;AACpE,OAAK,YAAY,CAAC,WAAW,KAAK,MAAW,WAAW,cAAc,MAAM,CAAC;AAC7E,OAAK,MAAM,CAAC,WAAW,KAAK,MAAW,KAAK,QAAQ,MAAM,CAAC;AAC3D,OAAK,QAAQ,CAAC,WAAW,KAAK,MAAW,OAAO,UAAU,MAAM,CAAC;AACjE,OAAK,OAAO,CAAC,WAAW,KAAK,MAAW,MAAM,SAAS,MAAM,CAAC;AAC9D,OAAK,OAAO,CAAC,WAAW,KAAK,MAAW,MAAM,SAAS,MAAM,CAAC;AAC9D,OAAK,SAAS,CAAC,WAAW,KAAK,MAAW,QAAQ,WAAW,MAAM,CAAC;AACpE,OAAK,SAAS,CAAC,WAAW,KAAK,MAAW,QAAQ,WAAW,MAAM,CAAC;AACpE,OAAK,OAAO,CAAC,WAAW,KAAK,MAAW,MAAM,SAAS,MAAM,CAAC;AAE9D,OAAK,WAAW,CAAC,WAAW,KAAK,MAAUC,UAAS,MAAM,CAAC;AAC3D,OAAK,OAAO,CAAC,WAAW,KAAK,MAAUC,MAAK,MAAM,CAAC;AACnD,OAAK,OAAO,CAAC,WAAW,KAAK,MAAUC,MAAK,MAAM,CAAC;AACnD,OAAK,WAAW,CAAC,WAAW,KAAK,MAAUC,UAAS,MAAM,CAAC;AAC/D,CAAC;AACM,SAASC,QAAO,QAAQ;AAC3B,SAAY,QAAQ,WAAW,MAAM;AACzC;AAFgB,OAAAA,SAAA;AAGT,IAAM,kBAAgC,gBAAK,aAAa,mBAAmB,CAAC,MAAM,QAAQ;AAC7F,EAAK,iBAAiB,KAAK,MAAM,GAAG;AACpC,aAAW,KAAK,MAAM,GAAG;AAC7B,CAAC;AACM,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAE/E,EAAK,UAAU,KAAK,MAAM,GAAG;AAC7B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,OAAM,QAAQ;AAC1B,SAAY,OAAO,UAAU,MAAM;AACvC;AAFgB,OAAAA,QAAA;AAGT,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAE7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,MAAK,QAAQ;AACzB,SAAY,MAAM,SAAS,MAAM;AACrC;AAFgB,OAAAA,OAAA;AAGT,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAE7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,MAAK,QAAQ;AACzB,SAAY,MAAM,SAAS,MAAM;AACrC;AAFgB,OAAAA,OAAA;AAGT,SAAS,OAAO,QAAQ;AAC3B,SAAY,QAAQ,SAAS,MAAM;AACvC;AAFgB;AAIT,SAAS,OAAO,QAAQ;AAC3B,SAAY,QAAQ,SAAS,MAAM;AACvC;AAFgB;AAIT,SAAS,OAAO,QAAQ;AAC3B,SAAY,QAAQ,SAAS,MAAM;AACvC;AAFgB;AAGT,IAAM,SAAuB,gBAAK,aAAa,UAAU,CAAC,MAAM,QAAQ;AAE3E,EAAK,QAAQ,KAAK,MAAM,GAAG;AAC3B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAAS,IAAI,QAAQ;AACxB,SAAY,KAAK,QAAQ,MAAM;AACnC;AAFgB;AAGT,SAAS,QAAQ,QAAQ;AAC5B,SAAY,KAAK,QAAQ;AAAA,IACrB,UAAU;AAAA,IACV,UAAe,gBAAQ;AAAA,IACvB,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAE/E,EAAK,UAAU,KAAK,MAAM,GAAG;AAC7B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,OAAM,QAAQ;AAC1B,SAAYT,QAAO,UAAU,MAAM;AACvC;AAFgB,OAAAS,QAAA;AAGT,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AAEjF,EAAK,WAAW,KAAK,MAAM,GAAG;AAC9B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,QAAO,QAAQ;AAC3B,SAAY,QAAQ,WAAW,MAAM;AACzC;AAFgB,OAAAA,SAAA;AAGT,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAE7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,MAAK,QAAQ;AACzB,SAAY,MAAM,SAAS,MAAM;AACrC;AAFgB,OAAAA,OAAA;AAGT,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAE/E,EAAK,UAAU,KAAK,MAAM,GAAG;AAC7B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,OAAM,QAAQ;AAC1B,SAAY,OAAO,UAAU,MAAM;AACvC;AAFgB,OAAAA,QAAA;AAGT,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAE7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,MAAK,QAAQ;AACzB,SAAY,MAAM,SAAS,MAAM;AACrC;AAFgB,OAAAA,OAAA;AAGT,IAAM,SAAuB,gBAAK,aAAa,UAAU,CAAC,MAAM,QAAQ;AAE3E,EAAK,QAAQ,KAAK,MAAM,GAAG;AAC3B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,KAAI,QAAQ;AACxB,SAAY,KAAK,QAAQ,MAAM;AACnC;AAFgB,OAAAA,MAAA;AAGT,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAE/E,EAAK,UAAU,KAAK,MAAM,GAAG;AAC7B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,OAAM,QAAQ;AAC1B,SAAY,OAAO,UAAU,MAAM;AACvC;AAFgB,OAAAA,QAAA;AAGT,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAE7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,MAAK,QAAQ;AACzB,SAAY,MAAM,SAAS,MAAM;AACrC;AAFgB,OAAAA,OAAA;AAGT,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAE7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,MAAK,QAAQ;AACzB,SAAY,MAAM,SAAS,MAAM;AACrC;AAFgB,OAAAA,OAAA;AAGT,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,EAAK,WAAW,KAAK,MAAM,GAAG;AAC9B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,QAAO,QAAQ;AAC3B,SAAY,QAAQ,WAAW,MAAM;AACzC;AAFgB,OAAAA,SAAA;AAGT,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,EAAK,WAAW,KAAK,MAAM,GAAG;AAC9B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,QAAO,QAAQ;AAC3B,SAAY,QAAQ,WAAW,MAAM;AACzC;AAFgB,OAAAA,SAAA;AAGT,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AAEjF,EAAK,WAAW,KAAK,MAAM,GAAG;AAC9B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,QAAO,QAAQ;AAC3B,SAAY,QAAQ,WAAW,MAAM;AACzC;AAFgB,OAAAA,SAAA;AAGT,IAAM,eAA6B,gBAAK,aAAa,gBAAgB,CAAC,MAAM,QAAQ;AAEvF,EAAK,cAAc,KAAK,MAAM,GAAG;AACjC,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,WAAU,QAAQ;AAC9B,SAAY,WAAW,cAAc,MAAM;AAC/C;AAFgB,OAAAA,YAAA;AAGT,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAE7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,MAAK,QAAQ;AACzB,SAAY,MAAM,SAAS,MAAM;AACrC;AAFgB,OAAAA,OAAA;AAGT,IAAM,SAAuB,gBAAK,aAAa,UAAU,CAAC,MAAM,QAAQ;AAE3E,EAAK,QAAQ,KAAK,MAAM,GAAG;AAC3B,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAASC,KAAI,QAAQ;AACxB,SAAY,KAAK,QAAQ,MAAM;AACnC;AAFgB,OAAAA,MAAA;AAGT,IAAM,wBAAsC,gBAAK,aAAa,yBAAyB,CAAC,MAAM,QAAQ;AAEzG,EAAK,uBAAuB,KAAK,MAAM,GAAG;AAC1C,kBAAgB,KAAK,MAAM,GAAG;AAClC,CAAC;AACM,SAAS,aAAa,QAAQ,WAAW,UAAU,CAAC,GAAG;AAC1D,SAAY,cAAc,uBAAuB,QAAQ,WAAW,OAAO;AAC/E;AAFgB;AAGT,SAASC,UAAS,SAAS;AAC9B,SAAY,cAAc,uBAAuB,YAAiB,gBAAQ,UAAU,OAAO;AAC/F;AAFgB,OAAAA,WAAA;AAGT,SAASC,KAAI,SAAS;AACzB,SAAY,cAAc,uBAAuB,OAAY,gBAAQ,KAAK,OAAO;AACrF;AAFgB,OAAAA,MAAA;AAGT,SAAS,KAAK,KAAK,QAAQ;AAC9B,QAAM,MAAM,QAAQ,OAAO;AAC3B,QAAM,SAAS,GAAG,GAAG,IAAI,GAAG;AAC5B,QAAM,QAAa,gBAAQ,MAAM;AACjC,MAAI,CAAC;AACD,UAAM,IAAI,MAAM,6BAA6B,MAAM,EAAE;AACzD,SAAY,cAAc,uBAAuB,QAAQ,OAAO,MAAM;AAC1E;AAPgB;AAQT,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,EAAK,WAAW,KAAK,MAAM,GAAG;AAC9B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,KAAK,CAAC,OAAO,WAAW,KAAK,MAAa,IAAG,OAAO,MAAM,CAAC;AAChE,OAAK,MAAM,CAAC,OAAO,WAAW,KAAK,MAAa,KAAI,OAAO,MAAM,CAAC;AAClE,OAAK,MAAM,CAAC,OAAO,WAAW,KAAK,MAAa,KAAI,OAAO,MAAM,CAAC;AAClE,OAAK,KAAK,CAAC,OAAO,WAAW,KAAK,MAAa,IAAG,OAAO,MAAM,CAAC;AAChE,OAAK,MAAM,CAAC,OAAO,WAAW,KAAK,MAAa,KAAI,OAAO,MAAM,CAAC;AAClE,OAAK,MAAM,CAAC,OAAO,WAAW,KAAK,MAAa,KAAI,OAAO,MAAM,CAAC;AAClE,OAAK,MAAM,CAAC,WAAW,KAAK,MAAM,IAAI,MAAM,CAAC;AAC7C,OAAK,OAAO,CAAC,WAAW,KAAK,MAAM,IAAI,MAAM,CAAC;AAC9C,OAAK,WAAW,CAAC,WAAW,KAAK,MAAa,IAAG,GAAG,MAAM,CAAC;AAC3D,OAAK,cAAc,CAAC,WAAW,KAAK,MAAa,KAAI,GAAG,MAAM,CAAC;AAC/D,OAAK,WAAW,CAAC,WAAW,KAAK,MAAa,IAAG,GAAG,MAAM,CAAC;AAC3D,OAAK,cAAc,CAAC,WAAW,KAAK,MAAa,KAAI,GAAG,MAAM,CAAC;AAC/D,OAAK,aAAa,CAAC,OAAO,WAAW,KAAK,MAAa,YAAW,OAAO,MAAM,CAAC;AAChF,OAAK,OAAO,CAAC,OAAO,WAAW,KAAK,MAAa,YAAW,OAAO,MAAM,CAAC;AAE1E,OAAK,SAAS,MAAM;AACpB,QAAM,MAAM,KAAK,KAAK;AACtB,OAAK,WACD,KAAK,IAAI,IAAI,WAAW,OAAO,mBAAmB,IAAI,oBAAoB,OAAO,iBAAiB,KAAK;AAC3G,OAAK,WACD,KAAK,IAAI,IAAI,WAAW,OAAO,mBAAmB,IAAI,oBAAoB,OAAO,iBAAiB,KAAK;AAC3G,OAAK,SAAS,IAAI,UAAU,IAAI,SAAS,KAAK,KAAK,OAAO,cAAc,IAAI,cAAc,GAAG;AAC7F,OAAK,WAAW;AAChB,OAAK,SAAS,IAAI,UAAU;AAChC,CAAC;AACM,SAASC,QAAO,QAAQ;AAC3B,SAAY,QAAQ,WAAW,MAAM;AACzC;AAFgB,OAAAA,SAAA;AAGT,IAAM,kBAAgC,gBAAK,aAAa,mBAAmB,CAAC,MAAM,QAAQ;AAC7F,EAAK,iBAAiB,KAAK,MAAM,GAAG;AACpC,YAAU,KAAK,MAAM,GAAG;AAC5B,CAAC;AACM,SAAS,IAAI,QAAQ;AACxB,SAAY,KAAK,iBAAiB,MAAM;AAC5C;AAFgB;AAGT,SAAS,QAAQ,QAAQ;AAC5B,SAAY,SAAS,iBAAiB,MAAM;AAChD;AAFgB;AAGT,SAAS,QAAQ,QAAQ;AAC5B,SAAY,SAAS,iBAAiB,MAAM;AAChD;AAFgB;AAGT,SAAS,MAAM,QAAQ;AAC1B,SAAY,OAAO,iBAAiB,MAAM;AAC9C;AAFgB;AAGT,SAAS,OAAO,QAAQ;AAC3B,SAAY,QAAQ,iBAAiB,MAAM;AAC/C;AAFgB;AAGT,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,EAAK,YAAY,KAAK,MAAM,GAAG;AAC/B,UAAQ,KAAK,MAAM,GAAG;AAC1B,CAAC;AACM,SAASC,SAAQ,QAAQ;AAC5B,SAAY,SAAS,YAAY,MAAM;AAC3C;AAFgB,OAAAA,UAAA;AAGT,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,EAAK,WAAW,KAAK,MAAM,GAAG;AAC9B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,MAAM,CAAC,OAAO,WAAW,KAAK,MAAa,KAAI,OAAO,MAAM,CAAC;AAClE,OAAK,MAAM,CAAC,OAAO,WAAW,KAAK,MAAa,KAAI,OAAO,MAAM,CAAC;AAClE,OAAK,KAAK,CAAC,OAAO,WAAW,KAAK,MAAa,IAAG,OAAO,MAAM,CAAC;AAChE,OAAK,MAAM,CAAC,OAAO,WAAW,KAAK,MAAa,KAAI,OAAO,MAAM,CAAC;AAClE,OAAK,MAAM,CAAC,OAAO,WAAW,KAAK,MAAa,KAAI,OAAO,MAAM,CAAC;AAClE,OAAK,KAAK,CAAC,OAAO,WAAW,KAAK,MAAa,IAAG,OAAO,MAAM,CAAC;AAChE,OAAK,MAAM,CAAC,OAAO,WAAW,KAAK,MAAa,KAAI,OAAO,MAAM,CAAC;AAClE,OAAK,MAAM,CAAC,OAAO,WAAW,KAAK,MAAa,KAAI,OAAO,MAAM,CAAC;AAClE,OAAK,WAAW,CAAC,WAAW,KAAK,MAAa,IAAG,OAAO,CAAC,GAAG,MAAM,CAAC;AACnE,OAAK,WAAW,CAAC,WAAW,KAAK,MAAa,IAAG,OAAO,CAAC,GAAG,MAAM,CAAC;AACnE,OAAK,cAAc,CAAC,WAAW,KAAK,MAAa,KAAI,OAAO,CAAC,GAAG,MAAM,CAAC;AACvE,OAAK,cAAc,CAAC,WAAW,KAAK,MAAa,KAAI,OAAO,CAAC,GAAG,MAAM,CAAC;AACvE,OAAK,aAAa,CAAC,OAAO,WAAW,KAAK,MAAa,YAAW,OAAO,MAAM,CAAC;AAChF,QAAM,MAAM,KAAK,KAAK;AACtB,OAAK,WAAW,IAAI,WAAW;AAC/B,OAAK,WAAW,IAAI,WAAW;AAC/B,OAAK,SAAS,IAAI,UAAU;AAChC,CAAC;AACM,SAASC,QAAO,QAAQ;AAC3B,SAAY,QAAQ,WAAW,MAAM;AACzC;AAFgB,OAAAA,SAAA;AAGT,IAAM,kBAAgC,gBAAK,aAAa,mBAAmB,CAAC,MAAM,QAAQ;AAC7F,EAAK,iBAAiB,KAAK,MAAM,GAAG;AACpC,YAAU,KAAK,MAAM,GAAG;AAC5B,CAAC;AAEM,SAAS,MAAM,QAAQ;AAC1B,SAAY,OAAO,iBAAiB,MAAM;AAC9C;AAFgB;AAIT,SAAS,OAAO,QAAQ;AAC3B,SAAY,QAAQ,iBAAiB,MAAM;AAC/C;AAFgB;AAGT,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,EAAK,WAAW,KAAK,MAAM,GAAG;AAC9B,UAAQ,KAAK,MAAM,GAAG;AAC1B,CAAC;AACM,SAAS,OAAO,QAAQ;AAC3B,SAAY,QAAQ,WAAW,MAAM;AACzC;AAFgB;AAGT,IAAM,eAA6B,gBAAK,aAAa,gBAAgB,CAAC,MAAM,QAAQ;AACvF,EAAK,cAAc,KAAK,MAAM,GAAG;AACjC,UAAQ,KAAK,MAAM,GAAG;AAC1B,CAAC;AACD,SAASC,YAAW,QAAQ;AACxB,SAAYA,YAAW,cAAc,MAAM;AAC/C;AAFS,OAAAA,aAAA;AAIF,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,UAAQ,KAAK,MAAM,GAAG;AAC1B,CAAC;AACD,SAASC,OAAM,QAAQ;AACnB,SAAYA,OAAM,SAAS,MAAM;AACrC;AAFS,OAAAA,QAAA;AAIF,IAAM,SAAuB,gBAAK,aAAa,UAAU,CAAC,MAAM,QAAQ;AAC3E,EAAK,QAAQ,KAAK,MAAM,GAAG;AAC3B,UAAQ,KAAK,MAAM,GAAG;AAC1B,CAAC;AACM,SAAS,MAAM;AAClB,SAAY,KAAK,MAAM;AAC3B;AAFgB;AAGT,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,EAAK,YAAY,KAAK,MAAM,GAAG;AAC/B,UAAQ,KAAK,MAAM,GAAG;AAC1B,CAAC;AACM,SAAS,UAAU;AACtB,SAAY,SAAS,UAAU;AACnC;AAFgB;AAGT,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,EAAK,UAAU,KAAK,MAAM,GAAG;AAC7B,UAAQ,KAAK,MAAM,GAAG;AAC1B,CAAC;AACM,SAAS,MAAM,QAAQ;AAC1B,SAAY,OAAO,UAAU,MAAM;AACvC;AAFgB;AAGT,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,UAAQ,KAAK,MAAM,GAAG;AAC1B,CAAC;AACD,SAASC,OAAM,QAAQ;AACnB,SAAY,MAAM,SAAS,MAAM;AACrC;AAFS,OAAAA,QAAA;AAIF,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,MAAM,CAAC,OAAO,WAAW,KAAK,MAAa,KAAI,OAAO,MAAM,CAAC;AAClE,OAAK,MAAM,CAAC,OAAO,WAAW,KAAK,MAAa,KAAI,OAAO,MAAM,CAAC;AAClE,QAAM,IAAI,KAAK,KAAK;AACpB,OAAK,UAAU,EAAE,UAAU,IAAI,KAAK,EAAE,OAAO,IAAI;AACjD,OAAK,UAAU,EAAE,UAAU,IAAI,KAAK,EAAE,OAAO,IAAI;AACrD,CAAC;AACM,SAASC,MAAK,QAAQ;AACzB,SAAY,MAAM,SAAS,MAAM;AACrC;AAFgB,OAAAA,OAAA;AAGT,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,EAAK,UAAU,KAAK,MAAM,GAAG;AAC7B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,UAAU,IAAI;AACnB,OAAK,MAAM,CAAC,WAAW,WAAW,KAAK,MAAa,WAAU,WAAW,MAAM,CAAC;AAChF,OAAK,WAAW,CAAC,WAAW,KAAK,MAAa,WAAU,GAAG,MAAM,CAAC;AAClE,OAAK,MAAM,CAAC,WAAW,WAAW,KAAK,MAAa,WAAU,WAAW,MAAM,CAAC;AAChF,OAAK,SAAS,CAAC,KAAK,WAAW,KAAK,MAAa,QAAO,KAAK,MAAM,CAAC;AACpE,OAAK,SAAS,MAAM,KAAK;AAC7B,CAAC;AACM,SAAS,MAAM,SAAS,QAAQ;AACnC,SAAY,OAAO,UAAU,SAAS,MAAM;AAChD;AAFgB;AAIT,SAAS,MAAM,QAAQ;AAC1B,QAAM,QAAQ,OAAO,KAAK,IAAI;AAC9B,SAAOC,OAAM,OAAO,KAAK,KAAK,CAAC;AACnC;AAHgB;AAIT,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,EAAK,cAAc,KAAK,MAAM,GAAG;AACjC,UAAQ,KAAK,MAAM,GAAG;AACtB,eAAK,WAAW,MAAM,SAAS,MAAM;AACjC,WAAO,IAAI;AAAA,EACf,CAAC;AACD,OAAK,QAAQ,MAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,IAAI,KAAK,CAAC;AACzD,OAAK,WAAW,CAAC,aAAa,KAAK,MAAM,EAAE,GAAG,KAAK,KAAK,KAAK,SAAmB,CAAC;AACjF,OAAK,cAAc,MAAM,KAAK,MAAM,EAAE,GAAG,KAAK,KAAK,KAAK,UAAU,QAAQ,EAAE,CAAC;AAC7E,OAAK,QAAQ,MAAM,KAAK,MAAM,EAAE,GAAG,KAAK,KAAK,KAAK,UAAU,QAAQ,EAAE,CAAC;AACvE,OAAK,SAAS,MAAM,KAAK,MAAM,EAAE,GAAG,KAAK,KAAK,KAAK,UAAU,MAAM,EAAE,CAAC;AACtE,OAAK,QAAQ,MAAM,KAAK,MAAM,EAAE,GAAG,KAAK,KAAK,KAAK,UAAU,OAAU,CAAC;AACvE,OAAK,SAAS,CAAC,aAAa;AACxB,WAAO,aAAK,OAAO,MAAM,QAAQ;AAAA,EACrC;AACA,OAAK,aAAa,CAAC,aAAa;AAC5B,WAAO,aAAK,WAAW,MAAM,QAAQ;AAAA,EACzC;AACA,OAAK,QAAQ,CAAC,UAAU,aAAK,MAAM,MAAM,KAAK;AAC9C,OAAK,OAAO,CAAC,SAAS,aAAK,KAAK,MAAM,IAAI;AAC1C,OAAK,OAAO,CAAC,SAAS,aAAK,KAAK,MAAM,IAAI;AAC1C,OAAK,UAAU,IAAI,SAAS,aAAK,QAAQ,aAAa,MAAM,KAAK,CAAC,CAAC;AACnE,OAAK,WAAW,IAAI,SAAS,aAAK,SAAS,gBAAgB,MAAM,KAAK,CAAC,CAAC;AAC5E,CAAC;AACM,SAAS,OAAO,OAAO,QAAQ;AAClC,QAAM,MAAM;AAAA,IACR,MAAM;AAAA,IACN,OAAO,SAAS,CAAC;AAAA,IACjB,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC;AACA,SAAO,IAAI,UAAU,GAAG;AAC5B;AAPgB;AAST,SAAS,aAAa,OAAO,QAAQ;AACxC,SAAO,IAAI,UAAU;AAAA,IACjB,MAAM;AAAA,IACN;AAAA,IACA,UAAU,MAAM;AAAA,IAChB,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAPgB;AAST,SAAS,YAAY,OAAO,QAAQ;AACvC,SAAO,IAAI,UAAU;AAAA,IACjB,MAAM;AAAA,IACN;AAAA,IACA,UAAU,QAAQ;AAAA,IAClB,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAPgB;AAQT,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,EAAK,UAAU,KAAK,MAAM,GAAG;AAC7B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,UAAU,IAAI;AACvB,CAAC;AACM,SAAS,MAAM,SAAS,QAAQ;AACnC,SAAO,IAAI,SAAS;AAAA,IAChB,MAAM;AAAA,IACN;AAAA,IACA,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,IAAM,wBAAsC,gBAAK,aAAa,yBAAyB,CAAC,MAAM,QAAQ;AACzG,WAAS,KAAK,MAAM,GAAG;AACvB,EAAK,uBAAuB,KAAK,MAAM,GAAG;AAC9C,CAAC;AACM,SAAS,mBAAmB,eAAe,SAAS,QAAQ;AAE/D,SAAO,IAAI,sBAAsB;AAAA,IAC7B,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AARgB;AAST,IAAM,kBAAgC,gBAAK,aAAa,mBAAmB,CAAC,MAAM,QAAQ;AAC7F,EAAK,iBAAiB,KAAK,MAAM,GAAG;AACpC,UAAQ,KAAK,MAAM,GAAG;AAC1B,CAAC;AACM,SAAS,aAAa,MAAM,OAAO;AACtC,SAAO,IAAI,gBAAgB;AAAA,IACvB,MAAM;AAAA,IACN;AAAA,IACA;AAAA,EACJ,CAAC;AACL;AANgB;AAOT,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,EAAK,UAAU,KAAK,MAAM,GAAG;AAC7B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,OAAO,CAAC,SAAS,KAAK,MAAM;AAAA,IAC7B,GAAG,KAAK,KAAK;AAAA,IACb;AAAA,EACJ,CAAC;AACL,CAAC;AACM,SAAS,MAAM,OAAO,eAAe,SAAS;AACjD,QAAM,UAAU,yBAA8B;AAC9C,QAAM,SAAS,UAAU,UAAU;AACnC,QAAM,OAAO,UAAU,gBAAgB;AACvC,SAAO,IAAI,SAAS;AAAA,IAChB,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAVgB;AAWT,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,EAAK,WAAW,KAAK,MAAM,GAAG;AAC9B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,UAAU,IAAI;AACnB,OAAK,YAAY,IAAI;AACzB,CAAC;AACM,SAAS,OAAO,SAAS,WAAW,QAAQ;AAC/C,SAAO,IAAI,UAAU;AAAA,IACjB,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAPgB;AAST,SAAS,cAAc,SAAS,WAAW,QAAQ;AACtD,QAAM,IAAS,MAAM,OAAO;AAC5B,IAAE,KAAK,SAAS;AAChB,SAAO,IAAI,UAAU;AAAA,IACjB,MAAM;AAAA,IACN,SAAS;AAAA,IACT;AAAA,IACA,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AATgB;AAUT,IAAM,SAAuB,gBAAK,aAAa,UAAU,CAAC,MAAM,QAAQ;AAC3E,EAAK,QAAQ,KAAK,MAAM,GAAG;AAC3B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,UAAU,IAAI;AACnB,OAAK,YAAY,IAAI;AACzB,CAAC;AACM,SAAS,IAAI,SAAS,WAAW,QAAQ;AAC5C,SAAO,IAAI,OAAO;AAAA,IACd,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAPgB;AAQT,IAAM,SAAuB,gBAAK,aAAa,UAAU,CAAC,MAAM,QAAQ;AAC3E,EAAK,QAAQ,KAAK,MAAM,GAAG;AAC3B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,MAAM,IAAI,SAAS,KAAK,MAAW,SAAS,GAAG,IAAI,CAAC;AACzD,OAAK,WAAW,CAAC,WAAW,KAAK,MAAW,SAAS,GAAG,MAAM,CAAC;AAC/D,OAAK,MAAM,IAAI,SAAS,KAAK,MAAW,SAAS,GAAG,IAAI,CAAC;AACzD,OAAK,OAAO,IAAI,SAAS,KAAK,MAAW,MAAM,GAAG,IAAI,CAAC;AAC3D,CAAC;AACM,SAAS,IAAI,WAAW,QAAQ;AACnC,SAAO,IAAI,OAAO;AAAA,IACd,MAAM;AAAA,IACN;AAAA,IACA,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,OAAO,IAAI;AAChB,OAAK,UAAU,OAAO,OAAO,IAAI,OAAO;AACxC,QAAM,OAAO,IAAI,IAAI,OAAO,KAAK,IAAI,OAAO,CAAC;AAC7C,OAAK,UAAU,CAAC,QAAQ,WAAW;AAC/B,UAAM,aAAa,CAAC;AACpB,eAAW,SAAS,QAAQ;AACxB,UAAI,KAAK,IAAI,KAAK,GAAG;AACjB,mBAAW,KAAK,IAAI,IAAI,QAAQ,KAAK;AAAA,MACzC;AAEI,cAAM,IAAI,MAAM,OAAO,KAAK,oBAAoB;AAAA,IACxD;AACA,WAAO,IAAI,QAAQ;AAAA,MACf,GAAG;AAAA,MACH,QAAQ,CAAC;AAAA,MACT,GAAG,aAAK,gBAAgB,MAAM;AAAA,MAC9B,SAAS;AAAA,IACb,CAAC;AAAA,EACL;AACA,OAAK,UAAU,CAAC,QAAQ,WAAW;AAC/B,UAAM,aAAa,EAAE,GAAG,IAAI,QAAQ;AACpC,eAAW,SAAS,QAAQ;AACxB,UAAI,KAAK,IAAI,KAAK,GAAG;AACjB,eAAO,WAAW,KAAK;AAAA,MAC3B;AAEI,cAAM,IAAI,MAAM,OAAO,KAAK,oBAAoB;AAAA,IACxD;AACA,WAAO,IAAI,QAAQ;AAAA,MACf,GAAG;AAAA,MACH,QAAQ,CAAC;AAAA,MACT,GAAG,aAAK,gBAAgB,MAAM;AAAA,MAC9B,SAAS;AAAA,IACb,CAAC;AAAA,EACL;AACJ,CAAC;AACD,SAASA,OAAM,QAAQ,QAAQ;AAC3B,QAAM,UAAU,MAAM,QAAQ,MAAM,IAAI,OAAO,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI;AACxF,SAAO,IAAI,QAAQ;AAAA,IACf,MAAM;AAAA,IACN;AAAA,IACA,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AAPS,OAAAA,QAAA;AAgBF,SAAS,WAAW,SAAS,QAAQ;AACxC,SAAO,IAAI,QAAQ;AAAA,IACf,MAAM;AAAA,IACN;AAAA,IACA,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,EAAK,YAAY,KAAK,MAAM,GAAG;AAC/B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,SAAS,IAAI,IAAI,IAAI,MAAM;AAChC,SAAO,eAAe,MAAM,SAAS;AAAA,IACjC,MAAM;AACF,UAAI,IAAI,OAAO,SAAS,GAAG;AACvB,cAAM,IAAI,MAAM,4EAA4E;AAAA,MAChG;AACA,aAAO,IAAI,OAAO,CAAC;AAAA,IACvB;AAAA,EACJ,CAAC;AACL,CAAC;AACM,SAAS,QAAQ,OAAO,QAAQ;AACnC,SAAO,IAAI,WAAW;AAAA,IAClB,MAAM;AAAA,IACN,QAAQ,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAAA,IAC7C,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,MAAM,CAAC,MAAM,WAAW,KAAK,MAAW,SAAS,MAAM,MAAM,CAAC;AACnE,OAAK,MAAM,CAAC,MAAM,WAAW,KAAK,MAAW,SAAS,MAAM,MAAM,CAAC;AACnE,OAAK,OAAO,CAAC,OAAO,WAAW,KAAK,MAAW,MAAM,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC;AACxG,CAAC;AACM,SAAS,KAAK,QAAQ;AACzB,SAAY,MAAM,SAAS,MAAM;AACrC;AAFgB;AAGT,IAAM,eAA6B,gBAAK,aAAa,gBAAgB,CAAC,MAAM,QAAQ;AACvF,EAAK,cAAc,KAAK,MAAM,GAAG;AACjC,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,KAAK,QAAQ,CAAC,SAAS,SAAS;AACjC,QAAI,KAAK,cAAc,YAAY;AAC/B,YAAM,IAAS,gBAAgB,KAAK,YAAY,IAAI;AAAA,IACxD;AACA,YAAQ,WAAW,CAACC,WAAU;AAC1B,UAAI,OAAOA,WAAU,UAAU;AAC3B,gBAAQ,OAAO,KAAK,aAAK,MAAMA,QAAO,QAAQ,OAAO,GAAG,CAAC;AAAA,MAC7D,OACK;AAED,cAAM,SAASA;AACf,YAAI,OAAO;AACP,iBAAO,WAAW;AACtB,eAAO,SAAS,OAAO,OAAO;AAC9B,eAAO,UAAU,OAAO,QAAQ,QAAQ;AACxC,eAAO,SAAS,OAAO,OAAO;AAE9B,gBAAQ,OAAO,KAAK,aAAK,MAAM,MAAM,CAAC;AAAA,MAC1C;AAAA,IACJ;AACA,UAAM,SAAS,IAAI,UAAU,QAAQ,OAAO,OAAO;AACnD,QAAI,kBAAkB,SAAS;AAC3B,aAAO,OAAO,KAAK,CAACC,YAAW;AAC3B,gBAAQ,QAAQA;AAChB,eAAO;AAAA,MACX,CAAC;AAAA,IACL;AACA,YAAQ,QAAQ;AAChB,WAAO;AAAA,EACX;AACJ,CAAC;AACM,SAAS,UAAU,IAAI;AAC1B,SAAO,IAAI,aAAa;AAAA,IACpB,MAAM;AAAA,IACN,WAAW;AAAA,EACf,CAAC;AACL;AALgB;AAMT,IAAM,cAA4B,gBAAK,aAAa,eAAe,CAAC,MAAM,QAAQ;AACrF,EAAK,aAAa,KAAK,MAAM,GAAG;AAChC,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,SAAS,MAAM,KAAK,KAAK,IAAI;AACtC,CAAC;AACM,SAAS,SAAS,WAAW;AAChC,SAAO,IAAI,YAAY;AAAA,IACnB,MAAM;AAAA,IACN;AAAA,EACJ,CAAC;AACL;AALgB;AAMT,IAAM,cAA4B,gBAAK,aAAa,eAAe,CAAC,MAAM,QAAQ;AACrF,EAAK,aAAa,KAAK,MAAM,GAAG;AAChC,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,SAAS,MAAM,KAAK,KAAK,IAAI;AACtC,CAAC;AACM,SAAS,SAAS,WAAW;AAChC,SAAO,IAAI,YAAY;AAAA,IACnB,MAAM;AAAA,IACN;AAAA,EACJ,CAAC;AACL;AALgB;AAOT,SAASC,SAAQ,WAAW;AAC/B,SAAO,SAAS,SAAS,SAAS,CAAC;AACvC;AAFgB,OAAAA,UAAA;AAGT,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,EAAK,YAAY,KAAK,MAAM,GAAG;AAC/B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,SAAS,MAAM,KAAK,KAAK,IAAI;AAClC,OAAK,gBAAgB,KAAK;AAC9B,CAAC;AACM,SAASC,UAAS,WAAW,cAAc;AAC9C,SAAO,IAAI,WAAW;AAAA,IAClB,MAAM;AAAA,IACN;AAAA,IACA,IAAI,eAAe;AACf,aAAO,OAAO,iBAAiB,aAAa,aAAa,IAAI,aAAK,aAAa,YAAY;AAAA,IAC/F;AAAA,EACJ,CAAC;AACL;AARgB,OAAAA,WAAA;AAST,IAAM,cAA4B,gBAAK,aAAa,eAAe,CAAC,MAAM,QAAQ;AACrF,EAAK,aAAa,KAAK,MAAM,GAAG;AAChC,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,SAAS,MAAM,KAAK,KAAK,IAAI;AACtC,CAAC;AACM,SAAS,SAAS,WAAW,cAAc;AAC9C,SAAO,IAAI,YAAY;AAAA,IACnB,MAAM;AAAA,IACN;AAAA,IACA,IAAI,eAAe;AACf,aAAO,OAAO,iBAAiB,aAAa,aAAa,IAAI,aAAK,aAAa,YAAY;AAAA,IAC/F;AAAA,EACJ,CAAC;AACL;AARgB;AAST,IAAM,iBAA+B,gBAAK,aAAa,kBAAkB,CAAC,MAAM,QAAQ;AAC3F,EAAK,gBAAgB,KAAK,MAAM,GAAG;AACnC,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,SAAS,MAAM,KAAK,KAAK,IAAI;AACtC,CAAC;AACM,SAAS,YAAY,WAAW,QAAQ;AAC3C,SAAO,IAAI,eAAe;AAAA,IACtB,MAAM;AAAA,IACN;AAAA,IACA,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,EAAK,YAAY,KAAK,MAAM,GAAG;AAC/B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,SAAS,MAAM,KAAK,KAAK,IAAI;AACtC,CAAC;AACM,SAAS,QAAQ,WAAW;AAC/B,SAAO,IAAI,WAAW;AAAA,IAClB,MAAM;AAAA,IACN;AAAA,EACJ,CAAC;AACL;AALgB;AAMT,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,EAAK,UAAU,KAAK,MAAM,GAAG;AAC7B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,SAAS,MAAM,KAAK,KAAK,IAAI;AAClC,OAAK,cAAc,KAAK;AAC5B,CAAC;AACD,SAASC,QAAO,WAAW,YAAY;AACnC,SAAO,IAAI,SAAS;AAAA,IAChB,MAAM;AAAA,IACN;AAAA,IACA,YAAa,OAAO,eAAe,aAAa,aAAa,MAAM;AAAA,EACvE,CAAC;AACL;AANS,OAAAA,SAAA;AAQF,IAAM,SAAuB,gBAAK,aAAa,UAAU,CAAC,MAAM,QAAQ;AAC3E,EAAK,QAAQ,KAAK,MAAM,GAAG;AAC3B,UAAQ,KAAK,MAAM,GAAG;AAC1B,CAAC;AACM,SAAS,IAAI,QAAQ;AACxB,SAAY,KAAK,QAAQ,MAAM;AACnC;AAFgB;AAGT,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,KAAK,IAAI;AACd,OAAK,MAAM,IAAI;AACnB,CAAC;AACM,SAAS,KAAK,KAAK,KAAK;AAC3B,SAAO,IAAI,QAAQ;AAAA,IACf,MAAM;AAAA,IACN,IAAI;AAAA,IACJ;AAAA;AAAA,EAEJ,CAAC;AACL;AAPgB;AAQT,IAAM,WAAyB,gBAAK,aAAa,YAAY,CAAC,MAAM,QAAQ;AAC/E,UAAQ,KAAK,MAAM,GAAG;AACtB,EAAK,UAAU,KAAK,MAAM,GAAG;AACjC,CAAC;AACM,SAAS,MAAM,KAAK,KAAK,QAAQ;AACpC,SAAO,IAAI,SAAS;AAAA,IAChB,MAAM;AAAA,IACN,IAAI;AAAA,IACJ;AAAA,IACA,WAAW,OAAO;AAAA,IAClB,kBAAkB,OAAO;AAAA,EAC7B,CAAC;AACL;AARgB;AAST,IAAM,cAA4B,gBAAK,aAAa,eAAe,CAAC,MAAM,QAAQ;AACrF,EAAK,aAAa,KAAK,MAAM,GAAG;AAChC,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,SAAS,MAAM,KAAK,KAAK,IAAI;AACtC,CAAC;AACM,SAAS,SAAS,WAAW;AAChC,SAAO,IAAI,YAAY;AAAA,IACnB,MAAM;AAAA,IACN;AAAA,EACJ,CAAC;AACL;AALgB;AAMT,IAAM,qBAAmC,gBAAK,aAAa,sBAAsB,CAAC,MAAM,QAAQ;AACnG,EAAK,oBAAoB,KAAK,MAAM,GAAG;AACvC,UAAQ,KAAK,MAAM,GAAG;AAC1B,CAAC;AACM,SAAS,gBAAgB,OAAO,QAAQ;AAC3C,SAAO,IAAI,mBAAmB;AAAA,IAC1B,MAAM;AAAA,IACN;AAAA,IACA,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACL;AANgB;AAOT,IAAM,UAAwB,gBAAK,aAAa,WAAW,CAAC,MAAM,QAAQ;AAC7E,EAAK,SAAS,KAAK,MAAM,GAAG;AAC5B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,SAAS,MAAM,KAAK,KAAK,IAAI,OAAO;AAC7C,CAAC;AACM,SAAS,KAAK,QAAQ;AACzB,SAAO,IAAI,QAAQ;AAAA,IACf,MAAM;AAAA,IACN;AAAA,EACJ,CAAC;AACL;AALgB;AAMT,IAAM,aAA2B,gBAAK,aAAa,cAAc,CAAC,MAAM,QAAQ;AACnF,EAAK,YAAY,KAAK,MAAM,GAAG;AAC/B,UAAQ,KAAK,MAAM,GAAG;AACtB,OAAK,SAAS,MAAM,KAAK,KAAK,IAAI;AACtC,CAAC;AACM,SAAS,QAAQ,WAAW;AAC/B,SAAO,IAAI,WAAW;AAAA,IAClB,MAAM;AAAA,IACN;AAAA,EACJ,CAAC;AACL;AALgB;AAMT,IAAM,cAA4B,gBAAK,aAAa,eAAe,CAAC,MAAM,QAAQ;AACrF,EAAK,aAAa,KAAK,MAAM,GAAG;AAChC,UAAQ,KAAK,MAAM,GAAG;AAC1B,CAAC;AACM,SAAS,UAAU,QAAQ;AAC9B,SAAO,IAAI,YAAY;AAAA,IACnB,MAAM;AAAA,IACN,OAAO,MAAM,QAAQ,QAAQ,KAAK,IAAI,MAAM,QAAQ,KAAK,IAAK,QAAQ,SAAS,MAAM,QAAQ,CAAC;AAAA,IAC9F,QAAQ,QAAQ,UAAU,QAAQ;AAAA,EACtC,CAAC;AACL;AANgB;AAQT,IAAM,YAA0B,gBAAK,aAAa,aAAa,CAAC,MAAM,QAAQ;AACjF,EAAK,WAAW,KAAK,MAAM,GAAG;AAC9B,UAAQ,KAAK,MAAM,GAAG;AAC1B,CAAC;AAEM,SAAS,MAAM,IAAI;AACtB,QAAM,KAAK,IAAS,UAAU;AAAA,IAC1B,OAAO;AAAA;AAAA,EAEX,CAAC;AACD,KAAG,KAAK,QAAQ;AAChB,SAAO;AACX;AAPgB;AAQT,SAAS,OAAO,IAAI,SAAS;AAChC,SAAY,QAAQ,WAAW,OAAO,MAAM,OAAO,OAAO;AAC9D;AAFgB;AAGT,SAAS,OAAO,IAAI,UAAU,CAAC,GAAG;AACrC,SAAY,QAAQ,WAAW,IAAI,OAAO;AAC9C;AAFgB;AAIT,SAAS,YAAY,IAAI;AAC5B,SAAY,aAAa,EAAE;AAC/B;AAFgB;AAGhB,SAAS,YAAY,KAAK,SAAS;AAAA,EAC/B,OAAO,yBAAyB,IAAI,IAAI;AAC5C,GAAG;AACC,QAAM,OAAO,IAAI,UAAU;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,IAAI,wBAAC,SAAS,gBAAgB,KAA1B;AAAA,IACJ,OAAO;AAAA,IACP,GAAG,aAAK,gBAAgB,MAAM;AAAA,EAClC,CAAC;AACD,OAAK,KAAK,IAAI,QAAQ;AACtB,SAAO;AACX;AAZS;AAeF,IAAM,aAAa,2BAAI,SAAc,YAAY;AAAA,EACpD,OAAO;AAAA,EACP,SAAS;AAAA,EACT,QAAQ;AACZ,GAAG,GAAG,IAAI,GAJgB;AAKnB,SAAS,KAAK,QAAQ;AACzB,QAAM,aAAa,KAAK,MAAM;AAC1B,WAAO,MAAM,CAACC,QAAO,MAAM,GAAGC,QAAO,GAAGC,SAAQ,GAAGC,OAAM,GAAG,MAAM,UAAU,GAAG,OAAOH,QAAO,GAAG,UAAU,CAAC,CAAC;AAAA,EAChH,CAAC;AACD,SAAO;AACX;AALgB;AAQT,SAAS,WAAW,IAAI,QAAQ;AACnC,SAAO,KAAK,UAAU,EAAE,GAAG,MAAM;AACrC;AAFgB;;;AK7gChB;AAAA;AAAA;AAAAI;AAGO,IAAM,eAAe;AAAA,EACxB,cAAc;AAAA,EACd,SAAS;AAAA,EACT,WAAW;AAAA,EACX,gBAAgB;AAAA,EAChB,iBAAiB;AAAA,EACjB,mBAAmB;AAAA,EACnB,eAAe;AAAA,EACf,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,eAAe;AAAA,EACf,QAAQ;AACZ;AAGO,SAAS,YAAYC,MAAK;AAC7B,EAAKC,QAAO;AAAA,IACR,aAAaD;AAAA,EACjB,CAAC;AACL;AAJgB;AAMT,SAAS,cAAc;AAC1B,SAAYC,QAAO,EAAE;AACzB;AAFgB;AAIT,IAAI;AACV,0BAAUC,wBAAuB;AAClC,GAAG,0BAA0B,wBAAwB,CAAC,EAAE;;;AC9BxD;AAAA;AAAA,gBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,cAAAC;AAAA;AAAA;AAAA;AAAA;AAAAC;AAEO,SAASC,QAAO,QAAQ;AAC3B,SAAY,eAAuB,WAAW,MAAM;AACxD;AAFgB,OAAAA,SAAA;AAGT,SAASC,QAAO,QAAQ;AAC3B,SAAY,eAAuB,WAAW,MAAM;AACxD;AAFgB,OAAAA,SAAA;AAGT,SAASC,SAAQ,QAAQ;AAC5B,SAAY,gBAAwB,YAAY,MAAM;AAC1D;AAFgB,OAAAA,UAAA;AAGT,SAASC,QAAO,QAAQ;AAC3B,SAAY,eAAuB,WAAW,MAAM;AACxD;AAFgB,OAAAA,SAAA;AAGT,SAASC,MAAK,QAAQ;AACzB,SAAY,aAAqB,SAAS,MAAM;AACpD;AAFgB,OAAAA,OAAA;;;ArELhBC,QAAO,WAAG,CAAC;;;AsETX;AAAA;AAAA;AAAAC;AAGAC;AAaA,eAAsB,YAAY,OAAe,QAA0C;AACzF,MAAI;AAEF,UAAM,UAAe,MAAMC,QAAO,OAAO,QAAQ,OAAO;AAExD,QAAI,QAAQ,OAAO,QAAQ,MAAM,KAAK,IAAI,IAAI,KAAM;AAClD,aAAO;AAAA,IACT;AACA,WAAO;AAAA,MACL,IAAI,QAAQ,UAAU,QAAQ;AAAA,MAC9B,OAAO,QAAQ;AAAA,MACf,MAAM,QAAQ,QAAQ;AAAA,MACtB,aAAa,QAAQ,eAAe,CAAC;AAAA,IACvC;AAAA,EACF,SAASC,SAAO;AACd,IAAAC,KAAI,MAAM,4BAA4BD,SAAgB,EAAE,WAAW,eAAe,CAAC;AACnF,WAAO;AAAA,EACT;AACF;AAlBsB;AAqBtB,eAAsB,eACpB,GACA,MACA;AACA,QAAM,aAAa,EAAE,IAAI,OAAO,eAAe;AAE/C,MAAI,CAAC,cAAc,CAAC,WAAW,WAAW,SAAS,GAAG;AACpD,WAAO,EAAE,KAAK,EAAE,OAAO,eAAe,GAAG,GAAG;AAAA,EAC9C;AAEA,QAAM,QAAQ,WAAW,MAAM,CAAC;AAChC,QAAM,SAAS,EAAE,IAAI,cAAc;AACnC,QAAM,OAAO,MAAM,YAAY,OAAO,MAAM;AAE5C,MAAI,CAAC,MAAM;AACT,WAAO,EAAE,KAAK,EAAE,OAAO,2BAA2B,GAAG,GAAG;AAAA,EAC1D;AAGA,IAAE,IAAI,QAAQ,IAAI;AAElB,QAAM,KAAK;AACb;AAtBsB;AA+Gf,IAAM,eAAe;;;AxE7I5B,IAAME,OAAM,IAAIC,MAAwB;AAGxCD,KAAI,IAAI,WAAW,OAAO,MAAM;AAE5B,QAAM,gBAAgB,EAAE,IAAI,OAAO,SAAS;AAC5C,MAAI,CAAC,iBAAiB,kBAAkB,aAAa;AACjD,WAAO,EAAE,KAAK,EAAE,OAAO,qBAAqB,GAAG,GAAG;AAAA,EACtD;AAEA,QAAM,gBAAgB,IAAI,cAAc;AACxC,QAAM,CAAC,QAAQ,MAAM,IAAI,OAAO,OAAO,aAAa;AAGpD,SAAO,OAAO;AACd,kBAAgB,QAAQ,EAAE,GAAG;AAE7B,SAAO,IAAI,SAAS,MAAM;AAAA,IACtB,QAAQ;AAAA,IACR,WAAW;AAAA,EACf,CAAC;AACL,CAAC;AAGD,eAAe,gBAAgB,IAAeE,MAAU;AACpD,MAAIC,UAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,MAAM;AAAA,IACN,mBAAmB;AAAA,IACnB,iBAAiB,CAAC;AAAA,EACtB;AAGA,QAAM,cAA6B,CAAC;AACpC,MAAI,eAAe;AACnB,MAAI,gBAAgB;AAEpB,KAAG,iBAAiB,WAAW,OAAO,UAAU;AAC5C,QAAI;AAEA,UAAI,OAAO,MAAM,SAAS,UAAU;AAChC,cAAM,UAAU,KAAK,MAAM,MAAM,IAAI;AAErC,YAAI,QAAQ,SAAS,UAAU;AAC3B,UAAAA,UAAS,EAAE,GAAGA,SAAQ,GAAG,QAAQ;AACjC,aAAG,KAAK,KAAK,UAAU;AAAA,YACnB,MAAM;AAAA,YACN,QAAAA;AAAA,UACJ,CAAC,CAAC;AAAA,QACN,WAAW,QAAQ,SAAS,eAAe;AACvC,0BAAgB;AAChB,aAAG,MAAM;AAAA,QACb;AAAA,MACJ,WAES,MAAM,gBAAgB,aAAa;AACxC,oBAAY,KAAK,MAAM,IAAI;AAG3B,cAAM,YAAY,YAAY,OAAO,CAAC,KAAK,QAAQ,MAAM,IAAI,YAAY,CAAC;AAC1E,cAAM,aAAa,OAAQ;AAE3B,YAAI,aAAa,cAAc,CAAC,cAAc;AAC1C,yBAAe;AAGf,gBAAM,iBAAiB,IAAI,YAAY,SAAS;AAChD,gBAAM,OAAO,IAAI,WAAW,cAAc;AAC1C,cAAI,SAAS;AAEb,qBAAW,UAAU,aAAa;AAC9B,iBAAK,IAAI,IAAI,WAAW,MAAM,GAAG,MAAM;AACvC,sBAAU,OAAO;AAAA,UACrB;AAGA,sBAAY,SAAS;AAGrB,cAAI;AACA,kBAAM,gBAAgB,MAAM,aAAaD,KAAI,IAAI,gBAAgB;AAAA,cAC7D,MAAMC,QAAO;AAAA,cACb,UAAUA,QAAO;AAAA,cACjB,YAAY;AAAA,YAChB,CAAQ;AAGR,gBAAI,cAAc,QAAQ,cAAc,KAAK,KAAK,GAAG;AACjD,oBAAM,kBAAkB,cAAc,KAAK,KAAK;AAGhD,kBAAI,eAAuC,CAAC;AAC5C,kBAAIA,QAAO,qBAAqBA,QAAO,gBAAgB,SAAS,GAAG;AAC/D,oBAAI;AACA,iCAAe,MAAM;AAAA,oBACjBD,KAAI;AAAA,oBACJ;AAAA,oBACAC,QAAO;AAAA,oBACN,cAAsB,YAAY;AAAA,kBACvC;AAAA,gBACJ,SAASC,SAAO;AACZ,kBAAAC,KAAI,MAAM,qBAAqBD,SAAgB,EAAE,WAAW,qBAAqB,CAAC;AAAA,gBACtF;AAAA,cACJ;AAEA,iBAAG,KAAK,KAAK,UAAU;AAAA,gBACnB,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,UAAW,cAAsB;AAAA,gBACjC,OAAQ,cAAsB;AAAA,gBAC9B;AAAA,gBACA,UAAU;AAAA,gBACV,WAAW,KAAK,IAAI;AAAA,gBACpB,YAAa,cAAsB,cAAc;AAAA,cACrD,CAAC,CAAC;AAAA,YACN;AAAA,UACJ,SAASA,SAAO;AACZ,YAAAC,KAAI,MAAM,uBAAuBD,SAAgB,EAAE,WAAW,qBAAqB,CAAC;AACpF,eAAG,KAAK,KAAK,UAAU;AAAA,cACnB,MAAM;AAAA,cACN,SAAS;AAAA,YACb,CAAC,CAAC;AAAA,UACN;AAEA,yBAAe;AAAA,QACnB;AAAA,MACJ;AAAA,IACJ,SAASA,SAAO;AACZ,MAAAC,KAAI,MAAM,mBAAmBD,SAAgB,EAAE,WAAW,qBAAqB,CAAC;AAChF,SAAG,KAAK,KAAK,UAAU;AAAA,QACnB,MAAM;AAAA,QACN,SAAS;AAAA,MACb,CAAC,CAAC;AAAA,IACN;AAAA,EACJ,CAAC;AAED,KAAG,iBAAiB,SAAS,MAAM;AAC/B,oBAAgB;AAChB,gBAAY,SAAS;AAAA,EACzB,CAAC;AAGD,QAAM,eAAe,YAAY,MAAM;AACnC,QAAI,iBAAiB,GAAG,eAAe,UAAU,MAAM;AACnD,SAAG,KAAK,KAAK,UAAU,EAAE,MAAM,OAAO,CAAC,CAAC;AAAA,IAC5C,OAAO;AACH,oBAAc,YAAY;AAAA,IAC9B;AAAA,EACJ,GAAG,GAAK;AACZ;AA9He;AAiIf,IAAM,mBAAmB,iBAAE,OAAO;AAAA,EAC9B,WAAW,iBAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EACrC,cAAc,iBAAE,OAAO,EAAE,SAAS;AAAA,EAClC,UAAU,iBAAE,OAAO,EAAE,SAAS;AAAA,EAC9B,MAAM,iBAAE,KAAK,CAAC,cAAc,WAAW,CAAC,EAAE,SAAS;AAAA,EACnD,iBAAiB,iBAAE,QAAQ,EAAE,SAAS;AAC1C,CAAC;AAEDJ,KAAI,KAAK,KAAK,cAAc,OAAO,MAAM;AACrC,MAAI;AACA,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,UAAM,EAAE,WAAW,cAAc,UAAU,MAAM,gBAAgB,IAAI,iBAAiB,MAAM,IAAI;AAEhG,QAAI;AAEJ,QAAI,WAAW;AAEX,YAAM,WAAW,MAAM,MAAM,SAAS;AACtC,UAAI,CAAC,SAAS,IAAI;AACd,eAAO,EAAE,KAAK,EAAE,OAAO,wBAAwB,GAAG,GAAG;AAAA,MACzD;AACA,oBAAc,MAAM,SAAS,YAAY;AAAA,IAC7C,WAAW,cAAc;AAErB,YAAM,eAAe,KAAK,YAAY;AACtC,YAAM,QAAQ,IAAI,WAAW,aAAa,MAAM;AAChD,eAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,cAAM,CAAC,IAAI,aAAa,WAAW,CAAC;AAAA,MACxC;AACA,oBAAc,MAAM;AAAA,IACxB,OAAO;AACH,aAAO,EAAE,KAAK,EAAE,OAAO,oBAAoB,GAAG,GAAG;AAAA,IACrD;AAGA,UAAM,SAAS,MAAM,aAAa,EAAE,IAAI,IAAI,aAAa;AAAA,MACrD,MAAM,QAAQ;AAAA,MACd,UAAU,YAAY;AAAA,MACtB,YAAY;AAAA,IAChB,CAAQ;AAER,WAAO,EAAE,KAAK;AAAA,MACV,SAAS;AAAA,MACT,eAAe;AAAA,IACnB,CAAC;AAAA,EACL,SAASI,SAAO;AACZ,IAAAC,KAAI,MAAM,uBAAuBD,SAAgB,EAAE,WAAW,qBAAqB,CAAC;AACpF,WAAO,EAAE,KAAK;AAAA,MACV,OAAO;AAAA,MACP,SAASA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,IACtD,GAAG,GAAG;AAAA,EACV;AACJ,CAAC;AAGD,IAAO,qBAAQE;;;AyEvNf;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;AAgBO,IAAM,eAAN,MAAmB;AAAA,EAhB1B,OAgB0B;AAAA;AAAA;AAAA,EAKxB,YAAY,IAAiB,SAAS,SAAS,aAAa,MAAM;AAChE,SAAK,KAAK;AACV,SAAK,SAAS;AACd,SAAK,aAAa;AAAA,EACpB;AAAA;AAAA,EAGQ,WAAW,OAAyB;AAC1C,WAAO,CAAC,KAAK,QAAQ,GAAG,KAAK,EAAE,KAAK,GAAG;AAAA,EACzC;AAAA;AAAA,EAGA,MAAM,IACJ,KACA,MACA,UAAwB,CAAC,GACV;AACf,UAAM,MAAM,QAAQ,OAAO,KAAK;AAChC,UAAM,MAAM,KAAK,IAAI;AAErB,UAAM,QAAuB;AAAA,MAC3B;AAAA,MACA,WAAW;AAAA,MACX,WAAW,MAAO,MAAM;AAAA,MACxB,MAAM,QAAQ;AAAA,MACd,SAAS;AAAA,IACX;AAEA,UAAM,KAAK,GAAG;AAAA,MACZ,KAAK,QAAQ,GAAG;AAAA,MAChB,KAAK,UAAU,KAAK;AAAA,MACpB;AAAA,QACE,eAAe;AAAA,QACf,UAAU;AAAA,UACR,MAAM,QAAQ;AAAA,UACd,UAAU,QAAQ,YAAY;AAAA,QAChC;AAAA,MACF;AAAA,IACF;AAGA,QAAI,QAAQ,QAAQ,QAAQ,KAAK,SAAS,GAAG;AAC3C,YAAM,KAAK,eAAe,KAAK,QAAQ,IAAI;AAAA,IAC7C;AAAA,EACF;AAAA;AAAA,EAGA,MAAM,IAAO,KAAgC;AAC3C,UAAM,UAAU,KAAK,QAAQ,GAAG;AAChC,UAAMC,UAAS,MAAM,KAAK,GAAG,IAAI,SAAS,EAAE,MAAM,OAAO,CAAC;AAE1D,QAAI,CAACA,SAAQ;AACX,aAAO;AAAA,IACT;AAGA,QAAIA,QAAO,YAAY,KAAK,IAAI,GAAG;AACjC,YAAM,KAAK,GAAG,OAAO,OAAO;AAC5B,aAAO;AAAA,IACT;AAEA,WAAOA,QAAO;AAAA,EAChB;AAAA;AAAA,EAGA,MAAM,IAAI,KAA+B;AACvC,UAAM,SAAS,MAAM,KAAK,IAAI,GAAG;AACjC,WAAO,WAAW;AAAA,EACpB;AAAA;AAAA,EAGA,MAAM,OAAO,KAA4B;AACvC,UAAM,UAAU,KAAK,QAAQ,GAAG;AAChC,UAAM,KAAK,GAAG,OAAO,OAAO;AAAA,EAC9B;AAAA;AAAA,EAGA,MAAM,YAAY,KAA4B;AAC5C,UAAM,SAAS,KAAK,QAAQ,QAAQ,GAAG;AACvC,UAAM,OAAO,MAAM,KAAK,GAAG,IAAc,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEjE,QAAI,QAAQ,KAAK,SAAS,GAAG;AAC3B,YAAM,QAAQ,IAAI,KAAK,IAAI,SAAO,KAAK,GAAG,OAAO,KAAK,QAAQ,GAAG,CAAC,CAAC,CAAC;AACpE,YAAM,KAAK,GAAG,OAAO,MAAM;AAAA,IAC7B;AAAA,EACF;AAAA;AAAA,EAGA,MAAM,eAAe,QAA+B;AAClD,UAAM,aAAa,KAAK,QAAQ,MAAM;AACtC,UAAM,OAAO,MAAM,KAAK,GAAG,KAAK,EAAE,QAAQ,WAAW,CAAC;AAEtD,UAAM,QAAQ;AAAA,MACZ,KAAK,KAAK,IAAI,SAAO,KAAK,GAAG,OAAO,IAAI,IAAI,CAAC;AAAA,IAC/C;AAAA,EACF;AAAA;AAAA,EAGA,MAAc,eAAe,KAAa,MAA+B;AACvE,UAAM,QAAQ;AAAA,MACZ,KAAK,IAAI,OAAM,QAAO;AACpB,cAAM,SAAS,KAAK,QAAQ,QAAQ,GAAG;AACvC,cAAM,WAAW,MAAM,KAAK,GAAG,IAAc,QAAQ,EAAE,MAAM,OAAO,CAAC,KAAK,CAAC;AAE3E,YAAI,CAAC,SAAS,SAAS,GAAG,GAAG;AAC3B,mBAAS,KAAK,GAAG;AACjB,gBAAM,KAAK,GAAG,IAAI,QAAQ,KAAK,UAAU,QAAQ,GAAG;AAAA,YAClD,eAAe,QAAQ;AAAA;AAAA,UACzB,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA,EAGA,MAAM,WAIH;AACD,UAAM,OAAO,MAAM,KAAK,GAAG,KAAK,EAAE,QAAQ,KAAK,OAAO,CAAC;AAEvD,WAAO;AAAA,MACL,WAAW,KAAK,KAAK;AAAA,MACrB,eAAe,KAAK,KAAK,OAAO,CAAC,KAAK,QAAQ,OAAQ,IAAI,UAAkB,QAAQ,IAAI,CAAC;AAAA,MACzF,WAAW,KAAK,KAAK,CAAC,GAAG;AAAA,IAC3B;AAAA,EACF;AACF;AAGO,IAAM,eAAN,MAAmB;AAAA,EAxJ1B,OAwJ0B;AAAA;AAAA;AAAA,EAGxB,YAAY,IAAiB;AAC3B,SAAK,QAAQ,IAAI,aAAa,IAAI,WAAW,IAAI;AAAA,EACnD;AAAA;AAAA,EAGA,MAAM,WAAW,WAAmB,MAAW,MAAM,MAAqB;AACxE,UAAM,KAAK,MAAM,IAAI,WAAW,MAAM;AAAA,MACpC;AAAA,MACA,MAAM,CAAC,WAAW,QAAQ,KAAK,MAAM,EAAE;AAAA,IACzC,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,MAAM,WAAW,WAAiC;AAChD,WAAO,KAAK,MAAM,IAAI,SAAS;AAAA,EACjC;AAAA;AAAA,EAGA,MAAM,eAAe,WAAmB,MAAM,MAAwB;AACpE,UAAM,UAAU,MAAM,KAAK,WAAW,SAAS;AAC/C,QAAI,CAAC,QAAS,QAAO;AAErB,UAAM,KAAK,WAAW,WAAW,SAAS,GAAG;AAC7C,WAAO;AAAA,EACT;AAAA;AAAA,EAGA,MAAM,mBAAmB,QAA+B;AACtD,UAAM,KAAK,MAAM,YAAY,QAAQ,MAAM,EAAE;AAAA,EAC/C;AAAA;AAAA,EAGA,MAAM,oBAAmC;AACvC,UAAM,KAAK,MAAM,YAAY,SAAS;AAAA,EACxC;AACF;AAGO,IAAM,WAAN,MAAe;AAAA,EAjMtB,OAiMsB;AAAA;AAAA;AAAA,EAGpB,YAAY,IAAiB;AAC3B,SAAK,QAAQ,IAAI,aAAa,IAAI,OAAO,GAAG;AAAA,EAC9C;AAAA;AAAA,EAGQ,WAAW,QAAgBC,MAAa,QAAsB;AACpE,UAAM,cAAc,SAAS,KAAK,UAAU,MAAM,IAAI;AACtD,WAAO,GAAG,MAAM,IAAIA,IAAG,IAAI,WAAW;AAAA,EACxC;AAAA;AAAA,EAGA,MAAM,cACJ,QACAA,MACA,UACA,QACA,MAAM,KACS;AACf,UAAM,MAAM,KAAK,WAAW,QAAQA,MAAK,MAAM;AAC/C,UAAM,KAAK,MAAM,IAAI,KAAK,UAAU,EAAE,KAAK,MAAM,CAAC,OAAO,MAAM,EAAE,CAAC;AAAA,EACpE;AAAA;AAAA,EAGA,MAAM,kBACJ,QACAA,MACA,QACc;AACd,UAAM,MAAM,KAAK,WAAW,QAAQA,MAAK,MAAM;AAC/C,WAAO,KAAK,MAAM,IAAI,GAAG;AAAA,EAC3B;AAAA;AAAA,EAGA,MAAM,iBAAiB,QAA+B;AACpD,UAAM,KAAK,MAAM,YAAY,MAAM;AAAA,EACrC;AAAA;AAAA,EAGA,MAAM,gBAA+B;AACnC,UAAM,KAAK,MAAM,YAAY,KAAK;AAAA,EACpC;AACF;AAGO,IAAM,YAAN,MAAgB;AAAA,EAhPvB,OAgPuB;AAAA;AAAA;AAAA,EAGrB,YAAY,IAAiB;AAC3B,SAAK,QAAQ,IAAI,aAAa,IAAI,QAAQ,KAAK;AAAA,EACjD;AAAA;AAAA,EAGA,MAAM,QAAQ,QAAgBC,UAA6B;AACzD,UAAM,KAAK,MAAM,IAAI,WAAW,MAAM,IAAIA,UAAS;AAAA,MACjD,KAAK;AAAA,MACL,MAAM,CAAC,cAAc;AAAA,IACvB,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,MAAM,QAAQ,QAA8B;AAC1C,WAAO,KAAK,MAAM,IAAI,WAAW,MAAM,EAAE;AAAA,EAC3C;AAAA;AAAA,EAGA,MAAM,gBAAgB,QAAgB,UAA8B;AAClE,UAAM,KAAK,MAAM,IAAI,YAAY,MAAM,IAAI,UAAU;AAAA,MACnD,KAAK,QAAQ;AAAA;AAAA,MACb,MAAM,CAAC,eAAe;AAAA,IACxB,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,MAAM,gBAAgB,QAA8B;AAClD,WAAO,KAAK,MAAM,IAAI,YAAY,MAAM,EAAE;AAAA,EAC5C;AAAA;AAAA,EAGA,MAAM,eAAe,QAA+B;AAClD,UAAM,QAAQ,IAAI;AAAA,MAChB,KAAK,MAAM,OAAO,WAAW,MAAM,EAAE;AAAA,MACrC,KAAK,MAAM,OAAO,YAAY,MAAM,EAAE;AAAA,IACxC,CAAC;AAAA,EACH;AACF;;;ADnKA,eAAsB,gBACpB,IACA,UACe;AACf,QAAM,WAAW,IAAI,SAAS,EAAE;AAEhC,QAAM,QAAQ;AAAA,IACZ,SAAS,IAAI,aAAW;AACtB,UAAI,YAAY,KAAK;AACnB,eAAO,SAAS,cAAc;AAAA,MAChC;AACA,aAAO,SAAS,iBAAiB,OAAO;AAAA,IAC1C,CAAC;AAAA,EACH;AACF;AAdsB;AAiBtB,eAAsB,UACpBC,MACA,WACe;AACf,QAAM,WAAW,IAAI,SAASA,KAAI,KAAK;AAEvC,QAAM,QAAQ;AAAA,IACZ,UAAU,IAAI,OAAO,EAAE,KAAAC,MAAK,MAAM,KAAK,MAAM;AAC3C,UAAI;AAEF,cAAM,WAAW,MAAM,MAAMA,IAAG;AAChC,YAAI,SAAS,IAAI;AACf,gBAAM,OAAO,MAAM,SAAS,KAAK;AACjC,gBAAM,SAAS,IAAI,IAAIA,IAAG;AAC1B,gBAAM,WAAW,GAAG,OAAO,QAAQ,GAAG,OAAO,MAAM;AAEnD,gBAAM,SAAS,cAAc,OAAO,UAAU,MAAM,MAAM,GAAG;AAAA,QAC/D;AAAA,MACF,SAASC,SAAO;AACd,gBAAQ,MAAM,4BAA4BD,IAAG,KAAKC,OAAK;AAAA,MACzD;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAvBsB;AA0BtB,eAAsB,cAAc,IAIjC;AACD,QAAM,OAAO,MAAM,GAAG,KAAK,EAAE,OAAO,IAAK,CAAC;AAE1C,QAAM,aAAqC,CAAC;AAE5C,aAAW,OAAO,KAAK,MAAM;AAC3B,UAAM,CAAC,MAAM,IAAI,IAAI,KAAK,MAAM,GAAG;AACnC,eAAW,MAAM,KAAK,WAAW,MAAM,KAAK,KAAK;AAAA,EACnD;AAEA,SAAO;AAAA,IACL,WAAW,KAAK,KAAK;AAAA,IACrB,eAAe,KAAK,KAAK,OAAO,CAAC,KAAK,QAAa,OAAO,IAAI,UAAU,QAAQ,IAAI,CAAC;AAAA,IACrF;AAAA,EACF;AACF;AAnBsB;;;ADzJtB,IAAMC,OAAM,IAAIC,MAAwB;AAGxCD,KAAI,IAAI,MAAM,KAAK,CAAC;AAGpBA,KAAI,IAAI,MAAM,OAAO,GAAG,SAAS;AAC/B,QAAM,SAAS,EAAE,IAAI,OAAO,WAAW;AACvC,MAAI,WAAW,EAAE,IAAI,iBAAiB;AACpC,WAAO,EAAE,KAAK,EAAE,OAAO,eAAe,GAAG,GAAG;AAAA,EAC9C;AACA,QAAM,KAAK;AACb,CAAC;AAGDA,KAAI,IAAI,UAAU,OAAO,MAAM;AAC7B,MAAI;AACF,UAAM,QAAQ,MAAM,cAAc,EAAE,IAAI,KAAK;AAE7C,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT;AAAA,MACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC,CAAC;AAAA,EACH,SAASE,SAAY;AACnB,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,QAAQ,GAAG,GAAG;AAAA,EAC7C;AACF,CAAC;AAGDF,KAAI,KAAK,eAAe,OAAO,MAAM;AACnC,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAKtB;AAEH,QAAI,KAAK,SAAS,OAAO;AAEvB,YAAM,eAAe,IAAI,aAAa,EAAE,IAAI,KAAK;AACjD,YAAM,aAAa,eAAe,EAAE;AAEpC,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AAEA,QAAI,KAAK,SAAS,OAAO;AACvB,YAAM,WAAW,IAAI,SAAS,EAAE,IAAI,KAAK;AACzC,YAAM,SAAS,cAAc;AAE7B,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AAEA,QAAI,KAAK,SAAS,WAAW;AAC3B,YAAM,eAAe,IAAI,aAAa,EAAE,IAAI,KAAK;AACjD,YAAM,aAAa,kBAAkB;AAErC,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AAEA,QAAI,KAAK,SAAS,UAAU,KAAK,QAAQ;AACvC,YAAM,YAAY,IAAI,UAAU,EAAE,IAAI,KAAK;AAC3C,YAAM,UAAU,eAAe,KAAK,MAAM;AAE1C,YAAM,eAAe,IAAI,aAAa,EAAE,IAAI,KAAK;AACjD,YAAM,aAAa,mBAAmB,KAAK,MAAM;AAEjD,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,SAAS,0BAA0B,KAAK,MAAM;AAAA,MAChD,CAAC;AAAA,IACH;AAEA,QAAI,KAAK,UAAU;AACjB,YAAM,gBAAgB,EAAE,IAAI,OAAO,KAAK,QAAQ;AAEhD,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,SAAS,mCAAmC,KAAK,SAAS,KAAK,IAAI,CAAC;AAAA,MACtE,CAAC;AAAA,IACH;AAEA,QAAI,KAAK,KAAK;AACZ,YAAM,eAAe,IAAI,aAAa,EAAE,IAAI,KAAK;AACjD,YAAM,aAAa,YAAY,KAAK,GAAG;AAEvC,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,SAAS,0BAA0B,KAAK,GAAG;AAAA,MAC7C,CAAC;AAAA,IACH;AAEA,WAAO,EAAE,KAAK,EAAE,OAAO,oCAAoC,GAAG,GAAG;AAAA,EAEnE,SAASE,SAAY;AACnB,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,QAAQ,GAAG,GAAG;AAAA,EAC7C;AACF,CAAC;AAGDF,KAAI,KAAK,SAAS,OAAO,MAAM;AAC7B,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAEtB;AAEH,QAAI,CAAC,KAAK,aAAa,KAAK,UAAU,WAAW,GAAG;AAClD,aAAO,EAAE,KAAK,EAAE,OAAO,wBAAwB,GAAG,GAAG;AAAA,IACvD;AAGA,MAAE,aAAa;AAAA,MACb,UAAU,EAAE,KAAK,KAAK,SAAS;AAAA,IACjC;AAEA,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,SAAS,qBAAqB,KAAK,UAAU,MAAM;AAAA,MACnD,WAAW,KAAK;AAAA,IAClB,CAAC;AAAA,EAEH,SAASE,SAAY;AACnB,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,QAAQ,GAAG,GAAG;AAAA,EAC7C;AACF,CAAC;AAGDF,KAAI,IAAI,aAAa,OAAO,MAAM;AAChC,MAAI;AACF,UAAM,MAAM,EAAE,IAAI,MAAM,KAAK;AAC7B,UAAM,eAAe,IAAI,aAAa,EAAE,IAAI,KAAK;AAEjD,UAAM,QAAQ,MAAM,aAAa,IAAI,GAAG;AAExC,QAAI,CAAC,OAAO;AACV,aAAO,EAAE,KAAK,EAAE,OAAO,gBAAgB,GAAG,GAAG;AAAA,IAC/C;AAEA,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,IACV,CAAC;AAAA,EAEH,SAASE,SAAY;AACnB,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,QAAQ,GAAG,GAAG;AAAA,EAC7C;AACF,CAAC;AAGDF,KAAI,KAAK,QAAQ,OAAO,MAAM;AAC5B,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAKtB;AAEH,QAAI,CAAC,KAAK,OAAO,KAAK,UAAU,QAAW;AACzC,aAAO,EAAE,KAAK,EAAE,OAAO,6BAA6B,GAAG,GAAG;AAAA,IAC5D;AAEA,UAAM,eAAe,IAAI,aAAa,EAAE,IAAI,KAAK;AACjD,UAAM,aAAa,IAAI,KAAK,KAAK,KAAK,OAAO;AAAA,MAC3C,KAAK,KAAK;AAAA,MACV,MAAM,KAAK;AAAA,IACb,CAAC;AAED,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,KAAK,KAAK;AAAA,MACV,KAAK,KAAK,OAAO;AAAA,IACnB,CAAC;AAAA,EAEH,SAASE,SAAY;AACnB,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,QAAQ,GAAG,GAAG;AAAA,EAC7C;AACF,CAAC;AAGDF,KAAI,IAAI,SAAS,OAAO,MAAM;AAC5B,MAAI;AACF,UAAM,SAAS,EAAE,IAAI,MAAM,QAAQ,KAAK;AACxC,UAAM,QAAQ,SAAS,EAAE,IAAI,MAAM,OAAO,KAAK,KAAK;AAEpD,UAAM,OAAO,MAAM,EAAE,IAAI,MAAM,KAAK;AAAA,MAClC;AAAA,MACA,OAAO,KAAK,IAAI,OAAO,GAAI;AAAA,IAC7B,CAAC;AAED,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM,KAAK,KAAK,IAAI,CAAC,SAAc;AAAA,QACjC,MAAM,IAAI;AAAA,QACV,YAAY,IAAI;AAAA,QAChB,UAAU,IAAI;AAAA,MAChB,EAAE;AAAA,MACF,QAAS,KAAa;AAAA,MACtB,UAAU,KAAK;AAAA,IACjB,CAAC;AAAA,EAEH,SAASE,SAAY;AACnB,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,QAAQ,GAAG,GAAG;AAAA,EAC7C;AACF,CAAC;AAGDF,KAAI,KAAK,oBAAoB,OAAO,MAAM;AACxC,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAGtB;AAEH,QAAI,CAAC,KAAK,WAAW;AACnB,aAAO,EAAE,KAAK,EAAE,OAAO,yBAAyB,GAAG,GAAG;AAAA,IACxD;AAEA,UAAM,eAAe,IAAI,aAAa,EAAE,IAAI,KAAK;AACjD,UAAM,YAAY,MAAM,aAAa;AAAA,MACnC,KAAK;AAAA,MACL,KAAK,OAAO;AAAA,IACd;AAEA,QAAI,CAAC,WAAW;AACd,aAAO,EAAE,KAAK,EAAE,OAAO,oBAAoB,GAAG,GAAG;AAAA,IACnD;AAEA,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,WAAW,KAAK;AAAA,MAChB,WAAW;AAAA,MACX,KAAK,KAAK,OAAO;AAAA,IACnB,CAAC;AAAA,EAEH,SAASE,SAAY;AACnB,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,QAAQ,GAAG,GAAG;AAAA,EAC7C;AACF,CAAC;AAED,IAAO,gBAAQF;;;AGnQf;AAAA;AAAA;AAAAG;AAKA,IAAMC,OAAM,IAAIC,MAAwB;AAGxCD,KAAI,IAAI,MAAM,KAAK,CAAC;AAGpB,IAAM,iBAAyC;AAAA,EAC7C,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AACR;AAGA,eAAe,eAAe,MAAc,IAAyB;AACnE,MAAI;AACF,UAAM,SAAS;AAAA;AAAA,SAEV,IAAI;AAAA;AAAA;AAIT,UAAM,WAAW,MAAM,GAAG,IAAI,4CAA4C;AAAA,MACxE,UAAU;AAAA,QACR,EAAE,MAAM,UAAU,SAAS,sFAAsF;AAAA,QACjH,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,MAClC;AAAA,MACA,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,UAAM,eAAgB,SAAiB,SAAS,KAAK,EAAE,YAAY;AACnE,WAAO,eAAe,YAAY,IAAI,eAAe;AAAA,EAEvD,SAASE,SAAO;AACd,IAAAC,KAAI,MAAM,4BAA4BD,SAAgB,EAAE,WAAW,oBAAoB,CAAC;AACxF,WAAO;AAAA,EACT;AACF;AAxBe;AA2BfF,KAAI,KAAK,cAAc,OAAO,MAAM;AAClC,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAKtB;AAEH,QAAI,CAAC,KAAK,QAAQ,CAAC,KAAK,QAAQ;AAC9B,aAAO,EAAE,KAAK,EAAE,OAAO,wCAAwC,GAAG,GAAG;AAAA,IACvE;AAGA,UAAM,iBAAiB,KAAK,UAAU,MAAM,eAAe,KAAK,MAAM,EAAE,IAAI,EAAE;AAC9E,UAAM,iBAAiB,KAAK;AAG5B,QAAI,mBAAmB,gBAAgB;AACrC,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,cAAc,KAAK;AAAA,QACnB,gBAAgB,KAAK;AAAA,QACrB;AAAA,QACA;AAAA,QACA,aAAa;AAAA,MACf,CAAC;AAAA,IACH;AAGA,UAAM,SAAS,qCAAqC,eAAe,cAAc,KAAK,cAAc,OAAO,eAAe,cAAc,KAAK,cAAc;AAAA,EAC7J,KAAK,qBAAqB,4EAA4E,EAAE;AAAA;AAAA;AAAA,GAGvG,KAAK,IAAI;AAAA;AAAA;AAKR,UAAM,WAAW,MAAM,EAAE,IAAI,GAAG,IAAI,4CAA4C;AAAA,MAC9E,UAAU;AAAA,QACR;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,QACX;AAAA,QACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,MAClC;AAAA,MACA,aAAa;AAAA,MACb,YAAY,KAAK,IAAI,KAAK,KAAK,SAAS,GAAG,GAAI;AAAA;AAAA,IACjD,CAAC;AAED,UAAM,iBAAkB,SAAiB,SAAS,KAAK,EACpD,QAAQ,SAAS,EAAE,EACnB,QAAQ,SAAS,EAAE;AAEtB,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,cAAc,KAAK;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MACA,OAAO;AAAA,IACT,CAAC;AAAA,EAEH,SAASE,SAAY;AACnB,IAAAC,KAAI,MAAM,qBAAqBD,SAAgB,EAAE,WAAW,oBAAoB,CAAC;AACjF,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,WAAW,qBAAqB,GAAG,GAAG;AAAA,EACrE;AACF,CAAC;AAGDF,KAAI,KAAK,oBAAoB,OAAO,MAAM;AACxC,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAItB;AAEH,QAAI,CAAC,KAAK,SAAS,KAAK,MAAM,WAAW,KAAK,CAAC,KAAK,QAAQ;AAC1D,aAAO,EAAE,KAAK,EAAE,OAAO,+CAA+C,GAAG,GAAG;AAAA,IAC9E;AAGA,UAAM,mBAAmB,KAAK,MAAM,MAAM,GAAG,EAAE;AAG/C,UAAM,eAAe,MAAM,QAAQ;AAAA,MACjC,iBAAiB,IAAI,OAAO,SAAS;AACnC,YAAI;AACF,gBAAM,iBAAiB,KAAK,UAAU,MAAM,eAAe,MAAM,EAAE,IAAI,EAAE;AAEzE,cAAI,mBAAmB,KAAK,QAAQ;AAClC,mBAAO;AAAA,cACL,cAAc;AAAA,cACd,gBAAgB;AAAA,cAChB;AAAA,cACA,gBAAgB,KAAK;AAAA,cACrB,aAAa;AAAA,YACf;AAAA,UACF;AAEA,gBAAM,SAAS,kBAAkB,eAAe,cAAc,KAAK,cAAc,OAAO,eAAe,KAAK,MAAM,KAAK,KAAK,MAAM,MAAM,IAAI;AAE5I,gBAAM,WAAW,MAAM,EAAE,IAAI,GAAG,IAAI,4CAA4C;AAAA,YAC9E,UAAU;AAAA,cACR,EAAE,MAAM,UAAU,SAAS,uEAAuE;AAAA,cAClG,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,YAClC;AAAA,YACA,aAAa;AAAA,YACb,YAAY,KAAK,IAAI,KAAK,SAAS,GAAG,GAAI;AAAA,UAC5C,CAAC;AAED,iBAAO;AAAA,YACL,cAAc;AAAA,YACd,gBAAiB,SAAiB,SAAS,KAAK,EAAE,QAAQ,gBAAgB,EAAE;AAAA,YAC5E;AAAA,YACA,gBAAgB,KAAK;AAAA,UACvB;AAAA,QAEF,SAASE,SAAO;AACd,iBAAO;AAAA,YACL,cAAc;AAAA,YACd,gBAAgB;AAAA,YAChB,OAAO;AAAA,YACP,gBAAgB,KAAK,UAAU;AAAA,YAC/B,gBAAgB,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAEA,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT;AAAA,MACA,OAAO,aAAa;AAAA,IACtB,CAAC;AAAA,EAEH,SAASA,SAAY;AACnB,IAAAC,KAAI,MAAM,2BAA2BD,SAAgB,EAAE,WAAW,oBAAoB,CAAC;AACvF,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,WAAW,2BAA2B,GAAG,GAAG;AAAA,EAC3E;AACF,CAAC;AAGDF,KAAI,KAAK,uBAAuB,OAAO,MAAM;AAC3C,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAQtB;AAEH,QAAI,CAAC,KAAK,UAAU,QAAQ,CAAC,KAAK,gBAAgB;AAChD,aAAO,EAAE,KAAK,EAAE,OAAO,iDAAiD,GAAG,GAAG;AAAA,IAChF;AAEA,UAAM,iBAAiB,KAAK,SAAS,YAAY,MAAM,eAAe,KAAK,SAAS,MAAM,EAAE,IAAI,EAAE;AAElG,QAAI,mBAAmB,KAAK,gBAAgB;AAC1C,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,kBAAkB,KAAK;AAAA,QACvB,oBAAoB;AAAA,UAClB,GAAG,KAAK;AAAA,UACR,gBAAgB,KAAK,SAAS;AAAA,UAC9B,gBAAgB,KAAK;AAAA,QACvB;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,gBAAgB;AACpB,QAAI,KAAK,WAAW,KAAK,QAAQ,SAAS,GAAG;AAC3C,sBAAgB;AAAA,EAAmC,KAAK,QAAQ,MAAM,EAAE,EAAE,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA,IACtF;AAEA,UAAM,SAAS,GAAG,aAAa,gCAAgC,eAAe,cAAc,KAAK,cAAc,OAAO,eAAe,KAAK,cAAc,KAAK,KAAK,cAAc;AAAA;AAAA,GAEjL,KAAK,SAAS,IAAI;AAEjB,UAAM,WAAW,MAAM,EAAE,IAAI,GAAG,IAAI,4CAA4C;AAAA,MAC9E,UAAU;AAAA,QACR;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,QACX;AAAA,QACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,MAClC;AAAA,MACA,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,UAAM,iBAAkB,SAAiB,SAAS,KAAK,EAAE,QAAQ,gBAAgB,EAAE;AAEnF,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,kBAAkB,KAAK;AAAA,MACvB,oBAAoB;AAAA,QAClB,GAAG,KAAK;AAAA,QACR;AAAA,QACA,gBAAgB,KAAK;AAAA,QACrB;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EAEH,SAASE,SAAY;AACnB,IAAAC,KAAI,MAAM,8BAA8BD,SAAgB,EAAE,WAAW,oBAAoB,CAAC;AAC1F,WAAO,EAAE,KAAK,EAAE,OAAOA,QAAM,WAAW,8BAA8B,GAAG,GAAG;AAAA,EAC9E;AACF,CAAC;AAGDF,KAAI,IAAI,cAAc,CAAC,MAAM;AAC3B,QAAM,YAAY,OAAO,QAAQ,cAAc,EAAE,IAAI,CAAC,CAAC,MAAM,IAAI,OAAO;AAAA,IACtE;AAAA,IACA;AAAA,IACA,YAAY,cAAc,IAAI;AAAA,EAChC,EAAE;AAEF,SAAO,EAAE,KAAK;AAAA,IACZ,SAAS;AAAA,IACT;AAAA,IACA,OAAO,UAAU;AAAA,EACnB,CAAC;AACH,CAAC;AAGD,SAAS,cAAc,MAAsB;AAC3C,QAAM,cAAsC;AAAA,IAC1C,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAEA,SAAO,YAAY,IAAI,KAAK,eAAe,IAAI,KAAK;AACtD;AAzBS;AA2BT,IAAO,oBAAQA;;;ACjUf;AAAA;AAAA;AAAAI;AAIA;;;ACJA;AAAA;AAAA;AAAAC;AAMA;AAsHA,eAAe,uBACbC,MACA,QACA,aAAqB,GACM;AAC3B,QAAM,YAAY,oBAAI,KAAK;AAC3B,YAAU,SAAS,UAAU,SAAS,IAAI,UAAU;AAGpD,QAAM,WAAW,MAAM;AAAA,IAOrBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAeA,CAAC,QAAQ,QAAQ,QAAQ,UAAU,YAAY,CAAC;AAAA,EAClD;AAEA,SAAO,SAAS,IAAI,QAAM;AAAA,IACxB,WAAW,OAAO,EAAE,UAAU;AAAA,IAC9B,MAAM,EAAE;AAAA,IACR,UAAU,EAAE,oBAAoB;AAAA,IAChC,MAAM,EAAE,gBAAgB;AAAA,IACxB,WAAW,EAAE,cAAc;AAAA,EAC7B,EAAE;AACJ;AA1Ce;AA+Cf,eAAe,mBACb,IACA,UACyC;AACzC,MAAI,SAAS,WAAW,GAAG;AACzB,WAAO;AAAA,MACL,oBAAoB,CAAC;AAAA,MACrB,wBAAwB;AAAA,MACxB,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,oBAAoB;AAAA,IACtB;AAAA,EACF;AAGA,QAAM,gBAAgB,SAAS,OAAO,CAAC,KAAK,MAAM,MAAM,EAAE,UAAU,CAAC;AACrE,QAAM,yBAAyB,KAAK,MAAM,gBAAgB,SAAS,MAAM;AAGzE,QAAM,QAAQ,KAAK,MAAM,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,SAAS,SAAS,CAAC,EAAE,IAAI,EAAE,QAAQ,MAAM,IAAI,KAAK,KAAK,KAAK,IAAK;AACzH,QAAM,kBAAkB,KAAK,MAAM,SAAS,SAAS,KAAK,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI;AAGhF,QAAM,WAA0B;AAAA,IAC9B;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQX;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,YAEH,SAAS,MAAM,kBAAkB,KAAK;AAAA,oBAC9B,sBAAsB;AAAA,qBACrB,eAAe;AAAA;AAAA,iBAEnB,SAAS,MAAM,GAAG,EAAE,EAAE,IAAI,OAAK,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAM9D;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,uBAAuB,IAAI,UAAU;AAAA,MAC1D,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,UAAM,YAAY,qBAAqB,QAAQ;AAC/C,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,WAAO;AAAA,MACL,oBAAoB,MAAM,QAAQ,OAAO,kBAAkB,IAAI,OAAO,qBAAqB,CAAC;AAAA,MAC5F;AAAA,MACA;AAAA,MACA,aAAa,OAAO,OAAO,gBAAgB,WAAW,OAAO,cAAc;AAAA,MAC3E,oBAAoB,OAAO,sBAAsB;AAAA,IACnD;AAAA,EACF,SAASC,SAAO;AACd,IAAAC,KAAI,MAAM,mCAAmCD,OAAK;AAClD,WAAO;AAAA,MACL,oBAAoB,CAAC,SAAS;AAAA,MAC9B;AAAA,MACA;AAAA,MACA,aAAa;AAAA,MACb,oBAAoB;AAAA,IACtB;AAAA,EACF;AACF;AA/Ee;AAoFf,eAAe,gBACb,IACA,QACA,UACAD,MACsC;AAEtC,QAAM,aAAa,MAAM;AAAA,IAIvBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,eAAe,WAAW,CAAC,GAAG,iBAAiB;AACrD,QAAM,gBAAgB,WAAW,WAAW,SAAS,CAAC,GAAG,iBAAiB;AAG1E,QAAM,eAAe,SAAS,SAAS,SAAS,CAAC;AACjD,QAAM,iBAAiB,eACnB,KAAK,MAAM,KAAK,IAAI,IAAI,IAAI,KAAK,aAAa,IAAI,EAAE,QAAQ,MAAM,KAAK,KAAK,KAAK,KAAK,IAAK,IAC3F;AAGJ,QAAM,WAA0B;AAAA,IAC9B;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWX;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,iBAEE,YAAY;AAAA,kBACX,aAAa;AAAA,mBACZ,cAAc;AAAA,kBACf,SAAS,MAAM;AAAA,sBACX,SAAS,UAAU,iBAAiB,OAAO,QAAQ,CAAC,CAAC;AAAA;AAAA,qBAEtD,WAAW,IAAI,OAAK,GAAG,EAAE,aAAa,KAAK,EAAE,UAAU,GAAG,EAAE,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOvF;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,uBAAuB,IAAI,UAAU;AAAA,MAC1D,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,UAAM,YAAY,qBAAqB,QAAQ;AAC/C,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA,iBAAiB,OAAO,OAAO,oBAAoB,WAAW,OAAO,kBAAkB;AAAA,MACvF,YAAY;AAAA,QACV,WAAW,OAAO,YAAY,aAAa;AAAA,QAC3C,iBAAiB,OAAO,YAAY,mBAAmB;AAAA,QACvD,YAAY,OAAO,YAAY,cAAc;AAAA,MAC/C;AAAA,IACF;AAAA,EACF,SAASC,SAAO;AACd,IAAAC,KAAI,MAAM,+BAA+BD,OAAK;AAC9C,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA,iBAAiB;AAAA,MACjB,YAAY;AAAA,QACV,WAAW;AAAA,QACX,iBAAiB;AAAA,QACjB,YAAY;AAAA,MACd;AAAA,IACF;AAAA,EACF;AACF;AApGe;AAyGf,eAAe,2BACb,IACA,UACiG;AAEjG,QAAM,qBAAqB,SAAS,OAAO,OAAK,EAAE,MAAM;AAExD,MAAI,mBAAmB,WAAW,GAAG;AACnC,WAAO,EAAE,WAAW,CAAC,GAAG,YAAY,CAAC,EAAE;AAAA,EACzC;AAGA,QAAM,QAAQ,CAAC,iBAAiB,WAAW,WAAW,cAAc,WAAW;AAC/E,QAAM,WAAmC,CAAC;AAE1C,QAAM,QAAQ,UAAQ;AACpB,UAAM,SAAS,mBACZ,IAAI,OAAK,EAAE,SAAS,IAAI,CAAC,EACzB,OAAO,CAAC,UAA2B,UAAU,MAAS;AAEzD,QAAI,OAAO,SAAS,GAAG;AACrB,eAAS,IAAI,IAAI,KAAK,MAAM,OAAO,OAAO,CAAC,KAAK,MAAM,MAAM,GAAG,CAAC,IAAI,OAAO,MAAM;AAAA,IACnF;AAAA,EACF,CAAC;AAED,QAAM,WAA0B;AAAA,IAC9B;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAsBX;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,EAEb,OAAO,QAAQ,QAAQ,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,GAAG,IAAI,KAAK,KAAK,MAAM,EAAE,KAAK,IAAI,CAAC;AAAA;AAAA,2BAE1D,mBAAmB,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOhD;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,uBAAuB,IAAI,UAAU;AAAA,MAC1D,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,UAAM,YAAY,qBAAqB,QAAQ;AAC/C,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,WAAO;AAAA,MACL,WAAW,MAAM,QAAQ,OAAO,SAAS,IAAI,OAAO,YAAY,CAAC;AAAA,MACjE,YAAY,MAAM,QAAQ,OAAO,UAAU,IAAI,OAAO,aAAa,CAAC;AAAA,IACtE;AAAA,EACF,SAASA,SAAO;AACd,IAAAC,KAAI,MAAM,2CAA2CD,OAAK;AAC1D,WAAO,EAAE,WAAW,CAAC,GAAG,YAAY,CAAC,EAAE;AAAA,EACzC;AACF;AArFe;AA0Ff,eAAe,wBACb,IACA,SAC2G;AAC3G,QAAM,WAA0B;AAAA,IAC9B;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA4BX;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,iBAEE,QAAQ,UAAU,YAAY;AAAA,mBAC5B,QAAQ,aAAa,eAAe;AAAA,eACxC,QAAQ,aAAa,WAAW;AAAA;AAAA,aAElC,QAAQ,WAAW,IAAI,OAAK,EAAE,IAAI,EAAE,KAAK,IAAI,KAAK,iBAAiB;AAAA,cAClE,QAAQ,YAAY,IAAI,OAAK,EAAE,IAAI,EAAE,KAAK,IAAI,KAAK,iBAAiB;AAAA;AAAA,mBAE/D,QAAQ,UAAU,YAAY,SAAS,OAAO,QAAQ,UAAU,YAAY,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAO1G;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,uBAAuB,IAAI,UAAU;AAAA,MAC1D,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,UAAM,YAAY,qBAAqB,QAAQ;AAC/C,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,WAAO;AAAA,MACL,UAAU;AAAA,QACR,aAAa,MAAM,QAAQ,OAAO,UAAU,WAAW,IAAI,OAAO,SAAS,cAAc,CAAC;AAAA,QAC1F,iBAAiB,MAAM,QAAQ,OAAO,UAAU,eAAe,IAAI,OAAO,SAAS,kBAAkB,CAAC;AAAA,QACtG,YAAY,MAAM,QAAQ,OAAO,UAAU,UAAU,IAAI,OAAO,SAAS,aAAa,CAAC;AAAA,MACzF;AAAA,MACA,kBAAkB;AAAA,QAChB,WAAW,MAAM,QAAQ,OAAO,kBAAkB,SAAS,IAAI,OAAO,iBAAiB,YAAY,CAAC;AAAA,QACpG,YAAY,MAAM,QAAQ,OAAO,kBAAkB,UAAU,IAAI,OAAO,iBAAiB,aAAa,CAAC;AAAA,QACvG,UAAU,MAAM,QAAQ,OAAO,kBAAkB,QAAQ,IAAI,OAAO,iBAAiB,WAAW,CAAC;AAAA,MACnG;AAAA,IACF;AAAA,EACF,SAASA,SAAO;AACd,IAAAC,KAAI,MAAM,yCAAyCD,OAAK;AACxD,WAAO;AAAA,MACL,UAAU,EAAE,aAAa,CAAC,GAAG,iBAAiB,CAAC,GAAG,YAAY,CAAC,EAAE;AAAA,MACjE,kBAAkB,EAAE,WAAW,CAAC,GAAG,YAAY,CAAC,GAAG,UAAU,CAAC,EAAE;AAAA,IAClE;AAAA,EACF;AACF;AAtFe;AA2Ff,eAAsB,uBACpBD,MACA,QACA,aAAqB,GACK;AAE1B,QAAM,WAAW,MAAM,uBAAuBA,MAAK,QAAQ,UAAU;AAGrE,QAAM,CAAC,aAAa,UAAU,EAAE,WAAW,WAAW,CAAC,IAAI,MAAM,QAAQ,IAAI;AAAA,IAC3E,mBAAmBA,KAAI,IAAI,QAAQ;AAAA,IACnC,gBAAgBA,KAAI,IAAI,QAAQ,UAAUA,IAAG;AAAA,IAC7C,2BAA2BA,KAAI,IAAI,QAAQ;AAAA,EAC7C,CAAC;AAGD,QAAM,gBAAgB,SAAS,OAAO,OAAK,EAAE,SAAS,OAAO,EAAE;AAC/D,QAAM,gBAAgB,SAAS,OAAO,OAAK,EAAE,SAAS,OAAO,EAAE;AAC/D,QAAM,eAAe,SAAS,OAAO,OAAK,EAAE,SAAS,MAAM,EAAE;AAE7D,QAAM,gBAAkD;AAAA,IACtD,SAAS,gBAAgB,iBAAiB,gBAAgB,eAAe,CAAC,QAAQ,IACzE,gBAAgB,eAAe,CAAC,UAAU,IAAI,CAAC,SAAS;AAAA,IACjE,YAAY,EAAE,eAAe,eAAe,aAAa;AAAA,IACzD,qBAAqB,CAAC,cAAc;AAAA;AAAA,EACtC;AAGA,QAAM,aAA4C;AAAA,IAChD,cAAc,KAAK,IAAI,YAAY,aAAa,GAAG;AAAA,IACnD,qBAAqB,KAAK,IAAI,YAAY,kBAAkB,IAAI,GAAG;AAAA,IACnE,iBAAiB;AAAA;AAAA,IACjB,mBAAmB,CAAC,qBAAqB,QAAQ;AAAA,IACjD,aAAa,YAAY,cAAc,KAAK,CAAC,iBAAiB,IAAI,CAAC;AAAA,EACrE;AAGA,QAAM,iBAA2C;AAAA,IAC/C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,QAAM,EAAE,UAAU,iBAAiB,IAAI,MAAM,wBAAwBA,KAAI,IAAI,cAAc;AAE3F,SAAO;AAAA,IACL;AAAA,IACA,eAAc,oBAAI,KAAK,GAAE,YAAY;AAAA,IACrC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AA1DsB;;;ADthBtB;AAQA,IAAMG,OAAM,IAAIC,MAA8C;AAG9D,SAAS,cAAc,QAAoC;AACzD,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,mEAAiB,KAAK,cAAc;AAAA,EACzD;AACA,SAAO;AACT;AALS;AAQT,IAAM,qBAAqB,iBAAE,OAAO;AAAA,EAChC,OAAO,iBAAE,OAAO,EAAE,SAAS,EAAE,SAAS;AAAA,EACtC,KAAK,iBAAE,OAAO,EAAE,SAAS,EAAE,SAAS;AAAA,EACpC,SAAS,iBAAE,KAAK,CAAC,QAAQ,UAAU,SAAS,CAAC,EAAE,SAAS;AAAA,EACxD,UAAU,iBAAE,KAAK,CAAC,MAAM,MAAM,MAAM,IAAI,CAAC,EAAE,SAAS;AACxD,CAAC;AAGDD,KAAI,IAAI,YAAY,gBAAuB,OAAO,MAAM;AACpD,MAAI;AACA,UAAME,SAAQ,mBAAmB,MAAM,EAAE,IAAI,MAAM,CAAC;AAGpD,UAAM,MAAMA,OAAM,MAAM,IAAI,KAAKA,OAAM,GAAG,IAAI,oBAAI,KAAK;AACvD,UAAM,QAAQA,OAAM,QAAQ,IAAI,KAAKA,OAAM,KAAK,IAAI,IAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,KAAK,GAAI;AAGhG,UAAM,UAAU,MAAM;AAAA,MAClB,EAAE;AAAA,MACF,EAAE,OAAO,IAAI;AAAA,MACbA,OAAM;AAAA,IACV;AAEA,QAAI,CAAC,SAAS;AACV,aAAO,gBAAgB,GAAG;AAAA,QACtB,WAAW,EAAE,OAAO,IAAI;AAAA,QACxB,SAASA,OAAM,WAAW;AAAA,QAC1B,UAAU;AAAA,QACV,SAAS;AAAA,UACL,OAAO;AAAA,UACP,aAAa;AAAA,UACb,YAAY;AAAA,UACZ,aAAa;AAAA,UACb,YAAY;AAAA,UACZ,SAAS,CAAC;AAAA,QACd;AAAA,MACJ,GAAG;AAAA,QACC,MAAM;AAAA,MACV,CAAC;AAAA,IACL;AAEA,WAAO,gBAAgB,GAAG;AAAA,MACtB,WAAW,EAAE,OAAO,IAAI;AAAA,MACxB,SAASA,OAAM;AAAA,MACf;AAAA,IACJ,CAAC;AAAA,EACL,SAASC,SAAO;AACZ,YAAQ,MAAM,wBAAwBA,OAAK;AAC3C,WAAO,gBAAgB,GAAG;AAAA,MACtB,WAAW;AAAA,QACP,OAAO,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,GAAI;AAAA,QAChD,KAAK,oBAAI,KAAK;AAAA,MAClB;AAAA,MACA,SAAS;AAAA,MACT,UAAU;AAAA,MACV,SAAS;AAAA,QACL,OAAO;AAAA,QACP,aAAa;AAAA,QACb,YAAY;AAAA,QACZ,aAAa;AAAA,QACb,YAAY;AAAA,QACZ,SAAS,CAAC;AAAA,MACd;AAAA,IACJ,GAAG;AAAA,MACC,MAAM;AAAA,IACV,CAAC;AAAA,EACL;AACJ,CAAC;AAGDH,KAAI,IAAI,cAAc,gBAAuB,OAAO,MAAM;AACtD,MAAI;AACA,UAAM,MAAM,oBAAI,KAAK;AACrB,UAAM,SAAS;AAAA,MACX,SAAS,EAAE,OAAO,IAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,KAAK,GAAI,GAAG,KAAK,IAAI;AAAA,MAC1E,QAAQ,EAAE,OAAO,IAAI,KAAK,IAAI,QAAQ,IAAI,IAAI,KAAK,KAAK,KAAK,GAAI,GAAG,KAAK,IAAI;AAAA,MAC7E,SAAS,EAAE,OAAO,IAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,KAAK,KAAK,GAAI,GAAG,KAAK,IAAI;AAAA,IACnF;AAGA,UAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,IAAI,MAAM,QAAQ,IAAI;AAAA,MAClB,qBAAqB,EAAE,KAAK,OAAO,OAAO;AAAA,MAC1C,qBAAqB,EAAE,KAAK,OAAO,MAAM;AAAA,MACzC,qBAAqB,EAAE,KAAK,OAAO,OAAO;AAAA,MAC1C,qBAAqB,EAAE,KAAK,OAAO,SAAS,MAAM;AAAA,MAClD,qBAAqB,EAAE,KAAK,OAAO,SAAS,QAAQ;AAAA,MACpD,qBAAqB,EAAE,KAAK,OAAO,SAAS,SAAS;AAAA,IACzD,CAAC;AAED,WAAO,gBAAgB,GAAG;AAAA,MACtB,UAAU;AAAA,QACN,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,SAAS;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,WAAW,IAAI,YAAY;AAAA,IAC/B,CAAC;AAAA,EACL,SAASG,SAAO;AACZ,YAAQ,MAAM,yBAAyBA,OAAK;AAC5C,WAAO,EAAE,KAAK,EAAE,SAAS,OAAO,OAAO,EAAE,SAAS,gCAAgC,EAAE,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EAC1G;AACJ,CAAC;AAGDH,KAAI,IAAI,WAAW,OAAO,MAAM;AAC5B,QAAM,gBAAgB,EAAE,IAAI,OAAO,SAAS;AAC5C,MAAI,CAAC,iBAAiB,kBAAkB,aAAa;AACjD,WAAO,EAAE,KAAK,EAAE,OAAO,qBAAqB,GAAG,GAAG;AAAA,EACtD;AAEA,QAAM,gBAAgB,IAAK,WAAmB,cAAc;AAC5D,QAAM,CAAC,QAAQ,MAAM,IAAI,OAAO,OAAO,aAAa;AAEpD,SAAO,OAAO;AAGd,QAAM,aAAa,EAAE,IAAI,OAAO,eAAe;AAC/C,MAAI,CAAC,cAAc,CAAC,WAAW,WAAW,SAAS,GAAG;AAClD,WAAO,KAAK,KAAK,UAAU,EAAE,MAAM,SAAS,SAAS,eAAe,CAAC,CAAC;AACtE,WAAO,MAAM,MAAM,cAAc;AACjC,WAAO,IAAI,SAAS,MAAM,EAAE,QAAQ,KAAK,WAAW,OAAO,CAAC;AAAA,EAChE;AAGA,QAAM,EAAE,eAAAI,eAAc,IAAI,MAAM;AAChC,EAAAA,eAAc,QAAqB,EAAE,GAAG;AAExC,SAAO,IAAI,SAAS,MAAM;AAAA,IACtB,QAAQ;AAAA,IACR,WAAW;AAAA,EACf,CAAC;AACL,CAAC;AAGDJ,KAAI,IAAI,WAAW,gBAAuB,OAAO,MAAM;AACnD,MAAI;AACA,UAAME,SAAQ,mBAAmB,MAAM,EAAE,IAAI,MAAM,CAAC;AAEpD,UAAM,MAAMA,OAAM,MAAM,IAAI,KAAKA,OAAM,GAAG,IAAI,oBAAI,KAAK;AACvD,UAAM,QAAQA,OAAM,QAAQ,IAAI,KAAKA,OAAM,KAAK,IAAI,IAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,KAAK,GAAI;AAGhG,UAAM,SAAS,MAAO,EAAE,IAAI,WAAmB,MAAM;AAAA,MACjD,WAAW,CAAC,OAAO,GAAG;AAAA,MACtB,QAAQ;AAAA,QACJ,OAAO;AAAA,MACX;AAAA,MACA,cAAc;AAAA,QACV,OAAO,EAAE,OAAO,CAAC,EAAE;AAAA,QACnB,WAAW;AAAA,UACP,MAAM;AAAA,YACF,OAAO;AAAA;AAAA,YACP,GAAG;AAAA,UACP;AAAA,QACJ;AAAA,QACA,cAAc;AAAA,UACV,MAAM;AAAA,YACF,OAAO;AAAA;AAAA,YACP,GAAG;AAAA,UACP;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,CAAC;AAED,WAAO,gBAAgB,GAAG;AAAA,MACtB,WAAW,EAAE,OAAO,IAAI;AAAA,MACxB,QAAQ,UAAU;AAAA,IACtB,CAAC;AAAA,EACL,SAASC,SAAO;AACZ,YAAQ,MAAM,sBAAsBA,OAAK;AACzC,WAAO,cAAc,GAAG,kCAAkC;AAAA,EAC9D;AACJ,CAAC;AAGDH,KAAI,IAAI,aAAa,gBAAuB,OAAO,MAAM;AACrD,MAAI;AACA,UAAME,SAAQ,mBAAmB,MAAM,EAAE,IAAI,MAAM,CAAC;AAEpD,UAAM,MAAMA,OAAM,MAAM,IAAI,KAAKA,OAAM,GAAG,IAAI,oBAAI,KAAK;AACvD,UAAM,QAAQA,OAAM,QAAQ,IAAI,KAAKA,OAAM,KAAK,IAAI,IAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,KAAK,GAAI;AAGhG,UAAM,SAAS,MAAO,EAAE,IAAI,WAAmB,MAAM;AAAA,MACjD,WAAW,CAAC,OAAO,GAAG;AAAA,MACtB,QAAQ;AAAA,QACJ,OAAO,EAAE,KAAK,GAAG;AAAA;AAAA,MACrB;AAAA,MACA,cAAc;AAAA,QACV,aAAa,EAAE,KAAK,EAAE,OAAO,UAAU,EAAE;AAAA,QACzC,qBAAqB,EAAE,KAAK,EAAE,OAAO,UAAU,EAAE;AAAA,QACjD,iBAAiB,EAAE,KAAK,EAAE,OAAO,UAAU,EAAE;AAAA,QAC7C,eAAe,EAAE,KAAK,EAAE,OAAO,UAAU,EAAE;AAAA,QAC3C,YAAY;AAAA,UACR,MAAM;AAAA,YACF,OAAO;AAAA;AAAA,YACP,GAAG;AAAA,UACP;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,CAAC;AAED,WAAO,gBAAgB,GAAG;AAAA,MACtB,WAAW,EAAE,OAAO,IAAI;AAAA,MACxB,SAAS,UAAU;AAAA,IACvB,CAAC;AAAA,EACL,SAASC,SAAO;AACZ,YAAQ,MAAM,yBAAyBA,OAAK;AAC5C,WAAO,cAAc,GAAG,qCAAqC;AAAA,EACjE;AACJ,CAAC;AAGDH,KAAI,IAAI,gBAAgB,gBAAuB,OAAO,MAAM;AACxD,MAAI;AACA,UAAME,SAAQ,mBAAmB,MAAM,EAAE,IAAI,MAAM,CAAC;AAEpD,UAAM,MAAMA,OAAM,MAAM,IAAI,KAAKA,OAAM,GAAG,IAAI,oBAAI,KAAK;AACvD,UAAM,QAAQA,OAAM,QAAQ,IAAI,KAAKA,OAAM,KAAK,IAAI,IAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,KAAK,GAAI;AAGhG,UAAM,SAAS,MAAO,EAAE,IAAI,WAAmB,MAAM;AAAA,MACjD,WAAW,CAAC,OAAO,GAAG;AAAA,MACtB,QAAQ;AAAA,QACJ,OAAO;AAAA,MACX;AAAA,MACA,cAAc;AAAA,QACV,aAAa,EAAE,UAAU,EAAE,OAAO,WAAW,UAAU,IAAI,EAAE;AAAA,QAC7D,aAAa,EAAE,UAAU,EAAE,OAAO,WAAW,UAAU,KAAK,EAAE;AAAA,QAC9D,aAAa,EAAE,UAAU,EAAE,OAAO,WAAW,UAAU,IAAI,EAAE;AAAA,QAC7D,aAAa,EAAE,UAAU,EAAE,OAAO,WAAW,UAAU,KAAK,EAAE;AAAA,QAC9D,aAAa,EAAE,UAAU,EAAE,OAAO,WAAW,UAAU,KAAK,EAAE;AAAA,QAC9D,YAAY,EAAE,UAAU,EAAE,OAAO,WAAW,UAAU,IAAI,EAAE;AAAA,QAC5D,YAAY,EAAE,UAAU,EAAE,OAAO,WAAW,UAAU,KAAK,EAAE;AAAA,QAC7D,YAAY,EAAE,UAAU,EAAE,OAAO,WAAW,UAAU,IAAI,EAAE;AAAA,QAC5D,YAAY,EAAE,UAAU,EAAE,OAAO,WAAW,UAAU,KAAK,EAAE;AAAA,QAC7D,YAAY,EAAE,UAAU,EAAE,OAAO,WAAW,UAAU,KAAK,EAAE;AAAA,MACjE;AAAA,MACA,SAASA,OAAM,UAAU,CAAC,OAAOG,eAAcH,OAAM,OAAO,CAAC,EAAE,IAAI;AAAA,IACvE,CAAC;AAED,WAAO,gBAAgB,GAAG;AAAA,MACtB,WAAW,EAAE,OAAO,IAAI;AAAA,MACxB,SAASA,OAAM;AAAA,MACf,aAAa,UAAU;AAAA,IAC3B,CAAC;AAAA,EACL,SAASC,SAAO;AACZ,YAAQ,MAAM,4BAA4BA,OAAK;AAC/C,WAAO,cAAc,GAAG,wCAAwC;AAAA,EACpE;AACJ,CAAC;AAGD,SAASE,eAAc,OAAuB;AAC1C,QAAM,WAAmC;AAAA,IACrC,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,WAAW;AAAA,EACf;AACA,SAAO,SAAS,KAAK,KAAK;AAC9B;AAPS,OAAAA,gBAAA;AAUTL,KAAI,KAAK,WAAW,OAAO,MAAM;AAC7B,MAAI;AACA,UAAM,EAAE,OAAO,IAAI,MAAM,EAAE,IAAI,KAAK;AAEpC,QAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AACxB,aAAO,cAAc,GAAG,2BAA2B,iBAAiB,MAAM,GAAG;AAAA,IACjF;AAGA,eAAW,SAAS,QAAQ;AACxB,YAAM,EAAE,IAAI,WAAW,eAAe;AAAA,QAClC,OAAO;AAAA,UACH;AAAA,UACA,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM,YAAY,QAAQ;AAAA,QAC9B;AAAA,QACA,SAAS;AAAA,UACL,MAAM;AAAA,UACN,MAAM,YAAY,gBAAgB;AAAA,UAClC,MAAM,YAAY,YAAY;AAAA,UAC9B;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,MAAM,YAAY,eAAe;AAAA,UACjC,MAAM,YAAY,WAAW;AAAA,UAC7B,MAAM,YAAY,WAAW;AAAA,QACjC;AAAA,MACJ,CAAC;AAAA,IACL;AAEA,WAAO,gBAAgB,GAAG;AAAA,MACtB,SAAS;AAAA,MACT,OAAO,OAAO;AAAA,IAClB,CAAC;AAAA,EACL,SAASG,SAAO;AACZ,YAAQ,MAAM,2BAA2BA,OAAK;AAC9C,WAAO,cAAc,GAAG,yBAAyB;AAAA,EACrD;AACJ,CAAC;AAGDH,KAAI,IAAI,qBAAqB,gBAAuB,OAAO,MAAM;AAC7D,MAAI;AACA,UAAM,SAAS,cAAc,EAAE,IAAI,QAAQ,CAAC;AAE5C,UAAM,aAAa,SAAS,EAAE,IAAI,MAAM,YAAY,KAAK,GAAG;AAE5D,QAAI,aAAa,KAAK,aAAa,IAAI;AACnC,YAAM,IAAI,SAAS,uCAAuC,KAAK,qBAAqB;AAAA,IACxF;AAEA,UAAM,UAAU,MAAM,uBAAuB,EAAE,KAAK,QAAQ,UAAU;AACtE,WAAO,gBAAgB,GAAG,OAAO;AAAA,EACrC,SAASG,SAAO;AACZ,QAAIA,mBAAiB,UAAU;AAC3B,aAAO,cAAc,GAAGA,QAAM,SAASA,QAAM,WAAW,MAAMA,QAAM,UAAU;AAAA,IAClF;AACA,YAAQ,MAAM,oCAAoCA,OAAK;AACvD,WAAO,cAAc,GAAG,kCAAkC;AAAA,EAC9D;AACJ,CAAC;AAGDH,KAAI,IAAI,qBAAqB,gBAAuB,OAAO,MAAM;AAC7D,MAAI;AACA,UAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,QAAI,CAAC,QAAQ;AACT,cAAQ,KAAK,mDAAmD;AAChE,aAAO,gBAAgB,GAAG;AAAA,QACtB,cAAc;AAAA,QACd,kBAAkB;AAAA,QAClB,aAAa;AAAA,QACb,eAAe;AAAA,QACf,aAAa;AAAA,QACb,aAAa;AAAA,QACb,UAAU;AAAA,MACd,CAAC;AAAA,IACL;AAGA,QAAI,CAAC,EAAE,IAAI,IAAI;AACX,cAAQ,KAAK,8DAA8D;AAC3E,aAAO,gBAAgB,GAAG;AAAA,QACtB,cAAc;AAAA,QACd,kBAAkB;AAAA,QAClB,aAAa;AAAA,QACb,eAAe;AAAA,QACf,aAAa;AAAA,QACb,aAAa;AAAA,QACb,UAAU;AAAA,MACd,CAAC;AAAA,IACL;AAGA,QAAI,CAAC,EAAE,IAAI,IAAI;AACX,cAAQ,KAAK,8DAA8D;AAC3E,aAAO,gBAAgB,GAAG;AAAA,QACtB,cAAc;AAAA,QACd,kBAAkB;AAAA,QAClB,aAAa;AAAA,QACb,eAAe;AAAA,QACf,aAAa;AAAA,QACb,aAAa;AAAA,QACb,UAAU;AAAA,MACd,CAAC;AAAA,IACL;AAGA,UAAM,iBAAiB,IAAI,QAAc,CAAC,YAAY;AAClD,iBAAW,MAAM,QAAQ,IAAI,GAAG,GAAI;AAAA,IACxC,CAAC;AAED,UAAM,kBAAkB,uBAAuB,EAAE,KAAK,QAAQ,CAAC;AAE/D,UAAM,UAAU,MAAM,QAAQ,KAAK,CAAC,iBAAiB,cAAc,CAAC;AAEpE,QAAI,CAAC,SAAS;AACV,cAAQ,KAAK,qCAAqC;AAClD,aAAO,gBAAgB,GAAG;AAAA,QACtB,cAAc;AAAA,QACd,kBAAkB;AAAA,QAClB,aAAa;AAAA,QACb,eAAe;AAAA,QACf,aAAa;AAAA,QACb,aAAa;AAAA,QACb,UAAU;AAAA,MACd,CAAC;AAAA,IACL;AAEA,WAAO,gBAAgB,GAAG;AAAA,MACtB,cAAc,QAAQ,UAAU,gBAAgB;AAAA,MAChD,kBAAkB,KAAK,MAAM,QAAQ,aAAa,mBAAmB,CAAC;AAAA,MACtE,aAAa,QAAQ,aAAa,eAAe;AAAA,MACjD,eAAe,QAAQ,UAAU,aAAa,CAAC,GAAG,SAAS;AAAA,MAC3D,aAAa,QAAQ,YAAY,CAAC,GAAG,QAAQ;AAAA,MAC7C,aAAa,QAAQ,aAAa,CAAC,GAAG,QAAQ;AAAA,MAC9C,UAAU;AAAA,IACd,CAAC;AAAA,EACL,SAASG,SAAO;AACZ,YAAQ,MAAM,2BAA2BA,OAAK;AAG9C,WAAO,gBAAgB,GAAG;AAAA,MACtB,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,aAAa;AAAA,MACb,eAAe;AAAA,MACf,aAAa;AAAA,MACb,aAAa;AAAA,MACb,UAAU;AAAA,IACd,CAAC;AAAA,EACL;AACJ,CAAC;AAGDH,KAAI,IAAI,oBAAoB,gBAAuB,OAAO,MAAM;AAC5D,MAAI;AACA,UAAM,SAAS,cAAc,EAAE,IAAI,QAAQ,CAAC;AAE5C,UAAM,UAAU,MAAM,uBAAuB,EAAE,KAAK,QAAQ,CAAC;AAE7D,WAAO,gBAAgB,GAAG;AAAA,MACtB,iBAAiB,QAAQ,SAAS;AAAA,MAClC,kBAAkB,QAAQ;AAAA,MAC1B,yBAAyB,QAAQ,WAAW,IAAI,QAAM;AAAA,QAClD,MAAM,EAAE;AAAA,QACR,OAAO,EAAE;AAAA,QACT,iBAAiB,EAAE;AAAA,MACvB,EAAE;AAAA,IACN,CAAC;AAAA,EACL,SAASG,SAAO;AACZ,QAAIA,mBAAiB,UAAU;AAC3B,aAAO,cAAc,GAAGA,QAAM,SAASA,QAAM,WAAW,MAAMA,QAAM,UAAU;AAAA,IAClF;AACA,YAAQ,MAAM,0BAA0BA,OAAK;AAC7C,WAAO,cAAc,GAAG,mCAAmC;AAAA,EAC/D;AACJ,CAAC;;;AE9dD;AAAA;AAAA;AAAAG;;;ACAA;AAAA;AAAA;AAAAC;AAKO,IAAM,iBAAiB;AAAA,EAC5B,cAAc;AAAA;AAAA,EACd,cAAc;AAAA;AAChB;AAGO,IAAM,yBAAyB;AAAA,EACpC;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AACF;AAGO,IAAM,4BAA4B;AAAA;AAAA,EAEvC,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA;AAAA,EAGJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA;AAAA,EAGJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACN;AAGO,IAAM,sBAAsB;AAAA,EACjC,UAAU,KAAK,OAAO;AAAA;AAAA,EACtB,kBAAkB,IAAI,OAAO;AAAA;AAAA,EAC7B,kBAAkB;AAAA;AACpB;AAKO,SAAS,mBAAmB,UAIjC;AACA,QAAM,OAAO,YAAY;AAGzB,MAAI,uBAAuB,SAAS,IAAW,GAAG;AAChD,WAAO;AAAA,MACL,OAAO,eAAe;AAAA,MACtB,eAAe;AAAA,MACf,cAAc;AAAA,IAChB;AAAA,EACF;AAGA,QAAM,eAAe,0BAA0B,IAA8C;AAE7F,SAAO;AAAA,IACL,OAAO,eAAe;AAAA,IACtB,eAAe;AAAA,IACf,cAAc,gBAAgB,aAAa,IAAI;AAAA,EACjD;AACF;AAxBgB;AA6BT,SAAS,kBAAkB,aAIhC;AACA,MAAI,cAAc,oBAAoB,UAAU;AAC9C,WAAO;AAAA,MACL,SAAS;AAAA,MACT,WAAW;AAAA,MACX,SAAS,oBAAoB,cAAc,OAAO,MAAM,QAAQ,CAAC,CAAC;AAAA,IACpE;AAAA,EACF;AAEA,MAAI,cAAc,oBAAoB,kBAAkB;AACtD,WAAO;AAAA,MACL,SAAS;AAAA,MACT,WAAW;AAAA,MACX,SAAS,mBAAmB,cAAc,OAAO,MAAM,QAAQ,CAAC,CAAC;AAAA,IACnE;AAAA,EACF;AAEA,SAAO;AAAA,IACL,SAAS;AAAA,IACT,WAAW;AAAA,EACb;AACF;AAzBgB;;;AD/ET,IAAM,iBAAiB,IAAIC,MAA8C;AAGhF,eAAe,IAAI,KAAK,aAAa,CAAC;AAGtC,eAAe,KAAK,eAAe,OAAO,MAAM;AAC9C,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,UAAM,EAAE,WAAW,cAAc,UAAU,aAAa,IAAI;AAE5D,QAAI;AAEJ,QAAI,WAAW;AAEb,YAAM,WAAW,MAAM,MAAM,SAAS;AACtC,UAAI,CAAC,SAAS,IAAI;AAChB,eAAO,EAAE,KAAK,EAAE,OAAO,iCAAiC,GAAG,GAAG;AAAA,MAChE;AACA,oBAAc,MAAM,SAAS,YAAY;AAAA,IAC3C,WAAW,cAAc;AAEvB,YAAM,eAAe,KAAK,YAAY;AACtC,YAAM,QAAQ,IAAI,WAAW,aAAa,MAAM;AAChD,eAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,cAAM,CAAC,IAAI,aAAa,WAAW,CAAC;AAAA,MACtC;AACA,oBAAc,MAAM;AAAA,IACtB,OAAO;AACL,aAAO,EAAE,KAAK,EAAE,OAAO,oDAAoD,GAAG,GAAG;AAAA,IACnF;AAGA,UAAM,iBAAiB,kBAAkB,YAAY,UAAU;AAC/D,QAAI,CAAC,eAAe,SAAS;AAC3B,aAAO,EAAE,KAAK;AAAA,QACZ,OAAO;AAAA,QACP,SAAS,eAAe;AAAA,QACxB,SAAS;AAAA,UACP,aAAa,YAAY;AAAA,UACzB,SAAS,oBAAoB;AAAA,UAC7B,iBAAiB,oBAAoB;AAAA,QACvC;AAAA,MACF,GAAG,GAAG;AAAA,IACR;AAGA,QAAI,CAAC,eAAe,WAAW;AAC7B,YAAM,iBAAiB,eAAe,WAAW;AACjD,MAAAC,KAAI,KAAK,gBAAgB,QAAW;AAAA,QAClC,WAAW;AAAA,QACX,WAAW,YAAY;AAAA,MACzB,CAAC;AAAA,IACH;AAGA,QAAI;AACJ,QAAI;AAGF,YAAM,aAAa,CAAC,GAAG,IAAI,WAAW,WAAW,CAAC;AAGlD,YAAM,iBAAiB,mBAAmB,QAAQ;AAElD,MAAAA,KAAI,KAAK,sCAAsC,QAAW;AAAA,QACxD,WAAW;AAAA,QACX,WAAW,YAAY;AAAA,QACvB,aAAa,WAAW;AAAA,QACxB,UAAU,YAAY;AAAA,QACtB,OAAO,eAAe;AAAA,QACtB,cAAc,eAAe;AAAA,MAC/B,CAAC;AASD,YAAM,kBAAkB,MAAM,EAAE,IAAI,GAAG,IAAI,eAAe,OAAc;AAAA,QACtE,OAAO;AAAA,MACT,CAAC;AAED,eAAS;AAAA,QACP,MAAM,iBAAiB,QAAQ;AAAA,QAC/B,UAAU,iBAAiB,YAAY,YAAY;AAAA,QACnD,KAAK,iBAAiB;AAAA,QACtB,OAAO,iBAAiB;AAAA,MAC1B;AAEA,MAAAA,KAAI,KAAK,4BAA4B,QAAW;AAAA,QAC9C,WAAW;AAAA,QACX,YAAY,OAAO,KAAK;AAAA,QACxB,kBAAkB,OAAO;AAAA,MAC3B,CAAC;AAAA,IAEH,SAAS,cAAc;AACrB,MAAAA,KAAI,MAAM,4BAA4B,wBAAwB,QAAQ,eAAe,IAAI,MAAM,OAAO,YAAY,CAAC,GAAG,QAAW;AAAA,QAC/H,WAAW;AAAA,QACX,WAAW,YAAY;AAAA,QACvB,OAAO,wBAAwB,QAAQ,aAAa,UAAU;AAAA,MAChE,CAAC;AAGD,aAAO,EAAE,KAAK;AAAA,QACZ,OAAO;AAAA,QACP,SAAS,wBAAwB,QAAQ,aAAa,UAAU;AAAA,QAChE,SAAS;AAAA,UACP,WAAW,YAAY;AAAA,UACvB,gBAAgB,oBAAoB;AAAA,QACtC;AAAA,MACF,GAAG,GAAG;AAAA,IACR;AAEA,WAAO,gBAAgB,GAAG;AAAA,MACxB,YAAY,OAAO,QAAQ;AAAA,MAC3B,UAAU,OAAO;AAAA,MACjB,YAAY;AAAA;AAAA,MACZ,YAAY,OAAO,OAAO,OAAO,KAAK,MAAM,KAAK,EAAE,OAAO,UAAQ,KAAK,SAAS,CAAC,EAAE,SAAS;AAAA,MAC5F,iBAAiB;AAAA;AAAA,MACjB,KAAK,OAAO;AAAA,MACZ,OAAO,OAAO;AAAA,MACd,cAAc,gBAAgB;AAAA,IAChC,CAAC;AAAA,EAEH,SAASC,SAAO;AACd,IAAAD,KAAI,MAAM,gCAAgCC,SAAgB,QAAW,EAAE,WAAW,eAAe,CAAC;AAClG,WAAO,EAAE,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,SAASA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,IACpD,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,eAAe,KAAK,eAAe,OAAO,MAAM;AAC9C,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,UAAM,EAAE,YAAY,UAAU,WAAW,aAAa,IAAI;AAE1D,QAAI,CAAC,YAAY;AACf,aAAO,EAAE,KAAK,EAAE,OAAO,yBAAyB,GAAG,GAAG;AAAA,IACxD;AAGA,UAAM,aAAa,MAAM;AAAA,MACvB,EAAE,IAAI;AAAA,MACN;AAAA,MACA,aAAa;AAAA,IACf;AAEA,WAAO,gBAAgB,GAAG;AAAA,MACxB;AAAA,MACA,eAAe;AAAA,MACf,UAAU,YAAY;AAAA,MACtB,cAAc,gBAAgB;AAAA,MAC9B,eAAc,oBAAI,KAAK,GAAE,YAAY;AAAA,IACvC,CAAC;AAAA,EAEH,SAASA,SAAO;AACd,IAAAD,KAAI,MAAM,6BAA6BC,SAAgB,EAAE,WAAW,eAAe,CAAC;AACpF,WAAO,EAAE,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,SAASA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,IACpD,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,eAAe,MAAM,kCAAkC,OAAO,MAAM;AAClE,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AAEnC,MAAI,CAAC,QAAQ;AACX,WAAO,EAAE,KAAK,EAAE,OAAO,qBAAqB,GAAG,GAAG;AAAA,EACpD;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,EAAE,IAAI,KAAK;AAElC,QAAI,CAAC,YAAY,OAAO,aAAa,UAAU;AAC7C,aAAO,EAAE,KAAK,EAAE,OAAO,8BAA8B,GAAG,GAAG;AAAA,IAC7D;AAEA,UAAM,KAAK,EAAE,IAAI,KAAK,WAAW,MAAM;AACvC,UAAM,OAAO,EAAE,IAAI,KAAK,IAAI,EAAE;AAE9B,UAAM,WAAW,MAAM,KAAK,MAAM,IAAI,QAAQ,wBAAwB;AAAA,MACpE,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAC9C,MAAM,KAAK,UAAU,QAAQ;AAAA,IAC/B,CAAC,CAAC;AAEF,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,YAAa,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACzD,aAAO,EAAE,KAAK;AAAA,QACZ,OAAO;AAAA,QACP,SAAS,WAAW,WAAW;AAAA,MACjC,GAAG,SAAS,MAAa;AAAA,IAC3B;AAGA,UAAM,WAAW,QAAQ,MAAM;AAC/B,UAAMC,UAAS,MAAM,EAAE,IAAI,MAAM,IAAI,QAAQ;AAC7C,QAAIA,SAAQ;AACV,UAAI;AACF,cAAM,aAAa,KAAK,MAAMA,OAAM;AACpC,cAAM,UAAU;AAAA,UACd,GAAG;AAAA,UACH,UAAU;AAAA,YACR,GAAI,WAAW,YAAY,CAAC;AAAA,YAC5B,GAAG;AAAA,UACL;AAAA,QACF;AACA,cAAM,EAAE,IAAI,MAAM,IAAI,UAAU,KAAK,UAAU,OAAO,GAAG,EAAE,eAAe,KAAK,CAAC;AAAA,MAClF,SAAS,YAAY;AACnB,QAAAF,KAAI,KAAK,yCAAyC,QAAW;AAAA,UAC3D,WAAW;AAAA,UACX;AAAA,UACA,OAAO,sBAAsB,QAAQ,WAAW,UAAU,OAAO,UAAU;AAAA,QAC7E,CAAC;AAAA,MACH;AAAA,IACF;AAGA,UAAM,cAAc,MAAM,eAAe,EAAE,IAAI,KAAK;AACpD,UAAM,QAAQ,YAAY,UAAU,CAAAG,UAAQA,MAAK,WAAW,MAAM;AAClE,QAAI,SAAS,GAAG;AACd,YAAM,cAAc;AAAA,QAClB,GAAG,YAAY,KAAK;AAAA,QACpB,UAAU;AAAA,UACR,GAAI,YAAY,KAAK,EAAE,YAAY,CAAC;AAAA,UACpC,GAAG;AAAA,QACL;AAAA,QACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MACpC;AACA,YAAM,iBAAiB,EAAE,IAAI,OAAO,WAAW;AAAA,IACjD;AAEA,UAAM,SAAS,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,EAAE,SAAS,KAAK,EAAE;AACpE,WAAO,gBAAgB,GAAG,MAAM;AAAA,EAClC,SAASF,SAAO;AACd,IAAAD,KAAI,MAAM,8BAA8BC,SAAgB,QAAW,EAAE,WAAW,gBAAgB,OAAO,CAAC;AACxG,WAAO,EAAE,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,SAASA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,IACpD,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,eAAe,KAAK,0BAA0B,OAAO,MAAM;AACzD,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,UAAM,EAAE,YAAY,SAAAG,UAAS,YAAY,aAAa,IAAI;AAE1D,QAAI,CAAC,YAAY;AACf,aAAO,EAAE,KAAK,EAAE,OAAO,yBAAyB,GAAG,GAAG;AAAA,IACxD;AAGA,UAAM,eAAe;AAAA,MACnB;AAAA,QACE,SAAS;AAAA,QACT,MAAM;AAAA,MACR;AAAA,IACF;AAGA,UAAM,SAAS;AAAA;AAAA,WAERA,YAAW,sBAAsB;AAAA,cAC9B,cAAc,SAAS;AAAA;AAAA;AAAA,QAG7B,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBd,UAAM,aAAa,MAAM,uBAAuB,EAAE,IAAI,IAAI;AAAA,MACxD;AAAA,QACE,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,IAClC,GAAG;AAAA,MACD,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,iBAAiB,EAAE,MAAM,cAAc;AAAA,IACzC,CAAC;AAED,QAAI;AACJ,QAAI;AACF,YAAM,YAAY,qBAAqB,WAAW,IAAI;AACtD,iBAAW,KAAK,MAAM,SAAS;AAAA,IACjC,SAAS,YAAY;AACnB,MAAAJ,KAAI,KAAK,qCAAqC,QAAW;AAAA,QACvD,WAAW;AAAA,QACX,YAAY,WAAW,MAAM,MAAM,GAAG,GAAG;AAAA,QACzC,kBAAkB,qBAAqB,WAAW,IAAI,GAAG,MAAM,GAAG,GAAG;AAAA,QACrE,cAAc,sBAAsB,QAAQ,WAAW,UAAU,OAAO,UAAU;AAAA,QAClF,OAAO,WAAW;AAAA,MACpB,CAAC;AAED,iBAAW;AAAA,QACT,mBAAmB;AAAA,QACnB,WAAW,CAAC,uCAAuC;AAAA,QACnD,YAAY,CAAC,kCAAkC;AAAA,QAC/C,aAAa,CAAC;AAAA,QACd,aAAa,CAAC,iCAAiC,8BAA8B;AAAA,QAC7E,eAAe;AAAA,QACf,cAAc;AAAA,MAChB;AAAA,IACF;AAEA,WAAO,gBAAgB,GAAG;AAAA,MACxB;AAAA,MACA,eAAe;AAAA,MACf,SAASI,YAAW;AAAA,MACpB,YAAY,cAAc;AAAA,MAC1B,cAAc,gBAAgB;AAAA,MAC9B,eAAc,oBAAI,KAAK,GAAE,YAAY;AAAA,IACvC,CAAC;AAAA,EAEH,SAASH,SAAO;AACd,IAAAD,KAAI,MAAM,wCAAwCC,SAAgB,QAAW,EAAE,WAAW,eAAe,CAAC;AAC1G,WAAO,EAAE,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,SAASA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,IACpD,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,eAAe,KAAK,6BAA6B,OAAO,MAAM;AAC5D,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,UAAM,EAAE,YAAY,YAAY,WAAW,aAAa,IAAI;AAG5D,UAAM,kBAAkB,8BAA8B,YAAY,UAAU;AAE5E,WAAO,gBAAgB,GAAG;AAAA,MACxB;AAAA,MACA,YAAY,cAAc;AAAA,MAC1B,qBAAqB,cAAc,CAAC;AAAA,MACpC,oBAAoB,aAAa,CAAC;AAAA,MAClC,cAAc,gBAAgB;AAAA,MAC9B,eAAc,oBAAI,KAAK,GAAE,YAAY;AAAA,IACvC,CAAC;AAAA,EAEH,SAASA,SAAO;AACd,IAAAD,KAAI,MAAM,2CAA2CC,SAAgB,QAAW,EAAE,WAAW,eAAe,CAAC;AAC7G,WAAO,EAAE,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,SAASA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,IACpD,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,SAAS,8BAA8B,WAAmB,YAAsB;AAC9E,QAAM,eAAoC;AAAA,IACxC,MAAM;AAAA,MACJ,UAAU;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,WAAW;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,YAAY;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACJ,UAAU;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,WAAW;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,YAAY;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACJ,UAAU;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,WAAW;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,YAAY;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACJ,UAAU;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,WAAW;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,YAAY;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACJ,UAAU;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,WAAW;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,YAAY;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACJ,UAAU;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,WAAW;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,YAAY;AAAA,IACd;AAAA,EACF;AAEA,QAAM,QAAQ,UAAU,YAAY;AACpC,QAAM,sBAAsB,aAAa,KAAK,KAAK,aAAa,IAAI;AAGpE,QAAM,0BAAoD;AAAA,IACxD,WAAW;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,cAAc;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,WAAW;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,MAAI,wBAAkC,CAAC;AACvC,aAAW,QAAQ,cAAY;AAC7B,UAAM,cAAc,wBAAwB,SAAS,YAAY,CAAC;AAClE,QAAI,aAAa;AACf,8BAAwB,sBAAsB,OAAO,WAAW;AAAA,IAClE;AAAA,EACF,CAAC;AAED,SAAO;AAAA,IACL,qBAAqB,oBAAoB;AAAA,IACzC,mBAAmB,oBAAoB;AAAA,IACvC,qBAAqB,oBAAoB;AAAA,IACzC,YAAY;AAAA,IACZ;AAAA,IACA,gBAAgB,kBAAkB,KAAK;AAAA,EACzC;AACF;AAzIS;AA2IT,SAAS,kBAAkB,cAAgC;AACzD,QAAM,QAAkC;AAAA,IACtC,MAAM,CAAC,iCAAiC,0CAA0C,2BAA2B;AAAA,IAC7G,MAAM,CAAC,0CAA0C,mCAAmC,yBAAyB;AAAA,IAC7G,MAAM,CAAC,oCAAoC,0CAA0C,wCAAwC;AAAA,IAC7H,MAAM,CAAC,2BAA2B,8BAA8B,wCAAwC;AAAA,IACxG,MAAM,CAAC,8DAA8D,wCAAwC,iCAAiC;AAAA,IAC9I,MAAM,CAAC,gDAAgD,mCAAmC,iCAAiC;AAAA,EAC7H;AAEA,SAAO,MAAM,YAAY,KAAK,MAAM,IAAI;AAC1C;AAXS;AAaT,IAAO,mBAAQ;;;AE5hBf;AAAA;AAAA;AAAAI;AAGA;;;ACHA;AAAA;AAAA;AAAAC;AAEA;AAEA;AACA;AA+CA,SAAS,gBAAgB,KAAiC;AACxD,SAAO;AAAA,IACL,IAAI,IAAI;AAAA,IACR,OAAO,IAAI,SAAS;AAAA,IACpB,MAAM,IAAI,QAAQ;AAAA,IAClB,aAAa,IAAI,gBAAgB;AAAA,IACjC,UAAU,IAAI,YAAY;AAAA,IAC1B,WAAW,IAAI,aAAa;AAAA,IAC5B,QAAQ,IAAI,UAAU;AAAA,IACtB,cAAc,IAAI,iBAAiB;AAAA,IACnC,SAAS,IAAI,YAAY;AAAA,IACzB,UAAU,IAAI,cACV;AAAA,MACE,IAAI,IAAI;AAAA,MACR,SAAS,IAAI,oBAAoB;AAAA,MACjC,MAAM,IAAI,iBAAiB;AAAA,MAC3B,UAAU,IAAI,sBAAsB;AAAA,IACtC,IACA;AAAA,IACJ,gBAAgB,IAAI,iBAChB;AAAA,MACE,IAAI,IAAI;AAAA,MACR,MAAM,IAAI,wBAAwB;AAAA,MAClC,MAAM,IAAI,wBAAwB;AAAA,IACpC,IACA;AAAA,IACJ,qBAAqB,IAAI,4BAA4B;AAAA,IACrD,qBAAqB,IAAI,wBAAwB;AAAA,IACjD,aAAa,IAAI,gBAAgB;AAAA,IACjC,eAAe,IAAI,kBAAkB;AAAA,IACrC,qBAAqB,IAAI,wBAAwB;AAAA,IACjD,WAAW,IAAI;AAAA,IACf,WAAW,IAAI;AAAA,EACjB;AACF;AAlCS;AAoCT,eAAsB,eAAeC,MAAU,QAA6C;AAC1F,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA6BA,CAAC,MAAM;AAAA,EACT;AAEA,MAAI,CAAC,KAAK;AACR,WAAO;AAAA,EACT;AAEA,SAAO,gBAAgB,GAAG;AAC5B;AAxCsB;AA0CtB,eAAsB,kBACpBA,MACA,QACA,SACsB;AACtB,QAAM,UAAoB,CAAC;AAC3B,QAAM,SAAqC,CAAC;AAE5C,QAAMC,OAAsD;AAAA,IAC1D,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,kBAAkB;AAAA,IAClB,qBAAqB;AAAA,IACrB,aAAa;AAAA,IACb,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,qBAAqB;AAAA,IACrB,cAAc;AAAA,EAChB;AAEA,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,GAA8C;AAC7F,QAAI,UAAU,OAAW;AAEzB,QAAI,QAAQ,uBAAuB;AACjC,cAAQ,KAAK,GAAGA,KAAI,GAAG,CAAC,MAAM;AAC9B,aAAO,KAAK,QAAQ,IAAI,CAAC;AAAA,IAC3B,OAAO;AACL,cAAQ,KAAK,GAAGA,KAAI,GAAG,CAAC,MAAM;AAC9B,aAAO,KAAK,UAAU,OAAO,OAAO,KAAK;AAAA,IAC3C;AAAA,EACF;AAEA,MAAI,QAAQ,SAAS,GAAG;AACtB,YAAQ,KAAK,gBAAgB;AAC7B,WAAO,MAAK,oBAAI,KAAK,GAAE,YAAY,CAAC;AACpC,WAAO,KAAK,MAAM;AAClB,UAAM,QAAQD,KAAI,IAAI,oBAAoB,QAAQ,KAAK,IAAI,CAAC,sBAAsB,MAAM;AAAA,EAC1F;AAEA,QAAME,WAAU,MAAM,eAAeF,MAAK,MAAM;AAChD,MAAI,CAACE,UAAS;AACZ,UAAM,IAAI,MAAM,6BAA6B;AAAA,EAC/C;AACA,SAAOA;AACT;AAjDsB;AAmDtB,eAAsB,gBAAgBF,MAAU,QAAuC;AACrF,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,SAAuB,CAAC;AAC9B,QAAM,0BAAmD,CAAC;AAE1D,aAAW,OAAO,MAAM;AACtB,UAAM,CAAC,SAAS,GAAG,IAAI,IAAI,YAAY,MAAM,GAAG;AAChD,QAAI,CAAC,IAAK;AAEV,UAAM,WAAW,IAAI;AACrB,UAAM,aAAa,aAAa,SAAS,OAAO,aAAa,UAAU,QAAQ,YAAY;AAE3F,YAAQ,SAAS;AAAA,MACf,KAAK;AACH,YAAI,OAAO,eAAe,WAAW;AACnC,kCAAwB,GAAG,IAAI;AAAA,QACjC;AACA;AAAA,MACF,KAAK;AACH,YAAI,QAAQ,cAAc,OAAO,eAAe,UAAU;AACxD,iBAAO,WAAW;AAAA,QACpB,WAAW,QAAQ,cAAc,OAAO,eAAe,UAAU;AAC/D,iBAAO,WAAW;AAAA,QACpB,WAAW,QAAQ,oBAAoB,OAAO,eAAe,WAAW;AACtE,iBAAO,iBAAiB;AAAA,QAC1B;AACA;AAAA,MACF,KAAK;AAEH;AAAA,MACF;AACE;AAAA,IACJ;AAAA,EACF;AAEA,MAAI,OAAO,KAAK,uBAAuB,EAAE,SAAS,GAAG;AACnD,WAAO,0BAA0B;AAAA,EACnC;AAEA,SAAO;AACT;AA7CsB;AA+CtB,eAAsB,mBACpBA,MACA,QACA,UACuB;AACvB,QAAM,OAAM,oBAAI,KAAK,GAAE,YAAY;AACnC,QAAM,UAAmC,CAAC;AAE1C,MAAI,SAAS,UAAU;AACrB,YAAQ,KAAK,CAAC,wBAAwB,SAAS,QAAQ,CAAC;AAAA,EAC1D;AACA,MAAI,SAAS,UAAU;AACrB,YAAQ,KAAK,CAAC,wBAAwB,SAAS,QAAQ,CAAC;AAAA,EAC1D;AACA,MAAI,SAAS,mBAAmB,QAAW;AACzC,YAAQ,KAAK,CAAC,8BAA8B,OAAO,SAAS,cAAc,CAAC,CAAC;AAAA,EAC9E;AACA,MAAI,SAAS,yBAAyB;AACpC,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,SAAS,uBAAuB,GAAG;AAC3E,cAAQ,KAAK,CAAC,iBAAiB,GAAG,IAAI,OAAO,KAAK,CAAC,CAAC;AAAA,IACtD;AAAA,EACF;AAEA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAK,OAAO;AAAA,MAC7B,KAAK;AAAA,MACL,QAAQ,CAAC,QAAQ,KAAK,OAAO,GAAG;AAAA,IAClC,EAAE;AAAA,EACJ;AAEA,SAAO,gBAAgBA,MAAK,MAAM;AACpC;AAhCsB;AAkCtB,eAAsB,iBACpBA,MACA,QACA,UACA,aACA,MACiB;AACjB,QAAM,WAAW,iBAAiB,QAAQ,KAAK;AAC/C,QAAM,MAAM,SAAS,MAAM,YAAY,KAAK,IAAI,CAAC,IAAI,QAAQ;AAE7D,QAAM,SAASA,KAAI,SAAS,KAAK,MAAM,aAAa;AAAA,IAClD;AAAA,IACA,MAAM;AAAA,EACR,CAAC;AAED,QAAM,kBAAkBA,MAAK,QAAQ,EAAE,cAAc,IAAI,CAAC;AAE1D,SAAO,uBAAuB,GAAG;AACnC;AAlBsB;AAoBtB,eAAsB,mBAAmBA,MAAU,QAA+B;AAChF,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AAEA,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,SAAS,0EAAmB,KAAK,gBAAgB;AAAA,EAC7D;AAEA,QAAM,aAAa,IAAI,iBAAiB;AAExC,MAAI,YAAY;AACd,QAAI;AACF,YAAM,aAAaA,KAAI,SAAS,UAAU;AAAA,IAC5C,SAASG,SAAO;AACd,cAAQ,KAAK,iDAAiDA,OAAK;AAAA,IACrE;AAAA,EACF;AAEA,QAAM,kBAAkBH,MAAK,QAAQ,EAAE,cAAc,KAAK,CAAC;AAC7D;AAtBsB;AAwBtB,eAAsB,cAAcA,MAAsC;AACxE,QAAM,OAAO,MAAM;AAAA,IAMjBA,KAAI;AAAA,IACJ;AAAA,EACF;AAEA,SAAO,KAAK,IAAI,CAAC,SAAS;AAAA,IACxB,IAAI,IAAI;AAAA,IACR,SAAS,IAAI;AAAA,IACb,MAAM,IAAI,QAAQ;AAAA,IAClB,UAAU,IAAI,aAAa;AAAA,EAC7B,EAAE;AACJ;AAjBsB;;;AD3StB;;;AEPA;AAAA;AAAA;AAAAI;AAwBO,IAAM,cAAN,MAAkB;AAAA,EAxBzB,OAwByB;AAAA;AAAA;AAAA,EAGvB,YAAY,SAA2B;AACrC,SAAK,UAAU;AAAA,MACb,WAAW;AAAA,MACX,wBAAwB;AAAA,MACxB,oBAAoB;AAAA,MACpB,GAAG;AAAA,IACL;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,OAAO,YAAoB,UAA0B;AAC3D,UAAM,EAAE,UAAU,IAAI,KAAK;AAC3B,WAAO,GAAG,SAAS,IAAI,UAAU,IAAI,QAAQ;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAKQ,iBAAyB;AAC/B,UAAM,MAAM,KAAK,IAAI;AACrB,WAAO,MAAO,MAAM,KAAK,QAAQ;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,MACJ,IACA,YACA,UACoD;AACpD,UAAM,MAAM,KAAK,OAAO,YAAY,QAAQ;AAC5C,UAAM,cAAc,KAAK,eAAe;AACxC,UAAM,YAAY,cAAc,KAAK,QAAQ;AAG7C,UAAM,SAAS,MAAM,GAAG,IAAI,KAAK,MAAM;AAEvC,QAAIC,SAAQ;AAEZ,QAAI,UAAU,OAAO,cAAc,WAAW;AAE5C,MAAAA,SAAQ,OAAO;AAAA,IACjB;AAGA,IAAAA;AAGA,UAAM,UAAUA,UAAS,KAAK,QAAQ;AAGtC,UAAM,UAAyB,EAAE,OAAAA,QAAO,UAAU;AAClD,UAAM,MAAM,KAAK,KAAK,KAAK,QAAQ,WAAW,GAAI;AAClD,UAAM,GAAG,IAAI,KAAK,KAAK,UAAU,OAAO,GAAG,EAAE,eAAe,IAAI,CAAC;AAEjE,WAAO,EAAE,SAAS,MAAM,QAAQ;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,QACJ,IACA,YACA,UAC+B;AAC/B,UAAM,MAAM,KAAK,OAAO,YAAY,QAAQ;AAC5C,WAAO,MAAM,GAAG,IAAI,KAAK,MAAM;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,MACJ,IACA,YACA,UACe;AACf,UAAM,MAAM,KAAK,OAAO,YAAY,QAAQ;AAC5C,UAAM,GAAG,OAAO,GAAG;AAAA,EACrB;AACF;AAKO,SAAS,oBAAoB,SAA2B;AAC7D,QAAM,UAAU,IAAI,YAAY,OAAO;AAEvC,SAAO,OAAO,GAAuC,SAA8B;AACjF,UAAM,KAAK,EAAE,IAAI;AAEjB,QAAI,CAAC,IAAI;AACP,cAAQ,KAAK,iDAAiD;AAC9D,aAAO,KAAK;AAAA,IACd;AAGA,UAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,UAAM,KAAK,EAAE,IAAI,OAAO,kBAAkB,KAC/B,EAAE,IAAI,OAAO,iBAAiB,KAC9B,EAAE,IAAI,OAAO,WAAW,KACxB;AAEX,UAAM,aAAa,UAAU;AAC7B,UAAM,WAAW,EAAE,IAAI;AAGvB,UAAM,EAAE,SAAS,MAAAC,MAAK,IAAI,MAAM,QAAQ,MAAM,IAAI,YAAY,QAAQ;AAGtE,MAAE,OAAO,qBAAqB,QAAQ,YAAY,SAAS,CAAC;AAC5D,MAAE,OAAO,yBAAyB,KAAK,IAAI,GAAG,QAAQ,cAAcA,MAAK,KAAK,EAAE,SAAS,CAAC;AAC1F,MAAE,OAAO,qBAAqBA,MAAK,UAAU,SAAS,CAAC;AAEvD,QAAI,CAAC,SAAS;AACZ,YAAM,aAAa,KAAK,MAAMA,MAAK,YAAY,KAAK,IAAI,KAAK,GAAI;AACjE,QAAE,OAAO,eAAe,WAAW,SAAS,CAAC;AAE7C,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,OAAO;AAAA,UACL,SAAS;AAAA,UACT,MAAM;AAAA,UACN;AAAA,QACF;AAAA,MACF,GAAG,GAAG;AAAA,IACR;AAEA,UAAM,KAAK;AAAA,EACb;AACF;AA7CgB;AAkDT,IAAM,mBAAmB;AAAA;AAAA,EAE9B,UAAU;AAAA,IACR,UAAU,KAAK;AAAA,IACf,aAAa;AAAA,EACf;AAAA;AAAA,EAGA,MAAM;AAAA,IACJ,UAAU,KAAK;AAAA,IACf,aAAa;AAAA,EACf;AAAA;AAAA,EAGA,QAAQ;AAAA,IACN,UAAU,KAAK;AAAA,IACf,aAAa;AAAA,EACf;AAAA;AAAA,EAGA,IAAI;AAAA,IACF,UAAU,KAAK;AAAA,IACf,aAAa;AAAA,EACf;AAAA;AAAA,EAGA,QAAQ;AAAA,IACN,UAAU,KAAK;AAAA,IACf,aAAa;AAAA,EACf;AAAA;AAAA,EAGA,MAAM;AAAA,IACJ,UAAU;AAAA,IACV,aAAa;AAAA,EACf;AAAA;AAAA,EAGA,QAAQ;AAAA,IACN,UAAU,KAAK;AAAA,IACf,aAAa;AAAA,EACf;AACF;AA2BO,SAAS,kBAAkB,QAAuC;AACvE,QAAM,UAAU,iBAAiB,MAAM;AACvC,SAAO,oBAAoB;AAAA,IACzB,GAAG;AAAA,IACH,WAAW,YAAY,MAAM;AAAA,EAC/B,CAAC;AACH;AANgB;;;AF5NhB,IAAM,aAAa,IAAIC,MAA8C;AAGrE,WAAW,IAAI,KAAK,kBAAkB,MAAM,CAAC;AAE7C,IAAM,gBAAgB,wBAACC,YAA6B;AAClD,MAAIA,mBAAiB,UAAU;AAC7B,WAAOA;AAAA,EACT;AACA,QAAM,UAAUA,mBAAiB,QAAQA,QAAM,UAAU;AACzD,SAAO,IAAI,SAAS,SAAS,KAAK,uBAAuB;AAC3D,GANsB;AAStB,WAAW,IAAI,oBAAoB,OAAO,MAAM;AAC9C,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU;AACvC,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,MAAM,cAAc,KAAK;AAEvE,MAAI;AACF,UAAM,SAAS,MAAM,iBAAiB,EAAE,KAAK,UAAU,MAAM;AAE7D,UAAM,eAAe,EAAE,IAAI,OAAO,QAAQ,KAAK;AAC/C,QAAI,CAAC,aAAa,SAAS,kBAAkB,KAAK,OAAO,KAAK;AAC5D,aAAO,EAAE,SAAS,OAAO,GAAG;AAAA,IAC9B;AACA,WAAO,gBAAgB,GAAG,MAAM;AAAA,EAClC,SAASA,SAAO;AACd,UAAM,cAAcA,OAAK;AAAA,EAC3B;AACF,CAAC;AAGD,WAAW,IAAI,UAAU,OAAO,MAAM;AACpC,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ,KAAK;AACxC,MAAI;AACF,UAAM,SAAS,MAAM,iBAAiB,EAAE,KAAK,SAAS,MAAM;AAE5D,QAAI,OAAO,KAAK;AACd,aAAO,EAAE,SAAS,OAAO,GAAG;AAAA,IAC9B;AACA,WAAO,gBAAgB,GAAG,MAAM;AAAA,EAClC,SAASA,SAAO;AACd,UAAM,cAAcA,OAAK;AAAA,EAC3B;AACF,CAAC;AAED,WAAW,IAAI,WAAW,OAAO,MAAM;AACrC,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ,KAAK;AACxC,MAAI;AACF,UAAM,SAAS,MAAM,iBAAiB,EAAE,KAAK,UAAU,MAAM;AAE7D,QAAI,OAAO,KAAK;AACd,aAAO,EAAE,SAAS,OAAO,GAAG;AAAA,IAC9B;AACA,WAAO,gBAAgB,GAAG,MAAM;AAAA,EAClC,SAASA,SAAO;AACd,UAAM,cAAcA,OAAK;AAAA,EAC3B;AACF,CAAC;AAGD,WAAW,IAAI,uBAAuB,OAAO,MAAM;AACjD,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU;AACvC,QAAM,OAAO,EAAE,IAAI,MAAM,MAAM;AAC/B,QAAM,QAAQ,EAAE,IAAI,MAAM,OAAO,KAAK;AAEtC,MAAI,CAAC,MAAM;AACT,UAAM,IAAI,SAAS,sBAAsB,KAAK,wBAAwB;AAAA,EACxE;AAEA,MAAI;AACF,UAAM,SAAS,MAAM;AAAA,MACnB,EAAE;AAAA,MACF;AAAA,MACA,EAAE,MAAM,MAAM;AAAA,MACd;AAAA,QACE,WAAW,EAAE,IAAI,OAAO,YAAY,KAAK;AAAA,QACzC,WACE,EAAE,IAAI,OAAO,kBAAkB,KAC/B,EAAE,IAAI,OAAO,iBAAiB,KAC9B,EAAE,IAAI,OAAO,WAAW,KACxB;AAAA,MACJ;AAAA,IACF;AACA,UAAM,eAAe,EAAE,IAAI,OAAO,QAAQ,KAAK,IAAI,SAAS,kBAAkB;AAC9E,QAAI,CAAC,aAAa;AAChB,YAAM,iBAAiB,OAAO,eAAe,OAAO;AACpD,UAAI,CAAC,gBAAgB;AACnB,eAAO,gBAAgB,GAAG,MAAM;AAAA,MAClC;AACA,YAAM,cAAc,IAAI,IAAI,cAAc;AAC1C,kBAAY,aAAa,IAAI,eAAe,OAAO,WAAW;AAC9D,kBAAY,aAAa,IAAI,gBAAgB,OAAO,YAAY;AAChE,kBAAY,aAAa,IAAI,YAAY,QAAQ;AACjD,UAAI,OAAO;AACT,oBAAY,aAAa,IAAI,SAAS,KAAK;AAAA,MAC7C;AACA,UAAI,OAAO,eAAe,OAAO,gBAAgB,gBAAgB;AAC/D,oBAAY,aAAa,IAAI,YAAY,OAAO,WAAW;AAAA,MAC7D;AACA,aAAO,EAAE,SAAS,YAAY,SAAS,CAAC;AAAA,IAC1C;AACA,WAAO,gBAAgB,GAAG,MAAM;AAAA,EAClC,SAASA,SAAO;AACd,UAAM,cAAcA,OAAK;AAAA,EAC3B;AACF,CAAC;AAED,WAAW,KAAK,YAAY,OAAO,MAAM;AACvC,QAAM,gBAAgB,EAAE,IAAI,OAAO,eAAe;AAClD,MAAI,CAAC,eAAe;AAClB,UAAM,IAAI,SAAS,iCAAiC,KAAK,qBAAqB;AAAA,EAChF;AAEA,QAAM,QAAQ,cAAc,MAAM,kBAAkB;AACpD,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,SAAS,gCAAgC,KAAK,qBAAqB;AAAA,EAC/E;AAEA,QAAM,eAAe,MAAM,CAAC;AAE5B,MAAI;AACF,UAAM,SAAS,MAAM;AAAA,MACnB,EAAE;AAAA,MACF;AAAA,MACA;AAAA,QACE,WAAW,EAAE,IAAI,OAAO,YAAY,KAAK;AAAA,QACzC,WACE,EAAE,IAAI,OAAO,kBAAkB,KAC/B,EAAE,IAAI,OAAO,iBAAiB,KAC9B,EAAE,IAAI,OAAO,WAAW,KACxB;AAAA,MACJ;AAAA,IACF;AACA,WAAO,gBAAgB,GAAG,MAAM;AAAA,EAClC,SAASA,SAAO;AACd,UAAM,cAAcA,OAAK;AAAA,EAC3B;AACF,CAAC;AAED,WAAW,KAAK,WAAW,OAAO,MAAM;AACtC,QAAM,gBAAgB,EAAE,IAAI,OAAO,eAAe;AAClD,MAAI,CAAC,eAAe;AAClB,UAAM,IAAI,SAAS,iCAAiC,KAAK,qBAAqB;AAAA,EAChF;AAEA,QAAM,QAAQ,cAAc,MAAM,kBAAkB;AACpD,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,SAAS,gCAAgC,KAAK,qBAAqB;AAAA,EAC/E;AAEA,QAAM,cAAc,MAAM,CAAC;AAC3B,QAAM,eAAe,EAAE,IAAI,OAAO,iBAAiB,KAAK;AAExD,MAAI;AACF,UAAM,WAAW,EAAE,KAAK,aAAa,YAAY;AACjD,WAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAAA,EAC7C,SAASA,SAAO;AACd,UAAM,cAAcA,OAAK;AAAA,EAC3B;AACF,CAAC;AAED,WAAW,IAAI,OAAO,KAAK,GAAG,OAAO,MAAM;AACzC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AAAA,EACxE;AAEA,MAAI;AACF,UAAMC,WAAU,MAAM,eAAe,EAAE,KAAK,MAAM;AAClD,QAAI,CAACA,UAAS;AACZ,YAAM,IAAI,SAAS,kBAAkB,KAAK,gBAAgB;AAAA,IAC5D;AAEA,WAAO,gBAAgB,GAAG;AAAA,MACxB,IAAIA,SAAQ;AAAA,MACZ,OAAOA,SAAQ;AAAA,MACf,MAAMA,SAAQ,QAAQA,SAAQ;AAAA,MAC9B,aAAaA,SAAQ;AAAA,MACrB,qBAAqBA,SAAQ;AAAA,IAC/B,CAAC;AAAA,EACH,SAASD,SAAO;AACd,UAAM,cAAcA,OAAK;AAAA,EAC3B;AACF,CAAC;AAED,WAAW,IAAI,WAAW,KAAK,GAAG,OAAO,MAAM;AAC7C,QAAM,OAAO,EAAE,IAAI,MAAM;AACzB,SAAO,gBAAgB,GAAG;AAAA,IACxB,OAAO;AAAA,IACP,MAAM,QAAQ;AAAA,EAChB,CAAC;AACH,CAAC;AAED,IAAO,eAAQ;;;AGjNf;AAAA;AAAA;AAAAE;AAIA;;;ACJA;AAAA;AAAA;AAAAC;AAEA;AAGA,eAAsB,oBAAoBC,MAAU;AAClD,SAAO;AAAA,IAKLA,KAAI;AAAA,IACJ;AAAA,EACF;AACF;AATsB;AAWtB,eAAsB,uBAAuBA,MAAU,UAAkB;AACvE,QAAM,sBAAsB,YAAY,IAAI,KAAK,EAAE,YAAY;AAE/D,SAAO;AAAA,IAOLA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAmBA,CAAC,oBAAoB,oBAAoB,kBAAkB;AAAA,EAC7D;AACF;AAhCsB;AAkCtB,eAAsB,iBAAiBA,MAAU;AAC/C,SAAO,MAIJA,KAAI,IAAI,kHAAkH;AAC/H;AANsB;AAQtB,eAAsB,mBAAmBA,MAAU;AACjD,SAAO;AAAA,IAKLA,KAAI;AAAA,IACJ;AAAA,EACF;AACF;AATsB;AAWtB,eAAsB,oBAAoBA,MAAU;AAClD,SAAO,MAKJA,KAAI,IAAI,8FAA8F;AAC3G;AAPsB;AAStB,eAAsB,qBAAqBA,MAAU;AACnD,SAAO;AAAA,IAILA,KAAI;AAAA,IACJ;AAAA,EACF;AACF;AARsB;AAkBtB,IAAM,gCAA6D;AAAA,EACjE;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,IACb,aAAa;AAAA,IACb,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,IACb,aAAa;AAAA,IACb,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,IACb,aAAa;AAAA,IACb,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,IACb,aAAa;AAAA,IACb,WAAW;AAAA,EACb;AACF;AAEA,SAAS,8BACP,MAO6B;AAC7B,MAAI,CAAC,KAAK,QAAQ;AAChB,WAAO,8BAA8B,IAAI,CAAC,UAAU,EAAE,GAAG,KAAK,EAAE;AAAA,EAClE;AAEA,SAAO,KACJ,IAAI,CAAC,KAAK,UAAU;AACnB,UAAM,QAAQ,IAAI,eAAe,IAAI,KAAK,EAAE,YAAY;AACxD,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,MACL,IAAI,IAAI,2BAA2B,QAAQ;AAAA,MAC3C;AAAA,MACA,aAAa,IAAI,cAAc,KAAK,KAAK;AAAA,MACzC,aAAa,IAAI,eAAe;AAAA,MAChC,WAAW,IAAI,cAAc,QAAQ;AAAA,IACvC;AAAA,EACF,CAAC,EACA,OAAO,CAAC,SAA4C,SAAS,IAAI,EACjE,KAAK,CAAC,GAAG,MAAM;AACd,QAAI,EAAE,cAAc,EAAE,WAAW;AAC/B,aAAO,EAAE,KAAK,EAAE;AAAA,IAClB;AACA,WAAO,EAAE,YAAY,EAAE;AAAA,EACzB,CAAC;AACL;AAnCS;AAqCT,eAAsB,+BAA+BA,MAAgD;AACnG,MAAI;AACF,UAAM,OAAO,MAAM;AAAA,MAQjBA,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOF;AAEA,WAAO,8BAA8B,IAAI;AAAA,EAC3C,SAASC,SAAO;AACd,YAAQ,KAAK,iFAAiFA,OAAK;AACnG,WAAO,8BAA8B,IAAI,CAAC,UAAU,EAAE,GAAG,KAAK,EAAE;AAAA,EAClE;AACF;AAzBsB;AAmCtB,IAAM,+BAAoD;AAAA,EACxD;AAAA,IACE,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS;AAAA,IACT,aAAa;AAAA,IACb,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS;AAAA,IACT,aAAa;AAAA,IACb,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS;AAAA,IACT,aAAa;AAAA,IACb,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS;AAAA,IACT,aAAa;AAAA,IACb,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS;AAAA,IACT,aAAa;AAAA,IACb,WAAW;AAAA,EACb;AACF;AAEA,eAAe,qBAAqBD,MAAU;AAC5C,MAAI;AACF,UAAME,SAAQ,MAAM;AAAA,MAClBF,KAAI;AAAA,MACJ;AAAA,MACA,CAAC,uBAAuB,cAAc;AAAA,IACxC;AAEA,QAAI,CAACE,OAAM,QAAQ;AACjB,aAAO,CAAC;AAAA,IACV;AAEA,UAAM,YAAYA,OAAM,CAAC,GAAG,QAAQ;AAEpC,QAAI;AACF,aAAO,MAAM;AAAA,QAOXF,KAAI;AAAA,QACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMQ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMnB;AAAA,IACF,SAASC,SAAO;AACd,cAAQ,KAAK,2EAA2EA,OAAK;AAC7F,aAAO,CAAC;AAAA,IACV;AAAA,EACF,SAASA,SAAO;AACd,YAAQ,KAAK,yEAAyEA,OAAK;AAC3F,WAAO,CAAC;AAAA,EACV;AACF;AA5Ce;AA8Cf,eAAsB,uBAAuBD,MAAwC;AACnF,QAAM,OAAO,MAAM,qBAAqBA,IAAG;AAE3C,MAAI,CAAC,KAAK,QAAQ;AAChB,WAAO,6BAA6B,IAAI,CAAC,UAAU,EAAE,GAAG,KAAK,EAAE;AAAA,EACjE;AAEA,SAAO,KACJ,IAAI,CAAC,KAAK,UAAU;AACnB,UAAM,QAAQ,IAAI,QAAQ,IAAI,KAAK,EAAE,YAAY;AACjD,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,MACL;AAAA,MACA,aAAa,IAAI,cAAc,KAAK,KAAK;AAAA,MACzC,SAAS,OAAO,SAAS,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,6BAA6B,QAAQ,6BAA6B,MAAM,EAAE;AAAA,MACxI,aAAa,IAAI,eAAe;AAAA,MAChC,WAAW,IAAI,cAAc,QAAQ;AAAA,IACvC;AAAA,EACF,CAAC,EACA,OAAO,CAAC,SAAoC,SAAS,IAAI,EACzD,KAAK,CAAC,GAAG,MAAM;AACd,QAAI,EAAE,cAAc,EAAE,WAAW;AAC/B,aAAO,EAAE,UAAU,EAAE;AAAA,IACvB;AACA,WAAO,EAAE,YAAY,EAAE;AAAA,EACzB,CAAC;AACL;AA7BsB;AA+BtB,eAAsB,sBAAsBA,MAAU;AACpD,SAAO;AAAA,IAKLA,KAAI;AAAA,IACJ;AAAA,EACF;AACF;AATsB;AAWtB,eAAsB,yBAAyBA,MAAU;AACvD,SAAO;AAAA,IAKLA,KAAI;AAAA,IACJ;AAAA,EACF;AACF;AATsB;AAWtB,eAAsB,+BAA+BA,MAAU;AAC7D,SAAO;AAAA,IAKLA,KAAI;AAAA,IACJ;AAAA,EACF;AACF;AATsB;AAWtB,eAAsB,0BACpBA,MACA,QACA,SACA;AACA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,MACE,EAAE,KAAK,uDAAuD,QAAQ,CAAC,MAAM,EAAE;AAAA,MAC/E,GAAG,QAAQ,IAAI,CAAC,UAAU;AAAA,QACxB,KAAK;AAAA;AAAA,QAEL,QAAQ;AAAA,UACN;AAAA,UACA,KAAK;AAAA,UACL,KAAK,kBAAkB;AAAA,UACvB,KAAK,iBAAiB;AAAA,WACtB,oBAAI,KAAK,GAAE,YAAY;AAAA,WACvB,oBAAI,KAAK,GAAE,YAAY;AAAA,QACzB;AAAA,MACF,EAAE;AAAA,IACJ;AAAA,EACF;AACF;AAvBsB;AAyBtB,eAAsB,uBACpBA,MACA,QACA,UACA;AACA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,MACE,EAAE,KAAK,kDAAkD,QAAQ,CAAC,MAAM,EAAE;AAAA,MAC1E,GAAG,SAAS,IAAI,CAAC,aAAa;AAAA,QAC5B,KAAK;AAAA,QACL,QAAQ,CAAC,QAAQ,UAAS,oBAAI,KAAK,GAAE,YAAY,CAAC;AAAA,MACpD,EAAE;AAAA,IACJ;AAAA,EACF;AACF;AAfsB;AAiBtB,eAAsB,wBACpBA,MACA,QACA,aACA;AACA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,MACE,EAAE,KAAK,oDAAoD,QAAQ,CAAC,MAAM,EAAE;AAAA,MAC5E,GAAG,YAAY,IAAI,CAAC,UAAU;AAAA,QAC5B,KAAK;AAAA,QACL,QAAQ,CAAC,QAAQ,KAAK,sBAAsB,KAAK,iBAAiB,OAAM,oBAAI,KAAK,GAAE,YAAY,CAAC;AAAA,MAClG,EAAE;AAAA,IACJ;AAAA,EACF;AACF;AAfsB;AAiBtB,eAAsB,0BACpBA,MACA,QACA,WACA;AACA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,MACE,EAAE,KAAK,qDAAqD,QAAQ,CAAC,MAAM,EAAE;AAAA,MAC7E,GAAG,UAAU,IAAI,CAAC,UAAU;AAAA,QAC1B,KAAK;AAAA;AAAA,QAEL,QAAQ,CAAC,QAAQ,KAAK,YAAY,KAAK,WAAW,KAAK,aAAa,OAAM,oBAAI,KAAK,GAAE,YAAY,CAAC;AAAA,MACpG,EAAE;AAAA,IACJ;AAAA,EACF;AACF;AAhBsB;AAkBtB,eAAsB,2BACpBA,MACA,QACA,cACA;AACA,QAAM,aAAa,MAAM,KAAK,IAAI,IAAI,aAAa,IAAI,CAAC,UAAU,OAAO,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,UAA2B,OAAO,SAAS,KAAK,CAAC;AAE5I,QAAM,aAAY,oBAAI,KAAK,GAAE,YAAY;AACzC,QAAM,aAAa;AAAA,IACjB,EAAE,KAAK,uDAAuD,QAAQ,CAAC,MAAM,EAAE;AAAA,IAC/E,GAAG,WAAW,IAAI,CAAC,iBAAiB;AAAA,MAClC,KAAK;AAAA,MACL,QAAQ,CAAC,QAAQ,aAAa,SAAS;AAAA,IACzC,EAAE;AAAA,EACJ;AAEA,QAAM,YAAYA,KAAI,IAAI,UAAU;AACtC;AAjBsB;AAmBtB,eAAsB,4BACpBA,MACA,QACA,aACA;AACA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,MACE,EAAE,KAAK,uDAAuD,QAAQ,CAAC,MAAM,EAAE;AAAA,MAC/E,GAAG,YAAY,IAAI,CAAC,UAAU;AAAA,QAC5B,KAAK;AAAA,QACL,QAAQ,CAAC,QAAQ,KAAK,cAAc,KAAK,YAAY,OAAM,oBAAI,KAAK,GAAE,YAAY,CAAC;AAAA,MACrF,EAAE;AAAA,IACJ;AAAA,EACF;AACF;AAfsB;AAiBtB,eAAsB,+BACpBA,MACA,QACA,kBACA;AACA,QAAM,aAAa,MAAM,KAAK,IAAI,IAAI,iBAAiB,IAAI,CAAC,UAAU,OAAO,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,UAA2B,OAAO,SAAS,KAAK,CAAC;AAChJ,QAAM,aAAY,oBAAI,KAAK,GAAE,YAAY;AAEzC,QAAM,aAAa;AAAA,IACjB,EAAE,KAAK,2DAA2D,QAAQ,CAAC,MAAM,EAAE;AAAA,IACnF,GAAG,WAAW,IAAI,CAAC,qBAAqB;AAAA,MACtC,KAAK;AAAA,MACL,QAAQ,CAAC,QAAQ,iBAAiB,SAAS;AAAA,IAC7C,EAAE;AAAA,EACJ;AAEA,QAAM,YAAYA,KAAI,IAAI,UAAU;AACtC;AAjBsB;AAmBtB,eAAsB,qCACpBA,MACA,QACA,wBACA;AACA,QAAM,aAAa,MAAM,KAAK,IAAI,IAAI,uBAAuB,IAAI,CAAC,UAAU,OAAO,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,UAA2B,OAAO,SAAS,KAAK,CAAC;AACtJ,QAAM,aAAY,oBAAI,KAAK,GAAE,YAAY;AAEzC,QAAM,aAAa;AAAA,IACjB,EAAE,KAAK,iEAAiE,QAAQ,CAAC,MAAM,EAAE;AAAA,IACzF,GAAG,WAAW,IAAI,CAAC,uBAAuB,WAAW;AAAA,MACnD,KAAK;AAAA,MACL,QAAQ,CAAC,QAAQ,uBAAuB,QAAQ,GAAG,SAAS;AAAA,IAC9D,EAAE;AAAA,EACJ;AAEA,QAAM,YAAYA,KAAI,IAAI,UAAU;AACtC;AAjBsB;AAmBtB,eAAsB,sBAAsBA,MAAU,QAA4C;AAChG,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,MAAMA,KAAI,GAAG,MAAM;AAAA,IACrBA,KAAI,GAAG;AAAA,MACL;AAAA,IACF,EAAE,KAAK,MAAM;AAAA,IACbA,KAAI,GAAG,QAAQ,yDAAyD,EAAE,KAAK,MAAM;AAAA,IACrFA,KAAI,GAAG,QAAQ,6EAA6E,EAAE,KAAK,MAAM;AAAA,IACzGA,KAAI,GAAG,QAAQ,2EAA2E,EAAE,KAAK,MAAM;AAAA,IACvGA,KAAI,GAAG,QAAQ,mEAAmE,EAAE,KAAK,MAAM;AAAA,IAC/FA,KAAI,GAAG;AAAA,MACL;AAAA,IACF,EAAE,KAAK,MAAM;AAAA,IACbA,KAAI,GAAG;AAAA,MACL;AAAA,IACF,EAAE,KAAK,MAAM;AAAA,EACf,CAAC;AAED,QAAM,YAAa,gBAAgB,WAAW,CAAC;AAK/C,QAAM,SAAU,aAAa,WAAW,CAAC;AACzC,QAAM,cAAe,kBAAkB,WAAW,CAAC;AAInD,QAAM,iBAAkB,qBAAqB,WAAW,CAAC;AAGzD,QAAM,aAAc,iBAAiB,WAAW,CAAC;AACjD,QAAM,WAAY,eAAe,WAAW,CAAC;AAI7C,QAAM,eAAgB,gBAAgB,WAAW,CAAC;AAMlD,QAAMG,WAAU,MAAM,eAAeH,MAAK,MAAM;AAEhD,SAAO;AAAA,IACL,WAAW,UAAU,IAAI,CAAC,UAAU;AAAA,MAClC,YAAY,KAAK;AAAA,MACjB,gBAAgB,KAAK,oBAAoB;AAAA,MACzC,eAAe,KAAK,mBAAmB;AAAA,IACzC,EAAE;AAAA,IACF,QAAQ,OAAO,IAAI,CAAC,SAAS,KAAK,QAAQ;AAAA,IAC1C,aAAa,YAAY,IAAI,CAAC,UAAU;AAAA,MACtC,cAAc,KAAK;AAAA,MACnB,UAAU,KAAK,YAAY;AAAA,IAC7B,EAAE;AAAA,IACF,gBAAgB,eAAe,IAAI,CAAC,SAAS,KAAK,iBAAiB;AAAA,IACnE,YAAY,WAAW,IAAI,CAAC,SAAS,KAAK,aAAa;AAAA,IACvD,oBAAoB,SAAS,IAAI,CAAC,UAAU;AAAA,MAC1C,sBAAsB,KAAK;AAAA,MAC3B,eAAe,KAAK,kBAAkB;AAAA,IACxC,EAAE;AAAA,IACF,WAAW,aAAa,IAAI,CAAC,UAAU;AAAA,MACrC,YAAY,KAAK;AAAA,MACjB,WAAW,KAAK;AAAA,MAChB,WAAW,KAAK,cAAc;AAAA,IAChC,EAAE;AAAA,IACF,qBAAqBG,UAAS,uBAAuB;AAAA,EACvD;AACF;AA3EsB;AA6EtB,eAAsB,mBACpBH,MACA,QACA,UAWI,CAAC,GACL;AACA,MAAI,QAAQ,iBAAiB;AAC3B,UAAM,0BAA0BA,MAAK,QAAQ,QAAQ,eAAe;AAAA,EACtE;AAEA,MAAI,QAAQ,UAAU;AACpB,UAAM,uBAAuBA,MAAK,QAAQ,QAAQ,QAAQ;AAAA,EAC5D;AAEA,MAAI,QAAQ,eAAe;AACzB,UAAM;AAAA,MACJA;AAAA,MACA;AAAA,MACA,QAAQ,cAAc,IAAI,CAAC,IAAI,WAAW,EAAE,cAAc,IAAI,UAAU,QAAQ,EAAE,EAAE;AAAA,IACtF;AAAA,EACF;AAEA,MAAI,QAAQ,uBAAuB;AACjC,UAAM,cAAc,QAAQ,sBAAsB;AAAA,MAAI,CAAC,SACrD,OAAO,SAAS,WAAW,EAAE,sBAAsB,KAAK,IAAI;AAAA,IAC9D;AACA,UAAM,wBAAwBA,MAAK,QAAQ,WAAW;AAAA,EACxD;AAEA,MAAI,QAAQ,cAAc;AACxB,UAAM,2BAA2BA,MAAK,QAAQ,QAAQ,YAAY;AAAA,EACpE;AAEA,MAAI,QAAQ,aAAa;AACvB,UAAM,YAAY,QAAQ,YAAY;AAAA,MAAI,CAAC,SACzC,OAAO,SAAS,WACZ,EAAE,YAAY,MAAM,WAAW,WAAW,WAAW,KAAK,IAC1D;AAAA,IACN;AACA,UAAM,0BAA0BA,MAAK,QAAQ,SAAiF;AAAA,EAChI;AAEA,MAAI,QAAQ,kBAAkB;AAC5B,UAAM,+BAA+BA,MAAK,QAAQ,QAAQ,gBAAgB;AAAA,EAC5E;AAEA,MAAI,QAAQ,wBAAwB;AAClC,UAAM,qCAAqCA,MAAK,QAAQ,QAAQ,sBAAsB;AAAA,EACxF;AAEA,QAAM,iBAA0D;AAAA,IAC9D,kBAAkB,QAAQ,oBAAoB;AAAA,IAC9C,qBAAqB;AAAA,EACvB;AAEA,MAAI,OAAO,QAAQ,wBAAwB,YAAY,QAAQ,oBAAoB,KAAK,GAAG;AACzF,mBAAe,sBAAsB,QAAQ,oBAAoB,KAAK,EAAE,YAAY;AAAA,EACtF;AAEA,QAAM,kBAAkBA,MAAK,QAAQ,cAAc;AACrD;AAtEsB;;;ADliBtB,SAAS,gBAAgB,MAAyB;AAChD,QAAM,UAAe,CAAC;AAEtB,MAAI,OAAO,KAAK,SAAS,SAAU,SAAQ,OAAO,KAAK,KAAK,KAAK;AACjE,MAAI,OAAO,KAAK,gBAAgB,SAAU,SAAQ,cAAc,KAAK,YAAY,KAAK;AACtF,MAAI,OAAO,KAAK,YAAY,SAAU,SAAQ,UAAU,KAAK,QAAQ,KAAK;AAC1E,MAAI,OAAO,KAAK,WAAW,SAAU,SAAQ,SAAS,KAAK;AAC3D,MAAI,OAAO,KAAK,aAAa,SAAU,SAAQ,WAAW,KAAK;AAC/D,MAAI,OAAO,KAAK,cAAc,SAAU,SAAQ,YAAY,KAAK;AACjE,MAAI,OAAO,KAAK,wBAAwB,SAAU,SAAQ,sBAAsB,KAAK;AACrF,MAAI,OAAO,KAAK,gBAAgB,SAAU,SAAQ,cAAc,KAAK;AACrE,MAAI,OAAO,KAAK,kBAAkB,SAAU,SAAQ,gBAAgB,KAAK;AACzE,MAAI,OAAO,KAAK,wBAAwB,SAAU,SAAQ,sBAAsB,KAAK;AACrF,MAAI,OAAO,KAAK,wBAAwB,UAAW,SAAQ,sBAAsB,KAAK;AAEtF,QAAM,aAAa,OAAO,KAAK,eAAe,WAC1C,KAAK,aACL,OAAO,KAAK,aAAa,YAAY,KAAK,aAAa,QAAQ,OAAQ,KAAK,SAAiB,OAAO,WACjG,KAAK,SAAiB,KACvB;AACN,MAAI,eAAe,OAAW,SAAQ,aAAa;AAEnD,QAAM,mBAAmB,OAAO,KAAK,qBAAqB,WACtD,KAAK,mBACL,OAAO,KAAK,mBAAmB,YAAY,KAAK,mBAAmB,QAAQ,OAAQ,KAAK,eAAuB,OAAO,WACnH,KAAK,eAAuB,KAC7B;AACN,MAAI,qBAAqB,OAAW,SAAQ,mBAAmB;AAE/D,SAAO;AACT;AA9BS;AAgCT,eAAe,0BAA0B,GAAQ,QAAiC;AAChF,QAAM,cAAc,EAAE,IAAI,OAAO,cAAc;AAC/C,MAAI,CAAC,aAAa,WAAW,qBAAqB,GAAG;AACnD,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,QAAM,WAAW,MAAM,EAAE,IAAI,SAAS;AACtC,QAAM,YAAY,SAAS,IAAI,MAAM,KAAK,SAAS,IAAI,OAAO;AAC9D,MAAI,CAAC,aAAa,OAAO,cAAc,UAAU;AAC/C,UAAM,IAAI,SAAS,wBAAwB,KAAK,mBAAmB;AAAA,EACrE;AAEA,QAAM,aAAa;AAMnB,QAAM,cAAc,MAAM,WAAW,YAAY;AACjD,SAAO;AAAA,IACL,EAAE;AAAA,IACF;AAAA,IACA,WAAW;AAAA,IACX,WAAW,QAAQ;AAAA,IACnB;AAAA,EACF;AACF;AA1Be;AA4Bf,IAAM,cAAc,IAAII,MAA8C;AAEtE,IAAM,cAAc,KAAe;AAEnC,IAAM,YAAY,wBAACC,SAAgB,YAA8B;AAC/D,MAAIA,mBAAiB,UAAU;AAC7B,WAAOA;AAAA,EACT;AACA,QAAM,UAAUA,mBAAiB,QAAQA,QAAM,UAAU,GAAG,OAAO;AACnE,SAAO,IAAI,SAAS,SAAS,KAAK,uBAAuB;AAC3D,GANkB;AAQlB,eAAe,kBAAkBC,MAAU,QAAgB;AACzD,QAAM,CAACC,UAAS,SAAS,eAAe,IAAI,MAAM,QAAQ,IAAI;AAAA,IAC5D,eAAeD,MAAK,MAAM;AAAA,IAC1B,sBAAsBA,MAAK,MAAM;AAAA,IACjC,oBAAoBA,IAAG;AAAA,EACzB,CAAC;AAED,QAAM,cAAc,IAAI;AAAA,IACtB,gBAAgB,IAAI,CAAC,SAAS,CAAC,KAAK,aAAa,IAAI,CAAC;AAAA,EACxD;AAEA,QAAM,mBAAmBC,UAAS,gBAAgB,OAC5C,QAAQ,UAAU,SAAS,IAAI,QAAQ,UAAU,CAAC,EAAE,aAAa;AAEvE,QAAM,iBAAiB,mBACnB;AAAA,IACE,YAAY;AAAA,IACZ,cAAc,YAAY,IAAI,gBAAgB,GAAG,iBAAiB;AAAA,IAClE,cAAc,YAAY,IAAI,gBAAgB,GAAG,iBAAiB;AAAA,EACpE,IACA;AAEJ,QAAM,kBAAkB,QAAQ,UAC7B,OAAO,CAAC,SAAS,KAAK,eAAe,gBAAgB,EACrD,IAAI,CAAC,UAAU;AAAA,IACd,YAAY,KAAK;AAAA,IACjB,cAAc,YAAY,IAAI,KAAK,UAAU,GAAG,iBAAiB;AAAA,IACjE,gBAAgB,KAAK,kBAAkB;AAAA,IACvC,eAAe,KAAK,iBAAiB;AAAA,EACvC,EAAE;AAEJ,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAnCe;AAqCf,eAAe,oBAAoBD,MAAU,QAAgB;AAC3D,QAAM,CAAC,SAAS,mBAAmB,YAAY,IAAI,MAAM,QAAQ,IAAI;AAAA,IACnE,sBAAsBA,MAAK,MAAM;AAAA,IACjC,sBAAsBA,IAAG;AAAA,IACzB,iBAAiBA,IAAG;AAAA,EACtB,CAAC;AAED,QAAM,gBAAgB,IAAI,IAAI,kBAAkB,IAAI,CAAC,SAAS,CAAC,KAAK,eAAe,KAAK,eAAe,CAAC,CAAC;AACzG,QAAM,WAAW,IAAI,IAAI,aAAa,IAAI,CAAC,SAAS,CAAC,KAAK,UAAU,KAAK,UAAU,CAAC,CAAC;AAErF,SAAO;AAAA,IACL,aAAa,QAAQ,YAAY,IAAI,CAAC,UAAU;AAAA,MAC9C,cAAc,KAAK;AAAA,MACnB,UAAU,KAAK;AAAA,MACf,MAAM,cAAc,IAAI,KAAK,YAAY,KAAK;AAAA,IAChD,EAAE;AAAA,IACF,QAAQ,QAAQ,OAAO,IAAI,CAAC,QAAgB;AAAA,MAC1C,SAAS;AAAA,MACT,MAAM,SAAS,IAAI,EAAE,KAAK;AAAA,IAC5B,EAAE;AAAA,EACJ;AACF;AArBe;AAuBf,eAAe,iBAAiBA,MAAU,QAAgB;AACxD,QAAM,UAAU,MAAM,sBAAsBA,MAAK,MAAM;AACvD,SAAO;AAAA,IACL,UAAU,QAAQ;AAAA,IAClB,YAAY,QAAQ;AAAA,EACtB;AACF;AANe;AAQf,eAAe,kBAAkBA,MAAU,QAAgB;AACzD,QAAM,UAAU,MAAM,sBAAsBA,MAAK,MAAM;AACvD,SAAO;AAAA,IACL,WAAW,QAAQ;AAAA,EACrB;AACF;AALe;AAOf,YAAY,IAAI,KAAK,WAAW;AAEhC,YAAY,IAAI,eAAe,OAAO,MAAM;AAC1C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,MAAI;AACF,UAAMC,WAAU,MAAM,eAAe,EAAE,KAAK,MAAM;AAClD,QAAI,CAACA,UAAS;AACZ,YAAM,IAAI,SAAS,kBAAkB,KAAK,gBAAgB;AAAA,IAC5D;AACA,WAAO,gBAAgB,GAAGA,QAAO;AAAA,EACnC,SAASF,SAAO;AACd,UAAM,UAAUA,SAAO,8BAA8B;AAAA,EACvD;AACF,CAAC;AAED,YAAY,IAAI,YAAY,OAAO,MAAM;AACvC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,MAAI;AACF,UAAME,WAAU,MAAM,eAAe,EAAE,KAAK,MAAM;AAClD,QAAI,CAACA,UAAS;AACZ,YAAM,IAAI,SAAS,kBAAkB,KAAK,gBAAgB;AAAA,IAC5D;AACA,WAAO,gBAAgB,GAAGA,QAAO;AAAA,EACnC,SAASF,SAAO;AACd,UAAM,UAAUA,SAAO,0BAA0B;AAAA,EACnD;AACF,CAAC;AAED,YAAY,IAAI,eAAe,OAAO,MAAM;AAC1C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,UAAU,gBAAgB,IAAI;AAEpC,MAAI;AACF,UAAME,WAAU,MAAM,kBAAkB,EAAE,KAAK,QAAQ,OAAO;AAC9D,WAAO,gBAAgB,GAAGA,QAAO;AAAA,EACnC,SAASF,SAAO;AACd,UAAM,UAAUA,SAAO,8BAA8B;AAAA,EACvD;AACF,CAAC;AAED,YAAY,MAAM,YAAY,OAAO,MAAM;AACzC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,UAAU,gBAAgB,IAAI;AACpC,MAAI;AACF,UAAME,WAAU,MAAM,kBAAkB,EAAE,KAAK,QAAQ,OAAO;AAC9D,WAAO,gBAAgB,GAAGA,QAAO;AAAA,EACnC,SAASF,SAAO;AACd,UAAM,UAAUA,SAAO,4BAA4B;AAAA,EACrD;AACF,CAAC;AAED,YAAY,IAAI,qBAAqB,OAAO,MAAM;AAChD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,MAAI;AACF,UAAME,WAAU,MAAM,eAAe,EAAE,KAAK,MAAM;AAClD,WAAO,gBAAgB,GAAGA,QAAO;AAAA,EACnC,SAASF,SAAO;AACd,UAAM,UAAUA,SAAO,mCAAmC;AAAA,EAC5D;AACF,CAAC;AAED,YAAY,IAAI,qBAAqB,OAAO,MAAM;AAChD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,UAAU,gBAAgB,IAAI;AACpC,MAAI;AACF,UAAME,WAAU,MAAM,kBAAkB,EAAE,KAAK,QAAQ,OAAO;AAC9D,WAAO,gBAAgB,GAAGA,QAAO;AAAA,EACnC,SAASF,SAAO;AACd,UAAM,UAAUA,SAAO,mCAAmC;AAAA,EAC5D;AACF,CAAC;AAED,YAAY,IAAI,gBAAgB,OAAO,MAAM;AAC3C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,gBAAgB,EAAE,KAAK,MAAM;AACpD,WAAO,gBAAgB,GAAG,QAAQ;AAAA,EACpC,SAASA,SAAO;AACd,UAAM,UAAUA,SAAO,+BAA+B;AAAA,EACxD;AACF,CAAC;AAED,YAAY,IAAI,aAAa,OAAO,MAAM;AACxC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,gBAAgB,EAAE,KAAK,MAAM;AACpD,WAAO,gBAAgB,GAAG,QAAQ;AAAA,EACpC,SAASA,SAAO;AACd,UAAM,UAAUA,SAAO,2BAA2B;AAAA,EACpD;AACF,CAAC;AAED,YAAY,IAAI,gBAAgB,OAAO,MAAM;AAC3C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAE9B,MAAI;AACF,UAAM,WAAW,MAAM,mBAAmB,EAAE,KAAK,QAAQ,IAAI;AAC7D,WAAO,gBAAgB,GAAG,QAAQ;AAAA,EACpC,SAASA,SAAO;AACd,UAAM,UAAUA,SAAO,+BAA+B;AAAA,EACxD;AACF,CAAC;AAED,YAAY,IAAI,aAAa,OAAO,MAAM;AACxC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAE9B,MAAI;AACF,UAAM,WAAW,MAAM,mBAAmB,EAAE,KAAK,QAAQ,IAAI;AAC7D,WAAO,gBAAgB,GAAG,QAAQ;AAAA,EACpC,SAASA,SAAO;AACd,UAAM,UAAUA,SAAO,2BAA2B;AAAA,EACpD;AACF,CAAC;AAED,YAAY,KAAK,qBAAqB,OAAO,MAAM;AACjD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,MAAI;AACF,UAAM,WAAW,MAAM,0BAA0B,GAAG,MAAM;AAC1D,WAAO,gBAAgB,GAAG,EAAE,KAAK,SAAS,CAAC;AAAA,EAC7C,SAASA,SAAO;AACd,UAAM,UAAUA,SAAO,qCAAqC;AAAA,EAC9D;AACF,CAAC;AAED,YAAY,IAAI,kBAAkB,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,MAAI;AACF,UAAMG,QAAO,MAAM,kBAAkB,EAAE,KAAK,MAAM;AAClD,WAAO,gBAAgB,GAAGA,KAAI;AAAA,EAChC,SAASH,SAAO;AACd,UAAM,UAAUA,SAAO,gCAAgC;AAAA,EACzD;AACF,CAAC;AAED,YAAY,MAAM,kBAAkB,OAAO,MAAM;AAC/C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,YAAY,MAAM,QAAS,MAAc,SAAS,IAAK,KAAa,YAAY,CAAC;AACvF,QAAM,kBAAkG,CAAC;AACzG,aAAWI,QAAO,WAAoB;AACpC,UAAM,aAAa,OAAOA,KAAI,cAAcA,KAAI,WAAW;AAC3D,QAAI,CAAC,OAAO,SAAS,UAAU,GAAG;AAChC;AAAA,IACF;AACA,oBAAgB,KAAK;AAAA,MACnB;AAAA,MACA,gBAAgBA,KAAI,kBAAkBA,KAAI,oBAAoB;AAAA,MAC9D,eAAeA,KAAI,iBAAiBA,KAAI,mBAAmB;AAAA,IAC7D,CAAC;AAAA,EACH;AACA,QAAM,0BAA0B,EAAE,KAAK,QAAQ,eAAe;AAC9D,MAAI,OAAO,SAAS,MAAM,gBAAgB,GAAG;AAC3C,UAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,kBAAkB,OAAO,KAAK,gBAAgB,EAAE,CAAC;AAAA,EAC5F;AACA,QAAMD,QAAO,MAAM,kBAAkB,EAAE,KAAK,MAAM;AAClD,SAAO,gBAAgB,GAAGA,KAAI;AAChC,CAAC;AAED,YAAY,IAAI,oBAAoB,OAAO,MAAM;AAC/C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,MAAI;AACF,UAAMA,QAAO,MAAM,oBAAoB,EAAE,KAAK,MAAM;AACpD,WAAO,gBAAgB,GAAGA,KAAI;AAAA,EAChC,SAASH,SAAO;AACd,UAAM,UAAUA,SAAO,kCAAkC;AAAA,EAC3D;AACF,CAAC;AAED,YAAY,MAAM,oBAAoB,OAAO,MAAM;AACjD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,gBAAgB,MAAM,QAAS,MAAc,aAAa,IAC3D,KAAa,gBACd,CAAC;AACL,QAAM,oBAAwE,CAAC;AAC/E,EAAC,cAAwB,QAAQ,CAACI,MAAK,UAAU;AAC/C,UAAM,eAAe,OAAOA,IAAG;AAC/B,QAAI,CAAC,OAAO,SAAS,YAAY,GAAG;AAClC;AAAA,IACF;AACA,sBAAkB,KAAK;AAAA,MACrB;AAAA,MACA,UAAU,QAAQ;AAAA,IACpB,CAAC;AAAA,EACH,CAAC;AACD,QAAM,4BAA4B,EAAE,KAAK,QAAQ,iBAAiB;AAClE,QAAMD,QAAO,MAAM,oBAAoB,EAAE,KAAK,MAAM;AACpD,SAAO,gBAAgB,GAAGA,KAAI;AAChC,CAAC;AAED,YAAY,IAAI,iBAAiB,OAAO,MAAM;AAC5C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,MAAI;AACF,UAAMA,QAAO,MAAM,iBAAiB,EAAE,KAAK,MAAM;AACjD,WAAO,gBAAgB,GAAGA,KAAI;AAAA,EAChC,SAASH,SAAO;AACd,UAAM,UAAUA,SAAO,+BAA+B;AAAA,EACxD;AACF,CAAC;AAED,YAAY,MAAM,iBAAiB,OAAO,MAAM;AAC9C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,cAAc,MAAM,QAAS,MAAc,kBAAkB,IAC9D,KAAa,qBACd,CAAC;AACL,QAAM,iBAAkF,CAAC;AACzF,EAAC,YAAsB,QAAQ,CAACI,SAAQ;AACtC,UAAM,uBAAuB,OAAOA,KAAI,wBAAwBA,KAAI,0BAA0BA,IAAG;AACjG,QAAI,CAAC,OAAO,SAAS,oBAAoB,GAAG;AAC1C;AAAA,IACF;AACA,mBAAe,KAAK;AAAA,MAClB;AAAA,MACA,eAAeA,KAAI,iBAAiBA,KAAI,kBAAkB;AAAA,IAC5D,CAAC;AAAA,EACH,CAAC;AACD,QAAM,wBAAwB,EAAE,KAAK,QAAQ,cAAc;AAC3D,QAAMD,QAAO,MAAM,iBAAiB,EAAE,KAAK,MAAM;AACjD,SAAO,gBAAgB,GAAGA,KAAI;AAChC,CAAC;AAED,YAAY,IAAI,kBAAkB,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,MAAI;AACF,UAAMA,QAAO,MAAM,kBAAkB,EAAE,KAAK,MAAM;AAClD,WAAO,gBAAgB,GAAGA,KAAI;AAAA,EAChC,SAASH,SAAO;AACd,UAAM,UAAUA,SAAO,gCAAgC;AAAA,EACzD;AACF,CAAC;AAED,YAAY,MAAM,kBAAkB,OAAO,MAAM;AAC/C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,YAAY,MAAM,QAAS,MAAc,SAAS,IACnD,KAAa,YACd,CAAC;AACL,QAAM,aAAmF,CAAC;AAC1F,EAAC,UAAoB,QAAQ,CAACI,SAAQ;AACpC,UAAM,aAAa,OAAOA,KAAI,cAAcA,KAAI,WAAW;AAC3D,QAAI,CAAC,OAAO,SAAS,UAAU,GAAG;AAChC;AAAA,IACF;AACA,eAAW,KAAK;AAAA,MACd;AAAA,MACA,WAAWA,KAAI,aAAaA,KAAI,eAAe;AAAA,MAC/C,WAAWA,KAAI,aAAaA,KAAI,cAAc;AAAA,IAChD,CAAC;AAAA,EACH,CAAC;AACD,QAAM,0BAA0B,EAAE,KAAK,QAAQ,UAAU;AACzD,QAAMD,QAAO,MAAM,kBAAkB,EAAE,KAAK,MAAM;AAClD,SAAO,gBAAgB,GAAGA,KAAI;AAChC,CAAC;AAED,YAAY,IAAI,qBAAqB,OAAO,MAAM;AAChD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,MAAI;AACF,UAAMD,WAAU,MAAM,eAAe,EAAE,KAAK,MAAM;AAClD,QAAI,CAACA,UAAS;AACZ,YAAM,IAAI,SAAS,kBAAkB,KAAK,gBAAgB;AAAA,IAC5D;AACA,WAAO,gBAAgB,GAAG,EAAE,cAAcA,SAAQ,aAAa,CAAC;AAAA,EAClE,SAASF,SAAO;AACd,UAAM,UAAUA,SAAO,oCAAoC;AAAA,EAC7D;AACF,CAAC;AAED,YAAY,KAAK,kBAAkB,OAAO,MAAM;AAC9C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,MAAI;AACF,UAAM,WAAW,MAAM,0BAA0B,GAAG,MAAM;AAC1D,WAAO,gBAAgB,GAAG,EAAE,KAAK,SAAS,CAAC;AAAA,EAC7C,SAASA,SAAO;AACd,UAAM,UAAUA,SAAO,iCAAiC;AAAA,EAC1D;AACF,CAAC;AAED,YAAY,KAAK,kBAAkB,OAAO,MAAM;AAC9C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,MAAI;AACF,UAAM,WAAW,MAAM,0BAA0B,GAAG,MAAM;AAC1D,WAAO,gBAAgB,GAAG,EAAE,KAAK,SAAS,CAAC;AAAA,EAC7C,SAASA,SAAO;AACd,UAAM,UAAUA,SAAO,kCAAkC;AAAA,EAC3D;AACF,CAAC;AAED,YAAY,OAAO,kBAAkB,OAAO,MAAM;AAChD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,MAAI;AACF,UAAM,mBAAmB,EAAE,KAAK,MAAM;AACtC,WAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAAA,EAC7C,SAASA,SAAO;AACd,UAAM,UAAUA,SAAO,mCAAmC;AAAA,EAC5D;AACF,CAAC;AAED,YAAY,OAAO,kBAAkB,OAAO,MAAM;AAChD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,MAAI;AACF,UAAM,mBAAmB,EAAE,KAAK,MAAM;AACtC,WAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAAA,EAC7C,SAASA,SAAO;AACd,UAAM,UAAUA,SAAO,oCAAoC;AAAA,EAC7D;AACF,CAAC;AAED,YAAY,IAAI,kBAAkB,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,MAAI;AACF,UAAME,WAAU,MAAM,eAAe,EAAE,KAAK,MAAM;AAClD,QAAI,CAACA,UAAS;AACZ,YAAM,IAAI,SAAS,kBAAkB,KAAK,gBAAgB;AAAA,IAC5D;AACA,WAAO,gBAAgB,GAAG,EAAE,cAAcA,SAAQ,aAAa,CAAC;AAAA,EAClE,SAASF,SAAO;AACd,UAAM,UAAUA,SAAO,gCAAgC;AAAA,EACzD;AACF,CAAC;AAED,YAAY,IAAI,YAAY,OAAO,MAAM;AACvC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,MAAI;AACF,UAAME,WAAU,MAAM,eAAe,EAAE,KAAK,MAAM;AAClD,QAAI,CAACA,UAAS;AACZ,YAAM,IAAI,SAAS,kBAAkB,KAAK,gBAAgB;AAAA,IAC5D;AACA,WAAO,gBAAgB,GAAG,EAAE,MAAMA,SAAQ,KAAK,CAAC;AAAA,EAClD,SAASF,SAAO;AACd,UAAM,UAAUA,SAAO,2BAA2B;AAAA,EACpD;AACF,CAAC;AAED,YAAY,IAAI,SAAS,OAAO,MAAM;AACpC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,MAAI;AACF,UAAME,WAAU,MAAM,eAAe,EAAE,KAAK,MAAM;AAClD,QAAI,CAACA,UAAS;AACZ,YAAM,IAAI,SAAS,kBAAkB,KAAK,gBAAgB;AAAA,IAC5D;AACA,WAAO,gBAAgB,GAAG;AAAA,MACxB,IAAIA,SAAQ;AAAA,MACZ,OAAOA,SAAQ;AAAA,MACf,aAAaA,SAAQ;AAAA,MACrB,MAAMA,SAAQ;AAAA,MACd,qBAAqBA,SAAQ;AAAA,IAC/B,CAAC;AAAA,EACH,SAASF,SAAO;AACd,UAAM,UAAUA,SAAO,uBAAuB;AAAA,EAChD;AACF,CAAC;AAED,YAAY,IAAI,SAAS,OAAO,MAAM;AACpC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,MAAI;AACF,UAAME,WAAU,MAAM,eAAe,EAAE,KAAK,MAAM;AAClD,QAAI,CAACA,UAAS;AACZ,YAAM,IAAI,SAAS,kBAAkB,KAAK,gBAAgB;AAAA,IAC5D;AACA,WAAO,gBAAgB,GAAG,EAAE,MAAMA,SAAQ,QAAQA,SAAQ,YAAY,CAAC;AAAA,EACzE,SAASF,SAAO;AACd,UAAM,UAAUA,SAAO,uBAAuB;AAAA,EAChD;AACF,CAAC;AAED,YAAY,IAAI,yBAAyB,OAAO,MAAM;AACpD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,MAAI;AACF,UAAME,WAAU,MAAM,eAAe,EAAE,KAAK,MAAM;AAClD,QAAI,CAACA,UAAS;AACZ,YAAM,IAAI,SAAS,kBAAkB,KAAK,gBAAgB;AAAA,IAC5D;AACA,WAAO,gBAAgB,GAAG,EAAE,WAAWA,SAAQ,oBAAoB,CAAC;AAAA,EACtE,SAASF,SAAO;AACd,UAAM,UAAUA,SAAO,wCAAwC;AAAA,EACjE;AACF,CAAC;AAED,YAAY,IAAI,sBAAsB,OAAO,MAAM;AACjD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,QAAME,WAAU,MAAM,eAAe,EAAE,KAAK,MAAM;AAClD,MAAI,CAACA,UAAS;AACZ,UAAM,IAAI,SAAS,kBAAkB,KAAK,gBAAgB;AAAA,EAC5D;AACA,SAAO,gBAAgB,GAAG,EAAE,WAAWA,SAAQ,oBAAoB,CAAC;AACtE,CAAC;AAED,YAAY,KAAK,wBAAwB,OAAO,MAAM;AACpD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AACA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,mBAAmB,EAAE,KAAK,QAAQ,QAAQ,CAAC,CAAC;AAClD,SAAO,gBAAgB,GAAG,EAAE,WAAW,KAAK,CAAC;AAC/C,CAAC;AAED,YAAY,KAAK,oBAAoB,OAAO,MAAM;AAChD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,MAAI,OAAO,KAAK,gBAAgB,YAAY,CAAC,KAAK,YAAY,KAAK,GAAG;AACpE,UAAM,IAAI,SAAS,2BAA2B,KAAK,iBAAiB;AAAA,EACtE;AACA,QAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,aAAa,KAAK,YAAY,KAAK,EAAE,CAAC;AAC/E,SAAO,gBAAgB,GAAG,EAAE,aAAa,KAAK,YAAY,KAAK,EAAE,CAAC;AACpE,CAAC;AAED,YAAY,KAAK,iBAAiB,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,MAAI,OAAO,KAAK,gBAAgB,YAAY,CAAC,KAAK,YAAY,KAAK,GAAG;AACpE,UAAM,IAAI,SAAS,2BAA2B,KAAK,iBAAiB;AAAA,EACtE;AACA,QAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,aAAa,KAAK,YAAY,KAAK,EAAE,CAAC;AAC/E,SAAO,gBAAgB,GAAG,EAAE,aAAa,KAAK,YAAY,KAAK,EAAE,CAAC;AACpE,CAAC;AAED,YAAY,KAAK,iBAAiB,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,MAAI,OAAO,KAAK,cAAc,YAAY,CAAC,KAAK,UAAU,KAAK,GAAG;AAChE,UAAM,IAAI,SAAS,yBAAyB,KAAK,iBAAiB;AAAA,EACpE;AACA,QAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,WAAW,KAAK,UAAU,KAAK,EAAE,CAAC;AAC3E,SAAO,gBAAgB,GAAG,EAAE,WAAW,KAAK,UAAU,KAAK,EAAE,CAAC;AAChE,CAAC;AAED,YAAY,KAAK,cAAc,OAAO,MAAM;AAC1C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,MAAI,OAAO,KAAK,cAAc,YAAY,OAAO,KAAK,cAAc,UAAU;AAC5E,UAAM,IAAI,SAAS,yBAAyB,KAAK,iBAAiB;AAAA,EACpE;AACA,QAAM,SAAS,KAAK,aAAa,KAAK,WAAW,SAAS,EAAE,KAAK;AACjE,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,SAAS,yBAAyB,KAAK,iBAAiB;AAAA,EACpE;AACA,QAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,WAAW,MAAM,CAAC;AAC3D,SAAO,gBAAgB,GAAG,EAAE,WAAW,MAAM,CAAC;AAChD,CAAC;AAED,YAAY,KAAK,gBAAgB,OAAO,MAAM;AAC5C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,MAAI,OAAO,KAAK,aAAa,YAAY,CAAC,KAAK,SAAS,KAAK,GAAG;AAC9D,UAAM,IAAI,SAAS,wBAAwB,KAAK,iBAAiB;AAAA,EACnE;AACA,QAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,UAAU,KAAK,SAAS,KAAK,EAAE,CAAC;AACzE,SAAO,gBAAgB,GAAG,EAAE,UAAU,KAAK,SAAS,KAAK,EAAE,CAAC;AAC9D,CAAC;AAED,YAAY,KAAK,aAAa,OAAO,MAAM;AACzC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,QAAQ,OAAO,KAAK,aAAa,WAAW,KAAK,SAAS,KAAK,IAAI;AACzE,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,SAAS,wBAAwB,KAAK,iBAAiB;AAAA,EACnE;AACA,QAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,UAAU,MAAM,CAAC;AAC1D,SAAO,gBAAgB,GAAG,EAAE,UAAU,MAAM,CAAC;AAC/C,CAAC;AAED,YAAY,KAAK,cAAc,OAAO,MAAM;AAC1C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,MAAI,OAAO,KAAK,WAAW,YAAY,CAAC,KAAK,OAAO,KAAK,GAAG;AAC1D,UAAM,IAAI,SAAS,sBAAsB,KAAK,iBAAiB;AAAA,EACjE;AACA,QAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,QAAQ,KAAK,OAAO,KAAK,EAAE,CAAC;AACrE,SAAO,gBAAgB,GAAG,EAAE,QAAQ,KAAK,OAAO,KAAK,EAAE,CAAC;AAC1D,CAAC;AAED,YAAY,KAAK,WAAW,OAAO,MAAM;AACvC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,UAAU,KAAK,UAAU,KAAK,aAAa,SAAS,EAAE,KAAK;AACjE,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,sBAAsB,KAAK,iBAAiB;AAAA,EACjE;AACA,QAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,OAAO,CAAC;AACjD,SAAO,gBAAgB,GAAG,EAAE,OAAO,CAAC;AACtC,CAAC;AAED,YAAY,KAAK,gBAAgB,OAAO,MAAM;AAC5C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,MAAI,OAAO,KAAK,YAAY,UAAU;AACpC,UAAM,IAAI,SAAS,uBAAuB,KAAK,iBAAiB;AAAA,EAClE;AACA,QAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,SAAS,KAAK,QAAQ,CAAC;AAChE,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,QAAQ,CAAC;AACrD,CAAC;AAED,YAAY,KAAK,aAAa,OAAO,MAAM;AACzC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,UAAU,OAAO,KAAK,YAAY,WAAW,KAAK,UAAU;AAClE,QAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,QAAQ,CAAC;AAClD,SAAO,gBAAgB,GAAG,EAAE,QAAQ,CAAC;AACvC,CAAC;AAED,YAAY,KAAK,gBAAgB,OAAO,MAAM;AAC5C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,aAAa,OAAO,KAAK,eAAe,WAAW,KAAK,aAAa;AAC3E,MAAI,eAAe,QAAW;AAC5B,UAAM,IAAI,SAAS,0BAA0B,KAAK,iBAAiB;AAAA,EACrE;AACA,QAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,WAAW,CAAC;AACrD,SAAO,gBAAgB,GAAG,EAAE,WAAW,CAAC;AAC1C,CAAC;AAED,YAAY,KAAK,aAAa,OAAO,MAAM;AACzC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,aAAa,OAAO,KAAK,cAAc,KAAK,WAAW;AAC7D,MAAI,CAAC,OAAO,SAAS,UAAU,GAAG;AAChC,UAAM,IAAI,SAAS,0BAA0B,KAAK,iBAAiB;AAAA,EACrE;AACA,QAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,WAAW,CAAC;AACrD,SAAO,gBAAgB,GAAG,EAAE,WAAW,CAAC;AAC1C,CAAC;AAED,YAAY,IAAI,UAAU,OAAO,MAAM;AACrC,SAAO,gBAAgB,GAAG;AAAA,IACxB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,cAAc;AAAA,EAChB,CAAC;AACH,CAAC;AAED,YAAY,OAAO,YAAY,OAAO,MAAM;AAC1C,SAAO,gBAAgB,GAAG;AAAA,IACxB,SAAS;AAAA,IACT,SAAS;AAAA,EACX,CAAC;AACH,CAAC;AAED,YAAY,IAAI,gBAAgB,OAAO,MAAM;AAC3C,SAAO,gBAAgB,GAAG;AAAA,IACxB,EAAE,IAAI,QAAQ,MAAM,eAAK;AAAA,IACzB,EAAE,IAAI,UAAU,MAAM,eAAK;AAAA,IAC3B,EAAE,IAAI,SAAS,MAAM,eAAK;AAAA,EAC5B,CAAC;AACH,CAAC;AAED,YAAY,IAAI,cAAc,OAAO,MAAM;AACzC,MAAI;AACF,UAAM,YAAY,MAAM,cAAc,EAAE,GAAG;AAC3C,WAAO,gBAAgB,GAAG,SAAS;AAAA,EACrC,SAASF,SAAO;AACd,UAAM,UAAUA,SAAO,6BAA6B;AAAA,EACtD;AACF,CAAC;AAED,IAAO,gBAAQ;;;AEl1Bf;AAAA;AAAA;AAAAK;AAIA;;;ACJA;AAAA;AAAA;AAAAC;AAEA,IAAM,SAAS;AACf,IAAM,cAAc,GAAG,MAAM;AAC7B,IAAM,kBAAkB,GAAG,MAAM;AACjC,IAAM,iBAAiB,GAAG,MAAM;AAChC,IAAM,mBAAmB,KAAK,KAAK,KAAK;AACxC,IAAM,cAAc,KAAK,KAAK;AAwB9B,SAAS,aAAa,QAAgB,YAA4B;AAChE,SAAO,GAAG,WAAW,IAAI,MAAM,IAAI,UAAU;AAC/C;AAFS;AAIT,SAAS,iBAAiB,QAAwB;AAChD,SAAO,GAAG,eAAe,IAAI,MAAM;AACrC;AAFS;AAIT,SAAS,gBAAgB,QAAwB;AAC/C,SAAO,GAAG,cAAc,IAAI,MAAM;AACpC;AAFS;AAIT,eAAsB,mBACpBC,MACA,QACA,YACA,SACA,YACA,2BACe;AACf,QAAM,UAAU,aAAa,QAAQ,UAAU;AAC/C,QAAMC,WAAS,oBAAI,KAAK,GAAE,YAAY;AAEtC,QAAM,WAAqB;AAAA,IACzB;AAAA,IACA,SAASA;AAAA,IACT,aAAa;AAAA,IACb;AAAA,EACF;AAEA,QAAMD,KAAI,MAAM,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG,EAAE,eAAe,iBAAiB,CAAC;AAE1F,QAAM,yBAAyBA,MAAK,QAAQ,YAAY,YAAY,yBAAyB;AAC/F;AArBsB;AAuBtB,eAAsB,kBACpBA,MACA,QACA,YAC0B;AAC1B,QAAME,OAAM,MAAMF,KAAI,MAAM,IAAI,aAAa,QAAQ,UAAU,GAAG,EAAE,MAAM,OAAO,CAAC;AAClF,SAAOE,QAAO;AAChB;AAPsB;AAStB,eAAsB,2BACpBF,MACA,QACA,SACe;AACf,QAAM,QAAsB;AAAA,IAC1B,kBAAiB,oBAAI,KAAK,GAAE,YAAY;AAAA,IACxC;AAAA,EACF;AAEA,QAAMA,KAAI,MAAM,IAAI,gBAAgB,MAAM,GAAG,KAAK,UAAU,KAAK,GAAG,EAAE,eAAe,YAAY,CAAC;AACpG;AAXsB;AAatB,eAAsB,0BACpBA,MACA,QAC8B;AAC9B,QAAME,OAAM,MAAMF,KAAI,MAAM,IAAI,gBAAgB,MAAM,GAAG,EAAE,MAAM,OAAO,CAAC;AACzE,SAAOE,QAAO;AAChB;AANsB;AAQtB,eAAsB,qBAAqBF,MAAU,QAA+B;AAClF,QAAMG,eAAc,iBAAiB,MAAM;AAC3C,QAAM,OAAO,MAAMH,KAAI,MAAM,KAAK,EAAE,QAAQ,GAAG,WAAW,IAAI,MAAM,GAAG,CAAC;AAExE,QAAM,QAAQ,IAAI;AAAA,IAChBA,KAAI,MAAM,OAAOG,YAAW;AAAA,IAC5BH,KAAI,MAAM,OAAO,gBAAgB,MAAM,CAAC;AAAA,IACxC,GAAG,KAAK,KAAK,IAAI,CAAC,QAAQA,KAAI,MAAM,OAAO,IAAI,IAAI,CAAC;AAAA,EACtD,CAAC;AACH;AATsB;AAWtB,eAAsB,sBACpBA,MACA,QACA,YACuB;AACvB,QAAMG,eAAc,iBAAiB,MAAM;AAC3C,QAAMD,OAAM,MAAMF,KAAI,MAAM,IAAIG,cAAa,EAAE,MAAM,OAAO,CAAC;AAE7D,MAAID,MAAK;AACP,WAAOA;AAAA,EACT;AAEA,SAAO;AAAA,IACL,gBAAgB,CAAC;AAAA,IACjB,aAAa;AAAA,IACb,oBAAoB;AAAA,IACpB;AAAA,IACA,gBAAe,oBAAI,KAAK,GAAE,YAAY;AAAA,IACtC,WAAW;AAAA,EACb;AACF;AApBsB;AAsBtB,eAAe,yBACbF,MACA,QACA,eACA,YACA,2BACe;AACf,QAAMG,eAAc,iBAAiB,MAAM;AAC3C,QAAM,UAAU,MAAM,sBAAsBH,MAAK,QAAQ,UAAU;AAEnE,QAAM,iBAAiB,EAAE,GAAG,QAAQ,gBAAgB,CAAC,OAAO,aAAa,EAAE,GAAG,KAAK;AACnF,QAAM,iBAAiB,OAAO,OAAO,cAAc,EAAE,OAAO,OAAO,EAAE;AACrE,QAAM,qBAAqB,KAAK,IAAK,iBAAiB,aAAc,KAAK,GAAG;AAE5E,QAAM,WAAyB;AAAA,IAC7B;AAAA,IACA,aAAa,KAAK,IAAI,gBAAgB,GAAG,UAAU;AAAA,IACnD;AAAA,IACA;AAAA,IACA,gBAAe,oBAAI,KAAK,GAAE,YAAY;AAAA,IACtC,WAAW,kBAAkB;AAAA,IAC7B;AAAA,EACF;AAEA,QAAMA,KAAI,MAAM,IAAIG,cAAa,KAAK,UAAU,QAAQ,GAAG;AAAA,IACzD,eAAe;AAAA,EACjB,CAAC;AACH;AA3Be;AA4Bf,eAAsB,wBAAwBH,MAAU,QAAgB,YAAmC;AACzG,QAAM,WAAyB;AAAA,IAC7B,gBAAgB,CAAC;AAAA,IACjB,aAAa;AAAA,IACb,oBAAoB;AAAA,IACpB;AAAA,IACA,gBAAe,oBAAI,KAAK,GAAE,YAAY;AAAA,IACtC,WAAW;AAAA,EACb;AACA,QAAMA,KAAI,MAAM,IAAI,iBAAiB,MAAM,GAAG,KAAK,UAAU,QAAQ,GAAG;AAAA,IACtE,eAAe;AAAA,EACjB,CAAC;AACH;AAZsB;;;ADrHtB,IAAM,mBAAmB,IAAII,MAA8C;AAE3E,IAAMC,eAAc,KAAe;AACnC,IAAM,yBAAyB;AAE/B,IAAMC,aAAY,wBAACC,SAAgB,aAA+B;AAChE,MAAIA,mBAAiB,UAAU;AAC7B,WAAOA;AAAA,EACT;AACA,QAAM,UAAUA,mBAAiB,QAAQA,QAAM,UAAU;AACzD,SAAO,IAAI,SAAS,SAAS,KAAK,kBAAkB;AACtD,GANkB;AAQlB,SAAS,qBAAqBC,MAAuD;AACnF,MAAIA,QAAO,OAAQA,KAAY,aAAa,YAAaA,KAAY,aAAa,MAAM;AACtF,WAAQA,KAAY;AAAA,EACtB;AACA,SAAOA;AACT;AALS;AAOT,eAAe,eAAeC,MAAU,QAAgB,MAAc;AACpE,QAAMC,UAAS,MAAM,kBAAkBD,MAAK,QAAQ,IAAI;AACxD,SAAOC,SAAQ,WAAW;AAC5B;AAHe;AAKf,eAAe,oBAAoBD,MAAU,QAAgB;AAC3D,QAAM;AAAA,IACJE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,MAAM,QAAQ,IAAI;AAAA,IACpB,eAAeF,MAAK,MAAM;AAAA,IAC1B,eAAeA,MAAK,QAAQ,CAAC;AAAA,IAC7B,eAAeA,MAAK,QAAQ,CAAC;AAAA,IAC7B,eAAeA,MAAK,QAAQ,CAAC;AAAA,IAC7B,eAAeA,MAAK,QAAQ,CAAC;AAAA,IAC7B,sBAAsBA,MAAK,QAAQ,sBAAsB;AAAA,IACzD,oBAAoBA,IAAG;AAAA,IACvB,sBAAsBA,IAAG;AAAA,IACzB,iBAAiBA,IAAG;AAAA,IACpB,yBAAyBA,IAAG;AAAA,IAC5B,+BAA+BA,IAAG;AAAA,EACpC,CAAC;AAED,QAAM,eAAgB,SAAqC,CAAC;AAC5D,QAAM,eAAgB,SAAqC,CAAC;AAC5D,QAAM,eAAgB,SAAqC,CAAC;AAC5D,QAAM,eAAgB,SAAqC,CAAC;AAE5D,QAAM,qBAA8C;AAAA,IAClD,aAAc,cAAc,eAAsCE,UAAS,eAAeA,UAAS;AAAA,IACnG,iBAAkB,cAAc,gBAAuCA,UAAS;AAAA,IAChF,WAAW,cAAc,aAAaA,UAAS,UAAU,WAAW;AAAA,IACpE,OAAO,cAAc,SAASA,UAAS,WAAW;AAAA,IAClD,kBACG,cAAc,oBACd,cAAc,cACfA,UAAS,gBAAgB,MAAM;AAAA,IACjC,iBAAiB,cAAc,mBAAmB,CAAC;AAAA,IACnD,eAAe,cAAc,iBAAiB,cAAc,eAAe,CAAC;AAAA,IAC5E,UAAU,cAAc,YAAY,cAAc,YAAY,CAAC;AAAA,IAC/D,kBAAkB,cAAc,oBAAoB,CAAC;AAAA,IACrD,wBAAwB,cAAc,0BAA0B,CAAC;AAAA,IACjE,WAAW,SAAS;AAAA,EACtB;AAEA,SAAO;AAAA,IACL;AAAA,IACA,kBAAkB;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA,gBAAgB,eAAe,IAAI,CAAC,UAAU;AAAA,QAC5C,IAAI,KAAK;AAAA,QACT,MAAM,KAAK;AAAA,QACX,aAAa,KAAK,eAAe;AAAA,MACnC,EAAE;AAAA,MACF,sBAAsB,qBAAqB,IAAI,CAAC,UAAU;AAAA,QACxD,IAAI,KAAK;AAAA,QACT,MAAM,KAAK;AAAA,QACX,aAAa,KAAK,eAAe;AAAA,MACnC,EAAE;AAAA,IACJ;AAAA,EACF;AACF;AAnEe;AAqEf,iBAAiB,IAAI,cAAc,OAAO,MAAM;AAC9C,MAAI;AACF,UAAM,OAAO,MAAM,oBAAoB,EAAE,GAAG;AAC5C,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASJ,SAAO;AACd,UAAMD,WAAUC,SAAO,iCAAiC;AAAA,EAC1D;AACF,CAAC;AAED,iBAAiB,IAAI,uBAAuB,OAAO,MAAM;AACvD,MAAI;AACF,UAAM,OAAO,MAAM,oBAAoB,EAAE,GAAG;AAC5C,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,iCAAiC;AAAA,EAC1D;AACF,CAAC;AAED,iBAAiB,IAAI,kCAAkC,OAAO,MAAM;AAClE,MAAI;AACF,UAAM,OAAO,MAAM,uBAAuB,EAAE,KAAK,UAAU;AAC3D,UAAM,OAAO,KAAK,IAAI,CAAC,SAAS;AAAA,MAC9B,IAAI,IAAI;AAAA,MACR,MAAM,IAAI;AAAA,MACV,aAAa,IAAI,eAAe;AAAA,MAChC,UAAU,IAAI,YAAY;AAAA,MAC1B,OAAO,IAAI,eAAe;AAAA,IAC5B,EAAE;AACF,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,qCAAqC;AAAA,EAC9D;AACF,CAAC;AAED,iBAAiB,IAAI,iCAAiC,OAAO,MAAM;AACjE,MAAI;AACF,UAAM,OAAO,MAAM,uBAAuB,EAAE,KAAK,SAAS;AAC1D,UAAM,OAAO,KAAK,IAAI,CAAC,SAAS;AAAA,MAC9B,IAAI,IAAI;AAAA,MACR,MAAM,IAAI;AAAA,MACV,aAAa,IAAI,eAAe;AAAA,MAChC,UAAU,IAAI,YAAY;AAAA,MAC1B,OAAO,IAAI,eAAe;AAAA,IAC5B,EAAE;AACF,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,oCAAoC;AAAA,EAC7D;AACF,CAAC;AAED,iBAAiB,IAAI,cAAc,OAAO,MAAM;AAC9C,MAAI;AACF,UAAM,OAAO,MAAM,iBAAiB,EAAE,GAAG;AACzC,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,0BAA0B;AAAA,EACnD;AACF,CAAC;AAED,iBAAiB,IAAI,yBAAyB,OAAO,MAAM;AACzD,MAAI;AACF,UAAM,OAAO,MAAM,sBAAsB,EAAE,GAAG;AAC9C,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,mCAAmC;AAAA,EAC5D;AACF,CAAC;AAED,iBAAiB,IAAI,oBAAoB,OAAO,MAAM;AACpD,MAAI;AACF,UAAM,OAAO,MAAM,iBAAiB,EAAE,GAAG;AACzC,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,0BAA0B;AAAA,EACnD;AACF,CAAC;AAED,iBAAiB,IAAI,6BAA6B,OAAO,MAAM;AAC7D,MAAI;AACF,UAAM,OAAO,MAAM,yBAAyB,EAAE,GAAG;AACjD,UAAM,OAAO,KAAK,IAAI,CAAC,UAAU;AAAA,MAC/B,iBAAiB,KAAK;AAAA,MACtB,mBAAmB,KAAK;AAAA,MACxB,aAAa,KAAK,eAAe;AAAA,IACnC,EAAE;AACF,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,uCAAuC;AAAA,EAChE;AACF,CAAC;AAED,iBAAiB,IAAI,mCAAmC,OAAO,MAAM;AACnE,MAAI;AACF,UAAM,OAAO,MAAM,+BAA+B,EAAE,GAAG;AACvD,UAAM,OAAO,KAAK,IAAI,CAAC,UAAU;AAAA,MAC/B,uBAAuB,KAAK;AAAA,MAC5B,yBAAyB,KAAK;AAAA,MAC9B,aAAa,KAAK,eAAe;AAAA,IACnC,EAAE;AACF,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,6CAA6C;AAAA,EACtE;AACF,CAAC;AAED,iBAAiB,IAAI,wBAAwB,OAAO,MAAM;AACxD,MAAI;AACF,UAAM,OAAO,MAAM,mBAAmB,EAAE,GAAG;AAC3C,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,oCAAoC;AAAA,EAC7D;AACF,CAAC;AAED,iBAAiB,IAAI,0BAA0B,OAAO,MAAM;AAC1D,MAAI;AACF,UAAM,OAAO,MAAM,mBAAmB,EAAE,GAAG;AAC3C,UAAM,OAAO,KAAK,IAAI,CAAC,UAAU;AAAA,MAC/B,sBAAsB,KAAK;AAAA,MAC3B,oBAAoB,KAAK;AAAA,MACzB,aAAa,KAAK,eAAe;AAAA,MACjC,IAAI,KAAK;AAAA,MACT,MAAM,KAAK;AAAA,IACb,EAAE;AACF,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,sCAAsC;AAAA,EAC/D;AACF,CAAC;AAED,iBAAiB,IAAI,wBAAwB,OAAO,MAAM;AAExD,QAAM,cAAc;AAAA,IAClB,EAAE,MAAM,QAAQ,aAAa,eAAK;AAAA,IAClC,EAAE,MAAM,UAAU,aAAa,eAAK;AAAA,IACpC,EAAE,MAAM,OAAO,aAAa,2BAAO;AAAA,EACrC;AAEA,SAAO,gBAAgB,GAAG,WAAW;AACvC,CAAC;AAED,iBAAiB,IAAI,mCAAmC,OAAO,MAAM;AACnE,MAAI;AACF,UAAM,UAAU,MAAM,+BAA+B,EAAE,GAAG;AAC1D,UAAM,OAAO,QAAQ,IAAI,CAAC,UAAU;AAAA,MAClC,uBAAuB,KAAK;AAAA,MAC5B,MAAM,KAAK;AAAA,MACX,MAAM,KAAK;AAAA,MACX,OAAO,KAAK;AAAA,MACZ,aAAa,KAAK;AAAA,MAClB,aAAa,KAAK,eAAe;AAAA,MACjC,WAAW,KAAK;AAAA,IAClB,EAAE;AACF,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,sCAAsC;AAAA,EAC/D;AACF,CAAC;AAED,iBAAiB,IAAI,2BAA2B,OAAO,MAAM;AAC3D,MAAI;AACF,UAAM,UAAU,MAAM,uBAAuB,EAAE,GAAG;AAClD,UAAM,OAAO,QAAQ,IAAI,CAAC,MAAM,WAAW;AAAA,MACzC,IAAI,QAAQ;AAAA,MACZ,MAAM,KAAK;AAAA,MACX,MAAM,KAAK;AAAA,MACX,SAAS,KAAK;AAAA,MACd,OAAO,KAAK;AAAA,MACZ,aAAa,KAAK;AAAA,MAClB,aAAa,KAAK,eAAe,KAAK;AAAA,MACtC,WAAW,KAAK;AAAA,IAClB,EAAE;AACF,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,qCAAqC;AAAA,EAC9D;AACF,CAAC;AAED,iBAAiB,IAAI,qBAAqB,OAAO,MAAM;AACrD,MAAI;AACF,UAAM,OAAO,MAAM,oBAAoB,EAAE,GAAG;AAC5C,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,iCAAiC;AAAA,EAC1D;AACF,CAAC;AAED,iBAAiB,IAAI,uBAAuB,OAAO,MAAM;AACvD,MAAI;AACF,UAAM,OAAO,MAAM,sBAAsB,EAAE,GAAG;AAC9C,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,mCAAmC;AAAA,EAC5D;AACF,CAAC;AAED,iBAAiB,IAAI,MAAMF,YAAW;AACtC,iBAAiB,IAAI,YAAYA,YAAW;AAC5C,iBAAiB,IAAI,UAAUA,YAAW;AAE1C,iBAAiB,IAAI,yBAAyB,OAAO,MAAM;AACzD,MAAI;AACF,UAAM,OAAO,MAAM,qBAAqB,EAAE,GAAG;AAC7C,UAAM,OAAO,KAAK,IAAI,CAAC,UAAU;AAAA,MAC/B,aAAa,KAAK;AAAA,MAClB,WAAW,KAAK;AAAA,MAChB,IAAI,KAAK;AAAA,MACT,MAAM,KAAK;AAAA,MACX,OAAO,KAAK;AAAA,IACd,EAAE;AACF,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASE,SAAO;AACd,UAAMD,WAAUC,SAAO,mCAAmC;AAAA,EAC5D;AACF,CAAC;AAED,iBAAiB,KAAK,mBAAmB,OAAO,MAAM;AACpD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAMC,OACJ,OAAO,KAAK,sBAAsB,WAC9B,KAAK,oBACL,OAAO,KAAK,kBAAkB,WAC5B,KAAK,gBACL,OAAO,KAAK,eAAe,WACzB,KAAK,aACL;AAEV,MAAI,CAACA,MAAK;AACR,UAAM,IAAI,SAAS,8BAA8B,KAAK,iBAAiB;AAAA,EACzE;AAEA,QAAM,aAAa,OAAOA,IAAG,EAAE,KAAK,EAAE,YAAY;AAClD,QAAM,UAAU,oBAAI,IAAI,CAAC,QAAQ,UAAU,OAAO,OAAO,CAAC;AAC1D,MAAI,CAAC,QAAQ,IAAI,UAAU,GAAG;AAC5B,UAAM,IAAI,SAAS,+BAA+B,KAAK,iBAAiB;AAAA,EAC1E;AAEA,MAAI;AACF,UAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,eAAe,WAAW,CAAC;AACpE,UAAM,UAAU,MAAM,sBAAsB,EAAE,KAAK,MAAM;AACzD,WAAO,gBAAgB,GAAG;AAAA,MACxB,eAAe;AAAA,MACf,oBAAoB,QAAQ;AAAA,IAC9B,CAAC;AAAA,EACH,SAASD,SAAO;AACd,UAAMD,WAAUC,SAAO,+BAA+B;AAAA,EACxD;AACF,CAAC;AAED,iBAAiB,KAAK,kCAAkC,OAAO,MAAM;AACnE,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAMC,OACJ,OAAQ,KAAa,4BAA4B,WAC5C,KAAa,0BACd,OAAQ,KAAa,wBAAwB,WAC1C,KAAa,sBACd,OAAQ,KAAa,eAAe,WACjC,KAAa,aACd,OAAQ,KAAa,SAAS,WAC3B,KAAa,OACd,OAAQ,KAAa,UAAU,WAC5B,KAAa,QACd,MAAM,QAAQ,IAAI,KAAK,KAAK,SAAS,KAAK,OAAO,KAAK,CAAC,MAAM,WAC3D,KAAK,CAAC,IACN;AAEhB,MAAI,CAACA,MAAK;AACR,UAAM,IAAI,SAAS,oCAAoC,KAAK,iBAAiB;AAAA,EAC/E;AAEA,QAAM,aAAa,OAAOA,IAAG,EAAE,KAAK,EAAE,YAAY;AAClD,MAAI,CAAC,YAAY;AACf,UAAM,IAAI,SAAS,oCAAoC,KAAK,iBAAiB;AAAA,EAC/E;AAEA,QAAM,UAAU,MAAM,+BAA+B,EAAE,GAAG;AAC1D,QAAM,WAAW,QAAQ,KAAK,CAAC,SAAS,KAAK,KAAK,YAAY,MAAM,UAAU;AAC9E,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,SAAS,gCAAgC,KAAK,8BAA8B;AAAA,EACxF;AAEA,MAAI;AACF,UAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,qBAAqB,WAAW,CAAC;AAC1E,UAAM,mBAAmB,EAAE,KAAK,QAAQ,GAAG,EAAE,qBAAqB,WAAW,GAAG,sBAAsB;AACtG,UAAM,WAAW,MAAM,sBAAsB,EAAE,KAAK,QAAQ,sBAAsB;AAClF,WAAO,gBAAgB,GAAG;AAAA,MACxB,qBAAqB;AAAA,MACrB,OAAO,SAAS;AAAA,MAChB;AAAA,IACF,CAAC;AAAA,EACH,SAASD,SAAO;AACd,UAAMD,WAAUC,SAAO,qCAAqC;AAAA,EAC9D;AACF,CAAC;AAED,iBAAiB,KAAK,0BAA0B,OAAO,MAAM;AAC3D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,QAAM,UAAW,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAEpD,QAAM,aAAwB,CAAC;AAC/B,QAAM,gBAAgB,wBAAC,UAAmB;AACxC,QAAI,UAAU,UAAa,UAAU,MAAM;AACzC;AAAA,IACF;AACA,QAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,YAAM,QAAQ,CAAC,WAAW,cAAc,MAAM,CAAC;AAC/C;AAAA,IACF;AACA,eAAW,KAAK,KAAK;AAAA,EACvB,GATsB;AAWtB,QAAM,aAAa;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,aAAW,OAAO,YAAY;AAC5B,kBAAc,UAAU,GAAG,CAAC;AAAA,EAC9B;AAGA,gBAAc,OAAO;AAErB,QAAM,kBAAkB,WAAW;AAAA,IACjC,CAAC,SAAyB,OAAO,SAAS,YAAY,KAAK,KAAK,EAAE,SAAS;AAAA,EAC7E;AAEA,QAAM,mBAAmB,WAAW,KAAK,CAAC,SAAyB,OAAO,SAAS,YAAY,OAAO,SAAS,IAAI,CAAC,MAC9G,MAAM;AACR,QAAI,CAAC,iBAAiB;AACpB,aAAO;AAAA,IACT;AACA,UAAM,cAAc,OAAO,gBAAgB,KAAK,CAAC;AACjD,WAAO,OAAO,SAAS,WAAW,IAAI,cAAc;AAAA,EACtD,GAAG;AAEL,MAAI,CAAC,mBAAmB,qBAAqB,QAAW;AACtD,UAAM,IAAI,SAAS,sCAAsC,KAAK,iBAAiB;AAAA,EACjF;AAEA,QAAM,UAAU,MAAM,uBAAuB,EAAE,GAAG;AAElD,MAAI,iBAAiB;AACrB,MAAI,iBAAiB;AACnB,UAAMK,kBAAiB,gBAAgB,KAAK,EAAE,YAAY;AAC1D,qBAAiB,QAAQ,KAAK,CAAC,SAAS,KAAK,KAAK,YAAY,MAAMA,eAAc;AAAA,EACpF;AAEA,MAAI,CAAC,kBAAkB,qBAAqB,QAAW;AACrD,UAAM,oBAAoB,KAAK,MAAM,gBAAgB;AACrD,qBAAiB,QAAQ,KAAK,CAAC,SAAS,KAAK,YAAY,iBAAiB;AAAA,EAC5E;AAEA,MAAI,CAAC,gBAAgB;AACnB,UAAM,IAAI,SAAS,+BAA+B,KAAK,6BAA6B;AAAA,EACtF;AAEA,QAAM,iBAAiB,eAAe,KAAK,YAAY;AAEvD,MAAI;AACF,UAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,aAAa,eAAe,CAAC;AACtE,UAAM,mBAAmB,EAAE,KAAK,QAAQ,GAAG,EAAE,aAAa,eAAe,GAAG,sBAAsB;AAClG,UAAM,WAAW,MAAM,sBAAsB,EAAE,KAAK,QAAQ,sBAAsB;AAElF,WAAO,gBAAgB,GAAG;AAAA,MACxB,aAAa;AAAA,MACb,SAAS,eAAe;AAAA,MACxB,OAAO,eAAe;AAAA,MACtB,aAAa,eAAe,eAAe;AAAA,MAC3C;AAAA,IACF,CAAC;AAAA,EACH,SAASL,SAAO;AACd,UAAMD,WAAUC,SAAO,wCAAwC;AAAA,EACjE;AACF,CAAC;AAED,iBAAiB,KAAK,wBAAwB,OAAO,MAAM;AACzD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAAA,EAChF;AAEA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,aAAa,MAAM,QAAQ,IAAI,IACjC,OACC,KAAa,gBAAiB,KAAa,kBAAmB,KAAa,OAAO,CAAC;AAExF,QAAM,aAAa,MAAM,KAAK,IAAI,KAAK,MAAM,QAAQ,UAAU,IAAI,aAAa,CAAC,GAAG,IAAI,CAAC,UAAU,OAAO,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,UAA2B,OAAO,SAAS,KAAK,CAAC;AAE7K,MAAI,CAAC,WAAW,QAAQ;AACtB,UAAM,IAAI,SAAS,+BAA+B,KAAK,iBAAiB;AAAA,EAC1E;AAEA,MAAI;AACF,UAAM,2BAA2B,EAAE,KAAK,QAAQ,UAAU;AAC1D,UAAM,mBAAmB,EAAE,KAAK,QAAQ,GAAG,EAAE,cAAc,WAAW,GAAG,sBAAsB;AAC/F,UAAM,WAAW,MAAM,sBAAsB,EAAE,KAAK,QAAQ,sBAAsB;AAClF,UAAM,UAAU,MAAM,sBAAsB,EAAE,KAAK,MAAM;AAEzD,WAAO,gBAAgB,GAAG;AAAA,MACxB,cAAc;AAAA,MACd,YAAY,QAAQ;AAAA,MACpB;AAAA,IACF,CAAC;AAAA,EACH,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,4BAA4B;AAAA,EACrD;AACF,CAAC;AAED,IAAM,sBAAsB,CAAC,GAAG,GAAG,GAAG,CAAC;AAEvC,WAAW,cAAc,qBAAqB;AAC5C,mBAAiB,KAAK,UAAU,UAAU,SAAS,OAAO,MAAM;AAC9D,UAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,QAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,UAAM,UAAU,qBAAqB,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE,CAA4B;AACpG,UAAM,mBAAmB,EAAE,KAAK,QAAQ,YAAY,SAAS,sBAAsB;AACnF,UAAM,WAAW,MAAM,sBAAsB,EAAE,KAAK,QAAQ,sBAAsB;AAClF,WAAO,gBAAgB,GAAG,EAAE,OAAO,MAAM,SAAS,CAAC;AAAA,EACrD,CAAC;AACH;AAEA,iBAAiB,KAAK,qBAAqB,OAAO,MAAM;AACtD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,OAAO,EAAE,IAAI,MAAM,MAAM,CAAC;AACvC,MAAI,CAAC,OAAO,UAAU,IAAI,KAAK,OAAO,KAAK,OAAO,wBAAwB;AACxE,UAAM,IAAI,SAAS,2BAA2B,KAAK,oBAAoB;AAAA,EACzE;AACA,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,UAAU,qBAAqB,IAAI;AACzC,QAAM,mBAAmB,EAAE,KAAK,QAAQ,MAAM,SAAS,sBAAsB;AAC7E,QAAM,WAAW,MAAM,sBAAsB,EAAE,KAAK,QAAQ,sBAAsB;AAClF,SAAO,gBAAgB,GAAG,EAAE,OAAO,MAAM,SAAS,CAAC;AACrD,CAAC;AAED,iBAAiB,KAAK,qBAAqB,OAAO,MAAM;AACtD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,OAAO,EAAE,IAAI,MAAM,MAAM,CAAC;AACvC,MAAI,CAAC,OAAO,UAAU,IAAI,KAAK,OAAO,KAAK,OAAO,wBAAwB;AACxE,UAAM,IAAI,SAAS,2BAA2B,KAAK,oBAAoB;AAAA,EACzE;AACA,QAAM,mBAAmB,EAAE,KAAK,QAAQ,MAAM,EAAE,SAAS,KAAK,GAAG,sBAAsB;AACvF,QAAM,WAAW,MAAM,sBAAsB,EAAE,KAAK,QAAQ,sBAAsB;AAClF,SAAO,gBAAgB,GAAG,EAAE,SAAS,MAAM,SAAS,CAAC;AACvD,CAAC;AAED,iBAAiB,KAAK,gBAAgB,OAAO,MAAM;AACjD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,OAAO,EAAE,IAAI,MAAM,MAAM,CAAC;AACvC,MAAI,CAAC,OAAO,UAAU,IAAI,KAAK,OAAO,KAAK,OAAO,wBAAwB;AACxE,UAAM,IAAI,SAAS,2BAA2B,KAAK,oBAAoB;AAAA,EACzE;AACA,QAAM,OAAQ,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACjD,MAAI;AACF,UAAM,mBAAmB,EAAE,KAAK,QAAQ,MAAM,MAAM,sBAAsB;AAC1E,UAAM,WAAW,MAAM,sBAAsB,EAAE,KAAK,QAAQ,sBAAsB;AAClF,WAAO,gBAAgB,GAAG,EAAE,OAAO,MAAM,SAAS,CAAC;AAAA,EACrD,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,gCAAgC;AAAA,EACzD;AACF,CAAC;AAED,iBAAiB,IAAI,gBAAgB,OAAO,MAAM;AAChD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,OAAO,EAAE,IAAI,MAAM,MAAM,CAAC;AACvC,MAAI,CAAC,OAAO,UAAU,IAAI,KAAK,OAAO,KAAK,OAAO,wBAAwB;AACxE,UAAM,IAAI,SAAS,2BAA2B,KAAK,oBAAoB;AAAA,EACzE;AACA,MAAI;AACF,UAAM,QAAQ,MAAM,kBAAkB,EAAE,KAAK,QAAQ,IAAI;AACzD,WAAO,gBAAgB,GAAG,SAAS,CAAC,CAAC;AAAA,EACvC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,gCAAgC;AAAA,EACzD;AACF,CAAC;AAED,iBAAiB,IAAI,kBAAkB,OAAO,MAAM;AAClD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,WAAW,MAAM,sBAAsB,EAAE,KAAK,QAAQ,sBAAsB;AAClF,SAAO,gBAAgB,GAAG;AAAA,IACxB,aAAa,SAAS;AAAA,IACtB;AAAA,EACF,CAAC;AACH,CAAC;AAED,iBAAiB,IAAI,aAAa,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,WAAW,MAAM,sBAAsB,EAAE,KAAK,QAAQ,sBAAsB;AAClF,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,iBAAiB,IAAI,SAAS,OAAO,MAAM;AACzC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,MAAI;AACF,UAAM,OAAO,MAAM,oBAAoB,EAAE,KAAK,MAAM;AACpD,WAAO,gBAAgB,GAAG,IAAI;AAAA,EAChC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,gCAAgC;AAAA,EACzD;AACF,CAAC;AAED,iBAAiB,IAAI,mBAAmB,OAAO,MAAM;AACnD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,MAAI;AACF,UAAM,WAAW,MAAM,sBAAsB,EAAE,KAAK,QAAQ,sBAAsB;AAClF,WAAO,gBAAgB,GAAG,QAAQ;AAAA,EACpC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,oCAAoC;AAAA,EAC7D;AACF,CAAC;AAED,iBAAiB,KAAK,kBAAkB,OAAO,MAAM;AACnD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAQ,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACjD,MAAI;AACF,UAAM,2BAA2B,EAAE,KAAK,QAAQ,IAAI;AACpD,WAAO,gBAAgB,GAAG,EAAE,OAAO,KAAK,CAAC;AAAA,EAC3C,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,mCAAmC;AAAA,EAC5D;AACF,CAAC;AAED,iBAAiB,IAAI,kBAAkB,OAAO,MAAM;AAClD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,MAAI;AACF,UAAM,QAAQ,MAAM,0BAA0B,EAAE,KAAK,MAAM;AAC3D,WAAO,gBAAgB,GAAG,SAAS,CAAC,CAAC;AAAA,EACvC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,mCAAmC;AAAA,EAC5D;AACF,CAAC;AAED,iBAAiB,KAAK,gBAAgB,OAAO,MAAM;AACjD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,MAAI;AACF,UAAM,qBAAqB,EAAE,KAAK,MAAM;AACxC,UAAM,wBAAwB,EAAE,KAAK,QAAQ,sBAAsB;AACnE,WAAO,gBAAgB,GAAG,EAAE,OAAO,KAAK,CAAC;AAAA,EAC3C,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,kCAAkC;AAAA,EAC3D;AACF,CAAC;AAED,iBAAiB,KAAK,cAAc,OAAO,MAAM;AAC/C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAE3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,MAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,UAAM,IAAI,SAAS,0BAA0B,KAAK,iBAAiB;AAAA,EACrE;AAEA,QAAM,UAAU,KACb,IAAI,CAAC,UAAU;AAAA,IACd,YAAY,OAAO,KAAK,cAAc,KAAK,WAAW;AAAA,IACtD,gBAAgB,KAAK,kBAAkB,KAAK,oBAAoB;AAAA,IAChE,eAAe,KAAK,iBAAiB,KAAK,mBAAmB;AAAA,EAC/D,EAAE,EACD,OAAO,CAAC,SAAS,OAAO,SAAS,KAAK,UAAU,CAAC;AAEpD,MAAI;AACF,UAAM,0BAA0B,EAAE,KAAK,QAAQ,OAAO;AACtD,WAAO,gBAAgB,GAAG,EAAE,OAAO,QAAQ,OAAO,CAAC;AAAA,EACrD,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,oCAAoC;AAAA,EAC7D;AACF,CAAC;AAED,iBAAiB,KAAK,6BAA6B,OAAO,MAAM;AAC9D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,aAAa,OAAO,KAAK,cAAc,KAAK,gBAAgB;AAClE,MAAI,CAAC,OAAO,SAAS,UAAU,GAAG;AAChC,UAAM,IAAI,SAAS,0BAA0B,KAAK,iBAAiB;AAAA,EACrE;AACA,QAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,kBAAkB,WAAW,CAAC;AACvE,SAAO,gBAAgB,GAAG,EAAE,WAAW,CAAC;AAC1C,CAAC;AAED,iBAAiB,KAAK,4BAA4B,OAAO,MAAM;AAC7D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,YAAY,MAAM,QAAQ,MAAM,SAAS,IAAK,KAAK,YAAsB,CAAC;AAChF,QAAM,UAA0F,CAAC;AACjG,aAAWC,QAAO,WAAW;AAC3B,UAAM,aAAa,OAAOA,KAAI,cAAcA,KAAI,WAAW;AAC3D,QAAI,CAAC,OAAO,SAAS,UAAU,GAAG;AAChC;AAAA,IACF;AACA,YAAQ,KAAK;AAAA,MACX;AAAA,MACA,gBAAgBA,KAAI,kBAAkBA,KAAI,oBAAoB;AAAA,MAC9D,eAAeA,KAAI,iBAAiBA,KAAI,mBAAmB;AAAA,IAC7D,CAAC;AAAA,EACH;AACA,QAAM,0BAA0B,EAAE,KAAK,QAAQ,OAAO;AACtD,SAAO,gBAAgB,GAAG,EAAE,OAAO,QAAQ,OAAO,CAAC;AACrD,CAAC;AAED,iBAAiB,KAAK,cAAc,OAAO,MAAM;AAC/C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,WAAW,MAAM,QAAQ,IAAI,IAAI,OAAO,MAAM;AACpD,MAAI,CAAC,MAAM,QAAQ,QAAQ,GAAG;AAC5B,UAAM,IAAI,SAAS,2BAA2B,KAAK,iBAAiB;AAAA,EACtE;AACA,QAAM,SAAS,SAAS,IAAI,MAAM,EAAE,OAAO,CAAC,OAAO,OAAO,SAAS,EAAE,CAAC;AACtE,MAAI;AACF,UAAM,uBAAuB,EAAE,KAAK,QAAQ,MAAM;AAClD,WAAO,gBAAgB,GAAG,EAAE,OAAO,OAAO,OAAO,CAAC;AAAA,EACpD,SAASD,SAAO;AACd,UAAMD,WAAUC,SAAO,0BAA0B;AAAA,EACnD;AACF,CAAC;AAED,iBAAiB,KAAK,wBAAwB,OAAO,MAAM;AACzD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,gBAAgB,MAAM,QAAS,MAAc,aAAa,IAC3D,KAAa,gBACd,MAAM,QAAQ,IAAI,IAChB,OACA,CAAC;AACP,QAAM,aAAgE,CAAC;AACvE,gBAAc,QAAQ,CAAC,OAAgB,UAAkB;AACvD,UAAM,eAAe,OAAO,KAAK;AACjC,QAAI,CAAC,OAAO,SAAS,YAAY,GAAG;AAClC;AAAA,IACF;AACA,eAAW,KAAK;AAAA,MACd;AAAA,MACA,UAAU,QAAQ;AAAA,IACpB,CAAC;AAAA,EACH,CAAC;AACD,QAAM,4BAA4B,EAAE,KAAK,QAAQ,UAAU;AAC3D,SAAO,gBAAgB,GAAG,EAAE,OAAO,WAAW,OAAO,CAAC;AACxD,CAAC;AAED,iBAAiB,KAAK,mBAAmB,OAAO,MAAM;AACpD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,WAAsB,MAAM,QAAS,MAAc,QAAQ,IAC5D,KAAa,WACd,MAAM,QAAQ,IAAI,IACf,OACD,CAAC;AACP,QAAM,aAAa,SAChB,IAAI,CAAC,UAAmB,OAAO,KAAK,CAAC,EACrC,OAAO,CAAC,OAA6B,OAAO,SAAS,EAAE,CAAC;AAC3D,QAAM,uBAAuB,EAAE,KAAK,QAAQ,UAAU;AACtD,SAAO,gBAAgB,GAAG,EAAE,OAAO,WAAW,OAAO,CAAC;AACxD,CAAC;AAED,iBAAiB,KAAK,4BAA4B,OAAO,MAAM;AAC7D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAMC,OAAiB,MAAM,QAAQ,MAAM,gBAAgB,IACvD,KAAK,mBACL,MAAM,QAAQ,IAAI,IACf,OACD,CAAC;AACP,QAAM,aAAaA,KAChB,IAAI,CAAC,UAA2B,OAAO,KAAK,CAAC,EAC7C,OAAO,CAAC,UAAmC,OAAO,SAAS,KAAK,CAAC;AAEpE,MAAI;AACF,UAAM,+BAA+B,EAAE,KAAK,QAAQ,UAAU;AAC9D,WAAO,gBAAgB,GAAG,EAAE,OAAO,WAAW,OAAO,CAAC;AAAA,EACxD,SAASD,SAAO;AACd,UAAMD,WAAUC,SAAO,gCAAgC;AAAA,EACzD;AACF,CAAC;AAED,iBAAiB,KAAK,kCAAkC,OAAO,MAAM;AACnE,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAMC,OAAiB,MAAM,QAAQ,MAAM,sBAAsB,IAC7D,KAAK,yBACL,MAAM,QAAQ,IAAI,IACf,OACD,CAAC;AACP,QAAM,aAAaA,KAChB,IAAI,CAAC,UAA2B,OAAO,KAAK,CAAC,EAC7C,OAAO,CAAC,UAAmC,OAAO,SAAS,KAAK,CAAC;AAEpE,MAAI;AACF,UAAM,qCAAqC,EAAE,KAAK,QAAQ,UAAU;AACpE,WAAO,gBAAgB,GAAG,EAAE,OAAO,WAAW,OAAO,CAAC;AAAA,EACxD,SAASD,SAAO;AACd,UAAMD,WAAUC,SAAO,sCAAsC;AAAA,EAC/D;AACF,CAAC;AAED,iBAAiB,KAAK,wBAAwB,OAAO,MAAM;AACzD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,cAAc,MAAM,QAAQ,IAAI,IAAI,OAAO,MAAM;AACvD,MAAI,CAAC,MAAM,QAAQ,WAAW,GAAG;AAC/B,UAAM,IAAI,SAAS,sCAAsC,KAAK,iBAAiB;AAAA,EACjF;AACA,QAAM,aAAa,YAChB;AAAA,IAAI,CAAC,SACJ,OAAO,SAAS,WACZ,EAAE,sBAAsB,KAAK,IAC7B;AAAA,MACE,sBAAsB,OAAO,KAAK,wBAAwB,KAAK,sBAAsB;AAAA,MACrF,eAAe,KAAK,iBAAiB,KAAK;AAAA,IAC5C;AAAA,EACN,EACC,OAAO,CAAC,SAA2E,OAAO,SAAS,KAAK,oBAAoB,CAAC;AAChI,MAAI;AACF,UAAM,wBAAwB,EAAE,KAAK,QAAQ,UAAU;AACvD,WAAO,gBAAgB,GAAG,EAAE,OAAO,WAAW,OAAO,CAAC;AAAA,EACxD,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,oCAAoC;AAAA,EAC7D;AACF,CAAC;AAED,iBAAiB,KAAK,wBAAwB,OAAO,MAAM;AACzD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAMC,OAAM,MAAM,QAAS,KAAa,kBAAkB,IACrD,KAAa,qBACd,MAAM,QAAS,KAAa,qBAAqB,IAC9C,KAAa,wBACd,MAAM,QAAQ,IAAI,IAChB,OACA,CAAC;AACT,MAAI,CAAC,MAAM,QAAQA,IAAG,KAAKA,KAAI,WAAW,GAAG;AAC3C,UAAM,wBAAwB,EAAE,KAAK,QAAQ,CAAC,CAAC;AAC/C,WAAO,gBAAgB,GAAG,EAAE,OAAO,EAAE,CAAC;AAAA,EACxC;AACA,QAAM,aAAaA,KAChB;AAAA,IAAI,CAAC,SACJ,OAAO,SAAS,WACZ,EAAE,sBAAsB,KAAK,IAC7B;AAAA,MACE,sBAAsB,OAAO,KAAK,wBAAwB,KAAK,0BAA0B,KAAK,EAAE;AAAA,MAChG,eAAe,KAAK,iBAAiB,KAAK,kBAAkB;AAAA,IAC9D;AAAA,EACN,EACC,OAAO,CAAC,SAAS,OAAO,SAAS,KAAK,oBAAoB,CAAC;AAE9D,MAAI;AACF,UAAM,wBAAwB,EAAE,KAAK,QAAQ,UAAU;AACvD,WAAO,gBAAgB,GAAG,EAAE,OAAO,WAAW,OAAO,CAAC;AAAA,EACxD,SAASD,SAAO;AACd,UAAMD,WAAUC,SAAO,sCAAsC;AAAA,EAC/D;AACF,CAAC;AAED,iBAAiB,KAAK,cAAc,OAAO,MAAM;AAC/C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,YAAY,MAAM,QAAQ,IAAI,IAAI,OAAO,MAAM;AACrD,MAAI,CAAC,MAAM,QAAQ,SAAS,GAAG;AAC7B,UAAM,IAAI,SAAS,4BAA4B,KAAK,iBAAiB;AAAA,EACvE;AACA,QAAM,aAAmF,CAAC;AAC1F,aAAWC,QAAO,WAAoB;AACpC,UAAM,aAAa,OAAOA,KAAI,cAAcA,KAAI,WAAW;AAC3D,QAAI,CAAC,OAAO,SAAS,UAAU,GAAG;AAChC;AAAA,IACF;AACA,eAAW,KAAK;AAAA,MACd;AAAA,MACA,WAAWA,KAAI,aAAaA,KAAI,eAAe;AAAA,MAC/C,WAAWA,KAAI,aAAaA,KAAI,cAAc;AAAA,IAChD,CAAC;AAAA,EACH;AACA,MAAI;AACF,UAAM,0BAA0B,EAAE,KAAK,QAAQ,UAAU;AACzD,WAAO,gBAAgB,GAAG,EAAE,OAAO,WAAW,OAAO,CAAC;AAAA,EACxD,SAASD,SAAO;AACd,UAAMD,WAAUC,SAAO,0BAA0B;AAAA,EACnD;AACF,CAAC;AAED,iBAAiB,KAAK,aAAa,OAAO,MAAM;AAC9C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,YAAY,MAAM,QAAS,MAAc,SAAS,IAAK,KAAa,YAAY,CAAC;AACvF,QAAM,aAAmF,CAAC;AAC1F,aAAWC,QAAO,WAAoB;AACpC,UAAM,aAAa,OAAOA,KAAI,cAAcA,KAAI,WAAW;AAC3D,QAAI,CAAC,OAAO,SAAS,UAAU,GAAG;AAChC;AAAA,IACF;AACA,eAAW,KAAK;AAAA,MACd;AAAA,MACA,WAAWA,KAAI,aAAaA,KAAI,eAAe;AAAA,MAC/C,WAAWA,KAAI,aAAaA,KAAI,cAAc;AAAA,IAChD,CAAC;AAAA,EACH;AACA,QAAM,0BAA0B,EAAE,KAAK,QAAQ,UAAU;AACzD,SAAO,gBAAgB,GAAG,EAAE,OAAO,WAAW,OAAO,CAAC;AACxD,CAAC;AAED,iBAAiB,KAAK,gBAAgB,OAAO,MAAM;AACjD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,cAAc,MAAM,QAAQ,IAAI,IAAI,OAAO,MAAM;AACvD,MAAI,CAAC,MAAM,QAAQ,WAAW,GAAG;AAC/B,UAAM,IAAI,SAAS,gCAAgC,KAAK,iBAAiB;AAAA,EAC3E;AACA,QAAM,aAAiE,CAAC;AACxE,EAAC,YAAsB,QAAQ,CAACA,MAAK,UAAU;AAC7C,UAAM,eAAe,OAAOA,SAAQ,WAChCA,OACA,OAAOA,KAAI,gBAAgBA,KAAI,aAAa;AAChD,QAAI,CAAC,OAAO,SAAS,YAAY,GAAG;AAClC;AAAA,IACF;AACA,eAAW,KAAK;AAAA,MACd;AAAA,MACA,UAAUA,MAAK,YAAY,QAAQ;AAAA,IACrC,CAAC;AAAA,EACH,CAAC;AACD,MAAI;AACF,UAAM,4BAA4B,EAAE,KAAK,QAAQ,UAAU;AAC3D,WAAO,gBAAgB,GAAG,EAAE,OAAO,WAAW,OAAO,CAAC;AAAA,EACxD,SAASD,SAAO;AACd,UAAMD,WAAUC,SAAO,4BAA4B;AAAA,EACrD;AACF,CAAC;AACD,iBAAiB,IAAI,YAAY,OAAO,MAAM;AAC5C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,MAAI;AACF,UAAM,UAAU,MAAM,sBAAsB,EAAE,KAAK,MAAM;AACzD,WAAO,gBAAgB,GAAG,OAAO;AAAA,EACnC,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,mCAAmC;AAAA,EAC5D;AACF,CAAC;AAED,iBAAiB,KAAK,aAAa,OAAO,MAAM;AAC9C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,MAAI;AACF,UAAM,mBAAmB,EAAE,KAAK,QAAQ,QAAQ,CAAC,CAAC;AAClD,UAAM,qBAAqB,EAAE,KAAK,MAAM;AACxC,WAAO,gBAAgB,GAAG,EAAE,WAAW,KAAK,CAAC;AAAA,EAC/C,SAASA,SAAO;AACd,UAAMD,WAAUC,SAAO,+BAA+B;AAAA,EACxD;AACF,CAAC;AAED,IAAO,qBAAQ;;;AEjgCf;AAAA;AAAA;AAAAM;AAIA;;;ACJA;AAAA;AAAA;AAAAC;AAcA;AAEA,IAAM,iBAAiB;AAAA,EACrB,WAAW;AAAA,EACX,aAAa;AAAA,EACb,WAAW;AAAA,EACX,WAAW;AACb;AAEA,IAAM,iBAAiB;AAAA,EACrB,WAAW;AAAA,EACX,WAAW;AAAA,EACX,SAAS;AACX;AAEA,IAAM,kCAAkC;AAExC,IAAM,wBAAqD;AAAA,EACzD,gBAAgB;AAAA,EAChB,qBAAqB;AAAA,EACrB,oBAAoB;AAAA,EACpB,mBAAmB;AAAA,EACnB,YAAW,oBAAI,KAAK,CAAC,GAAE,YAAY;AACrC;AAoDA,SAAS,UAAU,OAA2C;AAC5D,SAAO,UAAU;AACnB;AAFS;AAIT,SAAS,UAAU,OAAwB;AACzC,SAAO,QAAQ,IAAI;AACrB;AAFS;AAIT,eAAe,qBAAqBC,MAAU,WAAmB,QAAwD;AACvH,SAAO;AAAA,IACLA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,WAAW,MAAM;AAAA,EACpB;AACF;AANe;AAQf,eAAe,sBACbA,MACA,WACA,QACA,UACA;AACA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAeA;AAAA,MACE;AAAA,MACA;AAAA,MACA,SAAS;AAAA,MACT,UAAU,SAAS,mBAAmB;AAAA,MACtC,UAAU,SAAS,kBAAkB;AAAA,MACrC,UAAU,SAAS,iBAAiB;AAAA,MACpC,SAAS;AAAA,IACX;AAAA,EACF;AACF;AAjCe;AAmCf,eAAe,kBAAkBA,MAAU,WAAwD;AACjG,SAAO;AAAA,IACLA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,SAAS;AAAA,EACZ;AACF;AANe;AAQf,eAAe,mBAAmBA,MAAU,WAAmB,QAAgC;AAC7F,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkBA;AAAA,MACE;AAAA,MACA,OAAO;AAAA,MACP,UAAU,OAAO,WAAW;AAAA,MAC5B,UAAU,OAAO,WAAW;AAAA,MAC5B,UAAU,OAAO,gBAAgB;AAAA,MACjC,OAAO,eAAe;AAAA,MACtB,OAAO,WAAW;AAAA,MAClB,OAAO;AAAA,IACT;AAAA,EACF;AACF;AAhCe;AAkCf,eAAe,eAAeA,MAAU,OAAiD;AACvF,SAAO;AAAA,IACLA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AACF;AANe;AAQf,eAAe,gBACbA,MACAC,SACA;AACA,QAAM;AAAA,IACJD,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAgBA;AAAA,MACEC,QAAO;AAAA,MACPA,QAAO;AAAA,MACPA,QAAO;AAAA,MACPA,QAAO;AAAA,MACPA,QAAO;AAAA,MACPA,QAAO;AAAA,MACPA,QAAO;AAAA,IACT;AAAA,EACF;AACF;AAhCe;AAkCf,eAAe,eACbD,MACA,OACA,QACA,QACA;AACA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,QAAQ,QAAQ,KAAK;AAAA,EACxB;AACF;AAXe;AAaf,eAAe,gBAAgBA,MAAU,WAAsD;AAC7F,SAAO;AAAA,IACLA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,SAAS;AAAA,EACZ;AACF;AANe;AAQf,eAAe,iBAAiBA,MAAU,KAAwB;AAChE,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkBA;AAAA,MACE,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IACN;AAAA,EACF;AACF;AAhCe;AAkCf,eAAe,mBACbA,MACA,WACA,UACsC;AACtC,SAAO;AAAA,IACLA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,WAAW,QAAQ;AAAA,EACtB;AACF;AAVe;AAYf,eAAe,oBACbA,MACA,KACA;AACA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA;AAAA,MACE,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IACN;AAAA,EACF;AACF;AAzBe;AA2Bf,SAAS,sBAAsB,KAAgD;AAC7E,QAAM,aAAa,IAAI,aAAa,qBAAqB,IAAI,UAAU,IAAI,CAAC;AAC5E,QAAM,cAAc,IAAI,eAAe,qBAAqB,IAAI,YAAY,IAAI,CAAC;AACjF,QAAM,WAAW,IAAI,WAAW,gBAAgB,IAAI,QAAQ,IAAI;AAChE,SAAO;AAAA,IACL,WAAW,IAAI;AAAA,IACf,OAAO,IAAI,SAAS;AAAA,IACpB,iBAAiB,IAAI,oBAAoB;AAAA,IACzC,QAAQ,IAAI,UAAU;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW,IAAI;AAAA,EACjB;AACF;AAdS;AAgBT,SAAS,yBAAyB,SAAoD;AACpF,SAAO;AAAA,IACL,YAAY,QAAQ;AAAA,IACpB,OAAO,QAAQ,SAAS;AAAA,IACxB,kBAAkB,QAAQ,mBAAmB;AAAA,IAC7C,QAAQ,QAAQ,UAAU;AAAA,IAC1B,YAAY,KAAK,UAAU,QAAQ,cAAc,CAAC,CAAC;AAAA,IACnD,cAAc,KAAK,UAAU,QAAQ,eAAe,CAAC,CAAC;AAAA,IACtD,UAAU,QAAQ,WAAW,KAAK,UAAU,QAAQ,QAAQ,IAAI;AAAA,IAChE,YAAY,QAAQ;AAAA,EACtB;AACF;AAXS;AAaT,SAAS,yBAAyB,KAAsD;AACtF,QAAM,WAAW,IAAI,WAAW,kBAAkB,IAAI,QAAQ,IAAI,CAAC;AACnE,SAAO;AAAA,IACL,WAAW,IAAI;AAAA,IACf,UAAU,IAAI;AAAA,IACd;AAAA,IACA,aAAa,IAAI;AAAA,EACnB;AACF;AARS;AAUT,SAAS,qBAAqB,SAA2B;AACvD,MAAI;AACF,UAAM,SAAS,KAAK,MAAM,OAAO;AACjC,WAAO,MAAM,QAAQ,MAAM,IAAI,OAAO,IAAI,MAAM,IAAI,CAAC;AAAA,EACvD,QAAQ;AACN,WAAO,CAAC;AAAA,EACV;AACF;AAPS;AAST,SAAS,gBAAgB,SAAkD;AACzE,MAAI;AACF,UAAM,SAAS,KAAK,MAAM,OAAO;AACjC,WAAO,OAAO,WAAW,YAAY,WAAW,OAAO,SAAS;AAAA,EAClE,QAAQ;AACN,WAAO;AAAA,EACT;AACF;AAPS;AAST,SAAS,kBAAkB,SAAwD;AACjF,MAAI;AACF,UAAM,SAAS,KAAK,MAAM,OAAO;AACjC,QAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,aAAO,OAAO,IAAI,CAAC,YAAY;AAC7B,YAAI,WAAW,OAAO,YAAY,UAAU;AAC1C,iBAAO;AAAA,YACL,SAAS,OAAO,QAAQ,WAAW,EAAE;AAAA,YACrC,SAAS,OAAO,QAAQ,WAAW,EAAE;AAAA,YACrC,WAAW,QAAQ,aAAa;AAAA,YAChC,SAAS,QAAQ,WAAW;AAAA,UAC9B;AAAA,QACF;AACA,eAAO;AAAA,UACL,SAAS;AAAA,UACT,SAAS,OAAO,WAAW,EAAE;AAAA,QAC/B;AAAA,MACF,CAAC;AAAA,IACH;AACA,WAAO,CAAC;AAAA,EACV,QAAQ;AACN,WAAO,CAAC;AAAA,EACV;AACF;AAvBS;AAqGT,SAAS,SAAiB;AACxB,UAAO,oBAAI,KAAK,GAAE,YAAY;AAChC;AAFS;AAIT,SAAS,cAAc,KAAU,eAA6C;AAC5E,QAAM,cAAc,IAAI;AACxB,QAAME,YAAW,OAAO,IAAI,oBAAoB,CAAC;AACjD,QAAM,YAAY,cAAc,IAAI,KAAK,WAAW,IAAI;AACxD,QAAM,YAAY,IAAI,cAAc;AACpC,QAAM,UAAU,IAAI,YAAY;AAEhC,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,eAAe;AACjB,aAAS,IAAI,iBAAiB;AAC9B,oBAAgB,IAAI,kBAAkB;AACtC,cACE,IAAI,WAAW,eAAe,aAC9B,CAAC,UACD,OAAO,IAAI,wBAAwB,CAAC,IAAI,OAAO,IAAI,oBAAoB,CAAC;AAAA,EAC5E;AAEA,SAAO;AAAA,IACL,WAAW,IAAI;AAAA,IACf,YAAY,IAAI;AAAA,IAChB,cAAc,IAAI,aAAa;AAAA,IAC/B,sBAAsB,IAAI,sBAAsB;AAAA,IAChD,aAAa,IAAI,iBAAiB;AAAA,IAClC,eAAe,IAAI,cAAc;AAAA,IACjC,uBAAuB,IAAI,uBAAuB;AAAA,IAClD,OAAO,IAAI;AAAA,IACX,aAAa,IAAI,eAAe;AAAA,IAChC,aAAa,IAAI;AAAA,IACjB,cAAc,IAAI,iBAAiB;AAAA,IACnC,YAAY,IAAI,eAAe;AAAA,IAC/B,kBAAkB,IAAI,qBAAqB;AAAA,IAC3C;AAAA,IACA,iBAAiBA;AAAA,IACjB,iBAAiB,IAAI,qBAAqB,OAAO,OAAO,IAAI,gBAAgB,IAAI;AAAA,IAChF,qBAAqB,OAAO,IAAI,wBAAwB,CAAC;AAAA,IACzD,QAAQ,IAAI;AAAA,IACZ,YAAY,IAAI,eAAe;AAAA,IAC/B,aAAa,QAAQ,IAAI,YAAY;AAAA,IACrC,mBAAmB,IAAI,sBAAsB;AAAA,IAC7C,mBAAmB,IAAI,uBAAuB;AAAA,IAC9C,UAAU,QAAQ,IAAI,aAAa,CAAC;AAAA,IACpC,MAAM,IAAI,QAAQ;AAAA,IAClB,kBAAkB,IAAI,qBAAqB;AAAA,IAC3C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAnDS;AAqDT,SAAS,cAAc,KAAsC;AAC3D,SAAO;AAAA,IACL,WAAW,IAAI;AAAA,IACf,WAAW,IAAI;AAAA,IACf,cAAc,IAAI;AAAA,IAClB,oBAAoB,IAAI;AAAA,IACxB,wBAAwB,OAAO,IAAI,4BAA4B,CAAC;AAAA,IAChE,qBAAqB,IAAI,yBAAyB;AAAA,IAClD,YAAY,IAAI;AAAA,IAChB,cAAc,IAAI,kBAAkB;AAAA,IACpC,sBAAsB,IAAI,2BAA2B;AAAA,IACrD,QAAQ,IAAI;AAAA,IACZ,gBAAgB,IAAI,mBAAmB;AAAA,IACvC,UAAU,IAAI;AAAA,IACd,aAAa,IAAI,gBAAgB;AAAA,IACjC,oBAAoB,IAAI,uBAAuB;AAAA,IAC/C,UAAU,QAAQ,IAAI,QAAQ;AAAA,IAC9B,gBAAgB,IAAI,oBAAoB,OAAO,OAAO,IAAI,eAAe,IAAI;AAAA,IAC7E,iBAAiB,IAAI,oBAAoB;AAAA,IACzC,cAAc,QAAQ,IAAI,aAAa;AAAA,IACvC,WAAW,mBAAmB,IAAI,oBAAoB;AAAA,EACxD;AACF;AAtBS;AAwBT,SAAS,mBAAmB,aAAqC;AAC/D,MAAI,CAAC,YAAa,QAAO;AACzB,QAAM,cAAc,IAAI,KAAK,WAAW;AACxC,QAAM,YAAY,oBAAI,KAAK;AAC3B,YAAU,YAAY,UAAU,YAAY,IAAI,CAAC;AACjD,SAAO,cAAc;AACvB;AANS;AAQT,eAAe,cAAcF,MAAU,WAAmB;AACxD,SAAO;AAAA,IACLA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,CAAC,SAAS;AAAA,EACZ;AACF;AAfe;AAiBf,eAAe,oBAAoBA,MAAU,WAAwC;AACnF,QAAM,MAAM,MAAM,cAAcA,MAAK,SAAS;AAC9C,MAAI,CAAC,IAAK,OAAM,IAAI,MAAM,kEAAgB;AAC1C,SAAO;AACT;AAJe;AAMf,eAAsBG,eACpBH,MACA,YACA,SAC8B;AAC9B,QAAM,MAAM,OAAO;AAEnB,QAAMI,SAAQ,QAAQ,SAAS,QAAQ,SAAS;AAChD,QAAM,cAAc,QAAQ,eAAe,QAAQ,eAAe;AAClE,QAAM,cAAc,QAAQ;AAC5B,QAAM,kBAAkB,QAAQ,mBAAmB,QAAQ,YAAY;AACvE,QAAM,kBAAkB,QAAQ,oBAAoB,QAAQ,YAAY,IAAI;AAC5E,QAAM,WAAW,QAAQ,YAAY,CAAC,QAAQ;AAC9C,QAAM,eAAe,QAAQ,gBAAgB,QAAQ,YAAY;AACjE,QAAM,aAAa,QAAQ,cAAc,QAAQ,kBAAkB;AACnE,QAAM,cAAc,QAAQ,eAAe,QAAQ,SAAS;AAC5D,QAAM,cAAc,QAAQ,aAAa;AACzC,QAAM,WAAW;AAAA,IACf,cAAc,QAAQ,gBAAgB;AAAA,IACtC,gBAAgB,QAAQ,kBAAkB;AAAA,IAC1C,gBAAgB,QAAQ,kBAAkB;AAAA,IAC1C,OAAO,QAAQ,SAAS;AAAA,IACxB,UAAU,QAAQ,YAAY;AAAA,EAChC;AACA,QAAM,mBAAmB,QAAQ,oBAAoB,KAAK,UAAU,QAAQ;AAC5E,QAAM,aAAa,QAAQ,eAAe,QAAQ,eAAe,UAAU,QAAQ,YAAY,KAAK;AAEpG,QAAM;AAAA,IACJJ,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA0BA;AAAA,MACE;AAAA,MACA;AAAA,MACAI;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ,oBAAoB;AAAA,MAC5B;AAAA,MACA;AAAA,MACA;AAAA,MACA,eAAe;AAAA,MACf;AAAA,MACA,QAAQ,cAAc,IAAI;AAAA,MAC1B,QAAQ,qBAAqB;AAAA,MAC7B,QAAQ,qBAAqB;AAAA,MAC7B,WAAW,IAAI;AAAA,MACf,QAAQ,QAAQ;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,QAAM,QAAQ,MAAM;AAAA,IAClBJ,KAAI;AAAA,IACJ;AAAA,EACF;AACA,QAAM,YAAY,OAAO,OAAO,MAAM,CAAC;AACvC,MAAI,CAAC,WAAW;AACd,UAAM,IAAI,MAAM,2EAAoB;AAAA,EACtC;AACA,QAAM,MAAM,MAAM,cAAcA,MAAK,SAAS;AAC9C,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,MAAM,+GAA0B;AAAA,EAC5C;AACA,SAAO,cAAc,KAAK,UAAU;AACtC;AA7FsB,OAAAG,gBAAA;AA+FtB,eAAsB,aACpBH,MACA,MACA,MACA,cACA;AACA,QAAM,UAAU,OAAO,KAAK;AAC5B,QAAM,UAAoB,CAAC;AAC3B,QAAM,SAAgB,CAAC;AACvB,QAAM,SAAS,cAAc,YAAY;AACzC,QAAM,MAAM,OAAO;AAEnB,MAAI,WAAW,YAAY;AACzB,YAAQ,KAAK,YAAY;AACzB,WAAO,KAAK,eAAe,SAAS;AACpC,YAAQ,KAAK,mBAAmB;AAChC,WAAO,KAAK,GAAG;AAAA,EACjB,WAAW,WAAW,eAAe,WAAW,QAAQ;AACtD,YAAQ,KAAK,YAAY;AACzB,WAAO,KAAK,eAAe,SAAS;AAAA,EACtC,WAAW,WAAW,aAAa;AACjC,YAAQ,KAAK,YAAY;AACzB,WAAO,KAAK,eAAe,SAAS;AAAA,EACtC,WAAW,WAAW,eAAe;AACnC,YAAQ,KAAK,YAAY;AACzB,WAAO,KAAK,eAAe,WAAW;AAAA,EACxC;AAEA,QAAM,cAAc,QAAQ,SAAS,SAAS,QAAQ,KAAK,OAAO,CAAC,KAAK;AAExE,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ,0CAA0C,WAAW;AAAA,IACrD;AAAA,EACF;AAEA,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,QAKI,WAAW;AAAA;AAAA;AAAA,IAGf,OAAO,OAAO,CAAC,MAAM,MAAM,CAAC;AAAA,EAC9B;AAEA,QAAM,OAAO,KAAK,IAAI,CAAC,QAAQ,cAAc,GAAG,CAAC;AACjD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO,UAAU,SAAS;AAAA,EAC5B;AACF;AAxDsB;AA0DtB,eAAsB,eAAeA,MAAU,WAAmB,eAAwB;AACxF,QAAM,MAAM,MAAM,cAAcA,MAAK,SAAS;AAC9C,MAAI,CAAC,IAAK,OAAM,IAAI,MAAM,kEAAgB;AAC1C,SAAO,cAAc,KAAK,aAAa;AACzC;AAJsB;AAMtB,eAAsB,iBACpBA,MACA,QACA,MACA,MACA;AACA,QAAM,UAAU,OAAO,KAAK;AAC5B,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA;AAAA,IAEA,CAAC,QAAQ,MAAM;AAAA,EACjB;AAEA,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,CAAC,QAAQ,QAAQ,MAAM,MAAM;AAAA,EAC/B;AAEA,QAAM,OAAO,KAAK,IAAI,CAAC,QAAQ,cAAc,KAAK,MAAM,CAAC;AACzD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO,UAAU,SAAS;AAAA,EAC5B;AACF;AAlCsB;AAoCtB,eAAsB,mBAAmBA,MAAU,MAAc,MAAc;AAC7E,QAAM,UAAU,OAAO,KAAK;AAC5B,QAAM,MAAM,OAAO;AACnB,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA;AAAA,IAEA,CAAC,eAAe,WAAW,GAAG;AAAA,EAChC;AAEA,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,CAAC,eAAe,WAAW,KAAK,MAAM,MAAM;AAAA,EAC9C;AAEA,QAAM,OAAO,KAAK,IAAI,CAAC,QAAQ,cAAc,GAAG,CAAC;AACjD,SAAO,EAAE,MAAM,MAAM,MAAM,OAAO,UAAU,SAAS,EAAE;AACzD;AAzBsB;AA2BtB,eAAsB,uBACpBA,MACA,cACA,MACA,MACA;AACA,QAAM,UAAU,OAAO,KAAK;AAC5B,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA;AAAA,IAEA,CAAC,eAAe,WAAW,YAAY;AAAA,EACzC;AAEA,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,CAAC,eAAe,WAAW,cAAc,MAAM,MAAM;AAAA,EACvD;AAEA,QAAM,OAAO,KAAK,IAAI,CAAC,QAAQ,cAAc,GAAG,CAAC;AACjD,SAAO,EAAE,MAAM,MAAM,MAAM,OAAO,UAAU,SAAS,EAAE;AACzD;AA7BsB;AA+BtB,eAAsB,mBACpBA,MACA,aACA,MACA,MACA;AACA,QAAM,UAAU,OAAO,KAAK;AAC5B,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA;AAAA,IAEA,CAAC,eAAe,WAAW,WAAW;AAAA,EACxC;AAEA,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,CAAC,eAAe,WAAW,aAAa,MAAM,MAAM;AAAA,EACtD;AAEA,QAAM,OAAO,KAAK,IAAI,CAAC,QAAQ,cAAc,GAAG,CAAC;AACjD,SAAO,EAAE,MAAM,MAAM,MAAM,OAAO,UAAU,SAAS,EAAE;AACzD;AA7BsB;AA+BtB,eAAsB,sBACpBA,MACA,QACA,MACA,MACA;AACA,QAAM,UAAU,OAAO,KAAK;AAC5B,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,eAAe,WAAW,MAAM;AAAA,EACnC;AAEA,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,CAAC,eAAe,WAAW,QAAQ,MAAM,MAAM;AAAA,EACjD;AAEA,QAAM,OAAO,KAAK,IAAI,CAAC,QAAQ,cAAc,KAAK,MAAM,CAAC;AACzD,SAAO,EAAE,MAAM,MAAM,MAAM,OAAO,UAAU,SAAS,EAAE;AACzD;AAnCsB;AAqCtB,eAAsB,YACpBA,MACA,QACA,SACqC;AACrC,QAAM,UAAU,MAAM,oBAAoBA,MAAK,QAAQ,SAAS;AAEhE,MAAI,QAAQ,iBAAiB,QAAQ;AACnC,UAAM,IAAI,MAAM,oHAA0B;AAAA,EAC5C;AAEA,MAAI,QAAQ,WAAW,eAAe,WAAW;AAC/C,UAAM,IAAI,MAAM,wEAAiB;AAAA,EACnC;AAEA,QAAM,kBAAkB,QAAQ,oBAAoB;AACpD,QAAM,sBAAsB,OAAO,QAAQ,wBAAwB,CAAC;AACpE,MAAI,uBAAuB,iBAAiB;AAC1C,UAAM,IAAI,MAAM,wEAAiB;AAAA,EACnC;AAEA,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,CAAC,QAAQ,WAAW,QAAQ,eAAe,SAAS;AAAA,EACtD;AAEA,MAAI,UAAU;AACZ,UAAM,IAAI,MAAM,iEAAe;AAAA,EACjC;AAEA,QAAM,MAAM,OAAO;AACnB,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,CAAC,QAAQ,WAAW,QAAQ,eAAe,WAAW,QAAQ,kBAAkB,MAAM,KAAK,GAAG;AAAA,EAChG;AAEA,QAAM,kBAAkB,sBAAsB;AAC9C,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,QAAQ,iBAAiB,KAAK,QAAQ,SAAS;AAAA,EAClD;AAEA,QAAM,aAAa,MAAM;AAAA,IACvBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAcA,CAAC,QAAQ,WAAW,MAAM;AAAA,EAC5B;AAEA,MAAI,CAAC,WAAY,OAAM,IAAI,MAAM,qFAAoB;AACrD,SAAO,cAAc,UAAU;AACjC;AA7EsB;AA+EtB,eAAsB,YACpBA,MACA,QACA,WACA,gBAC8B;AAC9B,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,iBAAiB,QAAQ;AACnC,WAAO,cAAc,SAAS,MAAM;AAAA,EACtC;AACA,QAAM,YAAYA,MAAK,QAAQ,EAAE,WAAW,eAAe,CAAC;AAC5D,QAAM,UAAU,MAAM,cAAcA,MAAK,SAAS;AAClD,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,MAAM,qFAAoB;AAAA,EACtC;AACA,SAAO,cAAc,SAAS,MAAM;AACtC;AAhBsB;AAkBtB,eAAsB,cACpBA,MACA,QACA,WACA,QACA;AACA,QAAM,UAAU,MAAM;AAAA,IACpBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,SAAS;AAAA,EACZ;AAEA,MAAI,CAAC,QAAS,OAAM,IAAI,MAAM,kEAAgB;AAC9C,MAAI,QAAQ,YAAY,OAAQ,OAAM,IAAI,MAAM,oFAAmB;AACnE,MAAI,QAAQ,WAAW,eAAe,UAAW,OAAM,IAAI,MAAM,iEAAe;AAEhF,QAAM,MAAM,OAAO;AACnB,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,CAAC,eAAe,WAAW,KAAK,UAAU,MAAM,KAAK,SAAS;AAAA,EAChE;AAEA,QAAM,kBAAkB,KAAK,IAAI,OAAO,QAAQ,wBAAwB,CAAC,IAAI,GAAG,CAAC;AACjF,QAAM,cAAc,QAAQ,kBAAkB,SAAS,OAAO,QAAQ;AAEtE,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,aAAa,iBAAiB,KAAK,QAAQ,UAAU;AAAA,EACxD;AACF;AAzCsB;AA2CtB,eAAsB,iBAAiBA,MAAU,QAAgB,MAAc,MAAc;AAC3F,QAAM,UAAU,OAAO,KAAK;AAC5B,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,CAAC,QAAQ,MAAM,MAAM;AAAA,EACvB;AAEA,QAAM,OAAO,KAAK,IAAI,CAAC,QAAQ,cAAc,GAAG,CAAC;AACjD,SAAO,EAAE,MAAM,MAAM,MAAM,OAAO,UAAU,SAAS,EAAE;AACzD;AAxBsB;AA0BtB,eAAsB,gBACpBA,MACA,QACA,OACA,KACkC;AAClC,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,CAAC,OAAO,KAAK,QAAQ,MAAM;AAAA,EAC7B;AAEA,QAAM,SAAS,KAAK,IAAI,CAAC,SAAS;AAAA,IAChC,WAAW,IAAI;AAAA,IACf,OAAO,IAAI;AAAA,IACX,aAAa,IAAI,eAAe;AAAA,IAChC,WAAW,IAAI;AAAA,IACf,SAAS,IAAI,KAAK,IAAI,KAAK,IAAI,YAAY,EAAE,QAAQ,IAAI,OAAO,IAAI,oBAAoB,CAAC,IAAI,GAAK,EAAE,YAAY;AAAA,IAChH,WAAW;AAAA,IACX,QAAQ,IAAI;AAAA,IACZ,QAAQ,IAAI,iBAAiB;AAAA,IAC7B,OAAO,IAAI,iBAAiB,SAAS,YAAY;AAAA,EACnD,EAAE;AAGF,QAAM,iBAA4D,CAAC;AACnE,QAAM,YAAY,IAAI,KAAK,KAAK;AAChC,QAAM,UAAU,IAAI,KAAK,GAAG;AAC5B,MAAI,SAAS,IAAI,KAAK,SAAS;AAC/B,SAAO,SAAS,SAAS;AACvB,UAAM,OAAO,IAAI,KAAK,OAAO,QAAQ,IAAI,KAAK,GAAK;AACnD,mBAAe,KAAK,EAAE,WAAW,OAAO,YAAY,GAAG,SAAS,KAAK,YAAY,GAAG,aAAa,KAAK,CAAC;AACvG,aAAS;AAAA,EACX;AAEA,SAAO,EAAE,QAAQ,eAAe;AAClC;AA1CsB;AA4CtB,eAAsB,aAAaA,MAAU,QAAgB,WAAmB;AAC9E,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,iBAAiB,QAAQ;AACnC,UAAM,IAAI,MAAM,oFAAmB;AAAA,EACrC;AACA,QAAM,MAAM,OAAO;AACnB,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,eAAe,aAAa,KAAK,KAAK,SAAS;AAAA,EAClD;AACF;AAXsB;AAatB,eAAsB,WACpBA,MACA,QACA,WACA,SACA;AACA,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,iBAAiB,QAAQ;AACnC,UAAM,IAAI,MAAM,oFAAmB;AAAA,EACrC;AACA,QAAM,MAAM,OAAO;AACnB,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,eAAe,WAAW,KAAK,KAAK,SAAS;AAAA,EAChD;AACA,MAAI,SAAS;AACX,UAAM,oBAAoBA,MAAK,WAAW;AAAA,MACxC;AAAA,MACA,iBAAiB,QAAQ,YAAY;AAAA,MACrC,OAAO,QAAQ;AAAA,MACf,QAAQ,QAAQ;AAAA,MAChB,WAAW;AAAA,MACX,YAAY,CAAC;AAAA,MACb,aAAa,CAAC;AAAA,IAChB,CAAC;AAAA,EACH;AACF;AA3BsB;AA6BtB,eAAsB,cACpBA,MACA,QACA,WACA,QACA;AACA,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,iBAAiB,QAAQ;AACnC,UAAM,IAAI,MAAM,oFAAmB;AAAA,EACrC;AACA,QAAM,MAAM,OAAO;AACnB,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,CAAC,eAAe,WAAW,KAAK,UAAU,MAAM,KAAK,SAAS;AAAA,EAChE;AAEA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,CAAC,eAAe,WAAW,KAAK,UAAU,6BAA6B,KAAK,WAAW,eAAe,SAAS;AAAA,EACjH;AACF;AA1BsB;AA6BtB,eAAe,oBACbA,MACA,WACA,QACiC;AACjC,QAAM,cAAc,MAAM,gBAAgBA,MAAK,SAAS;AACxD,QAAM,WAAW,cAAc,sBAAsB,WAAW,IAAI;AACpE,QAAM,mBAAmB;AAAA,IACvB,GAAI,UAAU,YAAY,CAAC;AAAA,IAC3B,GAAI,OAAO,YAAY,CAAC;AAAA,EAC1B;AACA,QAAM,WAAW,oBAAoB,OAAO,KAAK,gBAAgB,EAAE,SAAS,IAAI,mBAAmB,UAAU;AAC7G,QAAM,aAAa,OAAO,cAAc,UAAU,cAAc,CAAC;AACjE,QAAM,cAAc,OAAO,eAAe,UAAU,eAAe,CAAC;AACpE,QAAM,SAAiC;AAAA,IACrC;AAAA,IACA,OAAO,OAAO,SAAS,UAAU;AAAA,IACjC,iBAAiB,OAAO,mBAAmB,UAAU;AAAA,IACrD,QAAQ,OAAO,UAAU,UAAU;AAAA,IACnC;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW,OAAO,aAAa,OAAO;AAAA,EACxC;AACA,QAAM,iBAAiBA,MAAK,yBAAyB,MAAM,CAAC;AAC5D,SAAO;AACT;AA1Be;AA4Bf,eAAe,wBAAwBA,MAAU,WAA2D;AAC1G,QAAM,MAAM,MAAM,gBAAgBA,MAAK,SAAS;AAChD,SAAO,MAAM,sBAAsB,GAAG,IAAI;AAC5C;AAHe;AAKf,eAAe,2BAA2BA,MAAU,WAAoD;AACtG,QAAM,MAAM,MAAM,cAAcA,MAAK,SAAS;AAC9C,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,MAAM,kEAAgB;AAAA,EAClC;AACA,SAAO;AAAA,IACL;AAAA,IACA,OAAO;AAAA,IACP,iBAAiB,IAAI,oBAAoB;AAAA,IACzC,QAAQ;AAAA,IACR,YAAY,CAAC;AAAA,IACb,aAAa,CAAC;AAAA,IACd,UAAU;AAAA,IACV,WAAW,IAAI;AAAA,EACjB;AACF;AAfe;AAiBf,SAAS,sBAAsBK,MAAyB;AACtD,MAAI,CAACA,KAAK,QAAO,CAAC;AAClB,MAAI;AACF,WAAO,KAAK,MAAMA,IAAG;AAAA,EACvB,QAAQ;AACN,WAAO,EAAE,OAAOA,KAAI;AAAA,EACtB;AACF;AAPS;AAST,eAAsB,kBACpBL,MACA,QACA,WACA,SAC8B;AAC9B,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,iBAAiB,QAAQ;AACnC,UAAM,IAAI,MAAM,iGAAsB;AAAA,EACxC;AACA,QAAM,MAAM,OAAO;AACnB,QAAM,iBAAiB,QAAQ,eAAe,QAAQ;AACtD,QAAM,cAAc,QAAQ,YAAY,QAAQ,oBAAoB;AACpE,QAAM,QAAQ,sBAAsB,QAAQ,qBAAqB,IAAI;AACrE,QAAM,SAAS,QAAQ,QAAQ,KAAK;AACpC,MAAI,QAAQ;AACV,UAAM,UAAU,MAAM,QAAQ,MAAM,iBAAiB,IAAI,MAAM,oBAAoB,CAAC;AACpF,YAAQ,KAAK,EAAE,QAAQ,WAAW,KAAK,OAAO,CAAC;AAC/C,UAAM,oBAAoB;AAAA,EAC5B;AACA,QAAM,mBAAmB;AACzB,QAAM,mBAAmB;AACzB,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,CAAC,gBAAgB,aAAa,KAAK,UAAU,KAAK,GAAG,KAAK,SAAS;AAAA,EACrE;AACA,QAAM,UAAU,MAAM,cAAcA,MAAK,SAAS;AAClD,MAAI,CAAC,QAAS,OAAM,IAAI,MAAM,kEAAgB;AAC9C,SAAO,cAAc,SAAS,MAAM;AACtC;AAnCsB;AA+CtB,eAAsB,sBACpBA,MACA,QACA,WACA,UACiC;AACjC,QAAM,MAAM,OAAO;AACnB,QAAM,UAAU,MAAM;AAAA,IACpBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,WAAW,MAAM;AAAA,EACpB;AACA,MAAI,SAAS;AACX,UAAM,kBAAkB,KAAK,UAAU;AAAA,MACrC,SAAS,SAAS,WAAW;AAAA,MAC7B,eAAe,SAAS,iBAAiB;AAAA,MACzC,gBAAgB,SAAS,kBAAkB;AAAA,MAC3C,MAAM,SAAS,QAAQ,CAAC;AAAA,MACxB,kBAAkB,SAAS,oBAAoB,CAAC;AAAA,MAChD,gBAAgB,SAAS,kBAAkB;AAAA,IAC7C,CAAC;AACD,UAAM;AAAA,MACJA,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,CAAC,SAAS,UAAU,MAAM,iBAAiB,KAAK,QAAQ,UAAU;AAAA,IACpE;AAAA,EACF;AACA,SAAO,oBAAoBA,MAAK,WAAW;AAAA,IACzC;AAAA,IACA,UAAU;AAAA,MACR,QAAQ,SAAS;AAAA,MACjB,SAAS,SAAS;AAAA,MAClB,eAAe,SAAS;AAAA,MACxB,gBAAgB,SAAS;AAAA,MACzB,MAAM,SAAS;AAAA,MACf,kBAAkB,SAAS;AAAA,MAC3B,gBAAgB,SAAS;AAAA,IAC3B;AAAA,IACA,WAAW;AAAA,EACb,CAAC;AACH;AA7CsB;AA+CtB,eAAsB,mBACpBA,MACA,QACA,MACA,MACA,WACA;AACA,QAAM,UAAU,OAAO,KAAK;AAC5B,QAAM,UAAU,CAAC,6CAA6C;AAC9D,QAAM,SAAgB,CAAC,QAAQ,MAAM;AACrC,MAAI,WAAW;AACb,YAAQ,KAAK,gGAAgG;AAC7G,WAAO,KAAK,QAAQ,WAAW,WAAW,MAAM;AAAA,EAClD;AACA,UAAQ,KAAK,oBAAoB;AACjC,SAAO,KAAK,eAAe,WAAW,eAAe,SAAS;AAC9D,QAAM,cAAc,SAAS,QAAQ,KAAK,OAAO,CAAC;AAElD,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ,4CAA4C,WAAW;AAAA,IACvD;AAAA,EACF;AAEA,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,QAKI,WAAW;AAAA;AAAA;AAAA,IAGf,OAAO,OAAO,CAAC,MAAM,MAAM,CAAC;AAAA,EAC9B;AAEA,QAAM,OAAO,KAAK,IAAI,CAAC,QAAQ,cAAc,KAAK,MAAM,CAAC;AACzD,SAAO,EAAE,MAAM,MAAM,MAAM,OAAO,UAAU,SAAS,EAAE;AACzD;AAvCsB;AAyCtB,eAAsB,gBACpBA,MACA,QACA,QACmC;AACnC,QAAM,MAAM,oBAAI,KAAK;AACrB,QAAM,QAAQ,IAAI,KAAK,GAAG;AAC1B,MAAI,WAAW,QAAQ;AACrB,UAAM,WAAW,MAAM,WAAW,IAAI,CAAC;AAAA,EACzC,WAAW,WAAW,SAAS;AAC7B,UAAM,YAAY,MAAM,YAAY,IAAI,CAAC;AAAA,EAC3C,OAAO;AACL,UAAM,eAAe,MAAM,eAAe,IAAI,CAAC;AAAA,EACjD;AACA,QAAM,WAAW,MAAM,YAAY;AACnC,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,CAAC,QAAQ,QAAQ,QAAQ;AAAA,EAC3B;AAEA,MAAI,YAAY;AAChB,MAAI,YAAY;AAChB,MAAI,WAAW;AACf,MAAI,eAAe;AACnB,QAAM,WAAW,oBAAI,IAAY;AACjC,QAAM,iBAAiB,oBAAI,IAAY;AACvC,MAAI;AAEJ,aAAW,OAAO,MAAM;AACtB,QAAI,CAAC,iBAAiB,IAAI,eAAe,eAAe;AACtD,sBAAgB,IAAI;AAAA,IACtB;AACA,UAAM,YAAY,IAAI,iBAAiB,SAAS,IAAI,gBAAgB,IAAI;AACxE,QAAI,UAAW,UAAS,IAAI,SAAS;AACrC,QAAI,IAAI,WAAW,eAAe,WAAW;AAC3C,mBAAa;AACb,sBAAgB,OAAO,IAAI,oBAAoB,CAAC;AAChD,qBAAe,IAAI,IAAI,KAAK,IAAI,YAAY,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA,IAC1E,WAAW,IAAI,WAAW,eAAe,WAAW;AAClD,mBAAa;AAAA,IACf,WAAW,IAAI,WAAW,eAAe,WAAW;AAClD,kBAAY;AAAA,IACd;AAAA,EACF;AAEA,QAAM,kBAAkB,YAAY,IAAI,eAAe,YAAY;AACnE,QAAM,cAAc,MAAM;AACxB,QAAI,eAAe,SAAS,EAAG,QAAO;AACtC,UAAM,SAAS,oBAAI,KAAK;AACxB,QAAI,SAAS;AACb,eAAS;AACP,YAAM,MAAM,OAAO,YAAY,EAAE,MAAM,GAAG,EAAE;AAC5C,UAAI,eAAe,IAAI,GAAG,GAAG;AAC3B,kBAAU;AACV,eAAO,WAAW,OAAO,WAAW,IAAI,CAAC;AAAA,MAC3C,OAAO;AACL;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT,GAAG;AAEH,SAAO;AAAA,IACL;AAAA,IACA,eAAe,KAAK;AAAA,IACpB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,kBAAkB;AAAA,IAClB;AAAA,IACA;AAAA,IACA,eAAe,SAAS;AAAA,IACxB;AAAA,IACA;AAAA,EACF;AACF;AAlFsB;AAoFtB,eAAsB,qBACpBA,MACA,QACA,OACgC;AAChC,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,CAAC,QAAQ,QAAQ,eAAe,WAAW,OAAO,GAAG,KAAK;AAAA,EAC5D;AACA,SAAO,KAAK,IAAI,CAAC,QAAQ,cAAc,KAAK,MAAM,CAAC;AACrD;AApBsB;AAsBtB,eAAsB,uBACpBA,MACA,WACmC;AACnC,QAAM,MAAM,MAAM,cAAcA,MAAK,SAAS;AAC9C,MAAI,CAAC,IAAK,OAAM,IAAI,MAAM,kEAAgB;AAC1C,QAAM,eAAyC,CAAC;AAChD,eAAa,KAAK;AAAA,IAChB,QAAQ,IAAI;AAAA,IACZ,MAAM,IAAI,aAAa;AAAA,IACvB,cAAc,IAAI,sBAAsB;AAAA,IACxC,MAAM;AAAA,IACN,UAAU,IAAI;AAAA,EAChB,CAAC;AACD,MAAI,IAAI,eAAe;AACrB,iBAAa,KAAK;AAAA,MAChB,QAAQ,IAAI;AAAA,MACZ,MAAM,IAAI,cAAc;AAAA,MACxB,cAAc,IAAI,uBAAuB;AAAA,MACzC,MAAM;AAAA,MACN,UAAU,IAAI;AAAA,IAChB,CAAC;AAAA,EACH;AACA,QAAM,cAAc,MAAM;AAAA,IACxBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,CAAC,WAAW,eAAe,SAAS;AAAA,EACtC;AACA,aAAW,WAAW,aAAa;AACjC,QAAI,QAAQ,YAAY,IAAI,gBAAgB,QAAQ,YAAY,IAAI,eAAe;AACjF;AAAA,IACF;AACA,iBAAa,KAAK;AAAA,MAChB,QAAQ,QAAQ;AAAA,MAChB,MAAM,QAAQ,QAAQ;AAAA,MACtB,cAAc,QAAQ,iBAAiB;AAAA,MACvC,MAAM;AAAA,MACN,UAAU,QAAQ;AAAA,IACpB,CAAC;AAAA,EACH;AACA,SAAO;AACT;AA5CsB;AA8CtB,eAAsB,sBACpBA,MACA,QACA,WACA,iBAAyB,IACO;AAChC,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,iBAAiB,QAAQ;AACnC,UAAM,IAAI,MAAM,iGAAsB;AAAA,EACxC;AACA,QAAM,QAAQ,OAAO,WAAW;AAChC,QAAM,QAAQ,OAAO,SAAS,cAAc,IAAI,KAAK,IAAI,GAAG,cAAc,IAAI;AAC9E,QAAM,MAAM,OAAO;AACnB,QAAM,YAAY,IAAI,KAAK,KAAK,IAAI,IAAI,QAAQ,OAAO,GAAI,EAAE,YAAY;AACzE,QAAM,gBAAgBA,MAAK;AAAA,IACzB,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,iBAAiB;AAAA,IACjB,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,EACX,CAAC;AACD,QAAM,UAAUA,KAAI,gBAAgB;AACpC,QAAM,UAAU,UAAU,GAAG,OAAO,wBAAwB,KAAK,KAAK,wBAAwB,KAAK;AACnG,SAAO,EAAE,WAAW,aAAa,OAAO,WAAW,QAAQ;AAC7D;AA1BsB;AA4BtB,eAAsB,oBACpBA,MACA,QACA,OAC8B;AAC9B,QAAMC,UAAS,MAAM,eAAeD,MAAK,KAAK;AAC9C,MAAI,CAACC,SAAQ;AACX,UAAM,IAAI,MAAM,oFAAmB;AAAA,EACrC;AACA,MAAIA,QAAO,SAAS;AAClB,UAAM,IAAI,MAAM,8EAAkB;AAAA,EACpC;AACA,MAAI,IAAI,KAAKA,QAAO,UAAU,EAAE,QAAQ,IAAI,KAAK,IAAI,GAAG;AACtD,UAAM,IAAI,MAAM,6EAAiB;AAAA,EACnC;AACA,QAAM,MAAM,OAAO;AACnB,QAAM,eAAeD,MAAK,OAAO,QAAQ,GAAG;AAC5C,SAAO,YAAYA,MAAK,QAAQC,QAAO,UAAU;AACnD;AAlBsB;AAoBtB,eAAsB,wBACpBD,MACA,WACA,QACsC;AACtC,QAAM,MAAM,MAAM,qBAAqBA,MAAK,WAAW,MAAM;AAC7D,MAAI,KAAK;AACP,WAAO;AAAA,MACL,gBAAgB,IAAI;AAAA,MACpB,qBAAqB,UAAU,IAAI,YAAY;AAAA,MAC/C,oBAAoB,UAAU,IAAI,WAAW;AAAA,MAC7C,mBAAmB,UAAU,IAAI,UAAU;AAAA,MAC3C,WAAW,IAAI;AAAA,IACjB;AAAA,EACF;AACA,SAAO,EAAE,GAAG,uBAAuB,WAAW,OAAO,EAAE;AACzD;AAhBsB;AAkBtB,eAAsB,2BACpBA,MACA,WACA,QACA,UACsC;AACtC,QAAM,UAAU,MAAM,wBAAwBA,MAAK,WAAW,MAAM;AACpE,QAAM,SAAsC;AAAA,IAC1C,gBAAgB,SAAS,kBAAkB,QAAQ;AAAA,IACnD,qBAAqB,SAAS,uBAAuB,QAAQ;AAAA,IAC7D,oBAAoB,SAAS,sBAAsB,QAAQ;AAAA,IAC3D,mBAAmB,SAAS,qBAAqB,QAAQ;AAAA,IACzD,WAAW,OAAO;AAAA,EACpB;AACA,QAAM,sBAAsBA,MAAK,WAAW,QAAQ,MAAM;AAC1D,SAAO;AACT;AAhBsB;AAkBtB,eAAsB,wBACpBA,MACA,QACA,WACA,SACiC;AACjC,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,iBAAiB,QAAQ;AACnC,UAAM,IAAI,MAAM,oFAAmB;AAAA,EACrC;AACA,QAAM,SAAiC;AAAA,IACrC;AAAA,IACA,QAAQ;AAAA,IACR,aAAa,QAAQ,eAAe;AAAA,IACpC,aAAa,QAAQ,eAAe;AAAA,IACpC,kBAAkB,QAAQ,oBAAoB;AAAA,IAC9C,aAAa;AAAA,IACb,SAAS,QAAQ,WAAW,uBAAuB,QAAQ,QAAQ,KAAK;AAAA,IACxE,WAAW,OAAO;AAAA,EACpB;AACA,QAAM,mBAAmBA,MAAK,WAAW,MAAM;AAC/C,SAAO;AACT;AAtBsB;AAwBtB,eAAsB,qBACpBA,MACA,QACA,WACiC;AACjC,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,iBAAiB,QAAQ;AACnC,UAAM,IAAI,MAAM,oFAAmB;AAAA,EACrC;AACA,QAAM,UAAU,MAAM,kBAAkBA,MAAK,SAAS;AACtD,QAAM,SAAiC;AAAA,IACrC;AAAA,IACA,QAAQ;AAAA,IACR,aAAa,UAAU,UAAU,QAAQ,YAAY,IAAI;AAAA,IACzD,aAAa,UAAU,UAAU,QAAQ,YAAY,IAAI;AAAA,IACzD,kBAAkB,UAAU,UAAU,QAAQ,iBAAiB,IAAI;AAAA,IACnE,aAAa,SAAS,gBAAgB,aAAa,SAAS;AAAA,IAC5D,WAAW,OAAO;AAAA,EACpB;AACA,QAAM,mBAAmBA,MAAK,WAAW,MAAM;AAC/C,SAAO;AACT;AArBsB;AAuBtB,eAAsB,oBACpBA,MACA,WACiC;AACjC,QAAM,SAAS,MAAM,kBAAkBA,MAAK,SAAS;AACrD,MAAI,QAAQ;AACV,WAAO;AAAA,MACL;AAAA,MACA,QAAQ,OAAO;AAAA,MACf,aAAa,UAAU,OAAO,YAAY;AAAA,MAC1C,aAAa,UAAU,OAAO,YAAY;AAAA,MAC1C,kBAAkB,UAAU,OAAO,iBAAiB;AAAA,MACpD,aAAa,OAAO,gBAAgB;AAAA,MACpC,SAAS,OAAO,WAAW;AAAA,MAC3B,WAAW,OAAO;AAAA,IACpB;AAAA,EACF;AACA,SAAO;AAAA,IACL;AAAA,IACA,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,WAAW,OAAO;AAAA,EACpB;AACF;AAzBsB;AA2BtB,eAAsB,kBACpBA,MACA,WACiC;AACjC,QAAMM,UAAS,MAAM,wBAAwBN,MAAK,SAAS;AAC3D,MAAIM,QAAQ,QAAOA;AACnB,SAAO,2BAA2BN,MAAK,SAAS;AAClD;AAPsB;AAStB,eAAsB,qBACpBA,MACA,WACA,WAAmB,WACiB;AACpC,QAAM,MAAM,MAAM,mBAAmBA,MAAK,WAAW,QAAQ;AAC7D,MAAI,KAAK;AACP,WAAO,yBAAyB,GAAG;AAAA,EACrC;AACA,QAAM,MAAM,OAAO;AACnB,QAAM,aAAwC;AAAA,IAC5C;AAAA,IACA;AAAA,IACA,UAAU,CAAC;AAAA,IACX,aAAa;AAAA,EACf;AACA,QAAM,oBAAoBA,MAAK;AAAA,IAC7B,YAAY;AAAA,IACZ;AAAA,IACA,UAAU,KAAK,UAAU,WAAW,QAAQ;AAAA,IAC5C,cAAc;AAAA,IACd,YAAY;AAAA,EACd,CAAC;AACD,SAAO;AACT;AAxBsB;;;AD9nDtB,IAAM,iBAAiB,IAAIO,MAA8C;AACzE,IAAMC,eAAc,KAAe;AAEnC,SAAS,oBAAoB,GAAQ;AACnC,QAAM,OAAO,KAAK,IAAI,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,GAAG,GAAG,CAAC;AAC3D,QAAM,OAAO,KAAK,IAAI,KAAK,IAAI,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,IAAI,GAAG,EAAE,GAAG,CAAC;AAC1E,SAAO,EAAE,MAAM,KAAK;AACtB;AAJS;AAMT,SAAS,eAAe,GAAgB;AACtC,QAAM,YAAY,OAAO,EAAE,IAAI,MAAM,WAAW,CAAC;AACjD,MAAI,CAAC,OAAO,SAAS,SAAS,EAAG,OAAM,IAAI,SAAS,qBAAqB,KAAK,oBAAoB;AAClG,SAAO;AACT;AAJS;AAMT,SAAS,uBAAuB,MAAiC;AAC/D,MAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;AACrC,UAAM,IAAI,SAAS,mBAAmB,KAAK,iBAAiB;AAAA,EAC9D;AACA,QAAM,cAAc,OAAO,KAAK,gBAAgB,WAAW,KAAK,cAAc;AAC9E,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,SAAS,2BAA2B,KAAK,iBAAiB;AAAA,EACtE;AACA,QAAM,iBAAiB,OAAO,KAAK,gBAAgB,WAAW,KAAK,cAAc,OAAO,KAAK,SAAS,WAAW,KAAK,OAAO;AAC7H,QAAM,cAAc,iBAAiB,OAAO,cAAc,EAAE,YAAY,IAAI;AAC5E,QAAM,kBAAkB,OAAO,KAAK,oBAAoB,WACpD,KAAK,kBACL,OAAO,KAAK,aAAa,WACvB,KAAK,WACL;AAEN,QAAM,UAAgC;AAAA,IACpC,OAAO,OAAO,KAAK,UAAU,WAAW,KAAK,QAAQ,OAAO,KAAK,UAAU,WAAW,KAAK,QAAQ;AAAA,IACnG,aAAa,OAAO,KAAK,gBAAgB,WAAW,KAAK,cAAc,OAAO,KAAK,UAAU,WAAW,KAAK,QAAQ;AAAA,IACrH;AAAA,IACA,cAAc,OAAO,KAAK,iBAAiB,WAAW,KAAK,eAAe,OAAO,KAAK,aAAa,WAAW,KAAK,WAAW;AAAA,IAC9H,YAAY,OAAO,KAAK,eAAe,WAAW,KAAK,aAAa,OAAO,KAAK,mBAAmB,WAAW,KAAK,iBAAiB;AAAA,IACpI,kBAAkB,OAAO,KAAK,qBAAqB,WAAW,KAAK,mBAAmB;AAAA,IACtF;AAAA,IACA;AAAA,IACA,iBAAiB,OAAO,KAAK,oBAAoB,WAAW,KAAK,kBAAkB;AAAA,IACnF,aAAa,QAAQ,KAAK,WAAW;AAAA,IACrC,mBAAmB,OAAO,KAAK,sBAAsB,WAAW,KAAK,oBAAoB;AAAA,IACzF,mBAAmB,OAAO,KAAK,sBAAsB,WAAW,KAAK,oBAAoB;AAAA,IACzF,UAAU,OAAO,KAAK,aAAa,YAAY,KAAK,WAAW;AAAA,IAC/D,MAAM,OAAO,KAAK,SAAS,WAAW,KAAK,OAAO;AAAA,IAClD,kBAAkB,OAAO,KAAK,qBAAqB,WAAW,KAAK,mBAAmB;AAAA,IACtF,YAAY,OAAO,KAAK,eAAe,WAAW,KAAK,aAAa;AAAA,IACpE,WAAW,OAAO,KAAK,cAAc,WAAW,KAAK,YAAY;AAAA,IACjE,OAAO,OAAO,KAAK,UAAU,WAAW,KAAK,QAAQ;AAAA,IACrD,UAAU,OAAO,KAAK,aAAa,WAAW,KAAK,WAAW;AAAA,IAC9D,gBAAgB,OAAO,KAAK,mBAAmB,WAAW,KAAK,iBAAiB;AAAA,IAChF,cAAc,OAAO,KAAK,iBAAiB,WAAW,KAAK,eAAe;AAAA,IAC1E,gBAAgB,OAAO,KAAK,mBAAmB,WAAW,KAAK,iBAAiB;AAAA,IAChF,UAAU,OAAO,KAAK,aAAa,WAAW,KAAK,WAAW;AAAA,IAC9D,UAAU,OAAO,KAAK,aAAa,YAAY,KAAK,aAAa,OAAO,KAAK,WAAW;AAAA,EAC1F;AAEA,SAAO;AACT;AA5CS;AA8CT,eAAe,IAAI,KAAKA,YAAW;AAEnC,eAAe,IAAI,KAAK,OAAO,MAAM;AACnC,QAAM,EAAE,MAAM,KAAK,IAAI,oBAAoB,CAAC;AAC5C,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ,KAAK;AACxC,QAAM,SAAS,MAAM,aAAa,EAAE,KAAK,MAAM,MAAM,MAAM;AAC3D,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,eAAe,KAAK,KAAK,OAAO,MAAM;AACpC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,UAAU,uBAAuB,IAAI;AAC3C,QAAM,UAAU,MAAMC,eAAc,EAAE,KAAK,QAAQ,OAAO;AAC1D,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,eAAe,KAAK,oBAAoB,OAAO,MAAM;AACnD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,iBAAiB,OAAO,MAAM,mBAAmB,WAAW,KAAK,iBAAiB;AACxF,QAAM,UAAU,MAAM,YAAY,EAAE,KAAK,QAAQ,WAAW,cAAc;AAC1E,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,eAAe,KAAK,SAAS,OAAO,MAAM;AACxC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,MAAI,OAAO,KAAK,cAAc,UAAU;AACtC,UAAM,IAAI,SAAS,yBAAyB,KAAK,iBAAiB;AAAA,EACpE;AACA,QAAM,UAAU,MAAM,YAAY,EAAE,KAAK,QAAQ;AAAA,IAC/C,WAAW,KAAK;AAAA,IAChB,gBAAgB,OAAO,KAAK,mBAAmB,WAAW,KAAK,iBAAiB;AAAA,EAClF,CAAC;AACD,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,eAAe,OAAO,wBAAwB,OAAO,MAAM;AACzD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,OAAO,EAAE,IAAI,MAAM,WAAW,CAAC;AACjD,MAAI,CAAC,OAAO,SAAS,SAAS,EAAG,OAAM,IAAI,SAAS,qBAAqB,KAAK,oBAAoB;AAClG,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ,KAAK;AACxC,QAAM,cAAc,EAAE,KAAK,QAAQ,WAAW,MAAM;AACpD,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,eAAe,IAAI,gBAAgB,OAAO,MAAM;AAC9C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,EAAE,MAAM,KAAK,IAAI,oBAAoB,CAAC;AAC5C,QAAM,SAAS,MAAM,iBAAiB,EAAE,KAAK,QAAQ,MAAM,IAAI;AAC/D,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,eAAe,IAAI,WAAW,OAAO,MAAM;AACzC,QAAM,EAAE,MAAM,KAAK,IAAI,oBAAoB,CAAC;AAC5C,QAAM,SAAS,MAAM,mBAAmB,EAAE,KAAK,MAAM,IAAI;AACzD,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,eAAe,IAAI,2BAA2B,OAAO,MAAM;AACzD,QAAM,EAAE,MAAM,KAAK,IAAI,oBAAoB,CAAC;AAC5C,QAAM,eAAe,EAAE,IAAI,MAAM,cAAc;AAC/C,QAAM,SAAS,MAAM,uBAAuB,EAAE,KAAK,cAAc,MAAM,IAAI;AAC3E,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,eAAe,IAAI,sBAAsB,OAAO,MAAM;AACpD,QAAM,EAAE,MAAM,KAAK,IAAI,oBAAoB,CAAC;AAC5C,QAAM,cAAc,EAAE,IAAI,MAAM,aAAa;AAC7C,QAAM,SAAS,MAAM,mBAAmB,EAAE,KAAK,aAAa,MAAM,IAAI;AACtE,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,eAAe,IAAI,cAAc,OAAO,MAAM;AAC5C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,EAAE,MAAM,KAAK,IAAI,oBAAoB,CAAC;AAC5C,QAAM,SAAS,MAAM,sBAAsB,EAAE,KAAK,QAAQ,MAAM,IAAI;AACpE,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,eAAe,IAAI,gBAAgB,OAAO,MAAM;AAC9C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,EAAE,MAAM,KAAK,IAAI,oBAAoB,CAAC;AAC5C,QAAM,SAAS,MAAM,iBAAiB,EAAE,KAAK,QAAQ,MAAM,IAAI;AAC/D,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,eAAe,IAAI,YAAY,OAAO,MAAM;AAC1C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,EAAE,MAAM,KAAK,IAAI,oBAAoB,CAAC;AAC5C,QAAM,YAAY,EAAE,IAAI,MAAM,WAAW,KAAK;AAC9C,QAAM,SAAS,MAAM,mBAAmB,EAAE,KAAK,QAAQ,MAAM,MAAM,OAAO,cAAc,WAAW,YAAY,MAAS;AACxH,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,eAAe,IAAI,UAAU,OAAO,MAAM;AACxC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,eAAe,EAAE,IAAI,MAAM,QAAQ,KAAK,SAAS,SAAS,EAAE,YAAY;AAC9E,QAAM,SAAS,gBAAgB,UAAU,gBAAgB,SAAS,cAAc;AAChF,QAAM,QAAQ,MAAM,gBAAgB,EAAE,KAAK,QAAQ,MAAmC;AACtF,SAAO,gBAAgB,GAAG,KAAK;AACjC,CAAC;AAED,eAAe,IAAI,aAAa,OAAO,MAAM;AAC3C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,WAAW,OAAO,EAAE,IAAI,MAAM,OAAO,KAAK,GAAG;AACnD,QAAM,QAAQ,KAAK,IAAI,GAAG,KAAK,IAAI,OAAO,SAAS,QAAQ,IAAI,WAAW,GAAG,EAAE,CAAC;AAChF,QAAM,WAAW,MAAM,qBAAqB,EAAE,KAAK,QAAQ,KAAK;AAChE,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,eAAe,IAAI,aAAa,OAAO,MAAM;AAC3C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,QAAQ,EAAE,IAAI,MAAM,WAAW,MAAK,oBAAI,KAAK,GAAE,YAAY;AACjE,QAAM,MAAM,EAAE,IAAI,MAAM,SAAS,KAAK,WAAW,CAAC;AAClD,QAAM,WAAW,MAAM,gBAAgB,EAAE,KAAK,QAAQ,OAAO,GAAG;AAChE,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,eAAe,IAAI,6BAA6B,OAAO,MAAM;AAC3D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,WAAW,MAAM,wBAAwB,EAAE,KAAK,WAAW,MAAM;AACvE,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,eAAe,MAAM,6BAA6B,OAAO,MAAM;AAC7D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,WAAW,MAAM,2BAA2B,EAAE,KAAK,WAAW,QAAQ,IAA4C;AACxH,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,eAAe,KAAK,wBAAwB,OAAO,MAAM;AACvD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAE,EAAE;AACjD,QAAM,UAAU,MAAM,sBAAsB,EAAE,KAAK,QAAQ,WAAW,QAAQ,CAAC,CAAC;AAChF,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,eAAe,MAAM,0BAA0B,OAAO,MAAM;AAC1D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,UAAU,MAAM,kBAAkB,EAAE,KAAK,QAAQ,WAAW;AAAA,IAChE,aAAa,OAAO,MAAM,gBAAgB,WAAW,KAAK,cAAc;AAAA,IACxE,UAAU,OAAO,MAAM,aAAa,WAAW,KAAK,WAAW;AAAA,IAC/D,QAAQ,OAAO,MAAM,WAAW,WAAW,KAAK,SAAS;AAAA,EAC3D,CAAC;AACD,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,eAAe,KAAK,sBAAsB,OAAO,MAAM;AACrD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,iBAAiB,OAAO,MAAM,kBAAkB,EAAE;AACxD,QAAM,SAAS,MAAM,sBAAsB,EAAE,KAAK,QAAQ,WAAW,OAAO,SAAS,cAAc,IAAI,iBAAiB,EAAE;AAC1H,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,eAAe,KAAK,kBAAkB,OAAO,MAAM;AACjD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,QAAQ,OAAO,MAAM,UAAU,WAAW,KAAK,QAAQ;AAC7D,MAAI,CAAC,MAAO,OAAM,IAAI,SAAS,4BAA4B,KAAK,iBAAiB;AACjF,QAAM,UAAU,MAAM,oBAAoB,EAAE,KAAK,QAAQ,KAAK;AAC9D,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,eAAe,KAAK,yBAAyB,OAAO,MAAM;AACxD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,SAAS,MAAM,wBAAwB,EAAE,KAAK,QAAQ,WAAW,QAAQ,CAAC,CAAC;AACjF,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,eAAe,KAAK,8BAA8B,OAAO,MAAM;AAC7D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,SAAS,MAAM,qBAAqB,EAAE,KAAK,QAAQ,SAAS;AAClE,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,eAAe,IAAI,yBAAyB,OAAO,MAAM;AACvD,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,SAAS,MAAM,oBAAoB,EAAE,KAAK,SAAS;AACzD,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,eAAe,IAAI,4BAA4B,OAAO,MAAM;AAC1D,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,eAAe,MAAM,uBAAuB,EAAE,KAAK,SAAS;AAClE,SAAO,gBAAgB,GAAG,YAAY;AACxC,CAAC;AAED,eAAe,IAAI,uBAAuB,OAAO,MAAM;AACrD,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,UAAU,MAAM,kBAAkB,EAAE,KAAK,SAAS;AACxD,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,eAAe,IAAI,0BAA0B,OAAO,MAAM;AACxD,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU,KAAK;AAC5C,QAAM,aAAa,MAAM,qBAAqB,EAAE,KAAK,WAAW,OAAO,aAAa,WAAW,WAAW,SAAS;AACnH,SAAO,gBAAgB,GAAG,UAAU;AACtC,CAAC;AAED,eAAe,IAAI,eAAe,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,UAAU,MAAM,eAAe,EAAE,KAAK,WAAW,MAAM;AAC7D,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,eAAe,KAAK,qBAAqB,OAAO,MAAM;AACpD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,aAAa,EAAE,KAAK,QAAQ,SAAS;AAC3C,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,eAAe,KAAK,mBAAmB,OAAO,MAAM;AAClD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,WAAW,EAAE,KAAK,QAAQ,WAAW;AAAA,IACzC,UAAU,OAAO,MAAM,aAAa,WAAW,KAAK,WAAW;AAAA,IAC/D,OAAO,OAAO,MAAM,UAAU,WAAW,KAAK,QAAQ;AAAA,IACtD,QAAQ,OAAO,MAAM,WAAW,WAAW,KAAK,SAAS;AAAA,EAC3D,CAAC;AACD,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,eAAe,KAAK,sBAAsB,OAAO,MAAM;AACrD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,SAAS,OAAO,MAAM,WAAW,WAAW,KAAK,SAAS;AAChE,QAAM,cAAc,EAAE,KAAK,QAAQ,WAAW,MAAM;AACpD,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,eAAe,OAAO,eAAe,OAAO,MAAM;AAChD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,eAAe,CAAC;AAClC,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ,KAAK;AACxC,QAAM,cAAc,EAAE,KAAK,QAAQ,WAAW,OAAO,WAAW,WAAW,SAAS,MAAS;AAC7F,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,SAAS,WAAW,MAAsB;AACxC,QAAM,IAAI,oBAAI,KAAK;AACnB,IAAE,WAAW,EAAE,WAAW,IAAI,IAAI;AAClC,SAAO,EAAE,YAAY;AACvB;AAJS;AAMT,IAAO,mBAAQ;;;AEpaf;AAAA;AAAA;AAAAC;AAIA;;;ACJA;AAAA;AAAA;AAAAC;AAOA;AAEA,IAAM,oBAAoB;AAC1B,IAAM,gBAAgB;AAwFtB,SAASC,UAAiB;AACxB,UAAO,oBAAI,KAAK,GAAE,YAAY;AAChC;AAFS,OAAAA,SAAA;AAIT,SAAS,kBAAkB,MAAuB;AAChD,MAAI,CAAC,QAAQ,OAAO,MAAM,IAAI,EAAG,QAAO;AACxC,SAAO,KAAK,IAAI,GAAG,KAAK,IAAI,MAAM,aAAa,CAAC;AAClD;AAHS;AAKT,SAAS,cAAc,MAAuB;AAC5C,MAAI,CAAC,QAAQ,OAAO,MAAM,IAAI,KAAK,OAAO,EAAG,QAAO;AACpD,SAAO;AACT;AAHS;AAKT,SAAS,UAAa,OAA4C;AAChE,MAAI,CAAC,MAAO,QAAO;AACnB,MAAI;AACF,WAAO,KAAK,MAAM,KAAK;AAAA,EACzB,SAASC,SAAO;AACd,WAAO;AAAA,EACT;AACF;AAPS;AAST,SAAS,mBAAmB,KAA0C;AACpE,QAAM,YAAY,IAAI,cAAc;AACpC,QAAM,WAAW,IAAI,YAAY;AACjC,QAAM,UAAU,YAAY,IAAI,KAAK,SAAS,IAAI,oBAAI,KAAK,IAAI;AAC/D,QAAM,eAAe,YAAY;AACjC,QAAM,mBAAmB,UAA+B,IAAI,iBAAiB;AAC7E,SAAO;AAAA,IACL,QAAQ,IAAI;AAAA,IACZ,gBAAgB,IAAI;AAAA,IACpB,MAAM,IAAI;AAAA,IACV,OAAO,IAAI;AAAA,IACX,SAAS,IAAI;AAAA,IACb,WAAW,IAAI,cAAc;AAAA,IAC7B,YAAY,UAA+B,IAAI,WAAW,KAAK;AAAA,IAC/D,UAAU,IAAI,aAAa;AAAA,IAC3B,SAAS,IAAI,YAAY;AAAA,IACzB,QAAQ,IAAI;AAAA,IACZ;AAAA,IACA,UAAU,IAAI,YAAY;AAAA,IAC1B,aAAa,IAAI,gBAAgB;AAAA,IACjC,QAAQ,IAAI,WAAW;AAAA,IACvB,QAAQ,IAAI,WAAW;AAAA,IACvB;AAAA,IACA,WAAW,IAAI;AAAA,IACf,cAAc,QAAQ,IAAI,iBAAiB,CAAC;AAAA,IAC5C,cAAc,IAAI,kBAAkB;AAAA,IACpC,YAAY,IAAI,eAAe;AAAA,IAC/B,kBAAkB,IAAI,qBAAqB;AAAA,IAC3C,UAAU,QAAQ,IAAI,aAAa,CAAC;AAAA,IACpC,WAAW,QAAQ,IAAI,cAAc,CAAC;AAAA,IACtC,SAAS,QAAQ,IAAI,YAAY,CAAC;AAAA,IAClC;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAnCS;AAqCT,SAAS,WAAWC,SAAkD;AACpE,SAAO;AAAA,IACL,IAAIA,QAAO;AAAA,IACX,MAAMA,QAAO;AAAA,IACb,UAAUA,QAAO;AAAA,IACjB,OAAOA,QAAO;AAAA,IACd,SAASA,QAAO;AAAA,IAChB,SAASA,QAAO;AAAA,IAChB,QAAQA,QAAO,WAAW;AAAA,IAC1B,QAAQA,QAAO;AAAA,IACf,UAAUA,QAAO;AAAA,IACjB,WAAWA,QAAO;AAAA,IAClB,QAAQA,QAAO;AAAA,IACf,aAAaA,QAAO;AAAA,IACpB,WAAWA,QAAO;AAAA,IAClB,UAAUA,QAAO;AAAA,IACjB,MAAMA,QAAO,cAAc;AAAA,IAC3B,UAAUA,QAAO;AAAA,IACjB,SAASA,QAAO;AAAA,IAChB,cAAcA,QAAO;AAAA,IACrB,SAASA,QAAO;AAAA,EAClB;AACF;AAtBS;AAwBT,SAAS,iBAAiB,KAAoD;AAC5E,SAAO;AAAA,IACL,sBAAsB,QAAQ,IAAI,qBAAqB;AAAA,IACvD,aAAa,QAAQ,IAAI,YAAY;AAAA,IACrC,cAAc,QAAQ,IAAI,aAAa;AAAA,IACvC,YAAY,QAAQ,IAAI,WAAW;AAAA,IACnC,sBAAsB,QAAQ,IAAI,qBAAqB;AAAA,IACvD,kBAAkB,QAAQ,IAAI,iBAAiB;AAAA,IAC/C,uBAAuB,QAAQ,IAAI,sBAAsB;AAAA,IACzD,mBAAmB,QAAQ,IAAI,kBAAkB;AAAA,IACjD,wBAAwB,QAAQ,IAAI,wBAAwB;AAAA,IAC5D,qBAAqB,QAAQ,IAAI,oBAAoB;AAAA,IACrD,wBAAwB,QAAQ,IAAI,uBAAuB;AAAA,IAC3D,mBAAmB,QAAQ,IAAI,mBAAmB;AAAA,IAClD,iBAAiB,IAAI,qBAAqB;AAAA,IAC1C,eAAe,IAAI,mBAAmB;AAAA,IACtC,UAAU,IAAI,YAAY;AAAA,IAC1B,sBAAsB,IAAI,yBAAyB;AAAA,IACnD,eAAe,QAAQ,IAAI,cAAc;AAAA,IACzC,iBAAiB,IAAI,oBAAoB;AAAA,IACzC,YAAY,IAAI,eAAe;AAAA,EACjC;AACF;AAtBS;AA8BT,SAAS,uBAAuBC,MAAwC;AACtE,MAAI,CAACA,QAAO,OAAOA,SAAQ,UAAU;AACnC,WAAO;AAAA,EACT;AACA,QAAMD,UAASC;AACf,QAAM,YAAY,OAAOD,QAAO,SAAS,WAAWA,QAAO,KAAK,YAAY,IAAI;AAChF,MAAI,CAAC,CAAC,SAAS,UAAU,SAAS,EAAE,SAAS,SAAS,GAAG;AACvD,WAAO;AAAA,EACT;AACA,QAAM,gBAAgBA,QAAO,aAAa,SAAY,OAAOA,QAAO,QAAQ,IAAI;AAChF,QAAM,WACJ,OAAO,SAAS,aAAa,KAAK,kBAAkB,UAAa,gBAAgB,IAC7E,KAAK,MAAM,aAAa,IACxB;AACN,QAAM,UAAU,OAAOA,QAAO,YAAY,WAAWA,QAAO,UAAU;AACtE,QAAME,QAAO,OAAOF,QAAO,SAAS,WAAWA,QAAO,OAAO;AAC7D,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA,MAAAE;AAAA,EACF;AACF;AAtBS;AAwBT,SAAS,QAAQC,OAAY,MAAoB;AAC/C,QAAM,SAAS,IAAI,KAAKA,MAAK,QAAQ,CAAC;AACtC,SAAO,WAAW,OAAO,WAAW,IAAI,IAAI;AAC5C,SAAO;AACT;AAJS;AAMT,SAAS,UAAUA,OAAY,QAAsB;AACnD,QAAM,SAAS,IAAI,KAAKA,MAAK,QAAQ,CAAC;AACtC,QAAM,cAAc,OAAO,WAAW;AACtC,SAAO,YAAY,OAAO,YAAY,IAAI,MAAM;AAChD,SAAO,OAAO,WAAW,IAAI,aAAa;AACxC,WAAO,WAAW,OAAO,WAAW,IAAI,CAAC;AAAA,EAC3C;AACA,SAAO;AACT;AARS;AAUT,SAAS,mBAAmBA,OAAY,UAA6B,UAAsB;AACzF,QAAM,aAAa,SAAS;AAC5B,MAAI,CAAC,YAAY;AACf,IAAAA,MAAK;AAAA,MACH,SAAS,YAAY;AAAA,MACrB,SAAS,cAAc;AAAA,MACvB,SAAS,cAAc;AAAA,MACvB,SAAS,mBAAmB;AAAA,IAC9B;AACA;AAAA,EACF;AACA,QAAM,QAAQ,WAAW,MAAM,kCAAkC;AACjE,MAAI,CAAC,OAAO;AACV,IAAAA,MAAK;AAAA,MACH,SAAS,YAAY;AAAA,MACrB,SAAS,cAAc;AAAA,MACvB,SAAS,cAAc;AAAA,MACvB,SAAS,mBAAmB;AAAA,IAC9B;AACA;AAAA,EACF;AACA,QAAM,QAAQ,OAAO,MAAM,CAAC,CAAC;AAC7B,QAAM,UAAU,OAAO,MAAM,CAAC,CAAC;AAC/B,QAAM,UAAU,MAAM,CAAC,IAAI,OAAO,MAAM,CAAC,CAAC,IAAI;AAC9C,EAAAA,MAAK,YAAY,OAAO,SAAS,SAAS,CAAC;AAC7C;AAzBS;AA2BT,SAAS,uBAAuB,YAA2B,UAA6B,WAAgC;AACtH,MAAI,CAAC,YAAY;AACf,WAAO;AAAA,EACT;AACA,QAAM,OAAO,IAAI,KAAK,UAAU;AAChC,MAAI,OAAO,MAAM,KAAK,QAAQ,CAAC,GAAG;AAChC,WAAO;AAAA,EACT;AAEA,QAAM,WAAW,KAAK,IAAI,GAAG,SAAS,YAAY,CAAC;AACnD,MAAI,OAAO,IAAI,KAAK,KAAK,QAAQ,CAAC;AAElC,QAAM,UAAU,6BAAM;AACpB,YAAQ,SAAS,MAAM;AAAA,MACrB,KAAK;AACH,eAAO,QAAQ,MAAM,QAAQ;AAC7B;AAAA,MACF,KAAK;AACH,eAAO,QAAQ,MAAM,WAAW,CAAC;AACjC;AAAA,MACF,KAAK;AACH,eAAO,UAAU,MAAM,QAAQ;AAC/B;AAAA,MACF;AACE,eAAO,QAAQ,MAAM,QAAQ;AAC7B;AAAA,IACJ;AAAA,EACF,GAfgB;AAiBhB,UAAQ;AACR,qBAAmB,MAAM,UAAU,IAAI;AAEvC,QAAM,UAAU,SAAS,UAAU,IAAI,KAAK,SAAS,OAAO,IAAI;AAEhE,SAAO,QAAQ,WAAW;AACxB,YAAQ;AACR,uBAAmB,MAAM,UAAU,IAAI;AACvC,QAAI,WAAW,OAAO,SAAS;AAC7B,aAAO;AAAA,IACT;AAAA,EACF;AAEA,MAAI,WAAW,OAAO,SAAS;AAC7B,WAAO;AAAA,EACT;AAEA,SAAO,KAAK,YAAY;AAC1B;AA/CS;AAgDT,eAAe,iBAAiBC,MAAU,QAAwC;AAChF,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AAEA,MAAI,UAAU;AACZ,WAAO;AAAA,EACT;AAEA,QAAM,MAAMN,QAAO;AACnB,QAAM;AAAA,IACJM,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAuBA,CAAC,QAAQ,KAAK,GAAG;AAAA,EACnB;AAEA,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AACA,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,MAAM,2FAAqB;AAAA,EACvC;AACA,SAAO;AACT;AAjDe;AAmDf,eAAe,uBAAuBA,MAAU,QAAmC;AACjF,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AACA,SAAO,KAAK,IAAI,CAAC,QAAQ,IAAI,KAAK;AACpC;AAPe;AASf,eAAsB,mBAAmBA,MAAU,SAAiE;AAClH,QAAM,MAAMN,QAAO;AACnB,QAAM,aAAa,QAAQ,aAAa,KAAK,UAAU,QAAQ,UAAU,IAAI;AAC7E,QAAM,oBAAoB,QAAQ,oBAAoB,KAAK,UAAU,QAAQ,iBAAiB,IAAI;AAClG,QAAM,mBAAmB,QAAQ,mBAAmB,KAAK,UAAU,QAAQ,gBAAgB,IAAI;AAC/F,QAAM,SAAS,QAAQ,WAAW,QAAQ,cAAc,cAAc;AAEtE,QAAM;AAAA,IACJM,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA6BA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ,aAAa;AAAA,MACrB;AAAA,MACA,QAAQ,YAAY;AAAA,MACpB,QAAQ,WAAW;AAAA,MACnB;AAAA,MACA,QAAQ,YAAY;AAAA,MACpB,QAAQ,YAAY;AAAA,MACpB,QAAQ,eAAe;AAAA,MACvB,QAAQ,aAAa;AAAA,MACrB,QAAQ,iBAAiB,QAAQ,IAAI;AAAA,MACrC,QAAQ,gBAAgB;AAAA,MACxB,QAAQ,cAAc;AAAA,MACtB;AAAA,MACA;AAAA,MACA,QAAQ,oBAAoB;AAAA,MAC5B;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA,EACF;AAEA,QAAM,iBAAiB,OAAQ,KAAa,MAAM,CAAC;AACnD,MAAI,CAAC,gBAAgB;AACnB,UAAM,IAAI,MAAM,kGAAuB;AAAA,EACzC;AAEA,SAAO,oBAAoBA,MAAK,cAAc;AAChD;AA1EsB;AA4EtB,eAAsB,oBAAoBA,MAAU,gBAAqD;AACvG,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,cAAc;AAAA,EACjB;AACA,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,MAAM,kEAAgB;AAAA,EAClC;AACA,SAAO,mBAAmB,GAAG;AAC/B;AAVsB;AAYtB,eAAsB,kBACpBA,MACA,QACA,UAAuB,CAAC,GACmF;AAC3G,QAAM,OAAO,cAAc,QAAQ,IAAI;AACvC,QAAM,OAAO,kBAAkB,QAAQ,IAAI;AAC3C,QAAM,UAAU,OAAO,KAAK;AAE5B,QAAM,QAAkB,CAAC,aAAa;AACtC,QAAM,SAA8B,CAAC,MAAM;AAE3C,MAAI,QAAQ,UAAU;AACpB,UAAM,KAAK,4BAA4B;AACvC,WAAO,KAAK,QAAQ,QAAQ;AAAA,EAC9B;AAEA,MAAI,QAAQ,YAAY;AACtB,UAAM,KAAK,mBAAmB;AAAA,EAChC,WAAW,QAAQ,QAAQ;AACzB,UAAM,KAAK,YAAY;AACvB,WAAO,KAAK,QAAQ,MAAM;AAAA,EAC5B;AAEA,QAAM,cAAc,SAAS,MAAM,KAAK,OAAO,CAAC;AAEhD,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ,+CAA+C,WAAW;AAAA,IAC1D;AAAA,EACF;AAEA,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA,QACI,WAAW;AAAA;AAAA;AAAA,IAGf,CAAC,GAAG,QAAQ,MAAM,MAAM;AAAA,EAC1B;AAEA,QAAM,UAAU,KAAK,IAAI,kBAAkB;AAC3C,QAAM,cAAc,MAAM,eAAeA,MAAK,MAAM;AAEpD,SAAO;AAAA,IACL,MAAM,QAAQ,IAAI,UAAU;AAAA,IAC5B;AAAA,IACA;AAAA,IACA,OAAO,UAAU,SAAS;AAAA,IAC1B;AAAA,EACF;AACF;AAnDsB;AAqDtB,eAAsB,eAAeA,MAAU,QAAiC;AAC9E,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AACA,SAAO,KAAK,SAAS;AACvB;AAPsB;AAStB,eAAsB,WAAWA,MAAU,QAAgB,gBAAwB;AACjF,QAAMJ,UAAS,MAAM,oBAAoBI,MAAK,cAAc;AAC5D,MAAIJ,QAAO,WAAW,QAAQ;AAC5B,UAAM,IAAI,MAAM,6GAAwB;AAAA,EAC1C;AACA,QAAM,MAAMF,QAAO;AACnB,QAAM;AAAA,IACJM,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,CAAC,KAAK,KAAK,cAAc;AAAA,EAC3B;AACF;AAbsB;AAetB,eAAsB,cAAcA,MAAU,QAAgB;AAC5D,QAAM,MAAMN,QAAO;AACnB,QAAM;AAAA,IACJM,KAAI;AAAA,IACJ;AAAA;AAAA,IAEA,CAAC,KAAK,KAAK,MAAM;AAAA,EACnB;AACF;AARsB;AAoBtB,eAAsB,mBAAmBC,MAAU,QAAgB,gBAAwB;AACzF,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,gBAAgB,MAAM;AAAA,EACzB;AACF;AANsB;AAQtB,eAAsB,uBAAuBA,MAAU,QAAgB;AACrE,QAAM,QAAQA,KAAI,IAAI,+CAA+C,CAAC,MAAM,CAAC;AAC/E;AAFsB;AAItB,eAAsB,yBAAyBA,MAAU,QAAgB,iBAA0C;AACjH,QAAM,MAAM,gBAAgB,OAAO,CAAC,OAAO,OAAO,SAAS,EAAE,CAAC;AAC9D,MAAI,CAAC,IAAI,QAAQ;AACf;AAAA,EACF;AACA,QAAM,eAAe,IAAI,IAAI,MAAM,GAAG,EAAE,KAAK,IAAI;AACjD,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ,uEAAuE,YAAY;AAAA,IACnF,CAAC,QAAQ,GAAG,GAAG;AAAA,EACjB;AACF;AAXsB;AAatB,eAAsB,4BAA4BA,MAAU,QAAgB,gBAA0C;AACpH,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,gBAAgB,MAAM;AAAA,EACzB;AACA,MAAI,CAAC,KAAK;AACR,WAAO;AAAA,EACT;AACA,MAAI,IAAI,WAAW,aAAa;AAC9B,UAAM,mBAAmBA,MAAK,QAAQ,cAAc;AACpD,WAAO;AAAA,EACT;AAEA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,IACA,CAACC,QAAO,GAAG,cAAc;AAAA,EAC3B;AACA,SAAO;AACT;AApBsB;AAsBtB,eAAsB,2BAA2BD,MAAU,QAAqF;AAC9I,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,CAAC,MAAM;AAAA,EACT;AAEA,SAAO,KAAK,IAAI,CAAC,SAAS;AAAA,IACxB,UAAU,IAAI,YAAY;AAAA,IAC1B,OAAO,OAAO,IAAI,SAAS,CAAC;AAAA,IAC5B,QAAQ,OAAO,IAAI,UAAU,CAAC;AAAA,EAChC,EAAE;AACJ;AAnBsB;AAqBtB,eAAsB,2BACpBA,MACA,QACA,MACA,MACoF;AACpF,QAAM,iBAAiB,cAAc,IAAI;AACzC,QAAM,iBAAiB,kBAAkB,IAAI;AAC7C,QAAM,UAAU,iBAAiB,KAAK;AAEtC,QAAM,cAAc;AACpB,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ,+CAA+C,WAAW;AAAA,IAC1D,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA,QACI,WAAW;AAAA;AAAA;AAAA,IAGf,CAAC,QAAQ,gBAAgB,MAAM;AAAA,EACjC;AAEA,SAAO;AAAA,IACL,MAAM,KAAK,IAAI,kBAAkB;AAAA,IACjC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO,WAAW,OAAO,SAAS,SAAS,CAAC,IAAI;AAAA,EAClD;AACF;AAhCsB;AAkCtB,eAAsB,8BAA8BA,MAAU,QAAgB,QAAqC;AACjH,QAAM,aAAa,OAChB,IAAI,CAAC,UAAU,OAAO,KAAK,EAAE,KAAK,EAAE,YAAY,CAAC,EACjD,OAAO,CAAC,UAAU,MAAM,SAAS,CAAC;AAErC,MAAI,CAAC,WAAW,QAAQ;AACtB,WAAO,uBAAuBA,MAAK,MAAM;AAAA,EAC3C;AAEA,QAAM,MAAMC,QAAO;AACnB,aAAW,SAAS,IAAI,IAAI,UAAU,GAAG;AACvC,UAAM;AAAA,MACJD,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA,MAGA,CAAC,QAAQ,OAAO,KAAK,GAAG;AAAA,IAC1B;AAAA,EACF;AAEA,SAAO,uBAAuBA,MAAK,MAAM;AAC3C;AArBsB;AAuBtB,eAAsB,kCAAkCA,MAAU,QAAgB,QAAqC;AACrH,QAAM,aAAa,OAChB,IAAI,CAAC,UAAU,OAAO,KAAK,EAAE,KAAK,EAAE,YAAY,CAAC,EACjD,OAAO,CAAC,UAAU,MAAM,SAAS,CAAC;AAErC,MAAI,CAAC,WAAW,QAAQ;AACtB,WAAO,uBAAuBA,MAAK,MAAM;AAAA,EAC3C;AAEA,QAAM,eAAe,WAAW,IAAI,MAAM,GAAG,EAAE,KAAK,IAAI;AACxD,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ,+EAA+E,YAAY;AAAA,IAC3F,CAAC,QAAQ,GAAG,UAAU;AAAA,EACxB;AAEA,SAAO,uBAAuBA,MAAK,MAAM;AAC3C;AAjBsB;AAmBtB,eAAsB,qBACpBA,MACA,QACA,SAW6B;AAC7B,SAAO,mBAAmBA,MAAK;AAAA,IAC7B;AAAA,IACA,MAAM,QAAQ,QAAQ;AAAA,IACtB,OAAO,QAAQ;AAAA,IACf,SAAS,QAAQ;AAAA,IACjB,YAAY,QAAQ,QAAQ;AAAA,IAC5B,aAAa,QAAQ;AAAA,IACrB,QAAQ;AAAA,IACR,kBAAkB,QAAQ,aAAa;AAAA,IACvC,UAAU,QAAQ,YAAY;AAAA,IAC9B,UAAU,QAAQ,YAAY;AAAA,IAC9B,kBAAkB,QAAQ,oBAAoB;AAAA,EAChD,CAAC;AACH;AA5BsB;AA8BtB,eAAsB,qBAAqBA,MAAU,QAAgB,MAAkD;AACrH,SAAO,mBAAmBA,MAAK;AAAA,IAC7B;AAAA,IACA,MAAM,QAAQ;AAAA,IACd,OAAO;AAAA,IACP,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,EACZ,CAAC;AACH;AATsB;AAWtB,eAAsB,wBACpBA,MACA,iBACA,YACA,SAUF;AACE,QAAM,aAAa,WAChB,IAAI,CAAC,OAAO,OAAO,EAAE,EAAE,KAAK,CAAC,EAC7B,OAAO,CAAC,OAAO,GAAG,SAAS,CAAC;AAE/B,MAAI,YAAsB,CAAC;AAC3B,QAAM,SAAS,WAAW,KAAK,CAAC,OAAO,GAAG,YAAY,MAAM,KAAK;AACjE,MAAI,QAAQ;AACV,UAAM,OAAO,MAAM;AAAA,MACjBA,KAAI;AAAA,MACJ;AAAA,IACF;AACA,gBAAY,KAAK,IAAI,CAAC,QAAQ,IAAI,OAAO;AAAA,EAC3C,OAAO;AACL,gBAAY,MAAM,KAAK,IAAI,IAAI,WAAW,OAAO,CAAC,OAAO,GAAG,YAAY,MAAM,KAAK,CAAC,CAAC;AAAA,EACvF;AAEA,MAAI,CAAC,UAAU,QAAQ;AACrB,WAAO,EAAE,WAAW,EAAE;AAAA,EACxB;AAEA,QAAM,OAAO,UAAU;AAAA,IAAI,CAAC,aAC1B,mBAAmBA,MAAK;AAAA,MACtB,QAAQ;AAAA,MACR,MAAM,QAAQ,QAAQ;AAAA,MACtB,OAAO,QAAQ;AAAA,MACf,SAAS,QAAQ;AAAA,MACjB,YAAY,QAAQ,QAAQ;AAAA,MAC5B,WAAW,QAAQ,aAAa;AAAA,MAChC,UAAU,QAAQ,YAAY;AAAA,MAC9B,UAAU,QAAQ,YAAY;AAAA,MAC9B,cAAc;AAAA,IAChB,CAAC,EAAE,MAAM,CAACE,YAAU;AAClB,cAAQ,MAAM,sDAAsDA,OAAK;AACzE,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAEA,QAAM,UAAU,MAAM,QAAQ,IAAI,IAAI;AACtC,QAAM,YAAY,QAAQ,OAAO,CAACC,YAAWA,YAAW,IAAI,EAAE;AAC9D,SAAO,EAAE,UAAU;AACrB;AAvDsB;AAyDtB,eAAsB,8BAA8BH,MAAU,QAAQ,KAAsB;AAC1F,QAAM,YAAYC,QAAO;AACzB,QAAM,YAAY,IAAI,KAAK,SAAS;AACpC,QAAM,OAAO,MAAM;AAAA,IACjBD,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,WAAW,KAAK;AAAA,EACnB;AAEA,MAAI,YAAY;AAEhB,aAAW,OAAO,MAAM;AACtB,QAAI;AACF,YAAM;AAAA,QACJA,KAAI;AAAA,QACJ;AAAA,QACA,CAAC,WAAW,WAAW,IAAI,eAAe;AAAA,MAC5C;AACA,mBAAa;AAEb,YAAM,WAAW,uBAAuB,UAAmC,IAAI,iBAAiB,CAAC;AACjG,UAAI,UAAU;AACZ,cAAM,kBAAkB,uBAAuB,IAAI,gBAAgB,IAAI,YAAY,UAAU,SAAS;AACtG,YAAI,iBAAiB;AACnB,gBAAM,aAAa,UAA+B,IAAI,WAAW;AACjE,gBAAM,oBAAoB,UAA+B,IAAI,kBAAkB;AAC/E,gBAAM,mBAAmBA,MAAK;AAAA,YAC5B,QAAQ,IAAI;AAAA,YACZ,MAAM,IAAI;AAAA,YACV,OAAO,IAAI;AAAA,YACX,SAAS,IAAI;AAAA,YACb,WAAW,IAAI,cAAc;AAAA,YAC7B,YAAY,cAAc;AAAA,YAC1B,UAAU,IAAI,aAAa;AAAA,YAC3B,SAAS,IAAI,YAAY;AAAA,YACzB,UAAU,IAAI,YAAY;AAAA,YAC1B,UAAU,IAAI,YAAY;AAAA,YAC1B,aAAa;AAAA,YACb,QAAQ;AAAA,YACR,kBAAkB;AAAA,YAClB,cAAc,IAAI,kBAAkB,OAAO,QAAQ,IAAI,aAAa,IAAI;AAAA,YACxE,cAAc,IAAI,kBAAkB;AAAA,YACpC,YAAY,IAAI,eAAe;AAAA,YAC/B,mBAAmB,qBAAqB;AAAA,YACxC,kBAAkB,IAAI,qBAAqB;AAAA,UAC7C,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF,SAASE,SAAO;AACd,cAAQ,MAAM,4DAA4DA,OAAK;AAAA,IACjF;AAAA,EACF;AAEA,SAAO;AACT;AAtDsB;AAwDtB,eAAsB,2BAA2BF,MAAU,QAAyD;AAClH,QAAM,MAAM,MAAM,iBAAiBA,MAAK,MAAM;AAC9C,QAAM,OAAO,iBAAiB,GAAG;AACjC,QAAM,qBAAqB,MAAM,uBAAuBA,MAAK,MAAM;AACnE,SAAO;AAAA,IACL,GAAG;AAAA,IACH;AAAA,EACF;AACF;AARsB;AAUtB,eAAsB,8BACpBA,MACA,QACA,UACyC;AACzC,QAAM,iBAAiBA,MAAK,MAAM;AAClC,QAAM,MAAMC,QAAO;AACnB,QAAM,aAAuB,CAAC;AAC9B,QAAM,SAA8B,CAAC;AAErC,QAAM,gBAA6D;AAAA,IACjE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,aAAW,SAAS,eAAe;AACjC,QAAI,SAAS,KAAK,MAAM,QAAW;AACjC,YAAM,SAAS,MAAM,QAAQ,UAAU,CAAC,MAAM,IAAI,EAAE,YAAY,CAAC,EAAE;AACnE,iBAAW,KAAK,GAAG,MAAM,MAAM;AAC/B,aAAO,KAAK,SAAS,KAAK,IAAI,IAAI,CAAC;AAAA,IACrC;AAAA,EACF;AAEA,MAAI,SAAS,oBAAoB,QAAW;AAC1C,eAAW,KAAK,uBAAuB;AACvC,WAAO,KAAK,SAAS,mBAAmB,IAAI;AAAA,EAC9C;AACA,MAAI,SAAS,kBAAkB,QAAW;AACxC,eAAW,KAAK,qBAAqB;AACrC,WAAO,KAAK,SAAS,iBAAiB,IAAI;AAAA,EAC5C;AACA,MAAI,SAAS,aAAa,QAAW;AACnC,eAAW,KAAK,cAAc;AAC9B,WAAO,KAAK,SAAS,YAAY,IAAI;AAAA,EACvC;AACA,MAAI,SAAS,yBAAyB,QAAW;AAC/C,eAAW,KAAK,2BAA2B;AAC3C,WAAO,KAAK,SAAS,wBAAwB,IAAI;AAAA,EACnD;AACA,MAAI,SAAS,oBAAoB,QAAW;AAC1C,eAAW,KAAK,sBAAsB;AACtC,WAAO,KAAK,SAAS,mBAAmB,IAAI;AAAA,EAC9C;AACA,MAAI,SAAS,eAAe,QAAW;AACrC,eAAW,KAAK,iBAAiB;AACjC,WAAO,KAAK,SAAS,cAAc,IAAI;AAAA,EACzC;AAEA,MAAI,WAAW,SAAS,GAAG;AACzB,eAAW,KAAK,gBAAgB;AAChC,WAAO,KAAK,KAAK,MAAM;AACvB,UAAM;AAAA,MACJD,KAAI;AAAA,MACJ,uCAAuC,WAAW,KAAK,IAAI,CAAC;AAAA,MAC5D;AAAA,IACF;AAAA,EACF;AAEA,SAAO,2BAA2BA,MAAK,MAAM;AAC/C;AAtEsB;AAwEtB,eAAsB,qBAAqBA,MAAU,QAA4C;AAC/F,QAAM,SAAS,MAAM;AAAA,IACnBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,YAAW,oBAAI,KAAK,GAAE,YAAY,EAAE,MAAM,GAAG,EAAE;AACrD,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA;AAAA,IAEA,CAAC,QAAQ,QAAQ;AAAA,EACnB;AAEA,QAAM,eAAe,MAAM;AAAA,IACzBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,aAAqC,CAAC;AAC5C,aAAW,OAAO,cAAc;AAC9B,eAAW,IAAI,YAAY,eAAe,IAAI,IAAI;AAAA,EACpD;AAEA,SAAO;AAAA,IACL,OAAO,QAAQ,SAAS;AAAA,IACxB,QAAQ,QAAQ,UAAU;AAAA,IAC1B,MAAM,QAAQ,QAAQ;AAAA,IACtB,OAAO,UAAU,SAAS;AAAA,IAC1B;AAAA,EACF;AACF;AAxCsB;AA0CtB,eAAsB,kBAAkBA,MAAU,QAAgB,OAAe,YAAqB;AACpG,QAAM,MAAMC,QAAO;AACnB,QAAM;AAAA,IACJD,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,CAAC,QAAQ,OAAO,cAAc,OAAO,KAAK,GAAG;AAAA,EAC/C;AACF;AATsB;AAWtB,eAAsB,oBAAoBA,MAAU,QAAgB,OAAe;AACjF,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,OAAO,MAAM;AAAA,EAChB;AACF;AANsB;AAQtB,eAAsB,+BACpBA,MACA,QACA,YACA,WACA,UAA8C,CAAC,GAC/C;AACA,QAAMI,SAAQ,QAAQ,SAAS,YAAY,UAAU;AACrD,QAAM,UAAU,QAAQ,WAAW;AACnC,SAAO,mBAAmBJ,MAAK;AAAA,IAC7B;AAAA,IACA,MAAM,QAAQ,QAAQ;AAAA,IACtB,OAAAI;AAAA,IACA;AAAA,IACA;AAAA,IACA,mBAAmB,aAAa;AAAA,IAChC,GAAG;AAAA,EACL,CAAC;AACH;AAlBsB;AAwBtB,eAAsB,iCAAiCJ,MAA2B;AAChF,MAAI;AAEF,UAAM,QAAQ,MAAM;AAAA,MAClBA,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWF;AAEA,QAAIK,SAAQ;AACZ,eAAW,QAAQ,OAAO;AACxB,YAAM,WAAW,KAAK,gBAAgB,KAAK,QAAQ;AACnD,UAAI;AACF,cAAM,mBAAmBL,MAAK;AAAA,UAC5B,QAAQ,KAAK;AAAA,UACb,MAAM;AAAA,UACN,OAAO;AAAA,UACP,SAAS,GAAG,QAAQ;AAAA,UACpB,UAAU;AAAA,UACV,UAAU;AAAA,UACV,WAAW;AAAA,UACX,YAAY;AAAA,YACV,cAAc;AAAA,UAChB;AAAA,QACF,CAAC;AACD,QAAAK;AAAA,MACF,SAASH,SAAO;AACd,gBAAQ,MAAM,4CAA4C,KAAK,OAAO,KAAKA,OAAK;AAAA,MAClF;AAAA,IACF;AAEA,WAAOG;AAAA,EACT,SAASH,SAAO;AACd,YAAQ,MAAM,kDAAkDA,OAAK;AACrE,WAAO;AAAA,EACT;AACF;AA7CsB;AAmDtB,eAAsB,gCAAgCF,MAA2B;AAC/E,MAAI;AAEF,UAAM,eAAe,MAAM;AAAA,MAMzBA,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUF;AAEA,QAAIK,SAAQ;AACZ,UAAM,aAAa;AAEnB,eAAW,YAAY,cAAc;AACnC,YAAM,WAAW,SAAS,gBAAgB,SAAS,QAAQ;AAC3D,YAAM,oBAAoB,OAAO,SAAS,aAAa;AACvD,YAAM,kBAAkB,KAAK,MAAO,oBAAoB,aAAc,GAAG;AAEzE,UAAI,UAAU;AACd,UAAI,WAAW;AAEf,UAAI,mBAAmB,IAAI;AACzB,kBAAU,GAAG,QAAQ,0GAA6B,iBAAiB,IAAI,UAAU;AACjF,mBAAW;AAAA,MACb,WAAW,mBAAmB,IAAI;AAChC,kBAAU,GAAG,QAAQ,gHAA8B,iBAAiB,IAAI,UAAU;AAAA,MACpF,OAAO;AACL,kBAAU,GAAG,QAAQ,uJAAuC,iBAAiB,IAAI,UAAU;AAAA,MAC7F;AAEA,UAAI;AACF,cAAM,mBAAmBL,MAAK;AAAA,UAC5B,QAAQ,SAAS;AAAA,UACjB,MAAM;AAAA,UACN,OAAO;AAAA,UACP,SAAS;AAAA,UACT,UAAU;AAAA,UACV;AAAA,UACA,WAAW;AAAA,UACX,YAAY;AAAA,YACV,UAAU;AAAA,YACV,iBAAiB;AAAA,YACjB,YAAY;AAAA,YACZ;AAAA,UACF;AAAA,QACF,CAAC;AACD,QAAAK;AAAA,MACF,SAASH,SAAO;AACd,gBAAQ,MAAM,2CAA2C,SAAS,OAAO,KAAKA,OAAK;AAAA,MACrF;AAAA,IACF;AAEA,WAAOG;AAAA,EACT,SAASH,SAAO;AACd,YAAQ,MAAM,iDAAiDA,OAAK;AACpE,WAAO;AAAA,EACT;AACF;AArEsB;;;ADhiCtB,IAAM,sBAAsB,IAAII,MAA8C;AAC9E,IAAMC,eAAc,KAAe;AAEnC,SAAS,aAAa,OAAgD;AACpE,MAAI,UAAU,OAAW,QAAO;AAChC,QAAM,UAAU,MAAM,YAAY;AAClC,MAAI,CAAC,QAAQ,KAAK,OAAO,GAAG,EAAE,SAAS,OAAO,EAAG,QAAO;AACxD,MAAI,CAAC,SAAS,KAAK,MAAM,GAAG,EAAE,SAAS,OAAO,EAAG,QAAO;AACxD,SAAO;AACT;AANS;AAQT,oBAAoB,IAAI,KAAKA,YAAW;AAExC,oBAAoB,IAAI,KAAK,OAAO,MAAM;AACxC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,OAAO,OAAO,EAAE,IAAI,MAAM,MAAM,CAAC,KAAK;AAC5C,QAAM,OAAO,OAAO,EAAE,IAAI,MAAM,MAAM,CAAC,KAAK;AAC5C,QAAM,aAAa,aAAa,EAAE,IAAI,MAAM,YAAY,CAAC,KAAK;AAC9D,QAAM,SAAS,aAAa,EAAE,IAAI,MAAM,QAAQ,CAAC;AAEjD,MAAI;AACJ,MAAI,WAAW,KAAM,UAAS;AAAA,WACrB,WAAW,MAAO,UAAS;AAEpC,QAAM,SAAS,MAAM,kBAAkB,EAAE,KAAK,QAAQ;AAAA,IACpD;AAAA,IACA;AAAA,IACA,UAAU,EAAE,IAAI,MAAM,UAAU,KAAK,EAAE,IAAI,MAAM,MAAM,KAAK;AAAA,IAC5D;AAAA,IACA;AAAA,EACF,CAAC;AAED,SAAO,gBAAgB,GAAG;AAAA,IACxB,eAAe,OAAO;AAAA,IACtB,aAAa,OAAO;AAAA,IACpB,YAAY;AAAA,MACV,MAAM,OAAO;AAAA,MACb,MAAM,OAAO;AAAA,MACb,OAAO,OAAO;AAAA,MACd,YAAY,KAAK,KAAK,OAAO,QAAQ,OAAO,IAAI;AAAA,IAClD;AAAA,EACF,CAAC;AACH,CAAC;AAED,oBAAoB,IAAI,WAAW,OAAO,MAAM;AAC9C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,SAAS,MAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,MAAM,GAAG,MAAM,IAAI,YAAY,KAAK,CAAC;AAC7F,SAAO,gBAAgB,GAAG,EAAE,eAAe,OAAO,MAAM,aAAa,OAAO,YAAY,CAAC;AAC3F,CAAC;AAED,oBAAoB,IAAI,iBAAiB,OAAO,MAAM;AACpD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAMC,SAAQ,MAAM,eAAe,EAAE,KAAK,MAAM;AAChD,SAAO,gBAAgB,GAAG,EAAE,aAAaA,OAAM,CAAC;AAClD,CAAC;AAED,oBAAoB,IAAI,eAAe,OAAO,MAAM;AAClD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,aAAa,MAAM,2BAA2B,EAAE,KAAK,MAAM;AACjE,SAAO,gBAAgB,GAAG,UAAU;AACtC,CAAC;AAED,oBAAoB,IAAI,YAAY,OAAO,MAAM;AAC/C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,OAAO,KAAK,IAAI,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,GAAG,GAAG,CAAC;AAC3D,QAAM,OAAO,KAAK,IAAI,KAAK,IAAI,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAC3E,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU,KAAK;AAC5C,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ,KAAK;AACxC,QAAM,kBAAkB,EAAE,IAAI,MAAM,YAAY;AAChD,QAAM,aAAa,OAAO,oBAAoB,WAC1C,CAAC,QAAQ,GAAG,EAAE,SAAS,gBAAgB,YAAY,CAAC,IACpD;AACJ,QAAM,SAAS,MAAM,kBAAkB,EAAE,KAAK,QAAQ;AAAA,IACpD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,oBAAoB,IAAI,cAAc,OAAO,MAAM;AACjD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,OAAO,KAAK,IAAI,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,GAAG,GAAG,CAAC;AAC3D,QAAM,OAAO,KAAK,IAAI,KAAK,IAAI,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAC3E,QAAM,SAAS,MAAM,2BAA2B,EAAE,KAAK,QAAQ,MAAM,IAAI;AACzE,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,oBAAoB,IAAI,uBAAuB,OAAO,MAAM;AAC1D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU;AACvC,QAAM,OAAO,OAAO,EAAE,IAAI,MAAM,MAAM,CAAC,KAAK;AAC5C,QAAM,OAAO,OAAO,EAAE,IAAI,MAAM,MAAM,CAAC,KAAK;AAC5C,QAAM,SAAS,MAAM,kBAAkB,EAAE,KAAK,QAAQ,EAAE,MAAM,MAAM,SAAS,CAAC;AAC9E,SAAO,gBAAgB,GAAG;AAAA,IACxB,eAAe,OAAO;AAAA,IACtB,YAAY;AAAA,MACV,MAAM,OAAO;AAAA,MACb,MAAM,OAAO;AAAA,MACb,OAAO,OAAO;AAAA,MACd,YAAY,KAAK,KAAK,OAAO,QAAQ,OAAO,IAAI;AAAA,IAClD;AAAA,EACF,CAAC;AACH,CAAC;AAED,oBAAoB,IAAI,oBAAoB,OAAO,MAAM;AACvD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,iBAAiB,OAAO,EAAE,IAAI,MAAM,gBAAgB,CAAC;AAC3D,MAAI,CAAC,OAAO,SAAS,cAAc,EAAG,OAAM,IAAI,SAAS,0BAA0B,KAAK,oBAAoB;AAC5G,QAAMC,UAAS,MAAM,oBAAoB,EAAE,KAAK,cAAc;AAC9D,MAAIA,WAAUA,QAAO,kBAAkBA,QAAO,mBAAmB,gBAAgB;AAC/E,UAAM,IAAI,SAAS,oEAAkB,KAAK,wBAAwB;AAAA,EACpE;AACA,MAAIA,WAAUA,QAAO,WAAW,QAAQ;AACtC,UAAM,IAAI,SAAS,6DAAgB,KAAK,wBAAwB;AAAA,EAClE;AACA,SAAO,gBAAgB,GAAGA,OAAM;AAClC,CAAC;AAED,oBAAoB,KAAK,KAAK,OAAO,MAAM;AACzC,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,SAAS,OAAO,KAAK,WAAW,WAAW,KAAK,SAAS,EAAE,IAAI,QAAQ;AAC7E,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,sBAAsB,KAAK,iBAAiB;AAC5E,MAAI,CAAC,KAAK,SAAS,CAAC,KAAK,WAAW,CAAC,KAAK,MAAM;AAC9C,UAAM,IAAI,SAAS,qCAAqC,KAAK,iBAAiB;AAAA,EAChF;AACA,QAAMA,UAAS,MAAM,mBAAmB,EAAE,KAAK;AAAA,IAC7C;AAAA,IACA,MAAM,KAAK;AAAA,IACX,OAAO,KAAK;AAAA,IACZ,SAAS,KAAK;AAAA,IACd,WAAW,KAAK;AAAA,IAChB,YAAY,KAAK;AAAA,IACjB,UAAU,KAAK;AAAA,IACf,SAAS,KAAK;AAAA,IACd,UAAU,KAAK;AAAA,IACf,UAAU,KAAK;AAAA,IACf,aAAa,KAAK;AAAA,IAClB,WAAW,KAAK;AAAA,IAChB,cAAc,KAAK;AAAA,IACnB,cAAc,KAAK;AAAA,IACnB,YAAY,KAAK;AAAA,IACjB,mBAAmB,KAAK;AAAA,IACxB,kBAAkB,KAAK;AAAA,EACzB,CAAC;AACD,SAAO,gBAAgB,GAAGA,OAAM;AAClC,CAAC;AAED,oBAAoB,KAAK,aAAa,OAAO,MAAM;AACjD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,eAAgB,KAAa,gBAAgB;AACnD,QAAM,cAAc,OAAQ,KAAa,gBAAgB,WACpD,KAAa,cACd,OAAO,cAAc,gBAAgB,WACnC,aAAa,cACb;AACN,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,SAAS,2BAA2B,KAAK,iBAAiB;AAAA,EACtE;AACA,QAAMA,UAAS,MAAM,qBAAqB,EAAE,KAAK,QAAQ;AAAA,IACvD,OAAO,cAAc,SAAS;AAAA,IAC9B,SAAS,cAAc,WAAW,cAAc,WAAW;AAAA,IAC3D,MAAM,cAAc,QAAQ;AAAA,IAC5B,MAAM,cAAc,QAAQ,cAAc,cAAc;AAAA,IACxD;AAAA,IACA,WAAW,cAAc,aAAc,KAAa,aAAa;AAAA,IACjE,UAAU,cAAc;AAAA,IACxB,UAAU,cAAc,YAAY;AAAA,IACpC,kBAAkB,cAAc,oBAAoB;AAAA,EACtD,CAAC;AACD,SAAO,gBAAgB,GAAGA,OAAM;AAClC,CAAC;AAED,oBAAoB,KAAK,cAAc,OAAO,MAAM;AAClD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,SAAS,MAAM,QAAS,KAAa,MAAM,IAAK,KAAa,SAAS,CAAC;AAC7E,QAAM,UAAU,MAAM,8BAA8B,EAAE,KAAK,QAAQ,MAAM;AACzE,SAAO,gBAAgB,GAAG,EAAE,QAAQ,QAAQ,CAAC;AAC/C,CAAC;AAED,oBAAoB,KAAK,gBAAgB,OAAO,MAAM;AACpD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,SAAS,MAAM,QAAS,KAAa,MAAM,IAAK,KAAa,SAAS,CAAC;AAC7E,QAAM,UAAU,MAAM,kCAAkC,EAAE,KAAK,QAAQ,MAAM;AAC7E,SAAO,gBAAgB,GAAG,EAAE,QAAQ,QAAQ,CAAC;AAC/C,CAAC;AAED,oBAAoB,KAAK,yBAAyB,OAAO,MAAM;AAC7D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,aAAa,EAAE,IAAI,MAAM,YAAY;AAC3C,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAMA,UAAS,MAAM,+BAA+B,EAAE,KAAK,QAAQ,YAAY,KAAK,WAAW;AAAA,IAC7F,MAAM,KAAK;AAAA,IACX,OAAO,KAAK;AAAA,IACZ,SAAS,KAAK;AAAA,IACd,WAAW,KAAK;AAAA,IAChB,YAAY,KAAK;AAAA,EACnB,CAAC;AACD,SAAO,gBAAgB,GAAGA,OAAM;AAClC,CAAC;AAED,oBAAoB,KAAK,SAAS,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAMA,UAAS,MAAM,qBAAqB,EAAE,KAAK,QAAQ,OAAQ,KAAa,SAAS,WAAY,KAAa,OAAO,IAAI;AAC3H,SAAO,gBAAgB,GAAGA,OAAM;AAClC,CAAC;AAED,oBAAoB,KAAK,WAAW,OAAO,MAAM;AAC/C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,eAAgB,KAAa,gBAAgB;AACnD,QAAM,aAAa,MAAM,QAAS,KAAa,UAAU,IAAK,KAAa,aAAa,CAAC;AACzF,QAAM,SAAS,MAAM,wBAAwB,EAAE,KAAK,QAAQ,YAAY;AAAA,IACtE,OAAO,cAAc,SAAS;AAAA,IAC9B,SAAS,cAAc,WAAW,cAAc,WAAW;AAAA,IAC3D,MAAM,cAAc,QAAQ;AAAA,IAC5B,WAAW,cAAc,aAAa;AAAA,IACtC,UAAU,cAAc,YAAY;AAAA,IACpC,UAAU,cAAc,YAAY;AAAA,IACpC,MAAM,cAAc,QAAQ,cAAc,cAAc;AAAA,EAC1D,CAAC;AACD,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,oBAAoB,MAAM,yBAAyB,OAAO,MAAM;AAC9D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,iBAAiB,OAAO,EAAE,IAAI,MAAM,gBAAgB,CAAC;AAC3D,MAAI,CAAC,OAAO,SAAS,cAAc,EAAG,OAAM,IAAI,SAAS,0BAA0B,KAAK,oBAAoB;AAC5G,QAAM,WAAW,EAAE,KAAK,QAAQ,cAAc;AAC9C,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,oBAAoB,MAAM,aAAa,OAAO,MAAM;AAClD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,cAAc,EAAE,KAAK,MAAM;AACjC,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,oBAAoB,OAAO,UAAU,OAAO,MAAM;AAChD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,SAAoB,MAAM,QAAS,KAAa,eAAe,IAChE,KAAa,kBACd,MAAM,QAAS,KAAa,GAAG,IAC5B,KAAa,MACd,MAAM,QAAQ,IAAI,IAChB,OACA,CAAC;AACT,QAAM,MAAM,OACT,IAAI,CAAC,UAAkB,OAAO,KAAK,CAAC,EACpC,OAAO,CAAC,OAAqB,OAAO,SAAS,EAAE,CAAC;AACnD,QAAM,yBAAyB,EAAE,KAAK,QAAQ,GAAG;AACjD,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,oBAAoB,OAAO,8BAA8B,OAAO,MAAM;AACpE,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,iBAAiB,OAAO,EAAE,IAAI,MAAM,gBAAgB,CAAC;AAC3D,MAAI,CAAC,OAAO,SAAS,cAAc,GAAG;AACpC,UAAM,IAAI,SAAS,0BAA0B,KAAK,oBAAoB;AAAA,EACxE;AACA,QAAM,YAAY,MAAM,4BAA4B,EAAE,KAAK,QAAQ,cAAc;AACjF,MAAI,CAAC,WAAW;AACd,UAAM,IAAI,SAAS,iFAAqB,KAAK,kCAAkC;AAAA,EACjF;AACA,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,oBAAoB,OAAO,oBAAoB,OAAO,MAAM;AAC1D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,iBAAiB,OAAO,EAAE,IAAI,MAAM,gBAAgB,CAAC;AAC3D,MAAI,CAAC,OAAO,SAAS,cAAc,EAAG,OAAM,IAAI,SAAS,0BAA0B,KAAK,oBAAoB;AAC5G,QAAM,mBAAmB,EAAE,KAAK,QAAQ,cAAc;AACtD,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,oBAAoB,OAAO,QAAQ,OAAO,MAAM;AAC9C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,uBAAuB,EAAE,KAAK,MAAM;AAC1C,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,oBAAoB,IAAI,aAAa,OAAO,MAAM;AAChD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,QAAQ,MAAM,2BAA2B,EAAE,KAAK,MAAM;AAC5D,SAAO,gBAAgB,GAAG,KAAK;AACjC,CAAC;AAED,SAAS,+BAA+B,MAAwD;AAC9F,QAAM,UAAmC,CAAC;AAE1C,QAAM,aAAsC;AAAA,IAC1C,CAAC,wBAAwB,sBAAsB;AAAA,IAC/C,CAAC,wBAAwB,eAAe;AAAA,IACxC,CAAC,eAAe,aAAa;AAAA,IAC7B,CAAC,eAAe,mBAAmB;AAAA,IACnC,CAAC,gBAAgB,cAAc;AAAA,IAC/B,CAAC,gBAAgB,oBAAoB;AAAA,IACrC,CAAC,cAAc,YAAY;AAAA,IAC3B,CAAC,cAAc,kBAAkB;AAAA,IACjC,CAAC,wBAAwB,sBAAsB;AAAA,IAC/C,CAAC,oBAAoB,8BAA8B;AAAA,IACnD,CAAC,yBAAyB,2BAA2B;AAAA,IACrD,CAAC,qBAAqB,0BAA0B;AAAA,IAChD,CAAC,uBAAuB,qBAAqB;AAAA,IAC7C,CAAC,0BAA0B,wBAAwB;AAAA,IACnD,CAAC,qBAAqB,mBAAmB;AAAA,IACzC,CAAC,iBAAiB,eAAe;AAAA,EACnC;AAEA,aAAW,CAAC,WAAW,SAAS,KAAK,YAAY;AAC/C,QAAI,OAAO,UAAU,eAAe,KAAK,MAAM,SAAS,GAAG;AACzD,cAAQ,SAAS,IAAI,QAAS,KAAa,SAAS,CAAC;AAAA,IACvD;AAAA,EACF;AAEA,MAAI,OAAO,KAAK,eAAe,YAAY,KAAK,eAAe,MAAM;AACnE,UAAM,QAAQ,KAAK;AACnB,QAAI,MAAM,UAAU,OAAW,SAAQ,kBAAkB,MAAM,SAAS;AACxE,QAAI,MAAM,QAAQ,OAAW,SAAQ,gBAAgB,MAAM,OAAO;AAAA,EACpE;AAEA,MAAI,KAAK,oBAAoB,OAAW,SAAQ,kBAAkB,KAAK,mBAAmB;AAC1F,MAAI,KAAK,kBAAkB,OAAW,SAAQ,gBAAgB,KAAK,iBAAiB;AAEpF,MAAI,KAAK,sBAAsB,OAAW,SAAQ,oBAAoB,KAAK,qBAAqB;AAChG,MAAI,KAAK,aAAa,OAAW,SAAQ,WAAW,KAAK,YAAY;AACrE,MAAI,KAAK,yBAAyB,OAAW,SAAQ,uBAAuB,KAAK,wBAAwB;AACzG,MAAI,KAAK,oBAAoB,OAAW,SAAQ,kBAAkB,KAAK,mBAAmB;AAC1F,MAAI,KAAK,eAAe,OAAW,SAAQ,aAAa,KAAK,cAAc;AAE3E,SAAO;AACT;AA5CS;AA8CT,oBAAoB,MAAM,aAAa,OAAO,MAAM;AAClD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,UAAU,+BAA+B,IAA+B;AAC9E,QAAM,QAAQ,MAAM,8BAA8B,EAAE,KAAK,QAAQ,OAAO;AACxE,SAAO,gBAAgB,GAAG,KAAK;AACjC,CAAC;AAED,oBAAoB,IAAI,UAAU,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,QAAQ,MAAM,qBAAqB,EAAE,KAAK,MAAM;AACtD,SAAO,gBAAgB,GAAG,KAAK;AACjC,CAAC;AAED,oBAAoB,KAAK,eAAe,OAAO,MAAM;AACnD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,QAAQ,EAAE,IAAI,MAAM,OAAO,KAAK,KAAK;AAC3C,MAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACvC,UAAM,IAAI,SAAS,qBAAqB,KAAK,iBAAiB;AAAA,EAChE;AACA,QAAM,aAAc,EAAE,IAAI,MAAM,YAAY,KAAK,KAAK,cAAc;AACpE,QAAM,kBAAkB,EAAE,KAAK,QAAQ,OAAO,UAAU;AACxD,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,oBAAoB,OAAO,eAAe,OAAO,MAAM;AACrD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,QAAQ,EAAE,IAAI,MAAM,OAAO,KAAK,KAAK;AAC3C,MAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACvC,UAAM,IAAI,SAAS,qBAAqB,KAAK,iBAAiB;AAAA,EAChE;AACA,QAAM,oBAAoB,EAAE,KAAK,QAAQ,KAAK;AAC9C,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,IAAO,wBAAQ;;;AElbf;AAAA;AAAA;AAAAC;AAIA;;;ACJA;AAAA;AAAA;AAAAC;AAEA;;;ACFA;AAAA;AAAA;AAAAC;AAIA,IAAM,eAAe;AACrB,IAAMC,uBAAsB,KAAK;AAEjC,SAAS,SAASC,MAAwB;AACxC,SAAO,IAAI,aAAaA,KAAI,OAAO,cAAcD,oBAAmB;AACtE;AAFS;AAIT,SAAS,kBACP,cACuC;AACvC,SAAO,eAAe,aAAa,IAAI,CAAC,iBAAiB,EAAE,GAAG,YAAY,EAAE,IAAI;AAClF;AAJS;AAMT,SAAS,eAAeE,SAAgD;AACtE,SAAO;AAAA,IACL,GAAGA;AAAA,IACH,SAAS;AAAA,IACT,cAAc,kBAAkBA,QAAO,YAAY;AAAA,EACrD;AACF;AANS;AAQT,eAAsB,sBACpBD,MACAC,SACe;AACf,QAAM,QAAQ,SAASD,IAAG;AAC1B,QAAM,MAAM,IAAIC,QAAO,IAAI,eAAeA,OAAM,GAAG;AAAA,IACjD,KAAKF;AAAA,IACL,MAAM,CAAC,WAAWE,QAAO,EAAE,EAAE;AAAA,EAC/B,CAAC;AACH;AATsB;AAWtB,eAAsB,sBACpBD,MACA,WACoC;AACpC,QAAM,QAAQ,SAASA,IAAG;AAC1B,QAAME,UAAS,MAAM,MAAM,IAAwB,SAAS;AAC5D,MAAI,CAACA,SAAQ;AACX,WAAO;AAAA,EACT;AACA,SAAO;AAAA,IACL,GAAGA;AAAA,IACH,cAAc,kBAAkBA,QAAO,YAAY;AAAA,EACrD;AACF;AAbsB;AAetB,eAAsB,4BAA4BF,MAAU,WAAkC;AAC5F,QAAM,QAAQ,SAASA,IAAG;AAC1B,QAAM,MAAM,OAAO,SAAS;AAC9B;AAHsB;;;ACnDtB;AAAA;AAAA;AAAAG;AAEA,IAAM,oBAAoB;AAC1B,IAAM,gBAAgB;AACtB,IAAM,gBAAgB;AACtB,IAAM,yBAAyB,KAAK,KAAK,KAAK;AAC9C,IAAM,qBAAqB,KAAK,KAAK;AACrC,IAAM,aAAa;AAoBnB,SAAS,cAAc,WAAmB,QAAwB;AAChE,SAAO,GAAG,iBAAiB,IAAI,SAAS,IAAI,MAAM;AACpD;AAFS;AAIT,SAAS,UAAU,QAAwB;AACzC,SAAO,GAAG,aAAa,IAAI,MAAM;AACnC;AAFS;AAIT,SAAS,UAAU,QAAwB;AACzC,SAAO,GAAG,aAAa,IAAI,MAAM;AACnC;AAFS;AAIT,eAAsB,eACpBC,MACA,WACA,QACA,YACe;AACf,QAAMC,UAA2B;AAAA,IAC/B;AAAA,IACA;AAAA,IACA;AAAA,IACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,EACpC;AAEA,QAAMD,KAAI,MAAM,IAAI,cAAc,WAAW,MAAM,GAAG,KAAK,UAAUC,OAAM,GAAG;AAAA,IAC5E,eAAe;AAAA,EACjB,CAAC;AACH;AAhBsB;AAkBtB,eAAsB,cACpBD,MACA,WACA,QACkC;AAClC,QAAME,OAAM,MAAMF,KAAI,MAAM,IAAI,cAAc,WAAW,MAAM,GAAG,EAAE,MAAM,OAAO,CAAC;AAClF,SAAQE,QAAmC;AAC7C;AAPsB;AAStB,eAAsB,iBAAiBF,MAAU,WAAmB,QAA+B;AACjG,QAAMA,KAAI,MAAM,OAAO,cAAc,WAAW,MAAM,CAAC;AACzD;AAFsB;AAItB,eAAsB,iBAAiBA,MAAU,QAAgB,WAAkC;AACjG,QAAM,MAAM,UAAU,MAAM;AAC5B,QAAM,WAAY,MAAMA,KAAI,MAAM,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC;AAC3D,QAAMG,OAAM,IAAI,IAAI,UAAU,YAAY,CAAC,CAAC;AAC5C,EAAAA,KAAI,IAAI,SAAS;AACjB,QAAMF,UAA+B;AAAA,IACnC;AAAA,IACA,UAAU,MAAM,KAAKE,IAAG;AAAA,IACxB,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,EACpC;AACA,QAAMH,KAAI,MAAM,IAAI,KAAK,KAAK,UAAUC,OAAM,GAAG,EAAE,eAAe,mBAAmB,CAAC;AACxF;AAXsB;AAatB,eAAsB,oBAAoBD,MAAU,QAAgB,WAAkC;AACpG,QAAM,MAAM,UAAU,MAAM;AAC5B,QAAM,WAAY,MAAMA,KAAI,MAAM,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC;AAC3D,MAAI,CAAC,UAAU;AACb;AAAA,EACF;AACA,QAAMG,OAAM,IAAI,IAAI,SAAS,QAAQ;AACrC,EAAAA,KAAI,OAAO,SAAS;AACpB,QAAMF,UAA+B;AAAA,IACnC;AAAA,IACA,UAAU,MAAM,KAAKE,IAAG;AAAA,IACxB,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,EACpC;AACA,MAAIF,QAAO,SAAS,WAAW,GAAG;AAChC,UAAMD,KAAI,MAAM,OAAO,GAAG;AAAA,EAC5B,OAAO;AACL,UAAMA,KAAI,MAAM,IAAI,KAAK,KAAK,UAAUC,OAAM,GAAG,EAAE,eAAe,mBAAmB,CAAC;AAAA,EACxF;AACF;AAlBsB;AA0BtB,eAAsB,iBAAiBG,MAAU,QAAgB,WAAkC;AACjG,QAAM,MAAM,UAAU,MAAM;AAC5B,QAAM,WAAY,MAAMA,KAAI,MAAM,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC;AAC3D,QAAM,UAAU,YAAY,CAAC,GAAG,OAAO,CAAC,OAAO,OAAO,SAAS;AAC/D,SAAO,QAAQ,SAAS;AACxB,QAAM,UAAU,OAAO,MAAM,GAAG,UAAU;AAC1C,QAAMA,KAAI,MAAM,IAAI,KAAK,KAAK,UAAU,OAAO,GAAG,EAAE,eAAe,mBAAmB,CAAC;AACzF;AAPsB;;;AF/BtB,IAAM,eAAe;AAAA,EACnB,WAAW;AAAA,EACX,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,WAAW;AACb;AAEA,IAAM,qBAAqB;AAAA,EACzB,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AACV;AAEA,SAASC,UAAiB;AACxB,UAAO,oBAAI,KAAK,GAAE,YAAY;AAChC;AAFS,OAAAA,SAAA;AAIT,SAAS,cAAsB;AAC7B,SAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,GAAG,CAAC,EAAE,YAAY;AAChE;AAFS;AAIT,SAAS,gBAAgB,KAAsB,eAA0C,CAAC,GAAG,eAA4C;AACvI,QAAM,WAAW,IAAI,cAAc,OAAO,SAAY,OAAO,IAAI,SAAS,MAAM;AAChF,QAAM,sBAAsB,OAAO,IAAI,wBAAwB,CAAC;AAChE,QAAM,kBAAkB,IAAI,qBAAqB,OAAO,OAAO,IAAI,gBAAgB,IAAI;AACvF,QAAM,SAAS,IAAI,UAAU,aAAa;AAC1C,QAAM,OAAO,IAAI,eACb,IAAI,aACD,MAAM,GAAG,EACT,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,EACnB,OAAO,OAAO,IACjB;AAEJ,SAAO;AAAA,IACL,IAAI,IAAI;AAAA,IACR,OAAO,IAAI;AAAA,IACX,aAAa,IAAI,eAAe;AAAA,IAChC,YAAY,IAAI;AAAA,IAChB,cAAc,IAAI,kBAAkB;AAAA,IACpC,kBAAkB,IAAI,sBAAsB;AAAA,IAC5C,eAAe,IAAI,kBAAkB;AAAA,IACrC,gBAAgB,IAAI,mBAAmB;AAAA,IACvC,eAAe,IAAI,kBAAkB;AAAA,IACrC;AAAA,IACA;AAAA,IACA,aAAa,IAAI,gBAAgB;AAAA,IACjC,iBAAiB,IAAI,qBAAqB,OAAO,OAAO,IAAI,gBAAgB,IAAI;AAAA,IAChF;AAAA,IACA,QAAQ,IAAI,WAAW;AAAA,IACvB,aAAa,QAAQ,KAAK,SAAS,IAAI,OAAO;AAAA,IAC9C;AAAA,IACA,UAAU,IAAI,aAAa;AAAA,IAC3B,WAAW,IAAI,cAAc;AAAA,IAC7B,SAAS,IAAI,YAAY;AAAA,IACzB,eAAe,IAAI,mBAAmB,OAAO,OAAO,IAAI,cAAc,IAAI;AAAA,IAC1E,aAAa,IAAI,iBAAiB,OAAO,OAAO,IAAI,YAAY,IAAI;AAAA,IACpE;AAAA,IACA,SACE,kBAAkB,UAClB,IAAI,iBAAiB,kBACpB,YAAY,UACb,WAAW,aAAa,aACxB,uBAAuB,mBAAmB;AAAA,IAC5C,aAAa;AAAA,EACf;AACF;AA5CS;AA8CT,SAASC,mBAAkB,cAAiF;AAC1G,SAAO,eAAe,aAAa,IAAI,CAAC,iBAAiB,EAAE,GAAG,YAAY,EAAE,IAAI;AAClF;AAFS,OAAAA,oBAAA;AAIT,SAAS,kBACPC,SACA,eACoB;AACpB,QAAM,SAA6B;AAAA,IACjC,GAAGA;AAAA,IACH,cAAcD,mBAAkBC,QAAO,YAAY;AAAA,EACrD;AAEA,QAAM,WAAWA,QAAO,YAAY;AACpC,QAAM,SAASA,QAAO,UAAU,aAAa;AAC7C,QAAM,kBAAkBA,QAAO,mBAAmB;AAElD,SAAO,UACL,kBAAkB,UAClBA,QAAO,eAAe,iBACtB,YACA,WAAW,aAAa,aACxBA,QAAO,sBAAsB;AAE/B,SAAO;AACT;AArBS;AAuBT,SAAS,aAAa,KAAsB,eAA8C;AACxF,QAAM,cAAc,IAAI,gBAAgB;AACxC,QAAM,SAAS,IAAI,UAAU,aAAa;AAC1C,MAAI;AACJ,MAAI,aAAa;AACf,UAAM,SAAS,IAAI,KAAK,WAAW,EAAE,QAAQ,IAAI,KAAK,IAAI;AAC1D,QAAI,SAAS,GAAG;AACd,YAAM,QAAQ,KAAK,MAAM,SAAS,IAAO;AACzC,YAAM,UAAU,KAAK,MAAO,SAAS,OAAW,GAAK;AACrD,uBAAiB,GAAG,KAAK,KAAK,OAAO;AAAA,IACvC;AAAA,EACF;AACA,QAAM,OAAO,IAAI,eACb,IAAI,aACD,MAAM,GAAG,EACT,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,EACnB,OAAO,OAAO,IACjB;AACJ,SAAO;AAAA,IACL,IAAI,IAAI;AAAA,IACR,OAAO,IAAI;AAAA,IACX,aAAa,IAAI,eAAe;AAAA,IAChC,cAAc,IAAI,kBAAkB;AAAA,IACpC,kBAAkB,IAAI,sBAAsB;AAAA,IAC5C,eAAe,IAAI,kBAAkB;AAAA,IACrC,gBAAgB,IAAI,mBAAmB;AAAA,IACvC,eAAe,IAAI,kBAAkB;AAAA,IACrC,iBAAiB,IAAI,qBAAqB,OAAO,OAAO,IAAI,gBAAgB,IAAI;AAAA,IAChF,qBAAqB,OAAO,IAAI,wBAAwB,CAAC;AAAA,IACzD;AAAA,IACA,iBAAiB,IAAI,qBAAqB,OAAO,OAAO,IAAI,gBAAgB,IAAI;AAAA,IAChF;AAAA,IACA,aAAa,QAAQ,KAAK,SAAS,IAAI,OAAO;AAAA,IAC9C,eAAe,IAAI,mBAAmB,OAAO,OAAO,IAAI,cAAc,IAAI;AAAA,IAC1E,aAAa,IAAI,iBAAiB,OAAO,OAAO,IAAI,YAAY,IAAI;AAAA,IACpE,SACE,kBAAkB,UAClB,IAAI,iBAAiB,iBACrB,WAAW,aAAa,aACxB,OAAO,IAAI,wBAAwB,CAAC,IAAI,OAAO,IAAI,oBAAoB,EAAE;AAAA,IAC3E;AAAA,EACF;AACF;AA1CS;AA4CT,eAAe,kBAAkBC,MAAU,WAAuD;AAChG,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,SAAS;AAAA,EACZ;AACA,SAAO,KAAK,IAAI,CAAC,SAAS;AAAA,IACxB,QAAQ,IAAI;AAAA,IACZ,UAAU,IAAI,aAAa;AAAA,IAC3B,cAAc,IAAI,iBAAiB;AAAA,IACnC,QAAQ,IAAI,UAAU;AAAA,IACtB,UAAU,IAAI,aAAa;AAAA,IAC3B,SAAS,IAAI,aAAa,OAAO,SAAY,QAAQ,IAAI,QAAQ;AAAA,IACjE,gBAAgB,IAAI,qBAAqB,OAAO,SAAY,QAAQ,IAAI,gBAAgB;AAAA,EAC1F,EAAE;AACJ;AAnBe;AAqBf,eAAsB,mBAAmBA,MAAU,YAAoB,SAAiE;AACtI,QAAM,MAAMH,QAAO;AACnB,QAAM,YAAY,OAAO,WAAW;AACpC,QAAM,WAAW,YAAY;AAC7B,QAAM;AAAA,IACJG,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAyBA;AAAA,MACE;AAAA,MACA,QAAQ;AAAA,MACR,QAAQ,eAAe;AAAA,MACvB;AAAA,MACA,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,QAAQ,cAAc,QAAQ,YAAY,KAAK,GAAG,IAAI;AAAA,MACtD,QAAQ,WAAW,IAAI;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAiBA,CAAC,OAAO,WAAW,GAAG,WAAW,YAAY,mBAAmB,QAAQ,KAAK,KAAK,GAAG;AAAA,EACvF;AAEA,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,SAAS;AAAA,EACZ;AACA,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,MAAM,+EAAmB;AAAA,EACrC;AAEA,QAAM,eAAe,MAAM,kBAAkBA,MAAK,SAAS;AAC3D,QAAM,aAAa,gBAAgB,KAAK,YAAY;AACpD,QAAM,sBAAsBA,MAAK,UAAU;AAC3C,QAAM,iBAAiBA,MAAK,YAAY,SAAS;AACjD,QAAM,iBAAiBA,MAAK,YAAY,SAAS;AACjD,SAAO,kBAAkB,YAAY,UAAU;AACjD;AA5FsB;AA8FtB,eAAsB,oBAAoBA,MAAU,WAAmB,eAAqD;AAC1H,QAAMC,UAAS,MAAM,sBAAsBD,MAAK,SAAS;AACzD,MAAIC,SAAQ;AACV,QAAI,eAAe;AACjB,YAAM,iBAAiBD,MAAK,eAAe,SAAS;AAAA,IACtD;AACA,WAAO,kBAAkBC,SAAQ,aAAa;AAAA,EAChD;AAEA,QAAM,MAAM,MAAM;AAAA,IAChBD,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,SAAS;AAAA,EACZ;AACA,MAAI,CAAC,IAAK,OAAM,IAAI,MAAM,+EAAmB;AAC7C,QAAM,eAAe,MAAM,kBAAkBA,MAAK,SAAS;AAC3D,QAAM,aAAa,gBAAgB,KAAK,YAAY;AACpD,QAAM,sBAAsBA,MAAK,UAAU;AAC3C,SAAO,kBAAkB,YAAY,aAAa;AACpD;AAvBsB;AAyBtB,eAAe,kBAAkBA,MAAU,WAAmB,QAAgD;AAC5G,SAAO;AAAA,IACLA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,WAAW,MAAM;AAAA,EACpB;AACF;AANe;AAQf,eAAsB,iBAAiBA,MAAU,QAAgB,WAAmB,UAAuB,CAAC,GAAgC;AAC1I,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,eAAe,QAAQ;AACjC,WAAO;AAAA,EACT;AACA,MAAI,QAAQ,WAAW,aAAa,WAAW;AAC7C,UAAM,IAAI,MAAM,uGAAuB;AAAA,EACzC;AACA,MAAI,QAAQ,wBAAwB,QAAQ,mBAAmB,KAAK;AAClE,UAAM,IAAI,MAAM,wEAAiB;AAAA,EACnC;AAEA,QAAM,WAAW,MAAM,kBAAkBA,MAAK,WAAW,MAAM;AAC/D,MAAI,YAAY,SAAS,WAAW,mBAAmB,QAAQ;AAC7D,WAAO;AAAA,EACT;AAGA,QAAM,WAAW,MAAM,WAGpBA,KAAI,IAAI,kEAAkE,CAAC,MAAM,CAAC;AAErF,QAAM,WAAW,UAAU,gBAAgB,UAAU,QAAQ;AAE7D,QAAM,MAAMH,QAAO;AACnB,MAAI,UAAU;AACZ,UAAM;AAAA,MACJG,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA,MAGA,CAAC,mBAAmB,QAAQ,KAAK,KAAK,WAAW,MAAM;AAAA,IACzD;AAAA,EACF,OAAO;AACL,UAAM;AAAA,MACJA,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA,MAGA,CAAC,OAAO,WAAW,GAAG,WAAW,QAAQ,mBAAmB,QAAQ,KAAK,KAAK,GAAG;AAAA,IACnF;AAAA,EACF;AAEA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,CAAC,KAAK,SAAS;AAAA,EACjB;AAGA,MAAI;AACF,UAAM,mBAAmBA,MAAK;AAAA,MAC5B,QAAQ,QAAQ;AAAA,MAChB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS,GAAG,QAAQ,iBAAO,QAAQ,KAAK;AAAA,MACxC,UAAU;AAAA,MACV,UAAU;AAAA,MACV,WAAW,mBAAmB,SAAS;AAAA,MACvC,YAAY;AAAA,QACV;AAAA,QACA,cAAc,QAAQ;AAAA,QACtB,eAAe;AAAA,QACf,iBAAiB;AAAA,MACnB;AAAA,MACA,cAAc;AAAA,IAChB,CAAC;AAAA,EACH,SAASE,SAAO;AACd,YAAQ,MAAM,qDAAqDA,OAAK;AAAA,EAC1E;AAEA,QAAM,4BAA4BF,MAAK,SAAS;AAChD,QAAM,iBAAiBA,MAAK,QAAQ,SAAS;AAC7C,QAAM,iBAAiBA,MAAK,QAAQ,SAAS;AAC7C,SAAO,oBAAoBA,MAAK,WAAW,MAAM;AACnD;AA/EsB;AAiFtB,eAAsB,uBAAuBA,MAAU,QAAgB,UAAkB,UAAuB,CAAC,GAAG;AAClH,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,QAAQ;AAAA,EACX;AACA,MAAI,CAAC,IAAK,OAAM,IAAI,MAAM,+EAAmB;AAC7C,SAAO,iBAAiBA,MAAK,QAAQ,IAAI,YAAY,OAAO;AAC9D;AARsB;AAUtB,eAAsB,kBAAkBA,MAAU,QAAgB,WAAmB;AACnF,QAAM,cAAc,MAAM,kBAAkBA,MAAK,WAAW,MAAM;AAClE,MAAI,CAAC,eAAe,YAAY,WAAW,mBAAmB,QAAQ;AACpE;AAAA,EACF;AACA,QAAM,MAAMH,QAAO;AACnB,QAAM;AAAA,IACJG,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,CAAC,mBAAmB,MAAM,KAAK,KAAK,WAAW,MAAM;AAAA,EACvD;AACA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,CAAC,KAAK,SAAS;AAAA,EACjB;AAEA,QAAM,4BAA4BA,MAAK,SAAS;AAChD,QAAM,oBAAoBA,MAAK,QAAQ,SAAS;AAClD;AAxBsB;AA0BtB,eAAsB,kBAAkBA,MAAU,QAAgB,WAAmB;AACnF,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,eAAe,OAAQ,OAAM,IAAI,MAAM,oFAAmB;AACtE,QAAM,MAAMH,QAAO;AACnB,QAAM;AAAA,IACJG,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,aAAa,QAAQ,KAAK,KAAK,SAAS;AAAA,EAC3C;AAGA,QAAM,eAAe,MAAM;AAAA,IACzBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,WAAW,mBAAmB,QAAQ,MAAM;AAAA,EAC/C;AAEA,aAAW,eAAe,cAAc;AACtC,QAAI;AACF,YAAM,mBAAmBA,MAAK;AAAA,QAC5B,QAAQ,YAAY;AAAA,QACpB,MAAM;AAAA,QACN,OAAO;AAAA,QACP,SAAS,IAAI,QAAQ,KAAK;AAAA,QAC1B,UAAU;AAAA,QACV,UAAU;AAAA;AAAA,QACV,WAAW,mBAAmB,SAAS;AAAA,QACvC,YAAY;AAAA,UACV;AAAA,UACA,cAAc,QAAQ;AAAA,UACtB,YAAY;AAAA,QACd;AAAA,QACA,cAAc;AAAA,MAChB,CAAC;AAAA,IACH,SAASE,SAAO;AACd,cAAQ,MAAM,wDAAwD,YAAY,OAAO,KAAKA,OAAK;AAAA,IACrG;AAAA,EACF;AAEA,QAAM,4BAA4BF,MAAK,SAAS;AAChD,SAAO,oBAAoBA,MAAK,WAAW,MAAM;AACnD;AAzCsB;AA2CtB,eAAsB,gBAAgBA,MAAU,QAAgB,WAAmB;AACjF,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,eAAe,OAAQ,OAAM,IAAI,MAAM,oFAAmB;AACtE,QAAM,MAAMH,QAAO;AACnB,QAAM;AAAA,IACJG,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,aAAa,WAAW,KAAK,KAAK,SAAS;AAAA,EAC9C;AACA,QAAM,4BAA4BA,MAAK,SAAS;AAChD,SAAO,oBAAoBA,MAAK,WAAW,MAAM;AACnD;AAXsB;AAatB,eAAsB,mBAAmBA,MAAU,QAAgB,WAAmB,QAAiB;AACrG,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,eAAe,OAAQ,OAAM,IAAI,MAAM,oFAAmB;AAGtE,QAAM,eAAe,MAAM;AAAA,IACzBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,WAAW,mBAAmB,QAAQ,MAAM;AAAA,EAC/C;AAEA,QAAM,MAAMH,QAAO;AACnB,QAAM;AAAA,IACJG,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,CAAC,aAAa,WAAW,KAAK,KAAK,SAAS;AAAA,EAC9C;AACA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,CAAC,mBAAmB,MAAM,KAAK,WAAW,mBAAmB,MAAM;AAAA,EACrE;AAGA,QAAM,aAAa,SAAS,mBAAS,MAAM,MAAM;AACjD,aAAW,eAAe,cAAc;AACtC,QAAI;AACF,YAAM,mBAAmBA,MAAK;AAAA,QAC5B,QAAQ,YAAY;AAAA,QACpB,MAAM;AAAA,QACN,OAAO;AAAA,QACP,SAAS,IAAI,QAAQ,KAAK,+EAAmB,UAAU;AAAA,QACvD,UAAU;AAAA,QACV,UAAU;AAAA,QACV,WAAW;AAAA,QACX,YAAY;AAAA,UACV;AAAA,UACA,cAAc,QAAQ;AAAA,UACtB,YAAY;AAAA,UACZ;AAAA,QACF;AAAA,QACA,cAAc;AAAA,MAChB,CAAC;AAAA,IACH,SAASE,SAAO;AACd,cAAQ,MAAM,0DAA0D,YAAY,OAAO,KAAKA,OAAK;AAAA,IACvG;AAAA,EACF;AAEA,QAAM,4BAA4BF,MAAK,SAAS;AAClD;AArDsB;AAuDtB,eAAsB,2BACpBA,MACA,MACA,MACA,UAAqF,CAAC,GACtF,eACA;AACA,QAAM,UAAU,OAAO,KAAK;AAC5B,QAAM,QAAkB,CAAC,cAAc,eAAe;AACtD,QAAM,SAAgB,CAAC,aAAa,SAAS;AAE7C,MAAI,QAAQ,UAAU;AACpB,UAAM,KAAK,mCAAmC;AAC9C,WAAO,KAAK,QAAQ,QAAQ;AAAA,EAC9B;AACA,MAAI,QAAQ,OAAO;AACjB,UAAM,KAAK,kCAAkC;AAC7C,WAAO,KAAK,QAAQ,KAAK;AAAA,EAC3B;AACA,MAAI,QAAQ,UAAU;AACpB,UAAM,KAAK,kCAAkC;AAC7C,WAAO,KAAK,QAAQ,QAAQ;AAAA,EAC9B;AACA,MAAI,QAAQ,QAAQ,QAAQ,KAAK,SAAS,GAAG;AAC3C,UAAM,KAAK,QAAQ,KAAK,IAAI,MAAM,oCAAoC,EAAE,KAAK,OAAO,CAAC;AACrF,WAAO,KAAK,GAAG,QAAQ,IAAI;AAAA,EAC7B;AAEA,QAAM,cAAc,MAAM,SAAS,SAAS,MAAM,KAAK,OAAO,CAAC,KAAK;AACpE,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ,gDAAgD,WAAW;AAAA,IAC3D;AAAA,EACF;AAEA,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,QAGI,WAAW;AAAA;AAAA;AAAA,IAGf,CAAC,GAAG,QAAQ,MAAM,MAAM;AAAA,EAC1B;AAEA,QAAM,OAAO,KAAK,IAAI,CAAC,QAAQ,aAAa,KAAK,aAAa,CAAC;AAC/D,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO,UAAU,SAAS;AAAA,EAC5B;AACF;AArDsB;AAuDtB,eAAsB,sBAAsBA,MAAU,QAAgB,QAAiB;AACrF,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,8BAI0B,SAAS,sBAAsB,EAAE;AAAA;AAAA,IAE3D,SAAS,CAAC,QAAQ,MAAM,IAAI,CAAC,MAAM;AAAA,EACrC;AACA,QAAM,SAA+B,CAAC;AACtC,aAAW,OAAO,MAAM;AACtB,UAAM,eAAe,MAAM,kBAAkBA,MAAK,IAAI,UAAU;AAChE,WAAO,KAAK,gBAAgB,KAAK,cAAc,MAAM,CAAC;AAAA,EACxD;AACA,SAAO;AACT;AAjBsB;AAmBtB,eAAsB,wBAAwBA,MAAU,QAAgB;AACtE,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,MAAM;AAAA,EACT;AACA,QAAM,SAA+B,CAAC;AACtC,aAAW,OAAO,MAAM;AACtB,UAAM,eAAe,MAAM,kBAAkBA,MAAK,IAAI,UAAU;AAChE,WAAO,KAAK,gBAAgB,KAAK,cAAc,MAAM,CAAC;AAAA,EACxD;AACA,SAAO;AACT;AAhBsB;AAkBtB,eAAsB,qBAAqBA,MAAU,YAAoB,WAAmB,eAAuB;AACjH,QAAM,UAAU,MAAM,oBAAoBA,MAAK,WAAW,UAAU;AACpE,MAAI,QAAQ,eAAe,WAAY,OAAM,IAAI,MAAM,0FAAoB;AAC3E,QAAM,cAAc,MAAM,kBAAkBA,MAAK,WAAW,aAAa;AACzE,MAAI,CAAC,YAAa,OAAM,IAAI,MAAM,wEAAiB;AACnD,QAAM,MAAMH,QAAO;AACnB,QAAM;AAAA,IACJG,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,CAAC,mBAAmB,QAAQ,KAAK,KAAK,WAAW,aAAa;AAAA,EAChE;AACA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,CAAC,KAAK,SAAS;AAAA,EACjB;AAEA,QAAM,4BAA4BA,MAAK,SAAS;AAChD,QAAM,oBAAoBA,MAAK,eAAe,SAAS;AACzD;AAxBsB;AA0BtB,eAAsB,iBAAiBA,MAAU,QAAgB,WAAmB,QAAgB,UAAmB;AACrH,QAAM,cAAc,MAAM,kBAAkBA,MAAK,WAAW,MAAM;AAClE,MAAI,CAAC,eAAe,YAAY,WAAW,mBAAmB,QAAQ;AACpE,UAAM,IAAI,MAAM,6EAAiB;AAAA,EACnC;AACA,QAAM,MAAMH,QAAO;AACnB,QAAM;AAAA,IACJG,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,CAAC,QAAQ,YAAY,MAAM,KAAK,WAAW,MAAM;AAAA,EACnD;AAEA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,CAAC,WAAW,WAAW,KAAK,SAAS;AAAA,EACvC;AAEA,QAAM,4BAA4BA,MAAK,SAAS;AAClD;AA/BsB;AAiCtB,eAAsB,mBAAmBA,MAAU,YAAoB,WAAmB,SAAoC;AAC5H,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,eAAe,WAAY,OAAM,IAAI,MAAM,oFAAmB;AAG1E,QAAM,eAAe,MAAM;AAAA,IACzBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,WAAW,mBAAmB,QAAQ,UAAU;AAAA,EACnD;AAEA,QAAM,MAAMH,QAAO;AACnB,QAAM;AAAA,IACJG,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAaA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ,eAAe;AAAA,MACvB,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ,cAAc,QAAQ,YAAY,KAAK,GAAG,IAAI;AAAA,MACtD,QAAQ,WAAW,IAAI;AAAA,MACvB;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAGA,MAAI,gBAAgB;AACpB,MAAI,QAAQ,UAAU,QAAQ,OAAO;AACnC,oBAAgB;AAAA,EAClB,WAAW,QAAQ,gBAAgB,QAAQ,aAAa;AACtD,oBAAgB;AAAA,EAClB,OAAO;AACL,oBAAgB;AAAA,EAClB;AAEA,aAAW,eAAe,cAAc;AACtC,QAAI;AACF,YAAM,mBAAmBA,MAAK;AAAA,QAC5B,QAAQ,YAAY;AAAA,QACpB,MAAM;AAAA,QACN,OAAO;AAAA,QACP,SAAS,IAAI,QAAQ,KAAK,0GAA0B,aAAa;AAAA,QACjE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,WAAW,mBAAmB,SAAS;AAAA,QACvC,YAAY;AAAA,UACV;AAAA,UACA,cAAc,QAAQ;AAAA,UACtB;AAAA,UACA,aAAa,QAAQ;AAAA,UACrB,SAAS;AAAA,QACX;AAAA,QACA,cAAc;AAAA,MAChB,CAAC;AAAA,IACH,SAASE,SAAO;AACd,cAAQ,MAAM,wDAAwD,YAAY,OAAO,KAAKA,OAAK;AAAA,IACrG;AAAA,EACF;AAEA,QAAM,4BAA4BF,MAAK,SAAS;AAClD;AA9EsB;AAgFtB,eAAsB,qBAAqBA,MAAU,YAAoB,WAAmB,gBAA0B;AACpH,QAAM,UAAU,MAAM,oBAAoBA,MAAK,SAAS;AACxD,MAAI,QAAQ,eAAe,WAAY,OAAM,IAAI,MAAM,oFAAmB;AAG1E,QAAM,WAAW,MAAM,WAGpBA,KAAI,IAAI,kEAAkE,CAAC,UAAU,CAAC;AAEzF,QAAM,WAAW,UAAU,gBAAgB,UAAU,QAAQ;AAC7D,QAAM,MAAMH,QAAO;AAEnB,aAAW,UAAU,gBAAgB;AACnC,UAAM;AAAA,MACJG,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA,MAIA,CAAC,OAAO,WAAW,GAAG,WAAW,QAAQ,mBAAmB,SAAS,KAAK,GAAG;AAAA,IAC/E;AACA,UAAM,eAAsBA,MAAK,WAAW,QAAQ,UAAU;AAG9D,QAAI;AACF,YAAM,mBAAmBA,MAAK;AAAA,QAC5B;AAAA,QACA,MAAM;AAAA,QACN,OAAO;AAAA,QACP,SAAS,GAAG,QAAQ,iBAAO,QAAQ,KAAK;AAAA,QACxC,UAAU;AAAA,QACV,UAAU;AAAA,QACV,WAAW,mBAAmB,SAAS;AAAA,QACvC,YAAY;AAAA,UACV;AAAA,UACA,cAAc,QAAQ;AAAA,UACtB;AAAA,UACA;AAAA,UACA,aAAa,QAAQ;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,MAChB,CAAC;AAAA,IACH,SAASE,SAAO;AACd,cAAQ,MAAM,qDAAqDA,OAAK;AAAA,IAC1E;AAAA,EACF;AACA,QAAM,4BAA4BF,MAAK,SAAS;AAChD,SAAO,oBAAoBA,MAAK,WAAW,UAAU;AACvD;AAjDsB;AAmDtB,eAAsB,oBAAoBA,MAAU,QAAgB,WAAmB,QAAiB;AACtG,QAAM,aAAa,MAAM,cAAqBA,MAAK,WAAW,MAAM;AACpE,MAAI,CAAC,WAAY,OAAM,IAAI,MAAM,2DAAc;AAC/C,QAAM,cAAc,MAAM,kBAAkBA,MAAK,WAAW,MAAM;AAClE,MAAI,CAAC,YAAa,OAAM,IAAI,MAAM,2DAAc;AAChD,QAAM,MAAMH,QAAO;AACnB,MAAI,QAAQ;AACV,UAAM;AAAA,MACJG,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA,MAGA,CAAC,mBAAmB,QAAQ,KAAK,KAAK,WAAW,MAAM;AAAA,IACzD;AACA,UAAM;AAAA,MACJA,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA,MAIA,CAAC,KAAK,SAAS;AAAA,IACjB;AACA,UAAM,iBAAiBA,MAAK,QAAQ,SAAS;AAAA,EAC/C,OAAO;AACL,UAAM;AAAA,MACJA,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA,MAGA,CAAC,mBAAmB,QAAQ,KAAK,KAAK,WAAW,MAAM;AAAA,IACzD;AAAA,EACF;AAEA,QAAM,4BAA4BA,MAAK,SAAS;AAChD,QAAM,iBAAwBA,MAAK,WAAW,MAAM;AACtD;AAnCsB;AAqCtB,eAAsB,4BAA4BA,MAAU,QAAgB;AAC1E,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,CAAC,aAAa,SAAS;AAAA,EACzB;AACA,QAAM,QAA8B,CAAC;AACrC,aAAW,OAAO,MAAM;AACtB,UAAM,eAAe,MAAM,kBAAkBA,MAAK,IAAI,UAAU;AAChE,UAAM,KAAK,gBAAgB,KAAK,cAAc,MAAM,CAAC;AAAA,EACvD;AACA,SAAO;AACT;AAjBsB;AAmBtB,eAAsB,oBAAoBA,MAAU,SAAiB,UAAmB,OAAgB;AACtG,QAAM,QAAkB,CAAC,eAAe;AACxC,QAAM,SAAgB,CAAC;AACvB,MAAI,SAAS;AACX,UAAM,KAAK,+DAA+D;AAC1E,WAAO,KAAK,IAAI,OAAO,KAAK,IAAI,OAAO,KAAK,IAAI,OAAO,GAAG;AAAA,EAC5D;AACA,MAAI,UAAU;AACZ,UAAM,KAAK,qBAAqB;AAChC,WAAO,KAAK,QAAQ;AAAA,EACtB;AACA,MAAI,OAAO;AACT,UAAM,KAAK,oBAAoB;AAC/B,WAAO,KAAK,KAAK;AAAA,EACnB;AACA,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,QAGI,MAAM,SAAS,WAAW,MAAM,KAAK,OAAO,IAAI,EAAE;AAAA;AAAA;AAAA,IAGtD;AAAA,EACF;AACA,SAAO,KAAK,IAAI,CAAC,QAAa,aAAa,GAAG,CAAC;AACjD;AA1BsB;;;AGr6BtB;AAAA;AAAA;AAAAG;AAiEA,IAAM,uBAAuB,KAAK,KAAK,KAAK;AAC5C,IAAM,yBAAyB;AAE/B,SAAS,sBAAyB,MAAc,UAAgB;AAC9D,MAAI;AACF,WAAO,KAAK,MAAM,IAAI;AAAA,EACxB,SAASC,SAAO;AACd,IAAAC,KAAI,KAAK,oCAAoCD,SAAgB;AAAA,MAC3D,WAAW;AAAA,MACX,SAAS,KAAK,MAAM,GAAG,GAAG;AAAA,IAC5B,CAAC;AACD,WAAO;AAAA,EACT;AACF;AAVS;AAYT,eAAe,mBACbE,MACA,cACA,YACA,UACA,UAAwD,CAAC,GAC7C;AACZ,QAAM,WAA0B;AAAA,IAC9B,EAAE,MAAM,UAAU,SAAS,aAAa;AAAA,IACxC,EAAE,MAAM,QAAQ,SAAS,WAAW;AAAA,EACtC;AAEA,QAAM,WAAW,MAAM,uBAAuBA,KAAI,IAAI,UAAU;AAAA,IAC9D,aAAa,QAAQ,eAAe;AAAA,IACpC,YAAY,QAAQ,aAAa;AAAA,IACjC,iBAAiB,EAAE,MAAM,cAAc;AAAA,EACzC,CAAC;AAED,QAAM,YAAY,qBAAqB,SAAS,IAAI;AACpD,MAAI,CAAC,WAAW;AACd,WAAO;AAAA,EACT;AACA,SAAO,sBAAsB,WAAW,QAAQ;AAClD;AAvBe;AAyBf,eAAsB,uBACpBA,MACA,QACA,OACA;AACA,QAAM,WAAW;AAAA,IACf,QAAQ;AAAA,MACN;AAAA,QACE,OAAO;AAAA,QACP,aAAa;AAAA,QACb,YAAY,MAAM,SAAS;AAAA,QAC3B,cAAc,CAAC;AAAA,QACf,mBAAmB;AAAA,UACjB;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,QAAM,iBAAiB,MAAM,aAAa,CAAC,GAAG,KAAK,IAAI,KAAK;AAC5D,QAAM,aAAa;AAAA;AAAA;AAAA,6CAGwB,MAAM,YAAY,SAAS;AAAA,+BACzC,MAAM,SAAS,cAAc;AAAA,qCACvB,iBAAiB,sBAAsB;AAAA,gBAC5D,MAAM,oBAAoB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBzC,SAAO;AAAA,IAAmBA;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA,EAAE,aAAa,KAAK,WAAW,IAAI;AAAA,EACrC;AACF;AAjDsB;AAmDtB,eAAsB,8BACpBA,MACA,QACA,OACA;AACA,QAAM,WAAW;AAAA,IACf,cAAc;AAAA,IACd,WAAW,CAAC,iBAAiB;AAAA,IAC7B,cAAc,CAAC,4BAA4B;AAAA,IAC3C,iBAAiB,CAAC,sBAAsB;AAAA,IACxC,YAAY,CAAC;AAAA,IACb,SAAS;AAAA,IACT,WAAW;AAAA,EACb;AAEA,QAAM,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWnB,MAAM,UAAU;AAAA;AAGhB,SAAO;AAAA,IAAmBA;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA,EAAE,aAAa,KAAK,WAAW,IAAI;AAAA,EACrC;AACF;AAnCsB;AAqCtB,eAAsB,uBACpBA,MACA,QACA,OACA;AACA,QAAM,oBAAoB,MAAM,gBAAgB,CAAC,GAC9C,IAAI,CAAC,MAAM,GAAG,EAAE,QAAQ,EAAE,MAAM,aAAa,GAAG,EAAE,OAAO,KAAK,EAAE,IAAI,MAAM,EAAE,EAAE,EAC9E,KAAK,IAAI;AAEZ,QAAM,WAAW;AAAA,IACf,SAAS;AAAA,IACT,YAAY,CAAC,uCAAuC;AAAA,IACpD,aAAa,CAAC,0CAA0C;AAAA,IACxD,mBAAmB,CAAC,mCAAmC;AAAA,IACvD,YAAY,CAAC;AAAA,EACf;AAEA,QAAM,aAAa;AAAA;AAAA;AAAA,YAGT,MAAM,YAAY,SAAS;AAAA,sBACjB,MAAM,YAAY,SAAS;AAAA,gBACjC,oBAAoB,eAAe;AAAA;AAAA,EAEjD,MAAM,UAAU;AAAA;AAGhB,SAAO;AAAA,IAAmBA;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA,EAAE,aAAa,KAAK,WAAW,IAAI;AAAA,EACrC;AACF;AAjCsB;AAmCtB,eAAsB,oBACpBA,MACA,QACA,OACA;AACA,QAAM,WAAW;AAAA,IACf,aAAa;AAAA,MACX;AAAA,IACF;AAAA,EACF;AAEA,QAAM,aAAa;AAAA,YACT,MAAM,YAAY,SAAS;AAAA,iBACtB,MAAM,SAAS,cAAc;AAAA,eAC/B,MAAM,SAAS,sBAAsB;AAAA;AAAA;AAIlD,SAAO;AAAA,IAAmBA;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA,EAAE,aAAa,KAAK,WAAW,IAAI;AAAA,EACrC;AACF;AAxBsB;AA0BtB,eAAsB,yBACpBA,MACA,QACA,OACA;AACA,QAAM,WAAW;AAAA,IACf,eAAe;AAAA,IACf,SAAS;AAAA,IACT,OAAO,CAAC,gBAAgB,wBAAwB,UAAU;AAAA,IAC1D,OAAO,CAAC,0BAA0B,mBAAmB;AAAA,IACrD,eAAe;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,YAAY,CAAC;AAAA,EACf;AAEA,QAAM,aAAa,MAAM,oBAAoB,CAAC,GAAG,KAAK,IAAI,KAAK;AAC/D,QAAM,aAAa;AAAA;AAAA;AAAA,YAGT,MAAM,YAAY,SAAS;AAAA,SAC9B,MAAM,SAAS,cAAc;AAAA,aACzB,MAAM,aAAa,qBAAqB;AAAA,qBAChC,SAAS;AAAA;AAG5B,SAAO;AAAA,IAAmBA;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA,EAAE,aAAa,MAAM,WAAW,IAAI;AAAA,EACtC;AACF;AAlCsB;AAoCtB,eAAsB,oBACpBA,MACA,QACA,OACA;AACA,QAAM,WAAW;AAAA,IACf,aAAa,MAAM;AAAA,IACnB,eAAe;AAAA,IACf,YAAY,CAAC;AAAA,IACb,UAAU,CAAC;AAAA,EACb;AAEA,QAAM,aAAa;AAAA;AAAA;AAAA;AAAA,mBAIF,MAAM,gBAAgB,MAAM;AAAA,mBAC5B,MAAM,UAAU;AAAA;AAAA,EAEjC,MAAM,IAAI;AAAA;AAGV,SAAO;AAAA,IAAmBA;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA,EAAE,aAAa,KAAK,WAAW,IAAI;AAAA,EACrC;AACF;AA5BsB;AA8BtB,eAAsB,wBACpBA,MACA,QACA,OACA;AACA,QAAM,WAAW;AAAA,IACf,SAAS,CAAC;AAAA,IACV,UAAU;AAAA,EACZ;AAEA,QAAM,iBAAiB,KAAK,UAAU,MAAM,eAAe,CAAC,CAAC;AAC7D,QAAM,eAAe,KAAK,UAAU,MAAM,qBAAqB,CAAC,CAAC;AAEjE,QAAM,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAenB,cAAc;AAAA;AAAA;AAAA,EAGd,YAAY;AAAA;AAGZ,SAAO;AAAA,IAAmBA;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA,EAAE,aAAa,KAAK,WAAW,IAAI;AAAA,EACrC;AACF;AAxCsB;AA0CtB,SAAS,YAAY,QAAgB;AACnC,SAAO,0BAA0B,MAAM;AACzC;AAFS;AAIT,eAAsB,qBACpBA,MACAC,SACiC;AACjC,QAAM,cAAc,MAAMD,KAAI,MAAM,IAAI,YAAYC,QAAO,MAAM,CAAC;AAClE,MAAI,UAAoC,CAAC;AACzC,MAAI,aAAa;AACf,QAAI;AACF,gBAAU,KAAK,MAAM,WAAW;AAAA,IAClC,SAASH,SAAO;AACd,MAAAC,KAAI,KAAK,sDAAsDD,SAAgB;AAAA,QAC7E,WAAW;AAAA,MACb,CAAC;AACD,gBAAU,CAAC;AAAA,IACb;AAAA,EACF;AAEA,QAAM,QAAgC;AAAA,IACpC,GAAGG;AAAA,IACH,UAAS,oBAAI,KAAK,GAAE,YAAY;AAAA,EAClC;AAEA,UAAQ,QAAQ,KAAK;AACrB,MAAI,QAAQ,SAAS,wBAAwB;AAC3C,cAAU,QAAQ,MAAM,GAAG,sBAAsB;AAAA,EACnD;AAEA,QAAMD,KAAI,MAAM,IAAI,YAAYC,QAAO,MAAM,GAAG,KAAK,UAAU,OAAO,GAAG;AAAA,IACvE,eAAe;AAAA,EACjB,CAAC;AAED,SAAO;AACT;AAhCsB;;;AJlVtB,IAAM,sBAAsB,IAAIC,MAA8C;AAC9E,IAAMC,eAAc,KAAe;AAEnC,SAASC,qBAAoB,GAAQ;AACnC,QAAM,OAAO,KAAK,IAAI,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,GAAG,GAAG,CAAC;AAC3D,QAAM,OAAO,KAAK,IAAI,KAAK,IAAI,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,IAAI,GAAG,EAAE,GAAG,CAAC;AAC1E,SAAO,EAAE,MAAM,KAAK;AACtB;AAJS,OAAAA,sBAAA;AAMT,SAAS,iBAAiB,OAA2B,OAAuB;AAC1E,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,SAAS,WAAW,KAAK,IAAI,KAAK,oBAAoB;AAAA,EAClE;AACA,SAAO;AACT;AALS;AAOT,SAASC,eAAc,GAAgB;AACrC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AAAA,EACxE;AACA,SAAO;AACT;AANS,OAAAA,gBAAA;AAQT,oBAAoB,IAAI,KAAKF,YAAW;AAExC,oBAAoB,KAAK,KAAK,OAAO,MAAM;AACzC,QAAM,aAAa,EAAE,IAAI,QAAQ;AACjC,MAAI,CAAC,WAAY,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACvF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAMG,YAAW,CAAC,SAAS,iBAAiB,kBAAkB,iBAAiB,mBAAmB,eAAe,mBAAmB,UAAU;AAC9I,QAAM,UAAUA,UAAS,OAAO,CAAC,QAAQ,KAAK,GAAG,MAAM,UAAa,KAAK,GAAG,MAAM,QAAQ,KAAK,GAAG,MAAM,EAAE;AAC1G,MAAI,QAAQ,QAAQ;AAClB,UAAM,IAAI,SAAS,mBAAmB,QAAQ,KAAK,IAAI,CAAC,IAAI,KAAK,iBAAiB;AAAA,EACpF;AACA,QAAM,UAAU,MAAM,mBAAmB,EAAE,KAAK,YAAY,IAAI;AAChE,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,oBAAoB,IAAI,eAAe,OAAO,MAAM;AAClD,QAAM,SAASD,eAAc,CAAC;AAC9B,QAAM,YAAY,iBAAiB,EAAE,IAAI,MAAM,WAAW,GAAG,WAAW;AACxE,QAAM,UAAU,MAAM,oBAAoB,EAAE,KAAK,WAAW,MAAM;AAClE,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,oBAAoB,KAAK,oBAAoB,OAAO,MAAM;AACxD,QAAM,SAASA,eAAc,CAAC;AAC9B,QAAM,YAAY,iBAAiB,EAAE,IAAI,MAAM,WAAW,GAAG,WAAW;AACxE,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,UAAU,MAAM,iBAAiB,EAAE,KAAK,QAAQ,WAAW,IAAI;AACrE,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,oBAAoB,KAAK,mBAAmB,OAAO,MAAM;AACvD,QAAM,SAASA,eAAc,CAAC;AAC9B,QAAM,WAAW,iBAAiB,EAAE,IAAI,MAAM,UAAU,GAAG,UAAU;AACrE,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,UAAU,MAAM,uBAAuB,EAAE,KAAK,QAAQ,UAAU,IAAI;AAC1E,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,oBAAoB,KAAK,qBAAqB,OAAO,MAAM;AACzD,QAAM,SAASA,eAAc,CAAC;AAC9B,QAAM,YAAY,iBAAiB,EAAE,IAAI,MAAM,WAAW,GAAG,WAAW;AACxE,QAAM,kBAAkB,EAAE,KAAK,QAAQ,SAAS;AAChD,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,oBAAoB,KAAK,qBAAqB,OAAO,MAAM;AACzD,QAAM,SAASA,eAAc,CAAC;AAC9B,QAAM,YAAY,iBAAiB,EAAE,IAAI,MAAM,WAAW,GAAG,WAAW;AACxE,QAAM,UAAU,MAAM,kBAAkB,EAAE,KAAK,QAAQ,SAAS;AAChE,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,oBAAoB,KAAK,mBAAmB,OAAO,MAAM;AACvD,QAAM,SAASA,eAAc,CAAC;AAC9B,QAAM,YAAY,iBAAiB,EAAE,IAAI,MAAM,WAAW,GAAG,WAAW;AACxE,QAAM,UAAU,MAAM,gBAAgB,EAAE,KAAK,QAAQ,SAAS;AAC9D,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,oBAAoB,KAAK,sBAAsB,OAAO,MAAM;AAC1D,QAAM,SAASA,eAAc,CAAC;AAC9B,QAAM,YAAY,iBAAiB,EAAE,IAAI,MAAM,WAAW,GAAG,WAAW;AACxE,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ,KAAK;AACxC,QAAM,mBAAmB,EAAE,KAAK,QAAQ,WAAW,MAAM;AACzD,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,oBAAoB,IAAI,KAAK,OAAO,MAAM;AACxC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,QAAM,EAAE,MAAM,KAAK,IAAID,qBAAoB,CAAC;AAC5C,QAAM,UAAU;AAAA,IACd,UAAU,EAAE,IAAI,MAAM,UAAU;AAAA,IAChC,OAAO,EAAE,IAAI,MAAM,OAAO;AAAA,IAC1B,UAAU,EAAE,IAAI,MAAM,UAAU;AAAA,IAChC,MAAM,EAAE,IAAI,MAAM,MAAM,IAAI,EAAE,IAAI,MAAM,MAAM,EAAG,MAAM,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,OAAO,OAAO,IAAI;AAAA,EACrG;AACA,QAAM,SAAS,MAAM,2BAA2B,EAAE,KAAK,MAAM,MAAM,SAAS,UAAU,MAAS;AAC/F,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,oBAAoB,IAAI,cAAc,OAAO,MAAM;AACjD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,QAAM,EAAE,MAAM,KAAK,IAAIA,qBAAoB,CAAC;AAC5C,QAAM,UAAU;AAAA,IACd,UAAU,EAAE,IAAI,MAAM,UAAU;AAAA,IAChC,OAAO,EAAE,IAAI,MAAM,OAAO;AAAA,IAC1B,UAAU,EAAE,IAAI,MAAM,UAAU;AAAA,IAChC,MAAM,EAAE,IAAI,MAAM,MAAM,IAAI,EAAE,IAAI,MAAM,MAAM,EAAG,MAAM,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,OAAO,OAAO,IAAI;AAAA,EACrG;AACA,QAAM,SAAS,MAAM,2BAA2B,EAAE,KAAK,MAAM,MAAM,SAAS,UAAU,MAAS;AAC/F,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,oBAAoB,IAAI,OAAO,OAAO,MAAM;AAC1C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ,KAAK;AACxC,QAAM,WAAW,MAAM,sBAAsB,EAAE,KAAK,QAAQ,UAAU,MAAS;AAC/E,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,oBAAoB,IAAI,gBAAgB,OAAO,MAAM;AACnD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ,KAAK;AACxC,QAAM,WAAW,MAAM,sBAAsB,EAAE,KAAK,QAAQ,UAAU,MAAS;AAC/E,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,oBAAoB,IAAI,WAAW,OAAO,MAAM;AAC9C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,WAAW,MAAM,wBAAwB,EAAE,KAAK,MAAM;AAC5D,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,oBAAoB,KAAK,mCAAmC,OAAO,MAAM;AACvE,QAAM,SAASC,eAAc,CAAC;AAC9B,QAAM,YAAY,iBAAiB,EAAE,IAAI,MAAM,WAAW,GAAG,WAAW;AACxE,QAAM,gBAAgB,iBAAiB,EAAE,IAAI,MAAM,eAAe,GAAG,eAAe;AACpF,QAAM,qBAAqB,EAAE,KAAK,QAAQ,WAAW,aAAa;AAClE,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,oBAAoB,KAAK,oBAAoB,OAAO,MAAM;AACxD,QAAM,SAASA,eAAc,CAAC;AAC9B,QAAM,YAAY,iBAAiB,EAAE,IAAI,MAAM,WAAW,GAAG,WAAW;AACxE,QAAM,SAAS,OAAO,EAAE,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,MAAM,OAAO,KAAK,CAAC;AACxE,MAAI,CAAC,UAAU,SAAS,KAAK,SAAS,GAAG;AACvC,UAAM,IAAI,SAAS,kCAAkC,KAAK,qBAAqB;AAAA,EACjF;AACA,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU,KAAK;AAC5C,QAAM,iBAAiB,EAAE,KAAK,QAAQ,WAAW,QAAQ,QAAQ;AACjE,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,oBAAoB,IAAI,eAAe,OAAO,MAAM;AAClD,QAAM,SAASA,eAAc,CAAC;AAC9B,QAAM,YAAY,iBAAiB,EAAE,IAAI,MAAM,WAAW,GAAG,WAAW;AACxE,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,mBAAmB,EAAE,KAAK,QAAQ,WAAW,IAAI;AACvD,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,oBAAoB,IAAI,qBAAqB,OAAO,MAAM;AACxD,QAAM,SAASA,eAAc,CAAC;AAC9B,QAAM,WAAW,MAAM,4BAA4B,EAAE,KAAK,MAAM;AAChE,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,oBAAoB,KAAK,mBAAmB,OAAO,MAAM;AACvD,QAAM,SAASA,eAAc,CAAC;AAC9B,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAEhD,QAAM,YAAY,OAAO,KAAK,cAAc,WAAW,KAAK,YAAY;AACxE,QAAM,UAAU,OAAO,KAAK,YAAY,YAAY,KAAK,YAAY,OAAO,KAAK,UAAU;AAC3F,QAAM,QAAQ,OAAO,KAAK,UAAU,WAAW,KAAK,QAAQ;AAC5D,QAAM,cAAc,OAAO,KAAK,gBAAgB,WAAW,KAAK,cAAc;AAE9E,MAAI;AACJ,MAAI,OAAO,KAAK,oBAAoB,YAAY,OAAO,SAAS,KAAK,eAAe,GAAG;AACrF,sBAAkB,KAAK;AAAA,EACzB,WAAW,OAAO,KAAK,aAAa,YAAY,OAAO,SAAS,KAAK,QAAQ,GAAG;AAC9E,sBAAkB,KAAK;AAAA,EACzB;AAEA,QAAME,UAAS,MAAM,qBAAqB,EAAE,KAAK;AAAA,IAC/C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,SAAO,gBAAgB,GAAG,EAAE,OAAO,MAAM,UAAUA,QAAO,CAAC;AAC7D,CAAC;AAED,oBAAoB,KAAK,sBAAsB,OAAO,MAAM;AAC1D,QAAM,SAASF,eAAc,CAAC;AAC9B,QAAM,YAAY,iBAAiB,EAAE,IAAI,MAAM,WAAW,GAAG,WAAW;AACxE,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,MAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,UAAM,IAAI,SAAS,gCAAgC,KAAK,iBAAiB;AAAA,EAC3E;AACA,QAAM,UAAU,MAAM,qBAAqB,EAAE,KAAK,QAAQ,WAAW,IAAI;AACzE,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,oBAAoB,KAAK,kCAAkC,OAAO,MAAM;AACtE,QAAM,SAASA,eAAc,CAAC;AAC9B,QAAM,YAAY,iBAAiB,EAAE,IAAI,MAAM,WAAW,GAAG,WAAW;AACxE,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,QAAM,WAAW,SAAS,OAAO,YAAY,MAAM,SAAS;AAC5D,QAAM,oBAAoB,EAAE,KAAK,QAAQ,WAAW,QAAQ;AAC5D,SAAO,gBAAgB,GAAG,EAAE,SAAS,MAAM,SAAS,CAAC;AACvD,CAAC;AAED,oBAAoB,IAAI,WAAW,OAAO,MAAM;AAC9C,QAAM,UAAU,EAAE,IAAI,MAAM,SAAS,KAAK;AAC1C,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU,KAAK;AAC5C,QAAM,QAAQ,EAAE,IAAI,MAAM,OAAO,KAAK;AACtC,QAAM,WAAW,MAAM,oBAAoB,EAAE,KAAK,SAAS,UAAU,KAAK;AAC1E,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,IAAO,wBAAQ;;;AK1Qf;AAAA;AAAA;AAAAG;AAKA;AAYA,IAAM,WAAW,IAAIC,MAA8C;AACnE,IAAMC,eAAc,KAAe;AAEnC,SAAS,IAAI,KAAKA,YAAW;AAE7B,IAAM,kBAAkB,iBAAE,OAAO;AAAA,EAC/B,UAAU,iBAAE,OAAO,EAAE,IAAI,CAAC,EAAE,QAAQ,SAAS;AAAA,EAC7C,OAAO,iBAAE,OAAO,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,EAClC,WAAW,iBAAE,MAAM,iBAAE,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE,SAAS;AAAA,EAC/C,kBAAkB,iBAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS;AACzD,CAAC;AAED,SAAS,KAAK,qBAAqB,OAAO,MAAM;AAC9C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AAAA,EACxE;AACA,QAAM,UAAU,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACnD,QAAM,QAAQ,gBAAgB,MAAM,OAAO;AAC3C,QAAM,SAAS,MAAM,uBAAuB,EAAE,KAAK,QAAQ,KAAK;AAChE,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,IAAM,iBAAiB,iBAAE,OAAO;AAAA,EAC9B,YAAY,iBAAE,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,UAAU,iBAAE,OAAO,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,EACrC,eAAe,iBAAE,OAAO,EAAE,IAAI,CAAC,EAAE,SAAS;AAC5C,CAAC;AAED,SAAS,KAAK,yBAAyB,OAAO,MAAM;AAClD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AAAA,EACxE;AACA,QAAM,UAAU,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACnD,QAAM,QAAQ,eAAe,MAAM,OAAO;AAC1C,QAAM,SAAS,MAAM,8BAA8B,EAAE,KAAK,QAAQ,KAAK;AACvE,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,IAAM,gBAAgB,iBAAE,OAAO;AAAA,EAC7B,WAAW,iBAAE,OAAO,EAAE,SAAS;AAAA,EAC/B,YAAY,iBAAE,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,UAAU,iBAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS;AAAA,EAC/C,UAAU,iBAAE,OAAO,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,EACrC,cAAc,iBACX;AAAA,IACC,iBAAE,OAAO;AAAA,MACP,IAAI,iBAAE,OAAO,EAAE,SAAS;AAAA,MACxB,MAAM,iBAAE,OAAO,EAAE,SAAS;AAAA,MAC1B,MAAM,iBAAE,OAAO,EAAE,SAAS;AAAA,IAC5B,CAAC;AAAA,EACH,EACC,SAAS;AACd,CAAC;AAED,SAAS,KAAK,qBAAqB,OAAO,MAAM;AAC9C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AAAA,EACxE;AACA,QAAM,UAAU,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACnD,QAAM,QAAQ,cAAc,MAAM,OAAO;AACzC,QAAM,SAAS,MAAM,uBAAuB,EAAE,KAAK,QAAQ,KAAK;AAChE,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,IAAM,mBAAmB,iBAAE,OAAO;AAAA,EAChC,UAAU,iBAAE,OAAO,EAAE,SAAS;AAAA,EAC9B,OAAO,iBAAE,OAAO,EAAE,SAAS;AAAA,EAC3B,OAAO,iBAAE,OAAO,EAAE,SAAS;AAC7B,CAAC;AAED,SAAS,KAAK,gBAAgB,OAAO,MAAM;AACzC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AAAA,EACxE;AACA,QAAM,UAAU,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACnD,QAAM,QAAQ,iBAAiB,MAAM,OAAO;AAC5C,QAAM,SAAS,MAAM,oBAAoB,EAAE,KAAK,QAAQ,KAAK;AAC7D,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,IAAM,iBAAiB,iBAAE,OAAO;AAAA,EAC9B,UAAU,iBAAE,OAAO,EAAE,SAAS;AAAA,EAC9B,OAAO,iBAAE,OAAO,EAAE,SAAS;AAAA,EAC3B,WAAW,iBAAE,OAAO,EAAE,SAAS;AAAA,EAC/B,kBAAkB,iBAAE,MAAM,iBAAE,OAAO,CAAC,EAAE,SAAS;AACjD,CAAC;AAED,SAAS,KAAK,aAAa,OAAO,MAAM;AACtC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AAAA,EACxE;AACA,QAAM,UAAU,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACnD,QAAM,QAAQ,eAAe,MAAM,OAAO;AAC1C,QAAM,SAAS,MAAM,yBAAyB,EAAE,KAAK,QAAQ,KAAK;AAClE,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,IAAM,kBAAkB,iBAAE,OAAO;AAAA,EAC/B,MAAM,iBAAE,OAAO,EAAE,IAAI,CAAC;AAAA,EACtB,cAAc,iBAAE,OAAO,EAAE,SAAS;AAAA,EAClC,YAAY,iBAAE,OAAO,EAAE,IAAI,CAAC;AAC9B,CAAC;AAED,SAAS,KAAK,cAAc,OAAO,MAAM;AACvC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AAAA,EACxE;AACA,QAAM,UAAU,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACnD,QAAM,QAAQ,gBAAgB,MAAM,OAAO;AAC3C,QAAM,SAAS,MAAM,oBAAoB,EAAE,KAAK,QAAQ,KAAK;AAC7D,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,IAAM,cAAc,iBAAE,OAAO;AAAA,EAC3B,QAAQ,iBAAE,OAAO,EAAE,IAAI,CAAC;AAAA,EACxB,aAAa,iBAAE,OAAO,iBAAE,QAAQ,CAAC,EAAE,SAAS;AAAA,EAC5C,mBAAmB,iBAAE,MAAM,iBAAE,OAAO,iBAAE,QAAQ,CAAC,CAAC,EAAE,SAAS;AAC7D,CAAC;AAED,SAAS,KAAK,yBAAyB,OAAO,MAAM;AAClD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AAAA,EACxE;AACA,QAAM,UAAU,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACnD,QAAM,QAAQ,YAAY,MAAM,OAAO;AACvC,QAAM,SAAS,MAAM,wBAAwB,EAAE,KAAK,QAAQ,KAAK;AACjE,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,IAAO,0BAAQ;;;ACzJf;AAAA;AAAA;AAAAC;AAIA;AAGA,IAAM,iBAAiB,IAAIC,MAA8C;AACzE,IAAMC,eAAc,KAAe;AAkBnC,eAAe,cAAcC,MAAU,QAAgB,MAAc,MAAoB;AACvF,QAAM,KAAKA,KAAI,cAAc,aAAa,MAAM;AAChD,QAAM,OAAOA,KAAI,cAAc,IAAI,EAAE;AACrC,QAAMC,OAAM,yBAAyB,IAAI;AACzC,SAAO,KAAK,MAAM,IAAI,QAAQA,MAAK,IAAI,CAAC;AAC1C;AALe;AAOf,eAAe,IAAI,eAAe,aAAa,CAAC;AAEhD,eAAe,KAAK,0BAA0B,OAAO,MAAM;AACzD,QAAM,OAAQ,MAAM,EAAE,IAAI,KAAK;AAC/B,QAAM,SAAS,KAAK;AACpB,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,sBAAsB,KAAK,iBAAiB;AAC5E,QAAM,WAAW,MAAM,cAAc,EAAE,KAAK,QAAQ,OAAO;AAAA,IACzD,QAAQ;AAAA,IACR,MAAM,KAAK,UAAU;AAAA,MACnB,GAAG;AAAA,MACH;AAAA,MACA,aAAY,oBAAI,KAAK,GAAE,YAAY;AAAA,IACrC,CAAC;AAAA,IACD,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,EAChD,CAAC;AACD,QAAM,OAAQ,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACpD,SAAO,EAAE,KAAK,MAAM,SAAS,MAAa;AAC5C,CAAC;AAED,eAAe,KAAK,4BAA4B,OAAO,MAAM;AAC3D,QAAM,OAAQ,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACjD,QAAM,SAAS,KAAK;AACpB,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,sBAAsB,KAAK,iBAAiB;AAC5E,QAAM,WAAW,MAAM,cAAc,EAAE,KAAK,QAAQ,SAAS,EAAE,QAAQ,OAAO,CAAC;AAC/E,QAAM,OAAQ,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACpD,SAAO,EAAE,KAAK,MAAM,SAAS,MAAa;AAC5C,CAAC;AAED,eAAe,KAAK,8BAA8B,OAAO,MAAM;AAC7D,QAAM,OAAQ,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACjD,QAAM,SAAS,KAAK;AACpB,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,sBAAsB,KAAK,iBAAiB;AAC5E,QAAM,WAAW,MAAM,cAAc,EAAE,KAAK,QAAQ,WAAW,EAAE,QAAQ,OAAO,CAAC;AACjF,QAAM,OAAQ,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACpD,SAAO,EAAE,KAAK,MAAM,SAAS,MAAa;AAC5C,CAAC;AAED,eAAe,IAAI,qCAAqC,OAAO,MAAM;AACnE,QAAM,SAAS,EAAE,IAAI,MAAM,QAAQ;AACnC,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,sBAAsB,KAAK,oBAAoB;AAC/E,QAAM,WAAW,MAAM,cAAc,EAAE,KAAK,QAAQ,QAAQ;AAC5D,QAAM,OAAQ,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACpD,SAAO,EAAE,KAAK,MAAM,SAAS,MAAa;AAC5C,CAAC;AAED,eAAe,IAAI,MAAMC,YAAW;AAEpC,eAAe,KAAK,oBAAoB,OAAO,MAAM;AACnD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,OAAQ,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACjD,QAAM,UAA2B;AAAA,IAC/B,GAAG;AAAA,IACH;AAAA,IACA,QAAQ,KAAK,UAAU;AAAA,EACzB;AACA,QAAM,WAAW,MAAM,cAAc,EAAE,KAAK,QAAQ,OAAO;AAAA,IACzD,QAAQ;AAAA,IACR,MAAM,KAAK,UAAU,EAAE,GAAG,SAAS,aAAY,oBAAI,KAAK,GAAE,YAAY,EAAE,CAAC;AAAA,IACzE,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,EAChD,CAAC;AACD,QAAM,OAAQ,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACpD,SAAO,EAAE,KAAK,MAAM,SAAS,MAAa;AAC5C,CAAC;AAED,eAAe,KAAK,mBAAmB,OAAO,MAAM;AAClD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,WAAW,MAAM,cAAc,EAAE,KAAK,QAAQ,SAAS,EAAE,QAAQ,OAAO,CAAC;AAC/E,QAAM,OAAQ,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACpD,SAAO,EAAE,KAAK,MAAM,SAAS,MAAa;AAC5C,CAAC;AAED,eAAe,KAAK,qBAAqB,OAAO,MAAM;AACpD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,WAAW,MAAM,cAAc,EAAE,KAAK,QAAQ,WAAW,EAAE,QAAQ,OAAO,CAAC;AACjF,QAAM,OAAQ,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACpD,SAAO,EAAE,KAAK,MAAM,SAAS,MAAa;AAC5C,CAAC;AAED,eAAe,IAAI,oBAAoB,OAAO,MAAM;AAClD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,wBAAwB,KAAK,sBAAsB;AACnF,QAAM,WAAW,MAAM,cAAc,EAAE,KAAK,QAAQ,QAAQ;AAC5D,QAAM,OAAQ,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACpD,SAAO,EAAE,KAAK,MAAM,SAAS,MAAa;AAC5C,CAAC;AAED,IAAO,mBAAQ;;;AC1Hf;AAAA;AAAA;AAAAC;AAIA;;;ACJA;AAAA;AAAA;AAAAC;AACA;AACA;AAWA,IAAM,+BAA+B;AA6DrC,IAAM,kBAAkB;AAAA,EACtB,SAAS;AAAA,EACT,UAAU;AAAA,EACV,UAAU;AAAA,EACV,WAAW;AACb;AAEA,eAAsB,kBACpBC,MACA,QACA,SAC2C;AAC3C,QAAM,eAAyB,CAAC,kBAAkB,+BAA+B;AACjF,QAAM,SAA8B,CAAC,MAAM;AAE3C,MAAI,QAAQ,gBAAgB;AAC1B,iBAAa,KAAK,gIAAgI;AAClJ,WAAO,KAAK,QAAQ,gBAAgB,QAAQ,cAAc;AAAA,EAC5D;AAEA,MAAI,QAAQ,gBAAgB;AAC1B,iBAAa;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA,IAKF;AACA,WAAO,KAAK,QAAQ,gBAAgB,QAAQ,cAAc;AAAA,EAC5D;AAEA,MAAI,QAAQ,eAAe;AACzB,iBAAa;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA,IAKF;AACA,WAAO,KAAK,QAAQ,eAAe,QAAQ,aAAa;AAAA,EAC1D;AAEA,QAAM,QAAQ,aAAa,SAAS,SAAS,aAAa,KAAK,OAAO,CAAC,KAAK;AAG5E,QAAM,iBAAiB,KAAK,IAAI,QAAQ,OAAO,GAAG,GAAG;AACrD,QAAM,gBAAgB,MAAM;AAAA,IAoB1BA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAuBI,KAAK;AAAA;AAAA;AAAA;AAAA,IAIT,CAAC,GAAG,QAAQ,cAAc;AAAA,EAC5B;AAEA,MAAI,cAAc,WAAW,GAAG;AAC9B,WAAO;AAAA,MACL,MAAM,CAAC;AAAA,MACP,MAAM,QAAQ;AAAA,MACd,MAAM,QAAQ;AAAA,MACd,OAAO;AAAA,IACT;AAAA,EACF;AAGA,QAAM,qBAAqB,MAAM,yBAAyBA,MAAK,MAAM;AAGrE,QAAM,UAAU,cAAc,IAAI,CAAC,QAAQ,IAAI,OAAO;AACtD,QAAM,qBAAqB,MAAM,oBAAoBA,MAAK,OAAO;AACjE,QAAM,eAAe,MAAM,cAAcA,MAAK,OAAO;AACrD,QAAM,mBAAmB,MAAM,yBAAyBA,MAAK,OAAO;AAGpE,QAAM,qBAAqB,MAAM,QAAQ;AAAA,IACvC,cAAc,IAAI,OAAO,QAAQ;AAC/B,YAAM,eAAe,IAAI,YAAY,OAAO,IAAI,SAAS,IAAI;AAC7D,UAAI;AACJ,UAAI,gBAAgB,OAAO,SAAS,YAAY,GAAG;AACjD,cAAM,eAAc,oBAAI,KAAK,GAAE,eAAe;AAC9C,cAAM,cAAc;AAAA,MACtB;AAEA,YAAM,kBAAkB,IAAI,gBACxB,uBAAuB,IAAI,aAAa,KACxC;AAGJ,YAAM,WAAW,iBAAiB,MAAM,IAAI,IAAI,OAAO;AACvD,UAAI,qBAAqB;AACzB,UAAI,qBAAgD;AAEpD,UAAI;AACF,cAAMC,UAAS,MAAMD,KAAI,MAAM,IAAI,UAAU,EAAE,MAAM,OAAO,CAAC;AAC7D,YAAIC,SAAQ;AACV,+BAAqBA,QAAO;AAC5B,+BAAqBA,QAAO;AAAA,QAC9B,OAAO;AAEL,gBAAM,iBAAuC;AAAA,YAC3C,QAAQ,IAAI;AAAA,YACZ,kBAAkB,IAAI,kBAAkB;AAAA,YACxC,oBAAoB,IAAI,wBAAwB;AAAA,YAChD,oBAAoB,IAAI,wBAAwB;AAAA,YAChD,kBAAkB,mBAAmB,IAAI,IAAI,OAAO,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU;AAAA,cAC1E,cAAc,KAAK;AAAA,cACnB,cAAc,KAAK;AAAA,cACnB,aAAa,KAAK;AAAA,YACpB,EAAE;AAAA,YACF,eAAe,iBAAiB,IAAI,IAAI,OAAO,KAAK,CAAC;AAAA,YACrD,YAAY,CAAC;AAAA,YACb,WAAW,aAAa,IAAI,IAAI,OAAO,KAAK,CAAC;AAAA,UAC/C;AAEA,gBAAM,gBAAgB,uBAAuB,oBAAoB,cAAc;AAC/E,+BAAqB,cAAc;AACnC,+BAAqB,cAAc;AAGnC,gBAAMD,KAAI,MAAM;AAAA,YACd;AAAA,YACA,KAAK,UAAU,EAAE,OAAO,oBAAoB,OAAO,mBAAmB,CAAC;AAAA,YACvE,EAAE,eAAe,MAAM;AAAA,UACzB,EAAE,MAAM,MAAM;AAAA,UAEd,CAAC;AAAA,QACH;AAAA,MACF,SAASE,SAAO;AACd,gBAAQ,MAAM,oCAAoCA,OAAK;AAAA,MAEzD;AAEA,aAAO;AAAA,QACL,QAAQ,IAAI;AAAA,QACZ,aAAa,IAAI,gBAAgB,IAAI,QAAQ;AAAA,QAC7C;AAAA,QACA,SAAS,IAAI,YAAY;AAAA,QACzB;AAAA,QACA,QAAQ,IAAI,UAAU;AAAA,QACtB,UAAU,IAAI,mBACV,IAAI,gBACF,GAAG,IAAI,gBAAgB,KAAK,IAAI,aAAa,KAC7C,IAAI,mBACN;AAAA,QACJ,gBAAgB,IAAI,wBAAwB;AAAA,QAC5C,iBAAiB,mBAAmB,IAAI,IAAI,OAAO,KAAK,CAAC;AAAA,QACzD,WAAW,aAAa,IAAI,IAAI,OAAO,KAAK,CAAC;AAAA,QAC7C,sBAAsB,iBAAiB,IAAI,IAAI,OAAO,KAAK,CAAC;AAAA,QAC5D;AAAA,QACA;AAAA,QACA,cAAc,IAAI,UAAU;AAAA,QAC5B,gBAAgB,IAAI,gBAAgB;AAAA,MACtC;AAAA,IACF,CAAC;AAAA,EACH;AAGA,QAAM,iBAAiB,mBAAmB,KAAK,CAAC,GAAG,MAAM;AAEvD,QAAI,EAAE,iBAAiB,YAAY,EAAE,iBAAiB,SAAU,QAAO;AACvE,QAAI,EAAE,iBAAiB,YAAY,EAAE,iBAAiB,SAAU,QAAO;AAGvE,WAAO,EAAE,qBAAqB,EAAE;AAAA,EAClC,CAAC;AAGD,QAAM,UAAU,QAAQ,OAAO,KAAK,QAAQ;AAC5C,QAAM,gBAAgB,eAAe,MAAM,QAAQ,SAAS,QAAQ,IAAI;AAExE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,MAAM,QAAQ;AAAA,IACd,MAAM,QAAQ;AAAA,IACd,OAAO,eAAe;AAAA,EACxB;AACF;AAnNsB;AAsNtB,SAAS,uBACP,SACA,SAIA;AACA,QAAM,WAAW,6BAA6B,SAAS,OAAO;AAC9D,QAAM,cAAc,gCAAgC,SAAS,OAAO;AACpE,QAAM,QAAQ,yBAAyB,SAAS,OAAO;AACvD,QAAM,YAAY,6BAA6B,SAAS,OAAO;AAG/D,QAAM,eAAe,KAAK;AAAA,KACvB,SAAS,QAAQ,MAAM,YAAY,QAAQ,OAAO,MAAM,QAAQ,OAAO,UAAU,QAAQ,OAAO;AAAA,EACnG,IAAI;AAEJ,QAAM,qBAAqB,4BAA4B,YAAY;AAEnE,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAvBS;AAyBT,eAAe,oBAAoBF,MAAU,SAAmB;AAC9D,QAAMG,OAAM,oBAAI,IAAgD;AAChE,MAAI,QAAQ,WAAW,EAAG,QAAOA;AAEjC,QAAM,eAAe,QAAQ,IAAI,MAAM,GAAG,EAAE,KAAK,GAAG;AACpD,QAAM,OAAO,MAAM;AAAA,IAMjBH,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAS0B,YAAY;AAAA;AAAA,IAEtC;AAAA,EACF;AAEA,aAAW,OAAO,MAAM;AACtB,UAAM,OAAOG,KAAI,IAAI,IAAI,OAAO,KAAK,CAAC;AACtC,SAAK,KAAK;AAAA,MACR,cAAc,IAAI,iBAAiB;AAAA,MACnC,cAAc,IAAI,sBAAsB;AAAA,MACxC,aAAa,IAAI,qBAAqB;AAAA,IACxC,CAAC;AACD,IAAAA,KAAI,IAAI,IAAI,SAAS,IAAI;AAAA,EAC3B;AACA,SAAOA;AACT;AApCe;AAsCf,eAAe,cAAcH,MAAU,SAAmB;AACxD,QAAMG,OAAM,oBAAI,IAAsB;AACtC,MAAI,QAAQ,WAAW,EAAG,QAAOA;AACjC,QAAM,eAAe,QAAQ,IAAI,MAAM,GAAG,EAAE,KAAK,GAAG;AACpD,QAAM,OAAO,MAAM;AAAA,IAIjBH,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,8BAG0B,YAAY;AAAA;AAAA,IAEtC;AAAA,EACF;AACA,aAAW,OAAO,MAAM;AACtB,UAAM,OAAOG,KAAI,IAAI,IAAI,OAAO,KAAK,CAAC;AACtC,QAAI,IAAI,WAAY,MAAK,KAAK,IAAI,UAAU;AAC5C,IAAAA,KAAI,IAAI,IAAI,SAAS,IAAI;AAAA,EAC3B;AACA,SAAOA;AACT;AAtBe;AAwBf,eAAe,yBAAyBH,MAAU,SAAmB;AACnE,QAAMG,OAAM,oBAAI,IAAsB;AACtC,MAAI,QAAQ,WAAW,EAAG,QAAOA;AACjC,QAAM,eAAe,QAAQ,IAAI,MAAM,GAAG,EAAE,KAAK,GAAG;AACpD,QAAM,OAAO,MAAM;AAAA,IAIjBH,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,8BAG0B,YAAY;AAAA;AAAA,IAEtC;AAAA,EACF;AACA,aAAW,OAAO,MAAM;AACtB,UAAM,OAAOG,KAAI,IAAI,IAAI,OAAO,KAAK,CAAC;AACtC,QAAI,IAAI,oBAAqB,MAAK,KAAK,IAAI,mBAAmB;AAC9D,IAAAA,KAAI,IAAI,IAAI,SAAS,IAAI;AAAA,EAC3B;AACA,SAAOA;AACT;AAtBe;AAwBf,SAASC,UAAiB;AACxB,UAAO,oBAAI,KAAK,GAAE,YAAY;AAChC;AAFS,OAAAA,SAAA;AAIT,SAASC,SAAQ,MAAsB;AACrC,QAAMC,QAAO,oBAAI,KAAK;AACtB,EAAAA,MAAK,WAAWA,MAAK,WAAW,IAAI,IAAI;AACxC,SAAOA,MAAK,YAAY;AAC1B;AAJS,OAAAD,UAAA;AAMT,SAAS,cAAc,GAAW,GAA6B;AAC7D,SAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,MAAO,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,CAAE;AAC3D;AAFS;AAIT,eAAsB,sBAAsBL,MAAU,SAA+B;AACnF,MAAI;AACF,YAAQ,IAAI,kDAAkD,KAAK,UAAU;AAAA,MAC3E,UAAU,QAAQ;AAAA,MAClB,YAAY,QAAQ;AAAA,MACpB,YAAY,CAAC,CAAC,QAAQ;AAAA,IACxB,CAAC,CAAC;AAGF,QAAI,CAAC,QAAQ,YAAY,CAAC,QAAQ,YAAY;AAC5C,YAAM,IAAI,SAAS,mEAAgC,KAAK,wBAAwB;AAAA,IAClF;AAEA,QAAI,QAAQ,aAAa,QAAQ,YAAY;AAC3C,YAAM,IAAI,SAAS,gHAA2B,KAAK,uBAAuB;AAAA,IAC5E;AAGA,YAAQ,IAAI,qDAAqD;AACjE,UAAM,iBAAiB,MAAM;AAAA,MAC3BA,KAAI;AAAA,MACJ;AAAA,MACA,CAAC,QAAQ,UAAU;AAAA,IACrB;AAEA,QAAI,CAAC,gBAAgB;AACnB,YAAM,IAAI,SAAS,+EAAmB,KAAK,yBAAyB;AAAA,IACtE;AAGA,YAAQ,IAAI,yDAAyD;AACrE,UAAM,YAAY,MAAM;AAAA,MACtBA,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA,MAGA,CAAC,QAAQ,UAAU,QAAQ,YAAY,gBAAgB,OAAO;AAAA,IAChE;AAEA,QAAI,WAAW;AACb,cAAQ,IAAI,oDAAoD,UAAU,UAAU;AACpF,YAAM,IAAI,SAAS,oGAAyB,KAAK,4BAA4B;AAAA,IAC/E;AAGA,YAAQ,IAAI,uDAAuD;AACnE,UAAM,CAAC,OAAO,KAAK,IAAI,cAAc,QAAQ,UAAU,QAAQ,UAAU;AACzE,UAAM,gBAAgB,MAAM;AAAA,MAC1BA,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA,MAGA,CAAC,OAAO,OAAO,OAAO,KAAK;AAAA,IAC7B;AAEA,QAAI,eAAe,WAAW;AAC5B,cAAQ,IAAI,+CAA+C,cAAc,QAAQ;AACjF,YAAM,IAAI,SAAS,yEAAkB,KAAK,0BAA0B;AAAA,IACtE;AAGA,UAAMO,aAAY,OAAO,WAAW;AACpC,UAAM,MAAMH,QAAO;AACnB,UAAM,YAAYC,SAAQ,4BAA4B;AAEtD,YAAQ,IAAI,kDAAkD;AAAA,MAC5D,WAAAE;AAAA,MACA,UAAU,QAAQ;AAAA,MAClB,YAAY,QAAQ;AAAA,IACtB,CAAC;AAED,QAAI;AACF,YAAM;AAAA,QACJP,KAAI;AAAA,QACJ;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,UACEO;AAAA,UACA,QAAQ;AAAA,UACR,QAAQ;AAAA,UACR,QAAQ,WAAW;AAAA,UACnB,gBAAgB;AAAA,UAChB;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,SAAS;AAChB,cAAQ,MAAM,mDAAmD;AAAA,QAC/D,OAAO,mBAAmB,QAAQ,QAAQ,UAAU,OAAO,OAAO;AAAA,QAClE,OAAO,mBAAmB,QAAQ,QAAQ,QAAQ;AAAA,MACpD,CAAC;AACD,YAAM,IAAI;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAEA,YAAQ,IAAI,yDAAyDA,UAAS;AAG9E,QAAI;AACF,cAAQ,IAAI,6DAA6D,QAAQ,UAAU;AAG3F,YAAM,aAAa,MAAM;AAAA,QAKvBP,KAAI;AAAA,QACJ;AAAA,QACA,CAAC,QAAQ,QAAQ;AAAA,MACnB;AAEA,YAAM,aAAa,YAAY,gBAAgB,YAAY,QAAQ;AAEnE,YAAM,mBAAmBA,MAAK;AAAA,QAC5B,QAAQ,QAAQ;AAAA,QAChB,MAAM;AAAA,QACN,OAAO;AAAA,QACP,SAAS,GAAG,UAAU;AAAA,QACtB,UAAU;AAAA,QACV,UAAU;AAAA,QACV,WAAW;AAAA,QACX,YAAY;AAAA,UACV,WAAAO;AAAA,UACA,UAAU,QAAQ;AAAA,UAClB;AAAA,QACF;AAAA,QACA,cAAc,QAAQ;AAAA,MACxB,CAAC;AAED,cAAQ,IAAI,wDAAwD;AAAA,IACtE,SAAS,mBAAmB;AAE1B,cAAQ,MAAM,wDAAwD;AAAA,QACpE,OAAO,6BAA6B,QAAQ,kBAAkB,UAAU,OAAO,iBAAiB;AAAA,QAChG,OAAO,6BAA6B,QAAQ,kBAAkB,QAAQ;AAAA,QACtE,YAAY,QAAQ;AAAA,MACtB,CAAC;AAAA,IACH;AAEA,WAAO,EAAE,WAAAA,WAAU;AAAA,EACrB,SAASL,SAAO;AACd,YAAQ,MAAM,2CAA2C;AAAA,MACvD,OAAOA,mBAAiB,QAAQA,QAAM,UAAU,OAAOA,OAAK;AAAA,MAC5D,OAAOA,mBAAiB,QAAQA,QAAM,QAAQ;AAAA,MAC9C,MAAMA,mBAAiB,QAAQA,QAAM,YAAY,OAAO,OAAOA;AAAA,MAC/D,SAAS;AAAA,QACP,UAAU,QAAQ;AAAA,QAClB,YAAY,QAAQ;AAAA,MACtB;AAAA,IACF,CAAC;AAGD,QAAIA,mBAAiB,UAAU;AAC7B,YAAMA;AAAA,IACR;AAGA,UAAM,IAAI;AAAA,MACRA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,MACzC;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;AA3KsB;AA6KtB,eAAsB,iBACpBF,MACA,QACA,MACA,MAC+C;AAC/C,SAAO,aAAaA,MAAK,EAAE,QAAQ,MAAM,MAAM,MAAM,OAAO,CAAC;AAC/D;AAPsB;AAStB,eAAsB,qBACpBA,MACA,QACA,MACA,MAC+C;AAC/C,SAAO,aAAaA,MAAK,EAAE,QAAQ,MAAM,MAAM,MAAM,WAAW,CAAC;AACnE;AAPsB;AAStB,eAAe,aACbA,MACA,SAC+C;AAC/C,QAAM,SAAS,QAAQ,SAAS,SAAS,cAAc;AACvD,QAAM,gBAAgB,QAAQ,SAAS,SAAS,gBAAgB;AAEhE,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ,yDAAyD,MAAM;AAAA,IAC/D,CAAC,QAAQ,MAAM;AAAA,EACjB;AACA,QAAM,QAAQ,UAAU,SAAS;AACjC,QAAM,UAAU,QAAQ,OAAO,KAAK,QAAQ;AAE5C,QAAM,OAAO,MAAM;AAAA,IAcjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAc+C,aAAa;AAAA,iBAC/C,MAAM;AAAA;AAAA;AAAA;AAAA,IAInB,CAAC,QAAQ,QAAQ,QAAQ,MAAM,MAAM;AAAA,EACvC;AAEA,QAAM,OAA8B,KAAK,IAAI,CAAC,SAAS;AAAA,IACrD,WAAW,IAAI;AAAA,IACf,UAAU,IAAI;AAAA,IACd,YAAY,IAAI;AAAA,IAChB,SAAS,IAAI,WAAW;AAAA,IACxB,QAAQ,IAAI;AAAA,IACZ,iBAAiB,IAAI,oBAAoB;AAAA,IACzC,aAAa,IAAI,gBAAgB;AAAA,IACjC,WAAW,IAAI,cAAc;AAAA,IAC7B,WAAW,IAAI;AAAA,IACf,SAAS;AAAA,MACP,QAAQ,IAAI;AAAA,MACZ,MAAM,IAAI,gBAAgB;AAAA,MAC1B,iBAAiB,IAAI,wBACjB,uBAAuB,IAAI,qBAAqB,KAChD;AAAA,IACN;AAAA,EACF,EAAE;AAEF,SAAO;AAAA,IACL;AAAA,IACA,MAAM,QAAQ;AAAA,IACd,MAAM,QAAQ;AAAA,IACd;AAAA,EACF;AACF;AA7Ee;AA+Ef,eAAsB,sBAAsBA,MAAU,SAAwB;AAC5E,QAAM,UAAU,MAAM;AAAA,IAMpBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,QAAQ,SAAS;AAAA,EACpB;AAEA,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,MAAM,+EAAmB;AAAA,EACrC;AACA,MAAI,QAAQ,gBAAgB,QAAQ,YAAY;AAC9C,UAAM,IAAI,MAAM,uEAAgB;AAAA,EAClC;AACA,MAAI,QAAQ,WAAW,gBAAgB,SAAS;AAC9C,UAAM,IAAI,MAAM,iEAAe;AAAA,EACjC;AAEA,QAAM,MAAMI,QAAO;AACnB,QAAM,CAAC,OAAO,KAAK,IAAI,cAAc,QAAQ,WAAW,QAAQ,WAAW;AAE3E,QAAM,YAAYJ,KAAI,IAAI;AAAA,IACxB;AAAA,MACE,KAAK;AAAA;AAAA;AAAA,MAGL,QAAQ;AAAA,QACN,gBAAgB;AAAA,QAChB,QAAQ,mBAAmB;AAAA,QAC3B;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,MACV;AAAA,IACF;AAAA,IACA;AAAA,MACE,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASL,QAAQ,CAAC,OAAO,WAAW,GAAG,OAAO,OAAO,KAAK,KAAK,GAAG;AAAA,IAC3D;AAAA,EACF,CAAC;AAGD,MAAI;AACF,YAAQ,IAAI,sEAAsE,QAAQ,SAAS;AAGnG,UAAM,eAAe,MAAM;AAAA,MAIzBA,KAAI;AAAA,MACJ;AAAA,MACA,CAAC,QAAQ,WAAW;AAAA,IACtB;AAEA,UAAM,eAAe,cAAc,gBAAgB,cAAc,QAAQ;AAEzE,UAAM,mBAAmBA,MAAK;AAAA,MAC5B,QAAQ,QAAQ;AAAA,MAChB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS,GAAG,YAAY;AAAA,MACxB,UAAU;AAAA,MACV,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,QACV,WAAW,QAAQ;AAAA,QACnB,WAAW,QAAQ;AAAA,QACnB,aAAa;AAAA,MACf;AAAA,MACA,cAAc,QAAQ;AAAA,IACxB,CAAC;AAED,YAAQ,IAAI,mEAAmE;AAAA,EACjF,SAAS,mBAAmB;AAC1B,YAAQ,MAAM,mEAAmE;AAAA,MAC/E,OAAO,6BAA6B,QAAQ,kBAAkB,UAAU,OAAO,iBAAiB;AAAA,MAChG,UAAU,QAAQ;AAAA,IACpB,CAAC;AAAA,EACH;AACF;AA3FsB;AA6FtB,eAAsB,sBAAsBA,MAAU,SAAwB;AAC5E,QAAM,UAAU,MAAM;AAAA,IAKpBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,QAAQ,SAAS;AAAA,EACpB;AAEA,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,MAAM,+EAAmB;AAAA,EACrC;AAEA,MAAI,QAAQ,gBAAgB,QAAQ,YAAY;AAC9C,UAAM,IAAI,MAAM,uEAAgB;AAAA,EAClC;AAEA,MAAI,QAAQ,WAAW,gBAAgB,SAAS;AAC9C,UAAM,IAAI,MAAM,iEAAe;AAAA,EACjC;AAEA,QAAM,MAAMI,QAAO;AACnB,QAAM;AAAA,IACJJ,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,CAAC,gBAAgB,UAAU,QAAQ,mBAAmB,MAAM,KAAK,KAAK,QAAQ,SAAS;AAAA,EACzF;AAGA,MAAI;AACF,YAAQ,IAAI,qEAAqE,QAAQ,SAAS;AAGlG,UAAM,eAAe,MAAM;AAAA,MAIzBA,KAAI;AAAA,MACJ;AAAA,MACA,CAAC,QAAQ,WAAW;AAAA,IACtB;AAEA,UAAM,eAAe,cAAc,gBAAgB,cAAc,QAAQ;AAEzE,UAAM,mBAAmBA,MAAK;AAAA,MAC5B,QAAQ,QAAQ;AAAA,MAChB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS,GAAG,YAAY;AAAA,MACxB,UAAU;AAAA,MACV,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,QACV,WAAW,QAAQ;AAAA,QACnB,WAAW,QAAQ;AAAA,QACnB,aAAa;AAAA,MACf;AAAA,MACA,cAAc,QAAQ;AAAA,IACxB,CAAC;AAED,YAAQ,IAAI,kEAAkE;AAAA,EAChF,SAAS,mBAAmB;AAC1B,YAAQ,MAAM,kEAAkE;AAAA,MAC9E,OAAO,6BAA6B,QAAQ,kBAAkB,UAAU,OAAO,iBAAiB;AAAA,MAChG,UAAU,QAAQ;AAAA,IACpB,CAAC;AAAA,EACH;AACF;AAvEsB;AAyEtB,eAAsB,YACpBA,MACA,QACA,MACA,MACwC;AACxC,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,QAAQ,MAAM;AAAA,EACjB;AACA,QAAM,QAAQ,UAAU,SAAS;AACjC,QAAM,UAAU,OAAO,KAAK;AAE5B,QAAM,OAAO,MAAM;AAAA,IASjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAcA,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,MAAM,MAAM;AAAA,EAC/C;AAEA,QAAM,OAAuB,KAAK,IAAI,CAAC,SAAS;AAAA,IAC9C,SAAS,IAAI;AAAA,IACb,WAAW,IAAI;AAAA,IACf,aAAa,IAAI,gBAAgB;AAAA,IACjC,wBAAwB,IAAI,wBACxB,uBAAuB,IAAI,qBAAqB,KAChD;AAAA,IACJ,WAAW,IAAI;AAAA,EACjB,EAAE;AAEF,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAzDsB;AA2DtB,eAAsB,YAAYA,MAAU,SAA6B;AACvE,QAAM,QAAQ,MAAM;AAAA,IAMlBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,QAAQ,OAAO;AAAA,EAClB;AAEA,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,MAAM,+EAAmB;AAAA,EACrC;AAEA,MAAI,MAAM,cAAc,GAAG;AACzB;AAAA,EACF;AAEA,MAAI,MAAM,aAAa,QAAQ,UAAU,MAAM,aAAa,QAAQ,QAAQ;AAC1E,UAAM,IAAI,MAAM,2FAAqB;AAAA,EACvC;AAEA,QAAM,MAAMI,QAAO;AACnB,QAAM;AAAA,IACJJ,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,CAAC,KAAK,QAAQ,QAAQ,KAAK,QAAQ,OAAO;AAAA,EAC5C;AACF;AAnCsB;AAqCtB,eAAsB,uBAAuBA,MAAU,QAAgB;AACrE,SAAO;AAAA,IACLA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AACF;AANsB;AAQtB,eAAsB,mBAAmBA,MAAU,QAAgB,aAAqB;AACtF,QAAM,MAAMI,QAAO;AACnB,QAAM,YAAYJ,KAAI,IAAI;AAAA,IACxB,EAAE,KAAK,gDAAgD,QAAQ,CAAC,MAAM,EAAE;AAAA,IACxE;AAAA,MACE,KAAK;AAAA;AAAA;AAAA;AAAA,MAIL,QAAQ,CAAC,QAAQ,aAAa,WAAW,GAAG,KAAK,KAAK,GAAG;AAAA,IAC3D;AAAA,EACF,CAAC;AACH;AAZsB;AActB,eAAsB,wBAAwBA,MAAU,QAAgB;AACtE,QAAM,QAAQA,KAAI,IAAI,gDAAgD,CAAC,MAAM,CAAC;AAChF;AAFsB;AAItB,eAAsB,eACpBA,MACA,SAQA;AACA,QAAM,MAAMI,QAAO;AACnB,QAAM;AAAA,IACJJ,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ,mBAAmB;AAAA,MAC3B,QAAQ,kBAAkB,IAAI;AAAA,MAC9B;AAAA,MACA;AAAA,IACJ;AAAA,EACA;AACF;AA7BsB;AA+BtB,eAAe,yBAAyBA,MAAU,QAA+C;AAC/F,QAAM,UAAU,MAAM;AAAA,IAMpBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,CAAC,MAAM;AAAA,EACT;AAEA,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,SAAS,0EAAmB,KAAK,yBAAyB;AAAA,EACtE;AAEA,QAAM,eAAe,MAAM;AAAA,IAOzBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,kBAA2C,aAAa,IAAI,CAAC,SAAS;AAAA,IAC1E,YAAY,IAAI,eAAe;AAAA,IAC/B,cAAc,IAAI,iBAAiB;AAAA,IACnC,cAAc,IAAI,iBAAiB;AAAA,IACnC,mBAAmB,IAAI;AAAA,IACvB,kBAAkB,IAAI;AAAA,EACxB,EAAE;AAEF,QAAM,iBAAiB,MAAM,yBAAyBA,MAAK,CAAC,MAAM,CAAC;AACnE,QAAM,eAAe,MAAM,cAAcA,MAAK,CAAC,MAAM,CAAC;AAEtD,QAAM,gBAAgB,MAAM;AAAA,IAG1BA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,CAAC,MAAM;AAAA,EACT;AAEA,SAAO;AAAA,IACL,QAAQ,QAAQ;AAAA,IAChB,kBAAkB,QAAQ,kBAAkB;AAAA,IAC5C,oBAAoB,QAAQ,iBAAiB;AAAA,IAC7C,oBAAoB,QAAQ,iBAAiB;AAAA,IAC7C;AAAA,IACA,eAAe,eAAe,IAAI,MAAM,KAAK,CAAC;AAAA,IAC9C,YAAY,cACT,IAAI,CAAC,QAAQ,IAAI,eAAe,EAChC,OAAO,CAAC,SAAyB,QAAQ,IAAI,CAAC;AAAA,IACjD,WAAW,aAAa,IAAI,MAAM,KAAK,CAAC;AAAA,EAC1C;AACF;AA/Ee;AAiFf,SAAS,iBAAiB,GAAa,GAAuB;AAC5D,QAAM,OAAO,IAAI,IAAI,EAAE,IAAI,CAAC,UAAU,MAAM,YAAY,CAAC,CAAC;AAC1D,QAAM,OAAO,oBAAI,IAAY;AAC7B,QAAM,SAAmB,CAAC;AAC1B,aAAW,SAAS,GAAG;AACrB,UAAM,MAAM,MAAM,YAAY;AAC9B,QAAI,CAAC,KAAK,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,GAAG;AACnC,WAAK,IAAI,GAAG;AACZ,aAAO,KAAK,KAAK;AAAA,IACnB;AAAA,EACF;AACA,SAAO;AACT;AAZS;AAcT,SAAS,6BACP,SACA,SAMA;AACA,QAAM,mBAA6B,CAAC;AACpC,QAAM,0BAAoC,CAAC;AAE3C,MAAI,QAAQ;AAEZ,MAAI,QAAQ,kBAAkB;AAC5B,UAAMQ,kBAAiB,QAAQ,gBAAgB;AAAA,MAC7C,CAAC,SAAS,KAAK,eAAe,QAAQ;AAAA,IACxC;AACA,QAAIA,gBAAe,SAAS,GAAG;AAC7B,YAAM,QAAQ,QAAQ,sBAAsB,QAAQ,sBAAsB;AAC1E,8BAAwB,KAAK,KAAK;AAClC,eAAS;AACT,uBAAiB,KAAK,2FAAqB;AAAA,IAC7C;AAAA,EACF;AAEA,MAAI,QAAQ,kBAAkB;AAC5B,UAAM,cAAc,QAAQ,gBAAgB;AAAA,MAC1C,CAAC,SAAS,KAAK,eAAe,QAAQ;AAAA,IACxC;AACA,QAAI,YAAY,SAAS,GAAG;AAC1B,YAAM,QAAQ,QAAQ,sBAAsB,QAAQ,sBAAsB;AAC1E,8BAAwB,KAAK,KAAK;AAClC,eAAS;AACT,uBAAiB,KAAK,6GAAwB;AAAA,IAChD;AAAA,EACF;AAEA,QAAM,iBAAiB,QAAQ,gBAC5B,IAAI,CAAC,SAAS,KAAK,gBAAgB,KAAK,gBAAgB,OAAO,KAAK,cAAc,EAAE,CAAC,EACrF,OAAO,CAAC,UAA2B,MAAM,SAAS,CAAC;AACtD,QAAM,iBAAiB,QAAQ,gBAC5B,IAAI,CAAC,SAAS,KAAK,gBAAgB,KAAK,gBAAgB,OAAO,KAAK,cAAc,EAAE,CAAC,EACrF,OAAO,CAAC,UAA2B,MAAM,SAAS,CAAC;AAEtD,QAAM,wBAAwB,iBAAiB,gBAAgB,cAAc;AAE7E,MAAI,sBAAsB,SAAS,GAAG;AACpC,aAAS;AACT,qBAAiB,KAAK,8GAAyB;AAAA,EACjD;AAEA,MAAI,aAAa;AACjB,MAAI,sBAAsB,SAAS,GAAG;AACpC,UAAM,WAAW,sBAAsB,IAAI,CAAC,SAAS;AACnD,YAAM,aAAa,KAAK,YAAY;AACpC,YAAM,kBAAkB,QAAQ,gBAAgB,KAAK,CAAC,SAAS;AAC7D,cAAM,YAAY,KAAK,gBAAgB,KAAK,gBAAgB;AAC5D,eAAO,UAAU,YAAY,MAAM;AAAA,MACrC,CAAC;AACD,YAAM,kBAAkB,QAAQ,gBAAgB,KAAK,CAAC,SAAS;AAC7D,cAAM,YAAY,KAAK,gBAAgB,KAAK,gBAAgB;AAC5D,eAAO,UAAU,YAAY,MAAM;AAAA,MACrC,CAAC;AACD,YAAM,eAAe,iBAAiB,oBAAoB,iBAAiB;AAC3E,YAAM,eAAe,iBAAiB,oBAAoB,iBAAiB;AAC3E,UAAI,gBAAgB,QAAQ,gBAAgB,MAAM;AAChD,cAAM,OAAO,KAAK,IAAI,eAAe,YAAY;AACjD,YAAI,QAAQ,EAAG,QAAO;AACtB,YAAI,QAAQ,EAAG,QAAO;AACtB,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT,CAAC;AAED,QAAI,SAAS,SAAS,GAAG;AACvB,mBAAa,KAAK,IAAI,IAAI,SAAS,OAAO,CAAC,KAAK,UAAU,MAAM,OAAO,CAAC,IAAI,SAAS,MAAM;AAC3F,UAAI,cAAc,IAAI;AACpB,yBAAiB,KAAK,uGAAuB;AAAA,MAC/C;AAAA,IACF;AAAA,EACF;AAEA,WAAS;AAET,MAAI,UAAU,GAAG;AACf,QAAI,QAAQ,gBAAgB,WAAW,KAAK,QAAQ,gBAAgB,WAAW,GAAG;AAChF,cAAQ;AACR,uBAAiB,KAAK,6IAA+B;AAAA,IACvD,OAAO;AACL,cAAQ;AACR,uBAAiB,KAAK,6GAAwB;AAAA,IAChD;AAAA,EACF;AAEA,SAAO;AAAA,IACL,OAAO,KAAK,IAAI,KAAK,KAAK,MAAM,QAAQ,EAAE,IAAI,EAAE;AAAA,IAChD,aAAa,iBAAiB,KAAK,GAAG;AAAA,IACtC,yBAAyB,MAAM,KAAK,IAAI,IAAI,uBAAuB,CAAC;AAAA,IACpE,uBAAuB,MAAM,KAAK,IAAI,IAAI,qBAAqB,CAAC;AAAA,EAClE;AACF;AArGS;AAuGT,SAAS,sBAAsB,SAAsB,SAAsB,MAAiC;AAC1G,QAAM,CAAC,OAAO,MAAM,IAAI;AACxB,QAAM,YAAY,QAAQ,IAAI,KAAK;AACnC,QAAM,aAAa,QAAQ,IAAI,MAAM;AACrC,QAAM,YAAY,QAAQ,IAAI,KAAK;AACnC,QAAM,aAAa,QAAQ,IAAI,MAAM;AACrC,SAAQ,aAAa,cAAgB,cAAc;AACrD;AAPS;AAST,SAAS,gCACP,SACA,SAC2D;AAC3D,QAAM,UAAU,IAAI,IAAI,QAAQ,cAAc,IAAI,CAAC,UAAU,MAAM,YAAY,CAAC,CAAC;AACjF,QAAM,UAAU,IAAI,IAAI,QAAQ,cAAc,IAAI,CAAC,UAAU,MAAM,YAAY,CAAC,CAAC;AAEjF,MAAI,QAAQ,SAAS,KAAK,QAAQ,SAAS,GAAG;AAC5C,WAAO;AAAA,MACL,OAAO;AAAA,MACP,aAAa;AAAA,MACb,SAAS,CAAC;AAAA,IACZ;AAAA,EACF;AAEA,QAAM,eAAe,MAAM,KAAK,OAAO,EAAE,OAAO,CAAC,UAAU,QAAQ,IAAI,KAAK,CAAC;AAC7E,MAAI,QAAQ,aAAa,SAAS;AAElC,QAAM,qBAA8C;AAAA,IAClD,CAAC,aAAa,WAAW;AAAA,IACzB,CAAC,UAAU,WAAW;AAAA,IACtB,CAAC,WAAW,YAAY;AAAA,IACxB,CAAC,cAAc,UAAU;AAAA,EAC3B;AAEA,MAAI,qBAAqB;AACzB,aAAW,QAAQ,oBAAoB;AACrC,QAAI,sBAAsB,SAAS,SAAS,IAAI,GAAG;AACjD,4BAAsB;AAAA,IACxB;AAAA,EACF;AAEA,WAAS;AAET,MAAI,UAAU,GAAG;AACf,YAAQ;AAAA,EACV;AAEA,SAAO;AAAA,IACL,OAAO,KAAK,IAAI,KAAK,KAAK,MAAM,QAAQ,EAAE,IAAI,EAAE;AAAA,IAChD,aACE,aAAa,SAAS,IAClB,kJACA,qBAAqB,IACnB,mGACA;AAAA,IACR,SAAS;AAAA,EACX;AACF;AAhDS;AAkDT,SAAS,yBACP,SACA,SAC+D;AAC/D,MAAI,QAAQ,WAAW,WAAW,KAAK,QAAQ,WAAW,WAAW,GAAG;AACtE,WAAO;AAAA,MACL,OAAO;AAAA,MACP,aAAa;AAAA,MACb,aAAa,CAAC;AAAA,IAChB;AAAA,EACF;AAEA,QAAM,cAAc,iBAAiB,QAAQ,YAAY,QAAQ,UAAU;AAC3E,MAAI,QAAQ,YAAY,SAAS;AAEjC,QAAM,oBAAoB,QAAQ,WAAW,IAAI,CAAC,SAAS,KAAK,YAAY,CAAC;AAC7E,QAAM,oBAAoB,QAAQ,WAAW,IAAI,CAAC,SAAS,KAAK,YAAY,CAAC;AAC7E,QAAM,aAAa,IAAI,IAAI,iBAAiB;AAC5C,QAAM,aAAa,IAAI,IAAI,iBAAiB;AAE5C,QAAM,qBAA8C;AAAA,IAClD,CAAC,YAAY,QAAQ;AAAA,IACrB,CAAC,YAAY,WAAW;AAAA,IACxB,CAAC,aAAa,cAAc;AAAA,EAC9B;AAEA,aAAW,CAAC,GAAG,CAAC,KAAK,oBAAoB;AACvC,QAAK,WAAW,IAAI,CAAC,KAAK,WAAW,IAAI,CAAC,KAAO,WAAW,IAAI,CAAC,KAAK,WAAW,IAAI,CAAC,GAAI;AACxF,eAAS;AACT;AAAA,IACF;AAAA,EACF;AAEA,MAAI,UAAU,GAAG;AACf,YAAQ;AAAA,EACV;AAEA,SAAO;AAAA,IACL,OAAO,KAAK,IAAI,KAAK,KAAK,MAAM,QAAQ,EAAE,IAAI,EAAE;AAAA,IAChD,aACE,YAAY,SAAS,IACjB,8HACA;AAAA,IACN;AAAA,EACF;AACF;AA7CS;AA+CT,SAAS,6BACP,SACA,SACmE;AACnE,MAAI,QAAQ,UAAU,WAAW,KAAK,QAAQ,UAAU,WAAW,GAAG;AACpE,WAAO;AAAA,MACL,OAAO;AAAA,MACP,aAAa;AAAA,MACb,iBAAiB,CAAC;AAAA,IACpB;AAAA,EACF;AAEA,QAAM,kBAAkB,iBAAiB,QAAQ,WAAW,QAAQ,SAAS;AAC7E,QAAM,eAAc,oBAAI;AAAA,IACtB,CAAC,GAAG,QAAQ,UAAU,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,GAAG,GAAG,QAAQ,UAAU,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;AAAA,EACrG,GAAE;AACF,QAAM,QAAQ,cAAc,IAAK,gBAAgB,SAAS,IAAK,cAAc;AAC7E,QAAM,QAAQ,KAAK,MAAM,KAAK,IAAI,KAAK,QAAQ,GAAI,CAAC,IAAI;AAExD,SAAO;AAAA,IACL;AAAA,IACA,aACE,gBAAgB,SAAS,IACrB,6JACA;AAAA,IACN;AAAA,EACF;AACF;AA3BS;AA6BT,SAAS,4BAA4B,OAA0C;AAC7E,MAAI,SAAS,GAAI,QAAO;AACxB,MAAI,SAAS,GAAI,QAAO;AACxB,SAAO;AACT;AAJS;AAMT,SAAS,qBACP,OACA,gBACQ;AACR,MAAI,UAAU;AACd,MAAI,SAAS,IAAI;AACf,cAAU;AAAA,EACZ,WAAW,SAAS,IAAI;AACtB,cAAU;AAAA,EACZ,OAAO;AACL,cAAU;AAAA,EACZ;AAEA,QAAM,eAAe,OAAO,QAAQ,cAAc,EAC/C,KAAK,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAC1B,IAAI,CAAC,CAAC,QAAQ,MAAM,QAAQ,EAAE,CAAC;AAElC,UAAQ,cAAc;AAAA,IACpB,KAAK;AACH,iBAAW;AACX;AAAA,IACF,KAAK;AACH,iBAAW;AACX;AAAA,IACF,KAAK;AACH,iBAAW;AACX;AAAA,IACF,KAAK;AACH,iBAAW;AACX;AAAA,IACF;AACE,iBAAW;AAAA,EACf;AAEA,SAAO;AACT;AAnCS;AAqCT,eAAsB,+BACpBR,MACA,eACA,WACyC;AACzC,MAAI,kBAAkB,WAAW;AAC/B,UAAM,IAAI,SAAS,yGAAyB,KAAK,6BAA6B;AAAA,EAChF;AAEA,QAAM,CAAC,gBAAgB,cAAc,IAAI,MAAM,QAAQ,IAAI;AAAA,IACzD,yBAAyBA,MAAK,aAAa;AAAA,IAC3C,yBAAyBA,MAAK,SAAS;AAAA,EACzC,CAAC;AAED,QAAM,WAAW,6BAA6B,gBAAgB,cAAc;AAC5E,QAAM,cAAc,gCAAgC,gBAAgB,cAAc;AAClF,QAAM,QAAQ,yBAAyB,gBAAgB,cAAc;AACrE,QAAM,YAAY,6BAA6B,gBAAgB,cAAc;AAE7E,QAAM,eAAe,KAAK;AAAA,KACvB,SAAS,QAAQ,MAAM,YAAY,QAAQ,OAAO,MAAM,QAAQ,OAAO,UAAU,QAAQ,OAAO;AAAA,EACnG,IAAI;AAEJ,QAAM,iBAAyC;AAAA,IAC7C,UAAU,SAAS;AAAA,IACnB,aAAa,YAAY;AAAA,IACzB,OAAO,MAAM;AAAA,IACb,WAAW,UAAU;AAAA,EACvB;AAEA,QAAM,kBAAiD;AAAA,IACrD,EAAE,UAAU,YAAY,OAAO,SAAS,OAAO,aAAa,SAAS,YAAY;AAAA,IACjF,EAAE,UAAU,eAAe,OAAO,YAAY,OAAO,aAAa,YAAY,YAAY;AAAA,IAC1F,EAAE,UAAU,SAAS,OAAO,MAAM,OAAO,aAAa,MAAM,YAAY;AAAA,IACxE,EAAE,UAAU,aAAa,OAAO,UAAU,OAAO,aAAa,UAAU,YAAY;AAAA,EACtF;AAEA,QAAM,iBAA8C;AAAA,IAClD,yBAAyB,SAAS;AAAA,IAClC,uBAAuB,SAAS;AAAA,IAChC,iBAAiB,UAAU;AAAA,IAC3B,aAAa,MAAM;AAAA,IACnB,oBAAoB,YAAY;AAAA,EAClC;AAEA,SAAO;AAAA,IACL;AAAA,IACA,oBAAoB,4BAA4B,YAAY;AAAA,IAC5D,gBAAgB,qBAAqB,cAAc,cAAc;AAAA,IACjE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AArDsB;;;ACz2CtB;AAAA;AAAA;AAAAS;AAOA;AA6DA,IAAM,cAAc,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAEvD,SAAS,kBAAkB,OAAuB;AAChD,QAAM,MAAM,YAAY,QAAQ,MAAM,YAAY,CAAC;AACnD,SAAO,QAAQ,KAAK,IAAI;AAC1B;AAHS;AAKT,SAAS,iBAAiB,GAAa,GAAqB;AAC1D,MAAI,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,EAAG,QAAO;AAEpD,MAAI,aAAa;AACjB,MAAI,QAAQ;AACZ,MAAI,QAAQ;AAEZ,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,kBAAc,EAAE,CAAC,IAAI,EAAE,CAAC;AACxB,aAAS,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,aAAS,EAAE,CAAC,IAAI,EAAE,CAAC;AAAA,EACrB;AAEA,MAAI,UAAU,KAAK,UAAU,EAAG,QAAO;AAEvC,SAAO,cAAc,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK;AACzD;AAhBS;AAkBT,SAAS,+BAA+B,MAA+B,WAA4C;AAIjH,QAAM,aAAa,KAAK,sBAAsB,KAAK;AACnD,QAAM,kBAAkB,UAAU,sBAAsB,UAAU;AAElE,QAAM,kBAAkB,KAAK,gBAAgB,IAAI,OAAK,EAAE,gBAAgB,EAAE,QAAQ;AAClF,QAAM,uBAAuB,UAAU,gBAAgB,IAAI,OAAK,EAAE,gBAAgB,EAAE,QAAQ;AAE5F,QAAM,6BAA6B,qBAAqB,SAAS,UAAU;AAC3E,QAAM,6BAA6B,gBAAgB,SAAS,eAAe;AAE3E,MAAI,8BAA8B,4BAA4B;AAC5D,WAAO;AAAA,EACT,WAAW,8BAA8B,4BAA4B;AACnE,WAAO;AAAA,EACT,OAAO;AAEL,UAAM,UAAU,gBAAgB,OAAO,UAAQ,qBAAqB,SAAS,IAAI,CAAC;AAClF,WAAO,QAAQ,SAAS,IAAI,KAAK;AAAA,EACnC;AACF;AAtBS;AAwBT,SAAS,4BAA4B,MAA+B,WAA4C;AAE9G,MAAI,KAAK,gBAAgB,WAAW,KAAK,UAAU,gBAAgB,WAAW,GAAG;AAC/E,WAAO;AAAA,EACT;AAGA,QAAM,cAAc,KAAK;AACzB,QAAM,mBAAmB,UAAU;AAEnC,MAAI,aAAa;AACjB,MAAIC,SAAQ;AAEZ,aAAW,cAAc,aAAa;AACpC,eAAW,mBAAmB,kBAAkB;AAC9C,UAAI,WAAW,iBAAiB,gBAAgB,gBAC5C,WAAW,aAAa,gBAAgB,UAAU;AACpD,cAAM,YAAY,kBAAkB,WAAW,YAAY;AAC3D,cAAM,iBAAiB,kBAAkB,gBAAgB,YAAY;AACrE,cAAM,OAAO,KAAK,IAAI,YAAY,cAAc;AAGhD,cAAM,QAAQ,KAAK,IAAI,GAAG,MAAM,OAAO,EAAE;AACzC,sBAAc;AACd,QAAAA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,SAAOA,SAAQ,IAAI,aAAaA,SAAQ;AAC1C;AA9BS;AAgCT,SAAS,+BAA+B,MAA+B,WAA4C;AAIjH,MAAI,CAAC,KAAK,eAAe,CAAC,UAAU,aAAa;AAC/C,WAAO;AAAA,EACT;AAEA,MAAI,KAAK,gBAAgB,UAAU,aAAa;AAC9C,WAAO;AAAA,EACT;AAGA,SAAO,KAAK,eAAe,UAAU,cAAc,KAAK;AAC1D;AAdS;AAgBT,SAAS,uBAAuB,MAA+B,WAA4C;AACzG,MAAI,KAAK,WAAW,WAAW,KAAK,UAAU,WAAW,WAAW,GAAG;AACrE,WAAO;AAAA,EACT;AAEA,QAAM,UAAU,KAAK,WAAW;AAAA,IAAO,UACrC,UAAU,WAAW,SAAS,IAAI;AAAA,EACpC;AAEA,QAAM,YAAY,KAAK,IAAI,KAAK,WAAW,QAAQ,UAAU,WAAW,MAAM;AAC9E,SAAQ,QAAQ,SAAS,YAAa;AACxC;AAXS;AAaT,SAAS,0BAA0B,MAA+B,WAA4C;AAC5G,MAAI,KAAK,cAAc,WAAW,KAAK,UAAU,cAAc,WAAW,GAAG;AAC3E,WAAO;AAAA,EACT;AAGA,QAAM,UAAU,KAAK,cAAc;AAAA,IAAO,WACxC,UAAU,cAAc,SAAS,KAAK;AAAA,EACxC;AAEA,QAAM,YAAY,KAAK,IAAI,KAAK,cAAc,QAAQ,UAAU,cAAc,MAAM;AACpF,SAAQ,QAAQ,SAAS,YAAa;AACxC;AAZS;AAcT,SAAS,sBAAsB,MAA+B,WAA4C;AACxG,MAAI,KAAK,UAAU,WAAW,KAAK,UAAU,UAAU,WAAW,GAAG;AACnE,WAAO;AAAA,EACT;AAEA,QAAM,UAAU,KAAK,UAAU;AAAA,IAAO,cACpC,UAAU,UAAU,SAAS,QAAQ;AAAA,EACvC;AAEA,QAAM,YAAY,KAAK,IAAI,KAAK,UAAU,QAAQ,UAAU,UAAU,MAAM;AAC5E,SAAQ,QAAQ,SAAS,YAAa;AACxC;AAXS;AAgBT,eAAsB,yBACpBC,MACAC,UACkC;AAClC,QAAM,SAAS,QAAQA,WAAUA,SAAQ,KAAKA,SAAQ;AAGtD,QAAM,cAAc,MAAM;AAAA,IAOxBD,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,CAAC,MAAM;AAAA,EACT;AAGA,QAAM,QAAQ,MAAM;AAAA,IAClBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,CAAC,MAAM;AAAA,EACT;AAGA,QAAM,YAAY,MAAM;AAAA,IACtBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,CAAC,MAAM;AAAA,EACT;AAGA,QAAM,gBAAgB,MAAM;AAAA,IAC1BA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,WAAoC;AAAA,IACxC;AAAA,IACA,MAAMC,SAAQ,eAAeA,SAAQ,QAAQ;AAAA,IAC7C,gBAAgBA,SAAQ,gBAAgB,QAAQ;AAAA,IAChD,oBAAoBA,SAAQ,gBAAgB;AAAA,IAC5C,iBAAiB,YAAY,IAAI,QAAM;AAAA,MACrC,UAAU,EAAE;AAAA,MACZ,cAAc,EAAE;AAAA,MAChB,cAAc,EAAE,sBAAsB;AAAA,MACtC,aAAa,EAAE,qBAAqB;AAAA,IACtC,EAAE;AAAA,IACF,YAAY,MAAM,IAAI,OAAK,EAAE,SAAS;AAAA,IACtC,WAAW,UAAU,IAAI,OAAK,EAAE,aAAa;AAAA,IAC7C,eAAe,cAAc,IAAI,OAAK,EAAE,gBAAgB;AAAA,IACxD,KAAKA,SAAQ;AAAA,IACb,qBAAqBA,SAAQ;AAAA,IAC7B,aAAaA,SAAQ;AAAA,IACrB,qBAAqBA,SAAQ;AAAA,EAC/B;AAGA,MAAIA,SAAQ,WAAW;AACrB,UAAM,eAAc,oBAAI,KAAK,GAAE,YAAY;AAC3C,aAAS,MAAM,cAAc,SAASA,SAAQ,SAAS;AAAA,EACzD;AAGA,MAAIA,SAAQ,QAAQ;AAClB,aAAS,SAASA,SAAQ;AAAA,EAC5B;AAGA,MAAI,cAAcA,YAAWA,SAAQ,UAAU;AAC7C,aAAS,WAAWA,SAAQ,SAAS,WAAWA,SAAQ,SAAS,OAAO,KAAKA,SAAQ,SAAS,IAAI,KAAK;AAAA,EACzG,WAAW,qBAAqBA,YAAWA,SAAQ,iBAAiB;AAClE,aAAS,WAAWA,SAAQ,mBAAmBA,SAAQ,eAAe,KAAKA,SAAQ,YAAY,KAAK;AAAA,EACtG;AAEA,SAAO;AACT;AAlGsB;AAuGtB,eAAe,yBAAyB,IAAQA,UAAqD;AAEnG,QAAM,cAAc;AAAA,QACdA,SAAQ,IAAI;AAAA,mBACDA,SAAQ,cAAc;AAAA,YAC7BA,SAAQ,gBAAgB,IAAI,OAAK,GAAG,EAAE,QAAQ,KAAK,EAAE,YAAY,GAAG,EAAE,KAAK,IAAI,CAAC;AAAA,SACnFA,SAAQ,WAAW,KAAK,IAAI,CAAC;AAAA,aACzBA,SAAQ,UAAU,KAAK,IAAI,CAAC;AAAA,eAC1BA,SAAQ,cAAc,KAAK,IAAI,CAAC;AAAA,OACxCA,SAAQ,OAAO,KAAK;AAAA,IACvB,KAAK;AAEP,QAAM,YAAY,MAAM,kBAAkB,IAAI,WAAW;AACzD,SAAO;AACT;AAde;AAmBf,eAAe,wBACb,IACA,MACA,WACA,OACoE;AACpE,QAAM,WAA0B;AAAA,IAC9B;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAYX;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA,UACL,KAAK,IAAI;AAAA,YACP,KAAK,cAAc,eAAe,KAAK,gBAAgB,IAAI,OAAK,EAAE,QAAQ,EAAE,KAAK,IAAI,CAAC;AAAA,WACvF,KAAK,WAAW,KAAK,IAAI,CAAC;AAAA,eACtB,KAAK,UAAU,KAAK,IAAI,CAAC;AAAA,iBACvB,KAAK,cAAc,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA,UAGpC,UAAU,IAAI;AAAA,YACZ,UAAU,cAAc,eAAe,UAAU,gBAAgB,IAAI,OAAK,EAAE,QAAQ,EAAE,KAAK,IAAI,CAAC;AAAA,WACjG,UAAU,WAAW,KAAK,IAAI,CAAC;AAAA,eAC3B,UAAU,UAAU,KAAK,IAAI,CAAC;AAAA,iBAC5B,UAAU,cAAc,KAAK,IAAI,CAAC;AAAA;AAAA,uBAE5B,MAAM,YAAY;AAAA,kBACvB,MAAM,UAAU,qBAAqB;AAAA,eACxC,MAAM,UAAU,kBAAkB;AAAA,mBAC9B,MAAM,UAAU,aAAa;AAAA,iBAC/B,MAAM,UAAU,YAAY;AAAA,IACzC;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,uBAAuB,IAAI,UAAU;AAAA,MAC1D,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,UAAM,YAAY,qBAAqB,QAAQ;AAC/C,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,WAAO;AAAA,MACL,SAAS,MAAM,QAAQ,OAAO,OAAO,IAAI,OAAO,QAAQ,MAAM,GAAG,CAAC,IAAI,CAAC;AAAA,MACvE,UAAU,OAAO,OAAO,aAAa,WAAW,OAAO,WAAW;AAAA,MAClE,QAAQ,MAAM,QAAQ,OAAO,MAAM,IAAI,OAAO,OAAO,MAAM,GAAG,CAAC,IAAI,CAAC;AAAA,IACtE;AAAA,EACF,SAASC,SAAO;AACd,IAAAC,KAAI,MAAM,wCAAwCD,OAAK;AACvD,WAAO;AAAA,MACL,SAAS,CAAC,mCAAmC,uBAAuB;AAAA,MACpE,UAAU;AAAA,MACV,QAAQ,CAAC,WAAW,UAAU,YAAY;AAAA,IAC5C;AAAA,EACF;AACF;AArEe;AA0Ef,eAAsB,sBACpB,IACA,MACA,WACA,aACAF,MACqB;AACrB,QAAM,SAAS,QAAQ,OAAO,KAAK,KAAK,KAAK;AAC7C,QAAM,cAAc,QAAQ,YAAY,UAAU,KAAK,UAAU;AAEjE,MAAI;AACF,IAAAG,KAAI,KAAK,uCAAuC,EAAE,QAAQ,YAAY,CAAC;AAGvE,IAAAA,KAAI,KAAK,8DAA8D,EAAE,QAAQ,YAAY,CAAC;AAC9F,UAAM,CAAC,cAAc,iBAAiB,IAAI,MAAM,QAAQ,IAAI;AAAA,MAC1D,yBAAyBH,MAAK,IAAI;AAAA,MAClC,yBAAyBA,MAAK,SAAS;AAAA,IACzC,CAAC;AACD,IAAAG,KAAI,KAAK,wDAAwD,EAAE,QAAQ,YAAY,CAAC;AAGxF,IAAAA,KAAI,KAAK,+DAA+D,EAAE,QAAQ,YAAY,CAAC;AAC/F,UAAM,wBAAwB,+BAA+B,cAAc,iBAAiB;AAC5F,UAAM,qBAAqB,4BAA4B,cAAc,iBAAiB;AACtF,UAAM,wBAAwB,+BAA+B,cAAc,iBAAiB;AAC5F,UAAM,gBAAgB,uBAAuB,cAAc,iBAAiB;AAC5E,UAAM,mBAAmB,0BAA0B,cAAc,iBAAiB;AAClF,UAAM,eAAe,sBAAsB,cAAc,iBAAiB;AAE1E,IAAAA,KAAI,KAAK,8DAA8D;AAAA,MACrE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAGD,QAAI,qBAAqB;AACzB,QAAI;AACF,MAAAA,KAAI,KAAK,oDAAoD,EAAE,QAAQ,YAAY,CAAC;AACpF,YAAM,CAAC,eAAe,kBAAkB,IAAI,MAAM,QAAQ,IAAI;AAAA,QAC5D,yBAAyB,IAAI,YAAY;AAAA,QACzC,yBAAyB,IAAI,iBAAiB;AAAA,MAChD,CAAC;AAED,MAAAA,KAAI,KAAK,mDAAmD;AAAA,QAC1D;AAAA,QACA;AAAA,QACA,qBAAqB,cAAc;AAAA,QACnC,0BAA0B,mBAAmB;AAAA,MAC/C,CAAC;AAED,YAAM,aAAa,iBAAiB,eAAe,kBAAkB;AACrE,2BAAqB,KAAK,MAAM,aAAa,GAAG;AAEhD,MAAAA,KAAI,KAAK,6DAA6D;AAAA,QACpE;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH,SAASD,SAAO;AACd,MAAAC,KAAI,MAAM,sEAAsED,SAAgB;AAAA,QAC9F;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAGA,IAAAC,KAAI,KAAK,wDAAwD,EAAE,QAAQ,YAAY,CAAC;AACxF,UAAM,eAAe,KAAK;AAAA,MACxB,wBAAwB,YAAY,iBACpC,qBAAqB,YAAY,cACjC,qBAAqB,YAAY,iBACjC,wBAAwB,YAAY,iBACpC,gBAAgB,YAAY,cAC5B,mBAAmB,YAAY,oBAC/B,eAAe,YAAY;AAAA,IAC7B;AAEA,UAAM,QAAoB;AAAA,MACxB,QAAQ,kBAAkB;AAAA,MAC1B;AAAA,MACA,WAAW;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,WAAW,CAAC;AAAA,MACZ,iBAAiB,CAAC;AAAA,MAClB,uBAAuB;AAAA,IACzB;AAEA,IAAAA,KAAI,KAAK,uDAAuD;AAAA,MAC9D;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAGD,IAAAA,KAAI,KAAK,6DAA6D,EAAE,QAAQ,YAAY,CAAC;AAC7F,UAAM,cAAc,MAAM,wBAAwB,IAAI,cAAc,mBAAmB,KAAK;AAC5F,UAAM,YAAY,YAAY;AAC9B,UAAM,kBAAkB,YAAY;AACpC,UAAM,wBAAwB,YAAY;AAE1C,IAAAA,KAAI,KAAK,qDAAqD;AAAA,MAC5D;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAY,YAAY,QAAQ,SAAS;AAAA,MACzC,WAAW,YAAY,OAAO,SAAS;AAAA,IACzC,CAAC;AAED,WAAO;AAAA,EACT,SAASD,SAAO;AACd,IAAAC,KAAI,MAAM,qCAAqCD,SAAgB;AAAA,MAC7D;AAAA,MACA;AAAA,MACA,cAAcA,mBAAiB,QAAQA,QAAM,UAAU,OAAOA,OAAK;AAAA,MACnE,YAAYA,mBAAiB,QAAQA,QAAM,QAAQ;AAAA,IACrD,CAAC;AACD,UAAMA;AAAA,EACR;AACF;AApIsB;AAyItB,eAAsB,gBACpB,IACA,MACA,YACA,aACAF,MACA,QAAgB,IACO;AACvB,MAAI;AACF,IAAAG,KAAI,KAAK,gCAAgC;AAAA,MACvC,QAAQ,QAAQ,OAAO,KAAK,KAAK,KAAK;AAAA,MACtC,gBAAgB,WAAW;AAAA,MAC3B;AAAA,IACF,CAAC;AAGD,UAAM,SAAS,MAAM,QAAQ;AAAA,MAC3B,WAAW,IAAI,OAAO,WAAW,UAAU;AACzC,YAAI;AACF,UAAAA,KAAI,KAAK,4CAA4C,QAAQ,CAAC,IAAI,WAAW,MAAM,IAAI;AAAA,YACrF,aAAa,QAAQ,YAAY,UAAU,KAAK,UAAU;AAAA,UAC5D,CAAC;AACD,iBAAO,MAAM,sBAAsB,IAAI,MAAM,WAAW,aAAaH,IAAG;AAAA,QAC1E,SAASE,SAAO;AACd,UAAAC,KAAI,MAAM,kDAAkD,QAAQ,CAAC,IAAID,SAAgB;AAAA,YACvF,aAAa,QAAQ,YAAY,UAAU,KAAK,UAAU;AAAA,YAC1D,cAAcA,mBAAiB,QAAQA,QAAM,UAAU,OAAOA,OAAK;AAAA,UACrE,CAAC;AACD,gBAAMA;AAAA,QACR;AAAA,MACF,CAAC;AAAA,IACH;AAEA,IAAAC,KAAI,KAAK,gDAAgD;AAAA,MACvD,YAAY,OAAO;AAAA,IACrB,CAAC;AAGD,WAAO,KAAK,CAAC,GAAG,MAAM,EAAE,eAAe,EAAE,YAAY;AAErD,IAAAA,KAAI,KAAK,8CAA8C;AAAA,MACrD,iBAAiB,KAAK,IAAI,OAAO,OAAO,MAAM;AAAA,IAChD,CAAC;AAED,WAAO,OAAO,MAAM,GAAG,KAAK;AAAA,EAC9B,SAASD,SAAO;AACd,IAAAC,KAAI,MAAM,8BAA8BD,SAAgB;AAAA,MACtD,QAAQ,QAAQ,OAAO,KAAK,KAAK,KAAK;AAAA,MACtC,gBAAgB,WAAW;AAAA,MAC3B,cAAcA,mBAAiB,QAAQA,QAAM,UAAU,OAAOA,OAAK;AAAA,MACnE,YAAYA,mBAAiB,QAAQA,QAAM,QAAQ;AAAA,IACrD,CAAC;AACD,UAAMA;AAAA,EACR;AACF;AAtDsB;;;AFjgBtB,IAAM,iBAAiB,IAAIE,MAA8C;AAEzE,IAAMC,eAAc,KAAe;AAEnC,SAASC,qBAAoB,GAAQ;AACnC,QAAM,OAAO,KAAK,IAAI,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,GAAG,GAAG,CAAC;AAC3D,QAAM,OAAO,KAAK,IAAI,KAAK,IAAI,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,IAAI,GAAG,EAAE,GAAG,CAAC;AAC1E,SAAO,EAAE,MAAM,KAAK;AACtB;AAJS,OAAAA,sBAAA;AAMT,eAAe,IAAI,KAAKD,YAAW;AAEnC,eAAe,oBAAoBE,MAAU,QAAgB;AAC3D,QAAM,MAAM,qBAAqB,MAAM;AACvC,QAAM,SAAS,MAAMA,KAAI,MAAM,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC;AACxD,MAAI,QAAQ;AACV,WAAO;AAAA,EACT;AACA,SAAO;AAAA,IACL,mBAAmB;AAAA,IACnB,kBAAkB;AAAA,IAClB,oBAAoB;AAAA,IACpB,mBAAmB;AAAA,IACnB,kBAAkB,CAAC;AAAA,IACnB,wBAAwB,CAAC;AAAA,IACzB,oBAAoB,CAAC;AAAA,IACrB,aAAa;AAAA,IACb,sBAAsB;AAAA,MACpB,YAAY;AAAA,MACZ,iBAAiB;AAAA,IACnB;AAAA,EACF;AACF;AApBe;AAsBf,eAAe,IAAI,aAAa,OAAO,MAAM;AAC3C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AAExF,QAAM,EAAE,MAAM,KAAK,IAAID,qBAAoB,CAAC;AAC5C,MAAI;AACF,UAAM,SAAS,MAAM,kBAAkB,EAAE,KAAK,QAAQ;AAAA,MACpD,gBAAgB,EAAE,IAAI,MAAM,gBAAgB,KAAK;AAAA,MACjD,gBAAgB,EAAE,IAAI,MAAM,gBAAgB,KAAK;AAAA,MACjD,eAAe,EAAE,IAAI,MAAM,eAAe,KAAK;AAAA,MAC/C,QAAQ,EAAE,IAAI,MAAM,QAAQ,IAAI,OAAO,EAAE,IAAI,MAAM,QAAQ,CAAC,IAAI;AAAA,MAChE,QAAQ,EAAE,IAAI,MAAM,QAAQ,IAAI,OAAO,EAAE,IAAI,MAAM,QAAQ,CAAC,IAAI;AAAA,MAChE;AAAA,MACA;AAAA,IACF,CAAC;AACD,WAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,MACvC,MAAM,OAAO;AAAA,MACb,OAAO,OAAO;AAAA,MACd,OAAO,OAAO;AAAA,IAChB,CAAC;AAAA,EACH,SAASE,SAAO;AACd,QAAIA,mBAAiB,SAAU,OAAMA;AACrC,UAAM,IAAI;AAAA,MACRA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,MACzC;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,eAAe,KAAK,sBAAsB,OAAO,MAAM;AACrD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AAExF,QAAM,UAAU,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACnD,QAAM,EAAE,MAAM,KAAK,IAAIF,qBAAoB,CAAC;AAE5C,MAAI;AACF,UAAM,SAAS,MAAM,kBAAkB,EAAE,KAAK,QAAQ;AAAA,MACpD,gBAAgB,OAAO,QAAQ,mBAAmB,WAAW,QAAQ,iBAAiB;AAAA,MACtF,gBAAgB,OAAO,QAAQ,mBAAmB,WAAW,QAAQ,iBAAiB;AAAA,MACtF,eAAe,OAAO,QAAQ,qBAAqB,WAAW,QAAQ,mBAAmB;AAAA,MACzF,QAAQ,OAAO,QAAQ,WAAW,WAAW,QAAQ,SAAS;AAAA,MAC9D,QAAQ,OAAO,QAAQ,WAAW,WAAW,QAAQ,SAAS;AAAA,MAC9D;AAAA,MACA;AAAA,IACF,CAAC;AACD,WAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,MACvC,MAAM,OAAO;AAAA,MACb,OAAO,OAAO;AAAA,MACd,OAAO,OAAO;AAAA,IAChB,CAAC;AAAA,EACH,SAASE,SAAO;AACd,QAAIA,mBAAiB,SAAU,OAAMA;AACrC,UAAM,IAAI;AAAA,MACRA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,MACzC;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,eAAe,KAAK,YAAY,OAAO,MAAM;AAC3C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,YAAQ,MAAM,uDAAuD;AACrE,UAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AAAA,EAC7E;AAEA,MAAI;AACJ,MAAI;AACF,WAAO,MAAM,EAAE,IAAI,KAAK;AAAA,EAC1B,SAAS,YAAY;AACnB,YAAQ,MAAM,8CAA8C,UAAU;AACtE,UAAM,IAAI,SAAS,wBAAwB,KAAK,cAAc;AAAA,EAChE;AAEA,UAAQ,IAAI,6CAA6C,KAAK,UAAU;AAAA,IACtE,cAAc,KAAK;AAAA,IACnB,YAAY,CAAC,CAAC,KAAK;AAAA,IACnB,eAAe,KAAK,SAAS;AAAA,IAC7B;AAAA,EACF,CAAC,CAAC;AAEF,MAAI,OAAO,KAAK,iBAAiB,YAAY,CAAC,KAAK,aAAa,KAAK,GAAG;AACtE,UAAM,IAAI,SAAS,uDAAuD,KAAK,iBAAiB;AAAA,EAClG;AAEA,MAAI;AACF,UAAM,SAAS,MAAM,sBAAsB,EAAE,KAAK;AAAA,MAChD,UAAU;AAAA,MACV,YAAY,KAAK,aAAa,KAAK;AAAA,MACnC,SAAS,OAAO,KAAK,YAAY,WAAW,KAAK,QAAQ,KAAK,IAAI;AAAA,IACpE,CAAC;AAED,YAAQ,IAAI,qCAAqC;AAAA,MAC/C,WAAW,OAAO;AAAA,MAClB,UAAU;AAAA,MACV,YAAY,KAAK;AAAA,IACnB,CAAC;AAED,WAAO,gBAAgB,GAAG;AAAA,MACxB,SAAS;AAAA,MACT,WAAW,OAAO;AAAA,IACpB,CAAC;AAAA,EACH,SAASA,SAAO;AACd,YAAQ,MAAM,0CAA0C;AAAA,MACtD,WAAWA,mBAAiB,QAAQA,QAAM,YAAY,OAAO,OAAOA;AAAA,MACpE,cAAcA,mBAAiB,QAAQA,QAAM,UAAU,OAAOA,OAAK;AAAA,MACnE,YAAYA,mBAAiB,QAAQA,QAAM,QAAQ;AAAA,MACnD,YAAYA,mBAAiB;AAAA,MAC7B,YAAYA,mBAAiB,WAAWA,QAAM,aAAa;AAAA,MAC3D,WAAWA,mBAAiB,WAAWA,QAAM,OAAO;AAAA,MACpD;AAAA,MACA,cAAc,KAAK;AAAA,IACrB,CAAC;AAGD,QAAIA,mBAAiB,UAAU;AAC7B,YAAMA;AAAA,IACR;AAGA,UAAM,IAAI;AAAA,MACRA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,MACzC;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,eAAe,IAAI,kBAAkB,OAAO,MAAM;AAChD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,EAAE,MAAM,KAAK,IAAIF,qBAAoB,CAAC;AAC5C,QAAM,SAAS,MAAM,iBAAiB,EAAE,KAAK,QAAQ,MAAM,IAAI;AAC/D,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,eAAe,IAAI,sBAAsB,OAAO,MAAM;AACpD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,EAAE,MAAM,KAAK,IAAIA,qBAAoB,CAAC;AAC5C,QAAM,SAAS,MAAM,qBAAqB,EAAE,KAAK,QAAQ,MAAM,IAAI;AACnE,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,eAAe,KAAK,sBAAsB,OAAO,MAAM;AACrD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAMG,aAAY,EAAE,IAAI,MAAM,WAAW;AACzC,QAAM,OAAQ,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACjD,MAAI;AACF,UAAM,sBAAsB,EAAE,KAAK;AAAA,MACjC,WAAAA;AAAA,MACA,YAAY;AAAA,MACZ,iBAAiB,KAAK;AAAA,IACxB,CAAC;AACD,WAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAAA,EAC7C,SAASD,SAAO;AACd,QAAIA,mBAAiB,SAAU,OAAMA;AACrC,UAAM,IAAI;AAAA,MACRA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,MACzC;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,eAAe,KAAK,sBAAsB,OAAO,MAAM;AACrD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAMC,aAAY,EAAE,IAAI,MAAM,WAAW;AACzC,QAAM,OAAQ,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACjD,MAAI;AACF,UAAM,sBAAsB,EAAE,KAAK;AAAA,MACjC,WAAAA;AAAA,MACA,YAAY;AAAA,MACZ,iBAAiB,KAAK;AAAA,IACxB,CAAC;AACD,WAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAAA,EAC7C,SAASD,SAAO;AACd,QAAIA,mBAAiB,SAAU,OAAMA;AACrC,UAAM,IAAI;AAAA,MACRA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,MACzC;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,eAAe,IAAI,YAAY,OAAO,MAAM;AAC1C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,EAAE,MAAM,KAAK,IAAIF,qBAAoB,CAAC;AAC5C,QAAM,SAAS,MAAM,YAAY,EAAE,KAAK,QAAQ,MAAM,IAAI;AAC1D,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,eAAe,OAAO,qBAAqB,OAAO,MAAM;AACtD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,UAAU,EAAE,IAAI,MAAM,SAAS;AACrC,QAAM,YAAY,EAAE,KAAK,EAAE,SAAS,OAAO,CAAC;AAC5C,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,eAAe,KAAK,UAAU,OAAO,MAAM;AACzC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,QAAM,cAAc,OAAO,KAAK,gBAAgB,WAAW,KAAK,cAAc;AAC9E,QAAM,mBAAmB,EAAE,KAAK,QAAQ,WAAW;AACnD,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,eAAe,OAAO,UAAU,OAAO,MAAM;AAC3C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,wBAAwB,EAAE,KAAK,MAAM;AAC3C,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,eAAe,IAAI,iBAAiB,OAAO,MAAM;AAC/C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,SAAS,MAAM,uBAAuB,EAAE,KAAK,MAAM;AACzD,SAAO,gBAAgB,GAAG,UAAU,CAAC,CAAC;AACxC,CAAC;AAED,eAAe,IAAI,YAAY,OAAO,MAAM;AAC1C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,EAAE,MAAM,KAAK,IAAIA,qBAAoB,CAAC;AAC5C,QAAM,SAAS,MAAM,YAAY,EAAE,KAAK,QAAQ,MAAM,IAAI;AAC1D,SAAO,kBAAkB,GAAG,OAAO,MAAM;AAAA,IACvC,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,OAAO,OAAO;AAAA,EAChB,CAAC;AACH,CAAC;AAED,eAAe,KAAK,aAAa,OAAO,MAAM;AAC5C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,MAAI,OAAO,KAAK,cAAc,YAAY,OAAO,KAAK,YAAY,YAAY,OAAO,KAAK,kBAAkB,UAAU;AACpH,UAAM,IAAI,SAAS,kDAAkD,KAAK,iBAAiB;AAAA,EAC7F;AACA,QAAM,eAAe,EAAE,KAAK;AAAA,IAC1B,YAAY;AAAA,IACZ,WAAW,KAAK;AAAA,IAChB,SAAS,KAAK;AAAA,IACd,eAAe,KAAK;AAAA,IACpB,iBAAiB,OAAO,KAAK,oBAAoB,WAAW,KAAK,kBAAkB;AAAA,IACnF,iBAAiB,OAAO,KAAK,oBAAoB,YAAY,KAAK,kBAAkB;AAAA,EACtF,CAAC;AACD,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,eAAe,IAAI,eAAe,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,SAAS,MAAM,YAAY,EAAE,KAAK,QAAQ,GAAG,EAAE;AACrD,SAAO,gBAAgB,GAAG,OAAO,IAAI;AACvC,CAAC;AAED,eAAe,IAAI,UAAU,OAAO,MAAM;AACxC,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,UAAU,MAAM,YAAY,EAAE,KAAK,QAAQ,GAAG,EAAE;AACtD,QAAM,cAAc,MAAM,uBAAuB,EAAE,KAAK,MAAM;AAC9D,QAAM,gBAAiB,aAAqB,iBAAiB;AAC7D,SAAO,gBAAgB,GAAG;AAAA,IACxB,cAAc,QAAQ;AAAA,IACtB,eAAe,QAAQ,KAAK,MAAM,GAAG,CAAC;AAAA,IACtC;AAAA,IACA;AAAA,EACF,CAAC;AACH,CAAC;AAED,eAAe,IAAI,6BAA6B,OAAO,MAAM;AAC3D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,EAAE,IAAI,MAAM,WAAW;AACzC,QAAM,WAAW,MAAM,+BAA+B,EAAE,KAAK,QAAQ,SAAS;AAC9E,SAAO,gBAAgB,GAAG;AAAA,IACxB;AAAA,IACA,GAAG;AAAA,EACL,CAAC;AACH,CAAC;AAED,eAAe,IAAI,aAAa,OAAO,MAAM;AAC3C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,WAAW,MAAM,oBAAoB,EAAE,KAAK,MAAM;AACxD,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,eAAe,MAAM,aAAa,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,UAAU,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACnD,QAAM,UAAU,MAAM,oBAAoB,EAAE,KAAK,MAAM;AACvD,QAAM,SAAS;AAAA,IACb,GAAG;AAAA,IACH,GAAG;AAAA,IACH,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,EACpC;AACA,QAAM,EAAE,IAAI,MAAM,IAAI,qBAAqB,MAAM,IAAI,KAAK,UAAU,MAAM,CAAC;AAC3E,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAGD,eAAe,KAAK,oBAAoB,OAAO,MAAM;AACnD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AAExF,MAAI;AACF,QAAI,KAAK,qCAAqC,EAAE,OAAO,CAAC;AAExD,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,UAAM,QAAQ,OAAO,KAAK,UAAU,WAAW,KAAK,IAAI,KAAK,OAAO,EAAE,IAAI;AAE1E,QAAI,KAAK,yCAAyC,EAAE,OAAO,aAAa,KAAK,CAAC;AAG9E,QAAI,KAAK,2CAA2C,EAAE,OAAO,CAAC;AAC9D,UAAM,cAAc,MAAM,eAAe,EAAE,KAAK,MAAM;AACtD,QAAI,CAAC,aAAa;AAChB,UAAI,MAAM,4CAA4C,QAAW,EAAE,OAAO,CAAC;AAC3E,YAAM,IAAI,SAAS,0BAA0B,KAAK,gBAAgB;AAAA,IACpE;AACA,QAAI,KAAK,0CAA0C,EAAE,QAAQ,WAAW,YAAY,GAAG,CAAC;AAGxF,QAAI,KAAK,yCAAyC,EAAE,OAAO,CAAC;AAC5D,UAAM,aAAa,MAAM,kBAAkB,EAAE,KAAK,QAAQ;AAAA,MACxD,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IACR,CAAC;AACD,QAAI,KAAK,wCAAwC;AAAA,MAC/C;AAAA,MACA,iBAAiB,WAAW;AAAA,MAC5B,gBAAgB,WAAW,KAAK;AAAA,IAClC,CAAC;AAGD,UAAM,cAAmC;AAAA,MACvC,gBAAgB,OAAO,KAAK,mBAAmB,WAAW,KAAK,iBAAiB;AAAA,MAChF,aAAa,OAAO,KAAK,gBAAgB,WAAW,KAAK,cAAc;AAAA,MACvE,gBAAgB,OAAO,KAAK,mBAAmB,WAAW,KAAK,iBAAiB;AAAA,MAChF,gBAAgB,OAAO,KAAK,mBAAmB,WAAW,KAAK,iBAAiB;AAAA,MAChF,aAAa,OAAO,KAAK,gBAAgB,WAAW,KAAK,cAAc;AAAA,MACvE,mBAAmB,OAAO,KAAK,sBAAsB,WAAW,KAAK,oBAAoB;AAAA,MACzF,cAAc,OAAO,KAAK,iBAAiB,WAAW,KAAK,eAAe;AAAA,IAC5E;AAEA,QAAI,KAAK,qCAAqC,EAAE,YAAY,CAAC;AAG7D,QAAI,KAAK,0CAA0C;AAAA,MACjD;AAAA,MACA,gBAAgB,WAAW,KAAK;AAAA,MAChC;AAAA,IACF,CAAC;AACD,UAAM,UAAU,MAAM;AAAA,MACpB,EAAE,IAAI;AAAA,MACN;AAAA,MACA,WAAW;AAAA,MACX;AAAA,MACA,EAAE;AAAA,MACF;AAAA,IACF;AACA,QAAI,KAAK,2CAA2C;AAAA,MAClD;AAAA,MACA,YAAY,QAAQ;AAAA,IACtB,CAAC;AAED,WAAO,gBAAgB,GAAG;AAAA,MACxB;AAAA,MACA,iBAAiB,WAAW;AAAA,MAC5B,oBAAoB,WAAW,KAAK;AAAA,IACtC,CAAC;AAAA,EACH,SAASE,SAAO;AAEd,QAAIA,mBAAiB,UAAU;AAC7B,UAAI,MAAM,uCAAuCA,SAAO,EAAE,OAAO,CAAC;AAClE,YAAMA;AAAA,IACR;AAGA,QAAI,MAAM,+CAA+CA,SAAgB;AAAA,MACvE;AAAA,MACA,cAAcA,mBAAiB,QAAQA,QAAM,UAAU,OAAOA,OAAK;AAAA,MACnE,YAAYA,mBAAiB,QAAQA,QAAM,QAAQ;AAAA,IACrD,CAAC;AAED,UAAM,IAAI;AAAA,MACRA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,MACzC;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,eAAe,KAAK,gCAAgC,OAAO,MAAM;AAC/D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AACxF,QAAM,YAAY,EAAE,IAAI,MAAM,WAAW;AAEzC,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAGhD,UAAM,CAAC,aAAa,cAAc,IAAI,MAAM,QAAQ,IAAI;AAAA,MACtD,eAAe,EAAE,KAAK,MAAM;AAAA,MAC5B,eAAe,EAAE,KAAK,SAAS;AAAA,IACjC,CAAC;AAED,QAAI,CAAC,eAAe,CAAC,gBAAgB;AACnC,YAAM,IAAI,SAAS,qCAAqC,KAAK,mBAAmB;AAAA,IAClF;AAGA,UAAM,cAAmC;AAAA,MACvC,gBAAgB,OAAO,KAAK,mBAAmB,WAAW,KAAK,iBAAiB;AAAA,MAChF,aAAa,OAAO,KAAK,gBAAgB,WAAW,KAAK,cAAc;AAAA,MACvE,gBAAgB,OAAO,KAAK,mBAAmB,WAAW,KAAK,iBAAiB;AAAA,MAChF,gBAAgB,OAAO,KAAK,mBAAmB,WAAW,KAAK,iBAAiB;AAAA,MAChF,aAAa,OAAO,KAAK,gBAAgB,WAAW,KAAK,cAAc;AAAA,MACvE,mBAAmB,OAAO,KAAK,sBAAsB,WAAW,KAAK,oBAAoB;AAAA,MACzF,cAAc,OAAO,KAAK,iBAAiB,WAAW,KAAK,eAAe;AAAA,IAC5E;AAGA,UAAM,gBAAgB,MAAM;AAAA,MAC1B,EAAE,IAAI;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA,EAAE;AAAA,IACJ;AAEA,WAAO,gBAAgB,GAAG;AAAA,MACxB;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH,SAASA,SAAO;AAEd,QAAIA,mBAAiB,UAAU;AAC7B,YAAMA;AAAA,IACR;AAGA,UAAM,IAAI;AAAA,MACRA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,MACzC;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,IAAO,mBAAQ;;;AGzhBf;AAAA;AAAA;AAAAE;AAIA;;;ACJA;AAAA;AAAA;AAAAC;AAMA;AACA;AAuDA,IAAM,iBAAyC;AAAA,EAC7C,UAAU;AAAA,EACV,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,WAAW;AAAA,EACX,SAAS;AACX;AAEA,IAAM,uBAAuB;AAAA,EAC3B;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,WAAW;AAAA,EACb;AAAA,EACA;AAAA,IACE,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AACF;AAEA,SAAS,UAAU,OAAqD;AACtE,SAAO,UAAU,KAAK,UAAU;AAClC;AAFS;AAIT,SAAS,cAAc,UAAiC;AACtD,MAAI,CAAC,SAAU,QAAO;AACtB,SAAO,eAAe,QAAQ,KAAK;AACrC;AAHS;AAKT,SAAS,kBAAkB,KAA8C;AACvE,SAAO;AAAA,IACL,IAAI,IAAI;AAAA,IACR,gBAAgB,IAAI;AAAA,IACpB,OAAO,IAAI;AAAA,IACX,aAAa,IAAI,eAAe;AAAA,IAChC,UAAU,cAAc,IAAI,QAAQ;AAAA,IACpC,kBAAkB,IAAI;AAAA,IACtB,MAAM,IAAI;AAAA,IACV,MAAM,IAAI;AAAA,IACV,aAAa,IAAI,gBAAgB;AAAA,IACjC,YAAY,IAAI,eAAe;AAAA,IAC/B,UAAU,IAAI,aAAa;AAAA,IAC3B,cAAc,IAAI,kBAAkB;AAAA,IACpC,YAAY,IAAI,eAAe;AAAA,IAC/B,UAAU,UAAU,IAAI,SAAS;AAAA,IACjC,UAAU,UAAU,IAAI,SAAS;AAAA,IACjC,WAAW,IAAI,cAAc;AAAA,IAC7B,2BAA2B,IAAI,+BAA+B;AAAA,EAChE;AACF;AApBS;AAsBT,SAAS,sBAAsB,KAAsD;AACnF,QAAM,cAAc,kBAAkB;AAAA,IACpC,gBAAgB,IAAI;AAAA,IACpB,iBAAiB,IAAI;AAAA,IACrB,OAAO,IAAI;AAAA,IACX,aAAa,IAAI;AAAA,IACjB,UAAU,IAAI;AAAA,IACd,MAAM,IAAI;AAAA,IACV,MAAM,IAAI;AAAA,IACV,cAAc,IAAI;AAAA,IAClB,aAAa,IAAI;AAAA,IACjB,WAAW,IAAI;AAAA,IACf,gBAAgB,IAAI;AAAA,IACpB,aAAa,IAAI;AAAA,IACjB,WAAW,IAAI;AAAA,IACf,WAAW,IAAI;AAAA,IACf,YAAY,IAAI;AAAA,IAChB,6BAA6B,IAAI;AAAA,IACjC,YAAY;AAAA,IACZ,YAAY;AAAA,EACd,CAAC;AAED,QAAM,cAAc,IAAI,gBAAgB;AACxC,QAAM,UAAU,IAAI,oBAAoB;AACxC,QAAM,qBAAqB,cAAc,IAAI,KAAK,IAAI,KAAM,UAAU,cAAe,GAAG,IAAK,UAAU,IAAI,YAAY,IAAI,MAAM;AAEjI,SAAO;AAAA,IACL,IAAI,IAAI;AAAA,IACR;AAAA,IACA,iBAAiB;AAAA,IACjB,aAAa,UAAU,IAAI,YAAY;AAAA,IACvC,aAAa,IAAI,gBAAgB;AAAA,IACjC,iBAAiB,UAAU,IAAI,iBAAiB;AAAA,IAChD,iBAAiB,IAAI,qBAAqB;AAAA,IAC1C;AAAA,EACF;AACF;AApCS;AAsCT,eAAe,wBAAwBC,MAAyB;AAC9D,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA,EACF;AACA,OAAK,UAAU,SAAS,KAAK,GAAG;AAC9B;AAAA,EACF;AAEA,QAAM,OAAM,oBAAI,KAAK,GAAE,YAAY;AACnC,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ,qBAAqB,IAAI,CAAC,UAAU;AAAA,MAClC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAkBL,QAAQ;AAAA,QACN,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK,eAAe;AAAA,QACpB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK,eAAe;AAAA,QACpB,KAAK,cAAc;AAAA,QACnB,KAAK,YAAY;AAAA,QACjB,KAAK,cAAc;AAAA,QACnB,KAAK,WAAW,IAAI;AAAA,QACpB,KAAK,aAAa;AAAA,QAClB;AAAA,QACA;AAAA,MACF;AAAA,IACF,EAAE;AAAA,EACJ;AACF;AAjDe;AAmDf,eAAe,sBAAsBA,MAAU,gBAAiD;AAC9F,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,cAAc;AAAA,EACjB;AACA,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,SAAS,yEAAkB,KAAK,uBAAuB;AAAA,EACnE;AACA,SAAO;AACT;AAVe;AAYf,eAAe,sBACbA,MACA,QACA,eAC6B;AAC7B,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,CAAC,QAAQ,aAAa;AAAA,EACxB;AACA,MAAI,UAAU;AACZ,WAAO;AAAA,EACT;AAEA,QAAM,OAAM,oBAAI,KAAK,GAAE,YAAY;AACnC,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,CAAC,QAAQ,eAAe,KAAK,GAAG;AAAA,EAClC;AAEA,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,CAAC,QAAQ,aAAa;AAAA,EACxB;AAEA,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,SAAS,6FAAuB,KAAK,yBAAyB;AAAA,EAC1E;AACA,SAAO;AACT;AArDe;AAuDf,eAAe,8BACbA,MACA,QACA,aACA,UACA,eAC6B;AAC7B,QAAM,cAAc,YAAY,gBAAgB;AAChD,QAAM,OAAM,oBAAI,KAAK,GAAE,YAAY;AAEnC,QAAM,MAAM,MAAM,sBAAsBA,MAAK,QAAQ,YAAY,cAAc;AAC/E,QAAM,UAAU,gBAAgB,KAAK,IAAI,IAAI,IAAI,oBAAoB,KAAK,QAAQ,IAAI,KAAK,IAAI,GAAG,QAAQ;AAE1G,MAAI,cAAc,IAAI;AACtB,MAAI,cAAc,IAAI;AACtB,MAAI,OAAO,gBAAgB,YAAY,WAAW,eAAe,CAAC,UAAU,IAAI,YAAY,GAAG;AAC7F,kBAAc;AACd,kBAAc;AAAA,EAChB;AAEA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,CAAC,SAAS,aAAa,aAAa,KAAK,QAAQ,YAAY,cAAc;AAAA,EAC7E;AAEA,QAAM,UAAU,MAAM;AAAA,IACpBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,CAAC,QAAQ,YAAY,cAAc;AAAA,EACrC;AAEA,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,SAAS,6FAAuB,KAAK,2BAA2B;AAAA,EAC5E;AAEA,SAAO;AACT;AAhDe;AAkDf,eAAsB,mBAAmBA,MAA8C;AACrF,QAAM,wBAAwBA,IAAG;AACjC,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,EAGF;AACA,SAAO,KAAK,IAAI,iBAAiB;AACnC;AATsB;AAWtB,eAAsB,0BACpBA,MACA,UACoC;AACpC,QAAM,wBAAwBA,IAAG;AACjC,QAAM,aAAa,SAAS,YAAY;AACxC,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,CAAC,UAAU;AAAA,EACb;AACA,SAAO,KAAK,IAAI,iBAAiB;AACnC;AAdsB;AAgBtB,eAAsB,oBACpBA,MACA,QACwC;AACxC,QAAM,wBAAwBA,IAAG;AACjC,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,CAAC,MAAM;AAAA,EACT;AACA,SAAO,KAAK,IAAI,qBAAqB;AACvC;AAjBsB;AAmBtB,eAAsB,yBACpBA,MACA,QACwC;AACxC,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,CAAC,MAAM;AAAA,EACT;AACA,SAAO,KAAK,IAAI,qBAAqB;AACvC;AAhBsB;AAkBtB,eAAsB,0BACpBA,MACA,QACwC;AACxC,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,CAAC,MAAM;AAAA,EACT;AACA,SAAO,KAAK,IAAI,qBAAqB;AACvC;AAhBsB;AAkBtB,eAAsB,oBACpBA,MACA,QACuC;AACvC,QAAM,wBAAwBA,IAAG;AAEjC,QAAM,CAAC,UAAU,cAAc,eAAe,YAAY,YAAY,IAAI,MAAM,QAAQ,IAAI;AAAA,IAC1F,WAA8BA,KAAI,IAAI,gEAAgE;AAAA,IACtG;AAAA,MACEA,KAAI;AAAA,MACJ;AAAA,MACA,CAAC,MAAM;AAAA,IACT;AAAA,IACA;AAAA,MACEA,KAAI;AAAA,MACJ;AAAA,MACA,CAAC,MAAM;AAAA,IACT;AAAA,IACA;AAAA,MACEA,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA,MAIA,CAAC,MAAM;AAAA,IACT;AAAA,IACA;AAAA,MACEA,KAAI;AAAA,MACJ;AAAA,MACA,CAAC,MAAM;AAAA,IACT;AAAA,EACF,CAAC;AAED,QAAM,6BAA6B,MAAM;AAAA,IACvCA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,yBAAyB,MAAM;AAAA,IACnCA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,aAAa,MAAM;AAAA,IACvBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,qBAAqB,MAAM;AAAA,IAC/BA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAYA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,oBAAoB,UAAU,SAAS;AAC7C,QAAM,wBAAwB,cAAc,SAAS;AACrD,QAAM,iBAAiB,oBAAoB,IAAK,wBAAwB,oBAAqB,MAAM;AAEnG,QAAM,yBAAiD,CAAC;AACxD,aAAW,OAAO,4BAA4B;AAC5C,2BAAuB,cAAc,IAAI,GAAG,CAAC,IAAI,IAAI;AAAA,EACvD;AAEA,QAAM,qBAA6C,CAAC;AACpD,aAAW,OAAO,wBAAwB;AACxC,uBAAmB,IAAI,OAAO,SAAS,IAAI,IAAI;AAAA,EACjD;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,wBAAwB,eAAe,SAAS;AAAA,IAChD,eAAe,YAAY,SAAS;AAAA,IACpC,kBAAkB,cAAc,SAAS;AAAA,IACzC;AAAA,IACA;AAAA,IACA;AAAA,IACA,mBAAmB,WAAW,IAAI,qBAAqB;AAAA,IACvD,gBAAgB,mBAAmB,IAAI,qBAAqB;AAAA,EAC9D;AACF;AA7GsB;AA+GtB,eAAsB,0BACpBA,MACA,QACA,gBACA,UACsC;AACtC,MAAI,CAAC,gBAAgB;AACnB,UAAM,IAAI,SAAS,wDAA0B,KAAK,yBAAyB;AAAA,EAC7E;AACA,MAAI,CAAC,OAAO,SAAS,QAAQ,KAAK,WAAW,GAAG;AAC9C,UAAM,IAAI,SAAS,oFAA6B,KAAK,kBAAkB;AAAA,EACzE;AACA,QAAM,cAAc,MAAM,sBAAsBA,MAAK,cAAc;AACnE,QAAM,UAAU,MAAM,8BAA8BA,MAAK,QAAQ,aAAa,UAAU,KAAK;AAC7F,SAAO,sBAAsB,OAAO;AACtC;AAfsB;AAiBtB,eAAsB,6BACpBA,MACA,QACA,gBACA,WACsC;AACtC,MAAI,CAAC,gBAAgB;AACnB,UAAM,IAAI,SAAS,wDAA0B,KAAK,yBAAyB;AAAA,EAC7E;AACA,MAAI,CAAC,OAAO,SAAS,SAAS,KAAK,aAAa,GAAG;AACjD,UAAM,IAAI,SAAS,qFAA8B,KAAK,mBAAmB;AAAA,EAC3E;AACA,QAAM,cAAc,MAAM,sBAAsBA,MAAK,cAAc;AACnE,QAAM,UAAU,MAAM,8BAA8BA,MAAK,QAAQ,aAAa,WAAW,IAAI;AAC7F,SAAO,sBAAsB,OAAO;AACtC;AAfsB;AAiBtB,eAAsB,uBACpBA,MACA,QACA,mBACsC;AACtC,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,CAAC,iBAAiB;AAAA,EACpB;AAEA,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,SAAS,4FAAsB,KAAK,4BAA4B;AAAA,EAC5E;AACA,MAAI,IAAI,YAAY,QAAQ;AAC1B,UAAM,IAAI,SAAS,0GAA0B,KAAK,WAAW;AAAA,EAC/D;AACA,MAAI,CAAC,UAAU,IAAI,YAAY,GAAG;AAChC,UAAM,IAAI,SAAS,yEAAkB,KAAK,2BAA2B;AAAA,EACvE;AACA,MAAI,UAAU,IAAI,iBAAiB,GAAG;AACpC,UAAM,IAAI,SAAS,yEAAkB,KAAK,oCAAoC;AAAA,EAChF;AAEA,QAAM,OAAM,oBAAI,KAAK,GAAE,YAAY;AACnC,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,KAAK,KAAK,iBAAiB;AAAA,EAC9B;AAEA,QAAM,UAAU,MAAM;AAAA,IACpBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,CAAC,iBAAiB;AAAA,EACpB;AAEA,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,SAAS,oGAAyB,KAAK,2BAA2B;AAAA,EAC9E;AAEA,SAAO,sBAAsB,OAAO;AACtC;AA1DsB;AA4DtB,eAAsB,2BACpBA,MACA,QACe;AACf,QAAM,wBAAwBA,IAAG;AACjC,QAAM,iBAAiB,MAAM;AAAA,IAC3BA,KAAI;AAAA,IACJ;AAAA,EACF;AAEA,QAAM,aAAa,eAAe,IAAI,CAAC,EAAE,eAAe,OAAO;AAAA,IAC7D,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAYL,QAAQ,CAAC,QAAQ,iBAAgB,oBAAI,KAAK,GAAE,YAAY,IAAG,oBAAI,KAAK,GAAE,YAAY,CAAC;AAAA,EACrF,EAAE;AAEF,MAAI,WAAW,QAAQ;AACrB,UAAM,YAAYA,KAAI,IAAI,UAAU;AAAA,EACtC;AACF;AA7BsB;AA+BtB,eAAsB,6BACpBA,MACA,QACwC;AACxC,QAAM,wBAAwBA,IAAG;AACjC,QAAM,aAAa,MAAM;AAAA,IACvBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,YAA2C,CAAC;AAClD,QAAM,OAAM,oBAAI,KAAK,GAAE,YAAY;AAEnC,aAAW,aAAa,YAAY;AAClC,UAAM,cAAc,UAAU,gBAAgB;AAC9C,QAAI,OAAO,gBAAgB,YAAY,UAAU,mBAAmB,aAAa;AAC/E;AAAA,IACF;AAEA,QAAI,UAAU,6BAA6B;AACzC,YAAM,SAAS,MAAM;AAAA,QACnBA,KAAI;AAAA,QACJ;AAAA;AAAA;AAAA,QAGA,CAAC,QAAQ,UAAU,2BAA2B;AAAA,MAChD;AACA,UAAI,CAAC,UAAU,CAAC,UAAU,OAAO,YAAY,GAAG;AAC9C;AAAA,MACF;AAAA,IACF;AAEA,UAAM;AAAA,MACJA,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,CAAC,KAAK,KAAK,UAAU,mBAAmB;AAAA,IAC1C;AAEA,UAAM,UAAU,MAAM;AAAA,MACpBA,KAAI;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,CAAC,UAAU,mBAAmB;AAAA,IAChC;AAEA,QAAI,SAAS;AACX,gBAAU,KAAK,sBAAsB,OAAO,CAAC;AAG7C,UAAI;AACF,cAAM,WAAW,QAAQ,aAAa;AACtC,cAAM,mBAAmBA,MAAK;AAAA,UAC5B;AAAA,UACA,MAAM;AAAA,UACN,OAAO;AAAA,UACP,SAAS,IAAI,QAAQ,KAAK,+DAAkB,QAAQ;AAAA,UACpD,UAAU;AAAA,UACV,UAAU;AAAA,UACV,WAAW;AAAA,UACX,YAAY;AAAA,YACV,eAAe,QAAQ;AAAA,YACvB,gBAAgB,QAAQ;AAAA,YACxB,OAAO,QAAQ;AAAA,YACf,MAAM,QAAQ;AAAA,YACd;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH,SAASC,SAAO;AACd,gBAAQ,MAAM,oEAAoE,QAAQ,cAAc,KAAKA,OAAK;AAAA,MACpH;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AA1FsB;;;ADpyBtB,IAAM,qBAAqB,IAAIC,MAA8C;AAC7E,IAAMC,eAAc,KAAe;AAEnC,SAASC,eAAc,QAAoC;AACzD,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,mEAAiB,KAAK,cAAc;AAAA,EACzD;AACA,SAAO;AACT;AALS,OAAAA,gBAAA;AAOT,mBAAmB,IAAI,KAAKD,YAAW;AAEvC,mBAAmB,IAAI,KAAK,OAAO,MAAM;AACvC,QAAM,eAAe,MAAM,mBAAmB,EAAE,GAAG;AACnD,SAAO,gBAAgB,GAAG,YAAY;AACxC,CAAC;AAED,mBAAmB,IAAI,uBAAuB,OAAO,MAAM;AACzD,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU;AACvC,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,SAAS,kEAAgB,KAAK,kBAAkB;AAAA,EAC5D;AACA,QAAM,eAAe,MAAM,0BAA0B,EAAE,KAAK,QAAQ;AACpE,SAAO,gBAAgB,GAAG,YAAY;AACxC,CAAC;AAED,mBAAmB,IAAI,OAAO,OAAO,MAAM;AACzC,QAAM,SAASC,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,2BAA2B,EAAE,KAAK,MAAM;AAC9C,QAAM,eAAe,MAAM,oBAAoB,EAAE,KAAK,MAAM;AAC5D,SAAO,gBAAgB,GAAG,YAAY;AACxC,CAAC;AAED,mBAAmB,IAAI,iBAAiB,OAAO,MAAM;AACnD,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,eAAe,MAAM,yBAAyB,EAAE,KAAK,MAAM;AACjE,SAAO,gBAAgB,GAAG,YAAY;AACxC,CAAC;AAED,mBAAmB,IAAI,mBAAmB,OAAO,MAAM;AACrD,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,eAAe,MAAM,0BAA0B,EAAE,KAAK,MAAM;AAClE,SAAO,gBAAgB,GAAG,YAAY;AACxC,CAAC;AAED,mBAAmB,IAAI,aAAa,OAAO,MAAM;AAC/C,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,2BAA2B,EAAE,KAAK,MAAM;AAC9C,QAAM,QAAQ,MAAM,oBAAoB,EAAE,KAAK,MAAM;AACrD,SAAO,gBAAgB,GAAG,KAAK;AACjC,CAAC;AAED,mBAAmB,KAAK,aAAa,OAAO,MAAM;AAChD,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,iBAAiB,OAAO,MAAM,mBAAmB,WAAW,KAAK,eAAe,KAAK,IAAI;AAC/F,QAAM,WAAW,OAAO,MAAM,aAAa,WAAW,KAAK,WAAW,OAAO,MAAM,QAAQ;AAC3F,MAAI,CAAC,gBAAgB;AACnB,UAAM,IAAI,SAAS,wDAA0B,KAAK,yBAAyB;AAAA,EAC7E;AACA,MAAI,CAAC,OAAO,SAAS,QAAQ,GAAG;AAC9B,UAAM,IAAI,SAAS,+DAAuB,KAAK,kBAAkB;AAAA,EACnE;AACA,QAAM,UAAU,MAAM,0BAA0B,EAAE,KAAK,QAAQ,gBAAgB,QAAQ;AACvF,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,mBAAmB,KAAK,uBAAuB,OAAO,MAAM;AAC1D,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,kBAAkB,EAAE,IAAI,MAAM,gBAAgB,KAAK,IAAI,KAAK;AAClE,QAAM,eAAe,EAAE,IAAI,MAAM,WAAW;AAC5C,QAAM,YAAY,eAAe,OAAO,YAAY,IAAI;AACxD,MAAI,CAAC,gBAAgB;AACnB,UAAM,IAAI,SAAS,wDAA0B,KAAK,yBAAyB;AAAA,EAC7E;AACA,MAAI,CAAC,OAAO,SAAS,SAAS,GAAG;AAC/B,UAAM,IAAI,SAAS,gEAAwB,KAAK,mBAAmB;AAAA,EACrE;AACA,QAAM,UAAU,MAAM,6BAA6B,EAAE,KAAK,QAAQ,gBAAgB,SAAS;AAC3F,SAAO,gBAAgB,GAAG,OAAO;AACnC,CAAC;AAED,mBAAmB,KAAK,oCAAoC,OAAO,MAAM;AACvE,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,QAAQ,EAAE,IAAI,MAAM,mBAAmB;AAC7C,QAAM,oBAAoB,OAAO,KAAK;AACtC,MAAI,CAAC,OAAO,SAAS,iBAAiB,GAAG;AACvC,UAAM,IAAI,SAAS,8EAAiC,KAAK,oBAAoB;AAAA,EAC/E;AACA,QAAM,SAAS,MAAM,uBAAuB,EAAE,KAAK,QAAQ,iBAAiB;AAC5E,SAAO,gBAAgB,GAAG,MAAM;AAClC,CAAC;AAED,mBAAmB,KAAK,eAAe,OAAO,MAAM;AAClD,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,2BAA2B,EAAE,KAAK,MAAM;AAC9C,SAAO,gBAAgB,GAAG,EAAE,aAAa,KAAK,CAAC;AACjD,CAAC;AAED,mBAAmB,KAAK,qBAAqB,OAAO,MAAM;AACxD,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,YAAY,MAAM,6BAA6B,EAAE,KAAK,MAAM;AAClE,SAAO,gBAAgB,GAAG,SAAS;AACrC,CAAC;AAED,IAAO,uBAAQ;;;AE7Hf;AAAA;AAAA;AAAAC;AAIA;;;ACJA;AAAA;AAAA;AAAAC;AAQA;AACA;AAIA,SAASC,UAAiB;AACxB,UAAO,oBAAI,KAAK,GAAE,YAAY;AAChC;AAFS,OAAAA,SAAA;AA+DT,SAASC,WAAU,OAAqD;AACtE,SAAO,UAAU,KAAK,UAAU;AAClC;AAFS,OAAAA,YAAA;AAIT,SAAS,eAAe,KAAsC;AAC5D,SAAO;AAAA,IACL,QAAQ,IAAI;AAAA,IACZ,MAAM,IAAI,QAAQ;AAAA,IAClB,cAAc,IAAI,iBAAiB;AAAA,EACrC;AACF;AANS;AAQT,eAAeC,mBAAkBC,MAAU,QAA4C;AACrF,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,MAAM;AAAA,EACT;AACA,SAAO,KAAK,IAAI,cAAc;AAChC;AAXe,OAAAD,oBAAA;AAaf,SAAS,mBAAmB,KAAiB,QAAoB,OAAgD;AAC/G,QAAM,UAAU,QAAQ,IAAI,WAAW,IAAI,QAAQ,KAAK,EAAE,SAAS,CAAC;AACpE,QAAM,YAAY,OAAO,SAAS;AAClC,QAAM,WAAW,QAAQ,IAAI,SAAS;AACtC,QAAM,WAAW,MAAM,SAAS;AAEhC,MAAI,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,SAAU,QAAO;AAC5D,MAAI,aAAa,CAAC,YAAY,CAAC,WAAW,CAAC,SAAU,QAAO;AAC5D,MAAI,YAAY,CAAC,YAAY,CAAC,aAAa,CAAC,QAAS,QAAO;AAC5D,MAAI,WAAW,CAAC,YAAY,CAAC,aAAa,CAAC,SAAU,QAAO;AAC5D,SAAO;AACT;AAXS;AAaT,SAAS,QAAQ,KAAoC;AACnD,SAAO;AAAA,IACL,QAAQ,IAAI;AAAA,IACZ,kBAAkB,IAAI;AAAA,IACtB,SAAS,IAAI,YAAY,uBAAuB,IAAI,SAAS;AAAA,IAC7D,UAAU,IAAI;AAAA,IACd,aAAa,IAAI,gBAAgB;AAAA,IACjC,UAAU,IAAI,aAAa;AAAA,IAC3B,cAAc,IAAI,iBAAiB;AAAA,IACnC,UAAU,IAAI,YAAY;AAAA,IAC1B,WAAW,IAAI;AAAA,EACjB;AACF;AAZS;AAcT,SAAS,WACP,KACA,QACA,OACyB;AACzB,QAAM,cAA+B;AAAA,IACnC,QAAQ,IAAI;AAAA,IACZ,MAAM,IAAI,QAAQ;AAAA,IAClB,cAAc,IAAI,iBAAiB;AAAA,EACrC;AAEA,SAAO;AAAA,IACL,WAAW,IAAI;AAAA,IACf,QAAQ,IAAI;AAAA,IACZ,QAAQ;AAAA,IACR,SAAS,IAAI,WAAW;AAAA,IACxB,WAAW,OAAO,IAAI,CAAC,QAAQ,IAAI,SAAS;AAAA,IAC5C,UAAU,IAAI,aAAa;AAAA,IAC3B,eAAe;AAAA,IACf;AAAA,IACA,aAAa,mBAAmB,KAAK,QAAQ,KAAK;AAAA,IAClD,QAAQ,IAAI;AAAA,EACd;AACF;AAvBS;AAyBT,eAAe,iBAAiBC,MAAU,QAAsC;AAC9E,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AACA,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,SAAS,0EAAmB,KAAK,qBAAqB;AAAA,EAClE;AACA,SAAO;AACT;AAVe;AAYf,eAAe,QAAQA,MAAU,MAA6C;AAC5E,QAAM,eAAe,MAAMD,mBAAkBC,MAAK,KAAK,OAAO;AAC9D,QAAM,iBAAiB,MAAM;AAAA,IAC3BA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,KAAK,OAAO;AAAA,EACf;AAEA,SAAO;AAAA,IACL,QAAQ,KAAK;AAAA,IACb,UAAU,KAAK;AAAA,IACf,UAAU,KAAK;AAAA,IACf,UAAUF,WAAU,KAAK,SAAS;AAAA,IAClC,iBAAiB,KAAK,oBAAoB;AAAA,IAC1C;AAAA,IACA,aAAa,gBAAgB,WAAW;AAAA,IACxC,eAAe,gBAAgB,cAAc;AAAA,EAC/C;AACF;AAtBe;AAwBf,eAAsB,kBAAkBE,MAAU,QAA4C;AAC5F,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,YAA+B,CAAC;AACtC,aAAW,OAAO,MAAM;AACtB,cAAU,KAAK,MAAM,QAAQA,MAAK,GAAG,CAAC;AAAA,EACxC;AACA,SAAO;AACT;AAhBsB;AAkBtB,eAAsB,oBAAoBA,MAAU,QAA4C;AAC9F,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,YAA+B,CAAC;AACtC,aAAW,OAAO,MAAM;AACtB,cAAU,KAAK,MAAM,QAAQA,MAAK,GAAG,CAAC;AAAA,EACxC;AACA,SAAO;AACT;AAhBsB;AAkBtB,eAAsB,eACpBA,MACA,WACA,UACA,iBAA2B,CAAC,GAC5B,SAC0B;AAC1B,MAAI,CAAC,UAAU,KAAK,GAAG;AACrB,UAAM,IAAI,SAAS,yEAAkB,KAAK,mBAAmB;AAAA,EAC/D;AAEA,QAAM,OAAM,oBAAI,KAAK,GAAE,YAAY;AACnC,QAAM,WAAW,SAAS,WAAW,IAAI;AACzC,QAAM,WAAW,SAAS,YAAY;AACtC,QAAM,kBAAkB,SAAS,mBAAmB;AAEpD,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA,IAEA,CAAC,SAAS,KAAK,GAAG,UAAU,UAAU,iBAAiB,KAAK,GAAG;AAAA,EACjE;AAEA,QAAM,YAAY,MAAM,WAA2BA,KAAI,IAAI,kCAAkC;AAC7F,QAAM,SAAS,OAAO,WAAW,MAAM,CAAC;AACxC,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,gFAAoB,KAAK,yBAAyB;AAAA,EACvE;AAEA,QAAM,YAAY,oBAAI,IAAY,CAAC,WAAW,GAAG,cAAc,CAAC;AAChE,QAAM,aAAa,MAAM,KAAK,SAAS,EAAE,IAAI,CAAC,QAAQ;AAAA,IACpD,KAAK;AAAA;AAAA,IAEL,QAAQ,CAAC,QAAQ,IAAI,GAAG;AAAA,EAC1B,EAAE;AACF,QAAM,YAAYA,KAAI,IAAI,UAAU;AAEpC,QAAM,OAAO,MAAM,iBAAiBA,MAAK,MAAM;AAC/C,SAAO,QAAQA,MAAK,IAAI;AAC1B;AAvCsB;AAyCtB,eAAsB,aAAaA,MAAU,QAAgB,QAA0C;AACrG,QAAM,OAAO,MAAM,iBAAiBA,MAAK,MAAM;AAC/C,QAAM,OAAM,oBAAI,KAAK,GAAE,YAAY;AACnC,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA,IAEA,CAAC,QAAQ,QAAQ,GAAG;AAAA,EACtB;AACA,SAAO,QAAQA,MAAK,IAAI;AAC1B;AAVsB;AAYtB,eAAsB,cAAcA,MAAU,QAAgB,QAA+B;AAC3F,QAAM,iBAAiBA,MAAK,MAAM;AAClC,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,QAAQ,MAAM;AAAA,EACjB;AACF;AAPsB;AAStB,eAAsB,iBACpBA,MACA,QACA,MACA,MACoC;AACpC,QAAM,iBAAiBA,MAAK,MAAM;AAClC,QAAM,SAAS,KAAK,IAAI,MAAM,CAAC,IAAI;AAEnC,QAAM,cAAc,MAAM;AAAA,IACxBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,CAAC,QAAQ,MAAM,MAAM;AAAA,EACvB;AAEA,QAAM,aAAa,YAAY,IAAI,CAAC,QAAQ,IAAI,UAAU;AAC1D,MAAI,WAAW,WAAW,GAAG;AAC3B,WAAO,CAAC;AAAA,EACV;AAEA,QAAM,YAAY,MAAM;AAAA,IACtBA,KAAI;AAAA,IACJ;AAAA;AAAA,6BAEyB,WAAW,IAAI,MAAM,GAAG,EAAE,KAAK,GAAG,CAAC;AAAA,IAC5D;AAAA,EACF;AAEA,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA;AAAA,+BAE2B,WAAW,IAAI,MAAM,GAAG,EAAE,KAAK,GAAG,CAAC;AAAA;AAAA,IAE9D;AAAA,EACF;AAEA,QAAM,WAAW,oBAAI,IAAwB;AAC7C,aAAW,OAAO,WAAW;AAC3B,UAAM,OAAO,SAAS,IAAI,IAAI,UAAU,KAAK,CAAC;AAC9C,SAAK,KAAK,GAAG;AACb,aAAS,IAAI,IAAI,YAAY,IAAI;AAAA,EACnC;AAEA,QAAM,UAAU,oBAAI,IAAoC;AACxD,aAAWC,SAAQ,UAAU;AAC3B,UAAM,SAAS,QAAQA,KAAI;AAC3B,UAAM,OAAO,QAAQ,IAAIA,MAAK,UAAU,KAAK,CAAC;AAC9C,SAAK,KAAK,MAAM;AAChB,YAAQ,IAAIA,MAAK,YAAY,IAAI;AAAA,EACnC;AAEA,QAAM,WAAW,YACd,IAAI,CAAC,QAAQ;AACZ,UAAM,SAAS,SAAS,IAAI,IAAI,UAAU,KAAK,CAAC;AAChD,UAAM,QAAQ,QAAQ,IAAI,IAAI,UAAU,KAAK,CAAC;AAC9C,WAAO,WAAW,KAAK,QAAQ,KAAK;AAAA,EACtC,CAAC,EACA,QAAQ;AAEX,SAAO;AACT;AAlEsB;AAoEtB,eAAsB,mBACpBD,MACA,QACA,SACA,MACA,MACoC;AACpC,QAAM,iBAAiBA,MAAK,MAAM;AAClC,MAAI,CAAC,SAAS,KAAK,GAAG;AACpB,WAAO,CAAC;AAAA,EACV;AAEA,QAAM,SAAS,KAAK,IAAI,MAAM,CAAC,IAAI;AACnC,QAAM,cAAc,MAAM;AAAA,IACxBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,CAAC,QAAQ,IAAI,OAAO,KAAK,MAAM,MAAM;AAAA,EACvC;AAEA,QAAM,aAAa,YAAY,IAAI,CAAC,QAAQ,IAAI,UAAU;AAC1D,MAAI,WAAW,WAAW,GAAG;AAC3B,WAAO,CAAC;AAAA,EACV;AAEA,QAAM,YAAY,MAAM;AAAA,IACtBA,KAAI;AAAA,IACJ;AAAA;AAAA,6BAEyB,WAAW,IAAI,MAAM,GAAG,EAAE,KAAK,GAAG,CAAC;AAAA,IAC5D;AAAA,EACF;AAEA,QAAM,WAAW,MAAM;AAAA,IACrBA,KAAI;AAAA,IACJ;AAAA;AAAA,+BAE2B,WAAW,IAAI,MAAM,GAAG,EAAE,KAAK,GAAG,CAAC;AAAA;AAAA,IAE9D;AAAA,EACF;AAEA,QAAM,WAAW,oBAAI,IAAwB;AAC7C,aAAW,OAAO,WAAW;AAC3B,UAAM,OAAO,SAAS,IAAI,IAAI,UAAU,KAAK,CAAC;AAC9C,SAAK,KAAK,GAAG;AACb,aAAS,IAAI,IAAI,YAAY,IAAI;AAAA,EACnC;AAEA,QAAM,UAAU,oBAAI,IAAoC;AACxD,aAAWC,SAAQ,UAAU;AAC3B,UAAM,SAAS,QAAQA,KAAI;AAC3B,UAAM,OAAO,QAAQ,IAAIA,MAAK,UAAU,KAAK,CAAC;AAC9C,SAAK,KAAK,MAAM;AAChB,YAAQ,IAAIA,MAAK,YAAY,IAAI;AAAA,EACnC;AAEA,SAAO,YACJ,IAAI,CAAC,QAAQ,WAAW,KAAK,SAAS,IAAI,IAAI,UAAU,KAAK,CAAC,GAAG,QAAQ,IAAI,IAAI,UAAU,KAAK,CAAC,CAAC,CAAC,EACnG,QAAQ;AACb;AAhEsB;AAkEtB,eAAsB,iBACpBD,MACA,QACA,QACA,OACmB;AACnB,QAAM,iBAAiBA,MAAK,MAAM;AAClC,QAAM,cAAc,MAAM;AAAA,IACxBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,QAAQ,MAAM;AAAA,EACjB;AACA,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,SAAS,wGAAwB,KAAK,qBAAqB;AAAA,EACvE;AAEA,MAAI,CAAC,MAAM,QAAQ;AACjB,WAAO,CAAC;AAAA,EACV;AAEA,QAAM,OAAiB,CAAC;AACxB,aAAWC,SAAQ,OAAO;AACxB,UAAM,SAAS,MAAMA,MAAK,YAAY;AACtC,UAAM,MAAM,QAAQ,MAAM,WAAW,uBAAuBA,MAAK,MAAM,MAAM,CAAC;AAC9E,UAAM,SAASD,KAAI,SAAS,KAAK,QAAQC,MAAK,MAAM;AAAA,MAClD,QAAQ,OAAO,MAAM;AAAA,MACrB,UAAU;AAAA,MACV,UAAUA,MAAK;AAAA,IACjB,CAAC;AACD,UAAMC,OAAM,uBAAuB,GAAG;AACtC,SAAK,KAAKA,IAAG;AAAA,EACf;AAEA,SAAO;AACT;AAlCsB;AAoCtB,eAAsB,gBACpBF,MACA,QACA,QACAC,OACiB;AACjB,QAAM,iBAAiBD,MAAK,MAAM;AAClC,QAAM,cAAc,MAAM;AAAA,IACxBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,QAAQ,MAAM;AAAA,EACjB;AACA,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,SAAS,wGAAwB,KAAK,qBAAqB;AAAA,EACvE;AAEA,QAAM,SAAS,MAAMC,MAAK,YAAY;AACtC,QAAM,MAAM,QAAQ,MAAM,UAAU,uBAAuBA,MAAK,MAAM,MAAM,CAAC;AAC7E,QAAM,SAASD,KAAI,SAAS,KAAK,QAAQC,MAAK,MAAM;AAAA,IAClD,QAAQ,OAAO,MAAM;AAAA,IACrB,UAAU;AAAA,IACV,UAAUA,MAAK;AAAA,EACjB,CAAC;AACD,SAAO,uBAAuB,GAAG;AACnC;AAxBsB;AA0BtB,eAAsB,gBAAgBD,MAAU,QAAiD;AAC/F,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,MAAM;AAAA,EACT;AACA,SAAO,KAAK,IAAI,OAAO;AACzB;AAXsB;AAatB,eAAsB,eAAeA,MAAU,QAAgB,QAA+B;AAC5F,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,MAAM;AAAA,EACT;AACA,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,SAAS,oEAAkB,KAAK,qBAAqB;AAAA,EACjE;AACA,QAAM,eAAe,MAAM;AAAA,IACzBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,IAAI,UAAU;AAAA,EACjB;AACA,MAAI,cAAc,YAAY,QAAQ;AACpC,UAAM,IAAI,SAAS,sHAA4B,KAAK,qBAAqB;AAAA,EAC3E;AACA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA,IACA,EAAC,oBAAI,KAAK,GAAE,YAAY,GAAG,MAAM;AAAA,EACnC;AACF;AA1BsB;AA4BtB,SAAS,aAAa,eAAqE;AACzF,QAAM,QAAQ,cAAc,MAAM,yBAAyB;AAC3D,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,SAAS,+EAAmB,KAAK,oBAAoB;AAAA,EACjE;AACA,QAAM,cAAc,MAAM,CAAC;AAC3B,QAAMG,UAAS,MAAM,CAAC;AACtB,QAAM,eAAe,KAAKA,OAAM;AAChC,QAAM,MAAM,aAAa;AACzB,QAAM,QAAQ,IAAI,WAAW,GAAG;AAChC,WAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,UAAM,CAAC,IAAI,aAAa,WAAW,CAAC;AAAA,EACtC;AACA,SAAO,EAAE,aAAa,QAAQ,MAAM,OAAO;AAC7C;AAdS;AAgBT,eAAsB,kBACpBH,MACA,QACA,SACkC;AAClC,QAAM,SAAS,OAAO,QAAQ,MAAM;AACpC,MAAI,CAAC,OAAO,SAAS,MAAM,GAAG;AAC5B,UAAM,IAAI,SAAS,gDAAkB,KAAK,iBAAiB;AAAA,EAC7D;AAEA,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AACA,MAAI,CAAC,MAAM;AACT,UAAM,IAAI,SAAS,0EAAmB,KAAK,qBAAqB;AAAA,EAClE;AAEA,QAAM,cAAc,MAAM;AAAA,IACxBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,QAAQ,MAAM;AAAA,EACjB;AACA,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,SAAS,qFAAoB,KAAK,qBAAqB;AAAA,EACnE;AAEA,QAAM,MAAMH,QAAO;AACnB,QAAM,cAAc,OAAO,QAAQ,YAAY,YAAY,QAAQ,QAAQ,KAAK,EAAE,SAAS,IACvF,QAAQ,QAAQ,KAAK,IACrB;AACJ,QAAM,YAAY,MAAM,QAAQ,QAAQ,SAAS,IAC7C,QAAQ,UAAU,OAAO,CAACK,SAAuB,OAAOA,SAAQ,YAAYA,KAAI,SAAS,CAAC,IAC1F,CAAC;AAEL,MAAI,WAAW,QAAQ,YAAY;AACnC,MAAI,CAAC,YAAY,OAAO,QAAQ,cAAc,YAAY,QAAQ,UAAU,WAAW,OAAO,GAAG;AAC/F,UAAM,EAAE,aAAa,OAAO,IAAI,aAAa,QAAQ,SAAS;AAC9D,UAAM,MAAM,QAAQ,MAAM,UAAU,uBAAuB,sBAAsB,MAAM,CAAC;AACxF,UAAM,SAASF,KAAI,SAAS,KAAK,QAAQ,aAAa;AAAA,MACpD,QAAQ,OAAO,MAAM;AAAA,MACrB,UAAU;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AACD,eAAW,uBAAuB,GAAG;AAAA,EACvC;AAEA,MAAI,CAAC,eAAe,CAAC,UAAU,UAAU,CAAC,UAAU;AAClD,UAAM,IAAI,SAAS,mEAAiB,KAAK,eAAe;AAAA,EAC1D;AAEA,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,CAAC,QAAQ,QAAQ,eAAe,MAAM,UAAU,KAAK,GAAG;AAAA,EAC1D;AAEA,QAAM,eAAe,MAAM,WAA2BA,KAAI,IAAI,kCAAkC;AAChG,QAAM,YAAY,OAAO,cAAc,MAAM,CAAC;AAC9C,MAAI,CAAC,WAAW;AACd,UAAM,IAAI,SAAS,gFAAoB,KAAK,4BAA4B;AAAA,EAC1E;AAEA,MAAI,UAAU,QAAQ;AACpB,eAAWE,QAAO,WAAW;AAC3B,YAAM;AAAA,QACJF,KAAI;AAAA,QACJ;AAAA;AAAA,QAEA,CAAC,WAAWE,MAAK,KAAK,GAAG;AAAA,MAC3B;AAAA,IACF;AAAA,EACF;AAEA,QAAM;AAAA,IACJF,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,KAAK,MAAM;AAAA,EACd;AAEA,QAAM,aAAa,MAAM;AAAA,IACvBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,SAAS;AAAA,EACZ;AACA,MAAI,CAAC,YAAY;AACf,UAAM,IAAI,SAAS,gFAAoB,KAAK,0BAA0B;AAAA,EACxE;AAEA,QAAM,SAAS,MAAM;AAAA,IACnBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,SAAS;AAAA,EACZ;AAEA,QAAM,QAAQ,MAAM;AAAA,IAClBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,SAAS;AAAA,EACZ;AAEA,QAAM,cAAc,MAAM,IAAI,OAAO;AACrC,QAAM,cAAc,WAAW,YAAY,QAAQ,WAAW;AAG9D,MAAI;AACF,YAAQ,IAAI,gEAAgE;AAG5E,UAAM,aAAa,MAAM;AAAA,MAIvBA,KAAI;AAAA,MACJ;AAAA,MACA,CAAC,MAAM;AAAA,IACT;AAEA,UAAM,aAAa,YAAY,gBAAgB,YAAY,QAAQ;AAGnE,UAAM,oBAAoB,MAAM;AAAA,MAC9BA,KAAI;AAAA,MACJ;AAAA,MACA,CAAC,QAAQ,MAAM;AAAA,IACjB;AAGA,QAAI,iBAAiB,eAAe;AACpC,QAAI,CAAC,kBAAkB,UAAU;AAC/B,uBAAiB;AAAA,IACnB,WAAW,CAAC,kBAAkB,UAAU,SAAS,GAAG;AAClD,uBAAiB;AAAA,IACnB;AACA,QAAI,eAAe,SAAS,IAAI;AAC9B,uBAAiB,eAAe,UAAU,GAAG,EAAE,IAAI;AAAA,IACrD;AAGA,eAAWI,gBAAe,mBAAmB;AAC3C,UAAI;AACF,cAAM,mBAAmBJ,MAAK;AAAA,UAC5B,QAAQI,aAAY;AAAA,UACpB,MAAM;AAAA,UACN,OAAO,GAAG,KAAK,SAAS;AAAA,UACxB,SAAS,GAAG,UAAU,KAAK,cAAc;AAAA,UACzC,UAAU;AAAA,UACV,UAAU;AAAA,UACV,WAAW,SAAS,MAAM;AAAA,UAC1B,YAAY;AAAA,YACV;AAAA,YACA;AAAA,YACA,UAAU;AAAA,YACV;AAAA,UACF;AAAA,UACA,cAAc;AAAA,QAChB,CAAC;AAAA,MACH,SAAS,mBAAmB;AAC1B,gBAAQ,MAAM,mEAAmE;AAAA,UAC/E,OAAO,6BAA6B,QAAQ,kBAAkB,UAAU,OAAO,iBAAiB;AAAA,UAChG,eAAeA,aAAY;AAAA,QAC7B,CAAC;AAAA,MACH;AAAA,IACF;AAEA,YAAQ,IAAI,6CAA6C,kBAAkB,QAAQ,cAAc;AAAA,EACnG,SAAS,mBAAmB;AAE1B,YAAQ,MAAM,qDAAqD;AAAA,MACjE,OAAO,6BAA6B,QAAQ,kBAAkB,UAAU,OAAO,iBAAiB;AAAA,MAChG;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAEA,SAAO;AACT;AA5LsB;AA8LtB,eAAsB,uBAAuBJ,MAAU,QAAgB,QAA+B;AACpG,QAAM,iBAAiBA,MAAK,MAAM;AAClC,QAAM,aAAa,MAAM;AAAA,IACvBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,QAAQ,MAAM;AAAA,EACjB;AACA,MAAI,CAAC,WAAW,QAAQ;AACtB;AAAA,EACF;AACA,QAAM,OAAM,oBAAI,KAAK,GAAE,YAAY;AACnC,QAAM,aAAa,WAAW,IAAI,CAAC,EAAE,WAAW,OAAO;AAAA,IACrD,KAAK;AAAA;AAAA,IAEL,QAAQ,CAAC,YAAY,QAAQ,KAAK,KAAK,GAAG;AAAA,EAC5C,EAAE;AACF,QAAM,YAAYA,KAAI,IAAI,UAAU;AACtC;AAjBsB;AAmBtB,eAAsB,sBAAsBA,MAAU,QAAgB,QAAiC;AACrG,QAAM,iBAAiBA,MAAK,MAAM;AAClC,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,CAAC,QAAQ,QAAQ,MAAM;AAAA,EACzB;AACA,SAAO,KAAK,SAAS;AACvB;AAfsB;AAiBtB,eAAsB,oBAAoBA,MAAU,QAAiC;AACnF,QAAM,MAAM,MAAM;AAAA,IAChBA,KAAI;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,CAAC,QAAQ,MAAM;AAAA,EACjB;AACA,SAAO,KAAK,SAAS;AACvB;AAZsB;;;ADvuBtB,IAAM,aAAa,IAAIK,MAA8C;AACrE,IAAMC,gBAAc,KAAe;AAEnC,SAASC,eAAc,QAAoC;AACzD,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,SAAS,mEAAiB,KAAK,cAAc;AAAA,EACzD;AACA,SAAO;AACT;AALS,OAAAA,gBAAA;AAOT,SAAS,YAAYC,MAAiC;AACpD,QAAM,SAAS,OAAOA,IAAG;AACzB,MAAI,CAAC,OAAO,SAAS,MAAM,GAAG;AAC5B,UAAM,IAAI,SAAS,oEAAuB,KAAK,iBAAiB;AAAA,EAClE;AACA,SAAO;AACT;AANS;AAQT,WAAW,IAAI,KAAKF,aAAW;AAE/B,WAAW,IAAI,UAAU,OAAO,MAAM;AACpC,QAAM,SAASC,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,QAAQ,MAAM,kBAAkB,EAAE,KAAK,MAAM;AACnD,SAAO,gBAAgB,GAAG,KAAK;AACjC,CAAC;AAED,WAAW,IAAI,iBAAiB,OAAO,MAAM;AAC3C,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,QAAQ,MAAM,oBAAoB,EAAE,KAAK,MAAM;AACrD,SAAO,gBAAgB,GAAG,KAAK;AACjC,CAAC;AAED,WAAW,KAAK,UAAU,OAAO,MAAM;AACrC,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,WAAW,OAAO,MAAM,aAAa,WAAW,KAAK,WAAW;AACtE,QAAM,iBAAiB,MAAM,QAAQ,MAAM,cAAc,IACrD,KAAK,eAAe,OAAO,CAAC,OAA8B,OAAO,OAAO,QAAQ,IAChF,CAAC;AACL,QAAM,WAAW,QAAQ,MAAM,QAAQ;AACvC,QAAM,WAAW,OAAO,MAAM,aAAa,WAAW,KAAK,WAAW;AACtE,QAAM,kBACJ,OAAO,MAAM,oBAAoB,WAAW,OAAO,KAAK,eAAe,IAAI;AAE7E,QAAM,OAAO,MAAM,eAAe,EAAE,KAAK,QAAQ,UAAU,gBAAgB;AAAA,IACzE;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,MAAI;AACF,UAAM,QAAQ,EAAE,IAAI,SAAS,WAAW,QAAQ;AAChD,UAAM,UAAU,EAAE,IAAI,SAAS,IAAI,KAAK;AACxC,UAAM,UAAU,wBAAC,aAAqB,SAAkB,iBACtD,QAAQ,MAAM,4BAA4B;AAAA,MACxC,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAC9C,MAAM,KAAK,UAAU,EAAE,aAAa,SAAS,QAAQ,aAAa,CAAC;AAAA,IACrE,CAAC,GALa;AAOhB,QAAI,KAAK,UAAU;AACjB,YAAM,QAAQ,0BAA0B,IAAI;AAAA,IAC9C;AAEA,QAAI,MAAM,QAAQ,KAAK,YAAY,GAAG;AACpC,YAAM,QAAQ;AAAA,QACZ,KAAK,aACF,OAAO,CAAC,gBAAgB,YAAY,MAAM,EAC1C,IAAI,CAAC,gBAAgB,QAAQ,qBAAqB,MAAM,YAAY,MAAM,CAAC;AAAA,MAChF;AAAA,IACF;AAAA,EACF,SAASE,SAAO;AACd,YAAQ,MAAM,sDAAsDA,OAAK;AAAA,EAC3E;AACA,SAAO,gBAAgB,GAAG,IAAI;AAChC,CAAC;AAED,WAAW,KAAK,uBAAuB,OAAO,MAAM;AAClD,QAAM,SAASF,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,SAAS,YAAY,EAAE,IAAI,MAAM,QAAQ,CAAC;AAChD,QAAM,OAAO,MAAM,aAAa,EAAE,KAAK,QAAQ,MAAM;AACrD,SAAO,gBAAgB,GAAG,IAAI;AAChC,CAAC;AAED,WAAW,KAAK,wBAAwB,OAAO,MAAM;AACnD,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,SAAS,YAAY,EAAE,IAAI,MAAM,QAAQ,CAAC;AAChD,QAAM,cAAc,EAAE,KAAK,QAAQ,MAAM;AACzC,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,WAAW,IAAI,2BAA2B,OAAO,MAAM;AACrD,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,SAAS,YAAY,EAAE,IAAI,MAAM,QAAQ,CAAC;AAChD,QAAM,OAAO,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,GAAG;AAC9C,QAAM,OAAO,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,IAAI;AAC/C,MAAI,CAAC,OAAO,SAAS,IAAI,KAAK,OAAO,GAAG;AACtC,UAAM,IAAI,SAAS,wEAAsB,KAAK,oBAAoB;AAAA,EACpE;AACA,QAAM,UAAU,OAAO,SAAS,IAAI,KAAK,OAAO,IAAI,KAAK,IAAI,MAAM,GAAG,IAAI;AAC1E,QAAM,WAAW,MAAM,iBAAiB,EAAE,KAAK,QAAQ,MAAM,OAAO;AACpE,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,WAAW,IAAI,kCAAkC,OAAO,MAAM;AAC5D,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,SAAS,YAAY,EAAE,IAAI,MAAM,QAAQ,CAAC;AAChD,QAAM,UAAU,EAAE,IAAI,MAAM,SAAS,KAAK;AAC1C,QAAM,OAAO,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,GAAG;AAC9C,QAAM,OAAO,OAAO,EAAE,IAAI,MAAM,MAAM,KAAK,IAAI;AAC/C,QAAM,UAAU,OAAO,SAAS,IAAI,KAAK,OAAO,IAAI,KAAK,IAAI,MAAM,GAAG,IAAI;AAC1E,QAAM,WAAW,MAAM,mBAAmB,EAAE,KAAK,QAAQ,SAAS,MAAM,OAAO;AAC/E,SAAO,gBAAgB,GAAG,QAAQ;AACpC,CAAC;AAED,WAAW,KAAK,yBAAyB,OAAO,MAAM;AACpD,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,SAAS,YAAY,EAAE,IAAI,MAAM,QAAQ,CAAC;AAChD,QAAM,WAAW,MAAM,EAAE,IAAI,SAAS;AACtC,QAAM,UAAU,SAAS,OAAO,OAAO;AACvC,QAAM,QAAQ,QACX,OAAO,CAAC,UAAU,OAAO,UAAU,YAAY,UAAU,QAAQ,iBAAkB,KAAa,EAChG,IAAI,CAAC,UAAU,KAAa;AAC/B,MAAI,CAAC,MAAM,QAAQ;AACjB,WAAO,gBAAgB,GAAG,CAAC,CAAC;AAAA,EAC9B;AACA,QAAM,OAAO,MAAM,iBAAiB,EAAE,KAAK,QAAQ,QAAQ,KAAK;AAChE,SAAO,gBAAgB,GAAG,IAAI;AAChC,CAAC;AAED,WAAW,KAAK,iBAAiB,OAAO,MAAM;AAC5C,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,WAAW,MAAM,EAAE,IAAI,SAAS;AACtC,QAAM,cAAc,SAAS,IAAI,QAAQ;AACzC,QAAM,SAAS,OAAO,gBAAgB,WAAW,OAAO,WAAW,IAAI,OAAO,WAAW;AACzF,MAAI,CAAC,OAAO,SAAS,MAAM,GAAG;AAC5B,UAAM,IAAI,SAAS,gDAAkB,KAAK,iBAAiB;AAAA,EAC7D;AACA,QAAM,YAAY,SAAS,IAAI,OAAO,KAAK,SAAS,IAAI,MAAM;AAC9D,MAAI,CAAC,aAAa,OAAO,cAAc,YAAY,EAAE,iBAAkB,YAAoB;AACzF,UAAM,IAAI,SAAS,yEAAkB,KAAK,qBAAqB;AAAA,EACjE;AACA,QAAMG,QAAO;AACb,QAAM,OAAO,MAAM,iBAAiB,EAAE,KAAK,QAAQ,QAAQ,CAACA,KAAI,CAAC;AACjE,QAAM,UAAU,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI;AAC5C,SAAO,gBAAgB,GAAG,EAAE,KAAK,SAAS,KAAK,CAAC;AAClD,CAAC;AAED,WAAW,KAAK,wBAAwB,OAAO,MAAM;AACnD,QAAM,SAASH,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,SAAS,YAAY,EAAE,IAAI,MAAM,QAAQ,CAAC;AAChD,QAAM,WAAW,MAAM,EAAE,IAAI,SAAS;AACtC,QAAM,QAAQ,SAAS,IAAI,MAAM;AACjC,MAAI,CAAC,SAAS,OAAO,UAAU,YAAY,EAAE,iBAAkB,QAAgB;AAC7E,UAAM,IAAI,SAAS,yEAAkB,KAAK,qBAAqB;AAAA,EACjE;AACA,QAAMG,QAAO;AACb,QAAMC,OAAM,MAAM,gBAAgB,EAAE,KAAK,QAAQ,QAAQD,KAAI;AAC7D,SAAO,gBAAgB,GAAGC,IAAG;AAC/B,CAAC;AAED,WAAW,IAAI,mBAAmB,OAAO,MAAM;AAC7C,QAAM,SAASJ,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,QAAQ,MAAM,gBAAgB,EAAE,KAAK,MAAM;AACjD,SAAO,gBAAgB,GAAG,KAAK;AACjC,CAAC;AAED,WAAW,OAAO,kBAAkB,OAAO,MAAM;AAC/C,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,SAAS,OAAO,EAAE,IAAI,MAAM,QAAQ,CAAC;AAC3C,MAAI,CAAC,OAAO,SAAS,MAAM,GAAG;AAC5B,UAAM,IAAI,SAAS,4EAAqB,KAAK,iBAAiB;AAAA,EAChE;AACA,QAAM,eAAe,EAAE,KAAK,QAAQ,MAAM;AAC1C,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,WAAW,KAAK,uCAAuC,OAAO,MAAM;AAClE,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,SAAS,YAAY,EAAE,IAAI,MAAM,QAAQ,CAAC;AAChD,QAAM,uBAAuB,EAAE,KAAK,QAAQ,MAAM;AAClD,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,WAAW,IAAI,2CAA2C,OAAO,MAAM;AACrE,QAAM,SAASA,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAM,SAAS,YAAY,EAAE,IAAI,MAAM,QAAQ,CAAC;AAChD,QAAMK,SAAQ,MAAM,sBAAsB,EAAE,KAAK,QAAQ,MAAM;AAC/D,SAAO,gBAAgB,GAAGA,MAAK;AACjC,CAAC;AAED,WAAW,IAAI,mCAAmC,OAAO,MAAM;AAC7D,QAAM,SAASL,eAAc,EAAE,IAAI,QAAQ,CAAC;AAC5C,QAAMK,SAAQ,MAAM,oBAAoB,EAAE,KAAK,MAAM;AACrD,SAAO,gBAAgB,GAAGA,MAAK;AACjC,CAAC;AAED,IAAO,eAAQ;;;AE3Nf;AAAA;AAAA;AAAAC;AAIA;AAGA;AAEA,IAAM,iBAAiB,IAAIC,MAA8C;AACzE,IAAMC,gBAAc,KAAe;AAEnC,eAAe,IAAI,KAAKA,aAAW;AAEnC,eAAe,gBAAgBC,MAAU,QAA8C;AACrF,QAAM,OAAO,MAAM;AAAA,IACjBA,KAAI;AAAA,IACJ;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AACA,QAAMC,OAAM,oBAAI,IAAoB;AACpC,aAAW,OAAO,MAAM;AACtB,QAAI,IAAI,aAAa;AACnB,MAAAA,KAAI,IAAI,IAAI,aAAa,IAAI,iBAAiB,EAAE;AAAA,IAClD;AAAA,EACF;AACA,SAAOA;AACT;AAbe;AAef,eAAe,oBAAoBD,MAAU,QAAgB,SAAoD;AAC/G,QAAM,OAAM,oBAAI,KAAK,GAAE,YAAY;AACnC,QAAM,aAAa,OAAO,QAAQ,OAAO,EACtC,OAAO,CAAC,CAAC,GAAG,KAAK,MAAM,UAAU,MAAS,EAC1C,IAAI,CAAC,CAAC,KAAK,KAAK,OAAO;AAAA,IACtB,KAAK;AAAA,IACL,QAAQ,CAAC,QAAQ,KAAK,UAAU,OAAO,OAAO,OAAO,KAAK,GAAG,GAAG;AAAA,EAClE,EAAE;AACJ,MAAI,WAAW,WAAW,EAAG;AAC7B,QAAM,YAAYA,KAAI,IAAI,UAAU;AACtC;AAVe;AAYf,eAAe,mBAAmBA,MAAU,QAAgB,MAAgB;AAC1E,MAAI,CAAC,KAAK,OAAQ;AAClB,QAAM,eAAe,KAAK,IAAI,MAAM,GAAG,EAAE,KAAK,GAAG;AACjD,QAAM;AAAA,IACJA,KAAI;AAAA,IACJ,mEAAmE,YAAY;AAAA,IAC/E,CAAC,QAAQ,GAAG,IAAI;AAAA,EAClB;AACF;AARe;AAUf,SAAS,OAAO,OAA2B,WAAW,OAAgB;AACpE,MAAI,UAAU,OAAW,QAAO;AAChC,MAAI,UAAU,UAAU,UAAU,IAAK,QAAO;AAC9C,MAAI,UAAU,WAAW,UAAU,IAAK,QAAO;AAC/C,SAAO;AACT;AALS;AAOT,eAAe,IAAI,YAAY,OAAO,MAAM;AAC1C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,CAACE,UAAS,QAAQ,IAAI,MAAM,QAAQ,IAAI;AAAA,IAC5C,eAAe,EAAE,KAAK,MAAM;AAAA,IAC5B,gBAAgB,EAAE,KAAK,MAAM;AAAA,EAC/B,CAAC;AACD,MAAI,CAACA,UAAS;AACZ,UAAM,IAAI,SAAS,kBAAkB,KAAK,gBAAgB;AAAA,EAC5D;AACA,SAAO,gBAAgB,GAAG;AAAA,IACxB,OAAOA,SAAQ,SAAS;AAAA,IACxB,aAAa,SAAS,IAAI,qBAAqB,KAAK;AAAA,IACpD,aAAaA,SAAQ,eAAe;AAAA,IACpC,WAAW,SAAS,IAAI,mBAAmB,KAAKA,SAAQ,UAAU,WAAW;AAAA,IAC7E,cAAcA,SAAQ,gBAAgB;AAAA,IACtC,KAAKA,SAAQ,WAAW;AAAA,IACxB,WAAWA,SAAQ,YAAY;AAAA,IAC/B,QAAQA,SAAQ,UAAU;AAAA,EAC5B,CAAC;AACH,CAAC;AAED,eAAe,MAAM,YAAY,OAAO,MAAM;AAC5C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAEhD,QAAM,iBAAsC,CAAC;AAC7C,MAAI,OAAO,KAAK,gBAAgB,SAAU,gBAAe,cAAc,KAAK,YAAY,KAAK;AAC7F,MAAI,OAAO,KAAK,QAAQ,SAAU,gBAAe,UAAU,KAAK,IAAI,KAAK;AACzE,MAAI,OAAO,KAAK,cAAc,SAAU,gBAAe,WAAW,KAAK;AACvE,MAAI,OAAO,KAAK,WAAW,SAAU,gBAAe,SAAS,KAAK;AAClE,MAAI,OAAO,KAAK,iBAAiB,YAAY,KAAK,aAAa,SAAS,GAAG;AACzE,mBAAe,eAAe,KAAK;AAAA,EACrC;AACA,MAAI,OAAO,KAAK,cAAc,EAAE,SAAS,GAAG;AAC1C,UAAM,kBAAkB,EAAE,KAAK,QAAQ,cAAc;AAAA,EACvD;AAEA,QAAM,UAAyC,CAAC;AAChD,MAAI,KAAK,gBAAgB,OAAW,SAAQ,qBAAqB,IAAI,KAAK,cAAc,OAAO,KAAK,WAAW,IAAI;AACnH,MAAI,KAAK,cAAc,OAAW,SAAQ,mBAAmB,IAAI,KAAK,YAAY,OAAO,KAAK,SAAS,IAAI;AAC3G,MAAI,KAAK,UAAU,OAAW,SAAQ,eAAe,IAAI,KAAK,QAAQ,OAAO,KAAK,KAAK,IAAI;AAE3F,QAAM,oBAAoB,EAAE,KAAK,QAAQ,OAAO;AAEhD,MAAI,KAAK,SAAS,OAAO,KAAK,UAAU,UAAU;AAChD,UAAM;AAAA,MACJ,EAAE,IAAI;AAAA,MACN;AAAA,MACA,CAAC,KAAK,MAAM,KAAK,IAAG,oBAAI,KAAK,GAAE,YAAY,GAAG,MAAM;AAAA,IACtD;AAAA,EACF;AAEA,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,eAAe,OAAO,YAAY,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM;AAAA,IACJ,EAAE,IAAI;AAAA,IACN;AAAA,IACA,EAAC,oBAAI,KAAK,GAAE,YAAY,GAAG,MAAM;AAAA,EACnC;AACA,SAAO,gBAAgB,GAAG,EAAE,UAAU,KAAK,CAAC;AAC9C,CAAC;AAED,eAAe,IAAI,kBAAkB,OAAO,MAAM;AAChD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,WAAW,MAAM,gBAAgB,EAAE,KAAK,MAAM;AACpD,QAAM,QAAQ,SAAS,2BAA2B,CAAC;AACnD,SAAO,gBAAgB,GAAG;AAAA,IACxB,OAAO,MAAM,SAAS;AAAA,IACtB,MAAM,MAAM,QAAQ;AAAA,IACpB,KAAK,MAAM,OAAO;AAAA,EACpB,CAAC;AACH,CAAC;AAED,eAAe,MAAM,kBAAkB,OAAO,MAAM;AAClD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,cAAuC,CAAC;AAC9C,aAAW,OAAO,CAAC,SAAS,QAAQ,KAAK,GAAG;AAC1C,QAAI,KAAK,GAAG,MAAM,QAAW;AAC3B,kBAAY,GAAG,IAAI,QAAQ,KAAK,GAAG,CAAC;AAAA,IACtC;AAAA,EACF;AACA,QAAM,mBAAmB,EAAE,KAAK,QAAQ,EAAE,yBAAyB,YAAY,CAAC;AAChF,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,eAAe,IAAI,YAAY,OAAO,MAAM;AAC1C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAMD,OAAM,MAAM,gBAAgB,EAAE,KAAK,MAAM;AAC/C,SAAO,gBAAgB,GAAG;AAAA,IACxB,eAAe,OAAOA,KAAI,IAAI,uBAAuB,GAAG,IAAI;AAAA,IAC5D,kBAAkB,OAAOA,KAAI,IAAI,0BAA0B,GAAG,IAAI;AAAA,IAClE,eAAe,OAAOA,KAAI,IAAI,uBAAuB,GAAG,IAAI;AAAA,EAC9D,CAAC;AACH,CAAC;AAED,eAAe,MAAM,YAAY,OAAO,MAAM;AAC5C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,UAAkC,CAAC;AACzC,MAAI,KAAK,kBAAkB,OAAW,SAAQ,uBAAuB,IAAI,OAAO,QAAQ,KAAK,aAAa,CAAC;AAC3G,MAAI,KAAK,qBAAqB,OAAW,SAAQ,0BAA0B,IAAI,OAAO,QAAQ,KAAK,gBAAgB,CAAC;AACpH,MAAI,KAAK,kBAAkB,OAAW,SAAQ,uBAAuB,IAAI,OAAO,QAAQ,KAAK,aAAa,CAAC;AAC3G,QAAM,oBAAoB,EAAE,KAAK,QAAQ,OAAO;AAChD,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,eAAe,IAAI,aAAa,OAAO,MAAM;AAC3C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,WAAW,MAAM,gBAAgB,EAAE,KAAK,MAAM;AACpD,SAAO,gBAAgB,GAAG;AAAA,IACxB,UAAU,SAAS,YAAY;AAAA,IAC/B,UAAU,SAAS,YAAY;AAAA,EACjC,CAAC;AACH,CAAC;AAED,eAAe,MAAM,aAAa,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAM,UAAe,CAAC;AACtB,MAAI,KAAK,aAAa,OAAW,SAAQ,WAAW,OAAO,KAAK,QAAQ;AACxE,MAAI,KAAK,aAAa,OAAW,SAAQ,WAAW,OAAO,KAAK,QAAQ;AACxE,MAAI,KAAK,mBAAmB,OAAW,SAAQ,iBAAiB,QAAQ,KAAK,cAAc;AAC3F,QAAM,mBAAmB,EAAE,KAAK,QAAQ,OAAO;AAC/C,SAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,CAAC;AAC7C,CAAC;AAED,eAAe,MAAM,aAAa,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,MAAI,OAAO,KAAK,oBAAoB,YAAY,OAAO,KAAK,gBAAgB,UAAU;AACpF,UAAM,IAAI,SAAS,gDAAgD,KAAK,iBAAiB;AAAA,EAC3F;AAEA,SAAO,gBAAgB,GAAG,EAAE,SAAS,MAAM,SAAS,kDAAkD,CAAC;AACzG,CAAC;AAED,eAAe,KAAK,WAAW,OAAO,MAAM;AAC1C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAMC,WAAU,MAAM,eAAe,EAAE,KAAK,MAAM;AAClD,SAAO,gBAAgB,GAAG;AAAA,IACxB,aAAY,oBAAI,KAAK,GAAE,YAAY;AAAA,IACnC,SAAAA;AAAA,IACA,UAAU,CAAC;AAAA,IACX,UAAU,CAAC;AAAA,EACb,CAAC;AACH,CAAC;AAED,eAAe,IAAI,kBAAkB,OAAO,MAAM;AAChD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAG3F,QAAM,gBAAgB,oBAAI,KAAK;AAC/B,gBAAc,QAAQ,cAAc,QAAQ,IAAI,EAAE;AAElD,QAAM,UAAU,MAAM;AAAA,IAYpB,EAAE,IAAI;AAAA,IACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAeA,CAAC,QAAQ,cAAc,YAAY,CAAC;AAAA,EACtC;AAGA,QAAM,mBAAmB,QAAQ,IAAI,CAAAC,aAAW;AAAA,IAC9C,WAAWA,QAAO;AAAA,IAClB,WAAWA,QAAO,cAAc;AAAA,IAChC,QAAQA,QAAO,UAAU;AAAA,IACzB,SAASA,QAAO,WAAW;AAAA,IAC3B,UAAUA,QAAO,YAAY;AAAA,IAC7B,aAAaA,QAAO,gBAAgB;AAAA,IACpC,YAAY,QAAQA,QAAO,UAAU;AAAA,IACrC,kBAAkBA,QAAO,qBAAqB;AAAA,EAChD,EAAE;AAEF,SAAO,gBAAgB,GAAG,gBAAgB;AAC5C,CAAC;AAED,eAAe,IAAI,eAAe,OAAO,MAAM;AAC7C,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAMF,OAAM,MAAM,gBAAgB,EAAE,KAAK,MAAM;AAC/C,QAAM,UAAUA,KAAI,IAAI,0BAA0B;AAClD,SAAO,gBAAgB,GAAG;AAAA,IACxB,SAAS,OAAOA,KAAI,IAAI,4BAA4B,GAAG,KAAK;AAAA,IAC5D,QAAQ,UAAUA,KAAI,IAAI,2BAA2B,KAAK,OAAO;AAAA,EACnE,CAAC;AACH,CAAC;AAED,eAAe,KAAK,sBAAsB,OAAO,MAAM;AACrD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,SAAS,OAAO,WAAW,EAAE,QAAQ,MAAM,EAAE,EAAE,MAAM,GAAG,EAAE,EAAE,YAAY;AAC9E,QAAM,UAAU,4BAA4B,MAAM,WAAW,MAAM;AACnE,QAAM,oBAAoB,EAAE,KAAK,QAAQ;AAAA,IACvC,4BAA4B;AAAA,IAC5B,6BAA6B;AAAA,IAC7B,6BAA6B;AAAA,EAC/B,CAAC;AACD,SAAO,gBAAgB,GAAG,EAAE,QAAQ,QAAQ,CAAC;AAC/C,CAAC;AAED,eAAe,KAAK,uBAAuB,OAAO,MAAM;AACtD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,gCAAgC,KAAK,sBAAsB;AAC3F,QAAM,OAAO,MAAM,EAAE,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AAChD,QAAMA,OAAM,MAAM,gBAAgB,EAAE,KAAK,MAAM;AAC/C,MAAIA,KAAI,IAAI,0BAA0B,MAAM,WAAW;AACrD,UAAM,oBAAoB,EAAE,KAAK,QAAQ,EAAE,8BAA8B,OAAO,CAAC;AACjF,UAAM,mBAAmB,EAAE,KAAK,QAAQ,CAAC,4BAA4B,2BAA2B,CAAC;AACjG,WAAO,gBAAgB,GAAG,EAAE,SAAS,MAAM,SAAS,MAAM,UAAU,KAAK,CAAC;AAAA,EAC5E;AACA,QAAM,oBAAoB,EAAE,KAAK,QAAQ,EAAE,8BAA8B,QAAQ,CAAC;AAClF,QAAM,mBAAmB,EAAE,KAAK,QAAQ,CAAC,6BAA6B,2BAA2B,CAAC;AAClG,SAAO,gBAAgB,GAAG,EAAE,SAAS,MAAM,SAAS,MAAM,CAAC;AAC7D,CAAC;AAED,IAAO,mBAAQ;;;ACzTf;AAAA;AAAA;AAAAG;AAIA;;;ACJA;AAAA;AAAA;AAAAC;AA4GA,eAAe,gBACb,IACA,eACA,iBAAyB,WACG;AAC5B,QAAM,WAA0B;AAAA,IAC9B;AAAA,MACE,MAAM;AAAA,MACN,SAAS,iDAAiD,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAgB1E;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,GAEZ,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUZ;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,uBAAuB,IAAI,UAAU;AAAA,MAC1D,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,UAAM,YAAY,qBAAqB,QAAQ;AAC/C,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,QAAI,MAAM,QAAQ,OAAO,QAAQ,GAAG;AAClC,aAAO,OAAO,SAAS,IAAI,CAAC,OAAY;AAAA,QACtC,SAAS,EAAE,WAAW;AAAA,QACtB,MAAM,EAAE,QAAQ;AAAA,QAChB,UAAU,EAAE,YAAY;AAAA,QACxB,UAAU,OAAO,EAAE,aAAa,WAAW,EAAE,WAAW;AAAA,QACxD,QAAQ,MAAM,QAAQ,EAAE,MAAM,IAAI,EAAE,SAAS,CAAC;AAAA,QAC9C,cAAc,EAAE;AAAA,QAChB,mBAAmB,EAAE;AAAA,MACvB,EAAE;AAAA,IACJ;AAEA,WAAO,CAAC;AAAA,EACV,SAASC,SAAO;AACd,IAAAC,KAAI,MAAM,+BAA+BD,OAAK;AAC9C,WAAO,CAAC;AAAA,EACV;AACF;AArEe;AA0Ef,eAAe,kBACb,IACA,eACA,iBAAyB,WACK;AAC9B,QAAM,WAA0B;AAAA,IAC9B;AAAA,MACE,MAAM;AAAA,MACN,SAAS,wBAAwB,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAejD;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,GAEZ,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOZ;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,uBAAuB,IAAI,UAAU;AAAA,MAC1D,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,UAAM,YAAY,qBAAqB,QAAQ;AAC/C,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,QAAI,MAAM,QAAQ,OAAO,QAAQ,GAAG;AAClC,aAAO,OAAO,SAAS,IAAI,CAAC,OAAY;AAAA,QACtC,MAAM,EAAE,QAAQ;AAAA,QAChB,cAAc,EAAE,gBAAgB;AAAA,QAChC,WAAW,EAAE,cAAc;AAAA,QAC3B,iBAAiB,EAAE,mBAAmB;AAAA,QACtC,iBAAiB,EAAE,mBAAmB;AAAA,QACtC,YAAY,OAAO,EAAE,eAAe,WAAW,EAAE,aAAa;AAAA,MAChE,EAAE;AAAA,IACJ;AAEA,WAAO,CAAC;AAAA,EACV,SAASA,SAAO;AACd,IAAAC,KAAI,MAAM,iCAAiCD,OAAK;AAChD,WAAO,CAAC;AAAA,EACV;AACF;AAhEe;AAqEf,eAAe,cACb,IACA,eACA,iBAAyB,WACA;AACzB,QAAM,WAA0B;AAAA,IAC9B;AAAA,MACE,MAAM;AAAA,MACN,SAAS,wBAAwB,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAajD;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,GAEZ,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUZ;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,uBAAuB,IAAI,UAAU;AAAA,MAC1D,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,UAAM,YAAY,qBAAqB,QAAQ;AAC/C,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,WAAO;AAAA,MACL,eAAe,OAAO,iBAAiB;AAAA,MACvC,eAAe,OAAO,iBAAiB;AAAA,MACvC,gBAAgB,OAAO,kBAAkB;AAAA,MACzC,YAAY,OAAO,cAAc;AAAA,MACjC,iBAAiB,OAAO,oBAAoB;AAAA,MAC5C,gBAAgB,MAAM,QAAQ,OAAO,cAAc,IAAI,OAAO,iBAAiB,CAAC;AAAA,MAChF,cAAc,OAAO,gBAAgB;AAAA,MACrC,aAAa,OAAO,OAAO,gBAAgB,WAAW,OAAO,cAAc;AAAA,IAC7E;AAAA,EACF,SAASA,SAAO;AACd,IAAAC,KAAI,MAAM,6BAA6BD,OAAK;AAC5C,WAAO;AAAA,MACL,eAAe;AAAA,MACf,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,iBAAiB;AAAA,MACjB,gBAAgB,CAAC;AAAA,MACjB,cAAc;AAAA,MACd,aAAa;AAAA,IACf;AAAA,EACF;AACF;AAxEe;AA6Ef,eAAe,cACb,IACA,eACA,iBAAyB,WACA;AACzB,QAAM,WAA0B;AAAA,IAC9B;AAAA,MACE,MAAM;AAAA,MACN,SAAS,wBAAwB,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAqBjD;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,GAEZ,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOZ;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,uBAAuB,IAAI,UAAU;AAAA,MAC1D,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,UAAM,YAAY,qBAAqB,QAAQ;AAC/C,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,WAAO;AAAA,MACL,cAAc,MAAM,QAAQ,OAAO,YAAY,IAAI,OAAO,eAAe,CAAC;AAAA,MAC1E,gBAAgB;AAAA,QACd,cAAc,MAAM,QAAQ,OAAO,gBAAgB,YAAY,IAC3D,OAAO,eAAe,eAAe,CAAC;AAAA,QAC1C,eAAe,MAAM,QAAQ,OAAO,gBAAgB,aAAa,IAC7D,OAAO,eAAe,gBAAgB,CAAC;AAAA,QAC3C,mBAAmB,OAAO,gBAAgB,qBAAqB;AAAA,QAC/D,mBAAmB,OAAO,gBAAgB,qBAAqB;AAAA,MACjE;AAAA,MACA,iBAAiB,OAAO,OAAO,oBAAoB,WAAW,OAAO,kBAAkB;AAAA,IACzF;AAAA,EACF,SAASA,SAAO;AACd,IAAAC,KAAI,MAAM,6BAA6BD,OAAK;AAC5C,WAAO;AAAA,MACL,cAAc,CAAC;AAAA,MACf,gBAAgB;AAAA,QACd,cAAc,CAAC;AAAA,QACf,eAAe,CAAC;AAAA,QAChB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,MACrB;AAAA,MACA,iBAAiB;AAAA,IACnB;AAAA,EACF;AACF;AA/Ee;AAoFf,eAAe,4BACb,IACA,eACA,iBAC+B;AAC/B,MAAI,gBAAgB,WAAW,GAAG;AAChC,WAAO,CAAC;AAAA,EACV;AAEA,QAAM,WAA0B;AAAA,IAC9B;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAgBX;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,kBAEG,aAAa;AAAA;AAAA,kBAEb,KAAK,UAAU,gBAAgB,MAAM,GAAG,EAAE,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAO1D;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,uBAAuB,IAAI,UAAU;AAAA,MAC1D,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,UAAM,YAAY,qBAAqB,QAAQ;AAC/C,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,QAAI,MAAM,QAAQ,OAAO,MAAM,GAAG;AAChC,aAAO,OAAO,OAAO,IAAI,CAAC,OAAY;AAAA,QACpC,MAAM,EAAE,QAAQ;AAAA,QAChB,SAAS,EAAE,WAAW;AAAA,QACtB,MAAM,EAAE,QAAQ;AAAA,QAChB,UAAU,EAAE,YAAY;AAAA,QACxB,UAAU,EAAE,YAAY;AAAA,QACxB,YAAY,EAAE,cAAc;AAAA,QAC5B,SAAS,EAAE,WAAW;AAAA,MACxB,EAAE;AAAA,IACJ;AAEA,WAAO,CAAC;AAAA,EACV,SAASA,SAAO;AACd,IAAAC,KAAI,MAAM,4CAA4CD,OAAK;AAC3D,WAAO,CAAC;AAAA,EACV;AACF;AAxEe;AA6Ef,eAAe,wBACb,IACA,YACkE;AAClE,QAAM,WAA0B;AAAA,IAC9B;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAiBX;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,iBAEE,WAAW,gBAAgB,CAAC;AAAA,mBAC1B,WAAW,QAAQ,aAAa,CAAC;AAAA,wBAC5B,WAAW,QAAQ,kBAAkB,CAAC;AAAA;AAAA;AAAA,EAG5D,WAAW,QAAQ,MAAM,GAAG,CAAC,EAAE,IAAI,OAAK,KAAK,EAAE,OAAO,QAAQ,EAAE,IAAI,MAAM,EAAE,UAAU,EAAE,EAAE,KAAK,IAAI,KAAK,iBAAiB;AAAA;AAAA;AAAA,EAGzH,WAAW,YAAY,KAAK,IAAI,KAAK,iBAAiB;AAAA;AAAA;AAAA,IAGpD;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,uBAAuB,IAAI,UAAU;AAAA,MAC1D,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAED,UAAM,YAAY,qBAAqB,QAAQ;AAC/C,UAAM,SAAS,KAAK,MAAM,SAAS;AAEnC,QAAI,MAAM,QAAQ,OAAO,eAAe,GAAG;AACzC,aAAO,OAAO,gBAAgB,IAAI,CAAC,OAAY;AAAA,QAC7C,UAAU,EAAE,YAAY;AAAA,QACxB,UAAU,EAAE,YAAY;AAAA,QACxB,aAAa,EAAE,eAAe;AAAA,QAC9B,WAAW,MAAM,QAAQ,EAAE,SAAS,IAAI,EAAE,YAAY,CAAC;AAAA,MACzD,EAAE;AAAA,IACJ;AAEA,WAAO,CAAC;AAAA,EACV,SAASA,SAAO;AACd,IAAAC,KAAI,MAAM,uCAAuCD,OAAK;AACtD,WAAO,CAAC;AAAA,EACV;AACF;AAnEe;AAwEf,eAAsB,4CACpB,IACA,eACA,iBAAyB,WACsB;AAE/C,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,MAAM,QAAQ,IAAI;AAAA,IACpB,gBAAgB,IAAI,eAAe,cAAc;AAAA,IACjD,kBAAkB,IAAI,eAAe,cAAc;AAAA,IACnD,cAAc,IAAI,eAAe,cAAc;AAAA,IAC/C,cAAc,IAAI,eAAe,cAAc;AAAA,EACjD,CAAC;AAGD,QAAM,SAAS,MAAM,4BAA4B,IAAI,eAAe,eAAe;AAGnF,QAAM,iBAAiB,gBAAgB,SAAS,IAC5C,KAAK,MAAM,gBAAgB,OAAO,CAAC,KAAK,MAAM,MAAM,EAAE,UAAU,CAAC,IAAI,gBAAgB,MAAM,IAC3F;AAEJ,QAAM,kBAAkB,mBAAmB,SAAS,IAChD,KAAK,MAAM,mBAAmB,OAAO,OAAK,EAAE,SAAS,EAAE,SAAS,mBAAmB,SAAS,GAAG,IAC/F;AAEJ,QAAM,cAAc,eAAe;AACnC,QAAM,cAAc,eAAe;AAEnC,QAAM,sBAAsB,KAAK;AAAA,KAC9B,kBAAkB,cAAc,eAAe;AAAA,EAClD;AAGA,QAAM,eAAe,KAAK;AAAA,IACxB,iBAAiB;AAAA,IACjB,sBAAsB;AAAA,IACtB,cAAc;AAAA,IACd,kBAAkB;AAAA;AAAA,EACpB;AAGA,QAAM,kBAAkB,KAAK;AAAA,IAC3B,iBAAiB,MAAM,sBAAsB;AAAA,EAC/C;AAGA,QAAM,UAAU,KAAK;AAAA,KAClB,cAAc,KAAK,IAAI,eAAe,eAAe,MAAM,KAAK,GAAG,KAAK;AAAA,EAC3E;AAGA,QAAM,iBAAiB,KAAK;AAAA,KACzB,iBAAiB,sBAAsB,eAAe,IAAI;AAAA;AAAA,EAC7D;AAGA,MAAI,YAAY;AAChB,MAAI,gBAAgB,GAAI,aAAY;AAAA,WAC3B,gBAAgB,GAAI,aAAY;AAAA,WAChC,gBAAgB,GAAI,aAAY;AAAA,WAChC,gBAAgB,GAAI,aAAY;AAAA,WAChC,gBAAgB,GAAI,aAAY;AAGzC,QAAM,YAAsB,CAAC;AAC7B,QAAM,aAAuB,CAAC;AAE9B,MAAI,kBAAkB,GAAI,WAAU,KAAK,mCAAmC;AAAA,WACnE,iBAAiB,GAAI,YAAW,KAAK,6CAA6C;AAE3F,MAAI,uBAAuB,GAAI,WAAU,KAAK,+BAA+B;AAAA,WACpE,sBAAsB,GAAI,YAAW,KAAK,qCAAqC;AAExF,MAAI,eAAe,GAAI,WAAU,KAAK,+BAA+B;AAAA,WAC5D,cAAc,GAAI,YAAW,KAAK,kCAAkC;AAE7E,MAAI,eAAe,gBAAiB,WAAU,KAAK,yBAAyB;AAAA,MACvE,YAAW,KAAK,oCAAoC;AAGzD,QAAM,cAA6D;AAAA,IACjE;AAAA,IACA,QAAQ;AAAA,MAAE,WAAW;AAAA,MAAgB,gBAAgB;AAAA,MAC3C;AAAA,MAAiB;AAAA,MAAS;AAAA,IAAe;AAAA,IACnD;AAAA,IACA;AAAA,EACF;AAEA,QAAM,kBAAkB,MAAM,wBAAwB,IAAI,WAAW;AAGrE,QAAM,wBAAkC,CAAC;AACzC,MAAI,cAAc,MAAM;AACtB,0BAAsB,KAAK,yCAAyC;AACpE,0BAAsB,KAAK,gCAAgC;AAC3D,0BAAsB,KAAK,oCAAoC;AAAA,EACjE,WAAW,cAAc,MAAM;AAC7B,0BAAsB,KAAK,sCAAsC;AACjE,0BAAsB,KAAK,mCAAmC;AAC9D,0BAAsB,KAAK,0CAA0C;AAAA,EACvE,WAAW,cAAc,MAAM;AAC7B,0BAAsB,KAAK,+CAA+C;AAC1E,0BAAsB,KAAK,qCAAqC;AAChE,0BAAsB,KAAK,qCAAqC;AAAA,EAClE,WAAW,cAAc,MAAM;AAC7B,0BAAsB,KAAK,yCAAyC;AACpE,0BAAsB,KAAK,kCAAkC;AAC7D,0BAAsB,KAAK,wCAAwC;AAAA,EACrE,WAAW,cAAc,MAAM;AAC7B,0BAAsB,KAAK,uCAAuC;AAClE,0BAAsB,KAAK,wCAAwC;AACnE,0BAAsB,KAAK,6CAA6C;AAAA,EAC1E;AAEA,SAAO;AAAA,IACL;AAAA,IACA,QAAQ;AAAA,MACN,WAAW;AAAA,MACX,gBAAgB;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AA3IsB;;;ADxiBtB,IAAM,sBAAsB,IAAIE,MAA8C;AAE9E,IAAMC,gBAAc,KAAe;AAEnC,oBAAoB,IAAI,KAAKA,aAAW;AAexC,oBAAoB,KAAK,aAAa,OAAO,MAAM;AACjD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AAExF,MAAI;AAEF,UAAM,WAAW,MAAM,EAAE,IAAI,SAAS;AACtC,UAAM,YAAY,SAAS,IAAI,OAAO;AACtC,UAAM,iBAAkB,SAAS,IAAI,gBAAgB,KAAgB;AACrE,UAAM,eAAe,SAAS,IAAI,MAAM;AAExC,QAAI,CAAC,WAAW;AACd,YAAM,IAAI,SAAS,0BAA0B,KAAK,eAAe;AAAA,IACnE;AAGA,UAAM,cAAc,MAAM,UAAU,YAAY;AAGhD,UAAM,gBAAgB,MAAM,aAAa,EAAE,IAAI,IAAI,aAAa;AAAA,MAC9D,UAAU,eAAe,YAAY,MAAM,YAAY,OAC7C,eAAe,YAAY,MAAM,WAAW,OAAO;AAAA,IAC/D,CAAC;AAED,QAAI,CAAC,eAAe,MAAM;AACxB,YAAM,IAAI,SAAS,8BAA8B,KAAK,sBAAsB;AAAA,IAC9E;AAGA,UAAM,aAAa,MAAM;AAAA,MACvB,EAAE,IAAI;AAAA,MACN,cAAc;AAAA,MACd;AAAA,IACF;AAEA,WAAO,gBAAgB,GAAG;AAAA,MACxB,eAAe,cAAc;AAAA,MAC7B,cAAc,gBAAgB;AAAA,MAC9B;AAAA,IACF,CAAC;AAAA,EACH,SAASC,SAAO;AACd,QAAIA,mBAAiB,UAAU;AAC7B,YAAMA;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACRA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,MACzC;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAcD,oBAAoB,KAAK,kBAAkB,OAAO,MAAM;AACtD,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AAExF,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAE9B,QAAI,CAAC,KAAK,iBAAiB,OAAO,KAAK,kBAAkB,UAAU;AACjE,YAAM,IAAI,SAAS,kCAAkC,KAAK,uBAAuB;AAAA,IACnF;AAEA,UAAM,iBAAiB,KAAK,kBAAkB;AAG9C,UAAM,aAAa,MAAM;AAAA,MACvB,EAAE,IAAI;AAAA,MACN,KAAK;AAAA,MACL;AAAA,IACF;AAEA,WAAO,gBAAgB,GAAG;AAAA,MACxB,eAAe,KAAK;AAAA,MACpB;AAAA,IACF,CAAC;AAAA,EACH,SAASA,SAAO;AACd,QAAIA,mBAAiB,UAAU;AAC7B,YAAMA;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACRA,mBAAiB,QAAQA,QAAM,UAAU;AAAA,MACzC;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAUD,oBAAoB,IAAI,uBAAuB,OAAO,MAAM;AAC1D,QAAM,SAAS,EAAE,IAAI,QAAQ;AAC7B,MAAI,CAAC,OAAQ,OAAM,IAAI,SAAS,6BAA6B,KAAK,sBAAsB;AAExF,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU;AAGvC,QAAM,gBAAqC;AAAA,IACzC,SAAS;AAAA,MACP,UAAU;AAAA,MACV,UAAU;AAAA,QACR;AAAA,UACE,QAAQ;AAAA,UACR,aAAa;AAAA,UACb,UAAU,CAAC,SAAS,UAAK,SAAS,OAAO;AAAA,UACzC,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,QAAQ;AAAA,UACR,aAAa;AAAA,UACb,UAAU,CAAC,QAAQ,QAAQ,QAAQ,QAAQ;AAAA,UAC3C,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,QAAQ;AAAA,UACR,aAAa;AAAA,UACb,UAAU,CAAC,OAAO,SAAS,SAAS,QAAQ;AAAA,UAC5C,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,QAAQ;AAAA,UACR,aAAa;AAAA,UACb,UAAU,CAAC,SAAS,QAAQ,QAAQ,KAAK;AAAA,UACzC,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,UAAU;AAAA,MACV,UAAU;AAAA,QACR;AAAA,UACE,QAAQ;AAAA,UACR,aAAa;AAAA,UACb,UAAU,CAAC,gBAAM,gBAAM,cAAI;AAAA,UAC3B,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,QAAM,QAAQ,cAAc,SAAS,YAAY,CAAC;AAElD,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,SAAS,iDAAiD,KAAK,wBAAwB;AAAA,EACnG;AAEA,SAAO,gBAAgB,GAAG,KAAK;AACjC,CAAC;AAED,IAAO,wBAAQ;;;AEnMf;AAAA;AAAA;AAAAC;AAAA,SAAS,qBAAqB;AAMvB,IAAM,aAAN,cAAyB,cAAc;AAAA,EAN9C,OAM8C;AAAA;AAAA;AAAA,EAK5C,YAAY,OAA2BC,MAAU;AAC/C,UAAM,OAAOA,IAAG;AAChB,SAAK,MAAMA;AAGX,SAAK,SAAS,MAAM,GAAG,SAAS;AAGhC,SAAK,WAAW;AAAA,MACd,IAAI,KAAK;AAAA,MACT,cAAc,CAAC;AAAA,MACf,iBAAiB;AAAA,MACjB,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,MAAM;AAAA,MACN,UAAU,CAAC;AAAA,MACX,UAAU;AAAA,QACR,kBAAkB;AAAA,QAClB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,aAAa;AAAA,UACX,EAAE,MAAM,gCAAgC;AAAA,UACxC,EAAE,MAAM,gCAAgC;AAAA,UACxC,EAAE,MAAM,2BAA2B;AAAA,QACrC;AAAA,QACA,aAAa;AAAA,UACX;AAAA,YACE,MAAM;AAAA,YACN,UAAU;AAAA,YACV,YAAY;AAAA,UACd;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,UAAU;AAAA,YACV,YAAY;AAAA,UACd;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,UAAU;AAAA,YACV,YAAY;AAAA,UACd;AAAA,QACF;AAAA,QACA,mBAAmB;AAAA,UACjB,SAAS;AAAA,UACT,WAAW;AAAA,UACX,aAAa;AAAA;AAAA,UACb,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,WAAW;AAAA,QACb;AAAA,MACF;AAAA,MACA,SAAS;AAAA,QACP,mBAAmB;AAAA,QACnB,kBAAkB;AAAA,QAClB,mBAAmB;AAAA,QACnB,kBAAkB;AAAA,QAClB,eAAc,oBAAI,KAAK,GAAE,YAAY;AAAA,QACrC,iBAAiB;AAAA,MACnB;AAAA,IACF;AAGA,SAAK,oBAAoB;AAAA,EAC3B;AAAA,EAEA,MAAM,MAAM,SAAqC;AAC/C,UAAMC,OAAM,IAAI,IAAI,QAAQ,GAAG;AAG/B,QAAI,QAAQ,QAAQ,IAAI,SAAS,MAAM,aAAa;AAClD,aAAO,KAAK,gBAAgB,OAAO;AAAA,IACrC;AAGA,YAAQA,KAAI,UAAU;AAAA,MACpB,KAAK;AACH,eAAO,KAAK,WAAW,OAAO;AAAA,MAChC,KAAK;AACH,eAAO,KAAK,WAAW,OAAO;AAAA,MAChC,KAAK;AACH,eAAO,KAAK,YAAY,OAAO;AAAA,MACjC,KAAK;AACH,eAAO,KAAK,WAAW;AAAA,MACzB,KAAK;AACH,eAAO,KAAK,eAAe,OAAO;AAAA,MACpC,KAAK;AACH,eAAO,KAAK,eAAe,OAAO;AAAA,MACpC,KAAK;AACH,eAAO,KAAK,iBAAiB;AAAA,MAC/B,KAAK;AACH,eAAO,KAAK,cAAc;AAAA,MAC5B;AACE,eAAO,IAAI,SAAS,aAAa,EAAE,QAAQ,IAAI,CAAC;AAAA,IACpD;AAAA,EACF;AAAA,EAEA,MAAc,gBAAgB,SAAqC;AACjE,UAAMA,OAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,SAASA,KAAI,aAAa,IAAI,QAAQ;AAC5C,UAAM,WAAWA,KAAI,aAAa,IAAI,UAAU,KAAK;AAErD,QAAI,CAAC,QAAQ;AACX,aAAO,IAAI,SAAS,4BAA4B,EAAE,QAAQ,IAAI,CAAC;AAAA,IACjE;AAGA,UAAM,qBAAqB,KAAK,sBAAsB;AACtD,QAAI,mBAAmB,UAAU,KAAK,SAAS,iBAAiB;AAC9D,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,eAAe,CAAC,GAAG;AAAA,QAC7D,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAChD,CAAC;AAAA,IACH;AAGA,UAAM,OAAO,IAAI,cAAc;AAC/B,UAAM,CAAC,QAAQ,MAAM,IAAI,OAAO,OAAO,IAAI;AAG3C,UAAM,WAA0B;AAAA,MAC9B;AAAA,MACA;AAAA,MACA,WAAU,oBAAI,KAAK,GAAE,YAAY;AAAA,IACnC;AACA,WAAO,oBAAoB,QAAQ;AAGnC,SAAK,IAAI,gBAAgB,QAAQ,CAAC,MAAM,CAAC;AAGzC,UAAM,cAA2B;AAAA,MAC/B,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,UAAU,SAAS;AAAA,MACnB,cAAc;AAAA,MACd,cAAc,KAAK,SAAS,SAAS;AAAA,MACrC,iBAAiB;AAAA,IACnB;AAEA,SAAK,SAAS,aAAa,KAAK,WAAW;AAG3C,SAAK,cAAc,MAAM;AACzB,UAAM,KAAK,aAAa;AACxB,UAAM,KAAK,oBAAoB;AAG/B,UAAM,KAAK,cAAc,sBAAsB;AAAA,MAC7C;AAAA,MACA;AAAA,MACA,mBAAmB,KAAK,SAAS,aAAa;AAAA,MAC9C,UAAU,KAAK,SAAS;AAAA,IAC1B,CAAC;AAGD,WAAO,KAAK,KAAK,UAAU;AAAA,MACzB,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,MACf;AAAA,IACF,CAAC,CAAC;AAGF,SAAK,UAAU;AAAA,MACb,MAAM;AAAA,MACN;AAAA,IACF,GAAG,MAAM;AAET,WAAO,IAAI,SAAS,MAAM,EAAE,QAAQ,KAAK,WAAW,OAAO,CAAC;AAAA,EAC9D;AAAA,EAEA,MAAc,WAAW,SAAqC;AAC5D,QAAI;AACF,YAAM,EAAE,WAAW,SAAS,kBAAkB,GAAG,WAAW,CAAC,EAAE,IAAI,MAAM,QAAQ,KAAK;AAOtF,WAAK,SAAS,OAAO;AACrB,WAAK,SAAS,kBAAkB;AAChC,WAAK,SAAS,aAAY,oBAAI,KAAK,GAAE,YAAY;AACjD,WAAK,SAAS,WAAW,YAAY,CAAC;AAGtC,YAAM,KAAK,aAAa;AACxB,YAAM,KAAK,oBAAoB;AAE/B,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QACjC,SAAS;AAAA,QACT,QAAQ,KAAK;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,QACA,WAAW,KAAK,SAAS;AAAA,MAC3B,CAAC,GAAG;AAAA,QACF,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAChD,CAAC;AAAA,IACH,SAASC,SAAO;AACd,MAAAC,KAAI,MAAM,cAAcD,SAAgB,QAAW,EAAE,WAAW,cAAc,CAAC;AAC/E,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QACjC,OAAO;AAAA,MACT,CAAC,GAAG;AAAA,QACF,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAChD,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEA,MAAc,WAAW,SAAqC;AAC5D,QAAI;AACF,YAAM,EAAE,QAAQ,UAAU,SAAS,IAAI,MAAM,QAAQ,KAAK;AAO1D,YAAM,sBAAsB,KAAK,SAAS,aAAa,KAAK,OAAK,EAAE,OAAO,MAAM;AAChF,UAAI,qBAAqB;AACvB,eAAO,IAAI,SAAS,KAAK,UAAU;AAAA,UACjC,SAAS;AAAA,UACT,UAAU,KAAK;AAAA,UACf,SAAS;AAAA,QACX,CAAC,GAAG;AAAA,UACF,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,QAChD,CAAC;AAAA,MACH;AAEA,YAAM,qBAAqB,KAAK,sBAAsB;AACtD,UAAI,mBAAmB,UAAU,KAAK,SAAS,iBAAiB;AAC9D,eAAO,IAAI,SAAS,KAAK,UAAU;AAAA,UACjC,OAAO;AAAA,QACT,CAAC,GAAG;AAAA,UACF,QAAQ;AAAA,UACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,QAChD,CAAC;AAAA,MACH;AAGA,UAAI,YAAY,KAAK,SAAS,aAAa,WAAW,GAAG;AACvD,aAAK,SAAS,OAAO;AAAA,MACvB;AAEA,YAAM,KAAK,aAAa;AAExB,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QACjC,SAAS;AAAA,QACT,UAAU,KAAK;AAAA,QACf,cAAc,SAAS,KAAK,MAAM,qBAAqB,MAAM,aAAa,mBAAmB,QAAQ,CAAC;AAAA,MACxG,CAAC,GAAG;AAAA,QACF,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAChD,CAAC;AAAA,IACH,SAASA,SAAO;AACd,MAAAC,KAAI,MAAM,cAAcD,SAAgB,QAAW,EAAE,WAAW,cAAc,CAAC;AAC/E,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QACjC,OAAO;AAAA,MACT,CAAC,GAAG;AAAA,QACF,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAChD,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEA,MAAc,YAAY,SAAqC;AAC7D,QAAI;AACF,YAAM,EAAE,OAAO,IAAI,MAAM,QAAQ,KAAK;AACtC,YAAM,KAAK,uBAAuB,MAAM;AAExC,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,KAAK,CAAC,CAAC;AAAA,IACvD,SAASA,SAAO;AACd,MAAAC,KAAI,MAAM,eAAeD,SAAgB,QAAW,EAAE,WAAW,cAAc,CAAC;AAChF,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QACjC,OAAO;AAAA,MACT,CAAC,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,IACrB;AAAA,EACF;AAAA,EAEA,MAAc,aAAa,SAAqC;AAC9D,QAAI;AACF,YAAM,EAAE,MAAM,IAAI,OAAO,IAAI,MAAM,QAAQ,KAAK;AAOhD,YAAM,aAAa,KAAK,IAAI,cAAc,EAAE;AAC5C,iBAAW,QAAQ,CAAC,OAAO;AACzB,YAAI;AACF,aAAG,KAAK,KAAK,UAAU,EAAE,MAAM,UAAU,MAAM,OAAO,CAAC,CAAC;AAAA,QAC1D,SAAS,GAAG;AACV,UAAAC,KAAI,MAAM,wBAAwB,GAAY,QAAW,EAAE,WAAW,cAAc,CAAC;AAAA,QACvF;AAAA,MACF,CAAC;AAED,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,KAAK,CAAC,CAAC;AAAA,IACvD,SAASD,SAAO;AACd,MAAAC,KAAI,MAAM,gBAAgBD,SAAgB,QAAW,EAAE,WAAW,cAAc,CAAC;AACjF,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QACjC,OAAO;AAAA,MACT,CAAC,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,IACrB;AAAA,EACF;AAAA,EAEA,MAAc,aAAgC;AAC5C,UAAM,WAAW,MAAM,KAAK,IAAI,QAAQ,IAAI,UAAU,KAAK,KAAK;AAChE,WAAO,IAAI,SAAS,KAAK,UAAU,QAAQ,CAAC;AAAA,EAC9C;AAAA;AAAA,EAGA,MAAM,iBAAiB,IAAe,SAA+B;AACnE,QAAI;AAEF,YAAM,WAAW,GAAG,sBAAsB;AAC1C,UAAI,CAAC,UAAU;AACb,WAAG,MAAM,MAAM,qBAAqB;AACpC;AAAA,MACF;AAEA,YAAM,MAAM,OAAO,YAAY,WAAW,KAAK,MAAM,OAAO,IAAI;AAChE,UAAI,CAAC,IAAK;AAEV,YAAM,KAAK,uBAAuB,IAAI,SAAS,QAAQ,GAAG;AAAA,IAC5D,SAASA,SAAO;AACd,MAAAC,KAAI,MAAM,2BAA2BD,SAAgB,QAAW,EAAE,WAAW,cAAc,CAAC;AAC5F,WAAK,cAAc,OAAO;AAC1B,YAAM,KAAK,cAAc,mBAAmB,EAAE,OAAO,OAAOA,OAAK,EAAE,CAAC;AACpE,SAAG,KAAK,KAAK,UAAU;AAAA,QACrB,MAAM;AAAA,QACN,SAAS;AAAA,MACX,CAAC,CAAC;AAAA,IACJ;AAAA,EACF;AAAA,EAEA,MAAM,eAAe,IAAe,MAAc,QAAgB,UAAmB;AACnF,UAAM,WAAW,GAAG,sBAAsB;AAC1C,QAAI,UAAU;AACZ,YAAM,KAAK,uBAAuB,SAAS,MAAM;AAAA,IACnD;AAAA,EACF;AAAA,EAEA,MAAM,eAAe,IAAeA,SAAgB;AAClD,IAAAC,KAAI,MAAM,mBAAmBD,SAAgB,QAAW,EAAE,WAAW,cAAc,CAAC;AACpF,SAAK,cAAc,OAAO;AAC1B,UAAM,KAAK,cAAc,8BAA8B,EAAE,OAAO,OAAOA,OAAK,EAAE,CAAC;AAE/E,UAAM,WAAW,GAAG,sBAAsB;AAC1C,QAAI,UAAU;AACZ,YAAM,KAAK,uBAAuB,SAAS,MAAM;AAAA,IACnD;AAAA,EACF;AAAA,EAEA,MAAc,uBAAuB,IAAe,QAAgB,SAAc;AAChF,UAAM,EAAE,MAAM,KAAK,IAAI;AAGvB,SAAK,cAAc,SAAS;AAE5B,YAAQ,MAAM;AAAA,MACZ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAEH,YAAI,KAAK,IAAI;AACX,eAAK,kBAAkB,KAAK,IAAI;AAAA,YAC9B;AAAA,YACA,MAAM;AAAA,YACN,MAAM,KAAK,UAAU;AAAA,UACvB,CAAC;AAAA,QACH;AACA;AAAA,MAEF,KAAK;AACH,cAAM,KAAK,wBAAwB,QAAQ,EAAE,cAAc,KAAK,QAAQ,CAAC;AACzE;AAAA,MAEF,KAAK;AACH,cAAM,KAAK,wBAAwB,QAAQ,EAAE,cAAc,KAAK,QAAQ,CAAC;AACzE;AAAA,MAEF,KAAK;AACH,cAAM,KAAK,wBAAwB,QAAQ,EAAE,iBAAiB,KAAK,QAAQ,CAAC;AAC5E,aAAK,UAAU;AAAA,UACb,MAAM;AAAA,UACN;AAAA,UACA,WAAW,KAAK;AAAA,QAClB,GAAG,MAAM;AACT;AAAA,MAEF,KAAK;AAEH,aAAK,UAAU;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS,KAAK;AAAA,UACd,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QACpC,CAAC;AACD;AAAA,MAEF,KAAK;AAEH,YAAI,KAAK,SAAS,SAAS,kBAAkB,KAAK,SAAS,SAAS,mBAAmB,SAAS;AAC9F,eAAK,UAAU;AAAA,YACb,MAAM;AAAA,YACN,aAAa;AAAA,YACb,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,YAClC,UAAU,KAAK,SAAS,SAAS;AAAA,UACnC,CAAC;AACD,gBAAM,KAAK,cAAc,qBAAqB,EAAE,OAAO,CAAC;AAAA,QAC1D;AACA;AAAA,MAEF,KAAK;AAEH,aAAK,UAAU;AAAA,UACb,MAAM;AAAA,UACN,WAAW;AAAA,UACX,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QACpC,CAAC;AACD,cAAM,KAAK,cAAc,qBAAqB,EAAE,OAAO,CAAC;AACxD;AAAA,MAEF,KAAK;AAEH,cAAM,KAAK,qBAAqB,QAAQ,IAAI;AAC5C;AAAA,MAEF,KAAK;AAEH,cAAM,KAAK,oBAAoB,QAAQ,IAAI;AAC3C;AAAA,MAEF,KAAK;AACH,WAAG,KAAK,KAAK,UAAU,EAAE,MAAM,OAAO,CAAC,CAAC;AACxC;AAAA,MAEF;AACE,QAAAC,KAAI,KAAK,wBAAwB,EAAE,WAAW,cAAc,GAAG,EAAE,KAAK,CAAC;AAAA,IAC3E;AAAA,EACF;AAAA,EAEA,MAAc,wBAAwB,QAAgB,SAA+B;AACnF,UAAM,cAAc,KAAK,SAAS,aAAa,KAAK,OAAK,EAAE,OAAO,MAAM;AACxE,QAAI,aAAa;AACf,aAAO,OAAO,aAAa,OAAO;AAClC,YAAM,KAAK,aAAa;AAExB,WAAK,UAAU;AAAA,QACb,MAAM;AAAA,QACN;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEA,MAAc,uBAAuB,QAAgB;AACnD,UAAM,mBAAmB,KAAK,SAAS,aAAa,UAAU,OAAK,EAAE,OAAO,MAAM;AAClF,QAAI,qBAAqB,GAAI;AAG7B,SAAK,SAAS,aAAa,OAAO,kBAAkB,CAAC;AAGrD,SAAK,cAAc,OAAO;AAC1B,UAAM,KAAK,aAAa;AACxB,UAAM,KAAK,oBAAoB;AAG/B,UAAM,KAAK,cAAc,oBAAoB;AAAA,MAC3C;AAAA,MACA,uBAAuB,KAAK,SAAS,aAAa;AAAA,MAClD,iBAAiB,KAAK,SAAS,QAAQ;AAAA,IACzC,CAAC;AAGD,SAAK,UAAU;AAAA,MACb,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AAGD,UAAM,qBAAqB,KAAK,sBAAsB;AACtD,QAAI,mBAAmB,WAAW,GAAG;AAEnC,YAAM,cAAc,KAAK,IAAI,IAAI;AACjC,YAAM,KAAK,IAAI,QAAQ,SAAS,WAAW;AAAA,IAC7C;AAAA,EACF;AAAA;AAAA,EAGA,MAAM,QAAQ;AACZ,UAAM,qBAAqB,KAAK,sBAAsB;AACtD,QAAI,mBAAmB,WAAW,GAAG;AACnC,YAAM,KAAK,IAAI,QAAQ,UAAU;AACjC,YAAM,KAAK,oBAAoB,EAAE,aAAa,KAAK,CAAC;AAAA,IACtD;AAAA,EACF;AAAA,EAEA,MAAc,eAAe,SAAqC;AAChE,QAAI,QAAQ,WAAW,OAAO;AAC5B,aAAO,IAAI,SAAS,KAAK,UAAU,KAAK,SAAS,QAAQ,GAAG;AAAA,QAC1D,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAChD,CAAC;AAAA,IACH;AAEA,QAAI,QAAQ,WAAW,SAAS;AAC9B,UAAI;AACF,cAAM,UAAU,MAAM,QAAQ,KAAK;AACnC,eAAO,OAAO,KAAK,SAAS,UAAU,OAAO;AAC7C,cAAM,KAAK,aAAa;AACxB,cAAM,KAAK,oBAAoB;AAE/B,aAAK,UAAU;AAAA,UACb,MAAM;AAAA,UACN,UAAU,KAAK,SAAS;AAAA,QAC1B,CAAC;AAED,eAAO,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,KAAK,CAAC,GAAG;AAAA,UACrD,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,QAChD,CAAC;AAAA,MACH,SAASD,SAAO;AACd,eAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,kBAAkB,CAAC,GAAG;AAAA,UAChE,QAAQ;AAAA,UACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,QAChD,CAAC;AAAA,MACH;AAAA,IACF;AAEA,WAAO,IAAI,SAAS,sBAAsB,EAAE,QAAQ,IAAI,CAAC;AAAA,EAC3D;AAAA,EAEA,MAAc,eAAe,SAAqC;AAChE,QAAI,QAAQ,WAAW,WAAW,QAAQ,WAAW,QAAQ;AAC3D,aAAO,IAAI,SAAS,sBAAsB,EAAE,QAAQ,IAAI,CAAC;AAAA,IAC3D;AAEA,QAAI;AACF,YAAM,WAAW,MAAM,QAAQ,KAAK;AAEpC,UAAI,CAAC,YAAY,OAAO,aAAa,UAAU;AAC7C,eAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,8BAA8B,CAAC,GAAG;AAAA,UAC5E,QAAQ;AAAA,UACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,QAChD,CAAC;AAAA,MACH;AAEA,WAAK,SAAS,WAAW;AAAA,QACvB,GAAI,KAAK,SAAS,YAAY,CAAC;AAAA,QAC/B,GAAG;AAAA,MACL;AAEA,YAAM,KAAK,aAAa;AACxB,YAAM,KAAK,oBAAoB;AAE/B,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QACjC,SAAS;AAAA,QACT,UAAU,KAAK,SAAS;AAAA,MAC1B,CAAC,GAAG;AAAA,QACF,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAChD,CAAC;AAAA,IACH,SAASA,SAAO;AACd,MAAAC,KAAI,MAAM,yBAAyBD,SAAgB,QAAW,EAAE,WAAW,cAAc,CAAC;AAC1F,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,4BAA4B,CAAC,GAAG;AAAA,QAC1E,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAChD,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEA,MAAc,oBAAoB,SAAqC;AACrE,QAAI,CAAC,KAAK,KAAK,OAAO;AACpB;AAAA,IACF;AAEA,QAAI;AACF,UAAI,SAAS,aAAa;AACxB,cAAM,iBAAiB,KAAK,IAAI,OAAO,KAAK,MAAM;AAClD;AAAA,MACF;AAEA,YAAM,cAAc,KAAK,sBAAsB,EAAE;AACjD,YAAM,WAA2B;AAAA,QAC/B,QAAQ,KAAK;AAAA,QACb,UAAU,KAAK,SAAS,SAAS,UAAU,UAAU;AAAA,QACrD,qBAAqB;AAAA,QACrB,iBAAiB,KAAK,SAAS;AAAA,QAC/B,QAAQ,cAAc,IAAI,WAAW;AAAA,QACrC,WAAW,KAAK,SAAS;AAAA,QACzB,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,UAAU,KAAK,SAAS,YAAY,CAAC;AAAA,MACvC;AAEA,YAAM,iBAAiB,KAAK,IAAI,OAAO,QAAQ;AAAA,IACjD,SAASA,SAAO;AACd,MAAAC,KAAI,KAAK,iCAAiC,QAAW;AAAA,QACnD,WAAW;AAAA,QACX,OAAOD,mBAAiB,QAAQA,QAAM,UAAU,OAAOA,OAAK;AAAA,MAC9D,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEQ,UAAU,SAAc,eAAwB;AACtD,UAAM,OAAO,KAAK,UAAU,OAAO;AAEnC,SAAK,IAAI,cAAc,EAAE,QAAQ,QAAM;AACrC,UAAI;AACF,cAAM,WAAW,GAAG,sBAAsB;AAC1C,YAAI,YAAY,SAAS,WAAW,eAAe;AACjD,aAAG,KAAK,IAAI;AAAA,QACd;AAAA,MACF,SAASA,SAAO;AACd,QAAAC,KAAI,MAAM,mBAAmBD,SAAgB,QAAW,EAAE,WAAW,cAAc,CAAC;AAAA,MACtF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEQ,kBAAkB,QAAgB,SAAc;AACtD,UAAM,OAAO,KAAK,UAAU,OAAO;AACnC,UAAM,aAAa,KAAK,IAAI,cAAc,MAAM;AAEhD,eAAW,QAAQ,QAAM;AACvB,UAAI;AACF,WAAG,KAAK,IAAI;AAAA,MACd,SAASA,SAAO;AACd,QAAAC,KAAI,MAAM,sBAAsBD,SAAgB,QAAW,EAAE,WAAW,eAAe,OAAO,CAAC;AAAA,MACjG;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,MAAc,mBAAsC;AAClD,UAAM,aAAa;AAAA,MACjB,GAAG,KAAK,SAAS,SAAS,eAAe,CAAC;AAAA,MAC1C,GAAG,KAAK,SAAS,SAAS,eAAe,CAAC;AAAA,IAC5C;AAEA,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC;AAAA,MACA,KAAK;AAAA;AAAA,IACP,CAAC,GAAG;AAAA,MACF,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AAAA,EAEA,MAAc,gBAAmC;AAE/C,SAAK,cAAc,SAAS;AAE5B,UAAM,qBAAqB,KAAK,sBAAsB;AAEtD,UAAM,cAAc;AAAA,MAClB,QAAQ,KAAK,SAAS;AAAA,MACtB,qBAAqB,mBAAmB;AAAA,MACxC,SAAS,KAAK,SAAS;AAAA,MACvB,cAAc;AAAA,QACZ,MAAM,KAAK,SAAS;AAAA,QACpB,iBAAiB,KAAK,SAAS;AAAA,QAC/B,WAAW,KAAK,SAAS;AAAA,MAC3B;AAAA,MACA,cAAc,mBAAmB,IAAI,QAAM;AAAA,QACzC,IAAI,EAAE;AAAA,QACN,MAAM,EAAE;AAAA,QACR,UAAU,EAAE;AAAA,QACZ,cAAc,EAAE;AAAA,QAChB,cAAc,EAAE;AAAA,QAChB,iBAAiB,EAAE;AAAA,MACrB,EAAE;AAAA,IACJ;AAEA,WAAO,IAAI,SAAS,KAAK,UAAU,WAAW,GAAG;AAAA,MAC/C,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AAAA,EAEQ,wBAAuC;AAC7C,UAAM,mBAAmB,oBAAI,IAAY;AAEzC,SAAK,IAAI,cAAc,EAAE,QAAQ,QAAM;AACrC,YAAM,WAAW,GAAG,sBAAsB;AAC1C,UAAI,UAAU;AACZ,yBAAiB,IAAI,SAAS,MAAM;AAAA,MACtC;AAAA,IACF,CAAC;AAED,WAAO,KAAK,SAAS,aAAa,OAAO,OAAK,iBAAiB,IAAI,EAAE,EAAE,CAAC;AAAA,EAC1E;AAAA,EAEA,MAAc,eAAe;AAC3B,UAAM,KAAK,IAAI,QAAQ,IAAI,YAAY,KAAK,QAAQ;AAAA,EACtD;AAAA,EAEQ,cAAc,MAA8C,MAAY;AAC9E,UAAM,OAAM,oBAAI,KAAK,GAAE,YAAY;AACnC,SAAK,SAAS,QAAQ,eAAe;AAErC,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,aAAK,SAAS,QAAQ;AACtB,cAAM,eAAe,KAAK,SAAS,aAAa;AAChD,YAAI,eAAe,KAAK,SAAS,QAAQ,kBAAkB;AACzD,eAAK,SAAS,QAAQ,mBAAmB;AAAA,QAC3C;AACA;AAAA,MACF,KAAK;AACH,aAAK,SAAS,QAAQ;AACtB;AAAA,MACF,KAAK;AACH,aAAK,SAAS,QAAQ;AACtB;AAAA,IACJ;AAGA,UAAM,cAAc,IAAI,KAAK,KAAK,SAAS,SAAS,EAAE,QAAQ;AAC9D,UAAM,cAAc,IAAI,KAAK,GAAG,EAAE,QAAQ;AAC1C,SAAK,SAAS,QAAQ,kBAAkB,KAAK,OAAO,cAAc,eAAe,GAAI;AAAA,EACvF;AAAA,EAEA,MAAc,cAAc,OAAe,MAAW;AACpD,QAAI;AAEF,UAAI,KAAK,KAAK,WAAW;AACvB,cAAM,KAAK,IAAI,UAAU,eAAe;AAAA,UACtC,OAAO,CAAC,KAAK,SAAS,IAAI,KAAK;AAAA,UAC/B,SAAS;AAAA,YACP,KAAK,SAAS,aAAa;AAAA,YAC3B,KAAK,SAAS,QAAQ;AAAA,YACtB,KAAK,SAAS,QAAQ;AAAA,YACtB,KAAK,SAAS,QAAQ;AAAA,UACxB;AAAA,UACA,SAAS,CAAC,KAAK,SAAS,EAAE;AAAA,QAC5B,CAAC;AAAA,MACH;AAAA,IACF,SAASA,SAAO;AACd,cAAQ,MAAM,oBAAoBA,OAAK;AAAA,IACzC;AAAA,EACF;AAAA,EAEA,MAAc,qBAAqB,QAAgB,MAAW;AAC5D,QAAI;AACF,YAAM,EAAE,UAAU,MAAM,UAAAE,UAAS,IAAI;AAGrC,YAAM,oBAAoB;AAAA,QACxB,QAAQ,KAAK,SAAS;AAAA,QACtB;AAAA,QACA;AAAA,QACA;AAAA,QACA,UAAAA;AAAA,QACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,cAAc,KAAK,SAAS,aAAa,IAAI,QAAM;AAAA,UACjD,IAAI,EAAE;AAAA,UACN,MAAM,EAAE;AAAA,QACV,EAAE;AAAA,MACJ;AAGA,UAAI,KAAK,KAAK,OAAO;AACnB,cAAM,eAAe,aAAa,KAAK,SAAS,EAAE,IAAI,QAAQ;AAC9D,cAAM,KAAK,IAAI,MAAM,IAAI,cAAc,KAAK,UAAU,iBAAiB,GAAG;AAAA,UACxE,eAAe,QAAQ;AAAA;AAAA,QACzB,CAAC;AAAA,MACH;AAGA,WAAK,UAAU;AAAA,QACb,MAAM;AAAA,QACN;AAAA,QACA;AAAA,QACA,UAAAA;AAAA,QACA,YAAY;AAAA,QACZ,WAAW,kBAAkB;AAAA,MAC/B,GAAG,MAAM;AAET,YAAM,KAAK,cAAc,yBAAyB;AAAA,QAChD;AAAA,QACA;AAAA,QACA;AAAA,QACA,UAAAA;AAAA,MACF,CAAC;AAAA,IAEH,SAASF,SAAO;AACd,cAAQ,MAAM,mCAAmCA,OAAK;AAAA,IACxD;AAAA,EACF;AAAA,EAEA,MAAc,oBAAoB,QAAgB,MAAW;AAC3D,QAAI;AACF,YAAM,EAAE,aAAa,UAAU,IAAI;AAGnC,UAAI,KAAK,KAAK,OAAO;AACnB,cAAM,aAAa,WAAW,KAAK,MAAM,IAAI,MAAM,IAAI,KAAK,IAAI,CAAC;AACjE,cAAM,gBAAgB;AAAA,UACpB,QAAQ,KAAK,SAAS;AAAA,UACtB;AAAA,UACA,WAAW,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,UAC/C,SAAS;AAAA,UACT,kBAAkB,KAAK,SAAS,aAAa;AAAA,QAC/C;AAEA,cAAM,KAAK,IAAI,MAAM,IAAI,YAAY,KAAK,UAAU,aAAa,GAAG;AAAA,UAClE,eAAe;AAAA;AAAA,QACjB,CAAC;AAAA,MACH;AAGA,YAAM,KAAK,qBAAqB,QAAQ,WAAW;AAGnD,UAAI,YAAY,YAAY,UAAU,YAAY,YAAY,QAAQ;AACpE,aAAK,UAAU;AAAA,UACb,MAAM;AAAA,UACN;AAAA,UACA,SAAS,YAAY;AAAA,UACrB,QAAQ,KAAK,qBAAqB,WAAW;AAAA,UAC7C,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QACpC,GAAG,MAAM;AAAA,MACX;AAGA,YAAM,cAAc,KAAK,SAAS,aAAa,KAAK,OAAK,EAAE,OAAO,MAAM;AACxE,UAAI,aAAa;AACf,QAAC,YAAoB,oBAAoB,YAAY;AACrD,QAAC,YAAoB,qBAAoB,oBAAI,KAAK,GAAE,YAAY;AAChE,cAAM,KAAK,aAAa;AAAA,MAC1B;AAAA,IAEF,SAASA,SAAO;AACd,cAAQ,MAAM,kCAAkCA,OAAK;AAAA,IACvD;AAAA,EACF;AAAA,EAEA,MAAc,qBAAqB,QAAgB,aAAkB;AACnE,QAAI;AACF,UAAI,KAAK,KAAK,WAAW;AACvB,cAAM,KAAK,IAAI,UAAU,eAAe;AAAA,UACtC,OAAO,CAAC,KAAK,SAAS,IAAI,QAAQ,gBAAgB;AAAA,UAClD,SAAS;AAAA,YACP,YAAY,OAAO,OAAO,kBAAkB;AAAA,YAC5C,YAAY,OAAO,OAAO,kBAAkB;AAAA,YAC5C,YAAY,SAAS,OAAO,iBAAiB;AAAA,YAC7C,YAAY,OAAO,OAAO,UAAU;AAAA,YACpC,KAAK,gBAAgB,YAAY,OAAO;AAAA,UAC1C;AAAA,UACA,SAAS,CAAC,KAAK,SAAS,IAAI,MAAM;AAAA,QACpC,CAAC;AAAA,MACH;AAAA,IACF,SAASA,SAAO;AACd,cAAQ,MAAM,4BAA4BA,OAAK;AAAA,IACjD;AAAA,EACF;AAAA,EAEQ,gBAAgB,SAAyB;AAC/C,UAAM,SAAiC,EAAE,aAAa,KAAK,QAAQ,IAAI,QAAQ,IAAI,QAAQ,GAAG;AAC9F,WAAO,OAAO,OAAO,KAAK;AAAA,EAC5B;AAAA,EAEQ,qBAAqB,aAA4B;AACvD,UAAM,SAAS,CAAC;AAEhB,QAAI,YAAY,OAAO,OAAO,iBAAiB,MAAM;AACnD,aAAO,KAAK,mBAAmB;AAAA,IACjC;AAEA,QAAI,YAAY,OAAO,OAAO,iBAAiB,MAAM;AACnD,aAAO,KAAK,mBAAmB;AAAA,IACjC;AAEA,QAAI,YAAY,SAAS,OAAO,gBAAgB,KAAK;AACnD,aAAO,KAAK,cAAc;AAAA,IAC5B;AAEA,QAAI,YAAY,OAAO,OAAO,SAAS,IAAI;AACzC,aAAO,KAAK,cAAc;AAAA,IAC5B;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAc,sBAAsB;AAClC,UAAM,SAAS,MAAM,KAAK,IAAI,QAAQ,IAAc,UAAU;AAC9D,QAAI,QAAQ;AACV,WAAK,WAAW;AAGhB,YAAM,qBAAqB,KAAK,sBAAsB;AACtD,WAAK,SAAS,eAAe;AAE7B,UAAI,mBAAmB,WAAW,OAAO,aAAa,QAAQ;AAC5D,cAAM,KAAK,aAAa;AAAA,MAC1B;AAAA,IACF;AAAA,EACF;AACF;;;ACt4BA;AAAA;AAAA;AAAAG;AAAA,SAAS,iBAAAC,sBAAqB;;;ACA9B;AAAA;AAAA;AAAAC;AAUA,SAAS,SAAiB;AACxB,UAAO,oBAAI,KAAK,GAAE,YAAY;AAChC;AAFS;AAIT,eAAsB,iBACpBC,MACA,QACA,QACA,UAAiC,CAAC,GACnB;AACf,QAAM,UAAU;AAAA,IACd;AAAA,IACA;AAAA,IACA,WAAW,QAAQ,aAAa;AAAA,IAChC,YAAY,QAAQ,cAAc;AAAA,IAClC,UAAU,QAAQ,YAAY;AAAA,IAC9B,WAAW,OAAO;AAAA,EACpB;AAEA,QAAM,SAAc,MAAMA,KAAI,GAAG;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOF,EACG,KAAK,QAAQ,QAAQ,aAAa,MAAM,QAAQ,cAAc,MAAM,QAAQ,WAAW,QAAQ,WAAW,MAAM,EAChH,IAAI;AAEP,MAAI,OAAO,YAAY,GAAG;AACxB,UAAMA,KAAI,GAAG;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASF,EACG;AAAA,MACC;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,MACR,QAAQ,cAAc;AAAA,MACtB,QAAQ,aAAa;AAAA,MACrB,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV,EACC,IAAI;AAAA,EACT;AACF;AAlDsB;AAoDtB,eAAsB,gBAAgBA,MAAU,QAA+B;AAC7E,QAAM,MAAM,OAAO;AACnB,QAAM,SAAc,MAAMA,KAAI,GAAG;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA,EAIF,EACG,KAAK,KAAK,KAAK,MAAM,EACrB,IAAI;AAEP,MAAI,OAAO,YAAY,GAAG;AACxB,UAAMA,KAAI,GAAG;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASF,EACG,KAAK,QAAQ,KAAK,KAAK,GAAG,EAC1B,IAAI;AAAA,EACT;AACF;AA1BsB;AA4BtB,eAAsB,wBAAwBA,MAAU,eAAwC;AAC9F,QAAM,MAAM,OAAO;AACnB,QAAM,aAAa,IAAI,KAAK,KAAK,IAAI,IAAI,gBAAgB,KAAK,GAAI,EAAE,YAAY;AAChF,QAAM,SAAc,MAAMA,KAAI,GAAG;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQF,EACG,KAAK,KAAK,UAAU,EACpB,IAAI;AACP,SAAO,OAAO,WAAW;AAC3B;AAhBsB;;;ADjFtB,IAAM,aAAa;AACnB,IAAM,qBAAqB;AAC3B,IAAMC,kBAAiB;AACvB,IAAM,wBAAwB,KAAK,KAAK;AAEjC,IAAM,eAAN,cAA2BC,eAAc;AAAA,EAlBhD,OAkBgD;AAAA;AAAA;AAAA,EAI9C,YAAY,OAA2BC,MAAU;AAC/C,UAAM,OAAOA,IAAG;AAChB,SAAK,MAAMA;AACX,SAAK,SAAS,MAAM,GAAG,SAAS;AAAA,EAClC;AAAA,EAEA,MAAc,cAA6C;AACzD,UAAMC,UAAS,MAAM,KAAK,IAAI,QAAQ,IAAmB,UAAU;AACnE,QAAIA,SAAQ;AACV,aAAOA;AAAA,IACT;AAEA,UAAM,MAAM,MAAM,KAAK,IAAI,GAAG;AAAA,MAC5B;AAAA;AAAA,IAEF,EACG,KAAK,KAAK,MAAM,EAChB,MAAsH;AAEzH,QAAI,CAAC,KAAK;AACR,aAAO;AAAA,IACT;AAEA,UAAM,QAAuB;AAAA,MAC3B,QAAQ,KAAK;AAAA,MACb,QAAS,IAAI,UAAsC;AAAA,MACnD,YAAY,IAAI,iBAAgB,oBAAI,KAAK,GAAE,YAAY;AAAA,MACvD,YAAY,IAAI,eAAe;AAAA,MAC/B,WAAW,IAAI,sBAAsB;AAAA,IACvC;AAEA,UAAM,KAAK,IAAI,QAAQ,IAAI,YAAY,KAAK;AAC5C,UAAM,KAAK,cAAc,KAAK;AAC9B,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,UAAU,SAAqC;AACnD,UAAM,OAAO,MAAM,QAAQ,KAAoB;AAC/C,UAAM,QAAuB;AAAA,MAC3B,GAAG;AAAA,MACH,QAAQ,KAAK,UAAU,KAAK;AAAA,MAC5B,YAAY,KAAK,eAAc,oBAAI,KAAK,GAAE,YAAY;AAAA,IACxD;AAEA,UAAM,KAAK,IAAI,QAAQ,IAAI,YAAY,KAAK;AAC5C,UAAM,KAAK,cAAc,KAAK;AAC9B,UAAM,iBAAiB,KAAK,KAAK,MAAM,QAAQ,MAAM,QAAQ;AAAA,MAC3D,WAAW,MAAM;AAAA,MACjB,YAAY,MAAM;AAAA,IACpB,CAAC;AAED,WAAO,IAAI,SAAS,KAAK,UAAU,KAAK,GAAG,EAAE,QAAQ,KAAK,SAAS,EAAE,gBAAgB,mBAAmB,EAAE,CAAC;AAAA,EAC7G;AAAA,EAEA,MAAM,QAA2B;AAC/B,UAAM,UAAW,MAAM,KAAK,IAAI,QAAQ,IAAmB,UAAU,KAAO,MAAM,KAAK,YAAY;AACnG,QAAI,CAAC,SAAS;AACZ,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,OAAO,QAAQ,iBAAiB,CAAC,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,IACnG;AAEA,UAAM,UAAyB;AAAA,MAC7B,GAAG;AAAA,MACH,aAAY,oBAAI,KAAK,GAAE,YAAY;AAAA,IACrC;AAEA,UAAM,KAAK,IAAI,QAAQ,IAAI,YAAY,OAAO;AAC9C,UAAM,KAAK,cAAc,OAAO;AAChC,UAAM,gBAAgB,KAAK,KAAK,QAAQ,MAAM;AAE9C,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,KAAK,CAAC,GAAG,EAAE,QAAQ,KAAK,SAAS,EAAE,gBAAgB,mBAAmB,EAAE,CAAC;AAAA,EACzH;AAAA,EAEA,MAAM,YAA+B;AACnC,UAAM,UAAW,MAAM,KAAK,IAAI,QAAQ,IAAmB,UAAU,KAAO,MAAM,KAAK,YAAY;AACnG,QAAI,CAAC,SAAS;AACZ,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,QAAQ,UAAU,CAAC,GAAG,EAAE,QAAQ,KAAK,SAAS,EAAE,gBAAgB,mBAAmB,EAAE,CAAC;AAAA,IAC7H;AACA,WAAO,IAAI,SAAS,KAAK,UAAU,OAAO,GAAG,EAAE,QAAQ,KAAK,SAAS,EAAE,gBAAgB,mBAAmB,EAAE,CAAC;AAAA,EAC/G;AAAA,EAEA,MAAM,aAAgC;AACpC,UAAM,UAAW,MAAM,KAAK,IAAI,QAAQ,IAAmB,UAAU,KAAO,MAAM,KAAK,YAAY;AACnG,QAAI,CAAC,SAAS;AACZ,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,KAAK,CAAC,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,IACxE;AAEA,UAAM,UAAyB;AAAA,MAC7B,GAAG;AAAA,MACH,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,aAAY,oBAAI,KAAK,GAAE,YAAY;AAAA,IACrC;AAEA,UAAM,KAAK,IAAI,QAAQ,IAAI,YAAY,OAAO;AAC9C,UAAM,KAAK,cAAc,SAAS,EAAE,mBAAmB,QAAQ,UAAU,CAAC;AAC1E,UAAM,iBAAiB,KAAK,KAAK,QAAQ,QAAQ,SAAS;AAE1D,WAAO,IAAI,SAAS,KAAK,UAAU,OAAO,GAAG,EAAE,QAAQ,KAAK,SAAS,EAAE,gBAAgB,mBAAmB,EAAE,CAAC;AAAA,EAC/G;AAAA,EAEA,MAAM,QAAuB;AAC3B,UAAM,UAAU,MAAM,KAAK,IAAI,QAAQ,IAAmB,UAAU;AACpE,QAAI,CAAC,SAAS;AACZ;AAAA,IACF;AAEA,UAAM,WAAW,IAAI,KAAK,QAAQ,UAAU,EAAE,QAAQ;AACtD,QAAI,KAAK,IAAI,IAAI,WAAW,yBAAyB,QAAQ,WAAW,WAAW;AACjF,YAAM,KAAK,WAAW;AAAA,IACxB,OAAO;AACL,YAAM,KAAK,cAAc;AAAA,IAC3B;AAAA,EACF;AAAA,EAEA,MAAM,MAAM,SAAqC;AAC/C,UAAMC,OAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,YAAQA,KAAI,UAAU;AAAA,MACpB,KAAK;AACH,eAAO,KAAK,UAAU;AAAA,MACxB,KAAK;AACH,YAAI,QAAQ,WAAW,OAAQ,QAAO,IAAI,SAAS,sBAAsB,EAAE,QAAQ,IAAI,CAAC;AACxF,cAAM,KAAK,cAAc;AACzB,eAAO,KAAK,UAAU,OAAO;AAAA,MAC/B,KAAK;AACH,YAAI,QAAQ,WAAW,OAAQ,QAAO,IAAI,SAAS,sBAAsB,EAAE,QAAQ,IAAI,CAAC;AACxF,cAAM,KAAK,cAAc;AACzB,eAAO,KAAK,MAAM;AAAA,MACpB,KAAK;AACH,YAAI,QAAQ,WAAW,OAAQ,QAAO,IAAI,SAAS,sBAAsB,EAAE,QAAQ,IAAI,CAAC;AACxF,eAAO,KAAK,WAAW;AAAA,MACzB;AACE,eAAO,IAAI,SAAS,aAAa,EAAE,QAAQ,IAAI,CAAC;AAAA,IACpD;AAAA,EACF;AAAA,EAEA,MAAc,cAAc,OAAsB,UAA0C,CAAC,GAAG;AAC9F,UAAM,EAAE,QAAQ,QAAQ,UAAU,IAAI;AAEtC,QAAI,CAAC,OAAQ;AAEb,QAAI,WAAW,YAAY,WAAW,cAAc,WAAW,QAAQ;AACrE,YAAM,KAAK,IAAI,MAAM,IAAI,GAAG,kBAAkB,IAAI,MAAM,IAAI,MAAM,QAAQ,EAAE,eAAe,KAAK,GAAG,CAAC;AAAA,IACtG,OAAO;AACL,YAAM,KAAK,IAAI,MAAM,OAAO,GAAG,kBAAkB,IAAI,MAAM,EAAE;AAAA,IAC/D;AAEA,QAAI,WAAW;AACb,YAAM,KAAK,IAAI,MAAM,IAAI,GAAGJ,eAAc,IAAI,SAAS,IAAI,MAAM,IAAI,MAAM,QAAQ,EAAE,eAAe,KAAK,GAAG,CAAC;AAAA,IAC/G;AACA,QAAI,QAAQ,mBAAmB;AAC7B,YAAM,KAAK,IAAI,MAAM,OAAO,GAAGA,eAAc,IAAI,QAAQ,iBAAiB,IAAI,MAAM,EAAE;AAAA,IACxF;AAAA,EACF;AAAA,EAEA,MAAc,gBAAgB;AAC5B,UAAM,YAAY,KAAK,IAAI,IAAI;AAC/B,UAAM,KAAK,IAAI,QAAQ,SAAS,SAAS;AAAA,EAC3C;AACF;;;AEpLA;AAAA;AAAA;AAAAK;AAGA;AACA;AACAC;AACA;AAgBA,SAASC,UAAiB;AACxB,UAAO,oBAAI,KAAK,GAAE,YAAY;AAChC;AAFS,OAAAA,SAAA;AAgBT,SAAS,gBAAgBC,MAAgC;AACvD,QAAM,UAAUA,KAAI,QAAQ,OAAO,EAAE;AACrC,MAAI,CAAC,QAAQ,KAAK,GAAG;AACnB,WAAO;AAAA,EACT;AACA,QAAM,QAAQ,QAAQ,MAAM,IAAI;AAChC,QAAM,UAAU,MAAM,MAAM,KAAK;AACjC,QAAM,UAAkC,CAAC;AACzC,SAAO,MAAM,SAAS,GAAG;AACvB,UAAM,OAAO,MAAM,MAAM;AACzB,QAAI,SAAS,IAAI;AACf;AAAA,IACF;AACA,UAAM,MAAM,KAAK,QAAQ,GAAG;AAC5B,QAAI,MAAM,IAAI;AACZ,YAAM,MAAM,KAAK,MAAM,GAAG,GAAG,EAAE,KAAK;AACpC,YAAM,QAAQ,KAAK,MAAM,MAAM,CAAC,EAAE,KAAK;AACvC,cAAQ,GAAG,IAAI;AAAA,IACjB;AAAA,EACF;AACA,QAAM,OAAO,MAAM,KAAK,IAAI;AAC5B,SAAO,EAAE,SAAS,SAAS,KAAK;AAClC;AAtBS;AAwBT,SAAS,oBAAoB,OAA2B;AACtD,QAAM,cAAc,OAAO,QAAQ,MAAM,OAAO,EAC7C,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,EACvC,KAAK,IAAI;AACZ,SAAO,GAAG,MAAM,OAAO;AAAA,EAAK,WAAW;AAAA;AAAA,EAAO,MAAM,IAAI;AAC1D;AALS;AAOT,SAAS,qBAAqB,aAAqB,QAAyB;AAC1E,MAAI,YAAY,WAAW,QAAQ,GAAG;AACpC,UAAM,UAAU,UAAU;AAC1B,WAAO,GAAG,WAAW,IAAI,OAAO;AAAA,EAClC;AACA,SAAO;AACT;AANS;AAQT,SAAS,cAAiB,OAAyB;AACjD,MAAI;AACF,WAAO,KAAK,MAAM,KAAK;AAAA,EACzB,QAAQ;AACN,WAAO;AAAA,EACT;AACF;AANS;AAQT,SAAS,kBACP,gBACA,aACA,MACY;AACZ,SAAO;AAAA,IACL,SAAS;AAAA,IACT,SAAS;AAAA,MACP,cAAc;AAAA,MACd,cAAc,OAAO,WAAW;AAAA,MAChC;AAAA,MACA,gBAAgB;AAAA,IAClB;AAAA,IACA,MAAM,KAAK,UAAU,QAAQ,IAAI;AAAA,EACnC;AACF;AAfS;AAiBF,IAAM,UAAN,MAAc;AAAA,EAInB,YAAoB,OAAmCC,MAAU;AAA7C;AAAmC,eAAAA;AAHvD,SAAQ,cAAc,oBAAI,IAAgC;AAC1D,SAAQ,iBAAiB,oBAAI,IAAoC;AAAA,EAEC;AAAA,EA1GpE,OAsGqB;AAAA;AAAA;AAAA,EAMnB,MAAM,MAAM,SAAqC;AAC/C,UAAM,gBAAgB,QAAQ,QAAQ,IAAI,SAAS;AACnD,QAAI,iBAAiB,cAAc,YAAY,MAAM,aAAa;AAChE,YAAM,OAAO,IAAI,cAAc;AAC/B,YAAM,SAAS,KAAK,CAAC;AACrB,YAAM,SAAS,KAAK,CAAC;AACrB,WAAK,gBAAgB,MAAM;AAC3B,aAAO,IAAI,SAAS,MAAM,EAAE,QAAQ,KAAK,WAAW,OAAO,CAAC;AAAA,IAC9D;AAEA,QAAI,QAAQ,WAAW,QAAQ;AAC7B,YAAM,QAAQ,MAAM,QAAQ,KAAmB;AAC/C,YAAM,KAAK,QAAQ,MAAM,aAAa,MAAM,SAAS,MAAM,MAAM;AACjE,aAAO,IAAI,SAAS,MAAM,EAAE,QAAQ,IAAI,CAAC;AAAA,IAC3C;AAEA,WAAO,IAAI,SAAS,aAAa,EAAE,QAAQ,IAAI,CAAC;AAAA,EAClD;AAAA,EAEQ,gBAAgB,QAAmB,QAAiB;AAC1D,UAAM,KAAK,OAAO,WAAW;AAC7B,UAAM,QAAyB;AAAA,MAC7B;AAAA,MACA,QAAQ,UAAU;AAAA,MAClB,eAAe,oBAAI,IAAI;AAAA,MACvB,QAAQ;AAAA,IACV;AACA,SAAK,YAAY,IAAI,QAAQ,KAAK;AAElC,WAAO,OAAO;AAEd,WAAO,iBAAiB,WAAW,CAAC,UAAU;AAC5C,UAAI,OAAO,MAAM,SAAS,UAAU;AAClC;AAAA,MACF;AACA,YAAM,UAAU,MAAM;AACtB,UAAI,WAAW,MAAM,OAAO,QAAQ,IAAI;AACxC,aAAO,YAAY,GAAG;AACpB,cAAM,WAAW,MAAM,OAAO,MAAM,GAAG,QAAQ;AAC/C,cAAM,SAAS,MAAM,OAAO,MAAM,WAAW,CAAC;AAC9C,cAAM,QAAQ,gBAAgB,QAAQ;AACtC,YAAI,OAAO;AACT,eAAK,YAAY,QAAQ,OAAO,KAAK,EAAE,MAAM,CAACC,YAAU;AACtD,oBAAQ,MAAM,oCAAoCA,OAAK;AAAA,UACzD,CAAC;AAAA,QACH;AACA,mBAAW,MAAM,OAAO,QAAQ,IAAI;AAAA,MACtC;AAAA,IACF,CAAC;AAED,WAAO,iBAAiB,SAAS,MAAM;AACrC,WAAK,QAAQ,MAAM;AAAA,IACrB,CAAC;AAED,WAAO,iBAAiB,SAAS,MAAM;AACrC,WAAK,QAAQ,MAAM;AAAA,IACrB,CAAC;AAAA,EACH;AAAA,EAEA,MAAc,YAAY,QAAmB,OAAwB,OAAmB;AACtF,YAAQ,MAAM,SAAS;AAAA,MACrB,KAAK,WAAW;AACd,cAAMC,QAAO,MAAM,KAAK,uBAAuB,MAAM,OAAO;AAC5D,YAAI,CAACA,OAAM;AACT,eAAK,UAAU,QAAQ,cAAc;AACrC,iBAAO,MAAM,MAAM,cAAc;AACjC;AAAA,QACF;AACA,cAAM,SAASA,MAAK;AACpB,cAAMC,WAAU,MAAM,KAAK,eAAeD,MAAK,EAAE;AACjD,cAAM,UAAU;AAAA,UACd,MAAMC,SAAQ,QAAQD,MAAK;AAAA,UAC3B,cAAcC,SAAQ;AAAA,QACxB;AACA,aAAK,UAAU,QAAQ;AAAA,UACrB,SAAS;AAAA,UACT,SAAS;AAAA,YACP,SAAS;AAAA,YACT,cAAc;AAAA,UAChB;AAAA,UACA,MAAM;AAAA,QACR,CAAC;AACD;AAAA,MACF;AAAA,MACA,KAAK,aAAa;AAChB,cAAM,cAAc,MAAM,QAAQ;AAClC,cAAM,iBAAiB,MAAM,QAAQ;AACrC,YAAI,CAAC,eAAe,CAAC,gBAAgB;AACnC,eAAK,UAAU,QAAQ,2CAA2C;AAClE;AAAA,QACF;AACA,cAAM,MAAM,qBAAqB,aAAa,MAAM,MAAM;AAC1D,cAAM,cAAc,IAAI,gBAAgB,GAAG;AAC3C,YAAI,SAAS,KAAK,eAAe,IAAI,GAAG;AACxC,YAAI,CAAC,QAAQ;AACX,mBAAS,oBAAI,IAAuB;AACpC,eAAK,eAAe,IAAI,KAAK,MAAM;AAAA,QACrC;AACA,eAAO,IAAI,QAAQ,cAAc;AACjC;AAAA,MACF;AAAA,MACA,KAAK,eAAe;AAClB,cAAM,iBAAiB,MAAM,QAAQ;AACrC,YAAI,CAAC,gBAAgB;AACnB;AAAA,QACF;AACA,cAAM,MAAM,MAAM,cAAc,IAAI,cAAc;AAClD,YAAI,CAAC,KAAK;AACR;AAAA,QACF;AACA,cAAM,cAAc,OAAO,cAAc;AACzC,cAAM,SAAS,KAAK,eAAe,IAAI,GAAG;AAC1C,gBAAQ,OAAO,MAAM;AACrB,YAAI,UAAU,OAAO,SAAS,GAAG;AAC/B,eAAK,eAAe,OAAO,GAAG;AAAA,QAChC;AACA;AAAA,MACF;AAAA,MACA,KAAK,QAAQ;AACX,cAAM,cAAc,MAAM,QAAQ;AAClC,YAAI,CAAC,aAAa;AAChB,eAAK,UAAU,QAAQ,gCAAgC;AACvD;AAAA,QACF;AACA,cAAM,KAAK,WAAW,QAAQ,aAAa,MAAM,MAAM,KAAK;AAC5D;AAAA,MACF;AAAA,MACA,KAAK,cAAc;AACjB,eAAO,MAAM,KAAM,mBAAmB;AACtC;AAAA,MACF;AAAA,MACA;AAEE;AAAA,IACJ;AAAA,EACF;AAAA,EAEA,MAAc,WAAW,QAAmB,aAAqB,MAAc,OAAwB;AACrG,QAAI,CAAC,MAAM,QAAQ;AACjB,WAAK,UAAU,QAAQ,cAAc;AACrC,aAAO,MAAM,MAAM,cAAc;AACjC;AAAA,IACF;AACA,QAAI,gBAAgB,qBAAqB;AACvC,YAAM,SAAS,cAAiD,IAAI,KAAK,CAAC;AAC1E,YAAM,SAAS,OAAO,OAAO,MAAM;AACnC,UAAI,CAAC,OAAO,SAAS,MAAM,GAAG;AAC5B,cAAM,IAAI,SAAS,gDAAkB,KAAK,iBAAiB;AAAA,MAC7D;AACA,YAAM,UAAU,MAAM,kBAAkB,KAAK,KAAK,MAAM,QAAQ;AAAA,QAC9D;AAAA,QACA,SAAS,OAAO;AAAA,QAChB,WAAW,OAAO;AAAA,QAClB,WAAW,OAAO;AAAA,QAClB,UAAU,OAAO;AAAA,QACjB,aAAa,OAAO;AAAA,MACtB,CAAC;AACD,YAAM,KAAK,QAAQ,kBAAkB,QAAQ,MAAM,IAAI,OAAO;AAAA,IAChE,WAAW,gBAAgB,oBAAoB;AAC7C,YAAM,UAAU,cAAqD,IAAI;AACzE,UAAI,CAAC,WAAW,CAAC,OAAO,SAAS,QAAQ,MAAM,GAAG;AAChD;AAAA,MACF;AACA,YAAMA,WAAU,MAAM,WAAW,MAAM,KAAK,eAAe,MAAM,MAAM;AACvE,YAAM,UAAUA;AAChB,YAAM,KAAK,QAAQ,kBAAkB,QAAQ,MAAM,WAAW;AAAA,QAC5D,QAAQ,MAAM;AAAA,QACd,UAAUA,SAAQ;AAAA,QAClB,kBAAkBA,SAAQ;AAAA,QAC1B,UAAU,QAAQ,QAAQ,QAAQ;AAAA,QAClC,WAAWL,QAAO;AAAA,MACpB,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEA,MAAc,uBAAuB,SAA2D;AAC9F,UAAM,gBAAgB,QAAQ,eAAe,KAAK,QAAQ,eAAe;AACzE,QAAI,CAAC,eAAe;AAClB,aAAO;AAAA,IACT;AACA,UAAM,QAAQ,cAAc,MAAM,gBAAgB;AAClD,QAAI,CAAC,OAAO;AACV,aAAO;AAAA,IACT;AACA,QAAI;AACF,YAAM,SAAS,aAAa,KAAK,IAAI,YAAY,YAAY;AAC7D,YAAM,gBAAgD,EAAE,KAAK,QAAQ;AACrE,YAAM,SAAS,KAAK,IAAI,cAAc,KAAK,IAAI;AAC/C,UAAI,QAAQ;AACV,sBAAc,MAAM;AAAA,MACtB;AACA,YAAM,UAAU,MAAMM,QAAO,MAAM,CAAC,GAAG,QAAQ,aAAa;AAC5D,YAAM,KAAK,QAAQ,MAAM,OAAO,QAAQ,GAAG,IAAI;AAC/C,UAAI,CAAC,IAAI;AACP,eAAO;AAAA,MACT;AACA,aAAO,EAAE,IAAI,MAAM,QAAQ,KAA2B;AAAA,IACxD,QAAQ;AACN,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EAEA,MAAc,eAAe,QAAmE;AAC9F,UAAM,MAAM,MAAM;AAAA,MAChB,KAAK,IAAI;AAAA,MACT;AAAA,MACA,CAAC,MAAM;AAAA,IACT;AACA,WAAO;AAAA,MACL,MAAM,KAAK,QAAQ;AAAA,MACnB,cAAc,KAAK,iBAAiB;AAAA,IACtC;AAAA,EACF;AAAA,EAEA,MAAc,QAAQ,aAAqB,SAAkB,QAAiB;AAC5E,UAAM,MAAM,qBAAqB,aAAa,MAAM;AACpD,UAAM,cAAc,KAAK,eAAe,IAAI,GAAG;AAC/C,QAAI,CAAC,eAAe,YAAY,SAAS,GAAG;AAC1C;AAAA,IACF;AACA,eAAW,CAAC,QAAQ,cAAc,KAAK,YAAY,QAAQ,GAAG;AAC5D,UAAI,OAAO,eAAe,UAAU,MAAM;AACxC;AAAA,MACF;AACA,WAAK,UAAU,QAAQ,kBAAkB,gBAAgB,aAAa,OAAO,CAAC;AAAA,IAChF;AAAA,EACF;AAAA,EAEQ,UAAU,QAAmB,OAAmB;AACtD,QAAI;AACF,aAAO,KAAK,oBAAoB,KAAK,CAAC;AAAA,IACxC,SAASH,SAAO;AACd,cAAQ,MAAM,kCAAkCA,OAAK;AACrD,aAAO,MAAM,MAAM,kBAAkB;AAAA,IACvC;AAAA,EACF;AAAA,EAEQ,UAAU,QAAmB,SAAiB;AACpD,SAAK,UAAU,QAAQ;AAAA,MACrB,SAAS;AAAA,MACT,SAAS,EAAE,QAAQ;AAAA,MACnB,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AAAA,EAEQ,QAAQ,QAAmB;AACjC,UAAM,QAAQ,KAAK,YAAY,IAAI,MAAM;AACzC,QAAI,CAAC,OAAO;AACV;AAAA,IACF;AACA,eAAW,CAAC,gBAAgB,GAAG,KAAK,MAAM,cAAc,QAAQ,GAAG;AACjE,YAAM,SAAS,KAAK,eAAe,IAAI,GAAG;AAC1C,cAAQ,OAAO,MAAM;AACrB,UAAI,UAAU,OAAO,SAAS,GAAG;AAC/B,aAAK,eAAe,OAAO,GAAG;AAAA,MAChC;AAAA,IACF;AACA,SAAK,YAAY,OAAO,MAAM;AAAA,EAChC;AACF;;;AC/WA;AAAA;AAAA;AAAAI;;;ACAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAAC;;;ArJgCA;;;AsJhCA;AAAA;AAAA;AAAAC;AAAAC;AAKA;AAeA,IAAM,wBAAwB;AAC9B,IAAM,gCAAgC;AACtC,IAAM,mBAAmB;AAEzB,eAAsB,4BACpB,GACmB;AACnB,QAAMC,OAAM,IAAI,IAAI,EAAE,IAAI,GAAG;AAC7B,QAAM,QAAQA,KAAI,aAAa,IAAI,OAAO,KACrC,mBAAmB,EAAE,IAAI,OAAO,eAAe,CAAC,KAChD;AAEL,QAAM,OAAO,MAAM,gBAAgB,OAAO,EAAE,GAAG;AAC/C,MAAI,CAAC,MAAM;AACT,WAAO,IAAI,SAAS,gBAAgB,EAAE,QAAQ,IAAI,CAAC;AAAA,EACrD;AAEA,QAAM,EAAE,GAAG,QAAQ,GAAG,OAAO,IAAI,IAAI,cAAc;AACnD,QAAM,UAAU,IAAI,0BAA0B,QAAQ,EAAE,KAAK,KAAK,EAAE;AACpE,UAAQ,MAAM;AAEd,SAAO,IAAI,SAAS,MAAM,EAAE,QAAQ,KAAK,WAAW,OAAO,CAAC;AAC9D;AAlBsB;AAoBtB,SAAS,mBAAmB,qBAAyD;AACnF,MAAI,CAAC,oBAAqB,QAAO;AACjC,QAAM,QAAQ,oBAAoB,MAAM,gBAAgB;AACxD,SAAO,QAAQ,CAAC;AAClB;AAJS;AAMT,eAAe,gBAAgB,OAAeC,MAA0C;AACtF,MAAI,CAAC,MAAO,QAAO;AACnB,MAAI;AACF,UAAM,SAAS,aAAaA,KAAI,YAAY,YAAY;AACxD,UAAM,gBAAgD,EAAE,KAAK,QAAQ;AACrE,UAAM,SAASA,KAAI,cAAcA,KAAI;AACrC,QAAI,QAAQ;AACV,oBAAc,MAAM;AAAA,IACtB;AAEA,UAAM,UAAU,MAAMC,QAAO,OAAO,QAAQ,aAAa;AACzD,QAAI,OAAO,QAAQ,QAAQ,UAAU;AACnC,aAAO;AAAA,IACT;AACA,WAAO,EAAE,IAAI,QAAQ,IAAI;AAAA,EAC3B,SAASC,SAAO;AACd,YAAQ,MAAM,6CAA6CA,OAAK;AAChE,WAAO;AAAA,EACT;AACF;AAnBe;AAqBf,IAAM,4BAAN,MAAgC;AAAA,EAW9B,YAAY,IAAeF,MAAU,QAAgB;AAPrD,SAAQ,SAAS;AACjB,SAAQ,YAAY;AAEpB,SAAiB,gBAAgB,oBAAI,IAAiC;AACtE,SAAiB,cAAc,oBAAI,IAAY;AAC/C,SAAiB,YAAsB,CAAC;AAGtC,SAAK,KAAK;AACV,SAAK,MAAMA;AACX,SAAK,SAAS;AAAA,EAChB;AAAA,EAtFF,OAuEgC;AAAA;AAAA;AAAA,EAiB9B,QAAQ;AACN,SAAK,GAAG,OAAO;AACf,SAAK,GAAG,iBAAiB,WAAW,CAAC,UAAU;AAC7C,WAAK,mBAAmB,MAAM,IAAI;AAAA,IACpC,CAAC;AACD,SAAK,GAAG,iBAAiB,SAAS,MAAM;AACtC,WAAK,QAAQ;AAAA,IACf,CAAC;AACD,SAAK,GAAG,iBAAiB,SAAS,CAAC,UAAU;AAC3C,cAAQ,MAAM,mCAAmC,KAAK;AACtD,WAAK,QAAQ;AAAA,IACf,CAAC;AAAA,EACH;AAAA,EAEQ,mBAAmB,MAAe;AACxC,UAAM,OAAO,OAAO,SAAS,WACzB,OACA,gBAAgB,cACd,IAAI,YAAY,EAAE,OAAO,IAAI,IAC7B;AAEN,QAAI,CAAC,MAAM;AACT;AAAA,IACF;AAEA,SAAK,UAAU;AAEf,WAAO,MAAM;AACX,YAAM,kBAAkB,KAAK,OAAO,QAAQ,IAAQ;AACpD,UAAI,oBAAoB,IAAI;AAC1B;AAAA,MACF;AAEA,YAAM,YAAY,KAAK,OAAO,MAAM,GAAG,eAAe;AACtD,WAAK,SAAS,KAAK,OAAO,MAAM,kBAAkB,CAAC;AAEnD,YAAM,UAAU,UAAU,KAAK;AAC/B,UAAI,YAAY,IAAI;AAClB;AAAA,MACF;AAEA,YAAM,QAAQ,KAAK,WAAW,SAAS;AACvC,UAAI,OAAO;AACT,aAAK,YAAY,KAAK;AAAA,MACxB;AAAA,IACF;AAAA,EACF;AAAA,EAEQ,WAAWG,MAAgC;AACjD,UAAM,QAAQA,KAAI,MAAM,IAAI;AAC5B,QAAI,CAAC,MAAM,OAAQ,QAAO;AAE1B,UAAM,UAAU,MAAM,MAAM,GAAG,KAAK,KAAK;AACzC,QAAI,CAAC,QAAS,QAAO;AAErB,UAAM,UAAkC,CAAC;AACzC,QAAI;AACJ,YAAQ,OAAO,MAAM,MAAM,OAAO,QAAW;AAC3C,UAAI,SAAS,GAAI;AACjB,YAAM,iBAAiB,KAAK,QAAQ,GAAG;AACvC,UAAI,mBAAmB,GAAI;AAC3B,YAAM,MAAM,KAAK,MAAM,GAAG,cAAc,EAAE,KAAK;AAC/C,YAAM,QAAQ,KAAK,MAAM,iBAAiB,CAAC,EAAE,KAAK;AAClD,cAAQ,GAAG,IAAI;AAAA,IACjB;AAEA,UAAM,OAAO,MAAM,KAAK,IAAI;AAC5B,WAAO,EAAE,SAAS,SAAS,KAAK;AAAA,EAClC;AAAA,EAEQ,YAAY,OAAmB;AACrC,UAAM,EAAE,QAAQ,IAAI;AACpB,YAAQ,SAAS;AAAA,MACf,KAAK;AAAA,MACL,KAAK;AACH,aAAK,cAAc,KAAK;AACxB;AAAA,MACF,KAAK;AACH,aAAK,gBAAgB,KAAK;AAC1B;AAAA,MACF,KAAK;AACH,aAAK,kBAAkB,KAAK;AAC5B;AAAA,MACF,KAAK;AACH,aAAK,iBAAiB,KAAK;AAC3B;AAAA,MACF,KAAK;AAEH,aAAK,WAAW,MAAM,QAAQ,SAAS,CAAC;AACxC;AAAA,MACF;AACE,gBAAQ,KAAK,gDAAgD,OAAO;AACpE,aAAK,UAAU,wBAAwB,OAAO,EAAE;AAAA,IACpD;AAAA,EACF;AAAA,EAEQ,cAAc,OAAmB;AACvC,QAAI,KAAK,WAAW;AAClB;AAAA,IACF;AAEA,UAAM,kBAAkB,MAAM,QAAQ,YAAY,KAAK;AACvD,UAAM,CAAC,EAAE,kBAAkB,IAAI,gBAAgB,MAAM,GAAG;AACxD,UAAM,kBAAkB,OAAO,kBAAkB,KAAK;AACtD,UAAM,kBAAkB,KAAK,IAAI,iBAAiB,qBAAqB;AAEvE,SAAK,YAAY;AACjB,SAAK,UAAU,aAAa;AAAA,MAC1B,SAAS;AAAA,MACT,cAAc,KAAK,eAAe;AAAA,IACpC,CAAC;AAED,SAAK,kBAAkB,eAAe;AAAA,EACxC;AAAA,EAEQ,kBAAkB,UAAkB;AAC1C,QAAI,YAAY,EAAG;AACnB,UAAM,WAAW,6BAAM;AACrB,UAAI,KAAK,GAAG,eAAe,UAAU,MAAM;AACzC,aAAK,GAAG,KAAK,IAAI;AACjB,aAAK,iBAAiB,WAAW,UAAU,QAAQ;AAAA,MACrD;AAAA,IACF,GALiB;AAMjB,SAAK,iBAAiB,WAAW,UAAU,QAAQ;AAAA,EACrD;AAAA,EAEQ,gBAAgB,OAAmB;AACzC,UAAM,KAAK,MAAM,QAAQ,IAAI,KAAK,OAAO,WAAW;AACpD,UAAM,cAAc,MAAM,QAAQ,aAAa;AAE/C,QAAI,CAAC,aAAa;AAChB,WAAK,UAAU,4CAA4C;AAC3D;AAAA,IACF;AAEA,SAAK,cAAc,IAAI,IAAI,EAAE,YAAY,CAAC;AAE1C,QAAI,YAAY,SAAS,eAAe,GAAG;AACzC,WAAK,yBAAyB,IAAI,WAAW;AAAA,IAC/C;AAEA,SAAK,WAAW,MAAM,QAAQ,SAAS,CAAC;AAAA,EAC1C;AAAA,EAEQ,kBAAkB,OAAmB;AAC3C,UAAM,KAAK,MAAM,QAAQ,IAAI;AAC7B,QAAI,CAAC,IAAI;AACP,WAAK,UAAU,qCAAqC;AACpD;AAAA,IACF;AACA,SAAK,wBAAwB,EAAE;AAC/B,SAAK,cAAc,OAAO,EAAE;AAC5B,SAAK,WAAW,MAAM,QAAQ,SAAS,CAAC;AAAA,EAC1C;AAAA,EAEQ,iBAAiB,OAAmB;AAC1C,SAAK,WAAW,MAAM,QAAQ,SAAS,CAAC;AACxC,SAAK,QAAQ;AACb,SAAK,GAAG,MAAM,KAAM,qBAAqB;AAAA,EAC3C;AAAA,EAEQ,WAAW,WAAoB;AACrC,QAAI,CAAC,UAAW;AAChB,SAAK,UAAU,WAAW,EAAE,cAAc,UAAU,CAAC;AAAA,EACvD;AAAA,EAEQ,UAAU,SAAiB;AACjC,SAAK,UAAU,SAAS,EAAE,QAAQ,GAAG,OAAO;AAAA,EAC9C;AAAA,EAEQ,UAAU,SAAiB,UAAkC,CAAC,GAAG,OAAO,IAAI;AAClF,QAAI,KAAK,GAAG,eAAe,UAAU,MAAM;AACzC;AAAA,IACF;AAEA,UAAM,cAAc,OAAO,QAAQ,OAAO,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE;AACnF,UAAM,QAAQ,CAAC,SAAS,GAAG,aAAa,IAAI,MAAM,IAAQ,EAAE,KAAK,IAAI;AACrE,SAAK,GAAG,KAAK,KAAK;AAAA,EACpB;AAAA,EAEA,MAAc,yBAAyB,gBAAwB,aAAqB;AAClF,UAAM,OAAO,mCAAY;AACvB,UAAI;AACF,cAAM,KAAK,yBAAyB,gBAAgB,WAAW;AAAA,MACjE,SAASD,SAAO;AACd,gBAAQ,MAAM,2DAA2DA,OAAK;AAAA,MAChF;AAEA,YAAME,WAAU,KAAK,cAAc,IAAI,cAAc;AACrD,UAAI,CAACA,SAAS;AACd,MAAAA,SAAQ,YAAY,WAAW,MAAM,6BAA6B;AAAA,IACpE,GAVa;AAYb,UAAM,KAAK;AAAA,EACb;AAAA,EAEQ,wBAAwB,gBAAwB;AACtD,UAAMA,WAAU,KAAK,cAAc,IAAI,cAAc;AACrD,QAAIA,UAAS,WAAW;AACtB,mBAAaA,SAAQ,SAAS;AAAA,IAChC;AAAA,EACF;AAAA,EAEA,MAAc,yBAAyB,gBAAwB,aAAqB;AAClF,UAAM,SAAS,MAAM,kBAAkB,KAAK,KAAK,KAAK,QAAQ;AAAA,MAC5D,MAAM;AAAA,MACN,MAAM;AAAA,MACN,YAAY;AAAA,IACd,CAAC;AAED,UAAM,qBAAqB,OAAO,KAAK,OAAO,CAAC,SAAS,KAAK,qBAAqB,KAAK,EAAE,CAAC;AAE1F,eAAW,gBAAgB,oBAAoB;AAC7C,YAAM,UAAU,KAAK,sBAAsB,cAAc,OAAO,WAAW;AAC3E,WAAK,UAAU,WAAW;AAAA,QACxB,cAAc;AAAA,QACd,cAAc,OAAO,WAAW;AAAA,QAChC;AAAA,QACA,gBAAgB;AAAA,MAClB,GAAG,OAAO;AAAA,IACZ;AAAA,EACF;AAAA,EAEQ,qBAAqB,gBAAiC;AAC5D,QAAI,KAAK,YAAY,IAAI,cAAc,GAAG;AACxC,aAAO;AAAA,IACT;AAEA,SAAK,YAAY,IAAI,cAAc;AACnC,SAAK,UAAU,KAAK,cAAc;AAElC,QAAI,KAAK,UAAU,SAAS,kBAAkB;AAC5C,YAAM,UAAU,KAAK,UAAU,MAAM;AACrC,UAAI,OAAO,YAAY,UAAU;AAC/B,aAAK,YAAY,OAAO,OAAO;AAAA,MACjC;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EAEQ,sBAAsB,cAAoC,aAA6B;AAC7F,UAAM,UAAU;AAAA,MACd,GAAG;AAAA,MACH;AAAA,MACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC;AACA,WAAO,KAAK,UAAU,OAAO;AAAA,EAC/B;AAAA,EAEQ,UAAU;AAChB,QAAI,KAAK,gBAAgB;AACvB,mBAAa,KAAK,cAAc;AAChC,WAAK,iBAAiB;AAAA,IACxB;AAEA,eAAW,CAAC,IAAIA,QAAO,KAAK,KAAK,cAAc,QAAQ,GAAG;AACxD,UAAIA,SAAQ,WAAW;AACrB,qBAAaA,SAAQ,SAAS;AAAA,MAChC;AACA,WAAK,cAAc,OAAO,EAAE;AAAA,IAC9B;AAAA,EACF;AACF;;;AtJjRO,IAAM,YAAuD,8BAAO,YAAYC,MAAK,QAAQ;AAClG,QAAM,OAAO,YAAY;AACvB,UAAM,eAAc,oBAAI,KAAK,GAAE,YAAY;AAC3C,UAAM,cAAa,oBAAI,KAAK,GAAE,UAAU;AAGxC,QAAI;AACF,YAAM,UAAU,MAAM,wBAAwBA,MAAK,EAAE;AACrD,UAAI,UAAU,GAAG;AACf,gBAAQ,IAAI,0BAA0B,OAAO,iBAAiB;AAAA,MAChE;AAAA,IACF,SAASC,SAAO;AACd,cAAQ,MAAM,mDAAmDA,OAAK;AAAA,IACxE;AAGA,QAAI;AACF,YAAM,YAAY,MAAM,8BAA8BD,IAAG;AACzD,UAAI,YAAY,GAAG;AACjB,gBAAQ,IAAI,kCAAkC,SAAS,2BAA2B;AAAA,MACpF;AAAA,IACF,SAASC,SAAO;AACd,cAAQ,MAAM,kEAAkEA,OAAK;AAAA,IACvF;AAGA,QAAI,gBAAgB,IAAI;AACtB,UAAI;AACF,cAAM,UAAU,MAAM,iCAAiCD,IAAG;AAC1D,YAAI,UAAU,GAAG;AACf,kBAAQ,IAAI,iCAAiC,OAAO,gCAAgC;AAAA,QACtF;AAAA,MACF,SAASC,SAAO;AACd,gBAAQ,MAAM,0DAA0DA,OAAK;AAAA,MAC/E;AAAA,IACF;AAGA,QAAI,eAAe,KAAK,gBAAgB,IAAI;AAC1C,UAAI;AACF,cAAM,UAAU,MAAM,gCAAgCD,IAAG;AACzD,YAAI,UAAU,GAAG;AACf,kBAAQ,IAAI,gCAAgC,OAAO,+BAA+B;AAAA,QACpF;AAAA,MACF,SAASC,SAAO;AACd,gBAAQ,MAAM,qEAAqEA,OAAK;AAAA,MAC1F;AAAA,IACF;AAAA,EACF,GAAG;AACH,MAAI,UAAU,GAAG;AACnB,GAlDoE;AAqDpE,IAAM,cAAc;AAGb,IAAMC,OAAM,IAAIC,MAAsD;AAG7ED,KAAI,IAAI,KAAKE,aAAY;AAGzBF,KAAI,IAAI,uBAAuB;AAC/BA,KAAI,IAAI,mBAAmB;AAG3BA,KAAI,IAAI,KAAK,OAAO,GAAG,SAAS;AAE9B,QAAM,aAAa,EAAE,KAAK,eAAe;AACzC,QAAM,iBAAiB,WAAW,MAAM,GAAG,EAAE,IAAI,OAAK,EAAE,KAAK,CAAC;AAE9D,QAAM,iBAAiB,KAAK;AAAA,IAC1B,QAAQ,wBAAC,WAAW;AAElB,UAAI,CAAC,OAAQ,QAAO;AAEpB,UAAI,eAAe,KAAK,aAAW,OAAO,WAAW,OAAO,CAAC,GAAG;AAC9D,eAAO;AAAA,MACT;AAEA,aAAO,eAAe,CAAC;AAAA,IACzB,GATQ;AAAA,IAUR,cAAc,CAAC,OAAO,QAAQ,OAAO,UAAU,SAAS;AAAA,IACxD,cAAc,CAAC,gBAAgB,iBAAiB,gBAAgB,WAAW;AAAA,IAC3E,eAAe,CAAC,kBAAkB,gBAAgB,qBAAqB,uBAAuB;AAAA,IAC9F,QAAQ;AAAA,IACR,aAAa;AAAA,EACf,CAAC;AACD,SAAO,eAAe,GAAG,IAAI;AAC/B,CAAC;AAEDA,KAAI,IAAI,YAAY,CAAC,MAAM;AACzB,QAAM,KAAK,EAAE,IAAI,SAAS,WAAW,QAAQ;AAC7C,QAAM,OAAO,EAAE,IAAI,SAAS,IAAI,EAAE;AAClC,SAAO,KAAK,MAAM,EAAE,IAAI,GAAG;AAC7B,CAAC;AAEDA,KAAI,IAAI,qBAAqB,CAAC,MAAM,4BAA4B,CAAC,CAAC;AAGlEA,KAAI,IAAI,KAAK,CAAC,MAAM;AAClB,SAAO,gBAAgB,GAAG;AAAA,IACxB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,WAAW;AAAA,MACT,QAAQ;AAAA,MACR,WAAW,QAAQ,WAAW;AAAA,MAC9B,QAAQ,QAAQ,WAAW;AAAA,MAC3B,QAAQ,QAAQ,WAAW;AAAA,MAC3B,SAAS,QAAQ,WAAW;AAAA,MAC5B,KAAK,QAAQ,WAAW;AAAA,MACxB,QAAQ,QAAQ,WAAW;AAAA,MAC3B,OAAO,QAAQ,WAAW;AAAA,MAC1B,YAAY,QAAQ,WAAW;AAAA,MAC/B,WAAW,QAAQ,WAAW;AAAA,MAC9B,WAAW,QAAQ,WAAW;AAAA,IAChC;AAAA,EACF,CAAC;AACH,CAAC;AAGDA,KAAI,IAAI,WAAW,CAAC,MAAM;AACxB,SAAO,gBAAgB,GAAG;AAAA,IACxB,QAAQ;AAAA,IACR,aAAa,EAAE,KAAK;AAAA,IACpB,SAAS;AAAA,IACT,UAAU;AAAA,MACR,IAAI;AAAA,MACJ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,gBAAgB;AAAA,IAClB;AAAA,EACF,CAAC;AACH,CAAC;AAGDA,KAAI,IAAI,YAAY,CAAC,MAAM;AAEzB,SAAO,EAAE,KAAK;AAAA;AAAA;AAAA,CAGf;AACD,CAAC;AAGD,IAAM,KAAK,IAAIC,MAAsD;AAGrE,GAAG,MAAM,SAAS,YAAU;AAC5B,GAAG,MAAM,UAAU,YAAU;AAC7B,GAAG,MAAM,UAAU,aAAU;AAC7B,GAAG,MAAM,eAAe,kBAAgB;AACxC,GAAG,MAAM,aAAa,gBAAc;AACpC,GAAG,MAAM,kBAAkB,qBAAmB;AAC9C,GAAG,MAAM,mBAAmB,qBAAmB;AAC/C,GAAG,MAAM,sBAAsB,uBAAqB;AACpD,GAAG,MAAM,aAAa,gBAAc;AACpC,GAAG,MAAM,aAAa,gBAAc;AACpC,GAAG,MAAM,iBAAiB,oBAAkB;AAC5C,GAAG,MAAM,SAAS,YAAU;AAC5B,GAAG,MAAM,aAAa,gBAAc;AACpC,GAAG,MAAM,kBAAkB,qBAAmB;AAC9C,GAAG,MAAM,eAAe,eAAe;AACvC,GAAG,MAAM,SAAS,YAAY;AAC9B,GAAG,MAAM,WAAW,YAAY;AAChC,GAAG,MAAM,YAAY,eAAa;AAClC,GAAG,MAAM,QAAQ,WAAS;AAC1B,GAAG,MAAM,WAAW,cAAY;AAChC,GAAG,MAAM,UAAU,aAAW;AAC9B,GAAG,MAAM,eAAe,kBAAgB;AACxC,GAAG,MAAM,cAAc,iBAAe;AACtC,GAAG,MAAM,cAAcD,IAAe;AAGtC,GAAG,MAAM,aAAa,gBAAc;AAGpCA,KAAI,MAAM,QAAQ,WAAW,IAAI,EAAE;AAGnCA,KAAI,IAAI,QAAQ,WAAW,WAAW,CAAC,MAAM;AAC3C,SAAO,gBAAgB,GAAG;AAAA,IACxB,QAAQ;AAAA,IACR,aAAa,EAAE,KAAK;AAAA,IACpB,SAAS;AAAA,IACT,UAAU;AAAA,MACR,IAAI;AAAA,MACJ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,gBAAgB;AAAA,IAClB;AAAA,EACF,CAAC;AACH,CAAC;AAIDA,KAAI,IAAI,gCAAgC,OAAO,MAAM;AACnD,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU;AACvC,QAAM,OAAO,EAAE,IAAI,MAAM,MAAM;AAC/B,QAAM,QAAQ,EAAE,IAAI,MAAM,OAAO,KAAK;AAEtC,MAAI,CAAC,MAAM;AACT,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,QACL,SAAS;AAAA,QACT,MAAM;AAAA,MACR;AAAA,IACF,GAAG,GAAG;AAAA,EACR;AAGA,QAAM,EAAE,qBAAAG,qBAAoB,IAAI,MAAM;AACtC,QAAM,EAAE,UAAAC,UAAS,IAAI,MAAM;AAE3B,MAAI;AACF,UAAM,SAAS,MAAMD;AAAA,MACnB,EAAE;AAAA,MACF;AAAA,MACA,EAAE,MAAM,MAAM;AAAA,MACd;AAAA,QACE,WAAW,EAAE,IAAI,OAAO,YAAY,KAAK;AAAA,QACzC,WACE,EAAE,IAAI,OAAO,kBAAkB,KAC/B,EAAE,IAAI,OAAO,iBAAiB,KAC9B,EAAE,IAAI,OAAO,WAAW,KACxB;AAAA,MACJ;AAAA,IACF;AACA,UAAM,eAAe,EAAE,IAAI,OAAO,QAAQ,KAAK,IAAI,SAAS,kBAAkB;AAC9E,QAAI,CAAC,aAAa;AAChB,YAAM,iBAAiB,OAAO,eAAe,OAAO;AACpD,UAAI,CAAC,gBAAgB;AACnB,eAAO,gBAAgB,GAAG,MAAM;AAAA,MAClC;AACA,YAAM,cAAc,IAAI,IAAI,cAAc;AAC1C,kBAAY,aAAa,IAAI,eAAe,OAAO,WAAW;AAC9D,kBAAY,aAAa,IAAI,gBAAgB,OAAO,YAAY;AAChE,kBAAY,aAAa,IAAI,YAAY,QAAQ;AACjD,UAAI,OAAO;AACT,oBAAY,aAAa,IAAI,SAAS,KAAK;AAAA,MAC7C;AACA,UAAI,OAAO,eAAe,OAAO,gBAAgB,gBAAgB;AAC/D,oBAAY,aAAa,IAAI,YAAY,OAAO,WAAW;AAAA,MAC7D;AACA,aAAO,EAAE,SAAS,YAAY,SAAS,CAAC;AAAA,IAC1C;AACA,WAAO,gBAAgB,GAAG,MAAM;AAAA,EAClC,SAASJ,SAAO;AACd,QAAIA,mBAAiBK,WAAU;AAC7B,YAAML;AAAA,IACR;AACA,UAAM,UAAUA,mBAAiB,QAAQA,QAAM,UAAU;AACzD,UAAM,IAAIK,UAAS,SAAS,KAAK,uBAAuB;AAAA,EAC1D;AACF,CAAC;AAGDJ,KAAI,SAASK,gBAAe;AAI5B,IAAM,eAAsD,wBAAC,SAASP,MAAK,QACzEE,KAAI,MAAM,SAASF,MAAK,GAAG,GAD+B;AAG5D,IAAM,SAAuC;AAAA,EAC3C,OAAO;AAAA,EACP;AACF;AAEA,IAAO,cAAQ;;;AuJ9Vf;AAAA;AAAA;AAAAQ;AAEA,IAAM,YAAwB,8BAAO,SAASC,MAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAASA,IAAG;AAAA,EAC7C,UAAE;AACD,QAAI;AACH,UAAI,QAAQ,SAAS,QAAQ,CAAC,QAAQ,UAAU;AAC/C,cAAM,SAAS,QAAQ,KAAK,UAAU;AACtC,eAAO,EAAE,MAAM,OAAO,KAAK,GAAG,MAAM;AAAA,QAAC;AAAA,MACtC;AAAA,IACD,SAAS,GAAG;AACX,cAAQ,MAAM,4CAA4C,CAAC;AAAA,IAC5D;AAAA,EACD;AACD,GAb8B;AAe9B,IAAO,6CAAQ;;;ACjBf;AAAA;AAAA;AAAAC;AASA,SAAS,YAAY,GAAmB;AACvC,SAAO;AAAA,IACN,MAAM,GAAG;AAAA,IACT,SAAS,GAAG,WAAW,OAAO,CAAC;AAAA,IAC/B,OAAO,GAAG;AAAA,IACV,OAAO,GAAG,UAAU,SAAY,SAAY,YAAY,EAAE,KAAK;AAAA,EAChE;AACD;AAPS;AAUT,IAAM,YAAwB,8BAAO,SAASC,MAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAASA,IAAG;AAAA,EAC7C,SAAS,GAAQ;AAChB,UAAMC,UAAQ,YAAY,CAAC;AAC3B,WAAO,SAAS,KAAKA,SAAO;AAAA,MAC3B,QAAQ;AAAA,MACR,SAAS,EAAE,+BAA+B,OAAO;AAAA,IAClD,CAAC;AAAA,EACF;AACD,GAV8B;AAY9B,IAAO,2CAAQ;;;AzJzBJ,IAAM,mCAAmC;AAAA,EAE9B;AAAA,EAAyB;AAC3C;AACA,IAAO,sCAAQ;;;A0JVnB;AAAA;AAAA;AAAAC;AAwBA,IAAM,wBAAsC,CAAC;AAKtC,SAAS,uBAAuB,MAAqC;AAC3E,wBAAsB,KAAK,GAAG,KAAK,KAAK,CAAC;AAC1C;AAFgB;AAShB,SAAS,uBACR,SACAC,MACA,KACA,UACA,iBACsB;AACtB,QAAM,CAAC,MAAM,GAAG,IAAI,IAAI;AACxB,QAAM,gBAAmC;AAAA,IACxC;AAAA,IACA,KAAK,YAAY,QAAQ;AACxB,aAAO,uBAAuB,YAAY,QAAQ,KAAK,UAAU,IAAI;AAAA,IACtE;AAAA,EACD;AACA,SAAO,KAAK,SAASA,MAAK,KAAK,aAAa;AAC7C;AAfS;AAiBF,SAAS,kBACf,SACAA,MACA,KACA,UACA,iBACsB;AACtB,SAAO,uBAAuB,SAASA,MAAK,KAAK,UAAU;AAAA,IAC1D,GAAG;AAAA,IACH;AAAA,EACD,CAAC;AACF;AAXgB;;;A3J3ChB,IAAM,iCAAN,MAAM,gCAA8D;AAAA,EAGnE,YACU,eACA,MACT,SACC;AAHQ;AACA;AAGT,SAAK,WAAW;AAAA,EACjB;AAAA,EArBD,OAYoE;AAAA;AAAA;AAAA,EAC1D;AAAA,EAUT,UAAU;AACT,QAAI,EAAE,gBAAgB,kCAAiC;AACtD,YAAM,IAAI,UAAU,oBAAoB;AAAA,IACzC;AAEA,SAAK,SAAS;AAAA,EACf;AACD;AAEA,SAAS,oBAAoBC,SAA0C;AAEtE,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAOA;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAEA,QAAM,kBAA+C,gCACpD,SACAC,MACA,KACC;AACD,QAAID,QAAO,UAAU,QAAW;AAC/B,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AACA,WAAOA,QAAO,MAAM,SAASC,MAAK,GAAG;AAAA,EACtC,GATqD;AAWrD,SAAO;AAAA,IACN,GAAGD;AAAA,IACH,MAAM,SAASC,MAAK,KAAK;AACxB,YAAM,aAAyB,gCAAU,MAAM,MAAM;AACpD,YAAI,SAAS,eAAeD,QAAO,cAAc,QAAW;AAC3D,gBAAM,aAAa,IAAI;AAAA,YACtB,KAAK,IAAI;AAAA,YACT,KAAK,QAAQ;AAAA,YACb,MAAM;AAAA,YAAC;AAAA,UACR;AACA,iBAAOA,QAAO,UAAU,YAAYC,MAAK,GAAG;AAAA,QAC7C;AAAA,MACD,GAT+B;AAU/B,aAAO,kBAAkB,SAASA,MAAK,KAAK,YAAY,eAAe;AAAA,IACxE;AAAA,EACD;AACD;AAxCS;AA0CT,SAAS,qBACR,OAC8B;AAE9B,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAGA,SAAO,cAAc,MAAM;AAAA,IAC1B,mBAAyE,wBACxE,SACAA,MACA,QACI;AACJ,WAAK,MAAMA;AACX,WAAK,MAAM;AACX,UAAI,MAAM,UAAU,QAAW;AAC9B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACvE;AACA,aAAO,MAAM,MAAM,OAAO;AAAA,IAC3B,GAXyE;AAAA,IAazE,cAA0B,wBAAC,MAAM,SAAS;AACzC,UAAI,SAAS,eAAe,MAAM,cAAc,QAAW;AAC1D,cAAM,aAAa,IAAI;AAAA,UACtB,KAAK,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,MAAM;AAAA,UAAC;AAAA,QACR;AACA,eAAO,MAAM,UAAU,UAAU;AAAA,MAClC;AAAA,IACD,GAT0B;AAAA,IAW1B,MAAM,SAAwD;AAC7D,aAAO;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AACD;AAnDS;AAqDT,IAAI;AACJ,IAAI,OAAO,wCAAU,UAAU;AAC9B,kBAAgB,oBAAoB,mCAAK;AAC1C,WAAW,OAAO,wCAAU,YAAY;AACvC,kBAAgB,qBAAqB,mCAAK;AAC3C;AACA,IAAO,kCAAQ;",
  "names": ["init_performance", "init_performance", "PerformanceMark", "init_performance", "init_performance", "init_performance", "log", "init_performance", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "init_console", "init_performance", "init_console", "init_performance", "hrtime", "init_performance", "init_performance", "dir", "env", "count", "init_performance", "init_performance", "init_performance", "cwd", "hrtime", "assert", "init_process", "init_performance", "init_process", "init_performance", "init_performance", "init_performance", "init_performance", "url", "init_performance", "raw", "init_performance", "context", "init_performance", "object", "init_performance", "init_cookie", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "platform", "init_performance", "init_performance", "init_performance", "init_performance", "init_jwt", "init_performance", "verifyWithJwks", "verify", "decode", "sign", "init_jwt", "init_performance", "init_cookie", "init_jwt", "init_performance", "errorHandler", "error", "requestId", "init_performance", "init_performance", "env", "error", "duration", "init_performance", "url", "init_performance", "version", "init_performance", "env", "nowIso", "email", "sign", "config", "init_performance", "init_jwt", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "context", "init_performance", "init_performance", "clone", "app", "url", "env", "context", "init_performance", "init_performance", "init_performance", "context", "init_performance", "map", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "Node", "Node", "Hono", "init_performance", "set", "init_performance", "init_performance", "init_jwt", "init_performance", "init_performance", "init_performance", "env", "context", "error", "duration", "log", "errorHandler", "error", "log", "notFoundHandler", "env", "verify", "error", "permission", "init_performance", "init_performance", "error", "log", "error", "log", "raw", "error", "log", "init_performance", "error", "log", "range", "init_performance", "object", "error", "Hono", "env", "raw", "error", "log", "answer", "suggestions", "init_performance", "init_performance", "raw", "error", "Hono", "error", "id", "room", "file", "init_performance", "init_performance", "Hono", "file", "cached", "error", "init_performance", "Hono", "error", "log", "init_performance", "app", "Hono", "error", "context", "init_performance", "app", "Hono", "file", "error", "object", "cached", "init_performance", "init_performance", "_default", "base64", "base64url", "bigint", "boolean", "_catch", "cidrv4", "cidrv6", "config", "core_exports", "cuid", "cuid2", "date", "decode", "decodeAsync", "e164", "email", "emoji", "encode", "encodeAsync", "_enum", "guid", "hex", "hostname", "ipv4", "ipv6", "jwt", "ksuid", "nanoid", "_null", "nullish", "number", "parse", "parseAsync", "safeDecode", "safeDecodeAsync", "safeEncode", "safeEncodeAsync", "safeParse", "safeParseAsync", "string", "ulid", "_undefined", "uuid", "_void", "xid", "init_performance", "core_exports", "_emoji", "_null", "_undefined", "config", "decode", "parse", "version", "init_performance", "init_performance", "initializer", "config", "init_performance", "init_performance", "assert", "init_performance", "assert", "array", "set", "object", "Class", "config", "base64", "base64url", "hex", "error", "issue", "config", "parse", "decode", "init_performance", "init_performance", "bigint", "domain", "time", "init_performance", "version", "domain", "time", "bigint", "inst", "result", "init_performance", "init_performance", "version", "version", "checks", "checkResult", "canary", "result", "_", "url", "time", "inst", "base64", "bigint", "r", "isObject", "allowsEval", "config", "results", "map", "left", "right", "keyResult", "valueResult", "output", "parse", "init_performance", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "count", "error", "parsedType", "issue", "init_performance", "error", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "parsedType", "error", "issue", "init_performance", "parsedType", "error", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "parsedType", "error", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "parsedType", "error", "issue", "init_performance", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "parsedType", "number", "error", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "count", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "parsedType", "error", "issue", "init_performance", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "init_performance", "Class", "_emoji", "_undefined", "_null", "Class", "issue", "codec", "init_performance", "json", "file", "id", "ref", "schema", "params", "gen", "init_performance", "init_performance", "init_performance", "date", "datetime", "duration", "time", "init_performance", "datetime", "date", "time", "duration", "init_performance", "init_performance", "initializer", "issue", "issues", "parse", "parseAsync", "safeParse", "safeParseAsync", "encode", "decode", "encodeAsync", "decodeAsync", "safeEncode", "safeDecode", "safeEncodeAsync", "safeDecodeAsync", "def", "parse", "safeParse", "parseAsync", "safeParseAsync", "encode", "decode", "encodeAsync", "decodeAsync", "safeEncode", "safeDecode", "safeEncodeAsync", "safeDecodeAsync", "check", "_default", "_catch", "_emoji", "datetime", "date", "time", "duration", "string", "email", "guid", "uuid", "emoji", "nanoid", "cuid", "cuid2", "ulid", "xid", "ksuid", "ipv4", "ipv6", "cidrv4", "cidrv6", "base64", "base64url", "e164", "jwt", "hostname", "hex", "number", "boolean", "bigint", "_undefined", "_null", "_void", "date", "_enum", "issue", "output", "nullish", "_default", "_catch", "string", "number", "boolean", "_null", "init_performance", "map", "config", "ZodFirstPartyTypeKind", "bigint", "boolean", "date", "number", "string", "init_performance", "string", "number", "boolean", "bigint", "date", "config", "init_performance", "init_jwt", "verify", "error", "log", "app", "Hono", "env", "config", "error", "log", "app", "init_performance", "init_performance", "init_performance", "cached", "url", "profile", "env", "url", "error", "app", "Hono", "error", "init_performance", "app", "Hono", "error", "log", "init_performance", "init_performance", "env", "error", "log", "app", "Hono", "query", "error", "streamMetrics", "getFieldIndex", "init_performance", "init_performance", "Hono", "log", "error", "cached", "room", "context", "init_performance", "init_performance", "env", "map", "profile", "error", "init_performance", "count", "info", "Hono", "error", "profile", "init_performance", "init_performance", "env", "error", "table", "profile", "Hono", "error", "env", "profile", "info", "raw", "init_performance", "init_performance", "env", "nowIso", "raw", "progressKey", "Hono", "requireAuth", "wrapError", "error", "raw", "env", "record", "profile", "normalizedCode", "init_performance", "init_performance", "env", "record", "duration", "createSession", "title", "raw", "cached", "Hono", "requireAuth", "createSession", "init_performance", "init_performance", "nowIso", "error", "record", "raw", "time", "date", "env", "env", "nowIso", "error", "record", "title", "count", "Hono", "requireAuth", "count", "record", "init_performance", "init_performance", "init_performance", "DEFAULT_TTL_SECONDS", "env", "record", "cached", "init_performance", "env", "record", "raw", "set", "env", "nowIso", "cloneParticipants", "record", "env", "cached", "error", "init_performance", "error", "log", "env", "record", "Hono", "requireAuth", "getPaginationParams", "requireUserId", "required", "record", "init_performance", "Hono", "requireAuth", "init_performance", "Hono", "requireAuth", "env", "url", "requireAuth", "init_performance", "init_performance", "env", "cached", "error", "map", "nowIso", "addDays", "date", "requestId", "partnerTargets", "init_performance", "count", "env", "profile", "error", "log", "Hono", "requireAuth", "getPaginationParams", "env", "error", "requestId", "init_performance", "init_performance", "env", "error", "Hono", "requireAuth", "requireUserId", "init_performance", "init_performance", "nowIso", "toBoolean", "fetchParticipants", "env", "file", "url", "base64", "participant", "Hono", "requireAuth", "requireUserId", "raw", "error", "file", "url", "count", "init_performance", "Hono", "requireAuth", "env", "map", "profile", "record", "init_performance", "init_performance", "error", "log", "Hono", "requireAuth", "error", "init_performance", "env", "url", "error", "log", "duration", "init_performance", "DurableObject", "init_performance", "env", "SESSION_PREFIX", "DurableObject", "env", "cached", "url", "init_performance", "init_jwt", "nowIso", "raw", "env", "error", "auth", "profile", "verify", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_jwt", "url", "env", "verify", "error", "raw", "context", "env", "error", "app", "Hono", "errorHandler", "handleOAuthCallback", "AppError", "notFoundHandler", "init_performance", "env", "init_performance", "env", "error", "init_performance", "env", "worker", "env"]
}
