name: Deploy Cloudflare Workers

on:
  push:
    branches:
      - main
    paths:
      - 'workers/**'
      - '.github/workflows/deploy-workers.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'workers/**'
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  test:
    name: Test Workers
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./workers
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: workers/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint || true
      
      - name: Run type checking
        run: npm run typecheck || true
      
      - name: Run tests
        run: npm test || true
        env:
          CI: true

  deploy-staging:
    name: Deploy to Staging
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ./workers
    environment:
      name: staging
      url: https://staging.studymate-api.workers.dev
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: workers/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Deploy to Staging
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: 'workers'
          environment: 'staging'
          command: deploy --env staging
      
      - name: Run smoke tests
        run: |
          echo "Running smoke tests against staging..."
          curl -f https://staging.studymate-api.workers.dev/health || exit 1
        continue-on-error: true

  deploy-production:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    defaults:
      run:
        working-directory: ./workers
    environment:
      name: production
      url: https://api.studymate.workers.dev
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: workers/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Workers
        run: npm run build || true
      
      - name: Deploy to Production
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: 'workers'
          command: deploy
      
      - name: Verify deployment
        run: |
          echo "Verifying production deployment..."
          sleep 10
          response=$(curl -s -o /dev/null -w "%{http_code}" https://api.studymate.workers.dev/health)
          if [ $response -eq 200 ]; then
            echo "‚úÖ Deployment successful!"
          else
            echo "‚ùå Deployment verification failed with status code: $response"
            exit 1
          fi
      
      - name: Create deployment annotation
        uses: actions/github-script@v7
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              task: 'deploy',
              auto_merge: false,
              required_contexts: [],
              environment: 'production',
              description: 'Cloudflare Workers deployment'
            });
            
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              target_url: 'https://api.studymate.workers.dev',
              description: 'Deployment successful'
            });

  rollback:
    name: Rollback Production
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    defaults:
      run:
        working-directory: ./workers
    environment:
      name: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.rollback_to_sha || github.sha }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: workers/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Rollback deployment
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: 'workers'
          command: deploy
      
      - name: Notify rollback
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'üîÑ Production has been rolled back to commit: ' + context.sha
            });